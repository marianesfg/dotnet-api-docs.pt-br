<Type Name="UIElement" FullName="System.Windows.UIElement">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="896906c650637b96f5889dded95c4e5e1b6abdec" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52614730" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class UIElement : System.Windows.Media.Visual, System.Windows.IInputElement, System.Windows.Media.Animation.IAnimatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi UIElement extends System.Windows.Media.Visual implements class System.Windows.IInputElement, class System.Windows.Media.Animation.IAnimatable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.UIElement" />
  <TypeSignature Language="VB.NET" Value="Public Class UIElement&#xA;Inherits Visual&#xA;Implements IAnimatable, IInputElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class UIElement : System::Windows::Media::Visual, System::Windows::IInputElement, System::Windows::Media::Animation::IAnimatable" />
  <TypeSignature Language="F#" Value="type UIElement = class&#xA;    inherit Visual&#xA;    interface IAnimatable&#xA;    interface IInputElement" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Visual</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.IInputElement</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Media.Animation.IAnimatable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Markup.UidProperty("Uid")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="3347b-101">
        <see cref="T:System.Windows.UIElement" /> é uma classe base para implementações no nível do núcleo WPF baseada em elementos WPF (Windows Presentation Foundation) e características de apresentação básicas.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3347b-101">
          <see cref="T:System.Windows.UIElement" /> is a base class for WPF core level implementations building on Windows Presentation Foundation (WPF) elements and basic presentation characteristics.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-102"><xref:System.Windows.UIElement> Fornece um ponto de partida para características de layout do elemento e também expõe métodos virtuais que as classes derivadas podem substituir, que pode influenciar o layout, renderização de elementos de comportamento do elemento e seus filhos.</span><span class="sxs-lookup"><span data-stu-id="3347b-102"><xref:System.Windows.UIElement> provides a starting point for element layout characteristics, and also exposes virtual methods that derived classes can override, which can influence the layout rendering behavior of the element and its child elements.</span></span>  
  
 <span data-ttu-id="3347b-103">Grande parte da entrada e concentrando-se o comportamento de elementos em geral também é definida no <xref:System.Windows.UIElement> classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-103">Much of the input and focusing behavior for elements in general is also defined in the <xref:System.Windows.UIElement> class.</span></span> <span data-ttu-id="3347b-104">Isso inclui os eventos de teclado, mouse e entrada de caneta e propriedades de status relacionadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-104">This includes the events for keyboard, mouse and stylus input, and related status properties.</span></span> <span data-ttu-id="3347b-105">Muitos desses eventos são eventos roteados e muitos dos eventos relacionados à entrada tem ambas as uma bolha roteamento de versão, bem como uma versão de túnel do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-105">Many of these events are routed events, and many of the input-related events have both a bubbling routing version as well as a tunneling version of the event.</span></span> <span data-ttu-id="3347b-106">Esses eventos emparelhados normalmente são os eventos de maior interesse para autores de controle.</span><span class="sxs-lookup"><span data-stu-id="3347b-106">These paired events are typically the events of greatest interest to control authors.</span></span>  
  
 <span data-ttu-id="3347b-107"><xref:System.Windows.UIElement> também inclui [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] que se relacionam com o [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] modelo de evento, incluindo os métodos que podem gerar especificados eventos roteados que são originados de uma instância do elemento.</span><span class="sxs-lookup"><span data-stu-id="3347b-107"><xref:System.Windows.UIElement> also includes [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] that relate to the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] event model, including methods that can raise specified routed events that are sourced from an element instance.</span></span>  
  
 <span data-ttu-id="3347b-108">Em termos de arquitetura, <xref:System.Windows.UIElement> pode ser considerado aproximadamente equivalente a um identificador de janela no [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] programação ou um elemento em [!INCLUDE[TLA#tla_dhtml](~/includes/tlasharptla-dhtml-md.md)] de programação.</span><span class="sxs-lookup"><span data-stu-id="3347b-108">In terms of architecture, <xref:System.Windows.UIElement> can be considered roughly equivalent to a window handle in [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] programming, or an Element in [!INCLUDE[TLA#tla_dhtml](~/includes/tlasharptla-dhtml-md.md)] programming.</span></span> <span data-ttu-id="3347b-109"><xref:System.Windows.UIElement> é um elemento base no nível de núcleo do WPF.</span><span class="sxs-lookup"><span data-stu-id="3347b-109"><xref:System.Windows.UIElement> is a base element at the WPF core level.</span></span>  
  
 <span data-ttu-id="3347b-110">Um <xref:System.Windows.UIElement> tem os seguintes recursos que são especificamente definidos pela <xref:System.Windows.UIElement> classe:</span><span class="sxs-lookup"><span data-stu-id="3347b-110">A <xref:System.Windows.UIElement> has the following capabilities that are specifically defined by the <xref:System.Windows.UIElement> class:</span></span>  
  
-   <span data-ttu-id="3347b-111">Podem ser processados como um elemento filho (<xref:System.Windows.UIElement> deriva <xref:System.Windows.Media.Visual>, uma classe de elementos gráficos de nível alto)</span><span class="sxs-lookup"><span data-stu-id="3347b-111">Can render as a child element (<xref:System.Windows.UIElement> derives from <xref:System.Windows.Media.Visual>, a high level graphics class)</span></span>  
  
-   <span data-ttu-id="3347b-112">Contém a lógica que é usada para dimensionar e posicionar elementos filho possíveis de um <xref:System.Windows.UIElement> (quando interpretada por um sistema de layout)</span><span class="sxs-lookup"><span data-stu-id="3347b-112">Contains logic that is used to size and position possible child elements of a <xref:System.Windows.UIElement> (when interpreted by a layout system)</span></span>  
  
-   <span data-ttu-id="3347b-113">Pode responder à entrada do usuário (incluindo o controle do qual entrada é obtendo enviada por meio da manipulação do evento de roteamento ou roteamento de comandos)</span><span class="sxs-lookup"><span data-stu-id="3347b-113">Can respond to user input (including control of where input is getting sent to via their handling of event routing, or routing of commands)</span></span>  
  
-   <span data-ttu-id="3347b-114">Pode gerar eventos roteados que percorrem uma rota através da árvore de elementos lógicos</span><span class="sxs-lookup"><span data-stu-id="3347b-114">Can raise routed events that travel a route through the logical element tree</span></span>  
  
-   <span data-ttu-id="3347b-115">Dá suporte a alguns aspectos do sistema de animação</span><span class="sxs-lookup"><span data-stu-id="3347b-115">Supports some aspects of the animation system</span></span>  
  
 <span data-ttu-id="3347b-116"><xref:System.Windows.FrameworkElement> é a classe de implementação de nível de estrutura do WPF se baseia no <xref:System.Windows.UIElement>e adiciona as interações específicas com o nível de framework WPF.</span><span class="sxs-lookup"><span data-stu-id="3347b-116"><xref:System.Windows.FrameworkElement> is the WPF framework-level implementation class that builds on <xref:System.Windows.UIElement>, and adds specific interactions with the WPF framework level.</span></span> <span data-ttu-id="3347b-117"><xref:System.Windows.FrameworkElement> Adiciona e define os seguintes recursos:</span><span class="sxs-lookup"><span data-stu-id="3347b-117"><xref:System.Windows.FrameworkElement> adds and defines the following capabilities:</span></span>  
  
-   <span data-ttu-id="3347b-118">Características de layout de adicionais específicas da estrutura</span><span class="sxs-lookup"><span data-stu-id="3347b-118">Additional framework-specific layout characteristics</span></span>  
  
-   <span data-ttu-id="3347b-119">Suporte para gerar relatórios sobre as propriedades de metadados mais avançados</span><span class="sxs-lookup"><span data-stu-id="3347b-119">Support for richer metadata reporting on properties</span></span>  
  
-   <span data-ttu-id="3347b-120">Implementação de classe específica de determinadas classes base e suas propriedades anexadas de entrada ou eventos anexados</span><span class="sxs-lookup"><span data-stu-id="3347b-120">Class-specific implementation of certain input base classes and their attached properties or attached events</span></span>  
  
-   <span data-ttu-id="3347b-121">Suporte de estilo</span><span class="sxs-lookup"><span data-stu-id="3347b-121">Style support</span></span>  
  
-   <span data-ttu-id="3347b-122">Suporte adicional de animação</span><span class="sxs-lookup"><span data-stu-id="3347b-122">Further animation support</span></span>  
  
 <span data-ttu-id="3347b-123">Outro relacionado a classe é <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="3347b-123">Another related class is <xref:System.Windows.ContentElement>.</span></span> <span data-ttu-id="3347b-124">O <xref:System.Windows.ContentElement> classe implementa muitos dos mesmos participantes que <xref:System.Windows.UIElement>; a diferença entre essas duas classes tem seu pretendido é colocar no modelo de conteúdo geral.</span><span class="sxs-lookup"><span data-stu-id="3347b-124">The <xref:System.Windows.ContentElement> class implements many of the same members as does <xref:System.Windows.UIElement>; the difference between these two classes has to do with their intended place in the overall content model.</span></span> <span data-ttu-id="3347b-125">Um <xref:System.Windows.UIElement> classe derivada normalmente define um modelo de conteúdo relativamente rígido, que significa que há restrições sobre quais elementos podem ser elementos filho na marcação.</span><span class="sxs-lookup"><span data-stu-id="3347b-125">A <xref:System.Windows.UIElement> derived class typically defines a relatively rigid content model, meaning that there are restrictions on what elements may be child elements in markup.</span></span> <span data-ttu-id="3347b-126">Pode haver capacidade para faz menos restritiva do conteúdo de filho de um <xref:System.Windows.UIElement>, mas essa capacidade normalmente é centralizada em Propriedades de conteúdo designadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-126">There might be capacity for taking less restrictive child content in a <xref:System.Windows.UIElement>, but that capacity is typically centralized in designated content properties.</span></span> <span data-ttu-id="3347b-127">Um <xref:System.Windows.ContentElement> classe derivada normalmente não é o mais restritivo sobre o conteúdo para dar suporte a cenários, como documentos de formato de fluxo.</span><span class="sxs-lookup"><span data-stu-id="3347b-127">A <xref:System.Windows.ContentElement> derived class is typically not as restrictive about content, to support scenarios such as flow-format documents.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3347b-128"><xref:System.Windows.UIElement.Visibility%2A> estado afeta todas as entradas de tratamento por esse elemento.</span><span class="sxs-lookup"><span data-stu-id="3347b-128"><xref:System.Windows.UIElement.Visibility%2A> state affects all input handling by that element.</span></span> <span data-ttu-id="3347b-129">Não participam de teste de clique de elementos que não são visíveis e não recebem eventos de entrada, mesmo se o mouse estiver sobre os limites nos quais o elemento pode ser se eram visíveis.</span><span class="sxs-lookup"><span data-stu-id="3347b-129">Elements that are not visible do not participate in hit testing and do not receive input events, even if the mouse is over the bounds where the element would be if were visible.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UIElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UIElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3347b-130">Inicializa uma nova instância da classe <see cref="T:System.Windows.UIElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-130">Initializes a new instance of the <see cref="T:System.Windows.UIElement" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-131">Criar uma nova instância que é realmente do tipo <xref:System.Windows.UIElement> é incomum no código do aplicativo, porque <xref:System.Windows.UIElement> é um elemento base.</span><span class="sxs-lookup"><span data-stu-id="3347b-131">Creating a new instance that is actually of type <xref:System.Windows.UIElement> is uncommon in application code, because <xref:System.Windows.UIElement> is a base element.</span></span> <span data-ttu-id="3347b-132">Ver [visão geral de elementos de Base](~/docs/framework/wpf/advanced/base-elements-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3347b-132">See [Base Elements Overview](~/docs/framework/wpf/advanced/base-elements-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddHandler">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-133">Adiciona um manipulador de eventos roteados de um evento roteado especificado, adicionando o manipulador à coleção de manipuladores no elemento atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-133">Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public void AddHandler (System.Windows.RoutedEvent routedEvent, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member AddHandler : System.Windows.RoutedEvent * Delegate -&gt; unit&#xA;override this.AddHandler : System.Windows.RoutedEvent * Delegate -&gt; unit" Usage="uIElement.AddHandler (routedEvent, handler)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="routedEvent">
          <span data-ttu-id="3347b-134">Um identificador do evento roteado a ser manipulado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-134">An identifier for the routed event to be handled.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="3347b-135">Uma referência à implementação do manipulador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-135">A reference to the handler implementation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-136">Adiciona um manipulador de eventos roteados de um evento roteado especificado, adicionando o manipulador à coleção de manipuladores no elemento atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-136">Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-137">Você pode adicionar o mesmo manipulador para o mesmo evento várias vezes sem gerar uma exceção.</span><span class="sxs-lookup"><span data-stu-id="3347b-137">You can add the same handler for the same event multiple times without raising an exception.</span></span> <span data-ttu-id="3347b-138">No entanto, o manipulador é realmente chamado várias vezes quando o evento é manipulado.</span><span class="sxs-lookup"><span data-stu-id="3347b-138">However, the handler is actually invoked multiple times when the event is handled.</span></span> <span data-ttu-id="3347b-139">Portanto, considere como esse comportamento pode ter efeitos colaterais que deve ser considerados em sua implementação do manipulador.</span><span class="sxs-lookup"><span data-stu-id="3347b-139">Therefore, consider how this behavior might have side effects that should be accounted for in your handler implementation.</span></span>  
  
 <span data-ttu-id="3347b-140">Você normalmente usa esse método para fornecer a implementação do acessador "Adicionar" para o [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] padrão de acesso do evento de um evento roteado personalizado.</span><span class="sxs-lookup"><span data-stu-id="3347b-140">You typically use this method to provide the implementation of the "add" accessor for the [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] event access pattern of a custom routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public void AddHandler (System.Windows.RoutedEvent routedEvent, Delegate handler, bool handledEventsToo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler, bool handledEventsToo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler, bool handledEventsToo);" />
      <MemberSignature Language="F#" Value="member this.AddHandler : System.Windows.RoutedEvent * Delegate * bool -&gt; unit" Usage="uIElement.AddHandler (routedEvent, handler, handledEventsToo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
        <Parameter Name="handledEventsToo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="routedEvent">
          <span data-ttu-id="3347b-141">Um identificador do evento roteado a ser manipulado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-141">An identifier for the routed event to be handled.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="3347b-142">Uma referência à implementação do manipulador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-142">A reference to the handler implementation.</span>
          </span>
        </param>
        <param name="handledEventsToo">
          <span data-ttu-id="3347b-143">
            <see langword="true" /> para registrar o manipulador de modo que ele seja invocado mesmo quando o evento roteado estiver marcado como tratado nos dados do evento; <see langword="false" /> para registrar o manipulador com a condição padrão que não será chamado se o evento roteado já estiver marcado como tratado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-143">
              <see langword="true" /> to register the handler such that it is invoked even when  the routed event is marked handled in its event data; <see langword="false" /> to register the handler with the default condition that it will not be invoked if the routed event is already marked handled.</span>
          </span>
          <span data-ttu-id="3347b-144">O padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-144">The default is <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3347b-145">Não solicite sempre para tratar novamente um evento roteado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-145">Do not routinely ask to rehandle a routed event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-146">Adiciona um manipulador de eventos roteados de um evento roteado especificado, adicionando o manipulador à coleção de manipuladores no elemento atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-146">Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.</span>
          </span>
          <span data-ttu-id="3347b-147">Especifique <paramref name="handledEventsToo" /> como <see langword="true" /> para que o manipulador fornecido seja invocado para eventos roteados que já tenham sido marcados como manipulados por outro elemento na rota de evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-147">Specify <paramref name="handledEventsToo" /> as <see langword="true" /> to have the provided handler be invoked for routed event that had already been marked as handled by another element along the event route.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-148">Processamento de eventos de entrada de baixo nível em uma forma prática é uma tarefa complexa.</span><span class="sxs-lookup"><span data-stu-id="3347b-148">Processing low-level input events in a practical way is a complex task.</span></span> <span data-ttu-id="3347b-149">Muitos controles que implementam o comportamento em que um determinado evento é marcado como manipulado e é substituído por outro evento mais intuitivo.</span><span class="sxs-lookup"><span data-stu-id="3347b-149">Many controls implement behavior where a certain event is marked as handled, and is replaced by another more intuitive event.</span></span> <span data-ttu-id="3347b-150">Em geral, um controle só será marcar um evento de entrada de plataforma como manipulado, se houver algum intenção de design para fazer isso.</span><span class="sxs-lookup"><span data-stu-id="3347b-150">Generally, a control will only mark a platform input event as handled if there is some design intention for doing so.</span></span> <span data-ttu-id="3347b-151">Em determinados cenários, as intenções de design não podem ser o que requer sua manipulação específica do evento de entrada.</span><span class="sxs-lookup"><span data-stu-id="3347b-151">In certain scenarios, those design intentions might not be what your particular handling of the input event requires.</span></span> <span data-ttu-id="3347b-152">É para esses cenários que registrar manipuladores com `handledEventsToo` como `true` é apropriado.</span><span class="sxs-lookup"><span data-stu-id="3347b-152">It is for these scenarios that registering handlers with `handledEventsToo` as `true` is appropriate.</span></span> <span data-ttu-id="3347b-153">Mas você não deve fazer isso regularmente.</span><span class="sxs-lookup"><span data-stu-id="3347b-153">But you should not do this routinely.</span></span> <span data-ttu-id="3347b-154">Invocar manipuladores em resposta a todos os eventos, mesmo se manipulado complicar a sua própria lógica de processamento de eventos do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="3347b-154">Invoking handlers in response to all events even if handled will complicate your own application event processing logic.</span></span> <span data-ttu-id="3347b-155">Você poderá ver uma diminuição no desempenho se a lógica de manipulador é significativa.</span><span class="sxs-lookup"><span data-stu-id="3347b-155">You may see a decrease in performance if the handler logic is substantial.</span></span> <span data-ttu-id="3347b-156">Você deve reservar o uso de anexar manipuladores de eventos já manipulado para situações em que você já tenha descoberto durante o processo de desenvolvimento que certos controles estão lidando com eventos que deseja processar com a lógica do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="3347b-156">You should reserve the use of attaching handlers for already-handled events for situations where you have already discovered during the development process that certain controls are handling events that you still want to handle with application logic.</span></span>  
  
 <span data-ttu-id="3347b-157">Outra técnica para evitar o comportamento de determinadas combinações de controle de eventos de manipulação de classe é usar a alternativa de visualização do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-157">Another technique for avoiding the class handling behavior of certain event-control combinations is to use that event's preview alternative.</span></span> <span data-ttu-id="3347b-158">Por exemplo, se <xref:System.Windows.UIElement.MouseLeftButtonDown> está marcado como manipulado pela manipulação de classe, você poderá adicionar manipuladores para <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> em vez disso.</span><span class="sxs-lookup"><span data-stu-id="3347b-158">For example, if <xref:System.Windows.UIElement.MouseLeftButtonDown> is marked handled by class handling, you might be able to add handlers for <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> instead.</span></span>  
  
 <span data-ttu-id="3347b-159">Você pode adicionar o mesmo manipulador para o mesmo evento várias vezes sem gerar uma exceção.</span><span class="sxs-lookup"><span data-stu-id="3347b-159">You can add the same handler for the same event multiple times without raising an exception.</span></span> <span data-ttu-id="3347b-160">No entanto, o manipulador é realmente chamado várias vezes quando o evento é manipulado.</span><span class="sxs-lookup"><span data-stu-id="3347b-160">However, the handler is actually invoked multiple times when the event is handled.</span></span> <span data-ttu-id="3347b-161">Portanto, considere como esse comportamento pode ter efeitos colaterais que deve ser considerados em sua implementação do manipulador.</span><span class="sxs-lookup"><span data-stu-id="3347b-161">Therefore, consider how this behavior might have side effects that should be accounted for in your handler implementation.</span></span>  
  
 <span data-ttu-id="3347b-162">Você normalmente usa esse método para fornecer a implementação do acessador "Adicionar" para o [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] padrão de acesso do evento de um evento roteado personalizado.</span><span class="sxs-lookup"><span data-stu-id="3347b-162">You typically use this method to provide the implementation of the "add" accessor for the [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] event access pattern of a custom routed event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3347b-163">O exemplo a seguir implementa um manipulador invocado na <xref:System.Windows.FrameworkElement.Initialized> evento em uma página que anexa um manipulador definido para um dos elementos nomeados na página usando `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="3347b-163">The following example implements a handler invoked on the <xref:System.Windows.FrameworkElement.Initialized> event on a page that attaches a defined handler to one of the named elements on the page using `handledEventsToo` `true`.</span></span> <span data-ttu-id="3347b-164">Esse manipulador seria invocado mesmo se os dados do evento compartilhado como tratado antes de alcançar o elemento de manipulação na rota de marcado de outro elemento ao longo da rota.</span><span class="sxs-lookup"><span data-stu-id="3347b-164">This handler would be invoked even if another element along the route marked the shared event data as handled before reaching the handling element in the route.</span></span>  
  
 [!code-csharp[EventOvwSupport#AddHandlerHandledToo](~/samples/snippets/csharp/VS_Snippets_Wpf/EventOvwSupport/CSharp/page2.xaml.cs#addhandlerhandledtoo)]
 [!code-vb[EventOvwSupport#AddHandlerHandledToo](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EventOvwSupport/visualbasic/page2.xaml.vb#addhandlerhandledtoo)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToEventRoute">
      <MemberSignature Language="C#" Value="public void AddToEventRoute (System.Windows.EventRoute route, System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddToEventRoute(class System.Windows.EventRoute route, class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddToEventRoute (route As EventRoute, e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddToEventRoute(System::Windows::EventRoute ^ route, System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.AddToEventRoute : System.Windows.EventRoute * System.Windows.RoutedEventArgs -&gt; unit" Usage="uIElement.AddToEventRoute (route, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="route" Type="System.Windows.EventRoute" />
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="route">
          <span data-ttu-id="3347b-165">A rota de eventos à qual os manipuladores são adicionados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-165">The event route that handlers are added to.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="3347b-166">Os dados de evento usados para adicionar os manipuladores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-166">The event data that is used to add the handlers.</span>
          </span>
          <span data-ttu-id="3347b-167">Esse método usa a propriedade <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> dos dados do evento para criar os manipuladores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-167">This method uses the <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> property of the event data to create the handlers.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-168">Adiciona manipuladores ao <see cref="T:System.Windows.EventRoute" /> especificado para a coleção do manipulador de eventos <see cref="T:System.Windows.UIElement" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-168">Adds handlers to the specified <see cref="T:System.Windows.EventRoute" /> for the current <see cref="T:System.Windows.UIElement" /> event handler collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-169">Esse método pode ser usado pelos elementos de host de conteúdo (aqueles que implementam <xref:System.Windows.IContentHost> ou aquelas que não) para adicionar manipuladores para os elementos filho para o <xref:System.Windows.EventRoute>.</span><span class="sxs-lookup"><span data-stu-id="3347b-169">This method can be used by content host elements (either those that implement <xref:System.Windows.IContentHost> or those that don't) to add handlers for child elements to the <xref:System.Windows.EventRoute>.</span></span> <span data-ttu-id="3347b-170">Normalmente, isso não é necessário para <xref:System.Windows.UIElement>, pois os manipuladores são adicionados automaticamente para todos os elementos encontrados em uma árvore lógica concluída.</span><span class="sxs-lookup"><span data-stu-id="3347b-170">Ordinarily, this is not required for <xref:System.Windows.UIElement>, because handlers are automatically added for all elements found in a completed logical tree.</span></span> <span data-ttu-id="3347b-171">No entanto, em alguns casos em que <xref:System.Windows.ContentElement> e <xref:System.Windows.UIElement> são misturados na modelado árvores, elementos que vem a necessidade de modelo a ser adicionado a uma rota de intervenção.</span><span class="sxs-lookup"><span data-stu-id="3347b-171">However, in some cases where <xref:System.Windows.ContentElement> and <xref:System.Windows.UIElement> are mixed in templated trees, intervening elements that came from the template need to be added to a route.</span></span> <span data-ttu-id="3347b-172">Ambos <xref:System.Windows.ContentElement> e <xref:System.Windows.UIElement> dar suporte a uma versão desse método.</span><span class="sxs-lookup"><span data-stu-id="3347b-172">Both <xref:System.Windows.ContentElement> and <xref:System.Windows.UIElement> support a version of this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowDrop">
      <MemberSignature Language="C#" Value="public bool AllowDrop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDrop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.AllowDrop" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowDrop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowDrop { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowDrop : bool with get, set" Usage="System.Windows.UIElement.AllowDrop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-173">Obtém ou define um valor indicando se um elemento pode ser usado como o destino de uma operação de arrastar e soltar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-173">Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.</span>
          </span>
          <span data-ttu-id="3347b-174">É uma propriedade de dependência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-174">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3347b-175">
            <see langword="true" /> se um elemento pode ser usado como o destino de uma operação do tipo "arrastar e soltar"; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-175">
              <see langword="true" /> if this element can be used as the target of a drag-and-drop operation; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3347b-176">O valor padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-176">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-177">Operações de arrastar e soltar não são habilitadas por padrão e deve ser habilitadas, deliberadamente, definindo <xref:System.Windows.UIElement.AllowDrop%2A> para `true`.</span><span class="sxs-lookup"><span data-stu-id="3347b-177">Drag-and-drop operations are not enabled by default, and must be enabled deliberately by setting <xref:System.Windows.UIElement.AllowDrop%2A> to `true`.</span></span> <span data-ttu-id="3347b-178">Além dessa configuração básica, o comportamento de arrastar e soltar é inteiramente específico da implementação e não é definido pelo <xref:System.Windows.UIElement> ou qualquer outra classe de elemento base.</span><span class="sxs-lookup"><span data-stu-id="3347b-178">Beyond this basic setting, drag-and-drop behavior is entirely implementation specific and is not defined by <xref:System.Windows.UIElement> or any other base element class.</span></span> <span data-ttu-id="3347b-179">Alguns controles, por exemplo, <xref:System.Windows.Controls.RichTextBox>, têm um comportamento padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-179">Certain controls, for example, <xref:System.Windows.Controls.RichTextBox>, do have a default behavior.</span></span> <span data-ttu-id="3347b-180">Para obter mais informações sobre o arrastar e soltar, consulte [arrastar e soltar de visão geral da](~/docs/framework/wpf/advanced/drag-and-drop-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3347b-180">For more information on drag and drop, see [Drag and Drop Overview](~/docs/framework/wpf/advanced/drag-and-drop-overview.md).</span></span>  
  
 <span data-ttu-id="3347b-181"><xref:System.Windows.FrameworkElement> substitui os metadados para essa propriedade de dependência em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-181"><xref:System.Windows.FrameworkElement> overrides the metadata for this dependency property in its implementation.</span></span> <span data-ttu-id="3347b-182">Especificamente, <xref:System.Windows.FrameworkElement> designa a essa propriedade para permitir a herança de valor de propriedade (<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> é `true` nos metadados).</span><span class="sxs-lookup"><span data-stu-id="3347b-182">Specifically, <xref:System.Windows.FrameworkElement> designates this property to allow property value inheritance (<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> is `true` in metadata).</span></span> <span data-ttu-id="3347b-183">Herança do valor da propriedade neste contexto significa que, se não houver elementos filho com nenhum outro valor para <xref:System.Windows.UIElement.AllowDrop%2A> atribuído por meio de estilos, o valor do elemento pai mais próximo com esse valor atribuído (novamente, seja em estilos, por padrão ou valores locais valores, ou um valor local), em seguida, o valor do elemento pai será atribuído a todos os elementos filho não anteriormente atribuído pelo sistema de propriedades.</span><span class="sxs-lookup"><span data-stu-id="3347b-183">Property value inheritance in this context means that if there are child elements with no other value for <xref:System.Windows.UIElement.AllowDrop%2A> assigned through local values or styles, the value of the nearest parent element with this value assigned (again, either in styles, by default values, or a local value), then the value from the parent element will be assigned to all previously unassigned child elements by the property system.</span></span> <span data-ttu-id="3347b-184">Na prática, isso significa que você pode especificar se deseja permitir operações de descarte no elemento raiz e que o valor será propagado para todos os elementos filho que têm não especificamente atribuído como `false`.</span><span class="sxs-lookup"><span data-stu-id="3347b-184">In practice this means that you can specify whether to allow drop operations at the root element, and that value will propagate to all child elements that have not specifically assigned it as `false`.</span></span>  
  
<a name="dependencyPropertyInfo_AllowDrop"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3347b-185">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="3347b-185">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-186">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-186">Identifier field</span></span>|<xref:System.Windows.UIElement.AllowDropProperty>|  
|<span data-ttu-id="3347b-187">Propriedades de metadados definido como `true`</span><span class="sxs-lookup"><span data-stu-id="3347b-187">Metadata properties set to `true`</span></span>|<span data-ttu-id="3347b-188">Nenhum</span><span class="sxs-lookup"><span data-stu-id="3347b-188">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3347b-189">O exemplo de marcação a seguir define o <xref:System.Windows.UIElement.AllowDrop%2A> propriedade `true` usando um atributo em uma <xref:System.Windows.Controls.TextBox>, bem como definir algum outro relacionadas a propriedades que permitem que na agregação <xref:System.Windows.Controls.TextBox> para ser o destino de um objeto de dados de texto de várias linhas quando ela é arrastada.</span><span class="sxs-lookup"><span data-stu-id="3347b-189">The following markup example sets the <xref:System.Windows.UIElement.AllowDrop%2A> property `true` using an attribute on a <xref:System.Windows.Controls.TextBox>, as well as setting some other related properties that in aggregate enable that <xref:System.Windows.Controls.TextBox> to be the target of a multiline text data object when it is dragged in.</span></span> <span data-ttu-id="3347b-190">Para o exemplo completo, consulte [carregue uma amostra de arquivo descartado](https://msdn.microsoft.com/library/be90d645-dd61-4f53-93bb-87902d086ef7).</span><span class="sxs-lookup"><span data-stu-id="3347b-190">For the complete sample, see [Load a Dropped File Sample](https://msdn.microsoft.com/library/be90d645-dd61-4f53-93bb-87902d086ef7).</span></span>  
  
 [!code-xaml[DragDrop_DropOpenTextFile#UIElementAllowDrop](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DropOpenTextFile/CS/window1.xaml#uielementallowdrop)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowDropProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AllowDropProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AllowDropProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.AllowDropProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AllowDropProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AllowDropProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AllowDropProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.AllowDropProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-191">Identifica a propriedade de dependência <see cref="P:System.Windows.UIElement.AllowDrop" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-191">Identifies the <see cref="P:System.Windows.UIElement.AllowDrop" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ApplyAnimationClock">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-192">Aplica uma animação a uma propriedade de dependência especificada neste elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-192">Applies an animation to a specified dependency property on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-193">Este método está selado e não pode ser substituído.</span><span class="sxs-lookup"><span data-stu-id="3347b-193">This method is sealed and cannot be overridden.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ApplyAnimationClock">
      <MemberSignature Language="C#" Value="public void ApplyAnimationClock (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationClock clock);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyAnimationClock(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationClock clock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyAnimationClock (dp As DependencyProperty, clock As AnimationClock)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyAnimationClock(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationClock ^ clock);" />
      <MemberSignature Language="F#" Value="abstract member ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock -&gt; unit&#xA;override this.ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock -&gt; unit" Usage="uIElement.ApplyAnimationClock (dp, clock)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="clock" Type="System.Windows.Media.Animation.AnimationClock" />
      </Parameters>
      <Docs>
        <param name="dp">
          <span data-ttu-id="3347b-194">O identificador para a propriedade a ser animada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-194">The identifier for the property to animate.</span>
          </span>
        </param>
        <param name="clock">
          <span data-ttu-id="3347b-195">O relógio de animação que controla e declara a animação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-195">The animation clock that controls and declares the animation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-196">Aplica uma animação a uma propriedade de dependência especificada neste elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-196">Applies an animation to a specified dependency property on this element.</span>
          </span>
          <span data-ttu-id="3347b-197">Todas as animações existentes são interrompidas e substituídas pela nova animação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-197">Any existing animations are stopped and replaced with the new animation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-198">Para remover uma animação de uma propriedade, especifique o identificador para essa propriedade como `dp` e especifique `clock` como `null`.</span><span class="sxs-lookup"><span data-stu-id="3347b-198">To remove an animation from a property, specify the identifier for that property as `dp` and specify `clock` as `null`.</span></span> <span data-ttu-id="3347b-199">Isso remove a animação e a propriedade animada é definida como seu valor de base.</span><span class="sxs-lookup"><span data-stu-id="3347b-199">This removes the animation and the animated property is set to its base value.</span></span> <span data-ttu-id="3347b-200">No entanto, o relógio de animação originalmente associado não será interrompido.</span><span class="sxs-lookup"><span data-stu-id="3347b-200">However, the originally associated animation clock is not stopped.</span></span> <span data-ttu-id="3347b-201">Todas as outras animações atribuídas a esse relógio continuará a ser executado.</span><span class="sxs-lookup"><span data-stu-id="3347b-201">Any other animations assigned to that clock will continue to run.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3347b-202">No exemplo a seguir, uma <xref:System.Windows.Shapes.Rectangle> `myAnimatedRectangle` tiver uma animação de medição de tempo específico aplicada a ele, chamando <xref:System.Windows.UIElement.ApplyAnimationClock%2A> .</span><span class="sxs-lookup"><span data-stu-id="3347b-202">In the following example, a <xref:System.Windows.Shapes.Rectangle> `myAnimatedRectangle` has a particular timing animation applied to it by calling <xref:System.Windows.UIElement.ApplyAnimationClock%2A> .</span></span>  
  
 [!code-csharp[timingbehaviors_procedural_snip#UIElementApplyAnimationClock](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_procedural_snip/CSharp/ClockControllerSpeedRatioExample.cs#uielementapplyanimationclock)]
 [!code-vb[timingbehaviors_procedural_snip#UIElementApplyAnimationClock](~/samples/snippets/visualbasic/VS_Snippets_Wpf/timingbehaviors_procedural_snip/visualbasic/clockcontrollerspeedratioexample.vb#uielementapplyanimationclock)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyAnimationClock">
      <MemberSignature Language="C#" Value="public void ApplyAnimationClock (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationClock clock, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyAnimationClock(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationClock clock, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyAnimationClock(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationClock ^ clock, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="abstract member ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock * System.Windows.Media.Animation.HandoffBehavior -&gt; unit&#xA;override this.ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="uIElement.ApplyAnimationClock (dp, clock, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="clock" Type="System.Windows.Media.Animation.AnimationClock" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="dp">
          <span data-ttu-id="3347b-203">A propriedade a ser animada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-203">The property to animate.</span>
          </span>
        </param>
        <param name="clock">
          <span data-ttu-id="3347b-204">O relógio de animação que controla e declara a animação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-204">The animation clock that controls and declares the animation.</span>
          </span>
        </param>
        <param name="handoffBehavior">
          <span data-ttu-id="3347b-205">Um valor da enumeração.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-205">A value of the enumeration.</span>
          </span>
          <span data-ttu-id="3347b-206">O padrão é <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" />, que interromperá a animação existente, substituindo-a pela nova.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-206">The default is <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" />, which will stop any existing animation and replace with the new one.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-207">Aplica uma animação a uma propriedade de dependência especificada nesse elemento, com a capacidade de especificar o que ocorrerá se a propriedade já tiver uma animação em execução.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-207">Applies an animation to a specified dependency property on this element, with the ability to specify what happens if the property already has a running animation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-208">Para remover uma animação de uma propriedade, especifique o identificador para essa propriedade como `dp` e especifique `clock` como `null`.</span><span class="sxs-lookup"><span data-stu-id="3347b-208">To remove an animation from a property, specify the identifier for that property as `dp` and specify `clock` as `null`.</span></span> <span data-ttu-id="3347b-209">Isso remove a animação e a propriedade animada é definida como seu valor de base.</span><span class="sxs-lookup"><span data-stu-id="3347b-209">This removes the animation and the animated property is set to its base value.</span></span> <span data-ttu-id="3347b-210">No entanto, o relógio de animação originalmente associado não será interrompido.</span><span class="sxs-lookup"><span data-stu-id="3347b-210">However, the originally associated animation clock is not stopped.</span></span> <span data-ttu-id="3347b-211">Todas as outras animações atribuídas a esse relógio continuará a ser executado.</span><span class="sxs-lookup"><span data-stu-id="3347b-211">Any other animations assigned to that clock will continue to run.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCaptured">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.AreAnyTouchesCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesCaptured { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAnyTouchesCaptured : bool" Usage="System.Windows.UIElement.AreAnyTouchesCaptured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-212">Obtém um valor que indica se pelo menos um toque é capturado para esse elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-212">Gets a value that indicates whether at least one touch is captured to this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3347b-213">
            <see langword="true" /> se pelo menos um toque for capturado para esse elemento; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-213">
              <see langword="true" /> if at least one touch is captured to this element; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.AreAnyTouchesCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesCapturedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AreAnyTouchesCapturedProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.AreAnyTouchesCapturedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-214">Identifica a propriedade de dependência <see cref="P:System.Windows.UIElement.AreAnyTouchesCaptured" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-214">Identifies the <see cref="P:System.Windows.UIElement.AreAnyTouchesCaptured" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedWithin">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesCapturedWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesCapturedWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.AreAnyTouchesCapturedWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesCapturedWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesCapturedWithin { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAnyTouchesCapturedWithin : bool" Usage="System.Windows.UIElement.AreAnyTouchesCapturedWithin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-215">Obtém um valor que indica se ao menos um toque é capturado nesse elemento ou elementos filho na sua árvore visual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-215">Gets a value that indicates whether at least one touch is captured to this element or to any child elements in its visual tree.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3347b-216">
            <see langword="true" /> Se pelo menos um toque é capturado para esse elemento ou elementos filho na árvore visual; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-216">
              <see langword="true" /> if at least one touch is captured to this element or any child elements in its visual tree; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesCapturedWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesCapturedWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.AreAnyTouchesCapturedWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesCapturedWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesCapturedWithinProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AreAnyTouchesCapturedWithinProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.AreAnyTouchesCapturedWithinProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-217">Identifica a propriedade de dependência <see cref="P:System.Windows.UIElement.AreAnyTouchesCapturedWithin" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-217">Identifies the <see cref="P:System.Windows.UIElement.AreAnyTouchesCapturedWithin" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesDirectlyOver">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.AreAnyTouchesDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesDirectlyOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAnyTouchesDirectlyOver : bool" Usage="System.Windows.UIElement.AreAnyTouchesDirectlyOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-218">Obtém um valor que indica se pelo menos um toque é feito sobre esse elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-218">Gets a value that indicates whether at least one touch is pressed over this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3347b-219">
            <see langword="true" /> se pelo menos um toque for pressionado sobre esse elemento; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-219">
              <see langword="true" /> if at least one touch is pressed over this element; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.AreAnyTouchesDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesDirectlyOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AreAnyTouchesDirectlyOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.AreAnyTouchesDirectlyOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-220">Identifica a propriedade de dependência <see cref="P:System.Windows.UIElement.AreAnyTouchesDirectlyOver" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-220">Identifies the <see cref="P:System.Windows.UIElement.AreAnyTouchesDirectlyOver" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesOver">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.AreAnyTouchesOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAnyTouchesOver : bool" Usage="System.Windows.UIElement.AreAnyTouchesOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-221">Obtém um valor que indica se pelo menos um toque for pressionado sobre esse elemento ou elementos filho na sua árvore visual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-221">Gets a value that indicates whether at least one touch is pressed over this element or any child elements in its visual tree.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3347b-222">
            <see langword="true" /> se pelo menos um toque for pressionado sobre esse elemento ou elementos filho na sua árvore visual; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-222">
              <see langword="true" /> if at least one touch is pressed over this element or any child elements in its visual tree; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.AreAnyTouchesOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AreAnyTouchesOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.AreAnyTouchesOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-223">Identifica a propriedade de dependência <see cref="P:System.Windows.UIElement.AreAnyTouchesOver" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-223">Identifies the <see cref="P:System.Windows.UIElement.AreAnyTouchesOver" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Arrange">
      <MemberSignature Language="C#" Value="public void Arrange (System.Windows.Rect finalRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Arrange(valuetype System.Windows.Rect finalRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.Arrange(System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Arrange (finalRect As Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Arrange(System::Windows::Rect finalRect);" />
      <MemberSignature Language="F#" Value="member this.Arrange : System.Windows.Rect -&gt; unit" Usage="uIElement.Arrange finalRect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="finalRect" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="finalRect">
          <span data-ttu-id="3347b-224">O tamanho final que o elemento pai computa para o filho, fornecido como uma instância <see cref="T:System.Windows.Rect" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-224">The final size that the parent computes for the child element, provided as a <see cref="T:System.Windows.Rect" /> instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-225">Posiciona elementos filho e determina um tamanho para um <see cref="T:System.Windows.UIElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-225">Positions child elements and determines a size for a <see cref="T:System.Windows.UIElement" />.</span>
          </span>
          <span data-ttu-id="3347b-226">Elementos pai chamam esse método de sua própria implementação <see cref="M:System.Windows.UIElement.ArrangeCore(System.Windows.Rect)" /> (ou um equivalente no nível de estrutura WPF) para formar uma atualização de layout recursiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-226">Parent elements call this method from their <see cref="M:System.Windows.UIElement.ArrangeCore(System.Windows.Rect)" /> implementation (or a WPF framework-level equivalent) to form a recursive layout update.</span>
          </span>
          <span data-ttu-id="3347b-227">Esse método constitui a segunda passagem de uma atualização de layout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-227">This method constitutes the second pass of a layout update.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-228">Para o elemento de nível de estrutura WPF derivando de cenários, o comportamento para <xref:System.Windows.UIElement.Arrange%2A> não deve (e não for possível, a menos que você de sombra) ser alterado.</span><span class="sxs-lookup"><span data-stu-id="3347b-228">For WPF framework-level element deriving scenarios, behavior for <xref:System.Windows.UIElement.Arrange%2A> should not (and cannot, unless you shadow) be changed.</span></span> <span data-ttu-id="3347b-229">Em vez disso, você deve substituir o <xref:System.Windows.FrameworkElement.ArrangeOverride%2A> implementação em sua classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-229">Instead, you should override the <xref:System.Windows.FrameworkElement.ArrangeOverride%2A> implementation in your class.</span></span> <span data-ttu-id="3347b-230">Sua <xref:System.Windows.FrameworkElement.ArrangeOverride%2A> implementação é chamada internamente por <xref:System.Windows.UIElement.Arrange%2A> como parte das operações de layout de nível de framework WPF padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-230">Your <xref:System.Windows.FrameworkElement.ArrangeOverride%2A> implementation is called internally by <xref:System.Windows.UIElement.Arrange%2A> as part of default WPF framework-level layout operations.</span></span> <span data-ttu-id="3347b-231">Sua <xref:System.Windows.UIElement.ArrangeCore%2A> implementação também deve chamar <xref:System.Windows.FrameworkElement.ArrangeOverride%2A> em cada elemento filho, se ele tiver elementos filho.</span><span class="sxs-lookup"><span data-stu-id="3347b-231">Your <xref:System.Windows.UIElement.ArrangeCore%2A> implementation should also call <xref:System.Windows.FrameworkElement.ArrangeOverride%2A> on each child element, if it has child elements.</span></span>  
  
 <span data-ttu-id="3347b-232">Para o elemento de nível de núcleo do WPF derivando de cenários, o comportamento para <xref:System.Windows.UIElement.Arrange%2A> não deve (e não for possível, a menos que você de sombra) ser alterado.</span><span class="sxs-lookup"><span data-stu-id="3347b-232">For WPF core-level element deriving scenarios, the behavior for <xref:System.Windows.UIElement.Arrange%2A> should not (and cannot, unless you shadow) be changed.</span></span> <span data-ttu-id="3347b-233">Em vez disso, você deve substituir <xref:System.Windows.UIElement.ArrangeCore%2A> em sua classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-233">Instead, you should override <xref:System.Windows.UIElement.ArrangeCore%2A> in your class.</span></span> <span data-ttu-id="3347b-234">Sua <xref:System.Windows.UIElement.ArrangeCore%2A> implementação é chamada internamente por <xref:System.Windows.UIElement.Arrange%2A> como parte das operações de layout de nível de framework WPF padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-234">Your <xref:System.Windows.UIElement.ArrangeCore%2A> implementation is called internally by <xref:System.Windows.UIElement.Arrange%2A> as part of default WPF framework-level layout operations.</span></span> <span data-ttu-id="3347b-235">No entanto, isso pressupõe que você estiver usando o layout de nível de framework WPF e seu sistema de layout, que geralmente não é o caso se você estiver derivando especificamente os elementos em nível de núcleo do WPF a <xref:System.Windows.UIElement> classe de elemento base.</span><span class="sxs-lookup"><span data-stu-id="3347b-235">However, this assumes you are using WPF framework-level layout and its layout system, which is often not the case if you are specifically deriving elements at the WPF core-level from the <xref:System.Windows.UIElement> base element class.</span></span> <span data-ttu-id="3347b-236">Sua <xref:System.Windows.UIElement.ArrangeCore%2A> implementação também deve chamar <xref:System.Windows.UIElement.Arrange%2A> em cada elemento filho, se ele tiver elementos filho.</span><span class="sxs-lookup"><span data-stu-id="3347b-236">Your <xref:System.Windows.UIElement.ArrangeCore%2A> implementation should also call <xref:System.Windows.UIElement.Arrange%2A> on each child element, if it has child elements.</span></span> <span data-ttu-id="3347b-237">Observe que o cenário de nível de núcleo do WPF implica que você não estiver usando um <xref:System.Windows.FrameworkElement> derivado de classe, pois <xref:System.Windows.FrameworkElement> selos <xref:System.Windows.FrameworkElement.ArrangeCore%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-237">Note that the WPF core-level scenario implies that you are not using a <xref:System.Windows.FrameworkElement> derived class, because <xref:System.Windows.FrameworkElement> seals <xref:System.Windows.FrameworkElement.ArrangeCore%2A>.</span></span>  
  
 <span data-ttu-id="3347b-238">O cálculo de posicionamento de layout de nível de framework WPF no [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] consiste em um <xref:System.Windows.UIElement.Measure%2A> chamar e um <xref:System.Windows.UIElement.Arrange%2A> chamar.</span><span class="sxs-lookup"><span data-stu-id="3347b-238">Computation of WPF framework-level layout positioning in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] consists of a <xref:System.Windows.UIElement.Measure%2A> call and an <xref:System.Windows.UIElement.Arrange%2A> call.</span></span> <span data-ttu-id="3347b-239">Durante o <xref:System.Windows.UIElement.Measure%2A> chamada, o sistema de layout determina os requisitos de tamanho de um elemento usando um fornecido <xref:System.Windows.Size> (`availableSize`) argumento.</span><span class="sxs-lookup"><span data-stu-id="3347b-239">During the <xref:System.Windows.UIElement.Measure%2A> call, the layout system determines an element's size requirements using a provided <xref:System.Windows.Size> (`availableSize`) argument.</span></span> <span data-ttu-id="3347b-240">Durante o <xref:System.Windows.UIElement.Arrange%2A> chamada, o sistema de layout finaliza o tamanho e posição de um elemento da caixa delimitadora.</span><span class="sxs-lookup"><span data-stu-id="3347b-240">During the <xref:System.Windows.UIElement.Arrange%2A> call, the layout system finalizes the size and position of an element's bounding box.</span></span>  <span data-ttu-id="3347b-241">Veja [Layout](~/docs/framework/wpf/advanced/layout.md) para obter mais informações.</span><span class="sxs-lookup"><span data-stu-id="3347b-241">For more information, see [Layout](~/docs/framework/wpf/advanced/layout.md).</span></span>  
  
 <span data-ttu-id="3347b-242">`availableSize` pode ser qualquer número entre zero e infinito.</span><span class="sxs-lookup"><span data-stu-id="3347b-242">`availableSize` can be any number from zero to infinity.</span></span> <span data-ttu-id="3347b-243">O mínimo de retorno de elementos a ser dispostos <xref:System.Windows.Size> eles exigem por meio do `availableSize` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="3347b-243">Elements to be laid out return the minimum <xref:System.Windows.Size> they require through the `availableSize` parameter.</span></span>  
  
 <span data-ttu-id="3347b-244">Quando um layout é instanciado pela primeira vez, ele sempre recebe um <xref:System.Windows.UIElement.Measure%2A> chame antes <xref:System.Windows.UIElement.Arrange%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-244">When a layout is first instantiated, it always receives a <xref:System.Windows.UIElement.Measure%2A> call before <xref:System.Windows.UIElement.Arrange%2A>.</span></span> <span data-ttu-id="3347b-245">No entanto, após a primeira passagem de layout, ele poderá receber um <xref:System.Windows.UIElement.Arrange%2A> chamar sem uma <xref:System.Windows.UIElement.Measure%2A>; isso pode acontecer quando uma propriedade que afete apenas <xref:System.Windows.UIElement.Arrange%2A> é alterado (por exemplo, o alinhamento), ou quando o pai recebe um <xref:System.Windows.UIElement.Arrange%2A> sem um <xref:System.Windows.UIElement.Measure%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-245">However, after the first layout pass, it may receive an <xref:System.Windows.UIElement.Arrange%2A> call without a <xref:System.Windows.UIElement.Measure%2A>; this can happen when a property that affects only <xref:System.Windows.UIElement.Arrange%2A> is changed (such as alignment), or when the parent receives an <xref:System.Windows.UIElement.Arrange%2A> without a <xref:System.Windows.UIElement.Measure%2A>.</span></span> <span data-ttu-id="3347b-246">Um <xref:System.Windows.UIElement.Measure%2A> chamada invalidará automaticamente um <xref:System.Windows.UIElement.Arrange%2A> chamar.</span><span class="sxs-lookup"><span data-stu-id="3347b-246">A <xref:System.Windows.UIElement.Measure%2A> call will automatically invalidate an <xref:System.Windows.UIElement.Arrange%2A> call.</span></span>  
  
 <span data-ttu-id="3347b-247">As atualizações de layout geralmente ocorrem assincronamente (em um horário determinado pelo sistema de layout).</span><span class="sxs-lookup"><span data-stu-id="3347b-247">Layout updates generally occur asynchronously (at a time determined by the layout system).</span></span> <span data-ttu-id="3347b-248">Um elemento pode não refletir imediatamente as alterações nas propriedades que afetam o dimensionamento de elemento (como <xref:System.Windows.FrameworkElement.Width%2A>).</span><span class="sxs-lookup"><span data-stu-id="3347b-248">An element might not immediately reflect changes to properties that affect element sizing (such as <xref:System.Windows.FrameworkElement.Width%2A>).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3347b-249">As atualizações de layout podem ser forçadas usando o <xref:System.Windows.UIElement.UpdateLayout%2A> método; no entanto, chamar essa função não é recomendado, pois normalmente é desnecessário e pode causar baixo desempenho.</span><span class="sxs-lookup"><span data-stu-id="3347b-249">Layout updates can be forced by using the <xref:System.Windows.UIElement.UpdateLayout%2A> method; however, calling this function is not recommended, as it is usually unnecessary and can cause poor performance.</span></span> <span data-ttu-id="3347b-250">Em muitas situações em que chamar <xref:System.Windows.UIElement.UpdateLayout%2A> pode ser apropriado, o sistema de layout provavelmente já processará as atualizações.</span><span class="sxs-lookup"><span data-stu-id="3347b-250">In many situations where calling <xref:System.Windows.UIElement.UpdateLayout%2A> might be appropriate, the layout system will probably already be processing updates.</span></span> <span data-ttu-id="3347b-251">O sistema de layout pode processar as alterações de layout de uma maneira que pode otimizar todas as atualizações necessárias como parte de um pacote.</span><span class="sxs-lookup"><span data-stu-id="3347b-251">The layout system can process layout changes in a manner that can optimize all necessary updates as part of a package.</span></span>  
  
 <span data-ttu-id="3347b-252">O sistema de layout mantém duas filas separadas dos layouts inválidos, um para <xref:System.Windows.UIElement.Measure%2A> e outro para <xref:System.Windows.UIElement.Arrange%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-252">The layout system keeps two separate queues of invalid layouts, one for <xref:System.Windows.UIElement.Measure%2A> and one for <xref:System.Windows.UIElement.Arrange%2A>.</span></span> <span data-ttu-id="3347b-253">A fila de layout é classificada com base na ordem dos elementos na árvore visual.</span><span class="sxs-lookup"><span data-stu-id="3347b-253">The layout queue is sorted based upon the order of elements in the visual tree.</span></span> <span data-ttu-id="3347b-254">São mais alto na árvore de elementos na parte superior da fila, para evitar layouts redundantes causados por alterações repetidas em pais.</span><span class="sxs-lookup"><span data-stu-id="3347b-254">Elements higher in the tree are at the top of the queue, in order to avoid redundant layouts caused by repeated changes in parents.</span></span> <span data-ttu-id="3347b-255">Entradas duplicadas são automaticamente removidas da fila e os elementos são automaticamente removidos da fila se eles já são válidos.</span><span class="sxs-lookup"><span data-stu-id="3347b-255">Duplicate entries are automatically removed from the queue, and elements are automatically removed from the queue if they are already valid.</span></span>  
  
 <span data-ttu-id="3347b-256">Ao atualizar o layout, o <xref:System.Windows.UIElement.Measure%2A> fila é esvaziada primeiro, seguido de <xref:System.Windows.UIElement.Arrange%2A> fila.</span><span class="sxs-lookup"><span data-stu-id="3347b-256">When updating layout, the <xref:System.Windows.UIElement.Measure%2A> queue is emptied first, followed by the <xref:System.Windows.UIElement.Arrange%2A> queue.</span></span> <span data-ttu-id="3347b-257">Um elemento na <xref:System.Windows.UIElement.Arrange%2A> fila nunca será organizada se não houver um elemento no <xref:System.Windows.UIElement.Measure%2A> fila.</span><span class="sxs-lookup"><span data-stu-id="3347b-257">An element in the <xref:System.Windows.UIElement.Arrange%2A> queue will never be arranged if there is an element in the <xref:System.Windows.UIElement.Measure%2A> queue.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrangeCore">
      <MemberSignature Language="C#" Value="protected virtual void ArrangeCore (System.Windows.Rect finalRect);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ArrangeCore(valuetype System.Windows.Rect finalRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ArrangeCore(System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ArrangeCore (finalRect As Rect)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ArrangeCore(System::Windows::Rect finalRect);" />
      <MemberSignature Language="F#" Value="abstract member ArrangeCore : System.Windows.Rect -&gt; unit&#xA;override this.ArrangeCore : System.Windows.Rect -&gt; unit" Usage="uIElement.ArrangeCore finalRect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="finalRect" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="finalRect">
          <span data-ttu-id="3347b-258">A área final no pai que esse elemento deve usar para organizar a si próprio e seus filhos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-258">The final area within the parent that element should use to arrange itself and its child elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-259">Define o modelo para a definição de layout de disposição de nível de núcleo do WPF.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-259">Defines the template for WPF core-level arrange layout definition.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="3347b-260">Substituir esse método só é apropriado se você estiver derivando no nível de núcleo do WPF, e você não estiver usando o sistema de layout de nível de estrutura do WPF e <xref:System.Windows.FrameworkElement> derivado de classe, pois <xref:System.Windows.FrameworkElement> selos <xref:System.Windows.FrameworkElement.ArrangeCore%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-260">Overriding this method is only appropriate if you are deriving at the WPF core-level, and you are not using the WPF framework-level layout system and <xref:System.Windows.FrameworkElement> derived class, because <xref:System.Windows.FrameworkElement> seals <xref:System.Windows.FrameworkElement.ArrangeCore%2A>.</span></span> <span data-ttu-id="3347b-261">Se você estiver usando o sistema de layout de nível de framework WPF, o método apropriado para substituir layout específicas de classe de organizar o comportamento é <xref:System.Windows.FrameworkElement.ArrangeOverride%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-261">If you are using the WPF framework-level layout system, the appropriate method to override for class-specific layout arrange behavior is <xref:System.Windows.FrameworkElement.ArrangeOverride%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3347b-262"><xref:System.Windows.UIElement.ArrangeCore%2A> implementações devem chamar a implementação base para retornar um tamanho, em seguida, chame o <xref:System.Windows.UIElement.Arrange%2A> método de cada elemento filho visíveis e reconciliar os tamanhos retornados por essas <xref:System.Windows.UIElement.Arrange%2A> chamadas com o tamanho da implementação base.</span><span class="sxs-lookup"><span data-stu-id="3347b-262"><xref:System.Windows.UIElement.ArrangeCore%2A> implementations should call the base implementation to return a size, then call the <xref:System.Windows.UIElement.Arrange%2A> method of each visible child element, and reconcile the sizes returned by these <xref:System.Windows.UIElement.Arrange%2A> calls with the size of the base implementation.</span></span> <span data-ttu-id="3347b-263">A lógica para o aspecto de reconciliação de um <xref:System.Windows.UIElement.ArrangeCore%2A> implementação pode variar, dependendo das características do elemento de layout.</span><span class="sxs-lookup"><span data-stu-id="3347b-263">The logic for the reconciliation aspect of a <xref:System.Windows.UIElement.ArrangeCore%2A> implementation might vary, depending on the layout characteristics of your element.</span></span> <span data-ttu-id="3347b-264">No modelo de exemplo a seguir, `VisualChildren` é uma propriedade hipotética que seu elemento pode definir para ajudar a enumerar seu conteúdo; <xref:System.Windows.UIElement> não define nas coleções de conteúdo nesse nível, a arquitetura de nível de framework WPF adia o comportamento do conteúdo para elementos derivados, como controles específicos ou classes base de controle.</span><span class="sxs-lookup"><span data-stu-id="3347b-264">In the following example template, `VisualChildren` is a hypothetical property that your element might define to help enumerate its content; <xref:System.Windows.UIElement> does not define content collections at this level, the WPF framework-level architecture defers content behavior to derived elements such as specific controls or control base classes.</span></span>  
  
 [!code-csharp[CorePseudocode#UIElementArrangeOverride](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#uielementarrangeoverride)]
 [!code-vb[CorePseudocode#UIElementArrangeOverride](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#uielementarrangeoverride)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3347b-265">Se você estiver desenvolvendo elementos no nível de núcleo do WPF, você deve substituir esse método para dar seu elemento de nível de núcleo do WPF em um único organizar o comportamento de layout ou tornar o layout adequado decisões sobre os elementos filho de seus elementos.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3347b-265">If you are developing elements at the WPF core level,you should override this method to give your WPF core-level element a unique arrange layout behavior, or to make proper layout decisions about the child elements of your elements.</span>
            </span>
            <span data-ttu-id="3347b-266">Uma substituição pode ser necessária se os elementos filho não são reconhecidos de um padrão definido como um <see cref="T:System.Windows.Controls.ItemCollection" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3347b-266">An override might be necessary if those child elements are not recognizable from a defined pattern such as an <see cref="T:System.Windows.Controls.ItemCollection" />.</span>
            </span>
            <span data-ttu-id="3347b-267">Um elemento pai deve chamar a classe específica <see cref="M:System.Windows.UIElement.Arrange(System.Windows.Rect)" /> em cada elemento filho, caso contrário, esses elementos filho não são renderizados.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3347b-267">A parent element must call the class-specific <see cref="M:System.Windows.UIElement.Arrange(System.Windows.Rect)" /> on each child element, otherwise those child elements are not rendered.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAnimation">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-268">Inicia uma animação de uma propriedade animada especificada neste elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-268">Starts an animation for a specified animated property on this element.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAnimation">
      <MemberSignature Language="C#" Value="public void BeginAnimation (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationTimeline animation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginAnimation(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationTimeline animation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginAnimation (dp As DependencyProperty, animation As AnimationTimeline)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginAnimation(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationTimeline ^ animation);" />
      <MemberSignature Language="F#" Value="abstract member BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline -&gt; unit&#xA;override this.BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline -&gt; unit" Usage="uIElement.BeginAnimation (dp, animation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="animation" Type="System.Windows.Media.Animation.AnimationTimeline" />
      </Parameters>
      <Docs>
        <param name="dp">
          <span data-ttu-id="3347b-269">A propriedade a ser animada, que é especificada como um identificador da propriedade de dependência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-269">The property to animate, which is specified as a dependency property identifier.</span>
          </span>
        </param>
        <param name="animation">
          <span data-ttu-id="3347b-270">A linha do tempo da animação a ser iniciada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-270">The timeline of the animation to start.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-271">Inicia uma animação de uma propriedade animada especificada neste elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-271">Starts an animation for a specified animated property on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-272">Quando você verifica se uma propriedade é animada, observe que a animação começará e ser considerada animado quando o primeiro quadro além do ponto de partida sem animação é renderizado.</span><span class="sxs-lookup"><span data-stu-id="3347b-272">When you check whether a property is animated, note that the animation will begin and be considered animated when the first frame beyond the non-animated starting point is rendered.</span></span>  
  
 <span data-ttu-id="3347b-273">Se o <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> para `animation` é `null`, todas as animações atuais serão removidas e o valor atual da propriedade é mantido.</span><span class="sxs-lookup"><span data-stu-id="3347b-273">If the <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> for `animation` is `null`, then any current animations are removed and the current value of the property is held.</span></span>  
  
 <span data-ttu-id="3347b-274">Se todo o `animation` valor é `null`, todas as animações serão removidas da propriedade e o valor da propriedade será revertido para seu valor de base.</span><span class="sxs-lookup"><span data-stu-id="3347b-274">If the entire `animation` value is `null`, all animations are removed from the property and the property value reverts to its base value.</span></span> <span data-ttu-id="3347b-275">No entanto, a linha do tempo de animação originalmente associado não será interrompida.</span><span class="sxs-lookup"><span data-stu-id="3347b-275">However, the originally associated animation timeline is not stopped.</span></span> <span data-ttu-id="3347b-276">Todas as outras animações atribuídas a essa linha do tempo, continuará a ser executado.</span><span class="sxs-lookup"><span data-stu-id="3347b-276">Any other animations assigned to that timeline will continue to run.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3347b-277">O exemplo a seguir cria uma animação, atribui a ele e, em seguida, chama <xref:System.Windows.UIElement.BeginAnimation%2A> para iniciá-lo.</span><span class="sxs-lookup"><span data-stu-id="3347b-277">The following example creates an animation, assigns it, and then calls <xref:System.Windows.UIElement.BeginAnimation%2A> to start it.</span></span>  
  
 [!code-csharp[timingbehaviors_procedural_snip#BeginAnimation](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_procedural_snip/CSharp/GetAnimationBaseValueExample.cs#beginanimation)]
 [!code-vb[timingbehaviors_procedural_snip#BeginAnimation](~/samples/snippets/visualbasic/VS_Snippets_Wpf/timingbehaviors_procedural_snip/visualbasic/getanimationbasevalueexample.vb#beginanimation)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginAnimation">
      <MemberSignature Language="C#" Value="public void BeginAnimation (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationTimeline animation, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginAnimation(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationTimeline animation, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginAnimation(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationTimeline ^ animation, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="abstract member BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline * System.Windows.Media.Animation.HandoffBehavior -&gt; unit&#xA;override this.BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="uIElement.BeginAnimation (dp, animation, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="animation" Type="System.Windows.Media.Animation.AnimationTimeline" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="dp">
          <span data-ttu-id="3347b-278">A propriedade a ser animada, que é especificada como o identificador da propriedade de dependência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-278">The property to animate, which is specified as the dependency property identifier.</span>
          </span>
        </param>
        <param name="animation">
          <span data-ttu-id="3347b-279">A linha do tempo da animação a ser aplicada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-279">The timeline of the animation to be applied.</span>
          </span>
        </param>
        <param name="handoffBehavior">
          <span data-ttu-id="3347b-280">Um valor de enumeração que especifica como a nova animação interage com todas as animações atuais (em execução) que já estão afetando o valor da propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-280">A value of the enumeration that specifies how the new animation interacts with any current (running) animations that are already affecting the property value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-281">Inicia uma animação específica para uma propriedade animada especificada neste elemento, com a opção de especificar o que acontece se a propriedade já tiver uma animação em execução.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-281">Starts a specific animation for a specified animated property on this element, with the option of specifying what happens if the property already has a running animation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-282">Quando você verifica se uma propriedade é animada, observe que a animação começará e ser considerada animado quando o primeiro quadro além do ponto de partida sem animação é renderizado.</span><span class="sxs-lookup"><span data-stu-id="3347b-282">When you check whether a property is animated, note that the animation will begin and be considered animated when the first frame beyond the non-animated starting point is rendered.</span></span>  
  
 <span data-ttu-id="3347b-283">Se o <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> para `animation` é `null`, todas as animações atuais serão removidas e o valor atual da propriedade é mantido.</span><span class="sxs-lookup"><span data-stu-id="3347b-283">If the <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> for `animation` is `null`, then any current animations are removed and the current value of the property is held.</span></span>  
  
 <span data-ttu-id="3347b-284">Se todo o `animation` valor é `null`, todas as animações serão removidas da propriedade e o valor da propriedade será revertido para seu valor de base.</span><span class="sxs-lookup"><span data-stu-id="3347b-284">If the entire `animation` value is `null`, all animations are removed from the property and the property value reverts to its base value.</span></span> <span data-ttu-id="3347b-285">No entanto, a linha do tempo de animação originalmente associado não será interrompida.</span><span class="sxs-lookup"><span data-stu-id="3347b-285">However, the originally associated animation timeline is not stopped.</span></span> <span data-ttu-id="3347b-286">Todas as outras animações atribuídas a essa linha do tempo, continuará a ser executado.</span><span class="sxs-lookup"><span data-stu-id="3347b-286">Any other animations assigned to that timeline will continue to run.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3347b-287">O exemplo a seguir implementa um manipulador que obtém uma animação existente de um recurso e, em seguida, chama <xref:System.Windows.UIElement.BeginAnimation%2A> com um comportamento de entrega especificada.</span><span class="sxs-lookup"><span data-stu-id="3347b-287">The following example implements a handler that obtains an existing animation from a resource and then calls <xref:System.Windows.UIElement.BeginAnimation%2A> with a specified handoff behavior.</span></span>  
  
 [!code-csharp[BrushesIntroduction#BeginAnimationHandoff](~/samples/snippets/csharp/VS_Snippets_Wpf/BrushesIntroduction/CSharp/SampleViewer.xaml.cs#beginanimationhandoff)]
 [!code-vb[BrushesIntroduction#BeginAnimationHandoff](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BrushesIntroduction/visualbasic/sampleviewer.xaml.vb#beginanimationhandoff)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BitmapEffect">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Effects.BitmapEffect BitmapEffect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Effects.BitmapEffect BitmapEffect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.BitmapEffect" />
      <MemberSignature Language="VB.NET" Value="Public Property BitmapEffect As BitmapEffect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Effects::BitmapEffect ^ BitmapEffect { System::Windows::Media::Effects::BitmapEffect ^ get(); void set(System::Windows::Media::Effects::BitmapEffect ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BitmapEffect : System.Windows.Media.Effects.BitmapEffect with get, set" Usage="System.Windows.UIElement.BitmapEffect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.Obsolete("Avoid using BitmapEffects as they have very poor performance characteristics.  They will be deprecated in a future version.  Consider using the UIElement.Effect property and ShaderEffects where appropriate instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.BitmapEffect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-288">Obtém ou define um efeito de bitmap aplicado diretamente ao conteúdo renderizado para este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-288">Gets or sets a bitmap effect that applies directly to the rendered content for this element.</span>
          </span>
          <span data-ttu-id="3347b-289">É uma propriedade de dependência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-289">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3347b-290">O efeito de bitmap a ser aplicado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-290">The bitmap effect to apply.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-291"><xref:System.Windows.Media.Effects.BitmapEffect> Portanto, é um tipo abstrato, o [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] uso requer uma classe derivada implementada de <xref:System.Windows.Media.Effects.BitmapEffect>, como <xref:System.Windows.Media.Effects.OuterGlowBitmapEffect>.</span><span class="sxs-lookup"><span data-stu-id="3347b-291"><xref:System.Windows.Media.Effects.BitmapEffect> is an abstract type, therefore the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] usage requires an implemented derived class of <xref:System.Windows.Media.Effects.BitmapEffect>, such as <xref:System.Windows.Media.Effects.OuterGlowBitmapEffect>.</span></span> <span data-ttu-id="3347b-292">Observe que um implementado classe derivada é um tipo de coleção que permite que você especificar mais de um sequencial <xref:System.Windows.Media.Effects.BitmapEffect>, usando uma sintaxe de marca aninhada.</span><span class="sxs-lookup"><span data-stu-id="3347b-292">Note that one implemented derived class is a collection type that allows you to specify more than one sequential <xref:System.Windows.Media.Effects.BitmapEffect>, using a nested tag syntax.</span></span>  
  
 <span data-ttu-id="3347b-293">Nenhuma classe derivada de <xref:System.Windows.Media.Effects.BitmapEffect> dá suporte a um conversor de tipo, portanto, o [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] sintaxe que você pode usar para essa propriedade é geralmente a sintaxe de elemento de propriedade.</span><span class="sxs-lookup"><span data-stu-id="3347b-293">No existing derived class of <xref:System.Windows.Media.Effects.BitmapEffect> supports a type converter, so the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntax that you use for this property is generally property element syntax.</span></span>  
  
<a name="dependencyPropertyInfo_BitmapEffect"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3347b-294">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="3347b-294">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-295">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-295">Identifier field</span></span>|<xref:System.Windows.UIElement.BitmapEffectProperty>|  
|<span data-ttu-id="3347b-296">Propriedades de metadados definido como `true`</span><span class="sxs-lookup"><span data-stu-id="3347b-296">Metadata properties set to `true`</span></span>|<span data-ttu-id="3347b-297">Nenhum</span><span class="sxs-lookup"><span data-stu-id="3347b-297">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3347b-298">O exemplo a seguir define um bitmap em vigor, usando <xref:System.Windows.Media.Effects.BlurBitmapEffect>.</span><span class="sxs-lookup"><span data-stu-id="3347b-298">The following example sets a bitmap effect, using <xref:System.Windows.Media.Effects.BlurBitmapEffect>.</span></span>  
  
 [!code-csharp[EffectsGallery_snip#CodeBehindBlurCodeBehindExampleInline](~/samples/snippets/csharp/VS_Snippets_Wpf/EffectsGallery_snip/CSharp/blurcodebehindexample.xaml.cs#codebehindblurcodebehindexampleinline)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BitmapEffectInput">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Effects.BitmapEffectInput BitmapEffectInput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Effects.BitmapEffectInput BitmapEffectInput" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.BitmapEffectInput" />
      <MemberSignature Language="VB.NET" Value="Public Property BitmapEffectInput As BitmapEffectInput" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Effects::BitmapEffectInput ^ BitmapEffectInput { System::Windows::Media::Effects::BitmapEffectInput ^ get(); void set(System::Windows::Media::Effects::BitmapEffectInput ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BitmapEffectInput : System.Windows.Media.Effects.BitmapEffectInput with get, set" Usage="System.Windows.UIElement.BitmapEffectInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.Obsolete("Avoid using BitmapEffects as they have very poor performance characteristics.  They will be deprecated in a future version.  Consider using the UIElement.Effect property and ShaderEffects where appropriate instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.BitmapEffectInput</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-299">Obtém ou define uma fonte de entrada para o efeito de bitmap aplicado diretamente ao conteúdo renderizado para este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-299">Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.</span>
          </span>
          <span data-ttu-id="3347b-300">É uma propriedade de dependência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-300">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3347b-301">A fonte dos efeitos de bitmap.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-301">The source for bitmap effects.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_BitmapEffectInput"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3347b-302">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="3347b-302">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-303">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-303">Identifier field</span></span>|<xref:System.Windows.UIElement.BitmapEffectInputProperty>|  
|<span data-ttu-id="3347b-304">Propriedades de metadados definido como `true`</span><span class="sxs-lookup"><span data-stu-id="3347b-304">Metadata properties set to `true`</span></span>|<span data-ttu-id="3347b-305">Nenhum</span><span class="sxs-lookup"><span data-stu-id="3347b-305">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BitmapEffectInputProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BitmapEffectInputProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BitmapEffectInputProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.BitmapEffectInputProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BitmapEffectInputProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BitmapEffectInputProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BitmapEffectInputProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.BitmapEffectInputProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-306">Identifica a propriedade de dependência <see cref="P:System.Windows.UIElement.BitmapEffectInput" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-306">Identifies the <see cref="P:System.Windows.UIElement.BitmapEffectInput" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BitmapEffectProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BitmapEffectProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BitmapEffectProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.BitmapEffectProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BitmapEffectProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BitmapEffectProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BitmapEffectProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.BitmapEffectProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-307">Identifica a propriedade de dependência <see cref="P:System.Windows.UIElement.BitmapEffect" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-307">Identifies the <see cref="P:System.Windows.UIElement.BitmapEffect" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheMode">
      <MemberSignature Language="C#" Value="public System.Windows.Media.CacheMode CacheMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.CacheMode CacheMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.CacheMode" />
      <MemberSignature Language="VB.NET" Value="Public Property CacheMode As CacheMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::CacheMode ^ CacheMode { System::Windows::Media::CacheMode ^ get(); void set(System::Windows::Media::CacheMode ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CacheMode : System.Windows.Media.CacheMode with get, set" Usage="System.Windows.UIElement.CacheMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.CacheMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-308">Obtém ou define uma representação armazenada em cache do <see cref="T:System.Windows.UIElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-308">Gets or sets a cached representation of the <see cref="T:System.Windows.UIElement" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3347b-309">Um <see cref="T:System.Windows.Media.CacheMode" /> que contém uma representação armazenada em cache do <see cref="T:System.Windows.UIElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-309">A <see cref="T:System.Windows.Media.CacheMode" /> that holds a cached representation of the <see cref="T:System.Windows.UIElement" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-310">Defina o <xref:System.Windows.UIElement.CacheMode%2A> propriedade quando você precisar aumentar o desempenho para o conteúdo que é demorado para processar.</span><span class="sxs-lookup"><span data-stu-id="3347b-310">Set the <xref:System.Windows.UIElement.CacheMode%2A> property when you need to increase performance for content that is time consuming to render.</span></span> <span data-ttu-id="3347b-311">Para obter mais informações, consulte <xref:System.Windows.Media.BitmapCache>.</span><span class="sxs-lookup"><span data-stu-id="3347b-311">For more information, see <xref:System.Windows.Media.BitmapCache>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Media3D.Viewport2DVisual3D.CacheMode" />
        <altmember cref="T:System.Windows.Media.BitmapCache" />
        <altmember cref="T:System.Windows.Media.BitmapCacheBrush" />
      </Docs>
    </Member>
    <Member MemberName="CacheModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CacheModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CacheModeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.CacheModeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CacheModeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CacheModeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CacheModeProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.CacheModeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-312">Identifica a propriedade de dependência <see cref="P:System.Windows.UIElement.CacheMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-312">Identifies the <see cref="P:System.Windows.UIElement.CacheMode" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureMouse">
      <MemberSignature Language="C#" Value="public bool CaptureMouse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CaptureMouse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.CaptureMouse" />
      <MemberSignature Language="VB.NET" Value="Public Function CaptureMouse () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CaptureMouse();" />
      <MemberSignature Language="F#" Value="abstract member CaptureMouse : unit -&gt; bool&#xA;override this.CaptureMouse : unit -&gt; bool" Usage="uIElement.CaptureMouse " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.CaptureMouse</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3347b-313">Tenta forçar a captura do mouse para esse elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-313">Attempts to force capture of the mouse to this element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3347b-314">
            <see langword="true" /> se o mouse for capturado com êxito; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-314">
              <see langword="true" /> if the mouse is successfully captured; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-315">Para ser capturados, um elemento deve ser habilitado.</span><span class="sxs-lookup"><span data-stu-id="3347b-315">To be captured, an element must be enabled.</span></span> <span data-ttu-id="3347b-316">Verifique se <xref:System.Windows.UIElement.IsEnabled%2A> está `true` antes de chamar <xref:System.Windows.UIElement.CaptureMouse%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-316">Check whether <xref:System.Windows.UIElement.IsEnabled%2A> is `true` before you call <xref:System.Windows.UIElement.CaptureMouse%2A>.</span></span>  
  
 <span data-ttu-id="3347b-317">Se chamar <xref:System.Windows.UIElement.CaptureMouse%2A> retorna `true`, em seguida, <xref:System.Windows.UIElement.IsMouseCaptured%2A> também é `true`.</span><span class="sxs-lookup"><span data-stu-id="3347b-317">If calling <xref:System.Windows.UIElement.CaptureMouse%2A> returns `true`, then <xref:System.Windows.UIElement.IsMouseCaptured%2A> is also `true`.</span></span>  
  
 <span data-ttu-id="3347b-318">Se chamar <xref:System.Windows.UIElement.CaptureMouse%2A> retorna `true`, em seguida, a <xref:System.Windows.UIElement.GotMouseCapture> e <xref:System.Windows.UIElement.IsMouseCapturedChanged> eventos são gerados, com <xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=nameWithType> no evento dados relatados como o elemento no qual o <xref:System.Windows.UIElement.CaptureMouse%2A> método é chamado.</span><span class="sxs-lookup"><span data-stu-id="3347b-318">If calling <xref:System.Windows.UIElement.CaptureMouse%2A> returns `true`, then the <xref:System.Windows.UIElement.GotMouseCapture> and <xref:System.Windows.UIElement.IsMouseCapturedChanged> events are raised, with <xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=nameWithType> in the event data reported as the element where the <xref:System.Windows.UIElement.CaptureMouse%2A> method is called.</span></span> <span data-ttu-id="3347b-319">Se você forçar a captura, você pode interferir capturas existentes — especialmente com as capturas que se relacionam com arrastar e soltar com o mouse.</span><span class="sxs-lookup"><span data-stu-id="3347b-319">If you force capture, you might interfere with existing captures—especially with captures that relate to drag-and-drop with the mouse.</span></span>  
  
 <span data-ttu-id="3347b-320">Para limpar a captura do mouse de todos os elementos, chame <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=nameWithType> com o `element` parâmetro fornecido como `null`.</span><span class="sxs-lookup"><span data-stu-id="3347b-320">To clear mouse capture from all elements, call <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=nameWithType> with the `element` parameter provided as `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3347b-321">O exemplo a seguir implementa um par de manipuladores de mouse e teclas de entrada que capture (e uncapture) o mouse e ativar um modo especial de mouse para exibir um modelo 3D.</span><span class="sxs-lookup"><span data-stu-id="3347b-321">The following example implements a pair of handlers for mouse and key input combination that capture (and uncapture) the mouse and enable a special mouse mode for viewing a 3D model.</span></span>  
  
 [!code-csharp[CubeAnimation#UIElementMouseCapture](~/samples/snippets/csharp/VS_Snippets_Wpf/CubeAnimation/CSharp/Trackball.cs#uielementmousecapture)]
 [!code-vb[CubeAnimation#UIElementMouseCapture](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CubeAnimation/visualbasic/trackball.vb#uielementmousecapture)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.IsMouseCaptured" />
      </Docs>
    </Member>
    <Member MemberName="CaptureStylus">
      <MemberSignature Language="C#" Value="public bool CaptureStylus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CaptureStylus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.CaptureStylus" />
      <MemberSignature Language="VB.NET" Value="Public Function CaptureStylus () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CaptureStylus();" />
      <MemberSignature Language="F#" Value="abstract member CaptureStylus : unit -&gt; bool&#xA;override this.CaptureStylus : unit -&gt; bool" Usage="uIElement.CaptureStylus " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.CaptureStylus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3347b-322">Tenta forçar a captura da caneta para esse elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-322">Attempts to force capture of the stylus to this element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3347b-323">
            <see langword="true" /> se a caneta for capturada com êxito; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-323">
              <see langword="true" /> if the stylus was successfully captured; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-324">A implementação do padrão com base no dispositivo de caneta padrão subjacente sempre retorna `true`.</span><span class="sxs-lookup"><span data-stu-id="3347b-324">The default implementation based on the underlying default stylus device always returns `true`.</span></span> <span data-ttu-id="3347b-325">No entanto, se você estiver estendendo os dispositivos de entrada que fornecem a implementação de dispositivo para o sistema de entrada, é possível criar um sistema com uma implementação de dispositivo de caneta alternativos que pode retornar resultados diferentes.</span><span class="sxs-lookup"><span data-stu-id="3347b-325">However, if you are extending the input devices that provide the device implementation for the input system, it is possible to create a system with an alternative stylus device implementation that might return different results.</span></span>  
  
 <span data-ttu-id="3347b-326">Quando um elemento captura a caneta, ele recebe entrada de caneta, mesmo se a caneta está fora dos limites.</span><span class="sxs-lookup"><span data-stu-id="3347b-326">When an element captures the stylus, it receives stylus input even if the stylus is outside its bounds.</span></span> <span data-ttu-id="3347b-327">Normalmente, a caneta é capturada somente durante as operações de arrastar e soltar.</span><span class="sxs-lookup"><span data-stu-id="3347b-327">The stylus is typically captured only during drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="3347b-328">Chamar este método chama uma subjacente estática <xref:System.Windows.Input.Stylus> método <xref:System.Windows.Input.Stylus.Capture%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-328">Calling this method calls an underlying static <xref:System.Windows.Input.Stylus> method <xref:System.Windows.Input.Stylus.Capture%2A>.</span></span> <span data-ttu-id="3347b-329">O comportamento de captura real é implementado pela implementação de dispositivo de caneta ativa.</span><span class="sxs-lookup"><span data-stu-id="3347b-329">The actual capture behavior is implemented by the active stylus device implementation.</span></span>  
  
 <span data-ttu-id="3347b-330">Para ser capturados, um elemento deve ser habilitado.</span><span class="sxs-lookup"><span data-stu-id="3347b-330">To be captured, an element must be enabled.</span></span> <span data-ttu-id="3347b-331">Verifique se <xref:System.Windows.UIElement.IsEnabled%2A> está `true` retornar antes de chamar <xref:System.Windows.UIElement.CaptureStylus%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-331">Check whether <xref:System.Windows.UIElement.IsEnabled%2A> is `true` return before you call <xref:System.Windows.UIElement.CaptureStylus%2A>.</span></span>  
  
 <span data-ttu-id="3347b-332">Se chamar <xref:System.Windows.UIElement.CaptureStylus%2A> retorna `true`, <xref:System.Windows.UIElement.IsStylusCaptured%2A> também é `true`.</span><span class="sxs-lookup"><span data-stu-id="3347b-332">If calling <xref:System.Windows.UIElement.CaptureStylus%2A> returns `true`, <xref:System.Windows.UIElement.IsStylusCaptured%2A> is also `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureTouch">
      <MemberSignature Language="C#" Value="public bool CaptureTouch (System.Windows.Input.TouchDevice touchDevice);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CaptureTouch(class System.Windows.Input.TouchDevice touchDevice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.CaptureTouch(System.Windows.Input.TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CaptureTouch(System::Windows::Input::TouchDevice ^ touchDevice);" />
      <MemberSignature Language="F#" Value="member this.CaptureTouch : System.Windows.Input.TouchDevice -&gt; bool" Usage="uIElement.CaptureTouch touchDevice" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="touchDevice" Type="System.Windows.Input.TouchDevice" />
      </Parameters>
      <Docs>
        <param name="touchDevice">
          <span data-ttu-id="3347b-333">O dispositivo a ser capturado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-333">The device to capture.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-334">Tenta forçar a captura de um toque para esse elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-334">Attempts to force capture of a touch to this element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3347b-335">
            <see langword="true" /> se o toque especificado for capturado para esse elemento; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-335">
              <see langword="true" /> if the specified touch is captured to this element; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-336"><xref:System.Windows.UIElement.CaptureTouch%2A> retornará `false` se o <xref:System.Windows.Input.TouchDevice> atualmente é capturado para outro elemento.</span><span class="sxs-lookup"><span data-stu-id="3347b-336"><xref:System.Windows.UIElement.CaptureTouch%2A> will return `false` if the <xref:System.Windows.Input.TouchDevice> is currently captured to another element.</span></span>  
  
 <span data-ttu-id="3347b-337">Se <xref:System.Windows.UIElement.CaptureTouch%2A> retorna `true`, em seguida, a <xref:System.Windows.UIElement.GotTouchCapture> é gerado.</span><span class="sxs-lookup"><span data-stu-id="3347b-337">If <xref:System.Windows.UIElement.CaptureTouch%2A> returns `true`, then the <xref:System.Windows.UIElement.GotTouchCapture> event is raised.</span></span>  
  
 <span data-ttu-id="3347b-338">Para liberar a captura de um único toque desse elemento, use o <xref:System.Windows.UIElement.ReleaseTouchCapture%2A> método e especifique o dispositivo de toque para liberar.</span><span class="sxs-lookup"><span data-stu-id="3347b-338">To release capture of a single touch from this element, use the <xref:System.Windows.UIElement.ReleaseTouchCapture%2A> method and specify the touch device to release.</span></span> <span data-ttu-id="3347b-339">Para liberar todos os toques desse elemento, use o <xref:System.Windows.UIElement.ReleaseAllTouchCaptures%2A> método.</span><span class="sxs-lookup"><span data-stu-id="3347b-339">To release all touches from this element, use the <xref:System.Windows.UIElement.ReleaseAllTouchCaptures%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3347b-340">
            <paramref name="touchDevice" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-340">
              <paramref name="touchDevice" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Input.TouchDevice.Capture(System.Windows.IInputElement)" />
      </Docs>
    </Member>
    <Member MemberName="Clip">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Geometry Clip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Geometry Clip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.Clip" />
      <MemberSignature Language="VB.NET" Value="Public Property Clip As Geometry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Geometry ^ Clip { System::Windows::Media::Geometry ^ get(); void set(System::Windows::Media::Geometry ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Clip : System.Windows.Media.Geometry with get, set" Usage="System.Windows.UIElement.Clip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Geometry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-341">Obtém ou define a geometria usada para definir o contorno do conteúdo de um elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-341">Gets or sets the geometry used to define the outline of the contents of an element.</span>
          </span>
          <span data-ttu-id="3347b-342">É uma propriedade de dependência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-342">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3347b-343">A geometria a ser usada para o dimensionamento de área de recorte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-343">The geometry to be used for clipping area sizing.</span>
          </span>
          <span data-ttu-id="3347b-344">O padrão é um <see cref="T:System.Windows.Media.Geometry" /> nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-344">The default is a null <see cref="T:System.Windows.Media.Geometry" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-345">Elementos fora da geometria serão recortados visualmente no layout renderizado.</span><span class="sxs-lookup"><span data-stu-id="3347b-345">Elements outside the geometry will be visually clipped in the rendered layout.</span></span> <span data-ttu-id="3347b-346">A geometria não precisa ser retangular.</span><span class="sxs-lookup"><span data-stu-id="3347b-346">The geometry does not have to be rectangular.</span></span>  
  
<a name="dependencyPropertyInfo_Clip"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3347b-347">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="3347b-347">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-348">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-348">Identifier field</span></span>|<xref:System.Windows.UIElement.ClipProperty>|  
|<span data-ttu-id="3347b-349">Propriedades de metadados definido como `true`</span><span class="sxs-lookup"><span data-stu-id="3347b-349">Metadata properties set to `true`</span></span>|<span data-ttu-id="3347b-350">Nenhum</span><span class="sxs-lookup"><span data-stu-id="3347b-350">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3347b-351">Este exemplo mostra como definir um elemento de estrutura <xref:System.Windows.UIElement.Clip%2A> região.</span><span class="sxs-lookup"><span data-stu-id="3347b-351">This example shows how to define a framework element's <xref:System.Windows.UIElement.Clip%2A> region.</span></span> <span data-ttu-id="3347b-352">Para definir um clipe, use uma <xref:System.Windows.Media.Geometry> (por exemplo, um <xref:System.Windows.Media.EllipseGeometry> para definir o elemento <xref:System.Windows.UIElement.Clip%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="3347b-352">To define a clip, use a <xref:System.Windows.Media.Geometry> (for example, an <xref:System.Windows.Media.EllipseGeometry> to set the element's <xref:System.Windows.UIElement.Clip%2A> property.</span></span> <span data-ttu-id="3347b-353">Somente a área que está dentro da região da geometria estará visível.</span><span class="sxs-lookup"><span data-stu-id="3347b-353">Only the area that is within the region of the geometry will be visible.</span></span>  
  
 <span data-ttu-id="3347b-354">A exemplo a seguir mostra um <xref:System.Windows.Controls.Image> elemento sem uma região de recorte definida.</span><span class="sxs-lookup"><span data-stu-id="3347b-354">The following example shows an <xref:System.Windows.Controls.Image> element without a defined clip region.</span></span> <span data-ttu-id="3347b-355">Como nenhuma região de recorte é definido, toda a imagem é exibida.</span><span class="sxs-lookup"><span data-stu-id="3347b-355">Because no clip region is defined, the entire image is displayed.</span></span>  
  
 [!code-xaml[ClipPathExample#2](~/samples/snippets/csharp/VS_Snippets_Wpf/ClipPathExample/CS/ClipExample.xaml#2)]  
  
 <span data-ttu-id="3347b-356">![Um objeto antes da aplicação de uma região de recorte](~/add/media/mil-task-clip-region-noclip.png "um objeto antes da aplicação de uma região de recorte")</span><span class="sxs-lookup"><span data-stu-id="3347b-356">![An object before applying a clip region](~/add/media/mil-task-clip-region-noclip.png "An object before applying a clip region")</span></span>  
<span data-ttu-id="3347b-357">Imagem com nenhuma região de recorte</span><span class="sxs-lookup"><span data-stu-id="3347b-357">Image with No Clip Region</span></span>  
  
 <span data-ttu-id="3347b-358">No exemplo a seguir, uma imagem idêntica é criada, exceto que ele tem uma região de recorte definida.</span><span class="sxs-lookup"><span data-stu-id="3347b-358">In the next example, an identical Image is created, except that it has a defined clip region.</span></span> <span data-ttu-id="3347b-359">Somente a parte da imagem que estiver dentro da área de <xref:System.Windows.Media.EllipseGeometry> será exibido.</span><span class="sxs-lookup"><span data-stu-id="3347b-359">Only the part of the image that is within the area the <xref:System.Windows.Media.EllipseGeometry> will be displayed.</span></span>  
  
 [!code-xaml[ClipPathExample#4](~/samples/snippets/csharp/VS_Snippets_Wpf/ClipPathExample/CS/ClipExample.xaml#4)]  
  
 <span data-ttu-id="3347b-360">![Um objeto recortado](~/add/media/mil-task-clip-region-ellispe.PNG "um objeto recortado")</span><span class="sxs-lookup"><span data-stu-id="3347b-360">![A clipped object](~/add/media/mil-task-clip-region-ellispe.PNG "A clipped object")</span></span>  
<span data-ttu-id="3347b-361">Imagem com uma região de recorte elíptico</span><span class="sxs-lookup"><span data-stu-id="3347b-361">Image with an Elliptical Clip Region</span></span>  
  
 <span data-ttu-id="3347b-362">O exemplo a seguir mostra como animar um elemento de estrutura <xref:System.Windows.UIElement.Clip%2A> região.</span><span class="sxs-lookup"><span data-stu-id="3347b-362">The following example shows how animate a framework element's <xref:System.Windows.UIElement.Clip%2A> region.</span></span> <span data-ttu-id="3347b-363">Neste exemplo, uma <xref:System.Windows.Media.EllipseGeometry> é usado para definir uma região de corte elíptico para um <xref:System.Windows.Controls.Image> elemento.</span><span class="sxs-lookup"><span data-stu-id="3347b-363">In this example, an <xref:System.Windows.Media.EllipseGeometry> is used to define an elliptical clip region for an <xref:System.Windows.Controls.Image> element.</span></span> <span data-ttu-id="3347b-364">Um <xref:System.Windows.Media.Animation.PointAnimation> anima da geometria da elipse <xref:System.Windows.Media.EllipseGeometry.Center%2A> propriedade de (0, 0) para (200, 150).</span><span class="sxs-lookup"><span data-stu-id="3347b-364">A <xref:System.Windows.Media.Animation.PointAnimation> animates the ellipse geometry's <xref:System.Windows.Media.EllipseGeometry.Center%2A> property from (0, 0) to (200, 150).</span></span> <span data-ttu-id="3347b-365">A animação começa a ser executada depois que a imagem é carregada e repete indefinidamente.</span><span class="sxs-lookup"><span data-stu-id="3347b-365">The animation starts playing after the image is loaded and repeats indefinitely.</span></span>  
  
 [!code-xaml[ClipPathExample#5](~/samples/snippets/csharp/VS_Snippets_Wpf/ClipPathExample/CS/ClipExample.xaml#5)]  
  
 <span data-ttu-id="3347b-366">Para o exemplo completo, consulte o [exemplo de região de recorte](https://msdn.microsoft.com/library/83043a0b-f824-445f-9675-103280c5ca67).</span><span class="sxs-lookup"><span data-stu-id="3347b-366">For the full sample, see the [Clip Region Sample](https://msdn.microsoft.com/library/83043a0b-f824-445f-9675-103280c5ca67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.ClipToBounds" />
      </Docs>
    </Member>
    <Member MemberName="ClipProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ClipProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ClipProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ClipProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClipProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ClipProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ClipProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.ClipProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-367">Identifica a propriedade de dependência <see cref="P:System.Windows.UIElement.Clip" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-367">Identifies the <see cref="P:System.Windows.UIElement.Clip" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClipToBounds">
      <MemberSignature Language="C#" Value="public bool ClipToBounds { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ClipToBounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.ClipToBounds" />
      <MemberSignature Language="VB.NET" Value="Public Property ClipToBounds As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ClipToBounds { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ClipToBounds : bool with get, set" Usage="System.Windows.UIElement.ClipToBounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-368">Obtém ou define um valor indicando se o conteúdo deste elemento (ou conteúdo proveniente dos filhos deste elemento) deve ser recortado para caber dentro do espaço do elemento que o contém.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-368">Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.</span>
          </span>
          <span data-ttu-id="3347b-369">É uma propriedade de dependência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-369">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3347b-370">
            <see langword="true" /> se for necessário recortar o conteúdo; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-370">
              <see langword="true" /> if the content should be clipped; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3347b-371">O valor padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-371">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-372">Para elementos filho, <xref:System.Windows.UIElement.ClipToBounds%2A> tem efeitos diferentes nos comportamentos de layout, dependendo se a altura e largura do elemento pai estão sendo determinados pelo <xref:System.Windows.FrameworkElement.Height%2A>  /  <xref:System.Windows.FrameworkElement.Width%2A> ou <xref:System.Windows.FrameworkElement.MaxHeight%2A>  /  <xref:System.Windows.FrameworkElement.MaxWidth%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-372">For child elements, <xref:System.Windows.UIElement.ClipToBounds%2A> has different effects on layout behaviors depending on whether the height and width of the parent element are being determined by <xref:System.Windows.FrameworkElement.Height%2A> / <xref:System.Windows.FrameworkElement.Width%2A> or <xref:System.Windows.FrameworkElement.MaxHeight%2A> / <xref:System.Windows.FrameworkElement.MaxWidth%2A>.</span></span> <span data-ttu-id="3347b-373"><xref:System.Windows.FrameworkElement.MaxHeight%2A> / <xref:System.Windows.FrameworkElement.MaxWidth%2A> do elemento pai sempre são respeitados independentemente do valor <xref:System.Windows.UIElement.ClipToBounds%2A> e o recorte em vigor sempre recortará o conteúdo com base nesses máximos.</span><span class="sxs-lookup"><span data-stu-id="3347b-373"><xref:System.Windows.FrameworkElement.MaxHeight%2A> / <xref:System.Windows.FrameworkElement.MaxWidth%2A> of the parent element are always respected regardless of the value of <xref:System.Windows.UIElement.ClipToBounds%2A> and the effective clipping will always clip the content based on these maximums.</span></span> <span data-ttu-id="3347b-374">O pai <xref:System.Windows.FrameworkElement.Height%2A>  /  <xref:System.Windows.FrameworkElement.Width%2A> configurações não recortará o conteúdo quando <xref:System.Windows.UIElement.ClipToBounds%2A> está `false`, mas recortará o conteúdo se <xref:System.Windows.UIElement.ClipToBounds%2A> é `true`.</span><span class="sxs-lookup"><span data-stu-id="3347b-374">The parent's <xref:System.Windows.FrameworkElement.Height%2A> / <xref:System.Windows.FrameworkElement.Width%2A> settings will not clip the content when <xref:System.Windows.UIElement.ClipToBounds%2A> is `false`, but will clip the content if <xref:System.Windows.UIElement.ClipToBounds%2A> is `true`.</span></span>  
  
 <span data-ttu-id="3347b-375">Observe que como padrão `false` é o comportamento geral, conforme implementado de <xref:System.Windows.UIElement> classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-375">Note that defaulting to `false` is the general behavior as implemented in the <xref:System.Windows.UIElement> class.</span></span> <span data-ttu-id="3347b-376">É possível para qualquer determinado elemento deriva <xref:System.Windows.UIElement> para substituir os metadados de propriedade de dependência para essa propriedade em que a instância seja padrão para `true` em vez disso.</span><span class="sxs-lookup"><span data-stu-id="3347b-376">It is possible for any given element that derives from <xref:System.Windows.UIElement> to override the dependency property metadata for this property in that instance to default to `true` instead.</span></span> <span data-ttu-id="3347b-377">Várias classes derivadas existentes substituem esses metadados e/ou ajustar o valor da propriedade de dependência padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-377">Several existing derived classes override this metadata and/or adjust the dependency property default value.</span></span>  
  
 <span data-ttu-id="3347b-378"><xref:System.Windows.Controls.InkCanvas>, <xref:System.Windows.Controls.InkPresenter>, e <xref:System.Windows.Controls.Primitives.Popup> cada substituir o valor padrão a ser `true`.</span><span class="sxs-lookup"><span data-stu-id="3347b-378"><xref:System.Windows.Controls.InkCanvas>, <xref:System.Windows.Controls.InkPresenter>, and <xref:System.Windows.Controls.Primitives.Popup> each override the default value to be `true`.</span></span>  
  
 <span data-ttu-id="3347b-379"><xref:System.Windows.FrameworkElement> substitui os metadados para essa propriedade de dependência.</span><span class="sxs-lookup"><span data-stu-id="3347b-379"><xref:System.Windows.FrameworkElement> overrides the metadata for this dependency property.</span></span> <span data-ttu-id="3347b-380">Especificamente, <xref:System.Windows.FrameworkElement> designa a essa propriedade para permitir a herança de valor de propriedade (<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> é `true` nos metadados).</span><span class="sxs-lookup"><span data-stu-id="3347b-380">Specifically, <xref:System.Windows.FrameworkElement> designates this property to allow property value inheritance (<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> is `true` in metadata).</span></span> <span data-ttu-id="3347b-381">Herança do valor da propriedade neste contexto significa que, se não houver elementos filho com nenhum outro valor para <xref:System.Windows.UIElement.ClipToBounds%2A> atribuído por meio de estilos, o valor do elemento pai mais próximo com esse valor atribuído (novamente, seja em estilos, por padrão ou valores locais valores, ou um valor localmente), em seguida, o valor do elemento pai será atribuído a todos os elementos filho não atribuído pelo sistema de propriedades.</span><span class="sxs-lookup"><span data-stu-id="3347b-381">Property value inheritance in this context means that if there are child elements with no other value for <xref:System.Windows.UIElement.ClipToBounds%2A> assigned through local values or styles, the value of the nearest parent element with this value assigned (again, either in styles, by default values, or a locally value), then the value from the parent element will be assigned to all unassigned child elements by the property system.</span></span> <span data-ttu-id="3347b-382">Na prática, isso significa que você pode especificar se deseja permitir que o clipe limites no elemento raiz e que o valor será propagado para todos os elementos filho que têm não especificamente atribuído como `false`.</span><span class="sxs-lookup"><span data-stu-id="3347b-382">In practice this means that you can specify whether to allow clip to bounds at the root element, and that value will propagate to all child elements that have not specifically assigned it as `false`.</span></span>  
  
<a name="dependencyPropertyInfo_ClipToBounds"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3347b-383">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="3347b-383">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-384">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-384">Identifier field</span></span>|<xref:System.Windows.UIElement.ClipToBoundsProperty>|  
|<span data-ttu-id="3347b-385">Propriedades de metadados definido como `true`</span><span class="sxs-lookup"><span data-stu-id="3347b-385">Metadata properties set to `true`</span></span>|<span data-ttu-id="3347b-386">Nenhum</span><span class="sxs-lookup"><span data-stu-id="3347b-386">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.Clip" />
      </Docs>
    </Member>
    <Member MemberName="ClipToBoundsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ClipToBoundsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ClipToBoundsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ClipToBoundsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClipToBoundsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ClipToBoundsProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ClipToBoundsProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.ClipToBoundsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-387">Identifica a propriedade de dependência <see cref="P:System.Windows.UIElement.ClipToBounds" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-387">Identifies the <see cref="P:System.Windows.UIElement.ClipToBounds" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandBindings">
      <MemberSignature Language="C#" Value="public System.Windows.Input.CommandBindingCollection CommandBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.CommandBindingCollection CommandBindings" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.CommandBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandBindings As CommandBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::CommandBindingCollection ^ CommandBindings { System::Windows::Input::CommandBindingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandBindings : System.Windows.Input.CommandBindingCollection" Usage="System.Windows.UIElement.CommandBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.CommandBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-388">Obtém uma coleção de objetos <see cref="T:System.Windows.Input.CommandBinding" /> associados a esse elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-388">Gets a collection of <see cref="T:System.Windows.Input.CommandBinding" /> objects associated with this element.</span>
          </span>
          <span data-ttu-id="3347b-389">Um <see cref="T:System.Windows.Input.CommandBinding" /> permite a manipulação de comando desse elemento e declara a ligação entre um comando, seus eventos e os manipuladores anexados por esse elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-389">A <see cref="T:System.Windows.Input.CommandBinding" /> enables command handling for this element, and declares the linkage between a command, its events, and the handlers attached by this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3347b-390">A coleção de todos os objetos <see cref="T:System.Windows.Input.CommandBinding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-390">The collection of all <see cref="T:System.Windows.Input.CommandBinding" /> objects.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-391">Outra maneira comum para preencher a <xref:System.Windows.UIElement.CommandBindings%2A> coleção é usar <xref:System.Windows.Input.CommandManager> métodos por meio de programação.</span><span class="sxs-lookup"><span data-stu-id="3347b-391">Another typical way to populate the <xref:System.Windows.UIElement.CommandBindings%2A> collection is to use <xref:System.Windows.Input.CommandManager> methods programmatically.</span></span>  
  
<a name="xamlPropertyElementUsage_CommandBindings"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="3347b-392">Uso do elemento propriedade XAML</span><span class="sxs-lookup"><span data-stu-id="3347b-392">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.CommandBindings>  
    oneOrMoreCommandBindings  
  </object.CommandBindings>  
</object>  
```  
  
<a name="xamlValues_CommandBindings"></a>   
## <a name="xaml-values"></a><span data-ttu-id="3347b-393">Valores XAML</span><span class="sxs-lookup"><span data-stu-id="3347b-393">XAML Values</span></span>  
 <span data-ttu-id="3347b-394">*oneOrMoreCommandBindings*</span><span class="sxs-lookup"><span data-stu-id="3347b-394">*oneOrMoreCommandBindings*</span></span>  
 <span data-ttu-id="3347b-395">Um ou mais <xref:System.Windows.Input.CommandBinding> elementos.</span><span class="sxs-lookup"><span data-stu-id="3347b-395">One or more <xref:System.Windows.Input.CommandBinding> elements.</span></span> <span data-ttu-id="3347b-396">Cada um deles deve ter uma <xref:System.Windows.Input.CommandBinding.Command%2A> atributo definido como um comando conhecido, e os atributos definidos para o <xref:System.Windows.Input.CommandBinding.CanExecute> e <xref:System.Windows.Input.CommandBinding.Executed> implementações de manipulador.</span><span class="sxs-lookup"><span data-stu-id="3347b-396">Each of these should have a <xref:System.Windows.Input.CommandBinding.Command%2A> attribute set to a known command, and attributes set for the <xref:System.Windows.Input.CommandBinding.CanExecute> and <xref:System.Windows.Input.CommandBinding.Executed> handler implementations.</span></span> <span data-ttu-id="3347b-397">Para obter mais informações, consulte <xref:System.Windows.Input.CommandBinding>.</span><span class="sxs-lookup"><span data-stu-id="3347b-397">For more information see <xref:System.Windows.Input.CommandBinding>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3347b-398">O exemplo a seguir adiciona um <xref:System.Windows.Input.CommandBinding> para uma janela usando a marcação.</span><span class="sxs-lookup"><span data-stu-id="3347b-398">The following example adds a <xref:System.Windows.Input.CommandBinding> to a window using markup.</span></span> <span data-ttu-id="3347b-399">Observe que no [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], o <xref:System.Windows.Input.CommandBindingCollection> não é declarado na marcação como um elemento; o objeto de coleção é inferido pelo tipo que usa a propriedade, e você preencher o elemento de propriedade com um ou mais <xref:System.Windows.Input.CommandBinding> elementos:</span><span class="sxs-lookup"><span data-stu-id="3347b-399">Note that in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], the <xref:System.Windows.Input.CommandBindingCollection> is not declared in the markup as an element; the collection object is inferred by the type that the property takes, and you populate the property element with one or more <xref:System.Windows.Input.CommandBinding> elements:</span></span>  
  
 [!code-xaml[commandWithHandler#CommandHandlerCommandBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml#commandhandlercommandbinding)]  
  
 <span data-ttu-id="3347b-400">Para obter mais informações sobre o [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] sintaxe para coleções, consulte [sintaxe de XAML em detalhes](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md).</span><span class="sxs-lookup"><span data-stu-id="3347b-400">For more information about the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntax for collections, see [XAML Syntax In Detail](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md).</span></span>  
  
 <span data-ttu-id="3347b-401">O exemplo a seguir faz essencialmente a mesma coisa no código:</span><span class="sxs-lookup"><span data-stu-id="3347b-401">The following example does essentially the same thing in code:</span></span>  
  
 [!code-csharp[CommandHandlerProcedural#CommandHandlerBindingInit](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandHandlerProcedural/CSharp/Window1.xaml.cs#commandhandlerbindinginit)]
 [!code-vb[CommandHandlerProcedural#CommandHandlerBindingInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandHandlerProcedural/visualbasic/window1.xaml.vb#commandhandlerbindinginit)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="DesiredSize">
      <MemberSignature Language="C#" Value="public System.Windows.Size DesiredSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Size DesiredSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.DesiredSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DesiredSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Size DesiredSize { System::Windows::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DesiredSize : System.Windows.Size" Usage="System.Windows.UIElement.DesiredSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-402">Obtém o tamanho que esse elemento calculou durante o passo de medição do processo de layout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-402">Gets the size that this element computed during the measure pass of the layout process.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3347b-403">O tamanho calculado, que se torna o tamanho desejado para o passo de organização.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-403">The computed size, which becomes the desired size for the arrange pass.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-404">O valor retornado por essa propriedade será somente uma medida válida se o valor da <xref:System.Windows.UIElement.IsMeasureValid%2A> é de propriedade `true`.</span><span class="sxs-lookup"><span data-stu-id="3347b-404">The value returned by this property will only be a valid measurement if the value of the <xref:System.Windows.UIElement.IsMeasureValid%2A> property is `true`.</span></span>  
  
 <span data-ttu-id="3347b-405"><xref:System.Windows.UIElement.DesiredSize%2A> é tipicamente verificado como um dos fatores medida quando você implementa o comportamento de layout, como substituições <xref:System.Windows.FrameworkElement.ArrangeOverride%2A>, <xref:System.Windows.FrameworkElement.MeasureOverride%2A>, ou <xref:System.Windows.UIElement.OnRender%2A> (no <xref:System.Windows.UIElement.OnRender%2A> caso, você pode verificar <xref:System.Windows.UIElement.RenderSize%2A> em vez disso, mas isso depende do seu implementação).</span><span class="sxs-lookup"><span data-stu-id="3347b-405"><xref:System.Windows.UIElement.DesiredSize%2A> is typically checked as one of the measurement factors when you implement layout behavior overrides such as <xref:System.Windows.FrameworkElement.ArrangeOverride%2A>, <xref:System.Windows.FrameworkElement.MeasureOverride%2A>, or <xref:System.Windows.UIElement.OnRender%2A> (in the <xref:System.Windows.UIElement.OnRender%2A> case, you might check <xref:System.Windows.UIElement.RenderSize%2A> instead, but this depends on your implementation).</span></span> <span data-ttu-id="3347b-406">Dependendo do cenário, <xref:System.Windows.UIElement.DesiredSize%2A> pode ser totalmente respeitadas pela sua lógica de implementação, restrições em <xref:System.Windows.UIElement.DesiredSize%2A> pode ser aplicado, e essas restrições também podem alterar outras características do elemento pai ou elemento filho.</span><span class="sxs-lookup"><span data-stu-id="3347b-406">Depending on the scenario, <xref:System.Windows.UIElement.DesiredSize%2A> might be fully respected by your implementation logic, constraints on <xref:System.Windows.UIElement.DesiredSize%2A> might be applied, and such constraints might also change other characteristics of either the parent element or child element.</span></span> <span data-ttu-id="3347b-407">Por exemplo, um controle que dá suporte a regiões roláveis (mas optar por não derivar os controles de nível de estrutura do WPF que já permitem regiões roláveis) poderia comparar o tamanho disponível para <xref:System.Windows.UIElement.DesiredSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-407">For example, a control that supports scrollable regions (but chooses not to derive from the WPF framework-level controls that already enable scrollable regions) could compare available size to <xref:System.Windows.UIElement.DesiredSize%2A>.</span></span> <span data-ttu-id="3347b-408">O controle, em seguida, poderia definir um estado interno que habilitado barras de rolagem no [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] para esse controle.</span><span class="sxs-lookup"><span data-stu-id="3347b-408">The control could then set an internal state that enabled scrollbars in the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] for that control.</span></span> <span data-ttu-id="3347b-409">Ou, <xref:System.Windows.UIElement.DesiredSize%2A> poderia potencialmente também ser ignorado em determinados cenários.</span><span class="sxs-lookup"><span data-stu-id="3347b-409">Or, <xref:System.Windows.UIElement.DesiredSize%2A> could potentially also be ignored in certain scenarios.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3347b-410">A exemplo a seguir mostra <xref:System.Windows.UIElement.DesiredSize%2A> como parte de um <xref:System.Windows.FrameworkElement.MeasureOverride%2A> implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-410">The following example shows <xref:System.Windows.UIElement.DesiredSize%2A> as part of a <xref:System.Windows.FrameworkElement.MeasureOverride%2A> implementation.</span></span> <span data-ttu-id="3347b-411">Observe como <xref:System.Windows.UIElement.Measure%2A> é chamado imediatamente antes de obter <xref:System.Windows.UIElement.DesiredSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-411">Notice how <xref:System.Windows.UIElement.Measure%2A> is called immediately prior to obtaining <xref:System.Windows.UIElement.DesiredSize%2A>.</span></span> <span data-ttu-id="3347b-412">Isso garante que <xref:System.Windows.UIElement.DesiredSize%2A> contém um valor legítimo.</span><span class="sxs-lookup"><span data-stu-id="3347b-412">This assures that <xref:System.Windows.UIElement.DesiredSize%2A> holds a legitimate value.</span></span>  
  
 [!code-cpp[PlotPanel#2](~/samples/snippets/cpp/VS_Snippets_Wpf/PlotPanel/CPP/PlotPanel.cpp#2)]
 [!code-csharp[PlotPanel#2](~/samples/snippets/csharp/VS_Snippets_Wpf/PlotPanel/CSharp/PlotPanel.cs#2)]
 [!code-vb[PlotPanel#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PlotPanel/VisualBasic/PlotPanel.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)" />
        <altmember cref="M:System.Windows.UIElement.Measure(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="DragEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.DragEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragEnter As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragEnter;" />
      <MemberSignature Language="F#" Value="member this.DragEnter : System.Windows.DragEventHandler " Usage="member this.DragEnter : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-413">Ocorre quando o sistema de entrada relata um evento arrastar subjacente com este elemento como o destino de arrastar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-413">Occurs when the input system reports an underlying drag event with this element as the drag target.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-414">Esse evento cria um alias para o <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.UIElement.DragEnter?displayProperty=nameWithType> faz parte da classe a lista de membros quando <xref:System.Windows.UIElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="3347b-414">This event creates an alias for the <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.DragEnter?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="3347b-415">Manipuladores de eventos que estão anexados para o <xref:System.Windows.UIElement.DragEnter> evento associado subjacente <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-415">Event handlers that are attached to the <xref:System.Windows.UIElement.DragEnter> event are attached to the underlying <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_DragEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-416">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-416">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-417">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-417">Identifier field</span></span>|<xref:System.Windows.UIElement.DragEnterEvent>|  
|<span data-ttu-id="3347b-418">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-418">Routing strategy</span></span>|<span data-ttu-id="3347b-419">Propagação</span><span class="sxs-lookup"><span data-stu-id="3347b-419">Bubbling</span></span>|  
|<span data-ttu-id="3347b-420">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-420">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="3347b-421">O evento por túnel correspondente é <xref:System.Windows.UIElement.PreviewDragEnter>.</span><span class="sxs-lookup"><span data-stu-id="3347b-421">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewDragEnter>.</span></span>  
  
-   <span data-ttu-id="3347b-422">Substituir <xref:System.Windows.UIElement.OnDragEnter%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-422">Override <xref:System.Windows.UIElement.OnDragEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragLeave" />
        <altmember cref="E:System.Windows.UIElement.DragOver" />
      </Docs>
    </Member>
    <Member MemberName="DragEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.DragEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DragEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.DragEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-423">Identifica o evento roteado <see cref="E:System.Windows.UIElement.DragEnter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-423">Identifies the <see cref="E:System.Windows.UIElement.DragEnter" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-424">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-424">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-425">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-425">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-426">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-426">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-427">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-427">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-428">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-428">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.DragLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragLeave As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragLeave;" />
      <MemberSignature Language="F#" Value="member this.DragLeave : System.Windows.DragEventHandler " Usage="member this.DragLeave : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-429">Ocorre quando o sistema de entrada relata um evento arrastar subjacente com este elemento como a origem de arrastar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-429">Occurs when the input system reports an underlying drag event with this element as the drag origin.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-430">Esse evento cria um alias para o <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> anexado a eventos para essa classe, de modo que <xref:System.Windows.UIElement.DragLeave?displayProperty=nameWithType> faz parte da classe a lista de membros quando <xref:System.Windows.UIElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="3347b-430">This event creates an alias for the <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement.DragLeave?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="3347b-431">Manipuladores de eventos que estão anexados para o <xref:System.Windows.UIElement.DragLeave> evento associado subjacente <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-431">Event handlers that are attached to the <xref:System.Windows.UIElement.DragLeave> event are attached to the underlying <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_DragLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-432">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-432">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-433">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-433">Identifier field</span></span>|<xref:System.Windows.UIElement.DragLeaveEvent>|  
|<span data-ttu-id="3347b-434">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-434">Routing strategy</span></span>|<span data-ttu-id="3347b-435">Propagação</span><span class="sxs-lookup"><span data-stu-id="3347b-435">Bubbling</span></span>|  
|<span data-ttu-id="3347b-436">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-436">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="3347b-437">O evento por túnel correspondente é <xref:System.Windows.DragDrop.PreviewDragLeave>.</span><span class="sxs-lookup"><span data-stu-id="3347b-437">The corresponding tunneling event is <xref:System.Windows.DragDrop.PreviewDragLeave>.</span></span>  
  
-   <span data-ttu-id="3347b-438">Substituir <xref:System.Windows.UIElement.OnDragLeave%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-438">Override <xref:System.Windows.UIElement.OnDragLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragEnter" />
        <altmember cref="E:System.Windows.UIElement.DragOver" />
        <altmember cref="E:System.Windows.UIElement.GiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="DragLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.DragLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DragLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.DragLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-439">Identifica o evento roteado <see cref="E:System.Windows.UIElement.DragLeave" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-439">Identifies the <see cref="E:System.Windows.UIElement.DragLeave" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-440">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-440">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-441">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-441">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-442">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-442">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-443">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-443">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-444">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-444">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragOver">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragOver;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragOver" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.DragOver" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragOver As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragOver;" />
      <MemberSignature Language="F#" Value="member this.DragOver : System.Windows.DragEventHandler " Usage="member this.DragOver : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-445">Ocorre quando o sistema de entrada relata um evento do tipo "arrastar" subjacente com esse elemento como a reprodução automática potencial.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-445">Occurs when the input system reports an underlying drag event with this element as the potential drop target.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-446">Esse evento ocorre mesmo se a operação de arrastar se origina dos limites do elemento.</span><span class="sxs-lookup"><span data-stu-id="3347b-446">This event occurs even if the drag originates in the element bounds.</span></span> <span data-ttu-id="3347b-447">Se a operação de arrastar inicia fora dos limites e, em seguida, move dentro, esse evento também é gerado, bem como <xref:System.Windows.UIElement.DragEnter> e relacionados a eventos de visualização.</span><span class="sxs-lookup"><span data-stu-id="3347b-447">If the drag starts outside the bounds and then moves inside, this event is also raised, as well as <xref:System.Windows.UIElement.DragEnter> and related preview events.</span></span>  
  
 <span data-ttu-id="3347b-448">Esse evento cria um alias para o <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> anexado a eventos para essa classe, de modo que <xref:System.Windows.UIElement.DragOver?displayProperty=nameWithType> faz parte da classe a lista de membros quando <xref:System.Windows.UIElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="3347b-448">This event creates an alias for the <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement.DragOver?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="3347b-449">Manipuladores de eventos que estão anexados para o <xref:System.Windows.UIElement.DragOver> evento associado subjacente <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-449">Event handlers that are attached to the <xref:System.Windows.UIElement.DragOver> event are attached to the underlying <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_DragOver"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-450">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-450">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-451">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-451">Identifier field</span></span>|<xref:System.Windows.UIElement.DragOverEvent>|  
|<span data-ttu-id="3347b-452">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-452">Routing strategy</span></span>|<span data-ttu-id="3347b-453">Propagação</span><span class="sxs-lookup"><span data-stu-id="3347b-453">Bubbling</span></span>|  
|<span data-ttu-id="3347b-454">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-454">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="3347b-455">O evento por túnel correspondente é <xref:System.Windows.DragDrop.PreviewDragOver>.</span><span class="sxs-lookup"><span data-stu-id="3347b-455">The corresponding tunneling event is <xref:System.Windows.DragDrop.PreviewDragOver>.</span></span>  
  
-   <span data-ttu-id="3347b-456">Substituir <xref:System.Windows.UIElement.OnDragOver%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-456">Override <xref:System.Windows.UIElement.OnDragOver%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragEnter" />
        <altmember cref="E:System.Windows.UIElement.DragLeave" />
        <altmember cref="E:System.Windows.UIElement.Drop" />
      </Docs>
    </Member>
    <Member MemberName="DragOverEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragOverEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragOverEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.DragOverEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragOverEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragOverEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DragOverEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.DragOverEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-457">Identifica o evento roteado <see cref="E:System.Windows.UIElement.DragOver" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-457">Identifies the <see cref="E:System.Windows.UIElement.DragOver" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-458">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-458">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-459">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-459">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-460">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-460">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-461">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-461">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-462">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-462">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Drop">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler Drop;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler Drop" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.Drop" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Drop As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ Drop;" />
      <MemberSignature Language="F#" Value="member this.Drop : System.Windows.DragEventHandler " Usage="member this.Drop : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-463">Ocorre quando o sistema de entrada relata um evento soltar subjacente com esse elemento sendo uma reprodução automática.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-463">Occurs when the input system reports an underlying drop event with this element as the drop target.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-464">Esse evento cria um alias para o <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> anexado a eventos para essa classe, de modo que <xref:System.Windows.UIElement.Drop?displayProperty=nameWithType> faz parte da classe a lista de membros quando <xref:System.Windows.UIElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="3347b-464">This event creates an alias for the <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement.Drop?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="3347b-465">Manipuladores de eventos que estão anexados para o <xref:System.Windows.UIElement.Drop> evento associado subjacente <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-465">Event handlers that are attached to the <xref:System.Windows.UIElement.Drop> event are attached to the underlying <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_Drop"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-466">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-466">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-467">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-467">Identifier field</span></span>|<xref:System.Windows.UIElement.DropEvent>|  
|<span data-ttu-id="3347b-468">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-468">Routing strategy</span></span>|<span data-ttu-id="3347b-469">Propagação</span><span class="sxs-lookup"><span data-stu-id="3347b-469">Bubbling</span></span>|  
|<span data-ttu-id="3347b-470">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-470">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="3347b-471">O evento por túnel correspondente é <xref:System.Windows.UIElement.PreviewDrop>.</span><span class="sxs-lookup"><span data-stu-id="3347b-471">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewDrop>.</span></span>  
  
-   <span data-ttu-id="3347b-472">Substituir <xref:System.Windows.UIElement.OnDrop%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-472">Override <xref:System.Windows.UIElement.OnDrop%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragOver" />
        <altmember cref="E:System.Windows.UIElement.MouseLeftButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="DropEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DropEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DropEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.DropEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DropEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DropEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DropEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.DropEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-473">Identifica o evento roteado <see cref="E:System.Windows.UIElement.Drop" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-473">Identifies the <see cref="E:System.Windows.UIElement.Drop" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-474">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-474">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-475">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-475">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-476">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-476">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-477">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-477">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-478">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-478">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Effect">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Effects.Effect Effect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Effects.Effect Effect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.Effect" />
      <MemberSignature Language="VB.NET" Value="Public Property Effect As Effect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Effects::Effect ^ Effect { System::Windows::Media::Effects::Effect ^ get(); void set(System::Windows::Media::Effects::Effect ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Effect : System.Windows.Media.Effects.Effect with get, set" Usage="System.Windows.UIElement.Effect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.Effect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-479">Obtém ou define o efeito de bitmap a ser aplicado ao <see cref="T:System.Windows.UIElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-479">Gets or sets the bitmap effect to apply to the <see cref="T:System.Windows.UIElement" />.</span>
          </span>
          <span data-ttu-id="3347b-480">É uma propriedade de dependência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-480">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3347b-481">Um <see cref="T:System.Windows.Media.Effects.Effect" /> que representa o efeito de bitmap.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-481">An <see cref="T:System.Windows.Media.Effects.Effect" /> that represents the bitmap effect.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-482">Use o <xref:System.Windows.UIElement.Effect%2A> propriedade para aplicar um efeito de bitmap para uma <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="3347b-482">Use the <xref:System.Windows.UIElement.Effect%2A> property to apply a bitmap effect to a <xref:System.Windows.UIElement>.</span></span>  
  
<a name="dependencyPropertyInfo_Effect"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3347b-483">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="3347b-483">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-484">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-484">Identifier field</span></span>|<xref:System.Windows.UIElement.EffectProperty>|  
|<span data-ttu-id="3347b-485">Propriedades de metadados definido como `true`</span><span class="sxs-lookup"><span data-stu-id="3347b-485">Metadata properties set to `true`</span></span>|<span data-ttu-id="3347b-486">Nenhum</span><span class="sxs-lookup"><span data-stu-id="3347b-486">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3347b-487">O XAML a seguir mostra como atribuir um personalizado <xref:System.Windows.Media.Effects.ShaderEffect> para o <xref:System.Windows.UIElement.Effect%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="3347b-487">The following XAML shows how to assign a custom <xref:System.Windows.Media.Effects.ShaderEffect> to the <xref:System.Windows.UIElement.Effect%2A> property.</span></span>  
  
 [!code-xaml[System.Windows.Media.Effects.ShaderEffect#1000](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Media.Effects.ShaderEffect/CS/Window1.xaml#1000)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.ShaderEffect" />
      </Docs>
    </Member>
    <Member MemberName="EffectProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty EffectProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty EffectProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.EffectProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EffectProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ EffectProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable EffectProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.EffectProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-488">Identifica a propriedade de dependência <see cref="P:System.Windows.UIElement.Effect" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-488">Identifies the <see cref="P:System.Windows.UIElement.Effect" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public bool Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Function Focus () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Focus();" />
      <MemberSignature Language="F#" Value="abstract member Focus : unit -&gt; bool&#xA;override this.Focus : unit -&gt; bool" Usage="uIElement.Focus " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.Focus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3347b-489">Tenta definir o foco para esse elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-489">Attempts to set focus to this element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3347b-490">
            <see langword="true" /> se o foco do teclado e o foco lógico foram definidos para esse elemento; <see langword="false" /> somente se o foco lógico foi definido para esse elemento ou se a chamada para esse método não forçou a mudança de foco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-490">
              <see langword="true" /> if keyboard focus and logical focus were set to this element; <see langword="false" /> if only logical focus was set to this element, or if the call to this method did not force the focus to change.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-491">Para ser focalizável, <xref:System.Windows.UIElement.Focusable%2A> e <xref:System.Windows.UIElement.IsEnabled%2A> devem ser `true`.</span><span class="sxs-lookup"><span data-stu-id="3347b-491">To be focusable, <xref:System.Windows.UIElement.Focusable%2A> and <xref:System.Windows.UIElement.IsEnabled%2A> must both be `true`.</span></span>  
  
 <span data-ttu-id="3347b-492">Mesmo se um elemento é a manipulação de eventos focalizável e habilitada, dentro de uma árvore específica, (por exemplo, para um controle de composição) pode responder a eventos de foco visualização, não permitindo que nele, o foco, portanto, esse método retornaria `false`.</span><span class="sxs-lookup"><span data-stu-id="3347b-492">Even if an element is focusable and enabled, event handling within a specific tree, (such as for a composite control) might respond to the preview focus events by not allowing focus there, thus this method would return `false`.</span></span>  
  
 <span data-ttu-id="3347b-493">Foco em geral é regido por dois conceitos separados: foco do teclado e foco lógico, que nem sempre são idênticos.</span><span class="sxs-lookup"><span data-stu-id="3347b-493">Focus in general is governed by two separate concepts: keyboard focus and logical focus, which are not always identical.</span></span>  <span data-ttu-id="3347b-494">Para obter mais informações, consulte [visão geral do foco](~/docs/framework/wpf/advanced/focus-overview.md) ou [visão geral de entrada](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3347b-494">For more information, see [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md) or [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="3347b-495">Se chamar <xref:System.Windows.UIElement.Focus%2A> retorna `true`, <xref:System.Windows.UIElement.IsKeyboardFocused%2A> e <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> também são `true`.</span><span class="sxs-lookup"><span data-stu-id="3347b-495">If calling <xref:System.Windows.UIElement.Focus%2A> returns `true`, <xref:System.Windows.UIElement.IsKeyboardFocused%2A> and <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> are also `true`.</span></span>  
  
 <span data-ttu-id="3347b-496">Se as propriedades relacionadas não ainda estiverem `true`, quando você chama <xref:System.Windows.UIElement.Focus%2A>, um ou mais dos seguintes eventos são gerados na seguinte ordem: <xref:System.Windows.UIElement.PreviewLostKeyboardFocus>, <xref:System.Windows.UIElement.PreviewGotKeyboardFocus> (origem é o novo destino de foco), <xref:System.Windows.UIElement.IsKeyboardFocusedChanged>, <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged>, <xref:System.Windows.UIElement.LostKeyboardFocus>, <xref:System.Windows.UIElement.GotKeyboardFocus> (origem é o novo destino de foco).</span><span class="sxs-lookup"><span data-stu-id="3347b-496">If the related properties are not already `true`, when you call  <xref:System.Windows.UIElement.Focus%2A>, one or more of the following events are raised in the following order: <xref:System.Windows.UIElement.PreviewLostKeyboardFocus>, <xref:System.Windows.UIElement.PreviewGotKeyboardFocus> (source is the new focus target), <xref:System.Windows.UIElement.IsKeyboardFocusedChanged>, <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged>, <xref:System.Windows.UIElement.LostKeyboardFocus>, <xref:System.Windows.UIElement.GotKeyboardFocus> (source is the new focus target).</span></span>  
  
 <span data-ttu-id="3347b-497">Para essa chamada seja bem-sucedida, algum outro elemento no aplicativo precisava ter foco anteriormente.</span><span class="sxs-lookup"><span data-stu-id="3347b-497">In order for this call to be successful, some other element in the application needed to have focus previously.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3347b-498">O exemplo a seguir define o foco para um <xref:System.Windows.Controls.TextBox> referenciado pelo <xref:System.Windows.FrameworkElement.Name%2A>e, em seguida, ajusta a posição do cursor dentro do <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="3347b-498">The following example sets focus to a <xref:System.Windows.Controls.TextBox> referenced by <xref:System.Windows.FrameworkElement.Name%2A>, and then adjusts the position of the cursor within the <xref:System.Windows.Controls.TextBox>.</span></span>  
  
 [!code-csharp[TextBox_CursorToEnd#UIElementFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBox_CursorToEnd/CSharp/Window1.xaml.cs#uielementfocus)]
 [!code-vb[TextBox_CursorToEnd#UIElementFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBox_CursorToEnd/VisualBasic/Window1.xaml.vb#uielementfocus)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Focusable">
      <MemberSignature Language="C#" Value="public bool Focusable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Focusable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.Focusable" />
      <MemberSignature Language="VB.NET" Value="Public Property Focusable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Focusable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Focusable : bool with get, set" Usage="System.Windows.UIElement.Focusable" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.Focusable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-499">Obtém ou define um valor que indica se um elemento pode receber foco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-499">Gets or sets a value that indicates whether the element can receive focus.</span>
          </span>
          <span data-ttu-id="3347b-500">É uma propriedade de dependência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-500">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3347b-501">
            <see langword="true" /> se o elemento for focalizável; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-501">
              <see langword="true" /> if the element is focusable; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3347b-502">O padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-502">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-503">Somente o elemento focalizado recebe entrada do teclado.</span><span class="sxs-lookup"><span data-stu-id="3347b-503">Only the focused element receives keyboard input.</span></span>  
  
 <span data-ttu-id="3347b-504"><xref:System.Windows.UIElement.Focusable%2A> é o [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] acessador de propriedade para o que é na realidade uma propriedade de dependência.</span><span class="sxs-lookup"><span data-stu-id="3347b-504"><xref:System.Windows.UIElement.Focusable%2A> is the [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] property accessor for what is in reality a dependency property.</span></span> <span data-ttu-id="3347b-505">Essa propriedade de dependência particular com bastante frequência tem seu valor de aparente "default" definir de forma diferente nas classes de elemento derivado, especialmente nos controles.</span><span class="sxs-lookup"><span data-stu-id="3347b-505">This particular dependency property quite frequently has its apparent "default" value set differently in derived element classes, particularly in controls.</span></span> <span data-ttu-id="3347b-506">Isso normalmente ocorre em uma das duas maneiras:</span><span class="sxs-lookup"><span data-stu-id="3347b-506">This commonly occurs in one of two ways:</span></span>  
  
-   <span data-ttu-id="3347b-507">A propriedade de dependência é herdada por uma classe derivada específica, mas que derivado classe substitui os metadados da propriedade de dependência e altera o valor da propriedade padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-507">The dependency property is inherited by a particular derived class, but that derived class overrides the metadata of the dependency property and changes the property default value.</span></span>  
  
-   <span data-ttu-id="3347b-508">Um estilo ou modelo é aplicado a um elemento, que define esse valor da propriedade de dependência de maneira diferente.</span><span class="sxs-lookup"><span data-stu-id="3347b-508">A style or template is applied to an element, which sets that dependency property value differently.</span></span>  
  
 <span data-ttu-id="3347b-509">Por exemplo, o aparente "padrão" de <xref:System.Windows.UIElement.Focusable%2A> para um <xref:System.Windows.Controls.Button> controle será `true`, embora <xref:System.Windows.Controls.Button> herda <xref:System.Windows.UIElement.Focusable%2A> como uma [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] propriedade diretamente do <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="3347b-509">For example, the apparent "default" of <xref:System.Windows.UIElement.Focusable%2A> for a <xref:System.Windows.Controls.Button> control will be `true`, even though <xref:System.Windows.Controls.Button> inherits <xref:System.Windows.UIElement.Focusable%2A> as a [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] property directly from <xref:System.Windows.UIElement>.</span></span> <span data-ttu-id="3347b-510">Isso ocorre porque o valor de metadados aplicados para o <xref:System.Windows.UIElement.Focusable%2A> propriedade de dependência foi substituída no construtor estático do <xref:System.Windows.Controls.Control> classe, que está situado entre base <xref:System.Windows.Controls.Button> e <xref:System.Windows.UIElement> na hierarquia de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-510">This is because the applied metadata value for the <xref:System.Windows.UIElement.Focusable%2A> dependency property was overridden within the static constructor of the <xref:System.Windows.Controls.Control> base class, which is situated between <xref:System.Windows.Controls.Button> and <xref:System.Windows.UIElement> in the class hierarchy.</span></span>  
  
 <span data-ttu-id="3347b-511">Quando herdada pela <xref:System.Windows.Controls.Control> ou suas classes derivadas, <xref:System.Windows.Controls.Control> redefine o valor padrão dessa propriedade para ser `true`.</span><span class="sxs-lookup"><span data-stu-id="3347b-511">When inherited by <xref:System.Windows.Controls.Control> or its derived classes, <xref:System.Windows.Controls.Control> redefines the default value of this property to be `true`.</span></span>  
  
 <span data-ttu-id="3347b-512">Quando herdada pela <xref:System.Windows.Controls.Label> (que é um <xref:System.Windows.Controls.Control> classe derivada), o valor padrão é novamente redefinido para ser `false`.</span><span class="sxs-lookup"><span data-stu-id="3347b-512">When inherited by <xref:System.Windows.Controls.Label> (which is a <xref:System.Windows.Controls.Control> derived class), the default value is again redefined to be `false`.</span></span>  
  
<a name="dependencyPropertyInfo_Focusable"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3347b-513">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="3347b-513">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-514">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-514">Identifier field</span></span>|<xref:System.Windows.UIElement.FocusableProperty>|  
|<span data-ttu-id="3347b-515">Propriedades de metadados definido como `true`</span><span class="sxs-lookup"><span data-stu-id="3347b-515">Metadata properties set to `true`</span></span>|<span data-ttu-id="3347b-516">Nenhum</span><span class="sxs-lookup"><span data-stu-id="3347b-516">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3347b-517">O exemplo de código a seguir ilustra um modelo de controle para um determinado controle personalizado, que define <xref:System.Windows.UIElement.Focusable%2A> `false` em um dos elementos dentro do modelo.</span><span class="sxs-lookup"><span data-stu-id="3347b-517">The following example code illustrates a control template for a particular custom control, which sets <xref:System.Windows.UIElement.Focusable%2A> `false` on one of the elements within the template.</span></span>  
  
 [!code-xaml[RichTextBox_NoScrollViewer#_ControlTemplate](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBox_NoScrollViewer/CS/window1.xaml#_controltemplate)]
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3347b-518">Ao derivar de <see cref="T:System.Windows.UIElement" /> diretamente (ao contrário de <see cref="T:System.Windows.Controls.Control" />), considere se desejar que o elemento a ser focalizável, porque, por padrão o elemento não será focalizável.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3347b-518">When deriving from <see cref="T:System.Windows.UIElement" /> directly (as opposed to from <see cref="T:System.Windows.Controls.Control" />), consider whether you wish your element to be focusable, because by default the element will not be focusable.</span>
            </span>
            <span data-ttu-id="3347b-519">Se desejar que o elemento a ser focalizável, substitua os metadados para essa propriedade no construtor estático do seu tipo, da seguinte maneira:</span>
            <span class="sxs-lookup">
              <span data-stu-id="3347b-519">If you wish your element to be focusable, override the metadata for this property within your type's static constructor as follows:</span>
            </span>
            <span data-ttu-id="3347b-520">[! código csharp[CorePseudocode #UIElementShortOverride](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#uielementshortoverride)] [! código vb[CorePseudocode #UIElementShortOverride](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#uielementshortoverride)]</span>
            <span class="sxs-lookup">
              <span data-stu-id="3347b-520">[!code-csharp[CorePseudocode#UIElementShortOverride](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#uielementshortoverride)] [!code-vb[CorePseudocode#UIElementShortOverride](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#uielementshortoverride)]</span>
            </span>
            <span data-ttu-id="3347b-521">onde <paramref name="myElement" /> deve ser o nome de classe do tipo que você está substituindo o valor de metadados no.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3347b-521">where <paramref name="myElement" /> should be the class name of the type that you are overriding the metadata value on.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
        <altmember cref="E:System.Windows.UIElement.GotKeyboardFocus" />
        <altmember cref="E:System.Windows.UIElement.LostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="FocusableChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler FocusableChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler FocusableChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.FocusableChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FocusableChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ FocusableChanged;" />
      <MemberSignature Language="F#" Value="member this.FocusableChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.FocusableChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-522">Ocorre quando o valor da propriedade <see cref="P:System.Windows.UIElement.Focusable" /> muda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-522">Occurs when the value of the <see cref="P:System.Windows.UIElement.Focusable" /> property changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-523">Esse membro é um [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] evento, não um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-523">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.Focusable" />
      </Docs>
    </Member>
    <Member MemberName="FocusableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FocusableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FocusableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.FocusableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FocusableProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FocusableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FocusableProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.FocusableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-524">Identifica a propriedade de dependência <see cref="P:System.Windows.UIElement.Focusable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-524">Identifies the <see cref="P:System.Windows.UIElement.Focusable" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAnimationBaseValue">
      <MemberSignature Language="C#" Value="public object GetAnimationBaseValue (System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetAnimationBaseValue(class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAnimationBaseValue (dp As DependencyProperty) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetAnimationBaseValue(System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="abstract member GetAnimationBaseValue : System.Windows.DependencyProperty -&gt; obj&#xA;override this.GetAnimationBaseValue : System.Windows.DependencyProperty -&gt; obj" Usage="uIElement.GetAnimationBaseValue dp" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.GetAnimationBaseValue(System.Windows.DependencyProperty)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dp">
          <span data-ttu-id="3347b-525">A propriedade de dependência a ser verificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-525">The dependency property to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-526">Retorna o valor da propriedade base da propriedade especificada neste elemento, desconsiderando qualquer possível valor animado de uma animação parada ou em execução.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-526">Returns the base property value for the specified property on this element, disregarding any possible animated value from a running or stopped animation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3347b-527">O valor da propriedade como se não houvesse nenhuma animação anexada à propriedade de dependência especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-527">The property value as if no animations are attached to the specified dependency property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-528">Se não houvesse nenhuma animação é anexadas à propriedade o <xref:System.Windows.UIElement.GetAnimationBaseValue%2A> valor retornado sempre é idêntico de <xref:System.Windows.DependencyObject.GetValue%2A> valor de retorno.</span><span class="sxs-lookup"><span data-stu-id="3347b-528">If no animations are attached to the property, then the <xref:System.Windows.UIElement.GetAnimationBaseValue%2A> return value is always identical to the <xref:System.Windows.DependencyObject.GetValue%2A> return value.</span></span> <span data-ttu-id="3347b-529">Se houver animações anexadas, toda animação possíveis derivado valores, incluindo o início e parada de valores é ignoradas e o valor da propriedade é determinado com base em todas as outras entradas possíveis.</span><span class="sxs-lookup"><span data-stu-id="3347b-529">If there are animations attached, then all possible animation derived values including the start and stop values are ignored, and the property value is determined based on all other possible inputs.</span></span> <span data-ttu-id="3347b-530">Para obter mais informações, consulte [Precedência do valor da propriedade de dependência](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span><span class="sxs-lookup"><span data-stu-id="3347b-530">For more information, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3347b-531">O exemplo a seguir implementa um manipulador que relata o valor de base de uma imagem <xref:System.Windows.FrameworkElement.Width%2A> propriedade em um <xref:System.Windows.Controls.Button>, bem como o valor de base de uma transformação.</span><span class="sxs-lookup"><span data-stu-id="3347b-531">The following example implements a handler that reports the base value of an animated <xref:System.Windows.FrameworkElement.Width%2A> property on a <xref:System.Windows.Controls.Button>, as well as the base value of a transform.</span></span>  
  
 [!code-csharp[timingbehaviors_procedural_snip#GetAnimationBaseValue](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_procedural_snip/CSharp/GetAnimationBaseValueExample.cs#getanimationbasevalue)]
 [!code-vb[timingbehaviors_procedural_snip#GetAnimationBaseValue](~/samples/snippets/visualbasic/VS_Snippets_Wpf/timingbehaviors_procedural_snip/visualbasic/getanimationbasevalueexample.vb#getanimationbasevalue)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetLayoutClip">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Media.Geometry GetLayoutClip (System.Windows.Size layoutSlotSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Media.Geometry GetLayoutClip(valuetype System.Windows.Size layoutSlotSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.GetLayoutClip(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetLayoutClip (layoutSlotSize As Size) As Geometry" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Media::Geometry ^ GetLayoutClip(System::Windows::Size layoutSlotSize);" />
      <MemberSignature Language="F#" Value="abstract member GetLayoutClip : System.Windows.Size -&gt; System.Windows.Media.Geometry&#xA;override this.GetLayoutClip : System.Windows.Size -&gt; System.Windows.Media.Geometry" Usage="uIElement.GetLayoutClip layoutSlotSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Geometry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutSlotSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="layoutSlotSize">
          <span data-ttu-id="3347b-532">O tamanho disponível fornecido pelo elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-532">The available size provided by the element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-533">Retorna uma geometria de recorte alternativa que representa a região que seria recortada se <see cref="P:System.Windows.UIElement.ClipToBounds" /> estivesse definido como <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-533">Returns an alternative clipping geometry that represents the region that would be clipped if <see cref="P:System.Windows.UIElement.ClipToBounds" /> were set to <see langword="true" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3347b-534">A geometria de recorte em potencial.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-534">The potential clipping geometry.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-535">A implementação padrão retornará um valor legítimo, mas não usa o `layoutSlotSize` parâmetro em seus cálculos.</span><span class="sxs-lookup"><span data-stu-id="3347b-535">The default implementation will return a legitimate value, but does not use the `layoutSlotSize` parameter in its calculations.</span></span> <span data-ttu-id="3347b-536">Em vez disso, ele usa o valor de <xref:System.Windows.UIElement.RenderSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-536">Instead it uses the value of <xref:System.Windows.UIElement.RenderSize%2A>.</span></span>  
  
 <span data-ttu-id="3347b-537">Esse método substancialmente é substituído pelo imediatamente derivada <xref:System.Windows.FrameworkElement> classe e o <xref:System.Windows.FrameworkElement> substituição produz um comportamento mais sofisticado para elementos de nível de framework WPF gerais.</span><span class="sxs-lookup"><span data-stu-id="3347b-537">This method is substantially overridden by the immediately derived <xref:System.Windows.FrameworkElement> class, and the <xref:System.Windows.FrameworkElement> override produces a more sophisticated behavior for general WPF framework-level elements.</span></span> <span data-ttu-id="3347b-538">Para obter detalhes, consulte <xref:System.Windows.FrameworkElement.GetLayoutClip%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3347b-538">For details, see <xref:System.Windows.FrameworkElement.GetLayoutClip%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.GetLayoutClip(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="GetUIParentCore">
      <MemberSignature Language="C#" Value="protected internal virtual System.Windows.DependencyObject GetUIParentCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Windows.DependencyObject GetUIParentCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.GetUIParentCore" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetUIParentCore () As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Windows::DependencyObject ^ GetUIParentCore();" />
      <MemberSignature Language="F#" Value="abstract member GetUIParentCore : unit -&gt; System.Windows.DependencyObject&#xA;override this.GetUIParentCore : unit -&gt; System.Windows.DependencyObject" Usage="uIElement.GetUIParentCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3347b-539">Quando substituído em uma classe derivada, retornará um pai [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] alternativo para esse elemento se nenhum pai visual existir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-539">When overridden in a derived class, returns an alternative [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] parent for this element if no visual parent exists.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3347b-540">Um objeto se a implementação de uma classe derivada tiver uma conexão alternativa pai com o relatório.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-540">An object, if implementation of a derived class has an alternate parent connection to report.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-541">Retorna a implementação de virtual padrão desse método `null`.</span><span class="sxs-lookup"><span data-stu-id="3347b-541">The default virtual implementation of this method returns `null`.</span></span> <span data-ttu-id="3347b-542"><xref:System.Windows.FrameworkElement> Fornece uma implementação prática.</span><span class="sxs-lookup"><span data-stu-id="3347b-542"><xref:System.Windows.FrameworkElement> provides a practical implementation.</span></span>  
  
 <span data-ttu-id="3347b-543">Pais alternativos são usados para roteamento de eventos, nos casos em que um elemento cria uma estrutura pai alternativo para que seus eventos são roteados de forma que diverge do padrão de roteamento na árvore visual para o pai padrão, ou para baixo no estratégia de roteamento de visualização.</span><span class="sxs-lookup"><span data-stu-id="3347b-543">Alternative parents are used for event routing, in cases where an element creates an alternative parent structure so that its events are routed in a way that diverges from the standard pattern of routing up the visual tree to the standard parent, or downward in the preview routing strategy.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GiveFeedback">
      <MemberSignature Language="C#" Value="public event System.Windows.GiveFeedbackEventHandler GiveFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.GiveFeedbackEventHandler GiveFeedback" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.GiveFeedback" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GiveFeedback As GiveFeedbackEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::GiveFeedbackEventHandler ^ GiveFeedback;" />
      <MemberSignature Language="F#" Value="member this.GiveFeedback : System.Windows.GiveFeedbackEventHandler " Usage="member this.GiveFeedback : System.Windows.GiveFeedbackEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.GiveFeedbackEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-544">Ocorre quando o sistema de entrada relata um evento de arrastar e soltar subjacente que envolve este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-544">Occurs when the input system reports an underlying drag-and-drop event that involves this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-545">O <xref:System.Windows.UIElement.GiveFeedback> evento permite que a origem de um evento de arrastar para modificar a aparência do ponteiro do mouse para dar ao usuário feedback visual durante uma operação de arrastar e soltar.</span><span class="sxs-lookup"><span data-stu-id="3347b-545">The <xref:System.Windows.UIElement.GiveFeedback> event allows the source of a drag event to modify the appearance of the mouse pointer in order to give the user visual feedback during a drag-and-drop operation.</span></span> <span data-ttu-id="3347b-546">Os comentários visuais reforçam que uma operação de arrastar-e-soltar está em processo.</span><span class="sxs-lookup"><span data-stu-id="3347b-546">The visual feedback reinforces that a drag-and-drop operation is in process.</span></span>  
  
 <span data-ttu-id="3347b-547">Esse evento cria um alias para o <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> anexado a eventos para essa classe, de modo que <xref:System.Windows.UIElement.GiveFeedback> faz parte da classe a lista de membros quando <xref:System.Windows.UIElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="3347b-547">This event creates an alias for the <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement.GiveFeedback> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="3347b-548">Manipuladores de eventos que estão anexados para o <xref:System.Windows.UIElement.GiveFeedback> evento associado subjacente <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-548">Event handlers that are attached to the <xref:System.Windows.UIElement.GiveFeedback> event are attached to the underlying <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GiveFeedback"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-549">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-549">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-550">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-550">Identifier field</span></span>|<xref:System.Windows.UIElement.GiveFeedbackEvent>|  
|<span data-ttu-id="3347b-551">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-551">Routing strategy</span></span>|<span data-ttu-id="3347b-552">Propagação</span><span class="sxs-lookup"><span data-stu-id="3347b-552">Bubbling</span></span>|  
|<span data-ttu-id="3347b-553">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-553">Delegate</span></span>|<xref:System.Windows.GiveFeedbackEventHandler>|  
  
-   <span data-ttu-id="3347b-554">O evento por túnel correspondente é <xref:System.Windows.UIElement.PreviewGiveFeedback>.</span><span class="sxs-lookup"><span data-stu-id="3347b-554">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewGiveFeedback>.</span></span>  
  
-   <span data-ttu-id="3347b-555">Substituir <xref:System.Windows.UIElement.OnGiveFeedback%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-555">Override <xref:System.Windows.UIElement.OnGiveFeedback%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragLeave" />
      </Docs>
    </Member>
    <Member MemberName="GiveFeedbackEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GiveFeedbackEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GiveFeedbackEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.GiveFeedbackEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GiveFeedbackEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GiveFeedbackEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GiveFeedbackEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.GiveFeedbackEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-556">Identifica o evento roteado <see cref="E:System.Windows.UIElement.GiveFeedback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-556">Identifies the <see cref="E:System.Windows.UIElement.GiveFeedback" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-557">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-557">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-558">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-558">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-559">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-559">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-560">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-560">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-561">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-561">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler GotFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler GotFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.GotFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotFocus As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ GotFocus;" />
      <MemberSignature Language="F#" Value="member this.GotFocus : System.Windows.RoutedEventHandler " Usage="member this.GotFocus : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-562">Ocorre quando este elemento tem foco lógico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-562">Occurs when this element gets logical focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-563">Foco lógico é diferente do foco do teclado se foco deliberadamente é forçado por meio de uma chamada de método, mas o foco do teclado anterior existe em um escopo diferente.</span><span class="sxs-lookup"><span data-stu-id="3347b-563">Logical focus differs from keyboard focus if focus is deliberately forced by using a method call but the previous keyboard focus exists in a different scope.</span></span> <span data-ttu-id="3347b-564">Nesse cenário, o foco do teclado permanece onde ele é e o elemento no qual um <xref:System.Windows.UIElement.Focus%2A> método é chamado ainda obtém de foco lógico.</span><span class="sxs-lookup"><span data-stu-id="3347b-564">In this scenario, keyboard focus remains where it is and the element where a <xref:System.Windows.UIElement.Focus%2A> method is called still gets logical focus.</span></span>  
  
 <span data-ttu-id="3347b-565">Uma interpretação mais precisa desse evento é que ele é gerado quando o valor da <xref:System.Windows.UIElement.IsFocused%2A> propriedade de um elemento na rota é alterada de `false` para `true`.</span><span class="sxs-lookup"><span data-stu-id="3347b-565">A more precise interpretation of this event is that it is raised when the value of the <xref:System.Windows.UIElement.IsFocused%2A> property of an element in the route is changed from `false` to `true`.</span></span>  
  
 <span data-ttu-id="3347b-566">Como este evento usa o roteamento por propagação, o elemento que recebe o foco pode ser um elemento filho em vez do elemento no qual o manipulador de eventos, na verdade, está anexado.</span><span class="sxs-lookup"><span data-stu-id="3347b-566">Because this event uses bubbling routing, the element that receives focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="3347b-567">Verifique o <xref:System.Windows.RoutedEventArgs.Source%2A> nos dados do evento para determinar o elemento real que ganhou o foco.</span><span class="sxs-lookup"><span data-stu-id="3347b-567">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that gained focus.</span></span>  
  
<a name="routedEventInfo_GotFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-568">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-568">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-569">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-569">Identifier field</span></span>|<xref:System.Windows.UIElement.GotFocusEvent>|  
|<span data-ttu-id="3347b-570">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-570">Routing strategy</span></span>|<span data-ttu-id="3347b-571">Propagação</span><span class="sxs-lookup"><span data-stu-id="3347b-571">Bubbling</span></span>|  
|<span data-ttu-id="3347b-572">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-572">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
-   <span data-ttu-id="3347b-573">Não há nenhum evento de túnel correspondente.</span><span class="sxs-lookup"><span data-stu-id="3347b-573">There is no corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="3347b-574">Substituir <xref:System.Windows.UIElement.OnGotFocus%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-574">Override <xref:System.Windows.UIElement.OnGotFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.GotKeyboardFocus" />
        <altmember cref="M:System.Windows.UIElement.Focus" />
      </Docs>
    </Member>
    <Member MemberName="GotFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.GotFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.GotFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-575">Identifica o evento roteado <see cref="E:System.Windows.UIElement.GotFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-575">Identifies the <see cref="E:System.Windows.UIElement.GotFocus" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-576">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-576">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-577">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-577">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-578">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-578">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-579">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-579">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-580">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-580">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler GotKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler GotKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.GotKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ GotKeyboardFocus;" />
      <MemberSignature Language="F#" Value="member this.GotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " Usage="member this.GotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-581">Ocorre quando o teclado está focalizado neste elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-581">Occurs when the keyboard is focused on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-582"><xref:System.Windows.UIElement.IsKeyboardFocusedChanged> é um evento semelhante que rastreia as alterações de status em uma propriedade que mantém o estado de foco para um elemento; o <xref:System.Windows.UIElement.GotKeyboardFocus> é gerado em muitas das mesmas circunstâncias.</span><span class="sxs-lookup"><span data-stu-id="3347b-582"><xref:System.Windows.UIElement.IsKeyboardFocusedChanged> is a similar event that tracks status changes in a property that maintains the focus state for an element; the <xref:System.Windows.UIElement.GotKeyboardFocus> event is raised in many of the same circumstances.</span></span>  
  
 <span data-ttu-id="3347b-583">Como este evento usa o roteamento por propagação, o elemento que tem o foco pode ser um elemento filho em vez do elemento no qual o manipulador de eventos, na verdade, está anexado.</span><span class="sxs-lookup"><span data-stu-id="3347b-583">Because this event uses bubbling routing, the element that has focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="3347b-584">Verifique o <xref:System.Windows.RoutedEventArgs.Source%2A> nos dados do evento para determinar o elemento real que tem o foco.</span><span class="sxs-lookup"><span data-stu-id="3347b-584">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has focus.</span></span>  
  
 <span data-ttu-id="3347b-585">Esse evento cria um alias para o <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> anexado a eventos para essa classe, de modo que <xref:System.Windows.UIElement.GotKeyboardFocus> faz parte da classe a lista de membros quando <xref:System.Windows.UIElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="3347b-585">This event creates an alias for the <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement.GotKeyboardFocus> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="3347b-586">Manipuladores de eventos que estão anexados para o <xref:System.Windows.UIElement.GotKeyboardFocus> evento associado subjacente <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-586">Event handlers that are attached to the <xref:System.Windows.UIElement.GotKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GotKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-587">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-587">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-588">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-588">Identifier field</span></span>|<xref:System.Windows.UIElement.GotKeyboardFocusEvent>|  
|<span data-ttu-id="3347b-589">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-589">Routing strategy</span></span>|<span data-ttu-id="3347b-590">Propagação</span><span class="sxs-lookup"><span data-stu-id="3347b-590">Bubbling</span></span>|  
|<span data-ttu-id="3347b-591">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-591">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="3347b-592">O evento por túnel correspondente é <xref:System.Windows.UIElement.PreviewGotKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="3347b-592">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewGotKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="3347b-593">Substituir <xref:System.Windows.UIElement.OnGotKeyboardFocus%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-593">Override <xref:System.Windows.UIElement.OnGotKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.LostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="GotKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.GotKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.GotKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-594">Identifica o evento roteado <see cref="E:System.Windows.UIElement.GotKeyboardFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-594">Identifies the <see cref="E:System.Windows.UIElement.GotKeyboardFocus" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-595">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-595">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-596">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-596">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-597">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-597">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-598">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-598">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-599">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-599">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotMouseCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler GotMouseCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler GotMouseCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.GotMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotMouseCapture As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ GotMouseCapture;" />
      <MemberSignature Language="F#" Value="member this.GotMouseCapture : System.Windows.Input.MouseEventHandler " Usage="member this.GotMouseCapture : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-600">Ocorre quando este elemento captura o mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-600">Occurs when this element captures the mouse.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-601">Quando um elemento captura o mouse, ele recebe entrada do mouse, mesmo se o ponteiro do mouse está fora dos limites.</span><span class="sxs-lookup"><span data-stu-id="3347b-601">When an element captures the mouse, it receives mouse input even if the mouse pointer is outside its bounds.</span></span> <span data-ttu-id="3347b-602">O mouse normalmente é capturado apenas durante operações de arrastar e soltar e permanece capturado até que ocorra a ação drop da operação de arrastar e soltar.</span><span class="sxs-lookup"><span data-stu-id="3347b-602">The mouse is typically captured only during drag-and-drop operations and remains captured until the drop action of the drag-and-drop operation occurs.</span></span>  
  
 <span data-ttu-id="3347b-603">Como este evento usa o roteamento por propagação, o elemento que tem captura pode ser um elemento filho em vez do elemento no qual o manipulador de eventos, na verdade, está anexado.</span><span class="sxs-lookup"><span data-stu-id="3347b-603">Because this event uses bubbling routing, the element that has capture might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="3347b-604">Verifique o <xref:System.Windows.RoutedEventArgs.Source%2A> no evento de captura de dados para determinar o elemento real que tem o mouse.</span><span class="sxs-lookup"><span data-stu-id="3347b-604">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has mouse capture.</span></span>  
  
 <span data-ttu-id="3347b-605">Esse evento cria um alias para o <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> anexado a eventos para essa classe, de modo que <xref:System.Windows.UIElement.GotMouseCapture> faz parte da classe a lista de membros quando <xref:System.Windows.UIElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="3347b-605">This event creates an alias for the <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> attached event for  this class so that <xref:System.Windows.UIElement.GotMouseCapture> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="3347b-606">Manipuladores de eventos que estão anexados para o <xref:System.Windows.UIElement.GotMouseCapture> evento associado subjacente <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-606">Event handlers that are attached to the <xref:System.Windows.UIElement.GotMouseCapture> event are attached to the underlying <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GotMouseCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-607">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-607">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-608">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-608">Identifier field</span></span>|<xref:System.Windows.UIElement.GotMouseCaptureEvent>|  
|<span data-ttu-id="3347b-609">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-609">Routing strategy</span></span>|<span data-ttu-id="3347b-610">Propagação</span><span class="sxs-lookup"><span data-stu-id="3347b-610">Bubbling</span></span>|  
|<span data-ttu-id="3347b-611">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-611">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="3347b-612">Não há nenhum evento de túnel correspondente definido.</span><span class="sxs-lookup"><span data-stu-id="3347b-612">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="3347b-613">Substituir <xref:System.Windows.UIElement.OnGotMouseCapture%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-613">Override <xref:System.Windows.UIElement.OnGotMouseCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.CaptureMouse" />
      </Docs>
    </Member>
    <Member MemberName="GotMouseCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotMouseCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotMouseCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.GotMouseCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotMouseCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotMouseCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotMouseCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.GotMouseCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-614">Identifica o evento roteado <see cref="E:System.Windows.UIElement.GotMouseCapture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-614">Identifies the <see cref="E:System.Windows.UIElement.GotMouseCapture" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-615">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-615">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-616">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-616">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-617">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-617">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-618">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-618">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-619">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-619">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotStylusCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler GotStylusCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler GotStylusCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.GotStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotStylusCapture As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ GotStylusCapture;" />
      <MemberSignature Language="F#" Value="member this.GotStylusCapture : System.Windows.Input.StylusEventHandler " Usage="member this.GotStylusCapture : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-620">Ocorre quando este elemento captura a caneta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-620">Occurs when this element captures the stylus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-621">Quando um elemento captura a caneta, ele recebe entrada de caneta, mesmo se o ponteiro está fora dos limites.</span><span class="sxs-lookup"><span data-stu-id="3347b-621">When an element captures the stylus, it receives stylus input even if the pointer is outside its bounds.</span></span> <span data-ttu-id="3347b-622">A caneta normalmente é capturada apenas durante operações de arrastar e soltar e retém captura até que ocorra a ação drop da operação de arrastar e soltar.</span><span class="sxs-lookup"><span data-stu-id="3347b-622">The stylus is typically captured only during drag-and-drop operations and retains capture until the drop action of the drag-and-drop operation occurs.</span></span>  
  
 <span data-ttu-id="3347b-623">Como este evento usa o roteamento por propagação, o elemento que tem captura pode ser um elemento filho em vez do elemento no qual o manipulador de eventos, na verdade, está anexado.</span><span class="sxs-lookup"><span data-stu-id="3347b-623">Because this event uses bubbling routing, the element that has capture might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="3347b-624">Verifique o <xref:System.Windows.RoutedEventArgs.Source%2A> nos dados do evento para determinar o elemento real que tem captura.</span><span class="sxs-lookup"><span data-stu-id="3347b-624">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has capture.</span></span>  
  
 <span data-ttu-id="3347b-625">Esse evento cria um alias para o evento anexado para essa classe, de modo que <xref:System.Windows.UIElement.GotStylusCapture> faz parte da classe a lista de membros quando <xref:System.Windows.UIElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="3347b-625">This event creates an alias for the attached event for this class so that <xref:System.Windows.UIElement.GotStylusCapture> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="3347b-626">Manipuladores de eventos que estão anexados para o <xref:System.Windows.UIElement.GotStylusCapture> evento associado subjacente <xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-626">Event handlers that are attached to the <xref:System.Windows.UIElement.GotStylusCapture> event are attached to the underlying <xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GotStylusCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-627">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-627">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-628">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-628">Identifier field</span></span>|<xref:System.Windows.UIElement.GotStylusCaptureEvent>|  
|<span data-ttu-id="3347b-629">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-629">Routing strategy</span></span>|<span data-ttu-id="3347b-630">Propagação</span><span class="sxs-lookup"><span data-stu-id="3347b-630">Bubbling</span></span>|  
|<span data-ttu-id="3347b-631">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-631">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="3347b-632">Não há nenhum evento de túnel correspondente definido.</span><span class="sxs-lookup"><span data-stu-id="3347b-632">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="3347b-633">Substituir <xref:System.Windows.UIElement.OnGotStylusCapture%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-633">Override <xref:System.Windows.UIElement.OnGotStylusCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotStylusCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotStylusCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotStylusCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.GotStylusCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotStylusCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotStylusCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotStylusCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.GotStylusCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-634">Identifica o evento roteado <see cref="E:System.Windows.UIElement.GotStylusCapture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-634">Identifies the <see cref="E:System.Windows.UIElement.GotStylusCapture" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-635">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-635">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-636">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-636">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-637">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-637">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-638">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-638">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-639">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-639">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotTouchCapture">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; GotTouchCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; GotTouchCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.GotTouchCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotTouchCapture As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ GotTouchCapture;" />
      <MemberSignature Language="F#" Value="member this.GotTouchCapture : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.GotTouchCapture : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-640">Ocorre quando um toque é capturado para esse elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-640">Occurs when a touch is captured to this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_GotTouchCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-641">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-641">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-642">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-642">Identifier field</span></span>|<xref:System.Windows.UIElement.GotTouchCaptureEvent>|  
|<span data-ttu-id="3347b-643">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-643">Routing strategy</span></span>|<span data-ttu-id="3347b-644">Propagação</span><span class="sxs-lookup"><span data-stu-id="3347b-644">Bubbling</span></span>|  
|<span data-ttu-id="3347b-645">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-645">Delegate</span></span>|<span data-ttu-id="3347b-646"><xref:System.EventHandler%601> do tipo <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="3347b-646"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="3347b-647">Substituir <xref:System.Windows.UIElement.OnGotTouchCapture%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-647">Override <xref:System.Windows.UIElement.OnGotTouchCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotTouchCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotTouchCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotTouchCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.GotTouchCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotTouchCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotTouchCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotTouchCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.GotTouchCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-648">Identifica o evento roteado <see cref="E:System.Windows.UIElement.GotTouchCapture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-648">Identifies the <see cref="E:System.Windows.UIElement.GotTouchCapture" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAnimatedProperties">
      <MemberSignature Language="C#" Value="public bool HasAnimatedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAnimatedProperties" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.HasAnimatedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasAnimatedProperties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasAnimatedProperties { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasAnimatedProperties : bool" Usage="System.Windows.UIElement.HasAnimatedProperties" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Media.Animation.IAnimatable.HasAnimatedProperties</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-649">Obtém um valor que indica se este elemento tem todas as propriedades animadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-649">Gets a value indicating whether this element has any animated properties.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3347b-650">
            <see langword="true" /> se este elemento tem animações anexadas a uma de suas propriedades; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-650">
              <see langword="true" /> if this element has animations attached to any of its properties; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-651">Essa propriedade retorna `true` para persistentes animações (unclocked, sempre em execução), ou para as animações que têm uma linha do tempo específica.</span><span class="sxs-lookup"><span data-stu-id="3347b-651">This property returns `true` either for persistent (unclocked, always-running) animations, or for animations that have a specific timeline.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasEffectiveKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal virtual bool HasEffectiveKeyboardFocus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasEffectiveKeyboardFocus" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.HasEffectiveKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property HasEffectiveKeyboardFocus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool HasEffectiveKeyboardFocus { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasEffectiveKeyboardFocus : bool" Usage="System.Windows.UIElement.HasEffectiveKeyboardFocus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-652">Obtém um valor que indica se o <see cref="T:System.Windows.UIElement" /> tem foco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-652">Gets a value that indicates whether the <see cref="T:System.Windows.UIElement" /> has focus.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3347b-653">
            <see langword="true" /> se o <see cref="T:System.Windows.UIElement" /> tiver o foco; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-653">
              <see langword="true" /> if the <see cref="T:System.Windows.UIElement" /> has focus; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-654">As subclasses podem substituir essa propriedade para especificar quando o elemento tem foco do teclado.</span><span class="sxs-lookup"><span data-stu-id="3347b-654">Subclasses can override this property to specify when the element has keyboard focus.</span></span>  <span data-ttu-id="3347b-655">Isso é útil quando sua <xref:System.Windows.UIElement> contém elementos que podem ter o foco do teclado e você deseja que o elemento ao relatório que tem o foco.</span><span class="sxs-lookup"><span data-stu-id="3347b-655">This is useful when your <xref:System.Windows.UIElement> contains elements that can have keyboard focus and you want your element to report that it has focus.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="HitTestCore">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-656">Implementa <see cref="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)" /> para fornecer o comportamento do teste de clique do elemento base.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-656">Implements <see cref="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)" /> to supply base element hit testing behavior.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HitTestCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.GeometryHitTestResult HitTestCore (System.Windows.Media.GeometryHitTestParameters hitTestParameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Media.GeometryHitTestResult HitTestCore(class System.Windows.Media.GeometryHitTestParameters hitTestParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.HitTestCore(System.Windows.Media.GeometryHitTestParameters)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HitTestCore (hitTestParameters As GeometryHitTestParameters) As GeometryHitTestResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Media::GeometryHitTestResult ^ HitTestCore(System::Windows::Media::GeometryHitTestParameters ^ hitTestParameters);" />
      <MemberSignature Language="F#" Value="override this.HitTestCore : System.Windows.Media.GeometryHitTestParameters -&gt; System.Windows.Media.GeometryHitTestResult" Usage="uIElement.HitTestCore hitTestParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.GeometryHitTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hitTestParameters" Type="System.Windows.Media.GeometryHitTestParameters" />
      </Parameters>
      <Docs>
        <param name="hitTestParameters">
          <span data-ttu-id="3347b-657">Descreve o teste de clique a ser executado, incluindo o ponto de clique inicial.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-657">Describes the hit test to perform, including the initial hit point.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-658">Implementa <see cref="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)" /> para fornecer o comportamento do teste de clique do elemento base (retornando <see cref="T:System.Windows.Media.GeometryHitTestResult" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-658">Implements <see cref="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)" /> to supply base element hit testing behavior (returning <see cref="T:System.Windows.Media.GeometryHitTestResult" />).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3347b-659">Resultados do teste, incluindo a geometria avaliada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-659">Results of the test, including the evaluated geometry.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-660">Consulte o método virtual original <xref:System.Windows.Media.Visual.HitTestCore%2A?displayProperty=nameWithType> para obter informações sobre como substituir esse método em ainda mais as classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-660">See the original virtual method <xref:System.Windows.Media.Visual.HitTestCore%2A?displayProperty=nameWithType> for information on overriding this method in further derived classes.</span></span> <span data-ttu-id="3347b-661">Observe que vários controles específicos (<xref:System.Windows.Controls.TextBlock>, por exemplo) têm implementações diferentes, que substituem este.</span><span class="sxs-lookup"><span data-stu-id="3347b-661">Note that several specific controls (<xref:System.Windows.Controls.TextBlock>, for example) do have distinct implementations, which override this one.</span></span>  
  
 <span data-ttu-id="3347b-662">Esse método não se destina a ser chamado do código do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="3347b-662">This method is not intended to be called from your application code.</span></span> <span data-ttu-id="3347b-663">Esse método dá suporte a ocorrências testes comportamentos internos que são expostos por vários aspectos do sistema de entrada (se o ponteiro do mouse está sobre um elemento, por exemplo).</span><span class="sxs-lookup"><span data-stu-id="3347b-663">This method supports internal hit testing behaviors that are exposed by various aspects of the input system (whether the mouse pointer is over an element, for example).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTestCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.HitTestResult HitTestCore (System.Windows.Media.PointHitTestParameters hitTestParameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Media.HitTestResult HitTestCore(class System.Windows.Media.PointHitTestParameters hitTestParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.HitTestCore(System.Windows.Media.PointHitTestParameters)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HitTestCore (hitTestParameters As PointHitTestParameters) As HitTestResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Media::HitTestResult ^ HitTestCore(System::Windows::Media::PointHitTestParameters ^ hitTestParameters);" />
      <MemberSignature Language="F#" Value="override this.HitTestCore : System.Windows.Media.PointHitTestParameters -&gt; System.Windows.Media.HitTestResult" Usage="uIElement.HitTestCore hitTestParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.HitTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hitTestParameters" Type="System.Windows.Media.PointHitTestParameters" />
      </Parameters>
      <Docs>
        <param name="hitTestParameters">
          <span data-ttu-id="3347b-664">Descreve o teste de clique a ser executado, incluindo o ponto de clique inicial.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-664">Describes the hit test to perform, including the initial hit point.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-665">Implementa <see cref="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.PointHitTestParameters)" /> para fornecer o comportamento do teste de clique do elemento base (retornando <see cref="T:System.Windows.Media.HitTestResult" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-665">Implements <see cref="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.PointHitTestParameters)" /> to supply base element hit testing behavior (returning <see cref="T:System.Windows.Media.HitTestResult" />).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3347b-666">Resultados do teste, incluindo o ponto avaliado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-666">Results of the test, including the evaluated point.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-667">Consulte o método virtual original <xref:System.Windows.Media.Visual.HitTestCore%2A?displayProperty=nameWithType> para obter informações sobre como substituir esse método em ainda mais as classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-667">See the original virtual method <xref:System.Windows.Media.Visual.HitTestCore%2A?displayProperty=nameWithType> for information on overriding this method in further derived classes.</span></span> <span data-ttu-id="3347b-668">Observe que vários controles específicos (<xref:System.Windows.Controls.TextBlock>, por exemplo) têm implementações distintas, que substituem <xref:System.Windows.UIElement.HitTestCore%2A> conforme definido pelo <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="3347b-668">Note that several specific controls (<xref:System.Windows.Controls.TextBlock>, for example) do have distinct implementations, which override <xref:System.Windows.UIElement.HitTestCore%2A> as defined by <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="3347b-669">Esse método não se destina a ser chamado do código do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="3347b-669">This method is not intended to be called from your application code.</span></span> <span data-ttu-id="3347b-670">Esse método dá suporte a ocorrências testes comportamentos internos que são expostos por vários aspectos do sistema de entrada (se o ponteiro do mouse está sobre um elemento, por exemplo).</span><span class="sxs-lookup"><span data-stu-id="3347b-670">This method supports internal hit testing behaviors that are exposed by various aspects of the input system (whether the mouse pointer is over an element, for example).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputBindings">
      <MemberSignature Language="C#" Value="public System.Windows.Input.InputBindingCollection InputBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.InputBindingCollection InputBindings" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.InputBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputBindings As InputBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::InputBindingCollection ^ InputBindings { System::Windows::Input::InputBindingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputBindings : System.Windows.Input.InputBindingCollection" Usage="System.Windows.UIElement.InputBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-671">Obtém a coleção de ligações de entrada associadas a este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-671">Gets the collection of input bindings associated with this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3347b-672">A coleção de ligações de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-672">The collection of input bindings.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-673">Suportam a associações de entrada a associação de comandos para dispositivos de entrada.</span><span class="sxs-lookup"><span data-stu-id="3347b-673">Input bindings support the binding of commands to input devices.</span></span> <span data-ttu-id="3347b-674">Por exemplo, <xref:System.Windows.Input.MouseBinding> implementa associações que incluem propriedades que são específicas dos dispositivos de mouse de entrada.</span><span class="sxs-lookup"><span data-stu-id="3347b-674">For example, <xref:System.Windows.Input.MouseBinding> implements input bindings that include properties that are particular to mouse devices.</span></span>  
  
 <span data-ttu-id="3347b-675">A coleção de associações de entrada incluirá as associações de entrada que pertencem ao tipo, bem como as associações de entrada que são declaradas na instância.</span><span class="sxs-lookup"><span data-stu-id="3347b-675">The collection of input bindings will include both input bindings that pertain to the type as well as input bindings that are declared on the instance.</span></span>  
  
 <span data-ttu-id="3347b-676">Uma propriedade relacionada, <xref:System.Windows.UIElement.CommandBindings%2A>, mantém uma coleção de associações de comando.</span><span class="sxs-lookup"><span data-stu-id="3347b-676">A related property, <xref:System.Windows.UIElement.CommandBindings%2A>, maintains a collection of command bindings.</span></span> <span data-ttu-id="3347b-677">Estes diferem de associações de entrada em que eles representam o próximo nível baixo de processamento do comando - ações que estão vinculados aos comandos conhecidos.</span><span class="sxs-lookup"><span data-stu-id="3347b-677">These differ from input bindings in that they represent the next level down of command processing - actions that are tied to known commands.</span></span>  
  
<a name="xamlPropertyElementUsage_InputBindings"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="3347b-678">Uso do elemento propriedade XAML</span><span class="sxs-lookup"><span data-stu-id="3347b-678">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.InputBindings>  
    oneOrMoreInputBindings  
  </object.InputBindings>  
</object>  
```  
  
<a name="xamlValues_InputBindings"></a>   
## <a name="xaml-values"></a><span data-ttu-id="3347b-679">Valores XAML</span><span class="sxs-lookup"><span data-stu-id="3347b-679">XAML Values</span></span>  
 <span data-ttu-id="3347b-680">*oneOrMoreInputBindings*</span><span class="sxs-lookup"><span data-stu-id="3347b-680">*oneOrMoreInputBindings*</span></span>  
 <span data-ttu-id="3347b-681">Um ou mais <xref:System.Windows.Input.InputBinding> elementos (normalmente a <xref:System.Windows.Input.KeyBinding> ou <xref:System.Windows.Input.MouseBinding> classes derivadas).</span><span class="sxs-lookup"><span data-stu-id="3347b-681">One or more <xref:System.Windows.Input.InputBinding> elements (typically the <xref:System.Windows.Input.KeyBinding> or <xref:System.Windows.Input.MouseBinding> derived classes).</span></span> <span data-ttu-id="3347b-682">Cada um deles deve ter uma <xref:System.Windows.Input.InputBinding.Command%2A> e <xref:System.Windows.Input.InputBinding.Gesture%2A> conjunto de atributos.</span><span class="sxs-lookup"><span data-stu-id="3347b-682">Each of these is expected to have a <xref:System.Windows.Input.InputBinding.Command%2A> and <xref:System.Windows.Input.InputBinding.Gesture%2A> attribute set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3347b-683">O exemplo a seguir preenche essa propriedade em uma <xref:System.Windows.Window>, com um único <xref:System.Windows.Input.KeyBinding>.</span><span class="sxs-lookup"><span data-stu-id="3347b-683">The following example populates this property on a <xref:System.Windows.Window>, with a single <xref:System.Windows.Input.KeyBinding>.</span></span>  
  
 [!code-xaml[CommandingOverviewSnippets#CommandingOverviewXAMLKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml#commandingoverviewxamlkeybinding)]  
  
 <span data-ttu-id="3347b-684">Para obter mais informações sobre o [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] sintaxe para coleções, consulte [sintaxe de XAML em detalhes](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md).</span><span class="sxs-lookup"><span data-stu-id="3347b-684">For more information about the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntax for collections, see [XAML Syntax In Detail](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="InputHitTest">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement InputHitTest (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.IInputElement InputHitTest(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.InputHitTest(System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::IInputElement ^ InputHitTest(System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="member this.InputHitTest : System.Windows.Point -&gt; System.Windows.IInputElement" Usage="uIElement.InputHitTest point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="3347b-685">As coordenadas de deslocamento dentro desse elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-685">The offset coordinates within this element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-686">Retorna o elemento de entrada no elemento atual que está nas coordenadas especificadas em relação à origem do elemento atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-686">Returns the input element within the current element that is at the specified coordinates, relative to the current element's origin.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3347b-687">O filho do elemento que está localizado na posição especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-687">The element child that is located at the given position.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-688"><xref:System.Windows.IInputElement> é retornado como o tipo de retorno, porque esse tipo é uma interface comum para ambos <xref:System.Windows.UIElement> e <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="3347b-688"><xref:System.Windows.IInputElement> is returned as the return type, because that type is a common interface for both <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement>.</span></span> <span data-ttu-id="3347b-689">Em seguida, você pode converter o tipo de retorno apropriadamente ou usar a instância de interface para determinados membros que são definidos pelo <xref:System.Windows.IInputElement> interface.</span><span class="sxs-lookup"><span data-stu-id="3347b-689">You can then cast the return type appropriately, or use the interface instance for certain members that are defined by the <xref:System.Windows.IInputElement> interface.</span></span>  
  
 <span data-ttu-id="3347b-690">Esse método normalmente não é chamado do código do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="3347b-690">This method typically is not called from your application code.</span></span> <span data-ttu-id="3347b-691">Chamar esse método só é apropriado se você pretende implementar novamente uma quantidade significativa dos recursos de entrada de nível inferior que já estão presentes, como recriar a lógica de dispositivo de mouse.</span><span class="sxs-lookup"><span data-stu-id="3347b-691">Calling this method is only appropriate if you intend to re-implement a substantial amount of the low level input features that are already present, such as recreating mouse device logic.</span></span>  
  
 <span data-ttu-id="3347b-692"><xref:System.Windows.IContentHost> contratos de um <xref:System.Windows.IContentHost.InputHitTest%2A> método com a mesma assinatura, alguns elementos optar por implementar explicitamente.</span><span class="sxs-lookup"><span data-stu-id="3347b-692"><xref:System.Windows.IContentHost> contracts an <xref:System.Windows.IContentHost.InputHitTest%2A> method with the same signature, which some elements choose to implement explicitly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidateArrange">
      <MemberSignature Language="C#" Value="public void InvalidateArrange ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvalidateArrange() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.InvalidateArrange" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvalidateArrange ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvalidateArrange();" />
      <MemberSignature Language="F#" Value="member this.InvalidateArrange : unit -&gt; unit" Usage="uIElement.InvalidateArrange " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3347b-693">Invalida o estado da organização (layout) do elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-693">Invalidates the arrange state (layout) for the element.</span>
          </span>
          <span data-ttu-id="3347b-694">Após a invalidação, o elemento terá seu layout atualizado, o que ocorrerá de forma assíncrona a menos que posteriormente seja forçado por <see cref="M:System.Windows.UIElement.UpdateLayout" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-694">After the invalidation, the element will have its layout updated, which will occur asynchronously unless subsequently forced by <see cref="M:System.Windows.UIElement.UpdateLayout" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-695">Chamadas frequentes ao <xref:System.Windows.UIElement.InvalidateArrange%2A> ou em particular para <xref:System.Windows.UIElement.UpdateLayout%2A> ter consequências significativas de desempenho.</span><span class="sxs-lookup"><span data-stu-id="3347b-695">Frequent calls to <xref:System.Windows.UIElement.InvalidateArrange%2A> or in particular to <xref:System.Windows.UIElement.UpdateLayout%2A> have significant performance consequences.</span></span> <span data-ttu-id="3347b-696">Portanto, evite chamar esse método, a menos que você exige absolutamente que estado de layout preciso para chamadas posteriores às outras [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] em seu código.</span><span class="sxs-lookup"><span data-stu-id="3347b-696">Therefore, avoid calling this method unless you absolutely require precise layout state for subsequent calls to other [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] in your code.</span></span> <span data-ttu-id="3347b-697">Um cenário avançado, onde você pode chamar <xref:System.Windows.UIElement.InvalidateArrange%2A> é se você estiver criando um <xref:System.Windows.PropertyChangedCallback> para uma propriedade de dependência que não está em um <xref:System.Windows.Freezable> ou <xref:System.Windows.FrameworkElement> derivado da classe que ainda influencia a passagem de organização do layout quando ele é alterado.</span><span class="sxs-lookup"><span data-stu-id="3347b-697">An advanced scenario where you might call <xref:System.Windows.UIElement.InvalidateArrange%2A> is if you are creating a <xref:System.Windows.PropertyChangedCallback> for a dependency property that is not on a <xref:System.Windows.Freezable> or <xref:System.Windows.FrameworkElement> derived class that still influences the arrange pass of layout when it changes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidateMeasure">
      <MemberSignature Language="C#" Value="public void InvalidateMeasure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvalidateMeasure() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.InvalidateMeasure" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvalidateMeasure ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvalidateMeasure();" />
      <MemberSignature Language="F#" Value="member this.InvalidateMeasure : unit -&gt; unit" Usage="uIElement.InvalidateMeasure " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3347b-698">Invalida o estado da medida (layout) do elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-698">Invalidates the measurement state (layout) for the element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-699">Chamar esse método também chama <xref:System.Windows.UIElement.InvalidateArrange%2A> internamente, não há nenhuma necessidade de chamar <xref:System.Windows.UIElement.InvalidateMeasure%2A> e <xref:System.Windows.UIElement.InvalidateArrange%2A> em sucessão.</span><span class="sxs-lookup"><span data-stu-id="3347b-699">Calling this method also calls <xref:System.Windows.UIElement.InvalidateArrange%2A> internally, there is no need to call <xref:System.Windows.UIElement.InvalidateMeasure%2A> and <xref:System.Windows.UIElement.InvalidateArrange%2A> in succession.</span></span> <span data-ttu-id="3347b-700">Após a invalidação, o elemento terá seu layout atualizado, o que ocorrerá de forma assíncrona, a menos que <xref:System.Windows.UIElement.UpdateLayout%2A> é chamado para forçar uma alteração de layout síncrona.</span><span class="sxs-lookup"><span data-stu-id="3347b-700">After the invalidation, the element will have its layout updated, which will occur asynchronously, unless <xref:System.Windows.UIElement.UpdateLayout%2A> is called to force a synchronous layout change.</span></span>  
  
 <span data-ttu-id="3347b-701">O sistema de layout de nível de framework WPF faz seu próprio tratamento de alterações na árvore visual de um elemento e, em casos mais comuns de invalidação de layout, o sistema de layout está chamando o equivalente a este método quando necessário.</span><span class="sxs-lookup"><span data-stu-id="3347b-701">The WPF framework-level layout system does its own handling of changes in the visual tree of an element, and in most common layout invalidation cases the layout system is calling the equivalent of this method when necessary.</span></span> <span data-ttu-id="3347b-702">Você só deve chamar esse método se você está produzindo uma implementação de layout completo, que direcionam manipulação da árvore de elementos, ou semelhantes a cenários avançados.</span><span class="sxs-lookup"><span data-stu-id="3347b-702">You should only call this method if you are producing a complete layout implementation, which does direct manipulation of the element tree, or similar advanced scenarios.</span></span> <span data-ttu-id="3347b-703">Um cenário avançado é se você estiver criando um <xref:System.Windows.PropertyChangedCallback> para uma propriedade de dependência que não está em um <xref:System.Windows.Freezable> ou <xref:System.Windows.FrameworkElement> derivado da classe que ainda influencia a passagem de medida de layout quando ele é alterado.</span><span class="sxs-lookup"><span data-stu-id="3347b-703">One such advanced scenario is if you are creating a <xref:System.Windows.PropertyChangedCallback> for a dependency property that is not on a <xref:System.Windows.Freezable> or <xref:System.Windows.FrameworkElement> derived class that still influences the measure pass of layout when it changes.</span></span>  
  
 <span data-ttu-id="3347b-704">Chamadas frequentes ao <xref:System.Windows.UIElement.InvalidateMeasure%2A> ou em particular para <xref:System.Windows.UIElement.UpdateLayout%2A> ter consequências significativas de desempenho.</span><span class="sxs-lookup"><span data-stu-id="3347b-704">Frequent calls to <xref:System.Windows.UIElement.InvalidateMeasure%2A> or in particular to <xref:System.Windows.UIElement.UpdateLayout%2A> have significant performance consequences.</span></span> <span data-ttu-id="3347b-705">Portanto, evite chamar esse método, a menos que você exige absolutamente que estado de layout preciso para chamadas posteriores às outras [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] em seu código.</span><span class="sxs-lookup"><span data-stu-id="3347b-705">Therefore, avoid calling this method unless you absolutely require precise layout state for subsequent calls to other [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] in your code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidateVisual">
      <MemberSignature Language="C#" Value="public void InvalidateVisual ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvalidateVisual() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.InvalidateVisual" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvalidateVisual ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvalidateVisual();" />
      <MemberSignature Language="F#" Value="member this.InvalidateVisual : unit -&gt; unit" Usage="uIElement.InvalidateVisual " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3347b-706">Invalida a renderização do elemento e força uma nova passagem de layout completa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-706">Invalidates the rendering of the element, and forces a complete new layout pass.</span>
          </span>
          <span data-ttu-id="3347b-707">
            <see cref="M:System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)" /> é chamado após a conclusão do ciclo de layout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-707">
              <see cref="M:System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)" /> is called after the layout cycle is completed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-708">Este método chama <xref:System.Windows.UIElement.InvalidateArrange%2A> internamente.</span><span class="sxs-lookup"><span data-stu-id="3347b-708">This method calls <xref:System.Windows.UIElement.InvalidateArrange%2A> internally.</span></span>  
  
 <span data-ttu-id="3347b-709">Esse método não é geralmente chamado de código do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="3347b-709">This method is not generally called from your application code.</span></span> <span data-ttu-id="3347b-710">O sistema de layout de nível de framework WPF faz seu próprio tratamento de alterações na árvore visual de um elemento e seria chamar o equivalente a este método quando necessário já.</span><span class="sxs-lookup"><span data-stu-id="3347b-710">The WPF framework-level layout system does its own handling of changes in the visual tree of an element, and would be calling the equivalent of this method when necessary already.</span></span> <span data-ttu-id="3347b-711">Chamar esse método é necessário apenas para cenários avançados.</span><span class="sxs-lookup"><span data-stu-id="3347b-711">Calling this method is necessary only for advanced scenarios.</span></span> <span data-ttu-id="3347b-712">Um cenário avançado é se você estiver criando um <xref:System.Windows.PropertyChangedCallback> para uma propriedade de dependência que não está em um <xref:System.Windows.Freezable> ou <xref:System.Windows.FrameworkElement> derivado da classe que ainda influencia o layout quando ele é alterado.</span><span class="sxs-lookup"><span data-stu-id="3347b-712">One such advanced scenario is if you are creating a <xref:System.Windows.PropertyChangedCallback> for a dependency property that is not on a <xref:System.Windows.Freezable> or <xref:System.Windows.FrameworkElement> derived class that still influences the layout when it changes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.InvalidateArrange" />
      </Docs>
    </Member>
    <Member MemberName="IsArrangeValid">
      <MemberSignature Language="C#" Value="public bool IsArrangeValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsArrangeValid" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsArrangeValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsArrangeValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsArrangeValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsArrangeValid : bool" Usage="System.Windows.UIElement.IsArrangeValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-713">Obtém um valor que indica se o tamanho e a posição calculados dos elementos filho no layout do elemento são válidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-713">Gets a value indicating whether the computed size and position of child elements in this element's layout are valid.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3347b-714">
            <see langword="true" /> se o tamanho e a posição de layout forem válidos; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-714">
              <see langword="true" /> if the size and position of layout are valid; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-715">Você pode forçar a disposição a ser invalidado chamando <xref:System.Windows.UIElement.InvalidateArrange%2A> sobre esse elemento (ou seus pais).</span><span class="sxs-lookup"><span data-stu-id="3347b-715">You can force arrangement to be invalidated by calling <xref:System.Windows.UIElement.InvalidateArrange%2A> on this element (or its parents).</span></span> <span data-ttu-id="3347b-716">Isso sinaliza o layout para recomposição at conforme determina o sistema de layout.</span><span class="sxs-lookup"><span data-stu-id="3347b-716">This flags the layout for recomposition at such time as the layout system determines.</span></span> <span data-ttu-id="3347b-717">Como alternativa, uma chamada de imediata para <xref:System.Windows.UIElement.UpdateLayout%2A> poderia ser feita, mas isso só deve ser feito se você tiver certeza de que nenhum invalidações adicionais estão pendentes (um grande número de atualizações forçadas desnecessariamente tem consequências de desempenho).</span><span class="sxs-lookup"><span data-stu-id="3347b-717">Alternatively, an immediate call to <xref:System.Windows.UIElement.UpdateLayout%2A> could be made, but this should only be done if it is certain that no further invalidations are pending (a large number of unnecessarily forced updates has performance consequences).</span></span>  
  
 <span data-ttu-id="3347b-718"><xref:System.Windows.UIElement.IsArrangeValid%2A> não pode ser `true` , a menos que <xref:System.Windows.UIElement.IsMeasureValid%2A> também é `true` (no processo de layout, organização não pode ser válida sem medida primeiro sendo válido).</span><span class="sxs-lookup"><span data-stu-id="3347b-718"><xref:System.Windows.UIElement.IsArrangeValid%2A> cannot be `true` unless <xref:System.Windows.UIElement.IsMeasureValid%2A> is also `true` (in the layout process, arrangement cannot be valid without measurement first being valid).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.InvalidateArrange" />
        <altmember cref="P:System.Windows.UIElement.IsMeasureValid" />
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : bool with get, set" Usage="System.Windows.UIElement.IsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-719">Obtém ou define um valor que indica se esse elemento está habilitado no [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-719">Gets or sets a value indicating whether this element is enabled in the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span>
          </span>
          <span data-ttu-id="3347b-720">É uma propriedade de dependência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-720">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3347b-721">
            <see langword="true" /> se o elemento estiver habilitado; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-721">
              <see langword="true" /> if the element is enabled; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3347b-722">O valor padrão é <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-722">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-723">Observe que essa propriedade é influenciada por implementações específicas de classe de <xref:System.Windows.UIElement.IsEnabledCore%2A> em elementos específicos, geralmente em tempo de execução.</span><span class="sxs-lookup"><span data-stu-id="3347b-723">Note that this property is influenced by class-specific implementations of <xref:System.Windows.UIElement.IsEnabledCore%2A> on particular elements, often at runtime.</span></span> <span data-ttu-id="3347b-724">Portanto, o valor padrão listado aqui, às vezes, não é eficaz.</span><span class="sxs-lookup"><span data-stu-id="3347b-724">Therefore, the default value listed here is sometimes not effective.</span></span> <span data-ttu-id="3347b-725">Por exemplo, uma <xref:System.Windows.Controls.Primitives.ScrollBar> estarão <xref:System.Windows.UIElement.IsEnabled%2A> `false` sempre que for determinado que não é necessário para dar suporte a uma barra de rolagem.</span><span class="sxs-lookup"><span data-stu-id="3347b-725">For instance, a <xref:System.Windows.Controls.Primitives.ScrollBar> will be <xref:System.Windows.UIElement.IsEnabled%2A> `false` whenever it is determined that there is no need to support a scrollbar.</span></span> <span data-ttu-id="3347b-726">Tentativa de definir esse valor também potencialmente será ser substituída pelo valor retornado por <xref:System.Windows.UIElement.IsEnabledCore%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-726">Attempting to set this value will also potentially be overridden by the value returned by <xref:System.Windows.UIElement.IsEnabledCore%2A>.</span></span>  
  
 <span data-ttu-id="3347b-727">Elementos que não estão habilitados não participam de foco ou de teste de clique e, portanto, não será fontes de eventos de entrada.</span><span class="sxs-lookup"><span data-stu-id="3347b-727">Elements that are not enabled do not participate in hit testing or focus and therefore will not be sources of input events.</span></span>  
  
<a name="dependencyPropertyInfo_IsEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3347b-728">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="3347b-728">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-729">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-729">Identifier field</span></span>|<xref:System.Windows.UIElement.IsEnabledProperty>|  
|<span data-ttu-id="3347b-730">Propriedades de metadados definido como `true`</span><span class="sxs-lookup"><span data-stu-id="3347b-730">Metadata properties set to `true`</span></span>|<span data-ttu-id="3347b-731">Nenhum</span><span class="sxs-lookup"><span data-stu-id="3347b-731">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3347b-732">O exemplo a seguir mostra um manipulador em um botão que quando executado definirá <xref:System.Windows.UIElement.IsEnabled%2A> `false` em outro botão nomeado `b1`.</span><span class="sxs-lookup"><span data-stu-id="3347b-732">The following example shows a handler on one button that when executed will set <xref:System.Windows.UIElement.IsEnabled%2A> `false` on another named button `b1`.</span></span>  
  
 [!code-csharp[RoutedEventAddRemoveHandler#Handler](~/samples/snippets/csharp/VS_Snippets_Wpf/RoutedEventAddRemoveHandler/CSharp/default.xaml.cs#handler)]
 [!code-vb[RoutedEventAddRemoveHandler#Handler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RoutedEventAddRemoveHandler/VisualBasic/default.xaml.vb#handler)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.IsEnabledChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsEnabledChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsEnabledChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsEnabledChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsEnabledChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsEnabledChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsEnabledChanged;" />
      <MemberSignature Language="F#" Value="member this.IsEnabledChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsEnabledChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-733">Ocorre quando o valor da propriedade <see cref="P:System.Windows.UIElement.IsEnabled" /> neste elemento é alterado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-733">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsEnabled" /> property on this element changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-734">Esse membro é um [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] evento, não um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-734">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledCore">
      <MemberSignature Language="C#" Value="protected virtual bool IsEnabledCore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabledCore" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsEnabledCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property IsEnabledCore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IsEnabledCore { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabledCore : bool" Usage="System.Windows.UIElement.IsEnabledCore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-735">Obtém um valor que se torna o valor retornado de <see cref="P:System.Windows.UIElement.IsEnabled" /> em classes derivadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-735">Gets a value that becomes the return value of <see cref="P:System.Windows.UIElement.IsEnabled" /> in derived classes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3347b-736">
            <see langword="true" /> se o elemento estiver habilitado; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-736">
              <see langword="true" /> if the element is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3347b-737">A implementação padrão dessa propriedade armazena o valor em cache e também calcula se o elemento pai desse elemento está habilitado.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3347b-737">The default implementation of this property caches the value and also calculates whether the parent element of this element is enabled.</span>
            </span>
            <span data-ttu-id="3347b-738">(Se o pai não estiver habilitado, o elemento filho não pode ser habilitado com eficiência em práticos [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].) Se você optar por substituir essa implementação, certifique-se de que você chame a implementação base para preservar esse comportamento.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3347b-738">(If the parent is not enabled, the child element cannot be effectively enabled in practical [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].) If you choose to override this implementation, make certain that you call the base implementation to preserve this behavior.</span>
            </span>
            <span data-ttu-id="3347b-739">O <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> classe fornece uma implementação de substituição existente dessa propriedade.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3347b-739">The <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> class provides an existing override implementation of this property.</span>
            </span>
            <span data-ttu-id="3347b-740">Essa substituição é determina se o conteúdo dentro da área de apresentação do conteúdo excede a área disponível.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3347b-740">This override determines whether the content inside the content presentation area exceeds the available area.</span>
            </span>
            <span data-ttu-id="3347b-741">Se o conteúdo excede a área, a parte da barra de rolagem está habilitada.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3347b-741">If the content does exceed the area, the scrollbar portion is enabled.</span>
            </span>
            <span data-ttu-id="3347b-742">Caso contrário, a barra de rolagem não está habilitada.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3347b-742">Otherwise, the scrollbar is not enabled.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.UIElement.IsEnabledChanged" />
        <altmember cref="P:System.Windows.UIElement.IsEnabled" />
      </Docs>
    </Member>
    <Member MemberName="IsEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-743">Identifica a propriedade de dependência <see cref="P:System.Windows.UIElement.IsEnabled" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-743">Identifies the <see cref="P:System.Windows.UIElement.IsEnabled" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFocused">
      <MemberSignature Language="C#" Value="public bool IsFocused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFocused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsFocused" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFocused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFocused { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFocused : bool" Usage="System.Windows.UIElement.IsFocused" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-744">Obtém um valor que determina se esse elemento tem foco lógico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-744">Gets a value that determines whether this element has logical focus.</span>
          </span>
          <span data-ttu-id="3347b-745">É uma propriedade de dependência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-745">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3347b-746">
            <see langword="true" /> se esse elemento tiver o foco lógico; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-746">
              <see langword="true" /> if this element has logical focus; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-747">Foco lógico pode diferir do foco do teclado, se um aplicativo tiver várias divisões de foco, tais como entre o conteúdo do menu e o restante do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="3347b-747">Logical focus might differ from keyboard focus if an application has multiple focus divisions, such as between menu contents and the remainder of the application.</span></span> <span data-ttu-id="3347b-748">Nesse cenário, só pode ser o foco do teclado em um elemento de interface do usuário do aplicativo, no entanto, certos elementos na outras divisões de foco ainda podem manter foco lógico.</span><span class="sxs-lookup"><span data-stu-id="3347b-748">In this scenario, keyboard focus can only be on one element of the application  UI, however, certain elements in other focus divisions might still retain logical focus.</span></span> <span data-ttu-id="3347b-749">Para obter mais informações sobre o foco lógico, consulte [visão geral do foco](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3347b-749">For more information on logical focus, see [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
 <span data-ttu-id="3347b-750">Você não definir foco definindo essa propriedade (é somente leitura).</span><span class="sxs-lookup"><span data-stu-id="3347b-750">You do not set focus by setting this property (it is read-only).</span></span> <span data-ttu-id="3347b-751">O uso típico para essa propriedade é usá-lo como uma propriedade de dependência para um <xref:System.Windows.Setter> ou <xref:System.Windows.EventTrigger>.</span><span class="sxs-lookup"><span data-stu-id="3347b-751">The typical use for this property is to use it as a dependency property for a <xref:System.Windows.Setter> or <xref:System.Windows.EventTrigger>.</span></span> <span data-ttu-id="3347b-752">Para definir o foco programaticamente, chame <xref:System.Windows.UIElement.Focus%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-752">To set focus programmatically, call <xref:System.Windows.UIElement.Focus%2A>.</span></span> <span data-ttu-id="3347b-753">Foco também pode ser definido por ação do usuário ou por implementações de controle, que incluem, possivelmente, o comportamento de captura do mouse.</span><span class="sxs-lookup"><span data-stu-id="3347b-753">Focus can also be set by user action or by control implementations, which possibly include mouse capture behavior.</span></span>  
  
<a name="dependencyPropertyInfo_IsFocused"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3347b-754">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="3347b-754">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-755">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-755">Identifier field</span></span>|<xref:System.Windows.UIElement.IsFocusedProperty>|  
|<span data-ttu-id="3347b-756">Propriedades de metadados definido como `true`</span><span class="sxs-lookup"><span data-stu-id="3347b-756">Metadata properties set to `true`</span></span>|<span data-ttu-id="3347b-757">Nenhum</span><span class="sxs-lookup"><span data-stu-id="3347b-757">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3347b-758">O exemplo a seguir é um manipulador de código que altera o plano de fundo de um controle quando ele está focalizado.</span><span class="sxs-lookup"><span data-stu-id="3347b-758">The following example is a code handler that changes the background of a control when it is focused.</span></span>  
  
 [!code-csharp[PopupSimple#IsFocused](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSimple/CSharp/Window1.xaml.cs#isfocused)]  
  
 <span data-ttu-id="3347b-759">Outra forma comum de atingir o mesmo efeito é colocar uma <xref:System.Windows.Trigger> no <xref:System.Windows.Style> de um controle; essa abordagem não exige a manipulação de eventos específicos com code-behind e permite que os designers maior acesso à natureza interativa e gráfica do o [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span><span class="sxs-lookup"><span data-stu-id="3347b-759">Another common way to achieve this same effect is to place a <xref:System.Windows.Trigger> in the <xref:System.Windows.Style> of a control; this approach does not require handling specific events with code-behind and allows designers greater access to the interactive and graphical nature of the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span></span> <span data-ttu-id="3347b-760">Por exemplo, consulte [como: criar um efeito de brilho externo](https://msdn.microsoft.com/library/a2ccf19a-d0dc-4e3c-88e3-95d7f7d765b1).</span><span class="sxs-lookup"><span data-stu-id="3347b-760">For an example, see [How to: Create an Outer Glow Effect](https://msdn.microsoft.com/library/a2ccf19a-d0dc-4e3c-88e3-95d7f7d765b1).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.Focusable" />
        <altmember cref="M:System.Windows.UIElement.Focus" />
      </Docs>
    </Member>
    <Member MemberName="IsFocusedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsFocusedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsFocusedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsFocusedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsFocusedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsFocusedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsFocusedProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsFocusedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-761">Identifica a propriedade de dependência <see cref="P:System.Windows.UIElement.IsFocused" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-761">Identifies the <see cref="P:System.Windows.UIElement.IsFocused" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHitTestVisible">
      <MemberSignature Language="C#" Value="public bool IsHitTestVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHitTestVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsHitTestVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property IsHitTestVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsHitTestVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsHitTestVisible : bool with get, set" Usage="System.Windows.UIElement.IsHitTestVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-762">Obtém ou define um valor que declara se este elemento tem possibilidade de ser retornado como um resultado de teste de clique de alguma parte de seu conteúdo renderizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-762">Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content.</span>
          </span>
          <span data-ttu-id="3347b-763">É uma propriedade de dependência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-763">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3347b-764">
            <see langword="true" /> se esse elemento puder ser retornado como um resultado do teste de clique de, pelo menos, um ponto; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-764">
              <see langword="true" /> if this element could be returned as a hit test result from at least one point; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3347b-765">O valor padrão é <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-765">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-766">O valor efetivo dessa propriedade é influenciado pelas posições relativas dos elementos que podem ser testados ocorrências na árvore lógica.</span><span class="sxs-lookup"><span data-stu-id="3347b-766">The effective value of this property is influenced by the relative positions of hit testable elements in the logical tree.</span></span> <span data-ttu-id="3347b-767">Por exemplo, se um elemento é um elemento filho de um elemento que é não visível do teste de clique, o valor efetivo da propriedade no filho permanecerão `false`, mesmo se a tentativa de definir o valor localmente.</span><span class="sxs-lookup"><span data-stu-id="3347b-767">For instance, if an element is a child element of an element that is not hit test visible, the effective value of the property on the child will remain `false`, even if attempting to set that value locally.</span></span> <span data-ttu-id="3347b-768">Por esse motivo, é importante que você não defina <xref:System.Windows.UIElement.IsHitTestVisible%2A> para `false` em um controle composto, a menos que você não deseja que qualquer entrada ou testes de clique em que o controle.</span><span class="sxs-lookup"><span data-stu-id="3347b-768">For this reason, it is important that you do not set <xref:System.Windows.UIElement.IsHitTestVisible%2A> to `false` on a composited control unless you do not want any input or hit testing on that control.</span></span> <span data-ttu-id="3347b-769">Para obter mais informações sobre teste de clique, consulte [Teste de clique na camada visual](~/docs/framework/wpf/graphics-multimedia/hit-testing-in-the-visual-layer.md).</span><span class="sxs-lookup"><span data-stu-id="3347b-769">For more information on hit testing, see [Hit Testing in the Visual Layer](~/docs/framework/wpf/graphics-multimedia/hit-testing-in-the-visual-layer.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsHitTestVisible"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3347b-770">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="3347b-770">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-771">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-771">Identifier field</span></span>|<xref:System.Windows.UIElement.IsHitTestVisibleProperty>|  
|<span data-ttu-id="3347b-772">Propriedades de metadados definido como `true`</span><span class="sxs-lookup"><span data-stu-id="3347b-772">Metadata properties set to `true`</span></span>|<span data-ttu-id="3347b-773">Nenhum</span><span class="sxs-lookup"><span data-stu-id="3347b-773">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.IsHitTestVisibleChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsHitTestVisibleChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsHitTestVisibleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsHitTestVisibleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsHitTestVisibleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsHitTestVisibleChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsHitTestVisibleChanged;" />
      <MemberSignature Language="F#" Value="member this.IsHitTestVisibleChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsHitTestVisibleChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-774">Ocorre quando o valor da propriedade de dependência <see cref="P:System.Windows.UIElement.IsHitTestVisible" /> é alterado neste elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-774">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsHitTestVisible" /> dependency property changes on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-775">Esse membro é um [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] evento, não um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-775">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHitTestVisibleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsHitTestVisibleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsHitTestVisibleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsHitTestVisibleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsHitTestVisibleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsHitTestVisibleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsHitTestVisibleProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsHitTestVisibleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-776">Identifica a propriedade de dependência <see cref="P:System.Windows.UIElement.IsHitTestVisible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-776">Identifies the <see cref="P:System.Windows.UIElement.IsHitTestVisible" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInputMethodEnabled">
      <MemberSignature Language="C#" Value="public bool IsInputMethodEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInputMethodEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsInputMethodEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInputMethodEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInputMethodEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInputMethodEnabled : bool" Usage="System.Windows.UIElement.IsInputMethodEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-777">Obtém um valor que indica se um sistema de método de entrada, como um [!INCLUDE[TLA#tla_ime](~/includes/tlasharptla-ime-md.md)], está habilitado para processamento de entrada para esse elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-777">Gets a value indicating whether an input method system, such as an [!INCLUDE[TLA#tla_ime](~/includes/tlasharptla-ime-md.md)],  is enabled for processing the input to this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3347b-778">
            <see langword="true" /> se um método de entrada estiver ativo; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-778">
              <see langword="true" /> if an input method is active; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3347b-779">O valor padrão da propriedade anexada subjacente é <see langword="true;" />, no entanto, isso será influenciado pelo estado real dos métodos de entrada no tempo de execução.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-779">The default value of the underlying attached property is <see langword="true;" /> however, this will be influenced by the actual state of input methods at runtime.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-780">Essa propriedade retorna o valor retornado pela propriedade anexada <xref:System.Windows.Input.InputMethod.IsInputMethodEnabled%2A?displayProperty=nameWithType> para os métodos de entrada atualmente habilitados (teclado, fala e outros dispositivos de entrada).</span><span class="sxs-lookup"><span data-stu-id="3347b-780">This property returns the value that is returned by the attached property <xref:System.Windows.Input.InputMethod.IsInputMethodEnabled%2A?displayProperty=nameWithType> for the currently enabled input methods (keyboard, speech, and other input devices).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocused">
      <MemberSignature Language="C#" Value="public bool IsKeyboardFocused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKeyboardFocused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsKeyboardFocused" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsKeyboardFocused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsKeyboardFocused { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocused : bool" Usage="System.Windows.UIElement.IsKeyboardFocused" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsKeyboardFocused</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-781">Obtém um valor que indica se este elemento tem foco do controle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-781">Gets a value indicating whether this element has keyboard focus.</span>
          </span>
          <span data-ttu-id="3347b-782">É uma propriedade de dependência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-782">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3347b-783">
            <see langword="true" /> se esse elemento tiver o foco do teclado; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-783">
              <see langword="true" /> if this element has keyboard focus; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3347b-784">O padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-784">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-785">Alterações no determinado valor dessa propriedade podem ser acompanhadas por eventos relacionados ao foco.</span><span class="sxs-lookup"><span data-stu-id="3347b-785">Changes to the determined value of this property may be accompanied by focus-related events.</span></span>  
  
 <span data-ttu-id="3347b-786"><xref:System.Windows.UIElement.IsKeyboardFocused%2A> e <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> são comumente usados em manipuladores de eventos de classe para outros eventos relacionados à entrada, por exemplo para determinar se o elemento já tem o foco do teclado ou fazer determinações quando o mouse eventos e eventos de teclado ocorrem em conjunto.</span><span class="sxs-lookup"><span data-stu-id="3347b-786"><xref:System.Windows.UIElement.IsKeyboardFocused%2A> and <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> are commonly used within class event handlers for other input-related events, for instance to determine whether the element already has keyboard focus, or to make determinations when mouse events and keyboard events occur in conjunction.</span></span>  
  
<a name="dependencyPropertyInfo_IsKeyboardFocused"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3347b-787">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="3347b-787">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-788">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-788">Identifier field</span></span>|<xref:System.Windows.UIElement.IsKeyboardFocusedProperty>|  
|<span data-ttu-id="3347b-789">Propriedades de metadados definido como `true`</span><span class="sxs-lookup"><span data-stu-id="3347b-789">Metadata properties set to `true`</span></span>|<span data-ttu-id="3347b-790">Nenhum</span><span class="sxs-lookup"><span data-stu-id="3347b-790">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.GotFocus" />
        <altmember cref="E:System.Windows.UIElement.LostFocus" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsKeyboardFocusedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsKeyboardFocusedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsKeyboardFocusedChanged;" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocusedChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsKeyboardFocusedChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-791">Ocorre quando o valor da propriedade <see cref="P:System.Windows.UIElement.IsKeyboardFocused" /> é alterado neste elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-791">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsKeyboardFocused" /> property changes on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-792">Esse membro é um [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] evento, não um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-792">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsKeyboardFocusedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsKeyboardFocusedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsKeyboardFocusedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsKeyboardFocusedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsKeyboardFocusedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsKeyboardFocusedProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsKeyboardFocusedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-793">Identifica a propriedade de dependência <see cref="P:System.Windows.UIElement.IsKeyboardFocused" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-793">Identifies the <see cref="P:System.Windows.UIElement.IsKeyboardFocused" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithin">
      <MemberSignature Language="C#" Value="public bool IsKeyboardFocusWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKeyboardFocusWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsKeyboardFocusWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsKeyboardFocusWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsKeyboardFocusWithin { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocusWithin : bool" Usage="System.Windows.UIElement.IsKeyboardFocusWithin" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsKeyboardFocusWithin</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-794">Obtém um valor que indica se o foco do teclado é em qualquer lugar dentro do elemento ou de seus elementos filho de árvore visual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-794">Gets a value indicating whether keyboard focus is anywhere within the element or its visual tree child elements.</span>
          </span>
          <span data-ttu-id="3347b-795">É uma propriedade de dependência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-795">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3347b-796">
            <see langword="true" /> se o foco do teclado está no elemento ou em seus elementos filho; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-796">
              <see langword="true" /> if keyboard focus is on the element or its child elements; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-797">Alterações ao valor dessa propriedade normalmente geram a <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged> evento, a menos que uma classe derivada tiver substituído <xref:System.Windows.UIElement.OnIsKeyboardFocusWithinChanged%2A> para suprimir o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-797">Changes to the value of this property typically raise the <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged> event, unless a derived class has overridden <xref:System.Windows.UIElement.OnIsKeyboardFocusWithinChanged%2A> to suppress the event.</span></span>  
  
 <span data-ttu-id="3347b-798">Você não definir essa propriedade diretamente, mas você pode definir o foco para um elemento, chamando <xref:System.Windows.UIElement.Focus%2A>, ou fazendo uma <xref:System.Windows.UIElement.MoveFocus%2A> solicitação.</span><span class="sxs-lookup"><span data-stu-id="3347b-798">You do not set this property directly, but you can set the focus to an element by calling <xref:System.Windows.UIElement.Focus%2A>, or by making a <xref:System.Windows.UIElement.MoveFocus%2A> request.</span></span> <span data-ttu-id="3347b-799">Qualquer uma dessas chamadas de método pode alterar esse valor de propriedade.</span><span class="sxs-lookup"><span data-stu-id="3347b-799">Either of these method calls might change this property value.</span></span>  
  
 <span data-ttu-id="3347b-800"><xref:System.Windows.UIElement.IsKeyboardFocused%2A> e <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> são normalmente usados em manipuladores de eventos de classe para outros eventos relacionados à entrada, por exemplo para determinar se o elemento já tem o foco do teclado ou fazer determinações quando o mouse eventos e eventos de teclado ocorrem em conjunto.</span><span class="sxs-lookup"><span data-stu-id="3347b-800"><xref:System.Windows.UIElement.IsKeyboardFocused%2A> and <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> are typically used within class event handlers for other input-related events, for instance to determine whether the element already has keyboard focus, or to make determinations when mouse events and keyboard events occur in conjunction.</span></span>  
  
<a name="dependencyPropertyInfo_IsKeyboardFocusWithin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3347b-801">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="3347b-801">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-802">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-802">Identifier field</span></span>|<xref:System.Windows.UIElement.IsKeyboardFocusWithinProperty>|  
|<span data-ttu-id="3347b-803">Propriedades de metadados definido como `true`</span><span class="sxs-lookup"><span data-stu-id="3347b-803">Metadata properties set to `true`</span></span>|<span data-ttu-id="3347b-804">Nenhum</span><span class="sxs-lookup"><span data-stu-id="3347b-804">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsKeyboardFocusWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsKeyboardFocusWithinChanged;" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-805">Ocorre quando o valor da propriedade <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> é alterado neste elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-805">Occurs when the value of the <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> property changes on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-806">Esse membro é um [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] evento, não um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-806">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.IsKeyboardFocusedChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsKeyboardFocusWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsKeyboardFocusWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsKeyboardFocusWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsKeyboardFocusWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsKeyboardFocusWithinProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsKeyboardFocusWithinProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsKeyboardFocusWithinProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-807">Identifica a propriedade de dependência <see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-807">Identifies the <see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsManipulationEnabled">
      <MemberSignature Language="C#" Value="public bool IsManipulationEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsManipulationEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsManipulationEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsManipulationEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsManipulationEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsManipulationEnabled : bool with get, set" Usage="System.Windows.UIElement.IsManipulationEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-808">Obtém ou define um valor que indica se os eventos de manipulação estão habilitados neste <see cref="T:System.Windows.UIElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-808">Gets or sets a value that indicates whether manipulation events are enabled on this <see cref="T:System.Windows.UIElement" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3347b-809">
            <see langword="true" /> se os eventos de manipulação estiverem habilitados neste <see cref="T:System.Windows.UIElement" />; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-809">
              <see langword="true" /> if manipulation events are enabled on this <see cref="T:System.Windows.UIElement" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3347b-810">O padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-810">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-811">Defina essa propriedade como true se você quiser que o <xref:System.Windows.UIElement> para receber os <xref:System.Windows.UIElement.ManipulationStarting>, <xref:System.Windows.UIElement.ManipulationStarted>, <xref:System.Windows.UIElement.ManipulationDelta>, <xref:System.Windows.UIElement.ManipulationInertiaStarting>, <xref:System.Windows.UIElement.ManipulationBoundaryFeedback>, e <xref:System.Windows.UIElement.ManipulationCompleted> eventos.</span><span class="sxs-lookup"><span data-stu-id="3347b-811">Set this property to true if you want the <xref:System.Windows.UIElement> to receive the <xref:System.Windows.UIElement.ManipulationStarting>, <xref:System.Windows.UIElement.ManipulationStarted>, <xref:System.Windows.UIElement.ManipulationDelta>, <xref:System.Windows.UIElement.ManipulationInertiaStarting>, <xref:System.Windows.UIElement.ManipulationBoundaryFeedback>, and <xref:System.Windows.UIElement.ManipulationCompleted> events.</span></span> <span data-ttu-id="3347b-812">Para obter mais informações sobre as manipulações, consulte o [visão geral de entrada](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3347b-812">For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  <span data-ttu-id="3347b-813">Para obter um exemplo de um aplicativo que responde às manipulações, consulte [instruções passo a passo: Criando seu primeiro aplicativo de toque](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="3347b-813">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3347b-814">O exemplo a seguir cria um aplicativo que tenha um retângulo vermelho.</span><span class="sxs-lookup"><span data-stu-id="3347b-814">The following example creates an application that has a red Rectangle.</span></span>  <span data-ttu-id="3347b-815">O <xref:System.Windows.UIElement.IsManipulationEnabled%2A> propriedades do retângulo é definida como true e o aplicativo assina de janela para o <xref:System.Windows.UIElement.ManipulationStarting>, <xref:System.Windows.UIElement.ManipulationDelta>, e <xref:System.Windows.UIElement.ManipulationInertiaStarting> eventos.</span><span class="sxs-lookup"><span data-stu-id="3347b-815">The <xref:System.Windows.UIElement.IsManipulationEnabled%2A> property of the Rectangle is set to true and the application's window subscribes to the <xref:System.Windows.UIElement.ManipulationStarting>, <xref:System.Windows.UIElement.ManipulationDelta>, and <xref:System.Windows.UIElement.ManipulationInertiaStarting> events.</span></span> <span data-ttu-id="3347b-816">Este exemplo é parte de um exemplo maior na [instruções passo a passo: Criando seu primeiro aplicativo de toque](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="3347b-816">This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 [!code-xaml[BasicManipulation#UI](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml#ui)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsManipulationEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsManipulationEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsManipulationEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsManipulationEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsManipulationEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsManipulationEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsManipulationEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsManipulationEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-817">Identifica a propriedade de dependência <see cref="P:System.Windows.UIElement.IsManipulationEnabled" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-817">Identifies the <see cref="P:System.Windows.UIElement.IsManipulationEnabled" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMeasureValid">
      <MemberSignature Language="C#" Value="public bool IsMeasureValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMeasureValid" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsMeasureValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMeasureValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMeasureValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMeasureValid : bool" Usage="System.Windows.UIElement.IsMeasureValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-818">Obtém um valor que indica se o tamanho atual retornado pela medida de layout é válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-818">Gets a value indicating whether the current size returned by layout measure is valid.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3347b-819">
            <see langword="true" /> se o cálculo da medida de layout retornou um valor válido e atual; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-819">
              <see langword="true" /> if the measure pass of layout returned a valid and current value; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-820">Você pode forçar a medição e a disposição a ser invalidado chamando <xref:System.Windows.UIElement.InvalidateMeasure%2A> sobre esse elemento (ou qualquer elemento pai na árvore visual).</span><span class="sxs-lookup"><span data-stu-id="3347b-820">You can force measurement and arrangement to be invalidated by calling <xref:System.Windows.UIElement.InvalidateMeasure%2A> on this element (or any parent element up the visual tree).</span></span> <span data-ttu-id="3347b-821">Isso designa o layout para recomposição de forma assíncrona, que ocorrem em um tempo determinado pelo sistema de layout.</span><span class="sxs-lookup"><span data-stu-id="3347b-821">This designates the layout for recomposition asynchronously, occurring at a time determined by the layout system.</span></span> <span data-ttu-id="3347b-822">Como alternativa, você pode fazer uma chamada de imediata para <xref:System.Windows.UIElement.UpdateLayout%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-822">Alternatively, you could make an immediate call to <xref:System.Windows.UIElement.UpdateLayout%2A>.</span></span> <span data-ttu-id="3347b-823">No entanto, você só deve chamar <xref:System.Windows.UIElement.UpdateLayout%2A> se é provável que não há mais invalidações são devidas pendentes (um grande número de atualizações forçadas desnecessariamente terá consequências de desempenho).</span><span class="sxs-lookup"><span data-stu-id="3347b-823">However, you should only call <xref:System.Windows.UIElement.UpdateLayout%2A> if it is likely that no further invalidations are pending (a large number of unnecessarily forced updates will have performance consequences).</span></span>  
  
 <span data-ttu-id="3347b-824">Se <xref:System.Windows.UIElement.IsMeasureValid%2A> está `false`, <xref:System.Windows.UIElement.IsArrangeValid%2A> também deve ser `false` (pela lógica do processo de layout de imposto, organização não pode ser válida sem medida primeiro sendo válido).</span><span class="sxs-lookup"><span data-stu-id="3347b-824">If <xref:System.Windows.UIElement.IsMeasureValid%2A> is `false`, <xref:System.Windows.UIElement.IsArrangeValid%2A> must also be `false` (by the enforced logic of the layout process, arrangement cannot be valid without measurement first being valid).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.UpdateLayout" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptured">
      <MemberSignature Language="C#" Value="public bool IsMouseCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsMouseCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseCaptured { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMouseCaptured : bool" Usage="System.Windows.UIElement.IsMouseCaptured" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseCaptured</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-825">Obtém um valor que indica se o mouse é capturado para esse elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-825">Gets a value indicating whether the mouse is captured to this element.</span>
          </span>
          <span data-ttu-id="3347b-826">É uma propriedade de dependência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-826">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3347b-827">
            <see langword="true" /> se o elemento tiver a captura do mouse; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-827">
              <see langword="true" /> if the element has mouse capture; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3347b-828">O padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-828">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-829">Estado de captura do mouse está relacionado a operações de arrastar e soltar no processo.</span><span class="sxs-lookup"><span data-stu-id="3347b-829">Mouse capture state is related to in-process drag-and-drop operations.</span></span>  
  
<a name="dependencyPropertyInfo_IsMouseCaptured"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3347b-830">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="3347b-830">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-831">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-831">Identifier field</span></span>|<xref:System.Windows.UIElement.IsMouseCapturedProperty>|  
|<span data-ttu-id="3347b-832">Propriedades de metadados definido como `true`</span><span class="sxs-lookup"><span data-stu-id="3347b-832">Metadata properties set to `true`</span></span>|<span data-ttu-id="3347b-833">Nenhum</span><span class="sxs-lookup"><span data-stu-id="3347b-833">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3347b-834">O exemplo a seguir ativa o estado de captura do mouse ou desativa com base em se o mouse já é capturado para o elemento.</span><span class="sxs-lookup"><span data-stu-id="3347b-834">The following example turns the mouse capture state on or off based on whether the mouse is already captured for the element.</span></span>  
  
 <span data-ttu-id="3347b-835">Se a captura do mouse estiver em outro lugar, que a captura do mouse está definida para esse elemento.</span><span class="sxs-lookup"><span data-stu-id="3347b-835">If mouse capture is elsewhere, the mouse capture is set to that element.</span></span> <span data-ttu-id="3347b-836">Se o elemento tiver a captura do mouse, será apagada chamando <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=nameWithType> com uma entrada nula.</span><span class="sxs-lookup"><span data-stu-id="3347b-836">If the element had mouse capture, it is cleared by calling <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=nameWithType> with a null input.</span></span>  
  
 [!code-csharp[MouseSnippetSample#IsMouseCaptured](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#ismousecaptured)]
 [!code-vb[MouseSnippetSample#IsMouseCaptured](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#ismousecaptured)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.CaptureMouse" />
        <altmember cref="E:System.Windows.UIElement.GotMouseCapture" />
        <altmember cref="E:System.Windows.UIElement.LostMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseCapturedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseCapturedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseCapturedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsMouseCapturedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseCapturedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseCapturedChanged;" />
      <MemberSignature Language="F#" Value="member this.IsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-837">Ocorre quando o valor da propriedade <see cref="P:System.Windows.UIElement.IsMouseCaptured" /> é alterado neste elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-837">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsMouseCaptured" /> property changes on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-838">Esse membro é um [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] evento, não um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-838">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsMouseCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseCapturedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMouseCapturedProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsMouseCapturedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-839">Identifica a propriedade de dependência <see cref="P:System.Windows.UIElement.IsMouseCaptured" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-839">Identifies the <see cref="P:System.Windows.UIElement.IsMouseCaptured" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithin">
      <MemberSignature Language="C#" Value="public bool IsMouseCaptureWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseCaptureWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsMouseCaptureWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseCaptureWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseCaptureWithin { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMouseCaptureWithin : bool" Usage="System.Windows.UIElement.IsMouseCaptureWithin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-840">Obtém um valor que determina se a captura do mouse é mantida por esse elemento ou elementos filho em sua árvore visual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-840">Gets a value that determines whether mouse capture is held by this element or by child elements in its visual tree.</span>
          </span>
          <span data-ttu-id="3347b-841">É uma propriedade de dependência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-841">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3347b-842">
            <see langword="true" /> se esse elemento ou um elemento contido tiver captura do mouse; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-842">
              <see langword="true" /> if this element or a contained element has mouse capture; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsMouseCaptureWithin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3347b-843">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="3347b-843">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-844">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-844">Identifier field</span></span>|<xref:System.Windows.UIElement.IsMouseCaptureWithinProperty>|  
|<span data-ttu-id="3347b-845">Propriedades de metadados definido como `true`</span><span class="sxs-lookup"><span data-stu-id="3347b-845">Metadata properties set to `true`</span></span>|<span data-ttu-id="3347b-846">Nenhum</span><span class="sxs-lookup"><span data-stu-id="3347b-846">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.IsMouseCaptured" />
        <altmember cref="M:System.Windows.UIElement.CaptureMouse" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseCaptureWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseCaptureWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsMouseCaptureWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseCaptureWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseCaptureWithinChanged;" />
      <MemberSignature Language="F#" Value="member this.IsMouseCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsMouseCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-847">Ocorre quando o valor do <see cref="F:System.Windows.UIElement.IsMouseCaptureWithinProperty" /> é alterado nesse elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-847">Occurs when the value of the <see cref="F:System.Windows.UIElement.IsMouseCaptureWithinProperty" /> changes on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-848">Esse membro é um [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] evento, não um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-848">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseCaptureWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseCaptureWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsMouseCaptureWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseCaptureWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseCaptureWithinProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMouseCaptureWithinProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsMouseCaptureWithinProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-849">Identifica a propriedade de dependência <see cref="P:System.Windows.UIElement.IsMouseCaptureWithin" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-849">Identifies the <see cref="P:System.Windows.UIElement.IsMouseCaptureWithin" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.UIElement.IsMouseCaptureWithinChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOver">
      <MemberSignature Language="C#" Value="public bool IsMouseDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsMouseDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseDirectlyOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMouseDirectlyOver : bool" Usage="System.Windows.UIElement.IsMouseDirectlyOver" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseDirectlyOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-850">Obtém um valor que indica se a posição do ponteiro do mouse corresponde aos resultados de teste de clique, que levam em consideração a composição de elementos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-850">Gets a value that indicates whether the position of the mouse pointer corresponds to hit test results, which take element compositing into account.</span>
          </span>
          <span data-ttu-id="3347b-851">É uma propriedade de dependência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-851">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3347b-852">
            <see langword="true" /> se o ponteiro do mouse estiver sobre o mesmo resultado do elemento que um teste de clique; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-852">
              <see langword="true" /> if the mouse pointer is over the same element result as a hit test; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3347b-853">O padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-853">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-854">Diferentemente <xref:System.Windows.UIElement.IsMouseOver%2A>, essa propriedade só é `true` se o ponteiro do mouse está sobre o elemento literal — assim como para um teste de clique.</span><span class="sxs-lookup"><span data-stu-id="3347b-854">Unlike <xref:System.Windows.UIElement.IsMouseOver%2A>, this property is only `true` if the mouse pointer is over the literal element—as it is for a hit test.</span></span> <span data-ttu-id="3347b-855">Se, em vez disso, o ponteiro do mouse está sobre um elemento filho, em particular sobre os elementos que fazem parte de um elemento modelo mais profundo e composição, essa propriedade será `false`.</span><span class="sxs-lookup"><span data-stu-id="3347b-855">If the mouse pointer is instead over a child element, in particular over elements that are part of an element's deeper template and compositing, this property will be `false`.</span></span> <span data-ttu-id="3347b-856">A menos que você sabe como um controle é composto (por exemplo, você usa essa propriedade em um modelo de controle personalizado para um controle que você definir), essa propriedade pode retornar resultados inesperados.</span><span class="sxs-lookup"><span data-stu-id="3347b-856">Unless you know how a control is composited (for example, you use this property in a custom control template for a control that you define), this property might return unexpected results.</span></span> <span data-ttu-id="3347b-857">Na maioria dos cenários em que você não estiver criando controles, use <xref:System.Windows.UIElement.IsMouseOver%2A> em vez disso.</span><span class="sxs-lookup"><span data-stu-id="3347b-857">For most scenarios where you are not authoring controls, use <xref:System.Windows.UIElement.IsMouseOver%2A> instead.</span></span>  
  
 <span data-ttu-id="3347b-858">Se o mouse é capturado por esse elemento, e essa propriedade é `true` no momento da captura, essa propriedade continuarão a retornar `true` até que a captura do mouse é perdida e o ponteiro não está sobre seus limites.</span><span class="sxs-lookup"><span data-stu-id="3347b-858">If the mouse is captured by this element, and this property is `true` at time of capture, this property will continue to return `true` until mouse capture is lost and the pointer is not over its bounds.</span></span>  
  
<a name="dependencyPropertyInfo_IsMouseDirectlyOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3347b-859">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="3347b-859">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-860">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-860">Identifier field</span></span>|<xref:System.Windows.UIElement.IsMouseDirectlyOverProperty>|  
|<span data-ttu-id="3347b-861">Propriedades de metadados definido como `true`</span><span class="sxs-lookup"><span data-stu-id="3347b-861">Metadata properties set to `true`</span></span>|<span data-ttu-id="3347b-862">Nenhum</span><span class="sxs-lookup"><span data-stu-id="3347b-862">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseEnter" />
        <altmember cref="E:System.Windows.UIElement.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOverChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseDirectlyOverChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseDirectlyOverChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsMouseDirectlyOverChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseDirectlyOverChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseDirectlyOverChanged;" />
      <MemberSignature Language="F#" Value="member this.IsMouseDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsMouseDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-863">Ocorre quando o valor da propriedade <see cref="P:System.Windows.UIElement.IsMouseDirectlyOver" /> é alterado neste elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-863">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsMouseDirectlyOver" /> property changes on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-864">Esse membro é um [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] evento, não um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-864">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsMouseDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseDirectlyOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMouseDirectlyOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsMouseDirectlyOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-865">Identifica a propriedade de dependência <see cref="P:System.Windows.UIElement.IsMouseDirectlyOver" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-865">Identifies the <see cref="P:System.Windows.UIElement.IsMouseDirectlyOver" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.UIElement.IsMouseDirectlyOverChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseOver">
      <MemberSignature Language="C#" Value="public bool IsMouseOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsMouseOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMouseOver : bool" Usage="System.Windows.UIElement.IsMouseOver" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-866">Obtém um valor que indica se o ponteiro do mouse está localizado sobre esse elemento (incluindo os elementos filho na árvore visual).</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-866">Gets a value indicating whether the mouse pointer is located over this element (including child elements in the visual tree).</span>
          </span>
          <span data-ttu-id="3347b-867">É uma propriedade de dependência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-867">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3347b-868">
            <see langword="true" /> se o ponteiro do mouse estiver sobre o elemento ou seus elementos filho; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-868">
              <see langword="true" /> if mouse pointer is over the element or its child elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3347b-869">O padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-869">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-870">Normalmente, os controles são compostos, de modo que os vários elementos dentro do controle (a árvore visual) irá relatar o estado do mouse para o controle recipiente.</span><span class="sxs-lookup"><span data-stu-id="3347b-870">Typically, controls are composited such that the various elements inside the control (the visual tree) will all report the mouse state for the containing control.</span></span> <span data-ttu-id="3347b-871">Por exemplo, uma <xref:System.Windows.Controls.ListBox> controle de estilo relatará <xref:System.Windows.UIElement.IsMouseOver%2A> como `true` se o mouse em qualquer lugar ao longo de sua geometria, incluindo quaisquer <xref:System.Windows.Controls.ListBoxItem>.</span><span class="sxs-lookup"><span data-stu-id="3347b-871">For example, a <xref:System.Windows.Controls.ListBox> style control will report <xref:System.Windows.UIElement.IsMouseOver%2A> as `true` if the mouse is anywhere over its geometry, including any <xref:System.Windows.Controls.ListBoxItem>.</span></span>  
  
 <span data-ttu-id="3347b-872">Embora não exista um evento de "IsMouseOverChanged" análogo, fazer vários eventos semelhantes.</span><span class="sxs-lookup"><span data-stu-id="3347b-872">Although an analogous "IsMouseOverChanged" event does not exist, several similar events do.</span></span> <span data-ttu-id="3347b-873">Por exemplo, você pode manipular <xref:System.Windows.UIElement.MouseEnter>, <xref:System.Windows.UIElement.MouseMove>, e <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>.</span><span class="sxs-lookup"><span data-stu-id="3347b-873">For example, you can handle <xref:System.Windows.UIElement.MouseEnter>, <xref:System.Windows.UIElement.MouseMove>, and <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>.</span></span>  
  
 <span data-ttu-id="3347b-874">Se este elemento captura o mouse, essa propriedade permanece `true` até que a captura do mouse é perdida e o ponteiro do mouse sai dos limites do elemento.</span><span class="sxs-lookup"><span data-stu-id="3347b-874">If this element captures the mouse, this property remains `true` until mouse capture is lost and the mouse pointer leaves the element bounds.</span></span>  
  
 <span data-ttu-id="3347b-875">Alguns controles deliberadamente capturam o mouse sobre determinadas ações que parecem não envolvem diretamente o mouse.</span><span class="sxs-lookup"><span data-stu-id="3347b-875">Some controls deliberately capture the mouse on certain actions that do not appear to directly involve the mouse.</span></span> <span data-ttu-id="3347b-876">Isso pode causar <xref:System.Windows.UIElement.IsMouseOver%2A> sendo `true` , mesmo que o mouse, aparentemente, não foi movido.</span><span class="sxs-lookup"><span data-stu-id="3347b-876">This can lead to <xref:System.Windows.UIElement.IsMouseOver%2A> being `true` even though the mouse has not apparently moved.</span></span>  
  
<a name="dependencyPropertyInfo_IsMouseOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3347b-877">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="3347b-877">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-878">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-878">Identifier field</span></span>|<xref:System.Windows.UIElement.IsMouseOverProperty>|  
|<span data-ttu-id="3347b-879">Propriedades de metadados definido como `true`</span><span class="sxs-lookup"><span data-stu-id="3347b-879">Metadata properties set to `true`</span></span>|<span data-ttu-id="3347b-880">Nenhum</span><span class="sxs-lookup"><span data-stu-id="3347b-880">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3347b-881">O exemplo a seguir faz referência a essa propriedade como o tipo de propriedade de um <xref:System.Windows.Trigger>, que faz parte de um \<Triggers > bloco.</span><span class="sxs-lookup"><span data-stu-id="3347b-881">The following example references this property as the property type of a <xref:System.Windows.Trigger>, part of a \<Style.Triggers> block.</span></span> <span data-ttu-id="3347b-882">Se o mouse está sobre o controle, o texto do controle fica azul e o cursor se torne uma mão.</span><span class="sxs-lookup"><span data-stu-id="3347b-882">If the mouse is over the control, the control text turns blue and the cursor becomes a hand.</span></span>  
  
 [!code-xaml[ListViewChkBox#Trigger](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewChkBox/CS/window1.xaml#trigger)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsMouseOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMouseOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsMouseOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-883">Identifica a propriedade de dependência <see cref="P:System.Windows.UIElement.IsMouseOver" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-883">Identifies the <see cref="P:System.Windows.UIElement.IsMouseOver" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptured">
      <MemberSignature Language="C#" Value="public bool IsStylusCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsStylusCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusCaptured { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStylusCaptured : bool" Usage="System.Windows.UIElement.IsStylusCaptured" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusCaptured</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-884">Obtém um valor que indica se a caneta é capturada por este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-884">Gets a value indicating whether the stylus is captured by this element.</span>
          </span>
          <span data-ttu-id="3347b-885">É uma propriedade de dependência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-885">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3347b-886">
            <see langword="true" /> se o elemento tem captura da caneta; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-886">
              <see langword="true" /> if the element has stylus capture; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3347b-887">O padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-887">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-888">Toque, mouse e entrada de caneta existem em uma relação específica.</span><span class="sxs-lookup"><span data-stu-id="3347b-888">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="3347b-889">Para obter mais informações, consulte [visão geral de entrada](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3347b-889">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusCaptured"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3347b-890">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="3347b-890">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-891">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-891">Identifier field</span></span>|<xref:System.Windows.UIElement.IsStylusCapturedProperty>|  
|<span data-ttu-id="3347b-892">Propriedades de metadados definido como `true`</span><span class="sxs-lookup"><span data-stu-id="3347b-892">Metadata properties set to `true`</span></span>|<span data-ttu-id="3347b-893">Nenhum</span><span class="sxs-lookup"><span data-stu-id="3347b-893">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.CaptureStylus" />
        <altmember cref="E:System.Windows.UIElement.GotStylusCapture" />
        <altmember cref="E:System.Windows.UIElement.LostStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusCapturedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusCapturedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusCapturedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsStylusCapturedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusCapturedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusCapturedChanged;" />
      <MemberSignature Language="F#" Value="member this.IsStylusCapturedChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsStylusCapturedChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-894">Ocorre quando o valor da propriedade <see cref="P:System.Windows.UIElement.IsStylusCaptured" /> é alterado neste elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-894">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsStylusCaptured" /> property changes on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-895">Esse membro é um [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] evento, não um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-895">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsStylusCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusCapturedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsStylusCapturedProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsStylusCapturedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-896">Identifica a propriedade de dependência <see cref="P:System.Windows.UIElement.IsStylusCaptured" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-896">Identifies the <see cref="P:System.Windows.UIElement.IsStylusCaptured" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithin">
      <MemberSignature Language="C#" Value="public bool IsStylusCaptureWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusCaptureWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsStylusCaptureWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusCaptureWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusCaptureWithin { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStylusCaptureWithin : bool" Usage="System.Windows.UIElement.IsStylusCaptureWithin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-897">Obtém um valor que determina se a captura da caneta é mantida por esse elemento ou um elemento nos limites do elemento e sua árvore visual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-897">Gets a value that determines whether stylus capture is held by this element, or an element within the element bounds and its visual tree.</span>
          </span>
          <span data-ttu-id="3347b-898">É uma propriedade de dependência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-898">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3347b-899">
            <see langword="true" /> se esse elemento ou um elemento contido tiver captura de caneta; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-899">
              <see langword="true" /> if this element or a contained element has stylus capture; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3347b-900">O padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-900">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-901">Toque, mouse e entrada de caneta existem em uma relação específica.</span><span class="sxs-lookup"><span data-stu-id="3347b-901">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="3347b-902">Para obter mais informações, consulte [suporte de entrada de toque no Windows Vista](https://msdn.microsoft.com/library/63f1d71f-03d8-4d83-a174-e3dc7c57bad0) e [visão geral de entrada](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3347b-902">For more information, see [Touch Input Support in Windows Vista](https://msdn.microsoft.com/library/63f1d71f-03d8-4d83-a174-e3dc7c57bad0) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusCaptureWithin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3347b-903">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="3347b-903">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-904">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-904">Identifier field</span></span>|<xref:System.Windows.UIElement.IsStylusCaptureWithinProperty>|  
|<span data-ttu-id="3347b-905">Propriedades de metadados definido como `true`</span><span class="sxs-lookup"><span data-stu-id="3347b-905">Metadata properties set to `true`</span></span>|<span data-ttu-id="3347b-906">Nenhum</span><span class="sxs-lookup"><span data-stu-id="3347b-906">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.CaptureStylus" />
        <altmember cref="P:System.Windows.UIElement.IsStylusCaptured" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusCaptureWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusCaptureWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsStylusCaptureWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusCaptureWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusCaptureWithinChanged;" />
      <MemberSignature Language="F#" Value="member this.IsStylusCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsStylusCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-907">Ocorre quando o valor da propriedade <see cref="P:System.Windows.UIElement.IsStylusCaptureWithin" /> é alterado neste elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-907">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsStylusCaptureWithin" /> property changes on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-908">Esse é um [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] evento, não um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-908">This is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusCaptureWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusCaptureWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsStylusCaptureWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusCaptureWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusCaptureWithinProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsStylusCaptureWithinProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsStylusCaptureWithinProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-909">Identifica a propriedade de dependência <see cref="P:System.Windows.UIElement.IsStylusCaptureWithin" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-909">Identifies the <see cref="P:System.Windows.UIElement.IsStylusCaptureWithin" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.UIElement.IsStylusCaptureWithinChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOver">
      <MemberSignature Language="C#" Value="public bool IsStylusDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsStylusDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusDirectlyOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStylusDirectlyOver : bool" Usage="System.Windows.UIElement.IsStylusDirectlyOver" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusDirectlyOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-910">Obtém um valor que indica se a posição da caneta corresponde aos resultados de teste de clique, que levam em consideração a composição dos elementos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-910">Gets a value that indicates whether the stylus position corresponds to hit test results, which take element compositing into account.</span>
          </span>
          <span data-ttu-id="3347b-911">É uma propriedade de dependência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-911">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3347b-912">
            <see langword="true" /> se o ponteiro da caneta estiver sobre o mesmo resultado do elemento que um teste de clique; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-912">
              <see langword="true" /> if the stylus pointer is over the same element result as a hit test; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3347b-913">O padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-913">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-914">Diferentemente <xref:System.Windows.UIElement.IsStylusOver%2A>, essa propriedade só é `true` se a caneta está sobre o elemento.</span><span class="sxs-lookup"><span data-stu-id="3347b-914">Unlike <xref:System.Windows.UIElement.IsStylusOver%2A>, this property is only `true` if the stylus is over the element.</span></span> <span data-ttu-id="3347b-915">Se, em vez disso, a caneta está sobre um elemento filho ou elementos que fazem parte da composição de mais de um elemento (a árvore visual), essa propriedade será `false`.</span><span class="sxs-lookup"><span data-stu-id="3347b-915">If the stylus is instead over a child element or over elements that are part of an element's deeper compositing (the visual tree), this property will be `false`.</span></span>  
  
 <span data-ttu-id="3347b-916">A menos que você sabe como um controle é composto (por exemplo, você usa essa propriedade em um modelo de controle personalizado para um controle que você definir), essa propriedade pode retornar resultados inesperados.</span><span class="sxs-lookup"><span data-stu-id="3347b-916">Unless you know how a control is composited (for example, you use this property in a custom control template for a control that you define), this property might return unexpected results.</span></span> <span data-ttu-id="3347b-917">Na maioria dos cenários em que você não estiver criando controles, use <xref:System.Windows.UIElement.IsStylusOver%2A> em vez disso.</span><span class="sxs-lookup"><span data-stu-id="3347b-917">For most scenarios where you are not authoring controls, use <xref:System.Windows.UIElement.IsStylusOver%2A> instead.</span></span>  
  
 <span data-ttu-id="3347b-918">Se este elemento tem captura da caneta e esta propriedade é `true` no momento da captura, essa propriedade permanece `true` até que a captura da caneta é perdida e não está sobre seus limites.</span><span class="sxs-lookup"><span data-stu-id="3347b-918">If this element has stylus capture and this property is `true` at the time of capture, this property remains `true` until stylus capture is lost and the stylus is not over its bounds.</span></span>  
  
 <span data-ttu-id="3347b-919">Toque, mouse e entrada de caneta existem em uma relação específica.</span><span class="sxs-lookup"><span data-stu-id="3347b-919">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="3347b-920">Para obter mais informações, consulte [visão geral de entrada](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3347b-920">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusDirectlyOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3347b-921">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="3347b-921">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-922">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-922">Identifier field</span></span>|<xref:System.Windows.UIElement.IsStylusDirectlyOverProperty>|  
|<span data-ttu-id="3347b-923">Propriedades de metadados definido como `true`</span><span class="sxs-lookup"><span data-stu-id="3347b-923">Metadata properties set to `true`</span></span>|<span data-ttu-id="3347b-924">Nenhum</span><span class="sxs-lookup"><span data-stu-id="3347b-924">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.IsMouseDirectlyOver" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOverChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusDirectlyOverChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusDirectlyOverChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsStylusDirectlyOverChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusDirectlyOverChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusDirectlyOverChanged;" />
      <MemberSignature Language="F#" Value="member this.IsStylusDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsStylusDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-925">Ocorre quando o valor da propriedade <see cref="P:System.Windows.UIElement.IsStylusDirectlyOver" /> é alterado neste elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-925">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsStylusDirectlyOver" /> property changes on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-926">Esse membro é um [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] evento, não um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-926">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsStylusDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusDirectlyOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsStylusDirectlyOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsStylusDirectlyOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-927">Identifica a propriedade de dependência <see cref="P:System.Windows.UIElement.IsStylusDirectlyOver" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-927">Identifies the <see cref="P:System.Windows.UIElement.IsStylusDirectlyOver" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusOver">
      <MemberSignature Language="C#" Value="public bool IsStylusOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsStylusOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStylusOver : bool" Usage="System.Windows.UIElement.IsStylusOver" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-928">Obtém um valor que indica se o cursor da caneta está localizado sobre esse elemento (incluindo elementos filho visuais).</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-928">Gets a value indicating whether the stylus cursor is located over this element (including visual child elements).</span>
          </span>
          <span data-ttu-id="3347b-929">É uma propriedade de dependência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-929">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3347b-930">
            <see langword="true" /> se o cursor da caneta está sobre o elemento ou seus elementos filho; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-930">
              <see langword="true" /> if stylus cursor is over the element or its child elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3347b-931">O padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-931">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-932">Se este elemento tem captura da caneta, essa propriedade será continuam a retornar `true` até que a captura da caneta é perdida e o ponteiro está fora dos seus limites.</span><span class="sxs-lookup"><span data-stu-id="3347b-932">If this element has stylus capture, this property will continue to return `true` until stylus capture is lost and the pointer is out of its bounds.</span></span>  
  
 <span data-ttu-id="3347b-933">Toque, mouse e entrada de caneta existem em uma relação específica.</span><span class="sxs-lookup"><span data-stu-id="3347b-933">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="3347b-934">Para obter mais informações, consulte [visão geral de entrada](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3347b-934">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3347b-935">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="3347b-935">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-936">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-936">Identifier field</span></span>|<xref:System.Windows.UIElement.IsStylusOverProperty>|  
|<span data-ttu-id="3347b-937">Propriedades de metadados definido como `true`</span><span class="sxs-lookup"><span data-stu-id="3347b-937">Metadata properties set to `true`</span></span>|<span data-ttu-id="3347b-938">Nenhum</span><span class="sxs-lookup"><span data-stu-id="3347b-938">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsStylusOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsStylusOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsStylusOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-939">Identifica a propriedade de dependência <see cref="P:System.Windows.UIElement.IsStylusOver" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-939">Identifies the <see cref="P:System.Windows.UIElement.IsStylusOver" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsVisible" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsVisible { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsVisible : bool" Usage="System.Windows.UIElement.IsVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-940">Obtém um valor que indica se esse elemento está visível no [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-940">Gets a value indicating whether this element is visible in the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span>
          </span>
          <span data-ttu-id="3347b-941">É uma propriedade de dependência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-941">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3347b-942">
            <see langword="true" /> se o elemento estiver visível; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-942">
              <see langword="true" /> if the element is visible; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-943">Determinação de <xref:System.Windows.UIElement.IsVisible%2A> valor leva em conta a todos os fatores de layout.</span><span class="sxs-lookup"><span data-stu-id="3347b-943">Determination of the <xref:System.Windows.UIElement.IsVisible%2A> value takes all factors of layout into account.</span></span> <span data-ttu-id="3347b-944">Em contraste, <xref:System.Windows.UIElement.Visibility%2A>, que é uma propriedade configurável, só indica a intenção de criar programaticamente um elemento visível ou invisível.</span><span class="sxs-lookup"><span data-stu-id="3347b-944">In contrast, <xref:System.Windows.UIElement.Visibility%2A>, which is a settable property, only indicates the intention to programmatically make an element visible or invisible.</span></span>  
  
 <span data-ttu-id="3347b-945">Elementos onde <xref:System.Windows.UIElement.IsVisible%2A> é `false` participe de eventos de entrada (ou comandos), faça não influenciam o measure ou cálculos de layout, não estão focalizável, não estão em uma sequência de guia e não serão reportadas no teste de clique.</span><span class="sxs-lookup"><span data-stu-id="3347b-945">Elements where <xref:System.Windows.UIElement.IsVisible%2A> is `false` do not participate in input events (or commands), do not influence either the measure or arrange passes of layout, are not focusable, are not in a tab sequence, and will not be reported in hit testing.</span></span> <span data-ttu-id="3347b-946">Por outro lado, elementos onde <xref:System.Windows.UIElement.IsEnabled%2A> é `false` ainda farão parte de eventos e comandos e teste de clique, mas também não são focalizável.</span><span class="sxs-lookup"><span data-stu-id="3347b-946">In contrast, elements where <xref:System.Windows.UIElement.IsEnabled%2A> is `false` will still participate in events and commands, and hit testing, but are also not focusable.</span></span>  
  
<a name="dependencyPropertyInfo_IsVisible"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3347b-947">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="3347b-947">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-948">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-948">Identifier field</span></span>|<xref:System.Windows.UIElement.IsVisibleProperty>|  
|<span data-ttu-id="3347b-949">Propriedades de metadados definido como `true`</span><span class="sxs-lookup"><span data-stu-id="3347b-949">Metadata properties set to `true`</span></span>|<span data-ttu-id="3347b-950">Nenhum</span><span class="sxs-lookup"><span data-stu-id="3347b-950">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisibleChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsVisibleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsVisibleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsVisibleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsVisibleChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsVisibleChanged;" />
      <MemberSignature Language="F#" Value="member this.IsVisibleChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsVisibleChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-951">Ocorre quando o valor da propriedade <see cref="P:System.Windows.UIElement.IsVisible" /> é alterado neste elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-951">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsVisible" /> property changes on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-952">Esse evento não será gerado se o elemento não está sendo processado, o sistema de layout, por motivos diferente do valor de <xref:System.Windows.UIElement.IsVisible%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="3347b-952">This event is not raised if the element is not being rendered by the layout system, for reasons other than the value of the <xref:System.Windows.UIElement.IsVisible%2A> property.</span></span> <span data-ttu-id="3347b-953">Por exemplo, o elemento não pode ter um elemento visual associado.</span><span class="sxs-lookup"><span data-stu-id="3347b-953">For example, the element might not have an associated visual.</span></span>  
  
 <span data-ttu-id="3347b-954">Esse membro é um [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] evento, não um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-954">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisibleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsVisibleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsVisibleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsVisibleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsVisibleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsVisibleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsVisibleProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsVisibleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-955">Identifica a propriedade de dependência <see cref="P:System.Windows.UIElement.IsVisible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-955">Identifies the <see cref="P:System.Windows.UIElement.IsVisible" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler KeyDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler KeyDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.KeyDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyDown As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ KeyDown;" />
      <MemberSignature Language="F#" Value="member this.KeyDown : System.Windows.Input.KeyEventHandler " Usage="member this.KeyDown : System.Windows.Input.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.KeyDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-956">Ocorre quando uma tecla é pressionada enquanto o foco está neste elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-956">Occurs when a key is pressed while focus is on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-957">Manipulação de chave interage com outros recursos de plataforma, como a composição de texto e dos comandos.</span><span class="sxs-lookup"><span data-stu-id="3347b-957">Key handling interacts with other platform features such as commanding and text composition.</span></span> <span data-ttu-id="3347b-958">O <xref:System.Windows.UIElement.KeyDown> é um evento de entrada de texto de nível inferior pode não se comportar conforme o esperado em certos controles.</span><span class="sxs-lookup"><span data-stu-id="3347b-958">The <xref:System.Windows.UIElement.KeyDown> event is a lower-level text input event that might not behave as expected on certain controls.</span></span> <span data-ttu-id="3347b-959">Isso ocorre porque alguns controles têm a composição de controle ou manipulação de classe que fornece uma versão de nível mais alto de texto, manipulação de entrada e eventos relacionados.</span><span class="sxs-lookup"><span data-stu-id="3347b-959">This is because some controls have control compositing or class handling that provides a higher-level version of text input handling and related events.</span></span>  
  
 <span data-ttu-id="3347b-960">Esse evento cria um alias para o <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> anexado a eventos para essa classe, de modo que <xref:System.Windows.UIElement.KeyDown> faz parte da classe a lista de membros quando <xref:System.Windows.UIElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="3347b-960">This event creates an alias for the <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement.KeyDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="3347b-961">Manipuladores de eventos que estão anexados para o <xref:System.Windows.UIElement.KeyDown> evento associado subjacente <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-961">Event handlers that are attached to the <xref:System.Windows.UIElement.KeyDown> event are attached to the underlying <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_KeyDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-962">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-962">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-963">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-963">Identifier field</span></span>|<xref:System.Windows.UIElement.KeyDownEvent>|  
|<span data-ttu-id="3347b-964">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-964">Routing strategy</span></span>|<span data-ttu-id="3347b-965">Propagação</span><span class="sxs-lookup"><span data-stu-id="3347b-965">Bubbling</span></span>|  
|<span data-ttu-id="3347b-966">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-966">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="3347b-967">O evento por túnel correspondente é <xref:System.Windows.UIElement.PreviewKeyDown>.</span><span class="sxs-lookup"><span data-stu-id="3347b-967">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewKeyDown>.</span></span>  
  
-   <span data-ttu-id="3347b-968">Substituir <xref:System.Windows.UIElement.OnKeyDown%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-968">Override <xref:System.Windows.UIElement.OnKeyDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="KeyDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.KeyDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.KeyDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-969">Identifica o evento roteado <see cref="E:System.Windows.UIElement.KeyDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-969">Identifies the <see cref="E:System.Windows.UIElement.KeyDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-970">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-970">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-971">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-971">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-972">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-972">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-973">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-973">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-974">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-974">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler KeyUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler KeyUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.KeyUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyUp As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ KeyUp;" />
      <MemberSignature Language="F#" Value="member this.KeyUp : System.Windows.Input.KeyEventHandler " Usage="member this.KeyUp : System.Windows.Input.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.KeyUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-975">Ocorre quando uma chave é liberada enquanto o foco está neste elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-975">Occurs when a key is released while focus is on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-976">Esse evento cria um alias para o <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> anexado a eventos para essa classe, de modo que <xref:System.Windows.UIElement.KeyUp> faz parte da classe a lista de membros quando <xref:System.Windows.UIElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="3347b-976">This event creates an alias for the <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> attached event for this class so that  <xref:System.Windows.UIElement.KeyUp> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="3347b-977">Manipuladores de eventos que estão anexados para o <xref:System.Windows.UIElement.KeyUp> evento associado subjacente <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-977">Event handlers that are attached to the <xref:System.Windows.UIElement.KeyUp> event are attached to the underlying <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_KeyUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-978">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-978">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-979">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-979">Identifier field</span></span>|<xref:System.Windows.UIElement.KeyUpEvent>|  
|<span data-ttu-id="3347b-980">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-980">Routing strategy</span></span>|<span data-ttu-id="3347b-981">Propagação</span><span class="sxs-lookup"><span data-stu-id="3347b-981">Bubbling</span></span>|  
|<span data-ttu-id="3347b-982">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-982">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="3347b-983">O evento por túnel correspondente é <xref:System.Windows.UIElement.PreviewKeyUp>.</span><span class="sxs-lookup"><span data-stu-id="3347b-983">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewKeyUp>.</span></span>  
  
-   <span data-ttu-id="3347b-984">Substituir <xref:System.Windows.UIElement.OnKeyUp%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-984">Override <xref:System.Windows.UIElement.OnKeyUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.KeyDown" />
      </Docs>
    </Member>
    <Member MemberName="KeyUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.KeyUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.KeyUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-985">Identifica o evento roteado <see cref="E:System.Windows.UIElement.KeyUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-985">Identifies the <see cref="E:System.Windows.UIElement.KeyUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-986">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-986">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-987">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-987">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-988">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-988">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-989">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-989">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-990">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-990">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutUpdated">
      <MemberSignature Language="C#" Value="public event EventHandler LayoutUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LayoutUpdated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.LayoutUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LayoutUpdated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LayoutUpdated;" />
      <MemberSignature Language="F#" Value="member this.LayoutUpdated : EventHandler " Usage="member this.LayoutUpdated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-991">Ocorre quando o layout dos vários elementos visuais associados ao <see cref="T:System.Windows.Threading.Dispatcher" /> atual é alterado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-991">Occurs when the layout of the various visual elements associated with the current <see cref="T:System.Windows.Threading.Dispatcher" /> changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-992">Uma atualização de layout pode ocorrer devido a uma alteração de propriedade, um redimensionamento de janela ou uma solicitação explícita do usuário.</span><span class="sxs-lookup"><span data-stu-id="3347b-992">A layout update can occur as a result of a property change, a window resize, or an explicit user request.</span></span>  
  
 <span data-ttu-id="3347b-993">Esse membro é um [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] evento, não um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-993">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler LostFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler LostFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.LostFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostFocus As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ LostFocus;" />
      <MemberSignature Language="F#" Value="member this.LostFocus : System.Windows.RoutedEventHandler " Usage="member this.LostFocus : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-994">Ocorre quando este elemento perde o foco lógico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-994">Occurs when this element loses logical focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-995">Foco lógico é diferente do foco do teclado se o foco é deliberadamente forçado imediatamente, usando uma chamada de método, mas o foco do teclado anterior existe em um escopo diferente.</span><span class="sxs-lookup"><span data-stu-id="3347b-995">Logical focus differs from keyboard focus if focus is deliberately forced away by using a method call but the previous keyboard focus exists in a different scope.</span></span> <span data-ttu-id="3347b-996">Neste cenário, permanece de foco do teclado em que ele é e o elemento no qual um <xref:System.Windows.UIElement.Focus%2A> método é chamado ainda obtém de foco lógico.</span><span class="sxs-lookup"><span data-stu-id="3347b-996">In this scenario, keyboard focus remains where it is, and the element where a <xref:System.Windows.UIElement.Focus%2A> method is called still gets logical focus.</span></span>  
  
 <span data-ttu-id="3347b-997">Uma interpretação mais precisa desse evento é que ele é gerado quando o valor da <xref:System.Windows.UIElement.IsFocused%2A> muda de propriedade de um elemento na rota de `true` para `false`.</span><span class="sxs-lookup"><span data-stu-id="3347b-997">A more precise interpretation of this event is that it is raised when the value of the <xref:System.Windows.UIElement.IsFocused%2A> property of an element in the route changes from `true` to `false`.</span></span>  
  
 <span data-ttu-id="3347b-998">Como este evento usa o roteamento por propagação, o elemento que perde o foco pode ser um elemento filho em vez do elemento no qual o manipulador de eventos, na verdade, está anexado.</span><span class="sxs-lookup"><span data-stu-id="3347b-998">Because this event uses bubbling routing, the element that loses focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="3347b-999">Verifique o <xref:System.Windows.RoutedEventArgs.Source%2A> nos dados do evento para determinar o elemento real que ganhou o foco.</span><span class="sxs-lookup"><span data-stu-id="3347b-999">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that gained focus.</span></span>  
  
<a name="routedEventInfo_LostFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-1000">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-1000">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-1001">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-1001">Identifier field</span></span>|<xref:System.Windows.UIElement.LostFocusEvent>|  
|<span data-ttu-id="3347b-1002">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-1002">Routing strategy</span></span>|<span data-ttu-id="3347b-1003">Propagação</span><span class="sxs-lookup"><span data-stu-id="3347b-1003">Bubbling</span></span>|  
|<span data-ttu-id="3347b-1004">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-1004">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
-   <span data-ttu-id="3347b-1005">Não há nenhum evento de túnel correspondente.</span><span class="sxs-lookup"><span data-stu-id="3347b-1005">There is no corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="3347b-1006">Substituir <xref:System.Windows.UIElement.OnLostFocus%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-1006">Override <xref:System.Windows.UIElement.OnLostFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.LostKeyboardFocus" />
        <altmember cref="M:System.Windows.UIElement.Focus" />
      </Docs>
    </Member>
    <Member MemberName="LostFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.LostFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.LostFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-1007">Identifica o evento roteado <see cref="E:System.Windows.UIElement.LostFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1007">Identifies the <see cref="E:System.Windows.UIElement.LostFocus" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1008">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-1008">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-1009">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1009">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-1010">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-1010">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-1011">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1011">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-1012">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1012">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler LostKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler LostKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.LostKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ LostKeyboardFocus;" />
      <MemberSignature Language="F#" Value="member this.LostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " Usage="member this.LostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-1013">Ocorre quando o teclado não está mais focalizado no elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1013">Occurs when the keyboard is no longer focused on this element,.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1014">Como este evento usa o roteamento por propagação, o elemento que perdeu o foco pode ser um elemento filho em vez do elemento no qual o manipulador de eventos, na verdade, está anexado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1014">Because this event uses bubbling routing, the element that lost focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="3347b-1015">Verifique o <xref:System.Windows.RoutedEventArgs.Source%2A> nos dados do evento para determinar o elemento real que perdeu o foco.</span><span class="sxs-lookup"><span data-stu-id="3347b-1015">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.</span></span>  
  
 <span data-ttu-id="3347b-1016">Esse evento cria um alias para o <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.UIElement.LostKeyboardFocus> faz parte da classe a lista de membros quando <xref:System.Windows.UIElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="3347b-1016">This event creates an alias for the <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.LostKeyboardFocus> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="3347b-1017">Manipuladores de eventos que estão anexados para o <xref:System.Windows.UIElement.LostKeyboardFocus> evento associado subjacente <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1017">Event handlers that are attached to the <xref:System.Windows.UIElement.LostKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_LostKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-1018">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-1018">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-1019">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-1019">Identifier field</span></span>|<xref:System.Windows.UIElement.LostKeyboardFocusEvent>|  
|<span data-ttu-id="3347b-1020">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-1020">Routing strategy</span></span>|<span data-ttu-id="3347b-1021">Propagação</span><span class="sxs-lookup"><span data-stu-id="3347b-1021">Bubbling</span></span>|  
|<span data-ttu-id="3347b-1022">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-1022">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="3347b-1023">O evento por túnel correspondente é <xref:System.Windows.UIElement.PreviewLostKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1023">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewLostKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="3347b-1024">Substituir <xref:System.Windows.UIElement.OnLostKeyboardFocus%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-1024">Override <xref:System.Windows.UIElement.OnLostKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.LostKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.LostKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-1025">Identifica o evento roteado <see cref="E:System.Windows.UIElement.LostKeyboardFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1025">Identifies the <see cref="E:System.Windows.UIElement.LostKeyboardFocus" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1026">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-1026">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-1027">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1027">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-1028">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-1028">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-1029">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1029">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-1030">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1030">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostMouseCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler LostMouseCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler LostMouseCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.LostMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostMouseCapture As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ LostMouseCapture;" />
      <MemberSignature Language="F#" Value="member this.LostMouseCapture : System.Windows.Input.MouseEventHandler " Usage="member this.LostMouseCapture : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-1031">Ocorre quando este elemento perde a captura do mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1031">Occurs when this element loses mouse capture.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1032">Quando um elemento captura o mouse, ele recebe entrada do mouse, mesmo se o ponteiro está fora dos limites.</span><span class="sxs-lookup"><span data-stu-id="3347b-1032">When an element captures the mouse, it receives mouse input even if the pointer is outside its bounds.</span></span> <span data-ttu-id="3347b-1033">Normalmente, o mouse é capturado apenas durante operações de arrastar e soltar.</span><span class="sxs-lookup"><span data-stu-id="3347b-1033">The mouse is typically captured only during drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="3347b-1034">Como este evento usa o roteamento por propagação, o elemento perde a captura pode ser um elemento filho em vez do elemento no qual o manipulador de eventos, na verdade, está anexado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1034">Because this event uses bubbling routing, the element that loses capture might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="3347b-1035">Verifique o <xref:System.Windows.RoutedEventArgs.Source%2A> nos dados do evento para determinar o elemento real que perdeu a captura.</span><span class="sxs-lookup"><span data-stu-id="3347b-1035">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost capture.</span></span>  
  
 <span data-ttu-id="3347b-1036">Esse evento cria um alias para o <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.UIElement.LostMouseCapture> faz parte da classe a lista de membros quando <xref:System.Windows.UIElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="3347b-1036">This event creates an alias for the <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.LostMouseCapture> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="3347b-1037">Manipuladores de eventos que estão anexados para o <xref:System.Windows.UIElement.LostMouseCapture> evento associado subjacente <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1037">Event handlers that are attached to the <xref:System.Windows.UIElement.LostMouseCapture> event are attached to the underlying <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_LostMouseCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-1038">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-1038">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-1039">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-1039">Identifier field</span></span>|<xref:System.Windows.UIElement.LostMouseCaptureEvent>|  
|<span data-ttu-id="3347b-1040">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-1040">Routing strategy</span></span>|<span data-ttu-id="3347b-1041">Propagação</span><span class="sxs-lookup"><span data-stu-id="3347b-1041">Bubbling</span></span>|  
|<span data-ttu-id="3347b-1042">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-1042">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="3347b-1043">Não há nenhum evento de túnel correspondente definido.</span><span class="sxs-lookup"><span data-stu-id="3347b-1043">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="3347b-1044">Substituir <xref:System.Windows.UIElement.OnLostMouseCapture%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-1044">Override <xref:System.Windows.UIElement.OnLostMouseCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostMouseCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostMouseCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostMouseCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.LostMouseCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostMouseCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostMouseCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostMouseCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.LostMouseCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-1045">Identifica o evento roteado <see cref="E:System.Windows.UIElement.LostMouseCapture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1045">Identifies the <see cref="E:System.Windows.UIElement.LostMouseCapture" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1046">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-1046">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-1047">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1047">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-1048">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-1048">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-1049">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1049">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-1050">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1050">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostStylusCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler LostStylusCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler LostStylusCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.LostStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostStylusCapture As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ LostStylusCapture;" />
      <MemberSignature Language="F#" Value="member this.LostStylusCapture : System.Windows.Input.StylusEventHandler " Usage="member this.LostStylusCapture : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-1051">Ocorre quando este elemento perde a captura da caneta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1051">Occurs when this element loses stylus capture.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1052">Quando um elemento captura a caneta, ele recebe entrada de caneta, mesmo se o ponteiro está fora dos limites.</span><span class="sxs-lookup"><span data-stu-id="3347b-1052">When an element captures the stylus, it receives stylus input even if the pointer is outside its bounds.</span></span> <span data-ttu-id="3347b-1053">Normalmente, a caneta é capturada somente durante as operações de arrastar e soltar.</span><span class="sxs-lookup"><span data-stu-id="3347b-1053">The stylus is typically captured only during drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="3347b-1054">Como este evento usa o roteamento por propagação, o elemento que perde o foco pode ser um elemento filho em vez do elemento no qual o manipulador de eventos, na verdade, está anexado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1054">Because this event uses bubbling routing, the element that loses focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="3347b-1055">Verifique o <xref:System.Windows.RoutedEventArgs.Source%2A> nos dados do evento para determinar o elemento real que perdeu o foco.</span><span class="sxs-lookup"><span data-stu-id="3347b-1055">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.</span></span>  
  
 <span data-ttu-id="3347b-1056">Esse evento cria um alias para o <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.UIElement.LostStylusCapture> faz parte da classe a lista de membros quando <xref:System.Windows.UIElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="3347b-1056">This event creates an alias for the <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.LostStylusCapture> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="3347b-1057">Manipuladores de eventos que estão anexados para o <xref:System.Windows.UIElement.LostStylusCapture> evento associado subjacente <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1057">Event handlers that are attached to the <xref:System.Windows.UIElement.LostStylusCapture> event are attached to the underlying <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_LostStylusCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-1058">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-1058">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-1059">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-1059">Identifier field</span></span>|<xref:System.Windows.UIElement.LostStylusCaptureEvent>|  
|<span data-ttu-id="3347b-1060">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-1060">Routing strategy</span></span>|<span data-ttu-id="3347b-1061">Propagação</span><span class="sxs-lookup"><span data-stu-id="3347b-1061">Bubbling</span></span>|  
|<span data-ttu-id="3347b-1062">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-1062">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="3347b-1063">Não há nenhum evento de túnel correspondente definido.</span><span class="sxs-lookup"><span data-stu-id="3347b-1063">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="3347b-1064">Substituir <xref:System.Windows.UIElement.OnLostStylusCapture%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-1064">Override <xref:System.Windows.UIElement.OnLostStylusCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostStylusCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostStylusCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostStylusCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.LostStylusCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostStylusCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostStylusCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostStylusCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.LostStylusCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-1065">Identifica o evento roteado <see cref="E:System.Windows.UIElement.LostStylusCapture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1065">Identifies the <see cref="E:System.Windows.UIElement.LostStylusCapture" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1066">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-1066">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-1067">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1067">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-1068">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-1068">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-1069">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1069">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-1070">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1070">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostTouchCapture">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; LostTouchCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; LostTouchCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.LostTouchCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostTouchCapture As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ LostTouchCapture;" />
      <MemberSignature Language="F#" Value="member this.LostTouchCapture : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.LostTouchCapture : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-1071">Ocorre quando este elemento perde a captura do toque.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1071">Occurs when this element loses a touch capture.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_LostTouchCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-1072">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-1072">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-1073">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-1073">Identifier field</span></span>|<xref:System.Windows.UIElement.LostTouchCaptureEvent>|  
|<span data-ttu-id="3347b-1074">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-1074">Routing strategy</span></span>|<span data-ttu-id="3347b-1075">Propagação</span><span class="sxs-lookup"><span data-stu-id="3347b-1075">Bubbling</span></span>|  
|<span data-ttu-id="3347b-1076">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-1076">Delegate</span></span>|<span data-ttu-id="3347b-1077"><xref:System.EventHandler%601> do tipo <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1077"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="3347b-1078">Substituir <xref:System.Windows.UIElement.OnLostTouchCapture%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-1078">Override <xref:System.Windows.UIElement.OnLostTouchCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostTouchCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostTouchCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostTouchCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.LostTouchCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostTouchCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostTouchCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostTouchCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.LostTouchCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-1079">Identifica o evento roteado <see cref="E:System.Windows.UIElement.LostTouchCapture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1079">Identifies the <see cref="E:System.Windows.UIElement.LostTouchCapture" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationBoundaryFeedback">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.ManipulationBoundaryFeedbackEventArgs&gt; ManipulationBoundaryFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.ManipulationBoundaryFeedbackEventArgs&gt; ManipulationBoundaryFeedback" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.ManipulationBoundaryFeedback" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ManipulationBoundaryFeedback As EventHandler(Of ManipulationBoundaryFeedbackEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::ManipulationBoundaryFeedbackEventArgs ^&gt; ^ ManipulationBoundaryFeedback;" />
      <MemberSignature Language="F#" Value="member this.ManipulationBoundaryFeedback : EventHandler&lt;System.Windows.Input.ManipulationBoundaryFeedbackEventArgs&gt; " Usage="member this.ManipulationBoundaryFeedback : System.EventHandler&lt;System.Windows.Input.ManipulationBoundaryFeedbackEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.ManipulationBoundaryFeedbackEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-1080">Ocorre quando a manipulação atinge um limite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1080">Occurs when the manipulation encounters a boundary.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_ManipulationBoundaryFeedback"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-1081">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-1081">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-1082">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-1082">Identifier field</span></span>|<xref:System.Windows.UIElement.ManipulationBoundaryFeedbackEvent>|  
|<span data-ttu-id="3347b-1083">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-1083">Routing strategy</span></span>|<span data-ttu-id="3347b-1084">Propagação</span><span class="sxs-lookup"><span data-stu-id="3347b-1084">Bubbling</span></span>|  
|<span data-ttu-id="3347b-1085">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-1085">Delegate</span></span>|<span data-ttu-id="3347b-1086"><xref:System.EventHandler%601> do tipo <xref:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1086"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs>.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationBoundaryFeedbackEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ManipulationBoundaryFeedbackEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ManipulationBoundaryFeedbackEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ManipulationBoundaryFeedbackEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ManipulationBoundaryFeedbackEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ManipulationBoundaryFeedbackEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ManipulationBoundaryFeedbackEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.ManipulationBoundaryFeedbackEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-1087">Identifica o evento <see cref="E:System.Windows.UIElement.ManipulationBoundaryFeedback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1087">Identifies the <see cref="E:System.Windows.UIElement.ManipulationBoundaryFeedback" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.ManipulationCompletedEventArgs&gt; ManipulationCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.ManipulationCompletedEventArgs&gt; ManipulationCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.ManipulationCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ManipulationCompleted As EventHandler(Of ManipulationCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::ManipulationCompletedEventArgs ^&gt; ^ ManipulationCompleted;" />
      <MemberSignature Language="F#" Value="member this.ManipulationCompleted : EventHandler&lt;System.Windows.Input.ManipulationCompletedEventArgs&gt; " Usage="member this.ManipulationCompleted : System.EventHandler&lt;System.Windows.Input.ManipulationCompletedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.ManipulationCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-1088">Ocorre quando uma manipulação e inércia no objeto <see cref="T:System.Windows.UIElement" /> é concluída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1088">Occurs when a manipulation and inertia on the <see cref="T:System.Windows.UIElement" /> object is complete.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1089">Você pode usar esse evento para obter informações sobre a manipulação de quando ele for concluído.</span><span class="sxs-lookup"><span data-stu-id="3347b-1089">You can use this event to get information about the manipulation when it completes.</span></span>  <span data-ttu-id="3347b-1090">Por exemplo, você pode usar o <xref:System.Windows.Input.ManipulationCompletedEventArgs.TotalManipulation%2A?displayProperty=nameWithType> alterado de propriedade para determinar a quantidade total a posição da manipulação.</span><span class="sxs-lookup"><span data-stu-id="3347b-1090">For example, you can use the <xref:System.Windows.Input.ManipulationCompletedEventArgs.TotalManipulation%2A?displayProperty=nameWithType> property to determine the total amount the position of the manipulation changed.</span></span>  
  
 <span data-ttu-id="3347b-1091">Para obter mais informações sobre as manipulações, consulte o [visão geral de entrada](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3347b-1091">For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  <span data-ttu-id="3347b-1092">Para obter um exemplo de um aplicativo que responde às manipulações, consulte [instruções passo a passo: Criando seu primeiro aplicativo de toque](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="3347b-1092">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
<a name="routedEventInfo_ManipulationCompleted"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-1093">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-1093">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-1094">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-1094">Identifier field</span></span>|<xref:System.Windows.UIElement.ManipulationCompletedEvent>|  
|<span data-ttu-id="3347b-1095">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-1095">Routing strategy</span></span>|<span data-ttu-id="3347b-1096">Propagação</span><span class="sxs-lookup"><span data-stu-id="3347b-1096">Bubbling</span></span>|  
|<span data-ttu-id="3347b-1097">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-1097">Delegate</span></span>|<span data-ttu-id="3347b-1098"><xref:System.EventHandler%601> do tipo <xref:System.Windows.Input.ManipulationCompletedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1098"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.ManipulationCompletedEventArgs>.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationCompletedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ManipulationCompletedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ManipulationCompletedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ManipulationCompletedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ManipulationCompletedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ManipulationCompletedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ManipulationCompletedEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.ManipulationCompletedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-1099">Identifica o evento roteado <see cref="E:System.Windows.UIElement.ManipulationCompleted" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1099">Identifies the <see cref="E:System.Windows.UIElement.ManipulationCompleted" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationDelta">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.ManipulationDeltaEventArgs&gt; ManipulationDelta;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.ManipulationDeltaEventArgs&gt; ManipulationDelta" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.ManipulationDelta" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ManipulationDelta As EventHandler(Of ManipulationDeltaEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::ManipulationDeltaEventArgs ^&gt; ^ ManipulationDelta;" />
      <MemberSignature Language="F#" Value="member this.ManipulationDelta : EventHandler&lt;System.Windows.Input.ManipulationDeltaEventArgs&gt; " Usage="member this.ManipulationDelta : System.EventHandler&lt;System.Windows.Input.ManipulationDeltaEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.ManipulationDeltaEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-1100">Ocorre quando o dispositivo de entrada muda de posição durante uma manipulação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1100">Occurs when the input device changes position during a manipulation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1101">O <xref:System.Windows.UIElement.ManipulationDelta> evento ocorre várias vezes quando o usuário arrasta dedos na tela durante uma manipulação e novamente quando ocorre a inércia.</span><span class="sxs-lookup"><span data-stu-id="3347b-1101">The <xref:System.Windows.UIElement.ManipulationDelta> event occurs multiple times when the user drags fingers over the screen during a manipulation and again when inertia occurs.</span></span>  <span data-ttu-id="3347b-1102">Você pode usar o <xref:System.Windows.Input.ManipulationDeltaEventArgs.IsInertial%2A> propriedade para verificar se o evento está ocorrendo durante a inércia.</span><span class="sxs-lookup"><span data-stu-id="3347b-1102">You can use the <xref:System.Windows.Input.ManipulationDeltaEventArgs.IsInertial%2A> property to check whether the event is occurring during inertia.</span></span>  
  
 <span data-ttu-id="3347b-1103">O elemento com <xref:System.Windows.UIElement.ManipulationDelta> evento ocorre não é afetada de nenhuma forma, quando o evento ocorre.</span><span class="sxs-lookup"><span data-stu-id="3347b-1103">The element on with <xref:System.Windows.UIElement.ManipulationDelta> event occurs is not affected in any way when the event occurs.</span></span>  <span data-ttu-id="3347b-1104">Você deve fornecer a lógica para o elemento que deve ser manipulado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1104">You must provide the logic to the element that is to be manipulated.</span></span>  <span data-ttu-id="3347b-1105">O <xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A> e <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> propriedades, que são do tipo <xref:System.Windows.Input.ManipulationDelta>, contêm dados sobre como alterar a posição das manipulações e interpretado como mover, redimensionar ou girar um objeto.</span><span class="sxs-lookup"><span data-stu-id="3347b-1105">The <xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A> and <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> properties, which are of type <xref:System.Windows.Input.ManipulationDelta>, contain data about how the position of the manipulations change and interpreted as moving, resizing, or rotating an object.</span></span>  <span data-ttu-id="3347b-1106">Você pode aplicar essas informações para o elemento que deve ser manipulado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1106">You apply that information to the element that is to be manipulated.</span></span>  
  
 <span data-ttu-id="3347b-1107">Para obter mais informações sobre as manipulações, consulte o [visão geral de entrada](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3347b-1107">For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  <span data-ttu-id="3347b-1108">Para obter um exemplo de um aplicativo que responde às manipulações, consulte [instruções passo a passo: Criando seu primeiro aplicativo de toque](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="3347b-1108">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
<a name="routedEventInfo_ManipulationDelta"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-1109">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-1109">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-1110">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-1110">Identifier field</span></span>|<xref:System.Windows.UIElement.ManipulationDeltaEvent>|  
|<span data-ttu-id="3347b-1111">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-1111">Routing strategy</span></span>|<span data-ttu-id="3347b-1112">Propagação</span><span class="sxs-lookup"><span data-stu-id="3347b-1112">Bubbling</span></span>|  
|<span data-ttu-id="3347b-1113">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-1113">Delegate</span></span>|<span data-ttu-id="3347b-1114"><xref:System.EventHandler%601> do tipo <xref:System.Windows.Input.ManipulationDeltaEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1114"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.ManipulationDeltaEventArgs>.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3347b-1115">O exemplo a seguir mostra um manipulador de eventos para o <xref:System.Windows.UIElement.ManipulationDelta> eventos.</span><span class="sxs-lookup"><span data-stu-id="3347b-1115">The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationDelta> event.</span></span> <span data-ttu-id="3347b-1116">O exemplo usa o <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> propriedade para mover, redimensionar e girar um <xref:System.Windows.Shapes.Rectangle>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1116">The example uses the <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> property to move, resize, and rotate a <xref:System.Windows.Shapes.Rectangle>.</span></span>  <span data-ttu-id="3347b-1117">O exemplo também verifica se o <xref:System.Windows.UIElement.ManipulationDelta> evento ocorreu durante a inércia e se o retângulo está tocando a borda de uma janela.</span><span class="sxs-lookup"><span data-stu-id="3347b-1117">The example also checks whether the <xref:System.Windows.UIElement.ManipulationDelta> event occurred during inertia and whether the rectangle is touching the edge of a window.</span></span>  <span data-ttu-id="3347b-1118">Se esses casos são true, o aplicativo para a manipulação para impedir que o retângulo de deixar a área visível do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="3347b-1118">If those cases are true, the application stops the manipulation to prevent the rectangle from leaving the visible area of the application.</span></span> <span data-ttu-id="3347b-1119">Este exemplo é parte de um exemplo maior na [instruções passo a passo: Criando seu primeiro aplicativo de toque](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="3347b-1119">This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 [!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]
 [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationDeltaEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ManipulationDeltaEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ManipulationDeltaEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ManipulationDeltaEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ManipulationDeltaEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ManipulationDeltaEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ManipulationDeltaEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.ManipulationDeltaEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-1120">Identifica o evento roteado <see cref="E:System.Windows.UIElement.ManipulationDelta" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1120">Identifies the <see cref="E:System.Windows.UIElement.ManipulationDelta" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationInertiaStarting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.ManipulationInertiaStartingEventArgs&gt; ManipulationInertiaStarting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.ManipulationInertiaStartingEventArgs&gt; ManipulationInertiaStarting" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.ManipulationInertiaStarting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ManipulationInertiaStarting As EventHandler(Of ManipulationInertiaStartingEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::ManipulationInertiaStartingEventArgs ^&gt; ^ ManipulationInertiaStarting;" />
      <MemberSignature Language="F#" Value="member this.ManipulationInertiaStarting : EventHandler&lt;System.Windows.Input.ManipulationInertiaStartingEventArgs&gt; " Usage="member this.ManipulationInertiaStarting : System.EventHandler&lt;System.Windows.Input.ManipulationInertiaStartingEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.ManipulationInertiaStartingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-1121">Ocorre quando o dispositivo de entrada perde o contato com o objeto <see cref="T:System.Windows.UIElement" /> durante uma manipulação e a inércia começa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1121">Occurs when the input device loses contact with the <see cref="T:System.Windows.UIElement" /> object during a manipulation and inertia begins.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1122">O <xref:System.Windows.UIElement.ManipulationInertiaStarting> evento ocorre quando o usuário levantar todos os dedos na tela durante uma manipulação.</span><span class="sxs-lookup"><span data-stu-id="3347b-1122">The <xref:System.Windows.UIElement.ManipulationInertiaStarting> event occurs when the user lifts all of the fingers from the screen during a manipulation.</span></span> <span data-ttu-id="3347b-1123">Por exemplo, se um usuário "lança" um <xref:System.Windows.UIElement> em uma superfície, o usuário terá contato a <xref:System.Windows.UIElement> para iniciar a ação, mova o dedo na tela por uma distância curta e, em seguida, solte o <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1123">For example, if a user "throws" a <xref:System.Windows.UIElement> across a surface, the user will touch the <xref:System.Windows.UIElement> to begin the action, move the finger across the screen for a short distance, and then release the <xref:System.Windows.UIElement>.</span></span> <span data-ttu-id="3347b-1124">Quando o usuário libera o elemento, inércia começa e o <xref:System.Windows.UIElement.ManipulationInertiaStarting> evento ocorre.</span><span class="sxs-lookup"><span data-stu-id="3347b-1124">When the user releases the element, inertia begins and the <xref:System.Windows.UIElement.ManipulationInertiaStarting> event occurs.</span></span>  <span data-ttu-id="3347b-1125">O <xref:System.Windows.UIElement> continua a receber <xref:System.Windows.UIElement.ManipulationDelta> eventos para indicar que a inércia está ocorrendo no elemento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1125">The <xref:System.Windows.UIElement> continues to receive <xref:System.Windows.UIElement.ManipulationDelta> events to indicate that inertia is occurring on the element.</span></span>  
  
 <span data-ttu-id="3347b-1126">Você pode usar esse evento para especificar o comportamento da inércia.</span><span class="sxs-lookup"><span data-stu-id="3347b-1126">You can use this event to specify the behavior of the inertia.</span></span>  <span data-ttu-id="3347b-1127">Por exemplo, você pode definir a velocidade inicial usado durante a inércia começa.</span><span class="sxs-lookup"><span data-stu-id="3347b-1127">For example, you can set the initial velocity that is used when inertia begins.</span></span>  <span data-ttu-id="3347b-1128">Você também pode especificar a quantidade de inércia, definindo a desaceleração desejada, ou definindo o posicionamento desejado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1128">You can also specify the amount of inertia by setting the desired deceleration or by setting the desired placement.</span></span>  <span data-ttu-id="3347b-1129">Você pode definir esses valores para cada tipo de manipulação (translação, expansão ou rotação) de forma independente.</span><span class="sxs-lookup"><span data-stu-id="3347b-1129">You can set these values for each type of manipulation (translation, expansion, or rotation) independently.</span></span>  <span data-ttu-id="3347b-1130">Para obter mais informações, consulte <xref:System.Windows.Input.ManipulationInertiaStartingEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1130">For more information, see <xref:System.Windows.Input.ManipulationInertiaStartingEventArgs>.</span></span>  
  
 <span data-ttu-id="3347b-1131">Para obter mais informações sobre as manipulações, consulte o [visão geral de entrada](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3347b-1131">For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  <span data-ttu-id="3347b-1132">Para obter um exemplo de um aplicativo que responde às manipulações, consulte [instruções passo a passo: Criando seu primeiro aplicativo de toque](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="3347b-1132">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
<a name="routedEventInfo_ManipulationInertiaStarting"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-1133">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-1133">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-1134">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-1134">Identifier field</span></span>|<xref:System.Windows.UIElement.ManipulationInertiaStartingEvent>|  
|<span data-ttu-id="3347b-1135">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-1135">Routing strategy</span></span>|<span data-ttu-id="3347b-1136">Propagação</span><span class="sxs-lookup"><span data-stu-id="3347b-1136">Bubbling</span></span>|  
|<span data-ttu-id="3347b-1137">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-1137">Delegate</span></span>|<span data-ttu-id="3347b-1138"><xref:System.EventHandler%601> do tipo <xref:System.Windows.Input.ManipulationInertiaStartingEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1138"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.ManipulationInertiaStartingEventArgs>.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3347b-1139">A exemplo a seguir mostra o <xref:System.Windows.UIElement.ManipulationInertiaStarting> manipulador de eventos e define a desaceleração desejada de translação, expansão e rotação que é usada durante a inércia.</span><span class="sxs-lookup"><span data-stu-id="3347b-1139">The following example shows the <xref:System.Windows.UIElement.ManipulationInertiaStarting> event handler and sets the desired deceleration for translation, expansion, and rotation that is used during inertia.</span></span> <span data-ttu-id="3347b-1140">Este exemplo é parte de um exemplo maior na [instruções passo a passo: Criando seu primeiro aplicativo de toque](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="3347b-1140">This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 [!code-csharp[BasicManipulation#ManipulationInertiaStarting](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationinertiastarting)]
 [!code-vb[BasicManipulation#ManipulationInertiaStarting](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationinertiastarting)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationInertiaStartingEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ManipulationInertiaStartingEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ManipulationInertiaStartingEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ManipulationInertiaStartingEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ManipulationInertiaStartingEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ManipulationInertiaStartingEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ManipulationInertiaStartingEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.ManipulationInertiaStartingEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-1141">Identifica o evento roteado <see cref="E:System.Windows.UIElement.ManipulationInertiaStarting" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1141">Identifies the <see cref="E:System.Windows.UIElement.ManipulationInertiaStarting" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationStarted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.ManipulationStartedEventArgs&gt; ManipulationStarted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.ManipulationStartedEventArgs&gt; ManipulationStarted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.ManipulationStarted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ManipulationStarted As EventHandler(Of ManipulationStartedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::ManipulationStartedEventArgs ^&gt; ^ ManipulationStarted;" />
      <MemberSignature Language="F#" Value="member this.ManipulationStarted : EventHandler&lt;System.Windows.Input.ManipulationStartedEventArgs&gt; " Usage="member this.ManipulationStarted : System.EventHandler&lt;System.Windows.Input.ManipulationStartedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.ManipulationStartedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-1142">Ocorre quando um dispositivo de entrada começa uma manipulação no objeto <see cref="T:System.Windows.UIElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1142">Occurs when an input device begins a manipulation on the <see cref="T:System.Windows.UIElement" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1143">O <xref:System.Windows.UIElement.ManipulationStarted> evento ocorre após o <xref:System.Windows.UIElement.ManipulationStarting> eventos.</span><span class="sxs-lookup"><span data-stu-id="3347b-1143">The <xref:System.Windows.UIElement.ManipulationStarted> event occurs after the <xref:System.Windows.UIElement.ManipulationStarting> event.</span></span>  <span data-ttu-id="3347b-1144">Você pode fazer o seguinte com o <xref:System.Windows.Input.ManipulationStartedEventArgs>:</span><span class="sxs-lookup"><span data-stu-id="3347b-1144">You can do the following with the <xref:System.Windows.Input.ManipulationStartedEventArgs>:</span></span>  
  
-   <span data-ttu-id="3347b-1145">Obter o elemento que a posição da manipulação é relativo ao usando o <xref:System.Windows.Input.ManipulationStartedEventArgs.ManipulationContainer%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="3347b-1145">Get the element that the manipulation's position is relative to by using the <xref:System.Windows.Input.ManipulationStartedEventArgs.ManipulationContainer%2A> property.</span></span>  
  
-   <span data-ttu-id="3347b-1146">Obter a origem da manipulação usando o <xref:System.Windows.Input.ManipulationStartedEventArgs.ManipulationOrigin%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="3347b-1146">Get the origin of the manipulation by using the <xref:System.Windows.Input.ManipulationStartedEventArgs.ManipulationOrigin%2A> property.</span></span>  
  
-   <span data-ttu-id="3347b-1147">Cancelar a manipulação chamando o <xref:System.Windows.Input.ManipulationStartedEventArgs.Complete%2A> método.</span><span class="sxs-lookup"><span data-stu-id="3347b-1147">Cancel the manipulation by calling the <xref:System.Windows.Input.ManipulationStartedEventArgs.Complete%2A> method.</span></span>  
  
 <span data-ttu-id="3347b-1148">Para obter mais informações sobre as manipulações, consulte o [visão geral de entrada](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3347b-1148">For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  <span data-ttu-id="3347b-1149">Para obter um exemplo de um aplicativo que responde às manipulações, consulte [instruções passo a passo: Criando seu primeiro aplicativo de toque](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="3347b-1149">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
<a name="routedEventInfo_ManipulationStarted"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-1150">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-1150">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-1151">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-1151">Identifier field</span></span>|<xref:System.Windows.UIElement.ManipulationStartedEvent>|  
|<span data-ttu-id="3347b-1152">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-1152">Routing strategy</span></span>|<span data-ttu-id="3347b-1153">Propagação</span><span class="sxs-lookup"><span data-stu-id="3347b-1153">Bubbling</span></span>|  
|<span data-ttu-id="3347b-1154">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-1154">Delegate</span></span>|<span data-ttu-id="3347b-1155"><xref:System.EventHandler%601> do tipo <xref:System.Windows.Input.ManipulationStartedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1155"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.ManipulationStartedEventArgs>.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationStartedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ManipulationStartedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ManipulationStartedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ManipulationStartedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ManipulationStartedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ManipulationStartedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ManipulationStartedEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.ManipulationStartedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-1156">Identifica o evento roteado <see cref="E:System.Windows.UIElement.ManipulationStarted" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1156">Identifies the <see cref="E:System.Windows.UIElement.ManipulationStarted" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationStarting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.ManipulationStartingEventArgs&gt; ManipulationStarting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.ManipulationStartingEventArgs&gt; ManipulationStarting" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.ManipulationStarting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ManipulationStarting As EventHandler(Of ManipulationStartingEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::ManipulationStartingEventArgs ^&gt; ^ ManipulationStarting;" />
      <MemberSignature Language="F#" Value="member this.ManipulationStarting : EventHandler&lt;System.Windows.Input.ManipulationStartingEventArgs&gt; " Usage="member this.ManipulationStarting : System.EventHandler&lt;System.Windows.Input.ManipulationStartingEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.ManipulationStartingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-1157">Ocorre quando o processador de manipulação é criado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1157">Occurs when the manipulation processor is first created.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1158">O <xref:System.Windows.UIElement.ManipulationStarting> evento ocorre em um elemento que tem o <xref:System.Windows.UIElement.IsManipulationEnabled%2A> propriedade definida como `true` quando o usuário coloca um dedo nele.</span><span class="sxs-lookup"><span data-stu-id="3347b-1158">The <xref:System.Windows.UIElement.ManipulationStarting> event occurs on an element that has the <xref:System.Windows.UIElement.IsManipulationEnabled%2A> property set to `true` when the user puts a finger on it.</span></span> <span data-ttu-id="3347b-1159">Por padrão, os eventos manipulation subsequentes relatam a posição da manipulação em relação ao elemento que tem <xref:System.Windows.UIElement.IsManipulationEnabled%2A> definido como `true`.</span><span class="sxs-lookup"><span data-stu-id="3347b-1159">By default, subsequent manipulation events report the position of the manipulation relative to the element that has <xref:System.Windows.UIElement.IsManipulationEnabled%2A> set to `true`.</span></span>  <span data-ttu-id="3347b-1160">Você pode especificar que a posição deve ser relativa a outro elemento, definindo o <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="3347b-1160">You can specify that the position should be relative to another element by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A> property.</span></span> <span data-ttu-id="3347b-1161">Por exemplo, você pode fazer a manipulação em relação ao pai do elemento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1161">For example, you can make the manipulation relative to the parent of the element.</span></span>  
  
 <span data-ttu-id="3347b-1162">Você também pode fazer o seguinte em um manipulador de eventos <xref:System.Windows.UIElement.ManipulationStarting>:</span><span class="sxs-lookup"><span data-stu-id="3347b-1162">You can also do the following in an event handler for <xref:System.Windows.UIElement.ManipulationStarting>:</span></span>  
  
-   <span data-ttu-id="3347b-1163">Especifique se o usuário precisa de mais de um dedo para executar manipulações, definindo o <xref:System.Windows.Input.ManipulationStartingEventArgs.IsSingleTouchEnabled%2A?displayProperty=nameWithType> propriedade.</span><span class="sxs-lookup"><span data-stu-id="3347b-1163">Specify whether the user needs more than one finger to perform the manipulations by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.IsSingleTouchEnabled%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="3347b-1164">Especifique quais tipos de manipulação estão habilitados, definindo o <xref:System.Windows.Input.ManipulationStartingEventArgs.Mode%2A?displayProperty=nameWithType> propriedade para um <xref:System.Windows.Input.ManipulationModes> enumeração.</span><span class="sxs-lookup"><span data-stu-id="3347b-1164">Specify which types of manipulation are enabled by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.Mode%2A?displayProperty=nameWithType> property to a <xref:System.Windows.Input.ManipulationModes> enumeration.</span></span>  
  
-   <span data-ttu-id="3347b-1165">Especificar o Centro de rotação de um dedo definindo a <xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A?displayProperty=nameWithType> propriedade.</span><span class="sxs-lookup"><span data-stu-id="3347b-1165">Specify the center of a single-finger rotation by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="3347b-1166">Cancelar a manipulação chamando o <xref:System.Windows.Input.ManipulationStartingEventArgs.Cancel%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="3347b-1166">Cancel the manipulation by calling the <xref:System.Windows.Input.ManipulationStartingEventArgs.Cancel%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="3347b-1167">Para obter mais informações sobre as manipulações, consulte o [visão geral de entrada](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3347b-1167">For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  <span data-ttu-id="3347b-1168">Para obter um exemplo de um aplicativo que responde às manipulações, consulte [instruções passo a passo: Criando seu primeiro aplicativo de toque](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="3347b-1168">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
<a name="routedEventInfo_ManipulationStarting"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-1169">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-1169">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-1170">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-1170">Identifier field</span></span>|<xref:System.Windows.UIElement.ManipulationStartingEvent>|  
|<span data-ttu-id="3347b-1171">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-1171">Routing strategy</span></span>|<span data-ttu-id="3347b-1172">Propagação</span><span class="sxs-lookup"><span data-stu-id="3347b-1172">Bubbling</span></span>|  
|<span data-ttu-id="3347b-1173">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-1173">Delegate</span></span>|<span data-ttu-id="3347b-1174"><xref:System.EventHandler%601> do tipo <xref:System.Windows.Input.ManipulationStartingEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1174"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.ManipulationStartingEventArgs>.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3347b-1175">O exemplo a seguir mostra o manipulador de eventos para o <xref:System.Windows.UIElement.ManipulationStarting> eventos e define o <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A> ao elemento pai que recebe os eventos manipulation, para que as coordenadas da manipulação são relativos ao elemento pai.</span><span class="sxs-lookup"><span data-stu-id="3347b-1175">The following example shows the event handler for the <xref:System.Windows.UIElement.ManipulationStarting> event and sets the <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A> to the parent element that receives the manipulation events so that the coordinates of the manipulation are relative to the parent element.</span></span>  <span data-ttu-id="3347b-1176">Este exemplo é parte de um exemplo maior na [instruções passo a passo: Criando seu primeiro aplicativo de toque](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="3347b-1176">This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 [!code-csharp[BasicManipulation#ManipulationStarting](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationstarting)]
 [!code-vb[BasicManipulation#ManipulationStarting](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationstarting)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationStartingEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ManipulationStartingEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ManipulationStartingEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ManipulationStartingEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ManipulationStartingEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ManipulationStartingEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ManipulationStartingEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.ManipulationStartingEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-1177">Identifica o evento roteado <see cref="E:System.Windows.UIElement.ManipulationStarting" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1177">Identifies the <see cref="E:System.Windows.UIElement.ManipulationStarting" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Measure">
      <MemberSignature Language="C#" Value="public void Measure (System.Windows.Size availableSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Measure(valuetype System.Windows.Size availableSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.Measure(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Measure (availableSize As Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Measure(System::Windows::Size availableSize);" />
      <MemberSignature Language="F#" Value="member this.Measure : System.Windows.Size -&gt; unit" Usage="uIElement.Measure availableSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="availableSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="availableSize">
          <span data-ttu-id="3347b-1178">O espaço disponível que um elemento pai pode alocar um elemento filho.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1178">The available space that a parent element can allocate a child element.</span>
          </span>
          <span data-ttu-id="3347b-1179">Um elemento filho pode solicitar um espaço maior do que o disponível. O tamanho fornecido pode ser acomodado se a rolagem for possível no modelo de conteúdo do elemento atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1179">A child element can request a larger space than what is available; the provided size might be accommodated if scrolling is possible in the content model for the current element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-1180">Atualiza <see cref="P:System.Windows.UIElement.DesiredSize" /> de um <see cref="T:System.Windows.UIElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1180">Updates the <see cref="P:System.Windows.UIElement.DesiredSize" /> of a <see cref="T:System.Windows.UIElement" />.</span>
          </span>
          <span data-ttu-id="3347b-1181">Elementos pai chamam esse método de suas próprias implementações <see cref="M:System.Windows.UIElement.MeasureCore(System.Windows.Size)" /> para formar uma atualização de layout recursiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1181">Parent elements call this method from their own <see cref="M:System.Windows.UIElement.MeasureCore(System.Windows.Size)" /> implementations to form a recursive layout update.</span>
          </span>
          <span data-ttu-id="3347b-1182">Chamar esse método constitui a primeira passagem (a passagem "Medida") de uma atualização de layout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1182">Calling this method constitutes the first pass (the "Measure" pass) of a layout update.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1183">O cálculo de layout de posicionamento no [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] é composto por um <xref:System.Windows.UIElement.Measure%2A> chamar e um <xref:System.Windows.UIElement.Arrange%2A> chamar.</span><span class="sxs-lookup"><span data-stu-id="3347b-1183">Computation of layout positioning in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] is comprised of a <xref:System.Windows.UIElement.Measure%2A> call and an <xref:System.Windows.UIElement.Arrange%2A> call.</span></span> <span data-ttu-id="3347b-1184">Durante o <xref:System.Windows.UIElement.Measure%2A> chamada, um elemento determina seus requisitos de tamanho usando um `availableSize` entrada.</span><span class="sxs-lookup"><span data-stu-id="3347b-1184">During the <xref:System.Windows.UIElement.Measure%2A> call, an element determines its size requirements by using an `availableSize` input.</span></span> <span data-ttu-id="3347b-1185">Durante o <xref:System.Windows.UIElement.Arrange%2A> chamada, o tamanho do elemento é finalizada.</span><span class="sxs-lookup"><span data-stu-id="3347b-1185">During the <xref:System.Windows.UIElement.Arrange%2A> call, the element size is finalized.</span></span>  
  
 <span data-ttu-id="3347b-1186">`availableSize` pode ser qualquer número de zero como infinito.</span><span class="sxs-lookup"><span data-stu-id="3347b-1186">`availableSize` can be any number from zero to infinite.</span></span> <span data-ttu-id="3347b-1187">Elementos que participam no layout devem retornar o mínimo <xref:System.Windows.Size> necessitam para um determinado `availableSize`.</span><span class="sxs-lookup"><span data-stu-id="3347b-1187">Elements participating in layout should return the minimum <xref:System.Windows.Size> they require for a given `availableSize`.</span></span>  
  
 <span data-ttu-id="3347b-1188">Quando um layout é instanciado pela primeira vez, ele sempre recebe um <xref:System.Windows.UIElement.Measure%2A> chame antes <xref:System.Windows.UIElement.Arrange%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1188">When a layout is first instantiated, it always receives a <xref:System.Windows.UIElement.Measure%2A> call before <xref:System.Windows.UIElement.Arrange%2A>.</span></span> <span data-ttu-id="3347b-1189">No entanto, após a primeira passagem de layout, ele poderá receber um <xref:System.Windows.UIElement.Arrange%2A> chamar sem uma <xref:System.Windows.UIElement.Measure%2A>; isso pode acontecer quando uma propriedade que afete apenas <xref:System.Windows.UIElement.Arrange%2A> é alterado (por exemplo, o alinhamento), ou quando o pai recebe um <xref:System.Windows.UIElement.Arrange%2A> sem um <xref:System.Windows.UIElement.Measure%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1189">However, after the first layout pass, it may receive an <xref:System.Windows.UIElement.Arrange%2A> call without a <xref:System.Windows.UIElement.Measure%2A>; this can happen when a property that affects only <xref:System.Windows.UIElement.Arrange%2A> is changed (such as alignment), or when the parent receives an <xref:System.Windows.UIElement.Arrange%2A> without a <xref:System.Windows.UIElement.Measure%2A>.</span></span> <span data-ttu-id="3347b-1190">Um <xref:System.Windows.UIElement.Measure%2A> chamada invalidará automaticamente um <xref:System.Windows.UIElement.Arrange%2A> chamar.</span><span class="sxs-lookup"><span data-stu-id="3347b-1190">A <xref:System.Windows.UIElement.Measure%2A> call will automatically invalidate an <xref:System.Windows.UIElement.Arrange%2A> call.</span></span>  
  
 <span data-ttu-id="3347b-1191">As atualizações de layout ocorrem de maneira assíncrona, que o thread principal não está esperando para cada alteração de layout possíveis.</span><span class="sxs-lookup"><span data-stu-id="3347b-1191">Layout updates happen asynchronously, such that the main thread is not waiting for every possible layout change.</span></span> <span data-ttu-id="3347b-1192">Consultar um elemento por meio de lógica verificação de valores de propriedade pode não refletir imediatamente as alterações nas propriedades que interagem com as características de dimensionamento ou layout (o <xref:System.Windows.FrameworkElement.Width%2A> propriedade, por exemplo).</span><span class="sxs-lookup"><span data-stu-id="3347b-1192">Querying an element via code-behind checking of property values may not immediately reflect changes to properties that interact with the sizing or layout characteristics (the <xref:System.Windows.FrameworkElement.Width%2A> property, for example).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3347b-1193">As atualizações de layout podem ser forçadas usando o <xref:System.Windows.UIElement.UpdateLayout%2A> método.</span><span class="sxs-lookup"><span data-stu-id="3347b-1193">Layout updates can be forced by using the <xref:System.Windows.UIElement.UpdateLayout%2A> method.</span></span> <span data-ttu-id="3347b-1194">No entanto, chamar este método é geralmente desnecessário e pode causar baixo desempenho.</span><span class="sxs-lookup"><span data-stu-id="3347b-1194">However, calling this method is usually unnecessary and can cause poor performance.</span></span>  
  
 <span data-ttu-id="3347b-1195">O sistema de layout mantém duas filas separadas dos layouts inválidos, um para <xref:System.Windows.UIElement.Measure%2A> e outro para <xref:System.Windows.UIElement.Arrange%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1195">The layout system keeps two separate queues of invalid layouts, one for <xref:System.Windows.UIElement.Measure%2A> and one for <xref:System.Windows.UIElement.Arrange%2A>.</span></span> <span data-ttu-id="3347b-1196">A fila de layout é classificada com base na ordem dos elementos na árvore visual do elemento de execução do layout; mais alto na árvore de elementos estão no topo da fila, para evitar layouts redundantes causados por alterações repetidas em pais.</span><span class="sxs-lookup"><span data-stu-id="3347b-1196">The layout queue is sorted based upon the order of elements in the visual tree of the element performing layout; elements higher in the tree are at the top of the queue, to avoid redundant layouts caused by repeated changes in parents.</span></span> <span data-ttu-id="3347b-1197">Entradas duplicadas são automaticamente removidas da fila e elementos são automaticamente removidos da fila se eles já estiverem validados de layout.</span><span class="sxs-lookup"><span data-stu-id="3347b-1197">Duplicate entries are automatically removed from the queue, and elements are automatically removed from the queue if they are already layout-validated.</span></span>  
  
 <span data-ttu-id="3347b-1198">Ao atualizar o layout, o <xref:System.Windows.UIElement.Measure%2A> fila é esvaziada primeiro, seguido de <xref:System.Windows.UIElement.Arrange%2A> fila.</span><span class="sxs-lookup"><span data-stu-id="3347b-1198">When updating layout, the <xref:System.Windows.UIElement.Measure%2A> queue is emptied first, followed by the <xref:System.Windows.UIElement.Arrange%2A> queue.</span></span> <span data-ttu-id="3347b-1199">Um elemento na <xref:System.Windows.UIElement.Arrange%2A> fila nunca será organizada se não houver um elemento no <xref:System.Windows.UIElement.Measure%2A> fila.</span><span class="sxs-lookup"><span data-stu-id="3347b-1199">An element in the <xref:System.Windows.UIElement.Arrange%2A> queue will never be arranged if there is an element in the <xref:System.Windows.UIElement.Measure%2A> queue.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureCore">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Size MeasureCore (System.Windows.Size availableSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Windows.Size MeasureCore(valuetype System.Windows.Size availableSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.MeasureCore(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function MeasureCore (availableSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Size MeasureCore(System::Windows::Size availableSize);" />
      <MemberSignature Language="F#" Value="abstract member MeasureCore : System.Windows.Size -&gt; System.Windows.Size&#xA;override this.MeasureCore : System.Windows.Size -&gt; System.Windows.Size" Usage="uIElement.MeasureCore availableSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="availableSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="availableSize">
          <span data-ttu-id="3347b-1200">O tamanho disponível que o elemento pai pode alocar para o filho.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1200">The available size that the parent element can allocate for the child.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-1201">Quando substituído em uma classe derivada, fornece uma lógica de medida para o dimensionamento correto desse elemento, levando em consideração o tamanho do conteúdo de elementos filho.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1201">When overridden in a derived class, provides measurement logic for sizing this element properly, with consideration of the size of any child element content.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3347b-1202">O tamanho desejado desse elemento no layout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1202">The desired size of this element in layout.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1203">É mais comum para derivar um elemento de <xref:System.Windows.FrameworkElement> em vez de <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1203">It is more common to derive an element from <xref:System.Windows.FrameworkElement> rather than <xref:System.Windows.UIElement>.</span></span> <span data-ttu-id="3347b-1204">Se você estiver derivando de <xref:System.Windows.FrameworkElement>, observe que uma substituição do <xref:System.Windows.UIElement.MeasureCore%2A> nos <xref:System.Windows.FrameworkElement> selos de <xref:System.Windows.UIElement.MeasureCore%2A> método.</span><span class="sxs-lookup"><span data-stu-id="3347b-1204">If you are deriving from <xref:System.Windows.FrameworkElement>, note that an override of <xref:System.Windows.UIElement.MeasureCore%2A> on <xref:System.Windows.FrameworkElement> seals the <xref:System.Windows.UIElement.MeasureCore%2A> method.</span></span> <span data-ttu-id="3347b-1205">Portanto, você apenas substitui <xref:System.Windows.UIElement.MeasureCore%2A> como um meio para alterar as características de medida de layout se você derivar de <xref:System.Windows.UIElement> por meio de uma herança que não inclua <xref:System.Windows.FrameworkElement>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1205">Therefore, you only override <xref:System.Windows.UIElement.MeasureCore%2A> as a means to alter layout measure characteristics if you derive from <xref:System.Windows.UIElement> through an inheritance that does not include <xref:System.Windows.FrameworkElement>.</span></span> <span data-ttu-id="3347b-1206">Isso pode ser o caso se você está tentando construir sua própria implementação o [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] nível de núcleo.</span><span class="sxs-lookup"><span data-stu-id="3347b-1206">This might be the case if you are attempting to build your own implementation on the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] core-level.</span></span> <span data-ttu-id="3347b-1207">Caso contrário, se você estiver derivando de <xref:System.Windows.FrameworkElement>, em seguida, o modelo de implementação para o comportamento de medida é o <xref:System.Windows.FrameworkElement> implementação de.<xref:System.Windows.FrameworkElement.MeasureOverride%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1207">Otherwise, if you are deriving from <xref:System.Windows.FrameworkElement>, then the implementation template for Measure behavior is the <xref:System.Windows.FrameworkElement> implementation of .<xref:System.Windows.FrameworkElement.MeasureOverride%2A>.</span></span>  
  
 <span data-ttu-id="3347b-1208">Um elemento pai com elementos filho deve chamar <xref:System.Windows.UIElement.Measure%2A> em cada filho, caso contrário, esses elementos filho não são dimensionados ou organizados e efetivamente desaparecerá do layout.</span><span class="sxs-lookup"><span data-stu-id="3347b-1208">A parent element with child elements must call <xref:System.Windows.UIElement.Measure%2A> on each child, otherwise these child elements are not sized or arranged and will effectively disappear from layout.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3347b-1209">Uma substituição comum dos <xref:System.Windows.UIElement.MeasureCore%2A> segue este padrão aproximado (não é uma coleção interna chamada `VisualChildren`; `VisualChildren` é um espaço reservado que representa qualquer coleção de filhos que mantém seu elemento).</span><span class="sxs-lookup"><span data-stu-id="3347b-1209">A typical override of <xref:System.Windows.UIElement.MeasureCore%2A> follows this approximate pattern (there is not a built-in collection called `VisualChildren`; `VisualChildren` is a  placeholder that represents whatever child collection your element maintains).</span></span>  
  
 [!code-csharp[CorePseudocode#UIElementMeasureOverride](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#uielementmeasureoverride)]
 [!code-vb[CorePseudocode#UIElementMeasureOverride](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#uielementmeasureoverride)]  
  
-   <span data-ttu-id="3347b-1210">Você deve chamar <xref:System.Windows.UIElement.Measure%2A> em cada elemento filho.</span><span class="sxs-lookup"><span data-stu-id="3347b-1210">You must call <xref:System.Windows.UIElement.Measure%2A> on each child element.</span></span>  
  
-   <span data-ttu-id="3347b-1211">Em geral, sua implementação deve armazenar em cache informações de medição entre o <xref:System.Windows.UIElement.MeasureCore%2A> e <xref:System.Windows.UIElement.ArrangeCore%2A> chamadas de método no mesmo elemento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1211">Generally, your implementation should cache measurement information between the <xref:System.Windows.UIElement.MeasureCore%2A> and <xref:System.Windows.UIElement.ArrangeCore%2A> method calls in the same element.</span></span>  
  
-   <span data-ttu-id="3347b-1212">Chamar as implementações de base da <xref:System.Windows.UIElement.MeasureCore%2A> não é necessário, mas pode ser apropriado se a implementação base fornece uma funcionalidade de layout desejado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1212">Calling base implementations of <xref:System.Windows.UIElement.MeasureCore%2A> is not required, but might be appropriate if the base implementation provides a desired layout capability.</span></span>  
  
-   <span data-ttu-id="3347b-1213">Chamadas para <xref:System.Windows.UIElement.Measure%2A> no filho do elemento deve passar a mesma `availableSize` como pai, ou um subconjunto da área, dependendo do tipo de layout do elemento pai dá suporte.</span><span class="sxs-lookup"><span data-stu-id="3347b-1213">Calls to <xref:System.Windows.UIElement.Measure%2A> on child elements should pass either the same `availableSize` as the parent, or a subset of the area, depending on the type of layout the parent element supports.</span></span> <span data-ttu-id="3347b-1214">Por exemplo, seria válida para remover a área de uma borda de elemento específico ou preenchimento, uma barra de rolagem ou um controle personalizado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1214">For example, it would be valid to remove the area for an element-specific border or padding, a scrollbar, or a custom control.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3347b-1215">Implementações devem ser capazes de processar um valor fornecido para <paramref name="availableSize" /> é infinito.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3347b-1215">Implementations must be able to process a value provided for <paramref name="availableSize" /> that is infinite.</span>
            </span>
            <span data-ttu-id="3347b-1216">Um valor infinito não indica nenhuma restrição foi solicitada e adia a escolha de medida ao elemento pai, por meio de recursiva que medida chama efetivamente.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3347b-1216">An infinite value indicates no requested constraints, and effectively defers measurement choice to the parent element, through recursive Measure calls.</span>
            </span>
            <span data-ttu-id="3347b-1217">Implementações podem considerar o valor fornecido para <paramref name="availableSize" /> seja uma restrição flexível.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3347b-1217">Implementations can consider the value provided for <paramref name="availableSize" /> to be a soft constraint.</span>
            </span>
            <span data-ttu-id="3347b-1218">O elemento filho pode especificar um tamanho maior, mesmo se outros aspectos do código do aplicativo foram capazes de determinar o tamanho real atual do elemento pai.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3347b-1218">The child element might specify a larger size, even if other aspects of application code were able to determine the current actual size of the parent element.</span>
            </span>
            <span data-ttu-id="3347b-1219">A solicitação de tamanho grande é uma convenção que indica que o elemento filho está consultando se seu elemento pai pode dar suporte a rolagem de conteúdo dentro de uma região de exibição de conteúdo.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3347b-1219">The large size request is a convention that indicates that the child element is querying whether your parent element can support content scrolling within a content display region.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="MouseDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ MouseDown;" />
      <MemberSignature Language="F#" Value="member this.MouseDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-1220">Ocorre quando qualquer botão do mouse é pressionado enquanto o ponteiro está sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1220">Occurs when any mouse button is pressed while the pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1221">Esse evento cria um alias para o <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.UIElement.MouseDown> faz parte da classe a lista de membros quando <xref:System.Windows.UIElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="3347b-1221">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.MouseDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="3347b-1222">Manipuladores de eventos que estão anexados para o <xref:System.Windows.UIElement.MouseDown> evento associado subjacente <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1222">Event handlers that are attached to the <xref:System.Windows.UIElement.MouseDown> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="3347b-1223">O <xref:System.Windows.UIElement.MouseDown> é normalmente gerado junto com qualquer um <xref:System.Windows.UIElement.MouseLeftButtonDown> ou <xref:System.Windows.UIElement.MouseRightButtonDown>, que correspondem a um pressionamento de um dos dois botões de mouse padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-1223">The <xref:System.Windows.UIElement.MouseDown> event is often raised together with either <xref:System.Windows.UIElement.MouseLeftButtonDown> or <xref:System.Windows.UIElement.MouseRightButtonDown>, which correspond to a press of one of the two standard mouse buttons.</span></span> <span data-ttu-id="3347b-1224"><xref:System.Windows.UIElement.MouseLeftButtonDown> e <xref:System.Windows.UIElement.MouseRightButtonDown> também são eventos roteados, mas eles são eventos roteados diretos e o evento apropriado do botão específico é gerado quando o <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> evento atinge esse elemento ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1224"><xref:System.Windows.UIElement.MouseLeftButtonDown> and <xref:System.Windows.UIElement.MouseRightButtonDown> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="3347b-1225">Consulte os comentários para <xref:System.Windows.UIElement.MouseLeftButtonDown> ou <xref:System.Windows.UIElement.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1225">See Remarks for <xref:System.Windows.UIElement.MouseLeftButtonDown> or <xref:System.Windows.UIElement.MouseRightButtonDown>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3347b-1226">Alguns controles podem ter inerentes a manipulação de classe para eventos do botão do mouse.</span><span class="sxs-lookup"><span data-stu-id="3347b-1226">Some controls might have inherent class handling for mouse button events.</span></span> <span data-ttu-id="3347b-1227">O botão esquerdo do mouse para baixo de evento é o evento mais provável para ter um controle de manipulação de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-1227">The left mouse button down event is the most likely event to have class handling in a control.</span></span> <span data-ttu-id="3347b-1228">A classe tratamento geralmente marca subjacente <xref:System.Windows.Input.Mouse> eventos de classe como manipulado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1228">The class handling often marks the underlying <xref:System.Windows.Input.Mouse> class event as handled.</span></span> <span data-ttu-id="3347b-1229">Depois que o evento é marcado como manipulado, outros manipuladores de instância que são anexados a esse elemento não são acionados normalmente.</span><span class="sxs-lookup"><span data-stu-id="3347b-1229">Once the event is marked handled, other instance handlers that are attached to that element are not ordinarily raised.</span></span> <span data-ttu-id="3347b-1230">Qualquer outras classe ou instância manipuladores que estão anexados a elementos na direção por propagação na direção da raiz na árvore de interface do usuário também normalmente não são gerados.</span><span class="sxs-lookup"><span data-stu-id="3347b-1230">Any other class or instance handlers that are attached to elements in the bubbling direction towards the root in the UI tree are also not ordinarily raised.</span></span>  
  
 <span data-ttu-id="3347b-1231">Você pode resolver o problema descrito no item anterior importante e ainda receber <xref:System.Windows.UIElement.MouseDown> eventos para o botão esquerdo do mouse para baixo de eventos em uma classe derivada que tem, usando qualquer uma dessas soluções de manipulação de classe:</span><span class="sxs-lookup"><span data-stu-id="3347b-1231">You can resolve the issue that is outlined in the preceding Important and still receive <xref:System.Windows.UIElement.MouseDown> events for left mouse button down events on a derived class that has class handling by using either of these solutions:</span></span>  
  
-   <span data-ttu-id="3347b-1232">Anexar manipuladores para o <xref:System.Windows.UIElement.PreviewMouseDown> evento, que não está marcado como manipulado pelos controles.</span><span class="sxs-lookup"><span data-stu-id="3347b-1232">Attach handlers for the <xref:System.Windows.UIElement.PreviewMouseDown> event, which is not marked as handled by the controls.</span></span> <span data-ttu-id="3347b-1233">Observe que, como esse é um evento de visualização, a rota é iniciado na raiz e túneis ao controle.</span><span class="sxs-lookup"><span data-stu-id="3347b-1233">Notice that because this is a preview event, the route starts at the root and tunnels down to the control.</span></span>  
  
-   <span data-ttu-id="3347b-1234">Registrar um manipulador no controle de forma procedimental chamando <xref:System.Windows.UIElement.AddHandler%2A> e escolhendo a opção de assinatura que permite que os manipuladores escutar eventos do mesmo se eles já estão marcados como manipulados nos dados do evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1234">Register a handler on the control procedurally by calling <xref:System.Windows.UIElement.AddHandler%2A> and choosing the signature option that enables handlers to listen for events even if they are already marked as handled in the routed event data.</span></span>  
  
<a name="routedEventInfo_MouseDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-1235">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-1235">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-1236">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-1236">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseDownEvent>|  
|<span data-ttu-id="3347b-1237">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-1237">Routing strategy</span></span>|<span data-ttu-id="3347b-1238">Propagação</span><span class="sxs-lookup"><span data-stu-id="3347b-1238">Bubbling</span></span>|  
|<span data-ttu-id="3347b-1239">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-1239">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="3347b-1240">O evento por túnel correspondente é <xref:System.Windows.UIElement.PreviewMouseDown>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1240">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewMouseDown>.</span></span>  
  
-   <span data-ttu-id="3347b-1241">Substituir <xref:System.Windows.UIElement.OnMouseDown%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-1241">Override <xref:System.Windows.UIElement.OnMouseDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.MouseDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-1242">Identifica o evento roteado <see cref="E:System.Windows.UIElement.MouseDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1242">Identifies the <see cref="E:System.Windows.UIElement.MouseDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1243">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-1243">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-1244">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1244">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-1245">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-1245">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-1246">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1246">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-1247">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1247">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseEnter As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseEnter;" />
      <MemberSignature Language="F#" Value="member this.MouseEnter : System.Windows.Input.MouseEventHandler " Usage="member this.MouseEnter : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseEnter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-1248">Ocorre quando o ponteiro do mouse entra nos limites deste elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1248">Occurs when the mouse pointer enters the bounds of this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1249"><xref:System.Windows.UIElement.MouseEnter> é uma que usa o estratégia de roteamento de manipulação de eventos direto.</span><span class="sxs-lookup"><span data-stu-id="3347b-1249"><xref:System.Windows.UIElement.MouseEnter> is a  that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="3347b-1250">Eventos roteados diretos não são gerados ao longo de uma rota; em vez disso, eles são manipulados no mesmo elemento em que eles são gerados.</span><span class="sxs-lookup"><span data-stu-id="3347b-1250">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="3347b-1251">No entanto, eles permitem que outros aspectos do comportamento do evento roteado, como gatilhos de evento nos estilos.</span><span class="sxs-lookup"><span data-stu-id="3347b-1251">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="3347b-1252">Embora <xref:System.Windows.UIElement.MouseEnter> rastreia quando o ponteiro do mouse entra nos limites de um elemento, esse evento mais literalmente relata que o <xref:System.Windows.UIElement.IsMouseOver%2A> o valor da propriedade foi alterado de `false` para `true` neste elemento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1252">Although <xref:System.Windows.UIElement.MouseEnter> tracks when the mouse pointer enters the bounds of an element, this event more literally reports that the <xref:System.Windows.UIElement.IsMouseOver%2A> property value has changed from `false` to `true` on this element.</span></span>  
  
 <span data-ttu-id="3347b-1253">Esse evento cria um alias para o <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.UIElement.MouseEnter> faz parte da classe a lista de membros quando <xref:System.Windows.UIElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="3347b-1253">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.MouseEnter> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="3347b-1254">Manipuladores de eventos que estão anexados para o <xref:System.Windows.UIElement.MouseEnter> evento associado subjacente <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1254">Event handlers that are attached to the <xref:System.Windows.UIElement.MouseEnter> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="3347b-1255">Um <xref:System.Windows.Controls.Button> (ou qualquer <xref:System.Windows.Controls.Primitives.ButtonBase> classe derivada) tem tratamento nativo para um <xref:System.Windows.UIElement.KeyDown> evento quando o botão tem foco e a tecla pressionada é a barra de espaço.</span><span class="sxs-lookup"><span data-stu-id="3347b-1255">A <xref:System.Windows.Controls.Button> (or any <xref:System.Windows.Controls.Primitives.ButtonBase> derived class) has native handling for a <xref:System.Windows.UIElement.KeyDown> event when the button has focus, and the pressed key is the space bar.</span></span> <span data-ttu-id="3347b-1256">A manipulação de nativa gera o <xref:System.Windows.Controls.Primitives.ButtonBase.Click> eventos com o botão como a origem e também captura o mouse, mesmo que não são exibidos o ponteiro do mouse mover.</span><span class="sxs-lookup"><span data-stu-id="3347b-1256">The native handling raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event with the button as the source, and also captures the mouse, even though the mouse pointer does not appear to move.</span></span> <span data-ttu-id="3347b-1257">Como resultado de captura do mouse, um <xref:System.Windows.UIElement.MouseEnter> evento também é gerado com o botão como a origem.</span><span class="sxs-lookup"><span data-stu-id="3347b-1257">As a result of the mouse capture, a <xref:System.Windows.UIElement.MouseEnter> event is also raised with the button as the source.</span></span> <span data-ttu-id="3347b-1258">Em geral, se um elemento captura o mouse, em seguida <xref:System.Windows.UIElement.MouseEnter> é gerado, bem como <xref:System.Windows.UIElement.GotMouseCapture> e possivelmente outros eventos específicos do controle.</span><span class="sxs-lookup"><span data-stu-id="3347b-1258">In general, if an element captures the mouse, then <xref:System.Windows.UIElement.MouseEnter> is raised, as well as <xref:System.Windows.UIElement.GotMouseCapture> and possibly other control-specific events.</span></span>  
  
<a name="routedEventInfo_MouseEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-1259">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-1259">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-1260">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-1260">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseEnterEvent>|  
|<span data-ttu-id="3347b-1261">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-1261">Routing strategy</span></span>|<span data-ttu-id="3347b-1262">Direto</span><span class="sxs-lookup"><span data-stu-id="3347b-1262">Direct</span></span>|  
|<span data-ttu-id="3347b-1263">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-1263">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="3347b-1264">Substituir <xref:System.Windows.UIElement.OnMouseEnter%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-1264">Override <xref:System.Windows.UIElement.OnMouseEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.MouseEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-1265">Identifica o evento roteado <see cref="E:System.Windows.UIElement.MouseEnter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1265">Identifies the <see cref="E:System.Windows.UIElement.MouseEnter" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1266">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-1266">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-1267">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1267">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-1268">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-1268">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-1269">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1269">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-1270">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1270">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeave As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseLeave;" />
      <MemberSignature Language="F#" Value="member this.MouseLeave : System.Windows.Input.MouseEventHandler " Usage="member this.MouseLeave : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeave</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-1271">Ocorre quando o ponteiro do mouse sai dos limites deste elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1271">Occurs when the mouse pointer leaves the bounds of this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1272"><xref:System.Windows.UIElement.MouseLeave> é uma que usa o estratégia de roteamento de manipulação de eventos direto.</span><span class="sxs-lookup"><span data-stu-id="3347b-1272"><xref:System.Windows.UIElement.MouseLeave> is a  that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="3347b-1273">Eventos roteados diretos não são gerados ao longo de uma rota; em vez disso, eles são manipulados no mesmo elemento em que eles são gerados.</span><span class="sxs-lookup"><span data-stu-id="3347b-1273">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="3347b-1274">No entanto, eles permitem que outros aspectos do comportamento do evento roteado, como gatilhos de evento nos estilos.</span><span class="sxs-lookup"><span data-stu-id="3347b-1274">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="3347b-1275">Embora <xref:System.Windows.UIElement.MouseLeave> rastreia quando o mouse sai de um elemento, esse evento mais literalmente relata que o <xref:System.Windows.UIElement.IsMouseOver%2A> o valor da propriedade foi alterado de `true` para `false` neste elemento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1275">Although <xref:System.Windows.UIElement.MouseLeave> tracks when the mouse leaves an element, this event more literally reports that the <xref:System.Windows.UIElement.IsMouseOver%2A> property value has changed from `true` to `false` on this element.</span></span>  
  
 <span data-ttu-id="3347b-1276">Esse evento cria um alias para o <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.UIElement.MouseLeave> faz parte da classe a lista de membros quando <xref:System.Windows.UIElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="3347b-1276">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.MouseLeave> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="3347b-1277">Manipuladores de eventos que estão anexados para o <xref:System.Windows.UIElement.MouseLeave> evento associado subjacente <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1277">Event handlers that are attached to the <xref:System.Windows.UIElement.MouseLeave> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_MouseLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-1278">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-1278">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-1279">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-1279">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseLeaveEvent>|  
|<span data-ttu-id="3347b-1280">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-1280">Routing strategy</span></span>|<span data-ttu-id="3347b-1281">Direto</span><span class="sxs-lookup"><span data-stu-id="3347b-1281">Direct</span></span>|  
|<span data-ttu-id="3347b-1282">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-1282">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="3347b-1283">Substituir <xref:System.Windows.UIElement.OnMouseLeave%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-1283">Override <xref:System.Windows.UIElement.OnMouseLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.MouseLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-1284">Identifica o evento roteado <see cref="E:System.Windows.UIElement.MouseLeave" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1284">Identifies the <see cref="E:System.Windows.UIElement.MouseLeave" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1285">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-1285">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-1286">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1286">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-1287">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-1287">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-1288">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1288">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-1289">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1289">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseLeftButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseLeftButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseLeftButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeftButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseLeftButtonDown;" />
      <MemberSignature Language="F#" Value="member this.MouseLeftButtonDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseLeftButtonDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeftButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-1290">Ocorre quando o botão esquerdo do mouse é pressionado enquanto o ponteiro do mouse está sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1290">Occurs when the left mouse button is pressed while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1291">Embora isso pareça seguem uma rota de propagação pela árvore de elemento, na verdade, é um evento roteado direto que é gerado e geradas novamente ao longo da árvore de elementos por cada <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1291">Although this  seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="3347b-1292">Esse evento é um dos vários eventos relacionados que relatam as especificações de botão do mouse de uma subjacente <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> evento, que é um evento anexado que é processado por cada elemento ao longo de uma rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1292">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="3347b-1293">Os dados do evento desse evento expõe os dados do evento de subjacente <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="3347b-1293">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="3347b-1294">Se esse evento é marcado como manipulado ao longo da rota de evento, os eventos específicos do botão do mouse ainda são acionados; No entanto, os manipuladores dos eventos específicos para o botão do mouse devem ser adicionados explicitamente chamando <xref:System.Windows.UIElement.AddHandler%2A>, com a opção para lidar com eventos que já estão marcados como manipulados, para ser ouvintes para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1294">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="3347b-1295">Se você marcar <xref:System.Windows.UIElement.MouseLeftButtonDown> tratadas, você essencialmente marcar <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> manipulado para todas as outras escutas ao longo da rota e em todos os eventos relacionados.</span><span class="sxs-lookup"><span data-stu-id="3347b-1295">If you mark <xref:System.Windows.UIElement.MouseLeftButtonDown> handled, you are essentially marking <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span> <span data-ttu-id="3347b-1296">Isso possivelmente inclui eventos gerado pelo manipulador de classe, como <xref:System.Windows.Controls.Control.MouseDoubleClick>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1296">This possibly includes class-handler generated events such as <xref:System.Windows.Controls.Control.MouseDoubleClick>.</span></span>  
  
 <span data-ttu-id="3347b-1297">Conceitualmente, pensar esse evento (e outros eventos do botão do mouse em <xref:System.Windows.UIElement>) para ser um "serviço" do mouse (com a definição de serviço fornecida pelo <xref:System.Windows.Input.Mouse> classe).</span><span class="sxs-lookup"><span data-stu-id="3347b-1297">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="3347b-1298">O evento adiciona a conveniência de não precisar verificar os estados do botão do mouse (esquerda-direita, superior / inferior) dos eventos originais do mouse nos dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1298">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="3347b-1299">Para cenários mais avançados, como a verificação de estados de botões não padrão, você talvez precise usar o [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] sobre o <xref:System.Windows.Input.Mouse> classe em vez no <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1299">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3347b-1300">Algumas classes de controle podem ter inerentes a manipulação de classe para eventos do botão do mouse.</span><span class="sxs-lookup"><span data-stu-id="3347b-1300">Some control classes might have inherent class handling for mouse button events.</span></span> <span data-ttu-id="3347b-1301">O botão esquerdo do mouse para baixo de evento é o evento mais provável para ter um controle de manipulação de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-1301">The left mouse button down event is the most likely event to have class handling in a control.</span></span> <span data-ttu-id="3347b-1302">A classe tratamento geralmente marca subjacente <xref:System.Windows.Input.Mouse> eventos de classe como manipulado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1302">The class handling often marks the underlying <xref:System.Windows.Input.Mouse> class event as handled.</span></span> <span data-ttu-id="3347b-1303">Depois que o evento é marcado como manipulado, outros manipuladores de instância que são anexados a esse elemento não são acionados normalmente.</span><span class="sxs-lookup"><span data-stu-id="3347b-1303">Once the event is marked handled, other instance handlers that are attached to that element are not ordinarily raised.</span></span> <span data-ttu-id="3347b-1304">Qualquer outras classe ou instância manipuladores que estão anexados a elementos na direção por propagação na direção da raiz na árvore de interface do usuário também normalmente não são gerados.</span><span class="sxs-lookup"><span data-stu-id="3347b-1304">Any other class or instance handlers that are attached to elements in the bubbling direction towards the root in the UI tree are also not ordinarily raised.</span></span>  
  
 <span data-ttu-id="3347b-1305">Você pode resolver o problema descrito no item anterior importante e ainda receber <xref:System.Windows.UIElement.MouseLeftButtonDown> eventos para o botão esquerdo do mouse para baixo de eventos em uma classe derivada que tem, usando qualquer uma dessas soluções de manipulação de classe:</span><span class="sxs-lookup"><span data-stu-id="3347b-1305">You can resolve the issue that is outlined in the preceding Important and still receive <xref:System.Windows.UIElement.MouseLeftButtonDown> events for left mouse button down events on a derived class that has class handling by using either of these solutions:</span></span>  
  
-   <span data-ttu-id="3347b-1306">Anexar manipuladores para o <xref:System.Windows.UIElement.PreviewMouseDown> evento, que não está marcado como manipulado pelos controles.</span><span class="sxs-lookup"><span data-stu-id="3347b-1306">Attach handlers for the <xref:System.Windows.UIElement.PreviewMouseDown> event, which is not marked as handled by the controls.</span></span> <span data-ttu-id="3347b-1307">Observe que, como esse é um evento de visualização, a rota é iniciado na raiz e túneis ao controle.</span><span class="sxs-lookup"><span data-stu-id="3347b-1307">Notice that because this is a preview event, the route starts at the root and tunnels down to the control.</span></span>  
  
-   <span data-ttu-id="3347b-1308">Registrar um manipulador no controle de forma procedimental chamando <xref:System.Windows.UIElement.AddHandler%2A> e escolhendo a opção de assinatura que permite que os manipuladores escutar eventos do mesmo se eles já estão marcados como manipulados nos dados do evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1308">Register a handler on the control procedurally by calling <xref:System.Windows.UIElement.AddHandler%2A> and choosing the signature option that enables handlers to listen for events even if they are already marked as handled in the routed event data.</span></span>  
  
<a name="routedEventInfo_MouseLeftButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-1309">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-1309">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-1310">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-1310">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseLeftButtonDownEvent>|  
|<span data-ttu-id="3347b-1311">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-1311">Routing strategy</span></span>|<span data-ttu-id="3347b-1312">Direto</span><span class="sxs-lookup"><span data-stu-id="3347b-1312">Direct</span></span>|  
|<span data-ttu-id="3347b-1313">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-1313">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="3347b-1314">Substituir <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-1314">Override <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeftButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeftButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseLeftButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeftButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeftButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseLeftButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.MouseLeftButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-1315">Identifica o evento roteado <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1315">Identifies the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1316">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-1316">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-1317">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1317">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-1318">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-1318">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-1319">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1319">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-1320">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1320">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseLeftButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseLeftButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseLeftButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeftButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseLeftButtonUp;" />
      <MemberSignature Language="F#" Value="member this.MouseLeftButtonUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseLeftButtonUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeftButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-1321">Ocorre quando o botão esquerdo do mouse é liberado enquanto o ponteiro do mouse está sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1321">Occurs when the left mouse button is released while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1322">Embora isso pareça seguem uma rota de propagação pela árvore de elemento, na verdade, é um evento roteado direto que é gerado e geradas novamente ao longo da árvore de elementos por cada <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1322">Although this  seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="3347b-1323">Esse evento é um dos vários eventos relacionados que relatam as especificações de botão do mouse de uma subjacente <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> evento, que é um evento anexado que é processado por cada elemento ao longo de uma rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1323">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="3347b-1324">Os dados do evento desse evento expõe os dados do evento de subjacente <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="3347b-1324">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="3347b-1325">Se esse evento é marcado como manipulado ao longo da rota de evento, os eventos específicos do botão do mouse ainda são acionados; No entanto, os manipuladores dos eventos específicos para o botão do mouse devem ser adicionados explicitamente chamando <xref:System.Windows.UIElement.AddHandler%2A>, com a opção para lidar com eventos que já estão marcados como manipulados, para ser ouvintes para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1325">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="3347b-1326">Se você marcar <xref:System.Windows.UIElement.MouseLeftButtonUp> tratadas, você essencialmente marcar <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> manipulado para todas as outras escutas ao longo da rota e em todos os eventos relacionados.</span><span class="sxs-lookup"><span data-stu-id="3347b-1326">If you mark <xref:System.Windows.UIElement.MouseLeftButtonUp> handled, you are essentially marking <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span>  
  
 <span data-ttu-id="3347b-1327">Conceitualmente, pensar esse evento (e outros eventos do botão do mouse em <xref:System.Windows.UIElement>) para ser um "serviço" do mouse (com a definição de serviço fornecida pelo <xref:System.Windows.Input.Mouse> classe).</span><span class="sxs-lookup"><span data-stu-id="3347b-1327">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="3347b-1328">O evento adiciona a conveniência de não precisar verificar os estados do botão do mouse (esquerda-direita, superior / inferior) dos eventos originais do mouse nos dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1328">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="3347b-1329">Para cenários mais avançados, como a verificação de estados de botões não padrão, você talvez precise usar o [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] sobre o <xref:System.Windows.Input.Mouse> classe em vez no <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1329">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
<a name="routedEventInfo_MouseLeftButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-1330">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-1330">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-1331">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-1331">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseLeftButtonUpEvent>|  
|<span data-ttu-id="3347b-1332">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-1332">Routing strategy</span></span>|<span data-ttu-id="3347b-1333">Direto</span><span class="sxs-lookup"><span data-stu-id="3347b-1333">Direct</span></span>|  
|<span data-ttu-id="3347b-1334">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-1334">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="3347b-1335">Substituir <xref:System.Windows.UIElement.OnMouseLeftButtonUp%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-1335">Override <xref:System.Windows.UIElement.OnMouseLeftButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeftButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeftButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseLeftButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeftButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeftButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseLeftButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.MouseLeftButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-1336">Identifica o evento roteado <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1336">Identifies the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1337">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-1337">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-1338">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1338">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-1339">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-1339">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-1340">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1340">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-1341">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1341">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseMove As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseMove;" />
      <MemberSignature Language="F#" Value="member this.MouseMove : System.Windows.Input.MouseEventHandler " Usage="member this.MouseMove : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-1342">Ocorre quando o ponteiro do mouse se move enquanto está sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1342">Occurs when the mouse pointer moves while over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1343">Esse evento cria um alias para o <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.UIElement.MouseMove> faz parte da classe a lista de membros quando <xref:System.Windows.UIElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="3347b-1343">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.MouseMove> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="3347b-1344">Manipuladores de eventos que estão anexados para o <xref:System.Windows.UIElement.MouseMove> evento associado subjacente <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1344">Event handlers that are attached to the <xref:System.Windows.UIElement.MouseMove> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_MouseMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-1345">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-1345">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-1346">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-1346">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseMoveEvent>|  
|<span data-ttu-id="3347b-1347">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-1347">Routing strategy</span></span>|<span data-ttu-id="3347b-1348">Propagação</span><span class="sxs-lookup"><span data-stu-id="3347b-1348">Bubbling</span></span>|  
|<span data-ttu-id="3347b-1349">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-1349">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="3347b-1350">O evento por túnel correspondente é <xref:System.Windows.UIElement.PreviewMouseMove>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1350">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewMouseMove>.</span></span>  
  
-   <span data-ttu-id="3347b-1351">Substituir <xref:System.Windows.UIElement.OnMouseMove%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-1351">Override <xref:System.Windows.UIElement.OnMouseMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseEnter" />
        <altmember cref="E:System.Windows.UIElement.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="MouseMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.MouseMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-1352">Identifica o evento roteado <see cref="E:System.Windows.UIElement.MouseMove" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1352">Identifies the <see cref="E:System.Windows.UIElement.MouseMove" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1353">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-1353">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-1354">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1354">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-1355">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-1355">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-1356">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1356">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-1357">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1357">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseRightButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseRightButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseRightButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseRightButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseRightButtonDown;" />
      <MemberSignature Language="F#" Value="member this.MouseRightButtonDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseRightButtonDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseRightButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-1358">Ocorre quando o botão direito do mouse é pressionado enquanto o ponteiro do mouse está sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1358">Occurs when the right mouse button is pressed while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1359">Embora isso pareça seguem uma rota de propagação pela árvore de elemento, na verdade, é um evento roteado direto que é gerado e geradas novamente ao longo da árvore de elementos por cada <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1359">Although this  seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="3347b-1360">Esse evento é um dos vários eventos relacionados que relatam as especificações de botão do mouse de uma subjacente <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> evento, que é um evento anexado que é processado por cada elemento ao longo de uma rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1360">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="3347b-1361">Os dados do evento desse evento expõe os dados do evento de subjacente <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="3347b-1361">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="3347b-1362">Se esse evento é marcado como manipulado ao longo da rota de evento, os eventos específicos do botão do mouse ainda são acionados; No entanto, os manipuladores dos eventos específicos para o botão do mouse devem ser adicionados explicitamente chamando <xref:System.Windows.UIElement.AddHandler%2A>, com a opção para lidar com eventos que já estão marcados como manipulados, para ser ouvintes para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1362">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="3347b-1363">Se você marcar <xref:System.Windows.UIElement.MouseRightButtonDown> tratadas, você essencialmente marcar <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> manipulado para todas as outras escutas ao longo da rota e em todos os eventos relacionados.</span><span class="sxs-lookup"><span data-stu-id="3347b-1363">If you mark <xref:System.Windows.UIElement.MouseRightButtonDown> handled, you are essentially marking <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span> <span data-ttu-id="3347b-1364">Isso possivelmente inclui eventos gerado pelo manipulador de classe, como <xref:System.Windows.Controls.Control.MouseDoubleClick>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1364">This possibly includes class-handler generated events such as <xref:System.Windows.Controls.Control.MouseDoubleClick>.</span></span>  
  
 <span data-ttu-id="3347b-1365">Conceitualmente, pensar esse evento (e outros eventos do botão do mouse em <xref:System.Windows.UIElement>) para ser um "serviço" do mouse (com a definição de serviço fornecida pelo <xref:System.Windows.Input.Mouse> classe).</span><span class="sxs-lookup"><span data-stu-id="3347b-1365">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="3347b-1366">O evento adiciona a conveniência de não precisar verificar os estados do botão do mouse (esquerda-direita, superior / inferior) dos eventos originais do mouse nos dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1366">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="3347b-1367">Para cenários mais avançados, como a verificação de estados de botões não padrão, você talvez precise usar o [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] sobre o <xref:System.Windows.Input.Mouse> classe em vez no <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1367">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="3347b-1368">Eventos do botão direito do mouse frequentemente têm manipulação nativa em cenários de aplicativo.</span><span class="sxs-lookup"><span data-stu-id="3347b-1368">Right button mouse events frequently have native handling in application scenarios.</span></span> <span data-ttu-id="3347b-1369">Por exemplo, um botão direito do mouse para baixo pode exibir um menu de contexto.</span><span class="sxs-lookup"><span data-stu-id="3347b-1369">For instance, a right mouse button down might display a context menu.</span></span> <span data-ttu-id="3347b-1370">Ver [visão geral de ContextMenu](~/docs/framework/wpf/controls/contextmenu-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3347b-1370">See [ContextMenu Overview](~/docs/framework/wpf/controls/contextmenu-overview.md).</span></span>  
  
<a name="routedEventInfo_MouseRightButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-1371">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-1371">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-1372">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-1372">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseRightButtonDownEvent>|  
|<span data-ttu-id="3347b-1373">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-1373">Routing strategy</span></span>|<span data-ttu-id="3347b-1374">Direto</span><span class="sxs-lookup"><span data-stu-id="3347b-1374">Direct</span></span>|  
|<span data-ttu-id="3347b-1375">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-1375">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="3347b-1376">Substituir <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-1376">Override <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseRightButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseRightButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseRightButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseRightButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseRightButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseRightButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseRightButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.MouseRightButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-1377">Identifica o evento roteado <see cref="E:System.Windows.UIElement.MouseRightButtonDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1377">Identifies the <see cref="E:System.Windows.UIElement.MouseRightButtonDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1378">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-1378">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-1379">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1379">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-1380">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-1380">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-1381">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1381">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-1382">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1382">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseRightButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseRightButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseRightButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseRightButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseRightButtonUp;" />
      <MemberSignature Language="F#" Value="member this.MouseRightButtonUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseRightButtonUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseRightButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-1383">Ocorre quando o botão direito do mouse é liberado enquanto o ponteiro do mouse está sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1383">Occurs when the right mouse button is released while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1384">Embora isso pareça seguem uma rota de propagação pela árvore de elemento, na verdade, é um evento roteado direto que é gerado e geradas novamente ao longo da árvore de elementos por cada <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1384">Although this  seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="3347b-1385">Esse evento é um dos vários eventos relacionados que relatam as especificações de botão do mouse de uma subjacente <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> evento, que é um evento anexado que é processado por cada elemento ao longo de uma rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1385">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="3347b-1386">Os dados do evento desse evento expõe os dados do evento de subjacente <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="3347b-1386">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="3347b-1387">Se esse evento é marcado como manipulado ao longo da rota de evento, os eventos específicos do botão do mouse ainda são acionados; No entanto, os manipuladores dos eventos específicos para o botão do mouse devem ser adicionados explicitamente chamando <xref:System.Windows.UIElement.AddHandler%2A>, com a opção para lidar com eventos que já estão marcados como manipulados, para ser ouvintes para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1387">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="3347b-1388">Se você marcar <xref:System.Windows.UIElement.MouseRightButtonUp> tratadas, você essencialmente marcar <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> manipulado para todas as outras escutas ao longo da rota e em todos os eventos relacionados.</span><span class="sxs-lookup"><span data-stu-id="3347b-1388">If you mark <xref:System.Windows.UIElement.MouseRightButtonUp> handled, you are essentially marking <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span>  
  
 <span data-ttu-id="3347b-1389">Conceitualmente, pensar esse evento (e outros eventos do botão do mouse em <xref:System.Windows.UIElement>) para ser um "serviço" do mouse (com a definição de serviço fornecida pelo <xref:System.Windows.Input.Mouse> classe).</span><span class="sxs-lookup"><span data-stu-id="3347b-1389">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="3347b-1390">O evento adiciona a conveniência de não precisar verificar os estados do botão do mouse (esquerda-direita, superior / inferior) dos eventos originais do mouse nos dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1390">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="3347b-1391">Para cenários mais avançados, como a verificação de estados de botões não padrão, você talvez precise usar o [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] sobre o <xref:System.Windows.Input.Mouse> classe em vez no <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1391">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
<a name="routedEventInfo_MouseRightButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-1392">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-1392">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-1393">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-1393">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseRightButtonUpEvent>|  
|<span data-ttu-id="3347b-1394">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-1394">Routing strategy</span></span>|<span data-ttu-id="3347b-1395">Direto</span><span class="sxs-lookup"><span data-stu-id="3347b-1395">Direct</span></span>|  
|<span data-ttu-id="3347b-1396">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-1396">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="3347b-1397">Substituir <xref:System.Windows.UIElement.OnMouseRightButtonUp%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-1397">Override <xref:System.Windows.UIElement.OnMouseRightButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseRightButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseRightButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseRightButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseRightButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseRightButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseRightButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.MouseRightButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-1398">Identifica o evento roteado <see cref="E:System.Windows.UIElement.MouseRightButtonUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1398">Identifies the <see cref="E:System.Windows.UIElement.MouseRightButtonUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1399">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-1399">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-1400">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1400">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-1401">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-1401">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-1402">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1402">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-1403">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1403">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ MouseUp;" />
      <MemberSignature Language="F#" Value="member this.MouseUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-1404">Ocorre quando qualquer botão do mouse é liberado sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1404">Occurs when any mouse button is released over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1405">Esse evento cria um alias para o <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.UIElement.MouseUp> faz parte da classe a lista de membros quando <xref:System.Windows.UIElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="3347b-1405">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.MouseUp> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="3347b-1406">Manipuladores de eventos que estão anexados para o <xref:System.Windows.UIElement.MouseUp> evento associado subjacente <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1406">Event handlers that are attached to the <xref:System.Windows.UIElement.MouseUp> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="3347b-1407">O <xref:System.Windows.UIElement.MouseUp> é normalmente gerado junto com qualquer um <xref:System.Windows.UIElement.MouseLeftButtonUp> ou <xref:System.Windows.UIElement.MouseRightButtonUp>, que correspondem a uma versão de um dos dois botões de mouse padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-1407">The <xref:System.Windows.UIElement.MouseUp> event is often raised together with either <xref:System.Windows.UIElement.MouseLeftButtonUp> or <xref:System.Windows.UIElement.MouseRightButtonUp>, which correspond to a release of one of the two standard mouse buttons.</span></span> <span data-ttu-id="3347b-1408"><xref:System.Windows.UIElement.MouseLeftButtonUp> e <xref:System.Windows.UIElement.MouseRightButtonUp> também são eventos roteados, mas eles são eventos roteados diretos e o evento apropriado do botão específico é gerado quando o <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> evento atinge esse elemento ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1408"><xref:System.Windows.UIElement.MouseLeftButtonUp> and <xref:System.Windows.UIElement.MouseRightButtonUp> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="3347b-1409">Consulte os comentários para <xref:System.Windows.UIElement.MouseLeftButtonUp> ou <xref:System.Windows.UIElement.MouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1409">See Remarks for <xref:System.Windows.UIElement.MouseLeftButtonUp> or <xref:System.Windows.UIElement.MouseRightButtonUp>.</span></span>  
  
<a name="routedEventInfo_MouseUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-1410">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-1410">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-1411">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-1411">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseUpEvent>|  
|<span data-ttu-id="3347b-1412">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-1412">Routing strategy</span></span>|<span data-ttu-id="3347b-1413">Propagação</span><span class="sxs-lookup"><span data-stu-id="3347b-1413">Bubbling</span></span>|  
|<span data-ttu-id="3347b-1414">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-1414">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="3347b-1415">O evento por túnel correspondente é <xref:System.Windows.UIElement.PreviewMouseUp>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1415">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewMouseUp>.</span></span>  
  
-   <span data-ttu-id="3347b-1416">Substituir <xref:System.Windows.UIElement.OnMouseUp%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-1416">Override <xref:System.Windows.UIElement.OnMouseUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.MouseUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-1417">Identifica o evento roteado <see cref="E:System.Windows.UIElement.MouseUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1417">Identifies the <see cref="E:System.Windows.UIElement.MouseUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1418">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-1418">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-1419">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1419">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-1420">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-1420">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-1421">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1421">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-1422">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1422">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheel">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseWheelEventHandler MouseWheel;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseWheelEventHandler MouseWheel" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseWheel" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseWheel As MouseWheelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseWheelEventHandler ^ MouseWheel;" />
      <MemberSignature Language="F#" Value="member this.MouseWheel : System.Windows.Input.MouseWheelEventHandler " Usage="member this.MouseWheel : System.Windows.Input.MouseWheelEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseWheel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseWheelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-1423">Ocorre quando o usuário gira a roda do mouse enquanto o ponteiro do mouse está sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1423">Occurs when the user rotates the mouse wheel while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1424">Captura de foco ou de mouse têm precedência sobre onde o ponteiro do mouse é; Portanto, se você receber o <xref:System.Windows.UIElement.MouseWheel> eventos de um elemento com foco ou capturado, o ponteiro do mouse, na verdade, pode ser em outro elemento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1424">Focus or mouse capture take precedence over where the mouse pointer is; therefore, if you receive the <xref:System.Windows.UIElement.MouseWheel> event from a focused or captured element, the mouse pointer might actually be over another element.</span></span>  
  
 <span data-ttu-id="3347b-1425">Esse evento cria um alias para o <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.UIElement.MouseWheel> faz parte da classe a lista de membros quando <xref:System.Windows.UIElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="3347b-1425">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.MouseWheel> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="3347b-1426">Manipuladores de eventos que estão anexados para o <xref:System.Windows.UIElement.MouseWheel> evento associado subjacente <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1426">Event handlers that are attached to the <xref:System.Windows.UIElement.MouseWheel> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_MouseWheel"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-1427">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-1427">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-1428">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-1428">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseWheelEvent>|  
|<span data-ttu-id="3347b-1429">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-1429">Routing strategy</span></span>|<span data-ttu-id="3347b-1430">Propagação</span><span class="sxs-lookup"><span data-stu-id="3347b-1430">Bubbling</span></span>|  
|<span data-ttu-id="3347b-1431">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-1431">Delegate</span></span>|<xref:System.Windows.Input.MouseWheelEventHandler>|  
  
-   <span data-ttu-id="3347b-1432">O evento por túnel correspondente é <xref:System.Windows.UIElement.PreviewMouseWheel>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1432">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewMouseWheel>.</span></span>  
  
-   <span data-ttu-id="3347b-1433">Substituir <xref:System.Windows.UIElement.OnMouseWheel%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-1433">Override <xref:System.Windows.UIElement.OnMouseWheel%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheelEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseWheelEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseWheelEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseWheelEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseWheelEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseWheelEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseWheelEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.MouseWheelEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-1434">Identifica o evento roteado <see cref="E:System.Windows.UIElement.MouseWheel" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1434">Identifies the <see cref="E:System.Windows.UIElement.MouseWheel" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1435">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-1435">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-1436">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1436">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-1437">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-1437">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-1438">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1438">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-1439">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1439">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveFocus">
      <MemberSignature Language="C#" Value="public virtual bool MoveFocus (System.Windows.Input.TraversalRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveFocus(class System.Windows.Input.TraversalRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MoveFocus (request As TraversalRequest) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveFocus(System::Windows::Input::TraversalRequest ^ request);" />
      <MemberSignature Language="F#" Value="abstract member MoveFocus : System.Windows.Input.TraversalRequest -&gt; bool&#xA;override this.MoveFocus : System.Windows.Input.TraversalRequest -&gt; bool" Usage="uIElement.MoveFocus request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Input.TraversalRequest" />
      </Parameters>
      <Docs>
        <param name="request">
          <span data-ttu-id="3347b-1440">Uma solicitação de passagem, que contém uma propriedade que indica um modo para percorrer uma ordem de tabulação existente ou uma direção de movimentação visualmente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1440">A traversal request, which contains a property that indicates either a mode to traverse in existing tab order, or a direction to move visually.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-1441">Tenta mover o foco deste para outro elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1441">Attempts to move focus from this element to another element.</span>
          </span>
          <span data-ttu-id="3347b-1442">A direção para mover o foco é especificada por uma direção de diretrizes, que é interpretada dentro da organização do pai visual deste elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1442">The direction to move focus is specified by a guidance direction, which is interpreted within the organization of the visual parent for this element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3347b-1443">
            <see langword="true" /> se a passagem solicitada foi executada; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1443">
              <see langword="true" /> if the requested traversal was performed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1444">Verifique se que você verificar o valor de retorno desse método.</span><span class="sxs-lookup"><span data-stu-id="3347b-1444">Make sure you check the return value of this method.</span></span> <span data-ttu-id="3347b-1445">Um valor retornado de `false` pode ser retornado se a travessia é executado em uma parada de tabulação é definida pela composição de um controle e a solicitação de passagem não solicitou para encapsular.</span><span class="sxs-lookup"><span data-stu-id="3347b-1445">A return value of `false` might be returned if the traversal runs into a tab stop that is defined by a control's composition, and the traversal request did not request to wrap.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.Focus" />
      </Docs>
    </Member>
    <Member MemberName="OnAccessKey">
      <MemberSignature Language="C#" Value="protected virtual void OnAccessKey (System.Windows.Input.AccessKeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAccessKey(class System.Windows.Input.AccessKeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAccessKey (e As AccessKeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAccessKey(System::Windows::Input::AccessKeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAccessKey : System.Windows.Input.AccessKeyEventArgs -&gt; unit&#xA;override this.OnAccessKey : System.Windows.Input.AccessKeyEventArgs -&gt; unit" Usage="uIElement.OnAccessKey e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.AccessKeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-1446">Os dados de evento para o evento de chave de acesso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1446">The event data to the access key event.</span>
          </span>
          <span data-ttu-id="3347b-1447">Os relatórios de dados de evento cuja chave foi chamada e indica se o objeto <see cref="T:System.Windows.Input.AccessKeyManager" /> que controla o envio desses eventos também envia essa chamada de chave de acesso a outros elementos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1447">The event data reports which key was invoked, and indicate whether the <see cref="T:System.Windows.Input.AccessKeyManager" /> object that controls the sending of these events also sent this access key invocation to other elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-1448">Fornece tratamento de classes para quando uma chave de acesso que seja significativa para esse elemento é chamada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1448">Provides class handling for when an access key that is meaningful for this element is invoked.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1449">Não há nenhum evento AccessKey real no <xref:System.Windows.UIElement> classe ou em outro lugar, que você pode gerar ou anexar manipuladores para.</span><span class="sxs-lookup"><span data-stu-id="3347b-1449">There is no actual AccessKey event in the <xref:System.Windows.UIElement> class, or elsewhere, which you can raise or attach handlers for.</span></span> <span data-ttu-id="3347b-1450">Em vez disso, é a origem do evento por meio de uma classe de gerenciamento dedicada, <xref:System.Windows.Input.AccessKeyManager>, que todas as entradas para pesquisar as chaves de acesso que se aplicam a todo o modelo de entrada pós-processamento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1450">Instead, the event is originated via a dedicated manager class, <xref:System.Windows.Input.AccessKeyManager>, which post-processes all input to search for access keys that are applicable to the entire input model.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3347b-1451">A implementação padrão desse método na <see cref="T:System.Windows.UIElement" /> define o foco para esse elemento de teclado (chamando <see cref="M:System.Windows.UIElement.Focus" />).</span>
            <span class="sxs-lookup">
              <span data-stu-id="3347b-1451">The default implementation of this method in <see cref="T:System.Windows.UIElement" /> sets keyboard focus to this element (by calling <see cref="M:System.Windows.UIElement.Focus" />).</span>
            </span>
            <span data-ttu-id="3347b-1452">Implementações devem manter esse comportamento se eles forem focalizáveis, porque ele é um comportamento esperado para cenários de acessibilidade.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3347b-1452">Implementations should perpetuate this behavior if they are focusable, because it is an expected behavior for accessibility scenarios.</span>
            </span>
            <span data-ttu-id="3347b-1453">Observe que a implementação base não faz nada com os dados passados pelo evento e não gera nenhum evento adicional; Ele apenas define o foco.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3347b-1453">Note that the base implementation does nothing with the passed event data and raises no further event; it just sets the focus.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnChildDesiredSizeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnChildDesiredSizeChanged (System.Windows.UIElement child);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnChildDesiredSizeChanged(class System.Windows.UIElement child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnChildDesiredSizeChanged (child As UIElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnChildDesiredSizeChanged(System::Windows::UIElement ^ child);" />
      <MemberSignature Language="F#" Value="abstract member OnChildDesiredSizeChanged : System.Windows.UIElement -&gt; unit&#xA;override this.OnChildDesiredSizeChanged : System.Windows.UIElement -&gt; unit" Usage="uIElement.OnChildDesiredSizeChanged child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="child">
          <span data-ttu-id="3347b-1454">O elemento filho que está sendo redimensionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1454">The child element that is being resized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-1455">Dá suporte ao comportamento de layout quando um elemento filho é redimensionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1455">Supports layout behavior when a child element is resized.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1456">Normalmente, esse método não é chamado pelo código do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="3347b-1456">This method is typically not called by your application code.</span></span> <span data-ttu-id="3347b-1457">Ele é exposto para que esse elemento derivado classes podem tornar mais verificações em seu próprio estado de layout possivelmente inválido.</span><span class="sxs-lookup"><span data-stu-id="3347b-1457">It is exposed so that derived element classes can make further checks on their own possibly invalid layout state.</span></span> <span data-ttu-id="3347b-1458">As classes também poderá tentar otimizações para minimizar o tempo de processamento de uma passagem de layout com base nas alterações de tamanho para os elementos filho.</span><span class="sxs-lookup"><span data-stu-id="3347b-1458">Classes could also attempt optimizations to minimize the processing time for a layout pass based on size changes to child elements.</span></span> <span data-ttu-id="3347b-1459">Um exemplo derivados de classe de elemento que implementa <xref:System.Windows.UIElement.OnChildDesiredSizeChanged%2A> é o <xref:System.Windows.Controls.Grid> controle.</span><span class="sxs-lookup"><span data-stu-id="3347b-1459">An example derived element class that implements <xref:System.Windows.UIElement.OnChildDesiredSizeChanged%2A> is the <xref:System.Windows.Controls.Grid> control.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3347b-1460">O <see cref="M:System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)" /> a implementação padrão de chamada do método tem <see cref="M:System.Windows.UIElement.InvalidateMeasure" /> em si mesmo.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3347b-1460">The <see cref="M:System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)" /> method has the default implementation of calling <see cref="M:System.Windows.UIElement.InvalidateMeasure" /> on itself.</span>
            </span>
            <span data-ttu-id="3347b-1461">Uma implementação típica seria: fazer qualquer otimização seu próprio elemento dá suporte a e, em seguida, normalmente chama base <see cref="M:System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)" /> de pelo menos uma das ramificações de código (aquele que indicado o estado "sujo" por sua própria lógica de cache de medida).</span>
            <span class="sxs-lookup">
              <span data-stu-id="3347b-1461">A typical implementation would be: do whatever optimization your own element supports, and then typically call base <see cref="M:System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)" /> from at least one of the code branches (the one that indicated "dirty" state per your own measure caching logic).</span>
            </span>
            <span data-ttu-id="3347b-1462">Esse método é chamado somente no layout de processamento se fosse o próprio filho que originou as alterações de tamanho.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3347b-1462">This method is only called in the layout processing if it was the child itself that originated the size changes.</span>
            </span>
            <span data-ttu-id="3347b-1463">Caso contrário, se o elemento pai inicia a <see cref="M:System.Windows.UIElement.Measure(System.Windows.Size)" /> passar, acordo com as regras do sistema de layout, o pai está recalculando layout já.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3347b-1463">Otherwise, if the parent element initiates the <see cref="M:System.Windows.UIElement.Measure(System.Windows.Size)" /> pass, according to the layout system rules, the parent is recalculating layout already.</span>
            </span>
            <span data-ttu-id="3347b-1464">O sistema de layout processa o layout na ordem filho-pai, portanto, nenhum retorno ao dimensionamento do elemento pai das chamadas de layout do elemento filho é necessário.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3347b-1464">The layout system processes layout in the order of child-to-parent, so no return to parent element sizing from the child element layout calls is necessary.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="abstract member OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer&#xA;override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="uIElement.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3347b-1465">Retorna implementações de <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> específicas à classe para a infra-estrutura de [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1465">Returns class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementations for the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3347b-1466">A implementação de <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> específica ao tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1466">The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3347b-1467">A implementação desse método é normalmente chamar o construtor de um determinado <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementação e retorná-lo como o valor de retorno.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3347b-1467">The implementation of this method is typically to call the constructor of a specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation, and return it as the return value.</span>
            </span>
            <span data-ttu-id="3347b-1468">Todos os <see cref="T:System.Windows.UIElement" /> classes derivadas devem implementar esse método para fornecer suas próprias específicos <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementações para o [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infraestrutura.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3347b-1468">All <see cref="T:System.Windows.UIElement" /> derived classes should implement this method in order to provide their own specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementations to the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure.</span>
            </span>
            <span data-ttu-id="3347b-1469">Para obter detalhes sobre como implementar esse padrão, consulte <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3347b-1469">For details on implementing this pattern, see <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDragEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragEnter : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnDragEnter : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement.OnDragEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-1470">O <see cref="T:System.Windows.DragEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1470">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-1471">Invocado quando um evento anexado <see cref="E:System.Windows.DragDrop.DragEnter" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1471">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragEnter" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="3347b-1472">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1472">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1473">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-1473">This method has no default implementation.</span></span> <span data-ttu-id="3347b-1474">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-1474">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="3347b-1475">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="3347b-1475">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="3347b-1476">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1476">In this case the matching event is a routed event.</span></span> <span data-ttu-id="3347b-1477">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="3347b-1477">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="3347b-1478">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1478">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="3347b-1479">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="3347b-1479">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="3347b-1480">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.UIElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1480">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="3347b-1481">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1481">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnDragLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnDragLeave (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragLeave(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnDragLeave(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragLeave (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragLeave(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragLeave : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnDragLeave : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement.OnDragLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-1482">O <see cref="T:System.Windows.DragEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1482">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-1483">Invocado quando um evento anexado <see cref="E:System.Windows.DragDrop.DragLeave" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1483">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragLeave" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="3347b-1484">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1484">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1485">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-1485">This method has no default implementation.</span></span> <span data-ttu-id="3347b-1486">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-1486">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="3347b-1487">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="3347b-1487">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="3347b-1488">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1488">In this case the matching event is a routed event.</span></span> <span data-ttu-id="3347b-1489">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="3347b-1489">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="3347b-1490">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1490">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="3347b-1491">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="3347b-1491">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="3347b-1492">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.UIElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1492">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="3347b-1493">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1493">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnDragOver">
      <MemberSignature Language="C#" Value="protected virtual void OnDragOver (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragOver(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnDragOver(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragOver (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragOver(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragOver : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnDragOver : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement.OnDragOver e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-1494">O <see cref="T:System.Windows.DragEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1494">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-1495">Invocado quando um evento anexado <see cref="E:System.Windows.DragDrop.DragOver" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1495">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragOver" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="3347b-1496">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1496">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1497">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-1497">This method has no default implementation.</span></span> <span data-ttu-id="3347b-1498">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-1498">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="3347b-1499">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="3347b-1499">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="3347b-1500">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1500">In this case the matching event is a routed event.</span></span> <span data-ttu-id="3347b-1501">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="3347b-1501">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="3347b-1502">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1502">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="3347b-1503">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="3347b-1503">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="3347b-1504">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.UIElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1504">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="3347b-1505">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1505">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragOver" />
      </Docs>
    </Member>
    <Member MemberName="OnDrop">
      <MemberSignature Language="C#" Value="protected virtual void OnDrop (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDrop(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnDrop(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDrop (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDrop(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDrop : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnDrop : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement.OnDrop e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-1506">O <see cref="T:System.Windows.DragEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1506">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-1507">Invocado quando um evento anexado <see cref="E:System.Windows.DragDrop.DragEnter" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1507">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragEnter" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="3347b-1508">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1508">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1509">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-1509">This method has no default implementation.</span></span> <span data-ttu-id="3347b-1510">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-1510">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="3347b-1511">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="3347b-1511">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="3347b-1512">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1512">In this case the matching event is a routed event.</span></span> <span data-ttu-id="3347b-1513">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="3347b-1513">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="3347b-1514">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1514">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="3347b-1515">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="3347b-1515">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="3347b-1516">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.UIElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1516">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="3347b-1517">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1517">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.Drop" />
      </Docs>
    </Member>
    <Member MemberName="OnGiveFeedback">
      <MemberSignature Language="C#" Value="protected virtual void OnGiveFeedback (System.Windows.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGiveFeedback(class System.Windows.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGiveFeedback (e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGiveFeedback(System::Windows::GiveFeedbackEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit&#xA;override this.OnGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit" Usage="uIElement.OnGiveFeedback e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-1518">O <see cref="T:System.Windows.GiveFeedbackEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1518">The <see cref="T:System.Windows.GiveFeedbackEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-1519">Invocado quando um evento anexado <see cref="E:System.Windows.DragDrop.GiveFeedback" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1519">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.GiveFeedback" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="3347b-1520">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1520">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1521">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-1521">This method has no default implementation.</span></span> <span data-ttu-id="3347b-1522">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-1522">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="3347b-1523">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="3347b-1523">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="3347b-1524">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1524">In this case the matching event is a routed event.</span></span> <span data-ttu-id="3347b-1525">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="3347b-1525">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="3347b-1526">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1526">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="3347b-1527">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="3347b-1527">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="3347b-1528">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.UIElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1528">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="3347b-1529">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1529">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.GiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="OnGotFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnGotFocus (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGotFocus(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnGotFocus(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGotFocus (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGotFocus(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotFocus : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnGotFocus : System.Windows.RoutedEventArgs -&gt; unit" Usage="uIElement.OnGotFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-1530">Um <see cref="T:System.Windows.RoutedEventArgs" /> que contém dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1530">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains event data.</span>
          </span>
          <span data-ttu-id="3347b-1531">Esses dados de evento devem conter o identificador para o evento <see cref="E:System.Windows.UIElement.GotFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1531">This event data must contain the identifier for the <see cref="E:System.Windows.UIElement.GotFocus" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-1532">Gera o evento roteado <see cref="E:System.Windows.UIElement.GotFocus" /> usando os dados de evento fornecidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1532">Raises the <see cref="E:System.Windows.UIElement.GotFocus" /> routed event by using the event data provided.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1533">Esse método, embora virtual, têm uma implementação padrão que aciona o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1533">This method, although virtual, does have a default implementation that raises the event.</span></span>  
  
 <span data-ttu-id="3347b-1534">Isso em \* implementação do método destina-se para gerar o evento, e essa mesma implementação de método é chamada internamente para aumentar o evento quando o <xref:System.Windows.UIElement.IsFocused%2A> alterações de valor de propriedade.</span><span class="sxs-lookup"><span data-stu-id="3347b-1534">This On\* method implementation is intended to raise the event, and this same method implementation is invoked internally to raise the event when the <xref:System.Windows.UIElement.IsFocused%2A> property value changes.</span></span> <span data-ttu-id="3347b-1535">O <xref:System.Windows.UIElement.OnGotFocus%2A> difere de implementação de algum outro [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] em \* implementações, que fornecem apenas uma maneira conveniente de adicionar a manipulação de classe para que o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1535">The <xref:System.Windows.UIElement.OnGotFocus%2A> implementation differs from some other [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] On\* implementations, which only provide a convenient way to add class handling for that event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3347b-1536">A menos que você tenha uma necessidade deliberada e incomuns não geram os eventos de foco, certifique-se de que sua implementação chama a implementação base.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3347b-1536">Unless you have a deliberate and unusual need to not raise the focus events, make sure that your implementation calls the base implementation.</span>
            </span>
            <span data-ttu-id="3347b-1537">Caso contrário, o <see cref="E:System.Windows.UIElement.GotFocus" /> evento não é acionado durante as operações típicas de usuário que normalmente define o foco para esse elemento.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3347b-1537">Otherwise, the <see cref="E:System.Windows.UIElement.GotFocus" /> event is not raised during typical user operations that ordinarily set focus to this element.</span>
            </span>
            <span data-ttu-id="3347b-1538">Se você não pretender seu elemento a ser focalizáveis, você pode impedir que o elemento focalizável definindo <see cref="P:System.Windows.UIElement.Focusable" /> para <see langword="false" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3347b-1538">If you do not intend your element to be focusable, you can prevent the element from being focusable by setting <see cref="P:System.Windows.UIElement.Focusable" /> to <see langword="false" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="P:System.Windows.UIElement.Focusable" />
        <altmember cref="E:System.Windows.UIElement.GotFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit&#xA;override this.OnGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="uIElement.OnGotKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-1539">O <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1539">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-1540">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1540">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="3347b-1541">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1541">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1542">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-1542">This method has no default implementation.</span></span> <span data-ttu-id="3347b-1543">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-1543">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="3347b-1544">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="3347b-1544">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="3347b-1545">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1545">In this case the matching event is a routed event.</span></span> <span data-ttu-id="3347b-1546">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="3347b-1546">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="3347b-1547">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1547">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="3347b-1548">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="3347b-1548">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="3347b-1549">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.UIElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1549">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="3347b-1550">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1550">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.GotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnGotMouseCapture">
      <MemberSignature Language="C#" Value="protected virtual void OnGotMouseCapture (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGotMouseCapture(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGotMouseCapture (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGotMouseCapture(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnGotMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="uIElement.OnGotMouseCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-1551">O <see cref="T:System.Windows.Input.MouseEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1551">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-1552">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1552">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="3347b-1553">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1553">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1554">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-1554">This method has no default implementation.</span></span> <span data-ttu-id="3347b-1555">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-1555">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="3347b-1556">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="3347b-1556">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="3347b-1557">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1557">In this case the matching event is a routed event.</span></span> <span data-ttu-id="3347b-1558">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="3347b-1558">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="3347b-1559">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1559">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="3347b-1560">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="3347b-1560">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="3347b-1561">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.UIElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1561">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="3347b-1562">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1562">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.GotMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnGotStylusCapture">
      <MemberSignature Language="C#" Value="protected virtual void OnGotStylusCapture (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGotStylusCapture(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGotStylusCapture (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGotStylusCapture(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotStylusCapture : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnGotStylusCapture : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnGotStylusCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-1563">O <see cref="T:System.Windows.Input.StylusEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1563">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-1564">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1564">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="3347b-1565">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1565">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1566">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-1566">This method has no default implementation.</span></span> <span data-ttu-id="3347b-1567">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-1567">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="3347b-1568">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="3347b-1568">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="3347b-1569">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1569">In this case the matching event is a routed event.</span></span> <span data-ttu-id="3347b-1570">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="3347b-1570">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="3347b-1571">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1571">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="3347b-1572">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="3347b-1572">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="3347b-1573">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.UIElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1573">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="3347b-1574">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1574">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.GotStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnGotTouchCapture">
      <MemberSignature Language="C#" Value="protected virtual void OnGotTouchCapture (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGotTouchCapture(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGotTouchCapture (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGotTouchCapture(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotTouchCapture : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnGotTouchCapture : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement.OnGotTouchCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-1575">Um <see cref="T:System.Windows.Input.TouchEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1575">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-1576">Fornece tratamento de classes para os eventos roteados <see cref="E:System.Windows.UIElement.GotTouchCapture" /> que ocorrem quando um toque é capturado para esse elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1576">Provides class handling for the <see cref="E:System.Windows.UIElement.GotTouchCapture" /> routed event that occurs when a touch is captured to this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1577">O <xref:System.Windows.UIElement.OnGotTouchCapture%2A> método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-1577">The <xref:System.Windows.UIElement.OnGotTouchCapture%2A> method has no default implementation.</span></span> <span data-ttu-id="3347b-1578">Substituir <xref:System.Windows.UIElement.OnGotTouchCapture%2A> em uma classe derivada para manipular o <xref:System.Windows.UIElement.GotTouchCapture> eventos.</span><span class="sxs-lookup"><span data-stu-id="3347b-1578">Override <xref:System.Windows.UIElement.OnGotTouchCapture%2A> in a derived class to handle the <xref:System.Windows.UIElement.GotTouchCapture> event.</span></span> <span data-ttu-id="3347b-1579">Certifique-se de chamar a classe base <xref:System.Windows.UIElement.OnGotTouchCapture%2A> , de modo que classes base receber o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1579">Be sure to call the base class' <xref:System.Windows.UIElement.OnGotTouchCapture%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsKeyboardFocusedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsKeyboardFocusedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsKeyboardFocusedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsKeyboardFocusedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsKeyboardFocusedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsKeyboardFocusedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement.OnIsKeyboardFocusedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-1580">O <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1580">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-1581">Invocado quando um evento <see cref="E:System.Windows.UIElement.IsKeyboardFocusedChanged" /> sem tratamento é gerado nesse elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1581">Invoked when an unhandled <see cref="E:System.Windows.UIElement.IsKeyboardFocusedChanged" /> event is raised on this element.</span>
          </span>
          <span data-ttu-id="3347b-1582">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1582">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1583">Esse método virtual é gerado quando o valor da <xref:System.Windows.UIElement.IsKeyboardFocused%2A> alterações de propriedade de dependência.</span><span class="sxs-lookup"><span data-stu-id="3347b-1583">This virtual method is raised when the value of the <xref:System.Windows.UIElement.IsKeyboardFocused%2A> dependency property changes.</span></span> <span data-ttu-id="3347b-1584">O método virtual é gerado pela primeira vez e pode manipular os dados de eventos conforme necessário.</span><span class="sxs-lookup"><span data-stu-id="3347b-1584">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="3347b-1585">Em seguida, a <xref:System.Windows.UIElement.IsKeyboardFocusedChanged> com essa mesma instância de dados de evento é gerado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1585">Then the <xref:System.Windows.UIElement.IsKeyboardFocusedChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="3347b-1586">Observe que o <xref:System.Windows.UIElement.IsKeyboardFocusedChanged> não é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1586">Notice that the  <xref:System.Windows.UIElement.IsKeyboardFocusedChanged> event is not a routed event.</span></span> <span data-ttu-id="3347b-1587">Portanto, você não pode marcá-la como tratada no manipulador de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-1587">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="3347b-1588">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-1588">This method has no default implementation.</span></span> <span data-ttu-id="3347b-1589">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-1589">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="3347b-1590">Você pode chamar base antes ou depois de seu tratamento especial, dependendo dos seus requisitos.</span><span class="sxs-lookup"><span data-stu-id="3347b-1590">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsKeyboardFocusWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsKeyboardFocusWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsKeyboardFocusWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsKeyboardFocusWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement.OnIsKeyboardFocusWithinChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-1591">Um <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1591">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-1592">Invocado pouco antes do evento <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> ser gerado por este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1592">Invoked just before the <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> event is raised by this element.</span>
          </span>
          <span data-ttu-id="3347b-1593">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1593">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1594">Esse método virtual é gerado quando o valor da <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> alterações de propriedade de dependência.</span><span class="sxs-lookup"><span data-stu-id="3347b-1594">This virtual method is raised when the value of the <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> dependency property changes .</span></span> <span data-ttu-id="3347b-1595">O método virtual é gerado pela primeira vez e pode manipular os dados de eventos conforme necessário.</span><span class="sxs-lookup"><span data-stu-id="3347b-1595">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="3347b-1596">Em seguida, a <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged> com essa mesma instância de dados de evento é gerado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1596">Then the <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="3347b-1597">Observe que o <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged> não é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1597">Notice that the <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged> event is not a routed event.</span></span> <span data-ttu-id="3347b-1598">Portanto, você não pode marcá-la como tratada no manipulador de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-1598">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="3347b-1599">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-1599">This method has no default implementation.</span></span> <span data-ttu-id="3347b-1600">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-1600">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="3347b-1601">Você pode chamar base antes ou depois de seu tratamento especial, dependendo dos seus requisitos.</span><span class="sxs-lookup"><span data-stu-id="3347b-1601">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseCapturedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseCapturedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseCapturedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseCapturedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseCapturedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement.OnIsMouseCapturedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-1602">O <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1602">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-1603">Invocado quando um evento <see cref="E:System.Windows.UIElement.IsMouseCapturedChanged" /> sem tratamento é gerado nesse elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1603">Invoked when an unhandled <see cref="E:System.Windows.UIElement.IsMouseCapturedChanged" /> event is raised on this element.</span>
          </span>
          <span data-ttu-id="3347b-1604">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1604">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1605">Esse método virtual é gerado quando o valor da <xref:System.Windows.UIElement.IsMouseCaptured%2A> propriedade de dependência altera seu valor.</span><span class="sxs-lookup"><span data-stu-id="3347b-1605">This virtual method is raised when the value of the <xref:System.Windows.UIElement.IsMouseCaptured%2A> dependency property changes its value.</span></span> <span data-ttu-id="3347b-1606">O método virtual é gerado pela primeira vez e pode manipular os dados de eventos conforme necessário.</span><span class="sxs-lookup"><span data-stu-id="3347b-1606">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="3347b-1607">Em seguida, a <xref:System.Windows.UIElement.IsMouseCapturedChanged> com essa mesma instância de dados de evento é gerado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1607">Then the <xref:System.Windows.UIElement.IsMouseCapturedChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="3347b-1608">Observe que o <xref:System.Windows.UIElement.IsMouseCapturedChanged> não é um evento roteado; Portanto, você não pode marcá-la como tratada no manipulador de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-1608">Notice that the <xref:System.Windows.UIElement.IsMouseCapturedChanged> event is not a routed event; Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="3347b-1609">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-1609">This method has no default implementation.</span></span> <span data-ttu-id="3347b-1610">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-1610">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="3347b-1611">Você pode chamar base antes ou depois de seu tratamento especial, dependendo dos seus requisitos.</span><span class="sxs-lookup"><span data-stu-id="3347b-1611">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseCaptureWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseCaptureWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseCaptureWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseCaptureWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseCaptureWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsMouseCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsMouseCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement.OnIsMouseCaptureWithinChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-1612">Um <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1612">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-1613">Invocado quando um evento <see cref="E:System.Windows.UIElement.IsMouseCaptureWithinChanged" /> sem tratamento é gerado nesse elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1613">Invoked when an unhandled <see cref="E:System.Windows.UIElement.IsMouseCaptureWithinChanged" /> event is raised on this element.</span>
          </span>
          <span data-ttu-id="3347b-1614">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1614">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3347b-1615">Esse método virtual é gerado quando o valor da <see cref="P:System.Windows.UIElement.IsMouseCaptureWithin" /> propriedade de dependência altera seu valor.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3347b-1615">This virtual method is raised when the value of the <see cref="P:System.Windows.UIElement.IsMouseCaptureWithin" /> dependency property changes its value.</span>
            </span>
            <span data-ttu-id="3347b-1616">O método virtual é gerado pela primeira vez e pode manipular os dados de eventos conforme necessário.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3347b-1616">The virtual method is raised first and can manipulate the event data as necessary.</span>
            </span>
            <span data-ttu-id="3347b-1617">Em seguida, a <see cref="E:System.Windows.UIElement.IsMouseCaptureWithinChanged" /> com essa mesma instância de dados de evento é gerado.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3347b-1617">Then the <see cref="E:System.Windows.UIElement.IsMouseCaptureWithinChanged" /> event is raised with that same event data instance.</span>
            </span>
            <span data-ttu-id="3347b-1618">Observe que o evento não é um evento roteado. Portanto, você não pode marcá-la como tratada no manipulador de classe.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3347b-1618">Notice that the event is not a routed event; Therefore,  you cannot mark it as handled in the class handler.</span>
            </span>
            <span data-ttu-id="3347b-1619">Esse método não tem nenhuma implementação padrão.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3347b-1619">This method has no default implementation.</span>
            </span>
            <span data-ttu-id="3347b-1620">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3347b-1620">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span>
            </span>
            <span data-ttu-id="3347b-1621">Você pode chamar base antes ou depois de seu tratamento especial, dependendo dos seus requisitos.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3347b-1621">You may call base either before or after your special handling, depending on your requirements.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseDirectlyOverChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseDirectlyOverChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseDirectlyOverChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseDirectlyOverChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseDirectlyOverChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsMouseDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsMouseDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement.OnIsMouseDirectlyOverChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-1622">O <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1622">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-1623">Invocado quando um evento <see cref="E:System.Windows.UIElement.IsMouseDirectlyOverChanged" /> sem tratamento é gerado nesse elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1623">Invoked when an unhandled <see cref="E:System.Windows.UIElement.IsMouseDirectlyOverChanged" /> event is raised on this element.</span>
          </span>
          <span data-ttu-id="3347b-1624">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1624">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1625">Esse método virtual é gerado quando o valor da <xref:System.Windows.UIElement.IsMouseDirectlyOver%2A> propriedade de dependência altera seu valor.</span><span class="sxs-lookup"><span data-stu-id="3347b-1625">This virtual method is raised when the value of the <xref:System.Windows.UIElement.IsMouseDirectlyOver%2A> dependency property changes its value.</span></span> <span data-ttu-id="3347b-1626">O método virtual é gerado pela primeira vez e pode manipular os dados de eventos conforme necessário.</span><span class="sxs-lookup"><span data-stu-id="3347b-1626">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="3347b-1627">Em seguida, a <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged> com essa mesma instância de dados de evento é gerado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1627">Then the <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="3347b-1628">Observe que o <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged> não é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1628">Notice that the <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged> event is not a routed event.</span></span> <span data-ttu-id="3347b-1629">Portanto, você não pode marcá-la como tratada no manipulador de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-1629">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="3347b-1630">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-1630">This method has no default implementation.</span></span> <span data-ttu-id="3347b-1631">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-1631">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="3347b-1632">Você pode chamar base antes ou depois de seu tratamento especial, dependendo dos seus requisitos.</span><span class="sxs-lookup"><span data-stu-id="3347b-1632">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusCapturedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusCapturedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusCapturedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusCapturedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusCapturedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsStylusCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsStylusCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement.OnIsStylusCapturedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-1633">Um <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1633">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-1634">Invocado quando um evento <see cref="E:System.Windows.UIElement.IsStylusCapturedChanged" /> sem tratamento é gerado nesse elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1634">Invoked when an unhandled <see cref="E:System.Windows.UIElement.IsStylusCapturedChanged" /> event is raised on this element.</span>
          </span>
          <span data-ttu-id="3347b-1635">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1635">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1636">Esse método virtual é gerado quando o valor da <xref:System.Windows.UIElement.IsStylusCaptured%2A> propriedade de dependência altera seu valor.</span><span class="sxs-lookup"><span data-stu-id="3347b-1636">This virtual method is raised when the value of the <xref:System.Windows.UIElement.IsStylusCaptured%2A> dependency property changes its value.</span></span> <span data-ttu-id="3347b-1637">O método virtual é gerado pela primeira vez e pode manipular os dados de eventos conforme necessário.</span><span class="sxs-lookup"><span data-stu-id="3347b-1637">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="3347b-1638">Em seguida, a <xref:System.Windows.UIElement.IsStylusCapturedChanged> com essa mesma instância de dados de evento é gerado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1638">Then the <xref:System.Windows.UIElement.IsStylusCapturedChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="3347b-1639">Observe que o evento não é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1639">Notice that the event is not a routed event.</span></span> <span data-ttu-id="3347b-1640">Portanto, você não pode marcá-la como tratada no manipulador de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-1640">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="3347b-1641">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-1641">This method has no default implementation.</span></span> <span data-ttu-id="3347b-1642">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-1642">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="3347b-1643">Você pode chamar base antes ou depois de seu tratamento especial, dependendo dos seus requisitos.</span><span class="sxs-lookup"><span data-stu-id="3347b-1643">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusCaptureWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusCaptureWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusCaptureWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusCaptureWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusCaptureWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsStylusCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsStylusCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement.OnIsStylusCaptureWithinChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-1644">O <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1644">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-1645">Invocado quando um evento <see cref="E:System.Windows.UIElement.IsStylusCaptureWithinChanged" /> sem tratamento é gerado nesse elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1645">Invoked when an unhandled <see cref="E:System.Windows.UIElement.IsStylusCaptureWithinChanged" /> event is raised on this element.</span>
          </span>
          <span data-ttu-id="3347b-1646">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1646">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1647">Esse método virtual é gerado quando o valor da <xref:System.Windows.UIElement.IsStylusCaptureWithin%2A> propriedade de dependência altera seu valor.</span><span class="sxs-lookup"><span data-stu-id="3347b-1647">This virtual method is raised when the value of the <xref:System.Windows.UIElement.IsStylusCaptureWithin%2A> dependency property changes its value.</span></span> <span data-ttu-id="3347b-1648">O método virtual é gerado pela primeira vez e pode manipular os dados de eventos conforme necessário.</span><span class="sxs-lookup"><span data-stu-id="3347b-1648">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="3347b-1649">Em seguida, a <xref:System.Windows.UIElement.IsStylusCaptureWithinChanged> com essa mesma instância de dados de evento é gerado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1649">Then the <xref:System.Windows.UIElement.IsStylusCaptureWithinChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="3347b-1650">Observe que o evento não é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1650">Notice that the event is not a routed event.</span></span> <span data-ttu-id="3347b-1651">Portanto, você não pode marcá-la como tratada no manipulador de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-1651">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="3347b-1652">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-1652">This method has no default implementation.</span></span> <span data-ttu-id="3347b-1653">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-1653">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="3347b-1654">Você pode chamar base antes ou depois de seu tratamento especial, dependendo dos seus requisitos.</span><span class="sxs-lookup"><span data-stu-id="3347b-1654">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusDirectlyOverChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusDirectlyOverChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusDirectlyOverChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusDirectlyOverChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusDirectlyOverChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsStylusDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsStylusDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement.OnIsStylusDirectlyOverChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-1655">O <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1655">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-1656">Invocado quando um evento <see cref="E:System.Windows.UIElement.IsStylusDirectlyOverChanged" /> sem tratamento é gerado nesse elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1656">Invoked when an unhandled <see cref="E:System.Windows.UIElement.IsStylusDirectlyOverChanged" /> event is raised on this element.</span>
          </span>
          <span data-ttu-id="3347b-1657">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1657">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1658">Esse método virtual é gerado quando o valor da <xref:System.Windows.UIElement.IsStylusDirectlyOver%2A> propriedade de dependência altera seu valor.</span><span class="sxs-lookup"><span data-stu-id="3347b-1658">This virtual method is raised when the value of the <xref:System.Windows.UIElement.IsStylusDirectlyOver%2A> dependency property changes its value.</span></span> <span data-ttu-id="3347b-1659">O método virtual é gerado pela primeira vez e pode manipular os dados de eventos conforme necessário.</span><span class="sxs-lookup"><span data-stu-id="3347b-1659">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="3347b-1660">Em seguida, a <xref:System.Windows.UIElement.IsStylusDirectlyOverChanged> com essa mesma instância de dados de evento é gerado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1660">Then the <xref:System.Windows.UIElement.IsStylusDirectlyOverChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="3347b-1661">Observe que o evento não é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1661">Notice that the event is not a routed event.</span></span> <span data-ttu-id="3347b-1662">Portanto, você não pode marcá-la como tratada no manipulador de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-1662">Therefore you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="3347b-1663">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-1663">This method has no default implementation.</span></span> <span data-ttu-id="3347b-1664">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-1664">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="3347b-1665">Você pode chamar base antes ou depois de seu tratamento especial, dependendo dos seus requisitos.</span><span class="sxs-lookup"><span data-stu-id="3347b-1665">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected virtual void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit&#xA;override this.OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="uIElement.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-1666">O <see cref="T:System.Windows.Input.KeyEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1666">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-1667">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1667">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="3347b-1668">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1668">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1669">Pressionamentos de tecla são tratados por um Gerenciador de entrada dedicado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1669">Keystrokes are handled by a dedicated input manager.</span></span> <span data-ttu-id="3347b-1670">Outros recursos de programação que dependem de pressionamentos de teclas, por exemplo, associações de entrada e comandos, podem manipular o pressionamento de tecla antes que ele é exposto como um pressionamento de tecla geral.</span><span class="sxs-lookup"><span data-stu-id="3347b-1670">Other programming features that rely on keystrokes, for example, input and command bindings, might handle the keystroke before it is exposed as a general keystroke.</span></span> <span data-ttu-id="3347b-1671">Se esses entrada recursos do sistema marcam o evento como manipulado, em seguida, <xref:System.Windows.UIElement.OnKeyDown%2A> não é invocado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1671">If these input system features mark the event as handled, then <xref:System.Windows.UIElement.OnKeyDown%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="3347b-1672">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-1672">This method has no default implementation.</span></span> <span data-ttu-id="3347b-1673">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-1673">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="3347b-1674">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="3347b-1674">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="3347b-1675">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1675">In this case the matching event is a routed event.</span></span> <span data-ttu-id="3347b-1676">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="3347b-1676">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="3347b-1677">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1677">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="3347b-1678">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="3347b-1678">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="3347b-1679">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.UIElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1679">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="3347b-1680">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1680">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.KeyDown" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected virtual void OnKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit&#xA;override this.OnKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="uIElement.OnKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-1681">O <see cref="T:System.Windows.Input.KeyEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1681">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-1682">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1682">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="3347b-1683">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1683">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1684">Pressionamentos de tecla são tratados por um Gerenciador de entrada dedicado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1684">Keystrokes are handled by a dedicated input manager.</span></span> <span data-ttu-id="3347b-1685">Outros recursos de programação que dependem de pressionamentos de teclas, por exemplo, associações de entrada e comandos, podem manipular o pressionamento de tecla antes que ele é exposto como um pressionamento de tecla geral.</span><span class="sxs-lookup"><span data-stu-id="3347b-1685">Other programming features that rely on keystrokes, for example, input and command bindings, might handle the keystroke before it is exposed as a general keystroke.</span></span> <span data-ttu-id="3347b-1686">Se esses entrada recursos do sistema marcam o evento como manipulado, em seguida, <xref:System.Windows.UIElement.OnKeyUp%2A> não é invocado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1686">If these input system features mark the event as handled, then <xref:System.Windows.UIElement.OnKeyUp%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="3347b-1687">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-1687">This method has no default implementation.</span></span> <span data-ttu-id="3347b-1688">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-1688">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="3347b-1689">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="3347b-1689">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="3347b-1690">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1690">In this case the matching event is a routed event.</span></span> <span data-ttu-id="3347b-1691">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="3347b-1691">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="3347b-1692">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1692">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="3347b-1693">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="3347b-1693">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="3347b-1694">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.UIElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1694">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="3347b-1695">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1695">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="OnLostFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnLostFocus (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLostFocus(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnLostFocus(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLostFocus (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLostFocus(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostFocus : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnLostFocus : System.Windows.RoutedEventArgs -&gt; unit" Usage="uIElement.OnLostFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-1696">Um <see cref="T:System.Windows.RoutedEventArgs" /> que contém dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1696">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains event data.</span>
          </span>
          <span data-ttu-id="3347b-1697">Esses dados de evento devem conter o identificador para o evento <see cref="E:System.Windows.UIElement.LostFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1697">This event data must contain the identifier for the <see cref="E:System.Windows.UIElement.LostFocus" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-1698">Gera o evento roteado <see cref="E:System.Windows.UIElement.LostFocus" /> usando os dados de evento fornecidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1698">Raises the <see cref="E:System.Windows.UIElement.LostFocus" /> routed event by using the event data that is provided.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1699">Esse método, embora virtual, têm uma implementação padrão que aciona o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1699">This method, although virtual, does have a default implementation that raises the event.</span></span>  
  
 <span data-ttu-id="3347b-1700">Isso em \* implementação do método destina-se para gerar o evento, e essa mesma implementação de método é chamada internamente para aumentar o evento quando o <xref:System.Windows.UIElement.IsFocused%2A> alterações de valor de propriedade.</span><span class="sxs-lookup"><span data-stu-id="3347b-1700">This On\* method implementation is intended to raise the event, and this same method implementation is invoked internally to raise the event when the <xref:System.Windows.UIElement.IsFocused%2A> property value changes.</span></span> <span data-ttu-id="3347b-1701">Essa implementação é diferente de algum outro [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] em \* implementações, que fornecem apenas uma maneira conveniente de adicionar a manipulação de classe para que o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1701">This implementation differs from some other [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] On\* implementations, which only provide a convenient way to add class handling for that event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3347b-1702">A menos que você tenha uma necessidade deliberada e incomuns não geram os eventos de foco, certifique-se de que sua implementação chama a implementação base.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3347b-1702">Unless you have a deliberate and unusual need to not raise the focus events, make sure that your implementation calls the base implementation.</span>
            </span>
            <span data-ttu-id="3347b-1703">Caso contrário, o <see cref="E:System.Windows.UIElement.LostFocus" /> evento não é acionado durante as operações típicas de usuário que normalmente define o foco para esse elemento.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3347b-1703">Otherwise, the <see cref="E:System.Windows.UIElement.LostFocus" /> event is not raised during typical user operations that ordinarily set focus to this element.</span>
            </span>
            <span data-ttu-id="3347b-1704">Se você não pretender seu elemento a ser focalizáveis, você pode impedir que o elemento focalizável definindo <see cref="P:System.Windows.UIElement.Focusable" /> para <see langword="false" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3347b-1704">If you do not intend your element to be focusable, you can prevent the element from being focusable by setting <see cref="P:System.Windows.UIElement.Focusable" /> to <see langword="false" />.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnLostKeyboardFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLostKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLostKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLostKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit&#xA;override this.OnLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="uIElement.OnLostKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-1705">O <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> que contém dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1705">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-1706">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1706">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="3347b-1707">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1707">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1708">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-1708">This method has no default implementation.</span></span> <span data-ttu-id="3347b-1709">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-1709">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="3347b-1710">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="3347b-1710">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="3347b-1711">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1711">In this case the matching event is a routed event.</span></span> <span data-ttu-id="3347b-1712">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="3347b-1712">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="3347b-1713">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1713">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="3347b-1714">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="3347b-1714">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="3347b-1715">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.UIElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1715">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="3347b-1716">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1716">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.LostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnLostMouseCapture">
      <MemberSignature Language="C#" Value="protected virtual void OnLostMouseCapture (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLostMouseCapture(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLostMouseCapture (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLostMouseCapture(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnLostMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="uIElement.OnLostMouseCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-1717">O <see cref="T:System.Windows.Input.MouseEventArgs" /> que contém dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1717">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-1718">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1718">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="3347b-1719">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1719">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1720">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-1720">This method has no default implementation.</span></span> <span data-ttu-id="3347b-1721">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-1721">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="3347b-1722">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="3347b-1722">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="3347b-1723">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1723">In this case the matching event is a routed event.</span></span> <span data-ttu-id="3347b-1724">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="3347b-1724">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="3347b-1725">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1725">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="3347b-1726">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="3347b-1726">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="3347b-1727">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.UIElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1727">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="3347b-1728">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1728">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.LostMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnLostStylusCapture">
      <MemberSignature Language="C#" Value="protected virtual void OnLostStylusCapture (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLostStylusCapture(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLostStylusCapture (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLostStylusCapture(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostStylusCapture : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnLostStylusCapture : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnLostStylusCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-1729">O <see cref="T:System.Windows.Input.StylusEventArgs" /> que contém dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1729">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-1730">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1730">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="3347b-1731">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1731">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1732">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-1732">This method has no default implementation.</span></span> <span data-ttu-id="3347b-1733">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-1733">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="3347b-1734">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="3347b-1734">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="3347b-1735">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1735">In this case the matching event is a routed event.</span></span> <span data-ttu-id="3347b-1736">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="3347b-1736">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="3347b-1737">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1737">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="3347b-1738">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="3347b-1738">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="3347b-1739">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.UIElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1739">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="3347b-1740">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1740">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.LostStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnLostTouchCapture">
      <MemberSignature Language="C#" Value="protected virtual void OnLostTouchCapture (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLostTouchCapture(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLostTouchCapture (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLostTouchCapture(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostTouchCapture : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnLostTouchCapture : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement.OnLostTouchCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-1741">Um <see cref="T:System.Windows.Input.TouchEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1741">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-1742">Fornece tratamento de classes para o evento roteado <see cref="E:System.Windows.UIElement.LostTouchCapture" /> que ocorre quando este elemento perde a captura de toque.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1742">Provides class handling for the <see cref="E:System.Windows.UIElement.LostTouchCapture" /> routed event that occurs when this element loses a touch capture.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1743">O <xref:System.Windows.UIElement.OnLostTouchCapture%2A> método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-1743">The <xref:System.Windows.UIElement.OnLostTouchCapture%2A> method has no default implementation.</span></span> <span data-ttu-id="3347b-1744">Substituir <xref:System.Windows.UIElement.OnLostTouchCapture%2A> em uma classe derivada para manipular o <xref:System.Windows.UIElement.LostTouchCapture> eventos.</span><span class="sxs-lookup"><span data-stu-id="3347b-1744">Override <xref:System.Windows.UIElement.OnLostTouchCapture%2A> in a derived class to handle the <xref:System.Windows.UIElement.LostTouchCapture> event.</span></span> <span data-ttu-id="3347b-1745">Certifique-se de chamar a classe base <xref:System.Windows.UIElement.OnLostTouchCapture%2A> , de modo que classes base receber o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1745">Be sure to call the base class' <xref:System.Windows.UIElement.OnLostTouchCapture%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnManipulationBoundaryFeedback">
      <MemberSignature Language="C#" Value="protected virtual void OnManipulationBoundaryFeedback (System.Windows.Input.ManipulationBoundaryFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnManipulationBoundaryFeedback(class System.Windows.Input.ManipulationBoundaryFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnManipulationBoundaryFeedback (e As ManipulationBoundaryFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnManipulationBoundaryFeedback(System::Windows::Input::ManipulationBoundaryFeedbackEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnManipulationBoundaryFeedback : System.Windows.Input.ManipulationBoundaryFeedbackEventArgs -&gt; unit&#xA;override this.OnManipulationBoundaryFeedback : System.Windows.Input.ManipulationBoundaryFeedbackEventArgs -&gt; unit" Usage="uIElement.OnManipulationBoundaryFeedback e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.ManipulationBoundaryFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-1746">Os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1746">The data for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-1747">Chamado quando o evento <see cref="E:System.Windows.UIElement.ManipulationBoundaryFeedback" /> ocorre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1747">Called when the <see cref="E:System.Windows.UIElement.ManipulationBoundaryFeedback" /> event occurs.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1748">O <xref:System.Windows.UIElement.OnManipulationBoundaryFeedback%2A> método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-1748">The <xref:System.Windows.UIElement.OnManipulationBoundaryFeedback%2A> method has no default implementation.</span></span> <span data-ttu-id="3347b-1749">Substituir <xref:System.Windows.UIElement.OnManipulationBoundaryFeedback%2A> em uma classe derivada para manipular o <xref:System.Windows.UIElement.ManipulationBoundaryFeedback> eventos.</span><span class="sxs-lookup"><span data-stu-id="3347b-1749">Override <xref:System.Windows.UIElement.OnManipulationBoundaryFeedback%2A> in a derived class to handle the <xref:System.Windows.UIElement.ManipulationBoundaryFeedback> event.</span></span> <span data-ttu-id="3347b-1750">Certifique-se de chamar o <xref:System.Windows.UIElement.OnManipulationBoundaryFeedback%2A> método da classe base para classes que base receber o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1750">Be sure to call the <xref:System.Windows.UIElement.OnManipulationBoundaryFeedback%2A> method of the base class so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnManipulationCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnManipulationCompleted (System.Windows.Input.ManipulationCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnManipulationCompleted(class System.Windows.Input.ManipulationCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnManipulationCompleted (e As ManipulationCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnManipulationCompleted(System::Windows::Input::ManipulationCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnManipulationCompleted : System.Windows.Input.ManipulationCompletedEventArgs -&gt; unit&#xA;override this.OnManipulationCompleted : System.Windows.Input.ManipulationCompletedEventArgs -&gt; unit" Usage="uIElement.OnManipulationCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.ManipulationCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-1751">Os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1751">The data for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-1752">Chamado quando o evento <see cref="E:System.Windows.UIElement.ManipulationCompleted" /> ocorre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1752">Called when the <see cref="E:System.Windows.UIElement.ManipulationCompleted" /> event occurs.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1753">O <xref:System.Windows.UIElement.OnManipulationCompleted%2A> método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-1753">The <xref:System.Windows.UIElement.OnManipulationCompleted%2A> method has no default implementation.</span></span> <span data-ttu-id="3347b-1754">Substituir <xref:System.Windows.UIElement.OnManipulationCompleted%2A> em uma classe derivada para manipular o <xref:System.Windows.UIElement.ManipulationCompleted> eventos.</span><span class="sxs-lookup"><span data-stu-id="3347b-1754">Override <xref:System.Windows.UIElement.OnManipulationCompleted%2A> in a derived class to handle the <xref:System.Windows.UIElement.ManipulationCompleted> event.</span></span> <span data-ttu-id="3347b-1755">Certifique-se de chamar o <xref:System.Windows.UIElement.OnManipulationCompleted%2A> método da classe base para classes que base receber o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1755">Be sure to call the <xref:System.Windows.UIElement.OnManipulationCompleted%2A> method of the base class so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnManipulationDelta">
      <MemberSignature Language="C#" Value="protected virtual void OnManipulationDelta (System.Windows.Input.ManipulationDeltaEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnManipulationDelta(class System.Windows.Input.ManipulationDeltaEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnManipulationDelta (e As ManipulationDeltaEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnManipulationDelta(System::Windows::Input::ManipulationDeltaEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnManipulationDelta : System.Windows.Input.ManipulationDeltaEventArgs -&gt; unit&#xA;override this.OnManipulationDelta : System.Windows.Input.ManipulationDeltaEventArgs -&gt; unit" Usage="uIElement.OnManipulationDelta e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.ManipulationDeltaEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-1756">Os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1756">The data for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-1757">Chamado quando o evento <see cref="E:System.Windows.UIElement.ManipulationDelta" /> ocorre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1757">Called when the <see cref="E:System.Windows.UIElement.ManipulationDelta" /> event occurs.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1758">O <xref:System.Windows.UIElement.OnManipulationDelta%2A> método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-1758">The <xref:System.Windows.UIElement.OnManipulationDelta%2A> method has no default implementation.</span></span> <span data-ttu-id="3347b-1759">Substituir <xref:System.Windows.UIElement.OnManipulationDelta%2A> em uma classe derivada para manipular o <xref:System.Windows.UIElement.ManipulationDelta> eventos.</span><span class="sxs-lookup"><span data-stu-id="3347b-1759">Override <xref:System.Windows.UIElement.OnManipulationDelta%2A> in a derived class to handle the <xref:System.Windows.UIElement.ManipulationDelta> event.</span></span> <span data-ttu-id="3347b-1760">Certifique-se de chamar o <xref:System.Windows.UIElement.OnManipulationDelta%2A> método da classe base para classes que base receber o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1760">Be sure to call the <xref:System.Windows.UIElement.OnManipulationDelta%2A> method of the base class so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnManipulationInertiaStarting">
      <MemberSignature Language="C#" Value="protected virtual void OnManipulationInertiaStarting (System.Windows.Input.ManipulationInertiaStartingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnManipulationInertiaStarting(class System.Windows.Input.ManipulationInertiaStartingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnManipulationInertiaStarting(System.Windows.Input.ManipulationInertiaStartingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnManipulationInertiaStarting (e As ManipulationInertiaStartingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnManipulationInertiaStarting(System::Windows::Input::ManipulationInertiaStartingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnManipulationInertiaStarting : System.Windows.Input.ManipulationInertiaStartingEventArgs -&gt; unit&#xA;override this.OnManipulationInertiaStarting : System.Windows.Input.ManipulationInertiaStartingEventArgs -&gt; unit" Usage="uIElement.OnManipulationInertiaStarting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.ManipulationInertiaStartingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-1761">Os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1761">The data for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-1762">Chamado quando o evento <see cref="E:System.Windows.UIElement.ManipulationInertiaStarting" /> ocorre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1762">Called when the <see cref="E:System.Windows.UIElement.ManipulationInertiaStarting" /> event occurs.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1763">O <xref:System.Windows.UIElement.OnManipulationInertiaStarting%2A> método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-1763">The <xref:System.Windows.UIElement.OnManipulationInertiaStarting%2A> method has no default implementation.</span></span> <span data-ttu-id="3347b-1764">Substituir <xref:System.Windows.UIElement.OnManipulationInertiaStarting%2A> em uma classe derivada para manipular o <xref:System.Windows.UIElement.ManipulationInertiaStarting> eventos.</span><span class="sxs-lookup"><span data-stu-id="3347b-1764">Override <xref:System.Windows.UIElement.OnManipulationInertiaStarting%2A> in a derived class to handle the <xref:System.Windows.UIElement.ManipulationInertiaStarting> event.</span></span> <span data-ttu-id="3347b-1765">Certifique-se de chamar o <xref:System.Windows.UIElement.OnManipulationInertiaStarting%2A> método da classe base para classes que base receber o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1765">Be sure to call the <xref:System.Windows.UIElement.OnManipulationInertiaStarting%2A> method of the base class so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnManipulationStarted">
      <MemberSignature Language="C#" Value="protected virtual void OnManipulationStarted (System.Windows.Input.ManipulationStartedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnManipulationStarted(class System.Windows.Input.ManipulationStartedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnManipulationStarted (e As ManipulationStartedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnManipulationStarted(System::Windows::Input::ManipulationStartedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnManipulationStarted : System.Windows.Input.ManipulationStartedEventArgs -&gt; unit&#xA;override this.OnManipulationStarted : System.Windows.Input.ManipulationStartedEventArgs -&gt; unit" Usage="uIElement.OnManipulationStarted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.ManipulationStartedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-1766">Os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1766">The data for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-1767">Chamado quando o evento <see cref="E:System.Windows.UIElement.ManipulationStarted" /> ocorre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1767">Called when the <see cref="E:System.Windows.UIElement.ManipulationStarted" /> event occurs.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1768">O <xref:System.Windows.UIElement.OnManipulationStarted%2A> método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-1768">The <xref:System.Windows.UIElement.OnManipulationStarted%2A> method has no default implementation.</span></span> <span data-ttu-id="3347b-1769">Substituir <xref:System.Windows.UIElement.OnManipulationStarted%2A> em uma classe derivada para manipular o <xref:System.Windows.UIElement.ManipulationStarted> eventos.</span><span class="sxs-lookup"><span data-stu-id="3347b-1769">Override <xref:System.Windows.UIElement.OnManipulationStarted%2A> in a derived class to handle the <xref:System.Windows.UIElement.ManipulationStarted> event.</span></span> <span data-ttu-id="3347b-1770">Certifique-se de chamar o <xref:System.Windows.UIElement.OnManipulationStarted%2A> método da classe base para classes que base receber o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1770">Be sure to call the <xref:System.Windows.UIElement.OnManipulationStarted%2A> method of the base class so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnManipulationStarting">
      <MemberSignature Language="C#" Value="protected virtual void OnManipulationStarting (System.Windows.Input.ManipulationStartingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnManipulationStarting(class System.Windows.Input.ManipulationStartingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnManipulationStarting(System.Windows.Input.ManipulationStartingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnManipulationStarting (e As ManipulationStartingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnManipulationStarting(System::Windows::Input::ManipulationStartingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnManipulationStarting : System.Windows.Input.ManipulationStartingEventArgs -&gt; unit&#xA;override this.OnManipulationStarting : System.Windows.Input.ManipulationStartingEventArgs -&gt; unit" Usage="uIElement.OnManipulationStarting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.ManipulationStartingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-1771">Um <see cref="T:System.Windows.Input.ManipulationStartingEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1771">A <see cref="T:System.Windows.Input.ManipulationStartingEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-1772">Fornece tratamento de classes para o evento <see cref="E:System.Windows.UIElement.ManipulationStarting" /> roteado que ocorre quando o processador de manipulação é criado pela primeira vez.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1772">Provides class handling for the <see cref="E:System.Windows.UIElement.ManipulationStarting" /> routed event that occurs when the manipulation processor is first created.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1773">O <xref:System.Windows.UIElement.OnManipulationStarting%2A> método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-1773">The <xref:System.Windows.UIElement.OnManipulationStarting%2A> method has no default implementation.</span></span> <span data-ttu-id="3347b-1774">Substituir <xref:System.Windows.UIElement.OnManipulationStarting%2A> em uma classe derivada para manipular o <xref:System.Windows.UIElement.ManipulationStarting> eventos.</span><span class="sxs-lookup"><span data-stu-id="3347b-1774">Override <xref:System.Windows.UIElement.OnManipulationStarting%2A> in a derived class to handle the <xref:System.Windows.UIElement.ManipulationStarting> event.</span></span> <span data-ttu-id="3347b-1775">Certifique-se de chamar a classe base <xref:System.Windows.UIElement.OnManipulationStarting%2A> , de modo que classes base receber o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1775">Be sure to call the base class' <xref:System.Windows.UIElement.OnManipulationStarting%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement.OnMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-1776">O <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1776">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="3347b-1777">Esses dados de evento relatam detalhes sobre o botão do mouse que foi pressionado e o estado tratado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1777">This event data reports details about the mouse button that was pressed and the handled state.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-1778">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Mouse.MouseDown" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1778">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseDown" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="3347b-1779">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1779">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1780">Ações de botão do mouse também são manipuladas por um gerente de entrada dedicado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1780">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="3347b-1781">Outros recursos de programação que dependem de ações de botão do mouse, como entrada e associações de comando, poderão invocar manipuladores para a ação antes que ele é exposto como uma ação do botão do mouse geral.</span><span class="sxs-lookup"><span data-stu-id="3347b-1781">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="3347b-1782">Se esses marca de recursos do sistema de entrada a <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> evento como manipulado, <xref:System.Windows.UIElement.OnMouseDown%2A> não é invocado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1782">If these input system features mark the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event as handled, <xref:System.Windows.UIElement.OnMouseDown%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="3347b-1783">Se você usar esse manipulador de classe para marcar o evento como manipulado, você potencialmente afeta os seguintes eventos: <xref:System.Windows.UIElement.MouseLeftButtonDown> e <xref:System.Windows.UIElement.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1783">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.UIElement.MouseLeftButtonDown> and <xref:System.Windows.UIElement.MouseRightButtonDown>.</span></span> <span data-ttu-id="3347b-1784">Qualquer um desses eventos podem ser gerado no elemento de recebimento quando <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> é recebida.</span><span class="sxs-lookup"><span data-stu-id="3347b-1784">Either of these events may be raised on the receiving element when <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="3347b-1785">Se você marcar esse evento como manipulado no tratamento de classes, ainda são acionados subevents; No entanto, eles passam o estado manipulado nos dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1785">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="3347b-1786">Se o evento é manipulado na manipulação de classe, os manipuladores de instância para os subevents não são invocados, a menos que use explicitamente <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> com `handledEventsToo` `true` para anexar manipuladores.</span><span class="sxs-lookup"><span data-stu-id="3347b-1786">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="3347b-1787">Manipuladores de classe também não são invocados, a menos que esses manipuladores de classe foram registrados com o <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> assinatura com `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="3347b-1787">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="3347b-1788">Manipulando <xref:System.Windows.UIElement.OnMouseDown%2A>, você está indicando que sua manipulação de classe levados em conta todos os botão do mouse possíveis velocidade das ações de.</span><span class="sxs-lookup"><span data-stu-id="3347b-1788">By handling <xref:System.Windows.UIElement.OnMouseDown%2A>, you are implying that your class handling accounted for all possible mouse button down actions.</span></span> <span data-ttu-id="3347b-1789">Esse comportamento pode ser indesejado; Portanto, tenha cuidado ao usar esse método virtual para marcar eventos como manipulados.</span><span class="sxs-lookup"><span data-stu-id="3347b-1789">This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="3347b-1790">Cada um dos eventos diretos específicos do botão também tem uma máquina virtual \* método; Considere se substituir esses manipuladores de classe específica de botão pode ser mais apropriado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1790">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="3347b-1791">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-1791">This method has no default implementation.</span></span> <span data-ttu-id="3347b-1792">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-1792">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="3347b-1793">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="3347b-1793">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="3347b-1794">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1794">In this case the matching event is a routed event.</span></span> <span data-ttu-id="3347b-1795">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="3347b-1795">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="3347b-1796">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1796">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="3347b-1797">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="3347b-1797">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="3347b-1798">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.UIElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1798">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="3347b-1799">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1799">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseDown" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseEnter (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseEnter(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseEnter (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseEnter(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseEnter : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnMouseEnter : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="uIElement.OnMouseEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-1800">O <see cref="T:System.Windows.Input.MouseEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1800">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-1801">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> sem tratamento é gerado nesse elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1801">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> attached event is raised on this element.</span>
          </span>
          <span data-ttu-id="3347b-1802">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1802">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1803">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-1803">This method has no default implementation.</span></span> <span data-ttu-id="3347b-1804">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-1804">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="3347b-1805">Você pode chamar base antes ou depois de seu tratamento especial, dependendo dos seus requisitos.</span><span class="sxs-lookup"><span data-stu-id="3347b-1805">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="3347b-1806">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="3347b-1806">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="3347b-1807">Nesse caso, o evento correspondente é um evento roteado, com uma estratégia de roteamento direto.</span><span class="sxs-lookup"><span data-stu-id="3347b-1807">In this case the matching event is a routed event, with a direct routing strategy.</span></span> <span data-ttu-id="3347b-1808">Marcar o evento como manipulado ainda é útil para que os manipuladores de instância típico (aqueles que não especificam `handledEventsToo`) seja chamado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1808">Marking the event as handled is still useful for preventing the typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseLeave (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseLeave(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseLeave (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseLeave(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeave : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnMouseLeave : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="uIElement.OnMouseLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-1809">O <see cref="T:System.Windows.Input.MouseEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1809">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-1810">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> sem tratamento é gerado nesse elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1810">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> attached event is raised on this element.</span>
          </span>
          <span data-ttu-id="3347b-1811">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1811">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1812">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-1812">This method has no default implementation.</span></span> <span data-ttu-id="3347b-1813">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-1813">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="3347b-1814">Você pode chamar base antes ou depois de seu tratamento especial, dependendo dos seus requisitos.</span><span class="sxs-lookup"><span data-stu-id="3347b-1814">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="3347b-1815">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="3347b-1815">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="3347b-1816">Nesse caso, o evento correspondente é um evento roteado, com uma estratégia de roteamento direto.</span><span class="sxs-lookup"><span data-stu-id="3347b-1816">In this case the matching event is a routed event, with a direct routing strategy.</span></span> <span data-ttu-id="3347b-1817">Marcar o evento como manipulado ainda é útil para que os manipuladores de instância típico (aqueles que não especificam `handledEventsToo`) seja chamado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1817">Marking the event as handled is still useful for preventing the typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement.OnMouseLeftButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-1818">O <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1818">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="3347b-1819">Os dados do evento relatam que o botão esquerdo do mouse foi pressionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1819">The event data reports that the left mouse button was pressed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-1820">Invocado quando um evento roteado <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> sem tratamento é gerado nesse elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1820">Invoked when an unhandled <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> routed event is raised on this element.</span>
          </span>
          <span data-ttu-id="3347b-1821">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1821">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1822">O <xref:System.Windows.UIElement.MouseLeftButtonDown> evento parece uma rota de propagação de viagem, mas, na verdade, viaja de forma indireta.</span><span class="sxs-lookup"><span data-stu-id="3347b-1822">The <xref:System.Windows.UIElement.MouseLeftButtonDown> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="3347b-1823"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> o evento subjacente que é roteada de bolha, e cada <xref:System.Windows.UIElement> ao longo do evento rota usa o tratamento de idêntico para gerar o evento roteado direto <xref:System.Windows.UIElement.MouseLeftButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1823"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.MouseLeftButtonDown>.</span></span> <span data-ttu-id="3347b-1824">Embora você pode marcar o <xref:System.Windows.UIElement.MouseLeftButtonDown> evento como manipulado para fins desse elemento, o estado manipulado não perpetuada a outros elementos ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1824">Although you can mark the <xref:System.Windows.UIElement.MouseLeftButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="3347b-1825">No entanto, você talvez queira marcar o evento como manipulado para evitar que os manipuladores de instância geral (aquelas que não especificou `handledEventsToo`) seja chamado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1825">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="3347b-1826">A implementação padrão para mouse geral tratamento de eventos em <xref:System.Windows.UIElement> escuta <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> e o converte em um evento local apropriado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1826">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="3347b-1827">Se você quiser substituir essa lógica, você deve criar uma classe derivada.</span><span class="sxs-lookup"><span data-stu-id="3347b-1827">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="3347b-1828">No construtor estático da classe derivada, registra um manipulador de classe alternativo para <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1828">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3347b-1829">Não é possível alterar o comportamento de manipulação de mouse <xref:System.Windows.UIElement> substituindo <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1829">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="3347b-1830">Como alternativa, você pode substituir esse método para alterar a manipulação de eventos para um estado específico de mouse.</span><span class="sxs-lookup"><span data-stu-id="3347b-1830">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="3347b-1831">Se você optar por chamar a implementação base depende do seu cenário.</span><span class="sxs-lookup"><span data-stu-id="3347b-1831">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="3347b-1832">Falha ao chamar base desabilita a manipulação de entrada padrão para o evento do mouse em classes de ancestral que também pretende invocar <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1832">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A>.</span></span> <span data-ttu-id="3347b-1833">Por exemplo, você pode derivar de <xref:System.Windows.Controls.Button> e substituir <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A> em sua classe derivada sem chamar a implementação base; no entanto, isso substituir desabilita o <xref:System.Windows.Controls.Primitives.ButtonBase.Click> eventos.</span><span class="sxs-lookup"><span data-stu-id="3347b-1833">For example, you can derive from <xref:System.Windows.Controls.Button> and override <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A> in your derived class without calling the base implementation; however, this override disables the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement.OnMouseLeftButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-1834">O <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1834">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="3347b-1835">Os dados do evento relatam que o botão esquerdo foi liberado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1835">The event data reports that the left mouse button was released.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-1836">Invocado quando um evento roteado <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1836">Invoked when an unhandled <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> routed event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="3347b-1837">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1837">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1838">O <xref:System.Windows.UIElement.MouseLeftButtonUp> evento parece uma rota de propagação de viagem, mas, na verdade, viaja de forma indireta.</span><span class="sxs-lookup"><span data-stu-id="3347b-1838">The <xref:System.Windows.UIElement.MouseLeftButtonUp> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="3347b-1839"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> o evento subjacente que é roteada de bolha, e cada <xref:System.Windows.UIElement> ao longo do evento rota usa o tratamento de idêntico para gerar o evento roteado direto <xref:System.Windows.UIElement.MouseLeftButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1839"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.MouseLeftButtonUp>.</span></span> <span data-ttu-id="3347b-1840">Embora você pode marcar o <xref:System.Windows.UIElement.MouseLeftButtonUp> evento como manipulado para fins desse elemento, o estado manipulado não perpetuada a outros elementos ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1840">Although you can mark the <xref:System.Windows.UIElement.MouseLeftButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="3347b-1841">No entanto, você talvez queira marcar o evento como manipulado para evitar que os manipuladores de instância geral (aquelas que não especificou `handledEventsToo`) seja chamado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1841">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="3347b-1842">A implementação padrão para mouse geral tratamento de eventos em <xref:System.Windows.UIElement> escuta <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> e o converte em um evento local apropriado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1842">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="3347b-1843">Se você quiser substituir essa lógica, você deve criar uma classe derivada.</span><span class="sxs-lookup"><span data-stu-id="3347b-1843">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="3347b-1844">No construtor estático da classe derivada, registra um manipulador de classe alternativo para <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1844">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3347b-1845">Não é possível alterar o comportamento de manipulação de mouse <xref:System.Windows.UIElement> substituindo <xref:System.Windows.UIElement.OnMouseLeftButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1845">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnMouseLeftButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="uIElement.OnMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-1846">O <see cref="T:System.Windows.Input.MouseEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1846">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-1847">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Mouse.MouseMove" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1847">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseMove" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="3347b-1848">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1848">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1849">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-1849">This method has no default implementation.</span></span> <span data-ttu-id="3347b-1850">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-1850">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="3347b-1851">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="3347b-1851">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="3347b-1852">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1852">In this case the matching event is a routed event.</span></span> <span data-ttu-id="3347b-1853">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="3347b-1853">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="3347b-1854">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1854">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="3347b-1855">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="3347b-1855">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="3347b-1856">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.UIElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1856">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="3347b-1857">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1857">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseMove" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseRightButtonDown">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseRightButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseRightButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseRightButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement.OnMouseRightButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-1858">O <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1858">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="3347b-1859">Os dados do evento relatam que o botão direito do mouse foi pressionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1859">The event data reports that the right mouse button was pressed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-1860">Invocado quando um evento roteado <see cref="E:System.Windows.UIElement.MouseRightButtonDown" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1860">Invoked when an unhandled <see cref="E:System.Windows.UIElement.MouseRightButtonDown" /> routed event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="3347b-1861">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1861">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1862">O <xref:System.Windows.UIElement.MouseRightButtonDown> evento parece uma rota de propagação de viagem, mas, na verdade, viaja de forma indireta.</span><span class="sxs-lookup"><span data-stu-id="3347b-1862">The <xref:System.Windows.UIElement.MouseRightButtonDown> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="3347b-1863"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> o evento subjacente que é roteada de bolha, e cada <xref:System.Windows.UIElement> ao longo do evento rota usa o tratamento de idêntico para gerar o evento roteado direto <xref:System.Windows.UIElement.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1863"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.MouseRightButtonDown>.</span></span> <span data-ttu-id="3347b-1864">Embora você pode marcar o <xref:System.Windows.UIElement.MouseRightButtonDown> evento como manipulado para fins desse elemento, o estado manipulado não perpetuada a outros elementos ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1864">Although you can mark the <xref:System.Windows.UIElement.MouseRightButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="3347b-1865">No entanto, você talvez queira marcar o evento como manipulado para evitar que os manipuladores de instância geral (aquelas que não especificou `handledEventsToo`) seja chamado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1865">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="3347b-1866">A implementação padrão para mouse geral tratamento de eventos em <xref:System.Windows.UIElement> escuta <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> e o converte em um evento local apropriado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1866">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="3347b-1867">Se você quiser substituir essa lógica, você deve criar uma classe derivada.</span><span class="sxs-lookup"><span data-stu-id="3347b-1867">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="3347b-1868">No construtor estático da classe derivada, registra um manipulador de classe alternativo para <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1868">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3347b-1869">Não é possível alterar o comportamento de manipulação de mouse <xref:System.Windows.UIElement> substituindo <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1869">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="3347b-1870">Como alternativa, você pode substituir esse método para alterar a manipulação de eventos para um estado específico de mouse.</span><span class="sxs-lookup"><span data-stu-id="3347b-1870">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="3347b-1871">Se você optar por chamar a implementação base depende do seu cenário.</span><span class="sxs-lookup"><span data-stu-id="3347b-1871">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="3347b-1872">Falha ao chamar base desabilita a manipulação de entrada padrão para o evento do mouse em classes de ancestral que também pretende invocar <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1872">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A>.</span></span> <span data-ttu-id="3347b-1873">Por exemplo, você pode derivar de <xref:System.Windows.Controls.Control> e substituir <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A> em sua classe derivada sem base chamada; no entanto, essa substituição desativa os serviços de menu de contexto em seu controle, que fazem parte do <xref:System.Windows.Controls.Control> comportamento padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-1873">For example, you can derive from <xref:System.Windows.Controls.Control> and override <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A> in your derived class without calling base; however, this override disables the context menu services on your control, which are part of the <xref:System.Windows.Controls.Control> default behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseRightButtonUp">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseRightButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseRightButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseRightButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement.OnMouseRightButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-1874">O <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1874">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="3347b-1875">Os dados do evento relatam que o botão direito do mouse foi liberado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1875">The event data reports that the right mouse button was released.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-1876">Invocado quando um evento roteado <see cref="E:System.Windows.UIElement.MouseRightButtonUp" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1876">Invoked when an unhandled <see cref="E:System.Windows.UIElement.MouseRightButtonUp" /> routed event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="3347b-1877">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1877">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1878">O <xref:System.Windows.UIElement.MouseRightButtonUp> evento parece uma rota de propagação de viagem, mas, na verdade, viaja de forma indireta.</span><span class="sxs-lookup"><span data-stu-id="3347b-1878">The <xref:System.Windows.UIElement.MouseRightButtonUp> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="3347b-1879"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> o evento subjacente que é roteada de bolha, e cada <xref:System.Windows.UIElement> ao longo do evento rota usa o tratamento de idêntico para gerar o evento roteado direto <xref:System.Windows.UIElement.MouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1879"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.MouseRightButtonUp>.</span></span> <span data-ttu-id="3347b-1880">Embora você pode marcar o <xref:System.Windows.UIElement.MouseRightButtonUp> evento como manipulado para fins desse elemento, o estado manipulado não perpetuada a outros elementos ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1880">Although you can mark the <xref:System.Windows.UIElement.MouseRightButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="3347b-1881">No entanto, você talvez queira marcar o evento como manipulado para evitar que os manipuladores de instância geral (aquelas que não especificou `handledEventsToo`) seja chamado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1881">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="3347b-1882">A implementação padrão para mouse geral tratamento de eventos em <xref:System.Windows.UIElement> escuta <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> e o converte em um evento local apropriado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1882">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="3347b-1883">Se você quiser substituir essa lógica, você deve criar uma classe derivada.</span><span class="sxs-lookup"><span data-stu-id="3347b-1883">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="3347b-1884">No construtor estático da classe derivada, registra um manipulador de classe alternativo para <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1884">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3347b-1885">Não é possível alterar o comportamento de manipulação de mouse <xref:System.Windows.UIElement> substituindo <xref:System.Windows.UIElement.OnMouseRightButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1885">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnMouseRightButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement.OnMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-1886">O <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1886">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="3347b-1887">Os dados do evento relatam que o botão do mouse foi liberado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1887">The event data reports that the mouse button was released.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-1888">Invocado quando um evento roteado <see cref="E:System.Windows.Input.Mouse.MouseUp" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1888">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseUp" /> routed event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="3347b-1889">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1889">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1890">Ações de botão do mouse também são manipuladas por um gerente de entrada dedicado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1890">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="3347b-1891">Outros recursos de programação que dependem de ações de botão do mouse, como entrada e associações de comando, poderão invocar manipuladores para a ação antes que ele é exposto como uma ação do botão do mouse geral.</span><span class="sxs-lookup"><span data-stu-id="3347b-1891">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="3347b-1892">Se esses marca de recursos do sistema de entrada a <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> evento como manipulado, <xref:System.Windows.UIElement.OnMouseUp%2A> não é invocado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1892">If these input system features mark the <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event as handled, <xref:System.Windows.UIElement.OnMouseUp%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="3347b-1893">Se você usar esse manipulador de classe para marcar o evento como manipulado, você potencialmente afeta os seguintes eventos: <xref:System.Windows.UIElement.MouseLeftButtonUp> e <xref:System.Windows.UIElement.MouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="3347b-1893">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.UIElement.MouseLeftButtonUp> and <xref:System.Windows.UIElement.MouseRightButtonUp>.</span></span> <span data-ttu-id="3347b-1894">Qualquer um desses eventos pode ser disparado no elemento de recebimento quando <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> é recebida.</span><span class="sxs-lookup"><span data-stu-id="3347b-1894">Either of these events might be raised on the receiving element when <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="3347b-1895">Se você marcar esse evento como manipulado no tratamento de classes, ainda são acionados subevents; No entanto, eles passam o estado manipulado nos dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1895">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="3347b-1896">Se o evento é manipulado na manipulação de classe, os manipuladores de instância para os subevents não são invocados, a menos que use explicitamente <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> com `handledEventsToo` `true` para anexar manipuladores.</span><span class="sxs-lookup"><span data-stu-id="3347b-1896">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="3347b-1897">Manipuladores de classe também não são invocados, a menos que esses manipuladores de classe foram registrados com o <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> assinatura com `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="3347b-1897">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="3347b-1898">Manipulando <xref:System.Windows.UIElement.OnMouseUp%2A>, você está indicando que sua manipulação de classe levados em conta todos os botão do mouse de possíveis ações de.</span><span class="sxs-lookup"><span data-stu-id="3347b-1898">By handling <xref:System.Windows.UIElement.OnMouseUp%2A>, you are implying that your class handling accounted for all possible mouse button up actions.</span></span> <span data-ttu-id="3347b-1899">Esse comportamento pode ser indesejado; Portanto, tenha cuidado ao usar esse método virtual para marcar eventos como manipulados.</span><span class="sxs-lookup"><span data-stu-id="3347b-1899">This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="3347b-1900">Cada um dos eventos diretos específicos do botão também tem uma máquina virtual \* método; Considere se substituir esses manipuladores de classe específica de botão pode ser mais apropriado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1900">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="3347b-1901">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-1901">This method has no default implementation.</span></span> <span data-ttu-id="3347b-1902">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-1902">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="3347b-1903">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="3347b-1903">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="3347b-1904">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1904">In this case the matching event is a routed event.</span></span> <span data-ttu-id="3347b-1905">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="3347b-1905">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="3347b-1906">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1906">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="3347b-1907">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="3347b-1907">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="3347b-1908">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.UIElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1908">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="3347b-1909">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1909">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseWheel">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseWheel (System.Windows.Input.MouseWheelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseWheel(class System.Windows.Input.MouseWheelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseWheel (e As MouseWheelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseWheel(System::Windows::Input::MouseWheelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit&#xA;override this.OnMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit" Usage="uIElement.OnMouseWheel e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseWheelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-1910">O <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1910">The <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-1911">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1911">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="3347b-1912">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1912">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1913">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-1913">This method has no default implementation.</span></span> <span data-ttu-id="3347b-1914">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-1914">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="3347b-1915">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="3347b-1915">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="3347b-1916">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1916">In this case the matching event is a routed event.</span></span> <span data-ttu-id="3347b-1917">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="3347b-1917">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="3347b-1918">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1918">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="3347b-1919">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="3347b-1919">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="3347b-1920">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.UIElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1920">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="3347b-1921">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1921">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseWheel" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewDragEnter : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnPreviewDragEnter : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement.OnPreviewDragEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-1922">O <see cref="T:System.Windows.DragEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1922">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-1923">Invocado quando um evento anexado <see cref="E:System.Windows.DragDrop.PreviewDragEnter" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1923">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDragEnter" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="3347b-1924">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1924">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1925">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-1925">This method has no default implementation.</span></span> <span data-ttu-id="3347b-1926">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-1926">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="3347b-1927">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="3347b-1927">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="3347b-1928">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1928">In this case the matching event is a routed event.</span></span> <span data-ttu-id="3347b-1929">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="3347b-1929">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="3347b-1930">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1930">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="3347b-1931">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="3347b-1931">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="3347b-1932">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.UIElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1932">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="3347b-1933">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1933">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="3347b-1934">Outro cenário é especificamente para eventos de visualização é marcá-los tratado para que os manipuladores de classe de propagação correspondentes não são invocados.</span><span class="sxs-lookup"><span data-stu-id="3347b-1934">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewDragEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewDragLeave (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewDragLeave(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewDragLeave(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewDragLeave (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewDragLeave(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewDragLeave : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnPreviewDragLeave : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement.OnPreviewDragLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-1935">O <see cref="T:System.Windows.DragEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1935">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-1936">Invocado quando um evento anexado <see cref="E:System.Windows.DragDrop.PreviewDragLeave" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1936">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDragLeave" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="3347b-1937">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1937">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1938">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-1938">This method has no default implementation.</span></span> <span data-ttu-id="3347b-1939">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-1939">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="3347b-1940">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="3347b-1940">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="3347b-1941">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1941">In this case the matching event is a routed event.</span></span> <span data-ttu-id="3347b-1942">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="3347b-1942">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="3347b-1943">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1943">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="3347b-1944">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="3347b-1944">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="3347b-1945">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.UIElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1945">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="3347b-1946">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1946">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="3347b-1947">Outro cenário é especificamente para eventos de visualização é marcá-los tratado para que os manipuladores de classe de propagação correspondentes não são invocados.</span><span class="sxs-lookup"><span data-stu-id="3347b-1947">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewDragLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragOver">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewDragOver (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewDragOver(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewDragOver(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewDragOver (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewDragOver(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewDragOver : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnPreviewDragOver : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement.OnPreviewDragOver e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-1948">O <see cref="T:System.Windows.DragEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1948">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-1949">Invocado quando um evento anexado <see cref="E:System.Windows.DragDrop.PreviewDragOver" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1949">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDragOver" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="3347b-1950">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1950">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1951">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-1951">This method has no default implementation.</span></span> <span data-ttu-id="3347b-1952">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-1952">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="3347b-1953">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="3347b-1953">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="3347b-1954">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1954">In this case the matching event is a routed event.</span></span> <span data-ttu-id="3347b-1955">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="3347b-1955">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="3347b-1956">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1956">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="3347b-1957">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="3347b-1957">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="3347b-1958">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.UIElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1958">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="3347b-1959">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1959">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="3347b-1960">Outro cenário é especificamente para eventos de visualização é marcá-los tratado para que os manipuladores de classe de propagação correspondentes não são invocados.</span><span class="sxs-lookup"><span data-stu-id="3347b-1960">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewDragOver" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDrop">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewDrop (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewDrop(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewDrop(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewDrop (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewDrop(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewDrop : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnPreviewDrop : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement.OnPreviewDrop e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-1961">O <see cref="T:System.Windows.DragEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1961">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-1962">Invocado quando um evento anexado <see cref="E:System.Windows.DragDrop.PreviewDrop" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1962">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDrop" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="3347b-1963">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1963">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1964">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-1964">This method has no default implementation.</span></span> <span data-ttu-id="3347b-1965">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-1965">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="3347b-1966">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="3347b-1966">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="3347b-1967">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1967">In this case the matching event is a routed event.</span></span> <span data-ttu-id="3347b-1968">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="3347b-1968">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="3347b-1969">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1969">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="3347b-1970">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="3347b-1970">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="3347b-1971">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.UIElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1971">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="3347b-1972">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1972">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="3347b-1973">Outro cenário é especificamente para eventos de visualização é marcá-los tratado para que os manipuladores de classe de propagação correspondentes não são invocados.</span><span class="sxs-lookup"><span data-stu-id="3347b-1973">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewDrop" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewGiveFeedback">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewGiveFeedback (System.Windows.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewGiveFeedback(class System.Windows.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewGiveFeedback (e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewGiveFeedback(System::Windows::GiveFeedbackEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit&#xA;override this.OnPreviewGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit" Usage="uIElement.OnPreviewGiveFeedback e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-1974">O <see cref="T:System.Windows.GiveFeedbackEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1974">The <see cref="T:System.Windows.GiveFeedbackEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-1975">Invocado quando um evento anexado <see cref="E:System.Windows.DragDrop.PreviewGiveFeedback" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1975">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewGiveFeedback" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="3347b-1976">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1976">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1977">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-1977">This method has no default implementation.</span></span> <span data-ttu-id="3347b-1978">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-1978">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="3347b-1979">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="3347b-1979">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="3347b-1980">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1980">In this case the matching event is a routed event.</span></span> <span data-ttu-id="3347b-1981">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="3347b-1981">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="3347b-1982">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1982">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="3347b-1983">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="3347b-1983">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="3347b-1984">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.UIElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1984">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="3347b-1985">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1985">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="3347b-1986">Outro cenário é especificamente para eventos de visualização é marcá-los tratado para que os manipuladores de classe de propagação correspondentes não são invocados.</span><span class="sxs-lookup"><span data-stu-id="3347b-1986">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewGiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit&#xA;override this.OnPreviewGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="uIElement.OnPreviewGotKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-1987">O <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1987">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-1988">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1988">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="3347b-1989">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-1989">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-1990">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-1990">This method has no default implementation.</span></span> <span data-ttu-id="3347b-1991">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-1991">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="3347b-1992">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="3347b-1992">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="3347b-1993">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1993">In this case the matching event is a routed event.</span></span> <span data-ttu-id="3347b-1994">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="3347b-1994">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="3347b-1995">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1995">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="3347b-1996">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="3347b-1996">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="3347b-1997">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.UIElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-1997">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="3347b-1998">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="3347b-1998">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="3347b-1999">Outro cenário é especificamente para eventos de visualização é marcá-los tratado para que os manipuladores de classe de propagação correspondentes não são invocados.</span><span class="sxs-lookup"><span data-stu-id="3347b-1999">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewGotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewKeyDown">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit&#xA;override this.OnPreviewKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="uIElement.OnPreviewKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-2000">O <see cref="T:System.Windows.Input.KeyEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2000">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-2001">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2001">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="3347b-2002">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2002">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2003">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-2003">This method has no default implementation.</span></span> <span data-ttu-id="3347b-2004">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-2004">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="3347b-2005">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="3347b-2005">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="3347b-2006">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2006">In this case the matching event is a routed event.</span></span> <span data-ttu-id="3347b-2007">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="3347b-2007">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="3347b-2008">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2008">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="3347b-2009">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="3347b-2009">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="3347b-2010">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.UIElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2010">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="3347b-2011">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2011">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="3347b-2012">Outro cenário é especificamente para eventos de visualização é marcá-los tratado para que os manipuladores de classe de propagação correspondentes não são invocados.</span><span class="sxs-lookup"><span data-stu-id="3347b-2012">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewKeyDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewKeyUp">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit&#xA;override this.OnPreviewKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="uIElement.OnPreviewKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-2013">O <see cref="T:System.Windows.Input.KeyEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2013">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-2014">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2014">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="3347b-2015">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2015">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2016">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-2016">This method has no default implementation.</span></span> <span data-ttu-id="3347b-2017">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-2017">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="3347b-2018">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="3347b-2018">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="3347b-2019">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2019">In this case the matching event is a routed event.</span></span> <span data-ttu-id="3347b-2020">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="3347b-2020">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="3347b-2021">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2021">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="3347b-2022">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="3347b-2022">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="3347b-2023">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.UIElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2023">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="3347b-2024">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2024">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="3347b-2025">Outro cenário é especificamente para eventos de visualização é marcá-los tratado para que os manipuladores de classe de propagação correspondentes não são invocados.</span><span class="sxs-lookup"><span data-stu-id="3347b-2025">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewKeyUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewLostKeyboardFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewLostKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewLostKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewLostKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit&#xA;override this.OnPreviewLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="uIElement.OnPreviewLostKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-2026">O <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2026">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-2027">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2027">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="3347b-2028">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2028">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2029">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-2029">This method has no default implementation.</span></span> <span data-ttu-id="3347b-2030">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-2030">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="3347b-2031">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="3347b-2031">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="3347b-2032">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2032">In this case the matching event is a routed event.</span></span> <span data-ttu-id="3347b-2033">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="3347b-2033">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="3347b-2034">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2034">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="3347b-2035">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="3347b-2035">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="3347b-2036">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.UIElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2036">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="3347b-2037">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2037">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="3347b-2038">Outro cenário é especificamente para eventos de visualização é marcá-los tratado para que os manipuladores de classe de propagação correspondentes não são invocados.</span><span class="sxs-lookup"><span data-stu-id="3347b-2038">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewLostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseDown">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement.OnPreviewMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-2039">O <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2039">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="3347b-2040">Os dados de evento relatam que um ou mais botões do mouse foram pressionados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2040">The event data reports that one or more mouse buttons were pressed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-2041">Invocado quando um evento roteado anexado <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2041">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> attached routed event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="3347b-2042">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2042">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2043">Ações de botão do mouse também são manipuladas por um gerente de entrada dedicado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2043">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="3347b-2044">Outros recursos de programação que dependem de ações de botão do mouse, como entrada e associações de comando, poderão invocar manipuladores para a ação antes que ele é exposto como uma ação do botão do mouse geral.</span><span class="sxs-lookup"><span data-stu-id="3347b-2044">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="3347b-2045">Se esses marca de recursos do sistema de entrada a <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> evento como manipulado, <xref:System.Windows.UIElement.OnPreviewMouseDown%2A> não é invocado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2045">If these input system features mark the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event as handled, <xref:System.Windows.UIElement.OnPreviewMouseDown%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="3347b-2046">Se você usar esse manipulador de classe para marcar o evento como manipulado, você potencialmente afeta os seguintes eventos: <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> e <xref:System.Windows.UIElement.PreviewMouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2046">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> and <xref:System.Windows.UIElement.PreviewMouseRightButtonDown>.</span></span> <span data-ttu-id="3347b-2047">Qualquer um desses eventos podem ser gerado no elemento de recebimento quando <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> é recebida.</span><span class="sxs-lookup"><span data-stu-id="3347b-2047">Either of these events may be raised on the receiving element when <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="3347b-2048">Se você marcar esse evento como manipulado no tratamento de classes, ainda são acionados subevents; No entanto, eles passam o estado manipulado nos dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2048">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="3347b-2049">Se o evento é manipulado na manipulação de classe, os manipuladores de instância para os subevents não são invocados, a menos que use explicitamente <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> com `handledEventsToo` `true` para anexar manipuladores.</span><span class="sxs-lookup"><span data-stu-id="3347b-2049">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="3347b-2050">Manipuladores de classe também não são invocados, a menos que esses manipuladores de classe foram registrados com o <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> assinatura com `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="3347b-2050">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="3347b-2051">Manipulando <xref:System.Windows.UIElement.OnPreviewMouseDown%2A>, você está indicando que sua manipulação de classe levados em conta todos os botão do mouse possíveis velocidade das ações de.</span><span class="sxs-lookup"><span data-stu-id="3347b-2051">By handling <xref:System.Windows.UIElement.OnPreviewMouseDown%2A>, you are implying that your class handling accounted for all possible mouse button down actions.</span></span> <span data-ttu-id="3347b-2052">Esse comportamento pode ser indesejado; Portanto, tenha cuidado ao usar esse método virtual para marcar eventos como manipulados.</span><span class="sxs-lookup"><span data-stu-id="3347b-2052">This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="3347b-2053">Cada um dos eventos diretos específicos do botão também tem uma máquina virtual \* método; Considere se substituir esses manipuladores de classe específica de botão pode ser mais apropriado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2053">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="3347b-2054">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-2054">This method has no default implementation.</span></span> <span data-ttu-id="3347b-2055">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-2055">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="3347b-2056">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="3347b-2056">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="3347b-2057">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2057">In this case the matching event is a routed event.</span></span> <span data-ttu-id="3347b-2058">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="3347b-2058">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="3347b-2059">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2059">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="3347b-2060">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="3347b-2060">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="3347b-2061">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.UIElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2061">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="3347b-2062">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2062">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="3347b-2063">Outro cenário é especificamente para eventos de visualização é marcá-los tratado para que os manipuladores de classe de propagação correspondentes não são invocados.</span><span class="sxs-lookup"><span data-stu-id="3347b-2063">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement.OnPreviewMouseLeftButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-2064">O <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2064">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="3347b-2065">Os dados do evento relatam que o botão esquerdo do mouse foi pressionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2065">The event data reports that the left mouse button was pressed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-2066">Invocado quando um evento roteado <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2066">Invoked when an unhandled <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" /> routed event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="3347b-2067">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2067">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2068">O <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> evento parece uma rota de túnel de viagem, mas, na verdade, viaja de forma indireta.</span><span class="sxs-lookup"><span data-stu-id="3347b-2068">The <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="3347b-2069"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> é o evento subjacente que é roteado de túnel e cada <xref:System.Windows.UIElement> ao longo do evento rota usa o tratamento de idêntico para gerar o evento roteado direto <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2069"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown>.</span></span> <span data-ttu-id="3347b-2070">Embora você pode marcar o <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> evento como manipulado para fins desse elemento, o estado manipulado não perpetuada a outros elementos ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2070">Although you can mark the <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="3347b-2071">No entanto, você talvez queira marcar o evento como manipulado para evitar que os manipuladores de instância geral (aquelas que não especificou `handledEventsToo`) seja chamado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2071">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="3347b-2072">A implementação padrão para mouse geral tratamento de eventos em <xref:System.Windows.UIElement> escuta <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> e o converte em um evento local apropriado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2072">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="3347b-2073">Se você quiser substituir essa lógica, você deve criar uma classe derivada.</span><span class="sxs-lookup"><span data-stu-id="3347b-2073">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="3347b-2074">No construtor estático da classe derivada, registra um manipulador de classe alternativo para <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2074">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3347b-2075">Não é possível alterar o comportamento de manipulação de mouse <xref:System.Windows.UIElement> substituindo <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2075">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="3347b-2076">Como alternativa, você pode substituir esse método para alterar a manipulação de eventos para um estado específico de mouse.</span><span class="sxs-lookup"><span data-stu-id="3347b-2076">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="3347b-2077">Se você optar por chamar a implementação base depende do seu cenário.</span><span class="sxs-lookup"><span data-stu-id="3347b-2077">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="3347b-2078">Falha ao chamar base desabilita a manipulação de entrada padrão para o evento do mouse em classes de ancestral que também pretende invocar <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2078">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A>.</span></span> <span data-ttu-id="3347b-2079">Por exemplo, você pode derivar de <xref:System.Windows.Controls.Button> e substituir <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A> em sua classe derivada sem chamar a implementação base; no entanto, isso substituir desabilita o <xref:System.Windows.Controls.Primitives.ButtonBase.Click> eventos.</span><span class="sxs-lookup"><span data-stu-id="3347b-2079">For example, you can derive from <xref:System.Windows.Controls.Button> and override <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A> in your derived class without calling the base implementation; however, this override disables the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement.OnPreviewMouseLeftButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-2080">O <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2080">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="3347b-2081">Os dados do evento relatam que o botão esquerdo foi liberado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2081">The event data reports that the left mouse button was released.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-2082">Invocado quando um evento roteado <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2082">Invoked when an unhandled <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" /> routed event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="3347b-2083">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2083">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2084">O <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> evento parece uma rota de túnel de viagem, mas, na verdade, viaja de forma indireta.</span><span class="sxs-lookup"><span data-stu-id="3347b-2084">The <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="3347b-2085"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> é o evento subjacente que é roteado de túnel e cada <xref:System.Windows.UIElement> ao longo do evento rota usa o tratamento de idêntico para gerar o evento roteado direto <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2085"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp>.</span></span> <span data-ttu-id="3347b-2086">Embora você pode marcar o <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> evento como manipulado para fins desse elemento, o estado manipulado não perpetuada a outros elementos ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2086">Although you can mark the <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="3347b-2087">No entanto, você talvez queira marcar o evento como manipulado para evitar que os manipuladores de instância geral (aquelas que não especificou `handledEventsToo`) seja chamado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2087">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="3347b-2088">A implementação padrão para mouse geral tratamento de eventos em <xref:System.Windows.UIElement> escuta <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> e o converte em um evento local apropriado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2088">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="3347b-2089">Se você quiser substituir essa lógica, você deve criar uma classe derivada.</span><span class="sxs-lookup"><span data-stu-id="3347b-2089">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="3347b-2090">No construtor estático da classe derivada, registra um manipulador de classe alternativo para <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2090">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3347b-2091">Não é possível alterar o comportamento de manipulação de mouse <xref:System.Windows.UIElement> substituindo <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2091">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseMove">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnPreviewMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="uIElement.OnPreviewMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-2092">O <see cref="T:System.Windows.Input.MouseEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2092">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-2093">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2093">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="3347b-2094">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2094">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2095">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-2095">This method has no default implementation.</span></span> <span data-ttu-id="3347b-2096">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-2096">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="3347b-2097">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="3347b-2097">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="3347b-2098">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2098">In this case the matching event is a routed event.</span></span> <span data-ttu-id="3347b-2099">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="3347b-2099">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="3347b-2100">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2100">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="3347b-2101">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="3347b-2101">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="3347b-2102">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.UIElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2102">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="3347b-2103">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2103">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="3347b-2104">Outro cenário é especificamente para eventos de visualização é marcá-los tratado para que os manipuladores de classe de propagação correspondentes não são invocados.</span><span class="sxs-lookup"><span data-stu-id="3347b-2104">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseRightButtonDown">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseRightButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseRightButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseRightButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement.OnPreviewMouseRightButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-2105">O <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2105">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="3347b-2106">Os dados do evento relatam que o botão direito do mouse foi pressionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2106">The event data reports that the right mouse button was pressed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-2107">Invocado quando um evento roteado <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonDown" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2107">Invoked when an unhandled <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonDown" /> routed event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="3347b-2108">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2108">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2109">O <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> evento parece uma rota de túnel de viagem, mas, na verdade, viaja de forma indireta.</span><span class="sxs-lookup"><span data-stu-id="3347b-2109">The <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="3347b-2110"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> é o evento subjacente que é roteado de túnel e cada <xref:System.Windows.UIElement> ao longo do evento rota usa o tratamento de idêntico para gerar o evento roteado direto <xref:System.Windows.UIElement.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2110"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.MouseRightButtonDown>.</span></span> <span data-ttu-id="3347b-2111">Embora você pode marcar o <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> evento como manipulado para fins desse elemento, o estado manipulado não perpetuada a outros elementos ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2111">Although you can mark the <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="3347b-2112">No entanto, você talvez queira marcar o evento como manipulado para evitar que os manipuladores de instância geral (aquelas que não especificou `handledEventsToo`) seja chamado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2112">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="3347b-2113">A implementação padrão para mouse geral tratamento de eventos em <xref:System.Windows.UIElement> escuta <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> e o converte em um evento local apropriado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2113">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="3347b-2114">Se você quiser substituir essa lógica, você deve criar uma classe derivada.</span><span class="sxs-lookup"><span data-stu-id="3347b-2114">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="3347b-2115">No construtor estático da classe derivada, registra um manipulador de classe alternativo para <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2115">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3347b-2116">Não é possível alterar o comportamento de manipulação de mouse <xref:System.Windows.UIElement> substituindo <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2116">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="3347b-2117">Como alternativa, você pode substituir esse método para alterar a manipulação de eventos para um estado específico de mouse.</span><span class="sxs-lookup"><span data-stu-id="3347b-2117">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="3347b-2118">Se você optar por chamar a implementação base depende do seu cenário.</span><span class="sxs-lookup"><span data-stu-id="3347b-2118">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="3347b-2119">Falha ao chamar base desabilita a manipulação de entrada padrão para o evento do mouse em classes de ancestral que também pretende invocar <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2119">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A>.</span></span> <span data-ttu-id="3347b-2120">Por exemplo, você pode derivar de <xref:System.Windows.Controls.Control> e substituir <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A> em sua classe derivada sem base chamada; no entanto, essa substituição desativa os serviços de menu de contexto em seu controle, que fazem parte do <xref:System.Windows.Controls.Control> comportamento padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-2120">For example, you can derive from <xref:System.Windows.Controls.Control> and override <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A> in your derived class without calling base; however, this override disables the context menu services on your control, which are part of the <xref:System.Windows.Controls.Control> default behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseRightButtonUp">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseRightButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseRightButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseRightButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement.OnPreviewMouseRightButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-2121">O <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2121">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="3347b-2122">Os dados do evento relatam que o botão direito do mouse foi liberado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2122">The event data reports that the right mouse button was released.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-2123">Invocado quando um evento roteado <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2123">Invoked when an unhandled <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp" /> routed event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="3347b-2124">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2124">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2125">O <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> evento parece uma rota de túnel de viagem, mas, na verdade, viaja de forma indireta.</span><span class="sxs-lookup"><span data-stu-id="3347b-2125">The <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="3347b-2126"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> é o evento subjacente que é roteado de túnel e cada <xref:System.Windows.UIElement> ao longo do evento rota usa o tratamento de idêntico para gerar o evento roteado direto <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2126"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>.</span></span> <span data-ttu-id="3347b-2127">Embora você pode marcar o <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> evento como manipulado para fins desse elemento, o estado manipulado não perpetuada a outros elementos ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2127">Although you can mark the <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="3347b-2128">No entanto, você talvez queira marcar o evento como manipulado para evitar que os manipuladores de instância geral (aquelas que não especificou `handledEventsToo`) seja chamado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2128">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="3347b-2129">A implementação padrão para mouse geral tratamento de eventos em <xref:System.Windows.UIElement> escuta <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> e o converte em um evento local apropriado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2129">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="3347b-2130">Se você quiser substituir essa lógica, você deve criar uma classe derivada.</span><span class="sxs-lookup"><span data-stu-id="3347b-2130">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="3347b-2131">No construtor estático da classe derivada, registra um manipulador de classe alternativo para <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2131">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3347b-2132">Não é possível alterar o comportamento de manipulação de mouse <xref:System.Windows.UIElement> substituindo <xref:System.Windows.UIElement.OnPreviewMouseRightButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2132">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnPreviewMouseRightButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseUp">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement.OnPreviewMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-2133">O <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2133">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="3347b-2134">Os dados de evento informam que um ou mais botões do mouse foram soltos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2134">The event data reports that one or more mouse buttons were released.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-2135">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2135">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="3347b-2136">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2136">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2137">Ações de botão do mouse também são manipuladas por um gerente de entrada dedicado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2137">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="3347b-2138">Outros recursos de programação que dependem de ações de botão do mouse, como entrada e associações de comando, poderão invocar manipuladores para a ação antes que ele é exposto como uma ação do botão do mouse geral.</span><span class="sxs-lookup"><span data-stu-id="3347b-2138">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="3347b-2139">Se esses marca de recursos do sistema de entrada a <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> evento como manipulado, <xref:System.Windows.UIElement.OnPreviewMouseUp%2A> não é invocado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2139">If these input system features mark the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event as handled, <xref:System.Windows.UIElement.OnPreviewMouseUp%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="3347b-2140">Se você usar esse manipulador de classe para marcar o evento como manipulado, você potencialmente afeta os seguintes eventos: <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> e <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2140">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> and <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>.</span></span> <span data-ttu-id="3347b-2141">Qualquer um desses eventos pode ser disparado no elemento de recebimento quando <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> é recebida.</span><span class="sxs-lookup"><span data-stu-id="3347b-2141">Either of these events might be raised on the receiving element when <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="3347b-2142">Se você marcar esse evento como manipulado no tratamento de classes, ainda são acionados subevents; No entanto, eles passam o estado manipulado nos dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2142">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="3347b-2143">Se o evento é manipulado na manipulação de classe, os manipuladores de instância para os subevents não são invocados, a menos que use explicitamente <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> com `handledEventsToo` `true` para anexar manipuladores.</span><span class="sxs-lookup"><span data-stu-id="3347b-2143">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="3347b-2144">Manipuladores de classe também não são invocados, a menos que esses manipuladores de classe foram registrados com o <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> assinatura com `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="3347b-2144">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="3347b-2145">Manipulando <xref:System.Windows.UIElement.OnPreviewMouseUp%2A>, você está indicando que sua manipulação de classe levados em conta todos os botão do mouse de possíveis ações de.</span><span class="sxs-lookup"><span data-stu-id="3347b-2145">By handling <xref:System.Windows.UIElement.OnPreviewMouseUp%2A>, you are implying that your class handling accounted for all possible mouse button up actions.</span></span> <span data-ttu-id="3347b-2146">Esse comportamento pode ser indesejado; Portanto, tenha cuidado ao usar esse método virtual para marcar eventos como manipulados.</span><span class="sxs-lookup"><span data-stu-id="3347b-2146">This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="3347b-2147">Cada um dos eventos diretos específicos do botão também tem uma máquina virtual \* método; Considere se substituir esses manipuladores de classe específica de botão pode ser mais apropriado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2147">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="3347b-2148">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-2148">This method has no default implementation.</span></span> <span data-ttu-id="3347b-2149">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-2149">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="3347b-2150">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="3347b-2150">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="3347b-2151">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2151">In this case the matching event is a routed event.</span></span> <span data-ttu-id="3347b-2152">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="3347b-2152">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="3347b-2153">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2153">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="3347b-2154">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="3347b-2154">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="3347b-2155">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.UIElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2155">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="3347b-2156">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2156">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseWheel">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseWheel (System.Windows.Input.MouseWheelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseWheel(class System.Windows.Input.MouseWheelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseWheel (e As MouseWheelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseWheel(System::Windows::Input::MouseWheelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit&#xA;override this.OnPreviewMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit" Usage="uIElement.OnPreviewMouseWheel e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseWheelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-2157">O <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2157">The <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-2158">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2158">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="3347b-2159">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2159">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2160">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-2160">This method has no default implementation.</span></span> <span data-ttu-id="3347b-2161">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-2161">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="3347b-2162">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="3347b-2162">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="3347b-2163">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2163">In this case the matching event is a routed event.</span></span> <span data-ttu-id="3347b-2164">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="3347b-2164">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="3347b-2165">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2165">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="3347b-2166">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="3347b-2166">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="3347b-2167">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.UIElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2167">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="3347b-2168">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2168">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="3347b-2169">Outro cenário é especificamente para eventos de visualização é marcá-los tratado para que os manipuladores de classe de propagação correspondentes não são invocados.</span><span class="sxs-lookup"><span data-stu-id="3347b-2169">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseWheel" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewQueryContinueDrag (System.Windows.QueryContinueDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewQueryContinueDrag(class System.Windows.QueryContinueDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewQueryContinueDrag (e As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewQueryContinueDrag(System::Windows::QueryContinueDragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit&#xA;override this.OnPreviewQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit" Usage="uIElement.OnPreviewQueryContinueDrag e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-2170">O <see cref="T:System.Windows.QueryContinueDragEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2170">The <see cref="T:System.Windows.QueryContinueDragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-2171">Invocado quando um evento anexado <see cref="E:System.Windows.DragDrop.PreviewQueryContinueDrag" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2171">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewQueryContinueDrag" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="3347b-2172">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2172">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2173">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-2173">This method has no default implementation.</span></span> <span data-ttu-id="3347b-2174">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-2174">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="3347b-2175">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="3347b-2175">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="3347b-2176">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2176">In this case the matching event is a routed event.</span></span> <span data-ttu-id="3347b-2177">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="3347b-2177">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="3347b-2178">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2178">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="3347b-2179">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="3347b-2179">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="3347b-2180">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.UIElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2180">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="3347b-2181">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2181">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="3347b-2182">Outro cenário é especificamente para eventos de visualização é marcá-los tratado para que os manipuladores de classe de propagação correspondentes não são invocados.</span><span class="sxs-lookup"><span data-stu-id="3347b-2182">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewQueryContinueDrag" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusButtonDown">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusButtonDown (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusButtonDown(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusButtonDown (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusButtonDown(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusButtonDown : System.Windows.Input.StylusButtonEventArgs -&gt; unit&#xA;override this.OnPreviewStylusButtonDown : System.Windows.Input.StylusButtonEventArgs -&gt; unit" Usage="uIElement.OnPreviewStylusButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-2183">O <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2183">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-2184">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2184">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="3347b-2185">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2185">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2186">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-2186">This method has no default implementation.</span></span> <span data-ttu-id="3347b-2187">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-2187">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="3347b-2188">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="3347b-2188">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="3347b-2189">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2189">In this case the matching event is a routed event.</span></span> <span data-ttu-id="3347b-2190">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="3347b-2190">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="3347b-2191">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2191">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="3347b-2192">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="3347b-2192">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="3347b-2193">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.UIElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2193">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="3347b-2194">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2194">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="3347b-2195">Outro cenário é especificamente para eventos de visualização é marcá-los tratado para que os manipuladores de classe de propagação correspondentes não são invocados.</span><span class="sxs-lookup"><span data-stu-id="3347b-2195">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusButtonUp">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusButtonUp (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusButtonUp(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusButtonUp (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusButtonUp(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusButtonUp : System.Windows.Input.StylusButtonEventArgs -&gt; unit&#xA;override this.OnPreviewStylusButtonUp : System.Windows.Input.StylusButtonEventArgs -&gt; unit" Usage="uIElement.OnPreviewStylusButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-2196">O <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2196">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-2197">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2197">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="3347b-2198">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2198">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2199">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-2199">This method has no default implementation.</span></span> <span data-ttu-id="3347b-2200">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-2200">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="3347b-2201">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="3347b-2201">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="3347b-2202">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2202">In this case the matching event is a routed event.</span></span> <span data-ttu-id="3347b-2203">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="3347b-2203">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="3347b-2204">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2204">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="3347b-2205">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="3347b-2205">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="3347b-2206">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.UIElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2206">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="3347b-2207">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2207">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="3347b-2208">Outro cenário é especificamente para eventos de visualização é marcá-los tratado para que os manipuladores de classe de propagação correspondentes não são invocados.</span><span class="sxs-lookup"><span data-stu-id="3347b-2208">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusDown">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusDown (System.Windows.Input.StylusDownEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusDown(class System.Windows.Input.StylusDownEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusDown (e As StylusDownEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusDown(System::Windows::Input::StylusDownEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusDown : System.Windows.Input.StylusDownEventArgs -&gt; unit&#xA;override this.OnPreviewStylusDown : System.Windows.Input.StylusDownEventArgs -&gt; unit" Usage="uIElement.OnPreviewStylusDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusDownEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-2209">O <see cref="T:System.Windows.Input.StylusDownEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2209">The <see cref="T:System.Windows.Input.StylusDownEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-2210">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2210">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="3347b-2211">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2211">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2212">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-2212">This method has no default implementation.</span></span> <span data-ttu-id="3347b-2213">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-2213">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="3347b-2214">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="3347b-2214">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="3347b-2215">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2215">In this case the matching event is a routed event.</span></span> <span data-ttu-id="3347b-2216">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="3347b-2216">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="3347b-2217">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2217">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="3347b-2218">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="3347b-2218">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="3347b-2219">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.UIElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2219">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="3347b-2220">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2220">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="3347b-2221">Outro cenário é especificamente para eventos de visualização é marcá-los tratado para que os manipuladores de classe de propagação correspondentes não são invocados.</span><span class="sxs-lookup"><span data-stu-id="3347b-2221">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusInAirMove">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusInAirMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusInAirMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusInAirMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusInAirMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusInAirMove : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusInAirMove : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnPreviewStylusInAirMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-2222">O <see cref="T:System.Windows.Input.StylusEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2222">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-2223">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2223">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="3347b-2224">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2224">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2225">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-2225">This method has no default implementation.</span></span> <span data-ttu-id="3347b-2226">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-2226">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="3347b-2227">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="3347b-2227">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="3347b-2228">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2228">In this case the matching event is a routed event.</span></span> <span data-ttu-id="3347b-2229">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="3347b-2229">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="3347b-2230">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2230">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="3347b-2231">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="3347b-2231">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="3347b-2232">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.UIElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2232">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="3347b-2233">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2233">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="3347b-2234">Outro cenário é especificamente para eventos de visualização é marcá-los tratado para que os manipuladores de classe de propagação correspondentes não são invocados.</span><span class="sxs-lookup"><span data-stu-id="3347b-2234">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusInAirMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusInRange">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusInRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusInRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusInRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusInRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusInRange : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusInRange : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnPreviewStylusInRange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-2235">O <see cref="T:System.Windows.Input.StylusEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2235">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-2236">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2236">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="3347b-2237">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2237">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2238">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-2238">This method has no default implementation.</span></span> <span data-ttu-id="3347b-2239">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-2239">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="3347b-2240">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="3347b-2240">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="3347b-2241">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2241">In this case the matching event is a routed event.</span></span> <span data-ttu-id="3347b-2242">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="3347b-2242">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="3347b-2243">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2243">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="3347b-2244">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="3347b-2244">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="3347b-2245">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.UIElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2245">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="3347b-2246">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2246">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="3347b-2247">Outro cenário é especificamente para eventos de visualização é marcá-los tratado para que os manipuladores de classe de propagação correspondentes não são invocados.</span><span class="sxs-lookup"><span data-stu-id="3347b-2247">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusInRange" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusMove">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusMove : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusMove : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnPreviewStylusMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-2248">O <see cref="T:System.Windows.Input.StylusEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2248">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-2249">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2249">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="3347b-2250">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2250">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2251">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-2251">This method has no default implementation.</span></span> <span data-ttu-id="3347b-2252">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-2252">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="3347b-2253">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="3347b-2253">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="3347b-2254">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2254">In this case the matching event is a routed event.</span></span> <span data-ttu-id="3347b-2255">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="3347b-2255">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="3347b-2256">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2256">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="3347b-2257">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="3347b-2257">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="3347b-2258">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.UIElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2258">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="3347b-2259">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2259">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="3347b-2260">Outro cenário é especificamente para eventos de visualização é marcá-los tratado para que os manipuladores de classe de propagação correspondentes não são invocados.</span><span class="sxs-lookup"><span data-stu-id="3347b-2260">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusOutOfRange">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusOutOfRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusOutOfRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusOutOfRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusOutOfRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusOutOfRange : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusOutOfRange : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnPreviewStylusOutOfRange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-2261">O <see cref="T:System.Windows.Input.StylusEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2261">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-2262">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2262">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="3347b-2263">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2263">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2264">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-2264">This method has no default implementation.</span></span> <span data-ttu-id="3347b-2265">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-2265">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="3347b-2266">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="3347b-2266">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="3347b-2267">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2267">In this case the matching event is a routed event.</span></span> <span data-ttu-id="3347b-2268">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="3347b-2268">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="3347b-2269">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2269">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="3347b-2270">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="3347b-2270">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="3347b-2271">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.UIElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2271">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="3347b-2272">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2272">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="3347b-2273">Outro cenário é especificamente para eventos de visualização é marcá-los tratado para que os manipuladores de classe de propagação correspondentes não são invocados.</span><span class="sxs-lookup"><span data-stu-id="3347b-2273">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusOutOfRange" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusSystemGesture">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusSystemGesture (System.Windows.Input.StylusSystemGestureEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusSystemGesture(class System.Windows.Input.StylusSystemGestureEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusSystemGesture (e As StylusSystemGestureEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusSystemGesture(System::Windows::Input::StylusSystemGestureEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventArgs -&gt; unit&#xA;override this.OnPreviewStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventArgs -&gt; unit" Usage="uIElement.OnPreviewStylusSystemGesture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusSystemGestureEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-2274">O <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2274">The <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-2275">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2275">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="3347b-2276">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2276">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2277">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-2277">This method has no default implementation.</span></span> <span data-ttu-id="3347b-2278">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-2278">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="3347b-2279">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="3347b-2279">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="3347b-2280">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2280">In this case the matching event is a routed event.</span></span> <span data-ttu-id="3347b-2281">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="3347b-2281">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="3347b-2282">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2282">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="3347b-2283">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="3347b-2283">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="3347b-2284">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.UIElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2284">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="3347b-2285">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2285">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="3347b-2286">Outro cenário é especificamente para eventos de visualização é marcá-los tratado para que os manipuladores de classe de propagação correspondentes não são invocados.</span><span class="sxs-lookup"><span data-stu-id="3347b-2286">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusSystemGesture" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusUp">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusUp (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusUp(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusUp (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusUp(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusUp : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusUp : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnPreviewStylusUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-2287">O <see cref="T:System.Windows.Input.StylusEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2287">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-2288">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2288">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="3347b-2289">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2289">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2290">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-2290">This method has no default implementation.</span></span> <span data-ttu-id="3347b-2291">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-2291">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="3347b-2292">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="3347b-2292">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="3347b-2293">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2293">In this case the matching event is a routed event.</span></span> <span data-ttu-id="3347b-2294">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="3347b-2294">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="3347b-2295">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2295">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="3347b-2296">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="3347b-2296">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="3347b-2297">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.UIElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2297">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="3347b-2298">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2298">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="3347b-2299">Outro cenário é especificamente para eventos de visualização é marcá-los tratado para que os manipuladores de classe de propagação correspondentes não são invocados.</span><span class="sxs-lookup"><span data-stu-id="3347b-2299">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTextInput">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewTextInput (e As TextCompositionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewTextInput(System::Windows::Input::TextCompositionEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit&#xA;override this.OnPreviewTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit" Usage="uIElement.OnPreviewTextInput e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-2300">O <see cref="T:System.Windows.Input.TextCompositionEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2300">The <see cref="T:System.Windows.Input.TextCompositionEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-2301">Invocado quando um evento anexado <see cref="E:System.Windows.Input.TextCompositionManager.PreviewTextInput" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2301">Invoked when an unhandled <see cref="E:System.Windows.Input.TextCompositionManager.PreviewTextInput" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="3347b-2302">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2302">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2303">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-2303">This method has no default implementation.</span></span> <span data-ttu-id="3347b-2304">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-2304">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="3347b-2305">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="3347b-2305">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="3347b-2306">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2306">In this case the matching event is a routed event.</span></span> <span data-ttu-id="3347b-2307">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="3347b-2307">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="3347b-2308">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2308">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="3347b-2309">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="3347b-2309">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="3347b-2310">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.UIElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2310">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="3347b-2311">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2311">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="3347b-2312">Outro cenário é especificamente para eventos de visualização é marcá-los tratado para que os manipuladores de classe de propagação correspondentes não são invocados.</span><span class="sxs-lookup"><span data-stu-id="3347b-2312">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" />
        <altmember cref="E:System.Windows.UIElement.PreviewTextInput" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchDown">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewTouchDown (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewTouchDown(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewTouchDown (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewTouchDown(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewTouchDown : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnPreviewTouchDown : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement.OnPreviewTouchDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-2313">Um <see cref="T:System.Windows.Input.TouchEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2313">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-2314">Fornece tratamento de classes para os eventos roteados <see cref="E:System.Windows.UIElement.PreviewTouchDown" /> que ocorrem quando um toque pressiona esse elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2314">Provides class handling for the <see cref="E:System.Windows.UIElement.PreviewTouchDown" /> routed event that occurs when a touch presses this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2315">O <xref:System.Windows.UIElement.OnPreviewTouchDown%2A> método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-2315">The <xref:System.Windows.UIElement.OnPreviewTouchDown%2A> method has no default implementation.</span></span> <span data-ttu-id="3347b-2316">Substituir <xref:System.Windows.UIElement.OnPreviewTouchDown%2A> em uma classe derivada para manipular o <xref:System.Windows.UIElement.PreviewTouchDown> eventos.</span><span class="sxs-lookup"><span data-stu-id="3347b-2316">Override <xref:System.Windows.UIElement.OnPreviewTouchDown%2A> in a derived class to handle the <xref:System.Windows.UIElement.PreviewTouchDown> event.</span></span> <span data-ttu-id="3347b-2317">Certifique-se de chamar a classe base <xref:System.Windows.UIElement.OnPreviewTouchDown%2A> , de modo que classes base receber o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2317">Be sure to call the base class' <xref:System.Windows.UIElement.OnPreviewTouchDown%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchMove">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewTouchMove (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewTouchMove(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewTouchMove (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewTouchMove(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewTouchMove : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnPreviewTouchMove : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement.OnPreviewTouchMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-2318">Um <see cref="T:System.Windows.Input.TouchEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2318">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-2319">Fornece manipulação de classes para o evento roteado <see cref="E:System.Windows.UIElement.PreviewTouchMove" /> que ocorre quando há uma movimentação de toque nesse elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2319">Provides class handling for the <see cref="E:System.Windows.UIElement.PreviewTouchMove" /> routed event that occurs when a touch moves while inside this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2320">O <xref:System.Windows.UIElement.OnPreviewTouchMove%2A> método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-2320">The <xref:System.Windows.UIElement.OnPreviewTouchMove%2A> method has no default implementation.</span></span> <span data-ttu-id="3347b-2321">Substituir <xref:System.Windows.UIElement.OnPreviewTouchMove%2A> em uma classe derivada para manipular o <xref:System.Windows.UIElement.PreviewTouchMove> eventos.</span><span class="sxs-lookup"><span data-stu-id="3347b-2321">Override <xref:System.Windows.UIElement.OnPreviewTouchMove%2A> in a derived class to handle the <xref:System.Windows.UIElement.PreviewTouchMove> event.</span></span> <span data-ttu-id="3347b-2322">Certifique-se de chamar a classe base <xref:System.Windows.UIElement.OnPreviewTouchMove%2A> , de modo que classes base receber o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2322">Be sure to call the base class' <xref:System.Windows.UIElement.OnPreviewTouchMove%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchUp">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewTouchUp (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewTouchUp(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewTouchUp (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewTouchUp(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewTouchUp : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnPreviewTouchUp : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement.OnPreviewTouchUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-2323">Um <see cref="T:System.Windows.Input.TouchEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2323">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-2324">Fornece tratamento de classe para os eventos roteados <see cref="E:System.Windows.UIElement.PreviewTouchUp" /> que ocorrem quando um toque é liberado dentro desse elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2324">Provides class handling for the <see cref="E:System.Windows.UIElement.PreviewTouchUp" /> routed event that occurs when a touch is released inside this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2325">O <xref:System.Windows.UIElement.OnPreviewTouchUp%2A> método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-2325">The <xref:System.Windows.UIElement.OnPreviewTouchUp%2A> method has no default implementation.</span></span> <span data-ttu-id="3347b-2326">Substituir <xref:System.Windows.UIElement.OnPreviewTouchUp%2A> em uma classe derivada para manipular o <xref:System.Windows.UIElement.PreviewTouchUp> eventos.</span><span class="sxs-lookup"><span data-stu-id="3347b-2326">Override <xref:System.Windows.UIElement.OnPreviewTouchUp%2A> in a derived class to handle the <xref:System.Windows.UIElement.PreviewTouchUp> event.</span></span> <span data-ttu-id="3347b-2327">Certifique-se de chamar a classe base <xref:System.Windows.UIElement.OnPreviewTouchUp%2A> , de modo que classes base receber o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2327">Be sure to call the base class' <xref:System.Windows.UIElement.OnPreviewTouchUp%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected virtual void OnQueryContinueDrag (System.Windows.QueryContinueDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnQueryContinueDrag(class System.Windows.QueryContinueDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnQueryContinueDrag (e As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnQueryContinueDrag(System::Windows::QueryContinueDragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit&#xA;override this.OnQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit" Usage="uIElement.OnQueryContinueDrag e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-2328">O <see cref="T:System.Windows.QueryContinueDragEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2328">The <see cref="T:System.Windows.QueryContinueDragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-2329">Invocado quando um evento anexado <see cref="E:System.Windows.DragDrop.QueryContinueDrag" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2329">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.QueryContinueDrag" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="3347b-2330">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2330">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2331">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-2331">This method has no default implementation.</span></span> <span data-ttu-id="3347b-2332">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-2332">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="3347b-2333">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="3347b-2333">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="3347b-2334">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2334">In this case the matching event is a routed event.</span></span> <span data-ttu-id="3347b-2335">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="3347b-2335">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="3347b-2336">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2336">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="3347b-2337">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="3347b-2337">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="3347b-2338">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.UIElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2338">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="3347b-2339">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2339">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.QueryContinueDrag" />
      </Docs>
    </Member>
    <Member MemberName="OnQueryCursor">
      <MemberSignature Language="C#" Value="protected virtual void OnQueryCursor (System.Windows.Input.QueryCursorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnQueryCursor(class System.Windows.Input.QueryCursorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnQueryCursor (e As QueryCursorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnQueryCursor(System::Windows::Input::QueryCursorEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnQueryCursor : System.Windows.Input.QueryCursorEventArgs -&gt; unit&#xA;override this.OnQueryCursor : System.Windows.Input.QueryCursorEventArgs -&gt; unit" Usage="uIElement.OnQueryCursor e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.QueryCursorEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-2340">O <see cref="T:System.Windows.Input.QueryCursorEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2340">The <see cref="T:System.Windows.Input.QueryCursorEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-2341">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2341">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="3347b-2342">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2342">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2343">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-2343">This method has no default implementation.</span></span> <span data-ttu-id="3347b-2344">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-2344">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="3347b-2345">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="3347b-2345">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="3347b-2346">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2346">In this case the matching event is a routed event.</span></span> <span data-ttu-id="3347b-2347">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="3347b-2347">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="3347b-2348">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2348">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="3347b-2349">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="3347b-2349">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="3347b-2350">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.UIElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2350">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="3347b-2351">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2351">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.QueryCursor" />
      </Docs>
    </Member>
    <Member MemberName="OnRender">
      <MemberSignature Language="C#" Value="protected virtual void OnRender (System.Windows.Media.DrawingContext drawingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRender(class System.Windows.Media.DrawingContext drawingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRender(System::Windows::Media::DrawingContext ^ drawingContext);" />
      <MemberSignature Language="F#" Value="abstract member OnRender : System.Windows.Media.DrawingContext -&gt; unit&#xA;override this.OnRender : System.Windows.Media.DrawingContext -&gt; unit" Usage="uIElement.OnRender drawingContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="drawingContext" Type="System.Windows.Media.DrawingContext" />
      </Parameters>
      <Docs>
        <param name="drawingContext">
          <span data-ttu-id="3347b-2352">As instruções de desenho para um elemento específico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2352">The drawing instructions for a specific element.</span>
          </span>
          <span data-ttu-id="3347b-2353">Esse contexto é fornecido para o sistema de layout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2353">This context is provided to the layout system.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-2354">Quando substituído em uma classe derivada, participa de operações de renderização direcionadas pelo sistema de layout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2354">When overridden in a derived class, participates in rendering operations that are directed by the layout system.</span>
          </span>
          <span data-ttu-id="3347b-2355">As instruções de renderização para esse elemento não são usadas diretamente quando este método é invocado e, em vez disso, são preservadas para serem usadas posteriormente de forma assíncrona pelo layout e desenho.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2355">The rendering instructions for this element are not used directly when this method is invoked, and are instead preserved for later asynchronous use by layout and drawing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2356">Esse método não tem nenhuma implementação padrão <xref:System.Windows.UIElement> classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-2356">This method has no default implementation in the <xref:System.Windows.UIElement> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3347b-2357">O exemplo de código a seguir mostra uma implementação possível de uma classe derivada de painel.</span><span class="sxs-lookup"><span data-stu-id="3347b-2357">The following code example shows a possible implementation for a panel derived class.</span></span>  
  
 [!code-csharp[LightWeightCustomPanel#1](~/samples/snippets/csharp/VS_Snippets_Wpf/LightWeightCustomPanel/CSharp/OffsetPanel.cs#1)]
 [!code-vb[LightWeightCustomPanel#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/LightWeightCustomPanel/visualbasic/offsetpanel.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3347b-2358">O <see cref="M:System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)" /> método pode ser substituído para adicionar o elementos gráficos (não definidos previamente em uma árvore lógica) para um elemento de renderizado, como efeitos ou adornos.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3347b-2358">The <see cref="M:System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)" /> method can be overridden to add further graphical elements (not previously defined in a logical tree) to a rendered element, such as effects or adorners.</span>
            </span>
            <span data-ttu-id="3347b-2359">Um <see cref="T:System.Windows.Media.DrawingContext" /> objeto é passado como um argumento, que fornece métodos para desenhar formas, texto, imagens ou vídeos.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3347b-2359">A <see cref="T:System.Windows.Media.DrawingContext" /> object is passed as an argument, which provides methods for drawing shapes, text, images or videos.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRenderSizeChanged">
      <MemberSignature Language="C#" Value="protected internal virtual void OnRenderSizeChanged (System.Windows.SizeChangedInfo info);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnRenderSizeChanged(class System.Windows.SizeChangedInfo info) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnRenderSizeChanged (info As SizeChangedInfo)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnRenderSizeChanged(System::Windows::SizeChangedInfo ^ info);" />
      <MemberSignature Language="F#" Value="abstract member OnRenderSizeChanged : System.Windows.SizeChangedInfo -&gt; unit&#xA;override this.OnRenderSizeChanged : System.Windows.SizeChangedInfo -&gt; unit" Usage="uIElement.OnRenderSizeChanged info" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Windows.SizeChangedInfo" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="3347b-2360">Os parâmetros empacotados (<see cref="T:System.Windows.SizeChangedInfo" />), que incluem tamanhos novos e antigos e cuja dimensão é realmente alterada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2360">The packaged parameters (<see cref="T:System.Windows.SizeChangedInfo" />), which includes old and new sizes, and which dimension actually changes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-2361">Quando substituído em uma classe derivada, participa de operações de renderização direcionadas pelo sistema de layout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2361">When overridden in a derived class, participates in rendering operations that are directed by the layout system.</span>
          </span>
          <span data-ttu-id="3347b-2362">Esse método será invocado após a atualização do layout e antes da renderização se o <see cref="P:System.Windows.UIElement.RenderSize" /> do elemento tiver sido alterado como resultado da atualização do layout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2362">This method is invoked after layout update, and before rendering, if the element's <see cref="P:System.Windows.UIElement.RenderSize" /> has changed as a result of layout update.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2363">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-2363">This method has no default implementation.</span></span> <span data-ttu-id="3347b-2364">Um elemento de nível de framework WPF típico usa a implementação de substituição de <xref:System.Windows.FrameworkElement>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2364">A typical WPF framework-level element uses the override implementation from <xref:System.Windows.FrameworkElement>.</span></span> <span data-ttu-id="3347b-2365">O <xref:System.Windows.FrameworkElement> implementação invalida as <xref:System.Windows.FrameworkElement.Width%2A> e <xref:System.Windows.FrameworkElement.Height%2A> propriedades e manipula as Noções básicas de recriando o layout.</span><span class="sxs-lookup"><span data-stu-id="3347b-2365">The <xref:System.Windows.FrameworkElement> implementation invalidates the <xref:System.Windows.FrameworkElement.Width%2A> and <xref:System.Windows.FrameworkElement.Height%2A> properties and handles the basics of remaking the layout.</span></span> <span data-ttu-id="3347b-2366">Substituindo <xref:System.Windows.UIElement.OnRenderSizeChanged%2A> no <xref:System.Windows.UIElement> nível implica que sua implementação de elemento deliberadamente não está usando a implementação de nível de framework WPF e, portanto, o elemento deve lidar com lógica de layout mais diretamente, normalmente, escrevendo um sistema de layout de substituição.</span><span class="sxs-lookup"><span data-stu-id="3347b-2366">Overriding <xref:System.Windows.UIElement.OnRenderSizeChanged%2A> at the <xref:System.Windows.UIElement> level implies that your element implementation is deliberately not using the WPF framework-level implementation, and therefore your element must handle layout logic more directly, typically by writing a replacement layout system.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStylusButtonDown">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusButtonDown (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusButtonDown(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusButtonDown (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusButtonDown(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusButtonDown : System.Windows.Input.StylusButtonEventArgs -&gt; unit&#xA;override this.OnStylusButtonDown : System.Windows.Input.StylusButtonEventArgs -&gt; unit" Usage="uIElement.OnStylusButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-2367">O <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2367">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-2368">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2368">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="3347b-2369">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2369">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2370">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-2370">This method has no default implementation.</span></span> <span data-ttu-id="3347b-2371">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-2371">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="3347b-2372">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="3347b-2372">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="3347b-2373">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2373">In this case the matching event is a routed event.</span></span> <span data-ttu-id="3347b-2374">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="3347b-2374">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="3347b-2375">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2375">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="3347b-2376">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="3347b-2376">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="3347b-2377">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.UIElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2377">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="3347b-2378">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2378">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusButtonUp">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusButtonUp (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusButtonUp(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusButtonUp (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusButtonUp(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusButtonUp : System.Windows.Input.StylusButtonEventArgs -&gt; unit&#xA;override this.OnStylusButtonUp : System.Windows.Input.StylusButtonEventArgs -&gt; unit" Usage="uIElement.OnStylusButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-2379">O <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2379">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-2380">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2380">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="3347b-2381">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2381">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2382">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-2382">This method has no default implementation.</span></span> <span data-ttu-id="3347b-2383">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-2383">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="3347b-2384">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="3347b-2384">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="3347b-2385">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2385">In this case the matching event is a routed event.</span></span> <span data-ttu-id="3347b-2386">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="3347b-2386">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="3347b-2387">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2387">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="3347b-2388">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="3347b-2388">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="3347b-2389">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.UIElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2389">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="3347b-2390">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2390">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusDown">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusDown (System.Windows.Input.StylusDownEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusDown(class System.Windows.Input.StylusDownEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusDown(System.Windows.Input.StylusDownEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusDown (e As StylusDownEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusDown(System::Windows::Input::StylusDownEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusDown : System.Windows.Input.StylusDownEventArgs -&gt; unit&#xA;override this.OnStylusDown : System.Windows.Input.StylusDownEventArgs -&gt; unit" Usage="uIElement.OnStylusDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusDownEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-2391">O <see cref="T:System.Windows.Input.StylusDownEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2391">The <see cref="T:System.Windows.Input.StylusDownEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-2392">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Stylus.StylusDown" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2392">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusDown" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="3347b-2393">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2393">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2394">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-2394">This method has no default implementation.</span></span> <span data-ttu-id="3347b-2395">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-2395">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="3347b-2396">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="3347b-2396">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="3347b-2397">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2397">In this case the matching event is a routed event.</span></span> <span data-ttu-id="3347b-2398">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="3347b-2398">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="3347b-2399">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2399">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="3347b-2400">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="3347b-2400">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="3347b-2401">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.UIElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2401">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="3347b-2402">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2402">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusDown" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusEnter (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusEnter(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusEnter(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusEnter (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusEnter(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusEnter : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusEnter : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnStylusEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-2403">O <see cref="T:System.Windows.Input.StylusEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2403">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-2404">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> sem tratamento é gerado por esse elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2404">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> attached event is raised by this element.</span>
          </span>
          <span data-ttu-id="3347b-2405">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2405">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2406">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-2406">This method has no default implementation.</span></span> <span data-ttu-id="3347b-2407">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-2407">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="3347b-2408">Você pode chamar base antes ou depois de seu tratamento especial, dependendo dos seus requisitos.</span><span class="sxs-lookup"><span data-stu-id="3347b-2408">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="3347b-2409">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="3347b-2409">The purpose of this method is similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="3347b-2410">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2410">In this case the matching event is a routed event.</span></span> <span data-ttu-id="3347b-2411">Marcar o evento como manipulado ainda é útil para impedir a manipuladores de instância típico (aqueles que não especificam `handledEventsToo`) seja chamado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2411">Marking the event as handled is still useful for preventing typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusInAirMove">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusInAirMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusInAirMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusInAirMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusInAirMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusInAirMove : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusInAirMove : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnStylusInAirMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-2412">O <see cref="T:System.Windows.Input.StylusEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2412">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-2413">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2413">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="3347b-2414">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2414">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2415">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-2415">This method has no default implementation.</span></span> <span data-ttu-id="3347b-2416">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-2416">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="3347b-2417">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="3347b-2417">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="3347b-2418">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2418">In this case the matching event is a routed event.</span></span> <span data-ttu-id="3347b-2419">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="3347b-2419">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="3347b-2420">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2420">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="3347b-2421">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="3347b-2421">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="3347b-2422">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.UIElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2422">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="3347b-2423">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2423">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusInAirMove" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusInRange">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusInRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusInRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusInRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusInRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusInRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusInRange : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusInRange : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnStylusInRange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-2424">O <see cref="T:System.Windows.Input.StylusEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2424">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-2425">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2425">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="3347b-2426">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2426">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2427">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-2427">This method has no default implementation.</span></span> <span data-ttu-id="3347b-2428">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-2428">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="3347b-2429">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="3347b-2429">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="3347b-2430">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2430">In this case the matching event is a routed event.</span></span> <span data-ttu-id="3347b-2431">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="3347b-2431">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="3347b-2432">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2432">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="3347b-2433">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="3347b-2433">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="3347b-2434">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.UIElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2434">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="3347b-2435">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2435">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusInRange" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusLeave (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusLeave(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusLeave(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusLeave (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusLeave(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusLeave : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusLeave : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnStylusLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-2436">O <see cref="T:System.Windows.Input.StylusEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2436">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-2437">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> sem tratamento é gerado por esse elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2437">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> attached event is raised by this element.</span>
          </span>
          <span data-ttu-id="3347b-2438">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2438">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2439">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-2439">This method has no default implementation.</span></span> <span data-ttu-id="3347b-2440">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-2440">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="3347b-2441">Você pode chamar base antes ou depois de seu tratamento especial, dependendo dos seus requisitos.</span><span class="sxs-lookup"><span data-stu-id="3347b-2441">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="3347b-2442">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="3347b-2442">The purpose of this method is similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="3347b-2443">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2443">In this case the matching event is a routed event.</span></span> <span data-ttu-id="3347b-2444">Marcar o evento como manipulado ainda é útil para impedir a manipuladores de instância típico (aqueles que não especificam `handledEventsToo`) seja chamado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2444">Marking the event as handled is still useful for preventing typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusMove">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusMove : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusMove : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnStylusMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-2445">O <see cref="T:System.Windows.Input.StylusEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2445">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-2446">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Stylus.StylusMove" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2446">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusMove" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="3347b-2447">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2447">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2448">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-2448">This method has no default implementation.</span></span> <span data-ttu-id="3347b-2449">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-2449">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="3347b-2450">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="3347b-2450">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="3347b-2451">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2451">In this case the matching event is a routed event.</span></span> <span data-ttu-id="3347b-2452">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="3347b-2452">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="3347b-2453">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2453">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="3347b-2454">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="3347b-2454">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="3347b-2455">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.UIElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2455">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="3347b-2456">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2456">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusMove" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusOutOfRange">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusOutOfRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusOutOfRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusOutOfRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusOutOfRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusOutOfRange : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusOutOfRange : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnStylusOutOfRange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-2457">O <see cref="T:System.Windows.Input.StylusEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2457">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-2458">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2458">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="3347b-2459">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2459">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2460">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-2460">This method has no default implementation.</span></span> <span data-ttu-id="3347b-2461">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-2461">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="3347b-2462">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="3347b-2462">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="3347b-2463">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2463">In this case the matching event is a routed event.</span></span> <span data-ttu-id="3347b-2464">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="3347b-2464">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="3347b-2465">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2465">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="3347b-2466">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="3347b-2466">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="3347b-2467">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.UIElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2467">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="3347b-2468">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2468">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusOutOfRange" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusSystemGesture">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusSystemGesture (System.Windows.Input.StylusSystemGestureEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusSystemGesture(class System.Windows.Input.StylusSystemGestureEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusSystemGesture (e As StylusSystemGestureEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusSystemGesture(System::Windows::Input::StylusSystemGestureEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventArgs -&gt; unit&#xA;override this.OnStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventArgs -&gt; unit" Usage="uIElement.OnStylusSystemGesture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusSystemGestureEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-2469">O <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2469">The <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-2470">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2470">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="3347b-2471">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2471">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2472">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-2472">This method has no default implementation.</span></span> <span data-ttu-id="3347b-2473">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-2473">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="3347b-2474">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="3347b-2474">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="3347b-2475">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2475">In this case the matching event is a routed event.</span></span> <span data-ttu-id="3347b-2476">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="3347b-2476">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="3347b-2477">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2477">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="3347b-2478">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="3347b-2478">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="3347b-2479">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.UIElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2479">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="3347b-2480">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2480">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusSystemGesture" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusUp">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusUp (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusUp(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusUp(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusUp (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusUp(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusUp : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusUp : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnStylusUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-2481">O <see cref="T:System.Windows.Input.StylusEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2481">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-2482">Invocado quando um evento anexado <see cref="E:System.Windows.Input.Stylus.StylusUp" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2482">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusUp" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="3347b-2483">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2483">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2484">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-2484">This method has no default implementation.</span></span> <span data-ttu-id="3347b-2485">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-2485">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="3347b-2486">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="3347b-2486">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="3347b-2487">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2487">In this case the matching event is a routed event.</span></span> <span data-ttu-id="3347b-2488">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="3347b-2488">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="3347b-2489">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2489">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="3347b-2490">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="3347b-2490">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="3347b-2491">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.UIElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2491">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="3347b-2492">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2492">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusUp" />
      </Docs>
    </Member>
    <Member MemberName="OnTextInput">
      <MemberSignature Language="C#" Value="protected virtual void OnTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTextInput (e As TextCompositionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTextInput(System::Windows::Input::TextCompositionEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit&#xA;override this.OnTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit" Usage="uIElement.OnTextInput e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-2493">O <see cref="T:System.Windows.Input.TextCompositionEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2493">The <see cref="T:System.Windows.Input.TextCompositionEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-2494">Invocado quando um evento anexado <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> sem tratamento atinge um elemento em sua rota que deriva dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2494">Invoked when an unhandled <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="3347b-2495">Implemente esse método para adicionar tratamento de classe a esse evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2495">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2496">Esse método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-2496">This method has no default implementation.</span></span> <span data-ttu-id="3347b-2497">Porque uma classe intermediária na herança de pode implementar esse método, é recomendável que você chame a implementação base em sua implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-2497">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="3347b-2498">A finalidade desse método é semelhante ao [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] padrão de evento em \* métodos: esse método fornece os meios para manipular o evento correspondente de classes derivadas, estabelecendo um manipulador de classe em vez de um manipulador de instância.</span><span class="sxs-lookup"><span data-stu-id="3347b-2498">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="3347b-2499">Nesse caso, o evento correspondente é um evento roteado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2499">In this case the matching event is a routed event.</span></span> <span data-ttu-id="3347b-2500">O padrão de implementação dos métodos On \* é diferente para eventos roteados porque um evento roteado pode ser gerado por um elemento filho, que não é necessariamente o elemento que invocará os manipuladores.</span><span class="sxs-lookup"><span data-stu-id="3347b-2500">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="3347b-2501">Portanto, sua implementação precisa examinar as propriedades de fonte de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2501">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="3347b-2502">Ele não deve tentar reraise o evento na maioria dos casos.</span><span class="sxs-lookup"><span data-stu-id="3347b-2502">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="3347b-2503">Substituindo esse método ou registrando classe manipuladores com <xref:System.Windows.EventManager.RegisterClassHandler%2A>, classes derivadas de <xref:System.Windows.UIElement> pode chamar métodos do manipulador de classe privada quando o evento é recebido ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2503">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="3347b-2504">É um cenário onde a manipulação de classe é apropriada manipular os dados do evento e marcar o evento roteado como manipulado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2504">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.TextInput" />
      </Docs>
    </Member>
    <Member MemberName="OnTouchDown">
      <MemberSignature Language="C#" Value="protected virtual void OnTouchDown (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTouchDown(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnTouchDown(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTouchDown (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTouchDown(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchDown : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchDown : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement.OnTouchDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-2505">Um <see cref="T:System.Windows.Input.TouchEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2505">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-2506">Fornece tratamento de classes para os eventos roteados <see cref="E:System.Windows.UIElement.TouchDown" /> que ocorrem quando há um toque nesse elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2506">Provides class handling for the <see cref="E:System.Windows.UIElement.TouchDown" /> routed event that occurs when a touch presses inside this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2507">O <xref:System.Windows.UIElement.OnTouchDown%2A> método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-2507">The <xref:System.Windows.UIElement.OnTouchDown%2A> method has no default implementation.</span></span> <span data-ttu-id="3347b-2508">Substituir <xref:System.Windows.UIElement.OnTouchDown%2A> em uma classe derivada para manipular o <xref:System.Windows.UIElement.TouchDown> eventos.</span><span class="sxs-lookup"><span data-stu-id="3347b-2508">Override <xref:System.Windows.UIElement.OnTouchDown%2A> in a derived class to handle the <xref:System.Windows.UIElement.TouchDown> event.</span></span> <span data-ttu-id="3347b-2509">Certifique-se de chamar a classe base <xref:System.Windows.UIElement.OnTouchDown%2A> , de modo que classes base receber o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2509">Be sure to call the base class' <xref:System.Windows.UIElement.OnTouchDown%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnTouchEnter (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTouchEnter(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnTouchEnter(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTouchEnter (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTouchEnter(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchEnter : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchEnter : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement.OnTouchEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-2510">Um <see cref="T:System.Windows.Input.TouchEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2510">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-2511">Fornece tratamento de classes para os eventos roteados de <see cref="E:System.Windows.UIElement.TouchEnter" /> que ocorre quando um toque é movido de fora para dentro dos limites deste elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2511">Provides class handling for the <see cref="E:System.Windows.UIElement.TouchEnter" /> routed event that occurs when a touch moves from outside to inside the bounds of this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2512">O <xref:System.Windows.UIElement.OnTouchEnter%2A> método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-2512">The <xref:System.Windows.UIElement.OnTouchEnter%2A> method has no default implementation.</span></span> <span data-ttu-id="3347b-2513">Substituir <xref:System.Windows.UIElement.OnTouchEnter%2A> em uma classe derivada para manipular o <xref:System.Windows.UIElement.TouchEnter> eventos.</span><span class="sxs-lookup"><span data-stu-id="3347b-2513">Override <xref:System.Windows.UIElement.OnTouchEnter%2A> in a derived class to handle the <xref:System.Windows.UIElement.TouchEnter> event.</span></span> <span data-ttu-id="3347b-2514">Certifique-se de chamar a classe base <xref:System.Windows.UIElement.OnTouchEnter%2A> , de modo que classes base receber o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2514">Be sure to call the base class' <xref:System.Windows.UIElement.OnTouchEnter%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnTouchLeave (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTouchLeave(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnTouchLeave(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTouchLeave (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTouchLeave(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchLeave : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchLeave : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement.OnTouchLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-2515">Um <see cref="T:System.Windows.Input.TouchEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2515">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-2516">Fornece tratamento de classe para os eventos roteados <see cref="E:System.Windows.UIElement.TouchLeave" /> que ocorre quando um toque é movido de dentro para fora dos limites deste <see cref="T:System.Windows.UIElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2516">Provides class handling for the <see cref="E:System.Windows.UIElement.TouchLeave" /> routed event that occurs when a touch moves from inside to outside the bounds of this <see cref="T:System.Windows.UIElement" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2517">O <xref:System.Windows.UIElement.OnTouchLeave%2A> método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-2517">The <xref:System.Windows.UIElement.OnTouchLeave%2A> method has no default implementation.</span></span> <span data-ttu-id="3347b-2518">Substituir <xref:System.Windows.UIElement.OnTouchLeave%2A> em uma classe derivada para manipular o <xref:System.Windows.UIElement.TouchLeave> eventos.</span><span class="sxs-lookup"><span data-stu-id="3347b-2518">Override <xref:System.Windows.UIElement.OnTouchLeave%2A> in a derived class to handle the <xref:System.Windows.UIElement.TouchLeave> event.</span></span> <span data-ttu-id="3347b-2519">Certifique-se de chamar a classe base <xref:System.Windows.UIElement.OnTouchLeave%2A> , de modo que classes base receber o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2519">Be sure to call the base class' <xref:System.Windows.UIElement.OnTouchLeave%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchMove">
      <MemberSignature Language="C#" Value="protected virtual void OnTouchMove (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTouchMove(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnTouchMove(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTouchMove (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTouchMove(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchMove : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchMove : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement.OnTouchMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-2520">Um <see cref="T:System.Windows.Input.TouchEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2520">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-2521">Fornece manipulação de classes para o evento roteado <see cref="E:System.Windows.UIElement.TouchMove" /> que ocorre quando há uma movimentação de toque nesse elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2521">Provides class handling for the <see cref="E:System.Windows.UIElement.TouchMove" /> routed event that occurs when a touch moves while inside this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2522">O <xref:System.Windows.UIElement.OnTouchMove%2A> método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-2522">The <xref:System.Windows.UIElement.OnTouchMove%2A> method has no default implementation.</span></span> <span data-ttu-id="3347b-2523">Substituir <xref:System.Windows.UIElement.OnTouchMove%2A> em uma classe derivada para manipular o <xref:System.Windows.UIElement.TouchMove> eventos.</span><span class="sxs-lookup"><span data-stu-id="3347b-2523">Override <xref:System.Windows.UIElement.OnTouchMove%2A> in a derived class to handle the <xref:System.Windows.UIElement.TouchMove> event.</span></span> <span data-ttu-id="3347b-2524">Certifique-se de chamar a classe base <xref:System.Windows.UIElement.OnTouchMove%2A> , de modo que classes base receber o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2524">Be sure to call the base class' <xref:System.Windows.UIElement.OnTouchMove%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchUp">
      <MemberSignature Language="C#" Value="protected virtual void OnTouchUp (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTouchUp(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnTouchUp(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTouchUp (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTouchUp(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchUp : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchUp : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement.OnTouchUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-2525">Um <see cref="T:System.Windows.Input.TouchEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2525">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-2526">Fornece tratamento de classe para os eventos roteados <see cref="E:System.Windows.UIElement.TouchUp" /> que ocorrem quando um toque é liberado dentro desse elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2526">Provides class handling for the <see cref="E:System.Windows.UIElement.TouchUp" /> routed event that occurs when a touch is released inside this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2527">O <xref:System.Windows.UIElement.OnTouchUp%2A> método não tem nenhuma implementação padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-2527">The <xref:System.Windows.UIElement.OnTouchUp%2A> method has no default implementation.</span></span> <span data-ttu-id="3347b-2528">Substituir <xref:System.Windows.UIElement.OnTouchUp%2A> em uma classe derivada para manipular o <xref:System.Windows.UIElement.TouchUp> eventos.</span><span class="sxs-lookup"><span data-stu-id="3347b-2528">Override <xref:System.Windows.UIElement.OnTouchUp%2A> in a derived class to handle the <xref:System.Windows.UIElement.TouchUp> event.</span></span> <span data-ttu-id="3347b-2529">Certifique-se de chamar a classe base <xref:System.Windows.UIElement.OnTouchUp%2A> , de modo que classes base receber o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2529">Be sure to call the base class' <xref:System.Windows.UIElement.OnTouchUp%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVisualParentChanged">
      <MemberSignature Language="C#" Value="protected internal override void OnVisualParentChanged (System.Windows.DependencyObject oldParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnVisualParentChanged(class System.Windows.DependencyObject oldParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnVisualParentChanged(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnVisualParentChanged (oldParent As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnVisualParentChanged(System::Windows::DependencyObject ^ oldParent);" />
      <MemberSignature Language="F#" Value="override this.OnVisualParentChanged : System.Windows.DependencyObject -&gt; unit" Usage="uIElement.OnVisualParentChanged oldParent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldParent" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="oldParent">
          <span data-ttu-id="3347b-2530">O pai anterior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2530">The previous parent.</span>
          </span>
          <span data-ttu-id="3347b-2531">Pode ser fornecido como <see langword="null" /> se o <see cref="T:System.Windows.DependencyObject" /> não teve um elemento pai anteriormente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2531">This may be provided as <see langword="null" /> if the <see cref="T:System.Windows.DependencyObject" /> did not have a parent element previously.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-2532">Invocado quando o elemento pai desse <see cref="T:System.Windows.UIElement" /> relata uma alteração ao seu pai visual subjacente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2532">Invoked when the parent element of this <see cref="T:System.Windows.UIElement" /> reports a change to its underlying visual parent.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3347b-2533">Se você substituir esse método, sempre chame a implementação base.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3347b-2533">If you override this method, always call the base implementation.</span>
            </span>
            <span data-ttu-id="3347b-2534">A implementação de base padrão executa algumas manutenção interna do estado de propriedade herdada em ordem inversa.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3347b-2534">The default base implementation performs some internal maintenance of reverse-inherited property state.</span>
            </span>
            <span data-ttu-id="3347b-2535">Falha ao chamar a implementação base invalidará nesse estado.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3347b-2535">Failing to call the base implementation will invalidate this state.</span>
            </span>
            <span data-ttu-id="3347b-2536">Este método substitui <see cref="M:System.Windows.Media.Visual.OnVisualParentChanged(System.Windows.DependencyObject)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3347b-2536">This method overrides <see cref="M:System.Windows.Media.Visual.OnVisualParentChanged(System.Windows.DependencyObject)" />.</span>
            </span>
            <span data-ttu-id="3347b-2537">
              <see cref="T:System.Windows.FrameworkElement" /> e <see cref="T:System.Windows.Window" /> ambos também substituem o <see cref="T:System.Windows.UIElement" /> implementação <see cref="M:System.Windows.UIElement.OnVisualParentChanged(System.Windows.DependencyObject)" />, e <see cref="T:System.Windows.Window" /> lacra a ele.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3347b-2537">
                <see cref="T:System.Windows.FrameworkElement" /> and <see cref="T:System.Windows.Window" /> both also override the <see cref="T:System.Windows.UIElement" /> implementation of <see cref="M:System.Windows.UIElement.OnVisualParentChanged(System.Windows.DependencyObject)" />, and <see cref="T:System.Windows.Window" /> seals it.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Opacity">
      <MemberSignature Language="C#" Value="public double Opacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Opacity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.Opacity" />
      <MemberSignature Language="VB.NET" Value="Public Property Opacity As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Opacity { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Opacity : double with get, set" Usage="System.Windows.UIElement.Opacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-2538">Obtém ou define o fator de opacidade aplicado a todo o <see cref="T:System.Windows.UIElement" /> quando ele é renderizado no [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2538">Gets or sets the opacity factor applied to the entire <see cref="T:System.Windows.UIElement" /> when it is rendered in the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span>
          </span>
          <span data-ttu-id="3347b-2539">É uma propriedade de dependência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2539">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3347b-2540">O fator de opacidade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2540">The opacity factor.</span>
          </span>
          <span data-ttu-id="3347b-2541">A opacidade padrão é 1.0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2541">Default opacity is 1.0.</span>
          </span>
          <span data-ttu-id="3347b-2542">Os valores esperados estão entre 0.0 e 1.0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2542">Expected values are between 0.0 and 1.0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2543">O valor padrão de 1.0 é o padrão fornecido pelos metadados inicial desta propriedade de dependência no <xref:System.Windows.UIElement> classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-2543">The 1.0 default value is the default provided by the initial metadata of this dependency property on the <xref:System.Windows.UIElement> class.</span></span> <span data-ttu-id="3347b-2544">Outras classes derivadas potencialmente podem alterar esse valor padrão, substituindo os metadados de dentro de seu construtor de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-2544">Other derived classes may potentially change this default value by overriding the metadata from within their class constructor.</span></span>  
  
 <span data-ttu-id="3347b-2545">O valor de <xref:System.Windows.UIElement.Opacity%2A> não será aplicado ao layout real, a menos que o elemento também é visível (<xref:System.Windows.UIElement.IsVisible%2A> é `true`).</span><span class="sxs-lookup"><span data-stu-id="3347b-2545">The value of <xref:System.Windows.UIElement.Opacity%2A> won't be applied to actual layout unless the element is also visible (<xref:System.Windows.UIElement.IsVisible%2A> is `true`).</span></span>  
  
 <span data-ttu-id="3347b-2546"><xref:System.Windows.UIElement.Opacity%2A> é aplicada de elementos pai abaixo da árvore de elemento para elementos filho, mas os efeitos visíveis a opacidade aninhada configurações não são indicadas no valor da propriedade de elementos filho individuais.</span><span class="sxs-lookup"><span data-stu-id="3347b-2546"><xref:System.Windows.UIElement.Opacity%2A> is applied from parent elements on down the element tree to child elements, but the visible effects of the nested opacity settings aren't indicated in the property value of individual child elements.</span></span> <span data-ttu-id="3347b-2547">Por exemplo, se uma lista tem uma opacidade de 50% (0,5) e um de seus itens de lista tem seu próprio opacidade definida como 20% (0.2), a opacidade visível net para aquele item de lista será renderizada como se fosse 10% (0,1), mas o valor da propriedade do item de lista <xref:System.Windows.UIElement.Opacity%2A> propriedade ainda seria  0,2 quando consultada.</span><span class="sxs-lookup"><span data-stu-id="3347b-2547">For instance, if a list has a 50% (0.5) opacity and one of its list items has its own opacity set to 20% (0.2), the net visible opacity for that list item will be rendered as if it were 10% (0.1), but the property value of the list item <xref:System.Windows.UIElement.Opacity%2A> property would still be 0.2 when queried.</span></span>  
  
 <span data-ttu-id="3347b-2548">Mesmo se a opacidade avaliada ou declarada é 0, um elemento ainda participa de comandos e eventos de entrada e é potencialmente focalizável.</span><span class="sxs-lookup"><span data-stu-id="3347b-2548">Even if the declared or evaluated opacity is 0, an element still participates in input events and commands, and is potentially focusable.</span></span> <span data-ttu-id="3347b-2549">Esse aspecto pode ser útil, por exemplo, você pode usar um objeto de opacidade de zero (como uma forma) para objetos subjacentes com elementos transparentes de mascaramento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2549">This aspect can be useful, for instance you can use an opacity-zero object (such as a shape) for masking underlying objects with transparent elements.</span></span> <span data-ttu-id="3347b-2550">O objeto de opacidade de zero, em seguida, pode lidar com todos os eventos de entrada de processamento de uma área subjacente.</span><span class="sxs-lookup"><span data-stu-id="3347b-2550">The opacity-zero object can then handle all the input event processing for an underlying area.</span></span> <span data-ttu-id="3347b-2551">No entanto, o `Background` ou `Fill` do objeto ou da forma deve ser definido como um valor, mesmo se for <xref:System.Windows.Media.Brushes.Transparent%2A>, caso contrário, o teste de clique não está habilitado e nenhum evento for recebido.</span><span class="sxs-lookup"><span data-stu-id="3347b-2551">However, the `Background` or `Fill` of the object or shape should be set to a value, even if it is <xref:System.Windows.Media.Brushes.Transparent%2A>, otherwise hit testing is not enabled, and no events are received.</span></span>  
  
<a name="dependencyPropertyInfo_Opacity"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3347b-2552">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="3347b-2552">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-2553">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-2553">Identifier field</span></span>|<xref:System.Windows.UIElement.OpacityProperty>|  
|<span data-ttu-id="3347b-2554">Propriedades de metadados definido como `true`</span><span class="sxs-lookup"><span data-stu-id="3347b-2554">Metadata properties set to `true`</span></span>|<span data-ttu-id="3347b-2555">Nenhum</span><span class="sxs-lookup"><span data-stu-id="3347b-2555">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.OpacityMask" />
      </Docs>
    </Member>
    <Member MemberName="OpacityMask">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush OpacityMask { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush OpacityMask" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.OpacityMask" />
      <MemberSignature Language="VB.NET" Value="Public Property OpacityMask As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ OpacityMask { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OpacityMask : System.Windows.Media.Brush with get, set" Usage="System.Windows.UIElement.OpacityMask" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-2556">Obtém ou define uma máscara de opacidade como uma implementação de <see cref="T:System.Windows.Media.Brush" /> que é aplicada a qualquer mascaramento de canal alfa para o conteúdo renderizado deste elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2556">Gets or sets an opacity mask, as a <see cref="T:System.Windows.Media.Brush" /> implementation that is applied to any alpha-channel masking for the rendered content of this element.</span>
          </span>
          <span data-ttu-id="3347b-2557">É uma propriedade de dependência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2557">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3347b-2558">O pincel a ser usado para o mascaramento de opacidade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2558">The brush to use for opacity masking.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2559">Esta propriedade só usa tudo o que o valor de canal alfa é fornecido <xref:System.Windows.Media.Brush>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2559">This property only uses whatever the alpha channel value is for the supplied <xref:System.Windows.Media.Brush>.</span></span> <span data-ttu-id="3347b-2560">Outros canais do <xref:System.Windows.Media.Brush>processada do conteúdo (vermelho, verde ou azul) são ignorados.</span><span class="sxs-lookup"><span data-stu-id="3347b-2560">The other channels of the <xref:System.Windows.Media.Brush>'s rendered content (Red, Green, or Blue) are ignored.</span></span>  
  
 <span data-ttu-id="3347b-2561">A mais comum <xref:System.Windows.Media.Brush> para esta finalidade é um <xref:System.Windows.Media.ImageBrush>, que pode ser usado para uma variedade de técnicas como um vignette de mascaramento de fotos.</span><span class="sxs-lookup"><span data-stu-id="3347b-2561">The most typical <xref:System.Windows.Media.Brush> for this purpose is an <xref:System.Windows.Media.ImageBrush>, which can be used for a variety of photo masking techniques such as a vignette.</span></span> <span data-ttu-id="3347b-2562">Mas qualquer definidas <xref:System.Windows.Media.Brush> (como <xref:System.Windows.Media.LinearGradientBrush>) pode ser usado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2562">But any defined <xref:System.Windows.Media.Brush> (such as <xref:System.Windows.Media.LinearGradientBrush>) can be used.</span></span>  
  
 <span data-ttu-id="3347b-2563">Na [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], esse valor de propriedade pode usar uma sintaxe embutida que é específica para cada implementação do <xref:System.Windows.Media.Brush> classe abstrata.</span><span class="sxs-lookup"><span data-stu-id="3347b-2563">In [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], this property value can use an inline syntax that is specific to each implementation of the <xref:System.Windows.Media.Brush> abstract class.</span></span> <span data-ttu-id="3347b-2564">Para obter mais informações, consulte [pintura com cores sólidas e gradientes Overview](~/docs/framework/wpf/graphics-multimedia/painting-with-solid-colors-and-gradients-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3347b-2564">For more information, see [Painting with Solid Colors and Gradients Overview](~/docs/framework/wpf/graphics-multimedia/painting-with-solid-colors-and-gradients-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_OpacityMask"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3347b-2565">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="3347b-2565">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-2566">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-2566">Identifier field</span></span>|<xref:System.Windows.UIElement.OpacityMaskProperty>|  
|<span data-ttu-id="3347b-2567">Propriedades de metadados definido como `true`</span><span class="sxs-lookup"><span data-stu-id="3347b-2567">Metadata properties set to `true`</span></span>|<span data-ttu-id="3347b-2568">Nenhum</span><span class="sxs-lookup"><span data-stu-id="3347b-2568">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3347b-2569">O exemplo de marcação a seguir mostra uma <xref:System.Windows.Media.ImageBrush> máscara de opacidade aplicada a outro <xref:System.Windows.Controls.Image>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2569">The following markup example shows an <xref:System.Windows.Media.ImageBrush> opacity mask applied to another <xref:System.Windows.Controls.Image>.</span></span>  
  
 [!code-xaml[OpacityMasksSnippet#UIElementOpacityMask](~/samples/snippets/csharp/VS_Snippets_Wpf/OpacityMasksSnippet/CS/ImageBrushExample.xaml#uielementopacitymask)]   
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.Opacity" />
      </Docs>
    </Member>
    <Member MemberName="OpacityMaskProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty OpacityMaskProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty OpacityMaskProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.OpacityMaskProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OpacityMaskProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ OpacityMaskProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable OpacityMaskProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.OpacityMaskProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-2570">Identifica a propriedade de dependência <see cref="P:System.Windows.UIElement.OpacityMask" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2570">Identifies the <see cref="P:System.Windows.UIElement.OpacityMask" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpacityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty OpacityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty OpacityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.OpacityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OpacityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ OpacityProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable OpacityProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.OpacityProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-2571">Identifica a propriedade de dependência <see cref="P:System.Windows.UIElement.Opacity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2571">Identifies the <see cref="P:System.Windows.UIElement.Opacity" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PersistId">
      <MemberSignature Language="C#" Value="public int PersistId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PersistId" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.PersistId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PersistId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PersistId { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PersistId : int" Usage="System.Windows.UIElement.PersistId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("PersistId is an obsolete property and may be removed in a future release.  The value of this property is not defined.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-2572">Obtém um valor que identifica esse objeto de forma exclusiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2572">Gets a value that uniquely identifies this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3347b-2573">O identificador exclusivo desse elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2573">The unique identifier for this element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2574"><xref:System.Windows.UIElement.PersistId%2A> identifica exclusivamente cada elemento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2574"><xref:System.Windows.UIElement.PersistId%2A> uniquely identifies each element.</span></span> <span data-ttu-id="3347b-2575">Um elemento mantém o mesmo <xref:System.Windows.UIElement.PersistId%2A> toda vez que o mesmo [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] é carregado (incluindo representações binárias).</span><span class="sxs-lookup"><span data-stu-id="3347b-2575">An element keeps the same <xref:System.Windows.UIElement.PersistId%2A> every time the same [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] is loaded (including binary representations).</span></span> <span data-ttu-id="3347b-2576">Esse identificador é usado para obter os requisitos de carregamento, análise e serialização internos.</span><span class="sxs-lookup"><span data-stu-id="3347b-2576">This identifier is used for internal loading, parsing and serialization requirements.</span></span> <span data-ttu-id="3347b-2577">Ele não se destina a ser usado pelo código do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="3347b-2577">It is not intended to be used by your application code.</span></span>  
  
 <span data-ttu-id="3347b-2578">Essa propriedade não tem relação com o <xref:System.Object.GetHashCode%2A> resultado para qualquer determinada instância.</span><span class="sxs-lookup"><span data-stu-id="3347b-2578">This property has no relationship to the <xref:System.Object.GetHashCode%2A> result for any given instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PredictFocus">
      <MemberSignature Language="C#" Value="public virtual System.Windows.DependencyObject PredictFocus (System.Windows.Input.FocusNavigationDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.DependencyObject PredictFocus(valuetype System.Windows.Input.FocusNavigationDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PredictFocus (direction As FocusNavigationDirection) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::DependencyObject ^ PredictFocus(System::Windows::Input::FocusNavigationDirection direction);" />
      <MemberSignature Language="F#" Value="abstract member PredictFocus : System.Windows.Input.FocusNavigationDirection -&gt; System.Windows.DependencyObject&#xA;override this.PredictFocus : System.Windows.Input.FocusNavigationDirection -&gt; System.Windows.DependencyObject" Usage="uIElement.PredictFocus direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Input.FocusNavigationDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="3347b-2579">A direção da passagem do foco solicitada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2579">The direction of the requested focus traversal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-2580">Quando substituído em uma classe derivada, retorna o elemento que deve receber o foco para uma direção de passagem do foco especificada, sem realmente mover o foco para esse elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2580">When overridden in a derived class, returns the element that would receive focus for a specified focus traversal direction, without actually moving focus to that element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3347b-2581">O elemento que teria recebido foco, se <see cref="M:System.Windows.UIElement.MoveFocus(System.Windows.Input.TraversalRequest)" /> realmente fosse invocado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2581">The element that would have received focus if <see cref="M:System.Windows.UIElement.MoveFocus(System.Windows.Input.TraversalRequest)" /> were actually invoked.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2582">A implementação padrão desse método nesta classe está incompleta e sempre retorna `null`.</span><span class="sxs-lookup"><span data-stu-id="3347b-2582">The default implementation of this method in this class is incomplete, and always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
      </Docs>
    </Member>
    <Member MemberName="PreviewDragEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewDragEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragEnter As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragEnter;" />
      <MemberSignature Language="F#" Value="member this.PreviewDragEnter : System.Windows.DragEventHandler " Usage="member this.PreviewDragEnter : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-2583">Ocorre quando o sistema de entrada relata um evento arrastar subjacente com este elemento como o destino de arrastar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2583">Occurs when the input system reports an underlying drag event with this element as the drag target.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2584">Esse evento cria um alias para o <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.UIElement.PreviewDragEnter> faz parte da classe a lista de membros quando <xref:System.Windows.UIElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="3347b-2584">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewDragEnter> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="3347b-2585">Manipuladores de eventos que estão anexados para o <xref:System.Windows.UIElement.PreviewDragEnter> evento associado subjacente <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2585">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewDragEnter> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDragEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-2586">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-2586">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-2587">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-2587">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewDragEnterEvent>|  
|<span data-ttu-id="3347b-2588">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-2588">Routing strategy</span></span>|<span data-ttu-id="3347b-2589">O túnel</span><span class="sxs-lookup"><span data-stu-id="3347b-2589">Tunneling</span></span>|  
|<span data-ttu-id="3347b-2590">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-2590">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="3347b-2591">O evento por propagação correspondente é <xref:System.Windows.UIElement.DragEnter>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2591">The corresponding bubbling event is <xref:System.Windows.UIElement.DragEnter>.</span></span>  
  
-   <span data-ttu-id="3347b-2592">Substituir <xref:System.Windows.UIElement.OnPreviewDragEnter%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-2592">Override <xref:System.Windows.UIElement.OnPreviewDragEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewDragEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDragEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewDragEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-2593">Identifica o evento roteado <see cref="E:System.Windows.UIElement.PreviewDragEnter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2593">Identifies the <see cref="E:System.Windows.UIElement.PreviewDragEnter" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2594">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-2594">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-2595">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2595">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-2596">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-2596">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-2597">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2597">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-2598">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2598">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewDragLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragLeave As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragLeave;" />
      <MemberSignature Language="F#" Value="member this.PreviewDragLeave : System.Windows.DragEventHandler " Usage="member this.PreviewDragLeave : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-2599">Ocorre quando o sistema de entrada relata um evento arrastar subjacente com este elemento como a origem de arrastar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2599">Occurs when the input system reports an underlying drag event with this element as the drag origin.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2600">Esse evento cria um alias para o <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.UIElement.PreviewDragLeave> faz parte da classe a lista de membros quando <xref:System.Windows.UIElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="3347b-2600">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewDragLeave> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="3347b-2601">Manipuladores de eventos que estão anexados para o <xref:System.Windows.UIElement.PreviewDragLeave> evento associado subjacente <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2601">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewDragLeave> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDragLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-2602">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-2602">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-2603">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-2603">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewDragLeaveEvent>|  
|<span data-ttu-id="3347b-2604">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-2604">Routing strategy</span></span>|<span data-ttu-id="3347b-2605">O túnel</span><span class="sxs-lookup"><span data-stu-id="3347b-2605">Tunneling</span></span>|  
|<span data-ttu-id="3347b-2606">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-2606">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="3347b-2607">O evento por propagação correspondente é <xref:System.Windows.UIElement.DragLeave>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2607">The corresponding bubbling event is <xref:System.Windows.UIElement.DragLeave>.</span></span>  
  
-   <span data-ttu-id="3347b-2608">Substituir <xref:System.Windows.UIElement.OnPreviewDragLeave%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-2608">Override <xref:System.Windows.UIElement.OnPreviewDragLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewDragLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDragLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewDragLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-2609">Identifica o evento roteado <see cref="E:System.Windows.UIElement.PreviewDragLeave" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2609">Identifies the <see cref="E:System.Windows.UIElement.PreviewDragLeave" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2610">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-2610">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-2611">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2611">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-2612">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-2612">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-2613">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2613">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-2614">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2614">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragOver">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragOver;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragOver" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewDragOver" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragOver As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragOver;" />
      <MemberSignature Language="F#" Value="member this.PreviewDragOver : System.Windows.DragEventHandler " Usage="member this.PreviewDragOver : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-2615">Ocorre quando o sistema de entrada relata um evento do tipo "arrastar" subjacente com esse elemento como a reprodução automática potencial.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2615">Occurs when the input system reports an underlying drag event with this element as the potential drop target.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2616">Esse evento cria um alias para o <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.UIElement.PreviewDragOver> faz parte da classe a lista de membros quando <xref:System.Windows.UIElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="3347b-2616">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewDragOver> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="3347b-2617">Manipuladores de eventos que estão anexados para o <xref:System.Windows.UIElement.PreviewDragOver> evento associado subjacente <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2617">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewDragOver> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDragOver"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-2618">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-2618">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-2619">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-2619">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewDragOverEvent>|  
|<span data-ttu-id="3347b-2620">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-2620">Routing strategy</span></span>|<span data-ttu-id="3347b-2621">O túnel</span><span class="sxs-lookup"><span data-stu-id="3347b-2621">Tunneling</span></span>|  
|<span data-ttu-id="3347b-2622">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-2622">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="3347b-2623">O evento por propagação correspondente é <xref:System.Windows.UIElement.DragOver>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2623">The corresponding bubbling event is <xref:System.Windows.UIElement.DragOver>.</span></span>  
  
-   <span data-ttu-id="3347b-2624">Substituir <xref:System.Windows.UIElement.OnPreviewDragOver%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-2624">Override <xref:System.Windows.UIElement.OnPreviewDragOver%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragOverEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragOverEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragOverEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewDragOverEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragOverEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragOverEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDragOverEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewDragOverEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-2625">Identifica o evento roteado <see cref="E:System.Windows.UIElement.PreviewDragOver" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2625">Identifies the <see cref="E:System.Windows.UIElement.PreviewDragOver" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2626">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-2626">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-2627">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2627">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-2628">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-2628">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-2629">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2629">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-2630">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2630">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDrop">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDrop;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDrop" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewDrop" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDrop As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDrop;" />
      <MemberSignature Language="F#" Value="member this.PreviewDrop : System.Windows.DragEventHandler " Usage="member this.PreviewDrop : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-2631">Ocorre quando o sistema de entrada relata um evento soltar subjacente com esse elemento sendo uma reprodução automática.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2631">Occurs when the input system reports an underlying drop event with this element as the drop target.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2632">Esse evento cria um alias para o <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.UIElement.PreviewDrop> faz parte da classe a lista de membros quando <xref:System.Windows.UIElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="3347b-2632">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewDrop> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="3347b-2633">Manipuladores de eventos que estão anexados para o <xref:System.Windows.UIElement.PreviewDrop> evento associado subjacente <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2633">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewDrop> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDrop"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-2634">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-2634">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-2635">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-2635">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewDropEvent>|  
|<span data-ttu-id="3347b-2636">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-2636">Routing strategy</span></span>|<span data-ttu-id="3347b-2637">O túnel</span><span class="sxs-lookup"><span data-stu-id="3347b-2637">Tunneling</span></span>|  
|<span data-ttu-id="3347b-2638">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-2638">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="3347b-2639">O evento por propagação correspondente é <xref:System.Windows.UIElement.Drop>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2639">The corresponding bubbling event is <xref:System.Windows.UIElement.Drop>.</span></span>  
  
-   <span data-ttu-id="3347b-2640">Substituir <xref:System.Windows.UIElement.OnPreviewDrop%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-2640">Override <xref:System.Windows.UIElement.OnPreviewDrop%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDropEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDropEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDropEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewDropEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDropEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDropEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDropEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewDropEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-2641">Identifica o evento roteado <see cref="E:System.Windows.UIElement.PreviewDrop" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2641">Identifies the <see cref="E:System.Windows.UIElement.PreviewDrop" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2642">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-2642">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-2643">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2643">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-2644">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-2644">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-2645">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2645">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-2646">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2646">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGiveFeedback">
      <MemberSignature Language="C#" Value="public event System.Windows.GiveFeedbackEventHandler PreviewGiveFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.GiveFeedbackEventHandler PreviewGiveFeedback" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewGiveFeedback" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewGiveFeedback As GiveFeedbackEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::GiveFeedbackEventHandler ^ PreviewGiveFeedback;" />
      <MemberSignature Language="F#" Value="member this.PreviewGiveFeedback : System.Windows.GiveFeedbackEventHandler " Usage="member this.PreviewGiveFeedback : System.Windows.GiveFeedbackEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.GiveFeedbackEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-2647">Ocorre quando uma operação de arrastar e soltar se inicia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2647">Occurs when a drag-and-drop operation is started.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2648">O <xref:System.Windows.UIElement.PreviewGiveFeedback> evento permite que a origem de um evento de arrastar para modificar a aparência do ponteiro do mouse, para dar ao usuário feedback visual durante uma operação de arrastar e soltar.</span><span class="sxs-lookup"><span data-stu-id="3347b-2648">The <xref:System.Windows.UIElement.PreviewGiveFeedback> event enables the source of a drag event to modify the appearance of the mouse pointer, in order to give the user visual feedback during a drag-and-drop operation.</span></span>  
  
 <span data-ttu-id="3347b-2649">Esse evento cria um alias para o <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.UIElement.PreviewGiveFeedback> faz parte da classe a lista de membros quando <xref:System.Windows.UIElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="3347b-2649">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewGiveFeedback> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="3347b-2650">Manipuladores de eventos que estão anexados para o <xref:System.Windows.UIElement.PreviewGiveFeedback> evento associado subjacente <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2650">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewGiveFeedback> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewGiveFeedback"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-2651">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-2651">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-2652">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-2652">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewGiveFeedbackEvent>|  
|<span data-ttu-id="3347b-2653">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-2653">Routing strategy</span></span>|<span data-ttu-id="3347b-2654">O túnel</span><span class="sxs-lookup"><span data-stu-id="3347b-2654">Tunneling</span></span>|  
|<span data-ttu-id="3347b-2655">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-2655">Delegate</span></span>|<xref:System.Windows.GiveFeedbackEventHandler>|  
  
-   <span data-ttu-id="3347b-2656">O evento por propagação correspondente é <xref:System.Windows.UIElement.GiveFeedback>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2656">The corresponding bubbling event is <xref:System.Windows.UIElement.GiveFeedback>.</span></span>  
  
-   <span data-ttu-id="3347b-2657">Substituir <xref:System.Windows.UIElement.OnPreviewGiveFeedback%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-2657">Override <xref:System.Windows.UIElement.OnPreviewGiveFeedback%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGiveFeedbackEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewGiveFeedbackEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewGiveFeedbackEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewGiveFeedbackEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewGiveFeedbackEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewGiveFeedbackEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewGiveFeedbackEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewGiveFeedbackEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-2658">Identifica o evento roteado <see cref="E:System.Windows.UIElement.PreviewGiveFeedback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2658">Identifies the <see cref="E:System.Windows.UIElement.PreviewGiveFeedback" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2659">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-2659">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-2660">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2660">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-2661">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-2661">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-2662">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2662">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-2663">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2663">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGotKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler PreviewGotKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler PreviewGotKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewGotKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewGotKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ PreviewGotKeyboardFocus;" />
      <MemberSignature Language="F#" Value="member this.PreviewGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " Usage="member this.PreviewGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewGotKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-2664">Ocorre quando o teclado está focalizado neste elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2664">Occurs when the keyboard is focused on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2665">Como este evento usa o encapsulamento de roteamento, o elemento que tem o foco pode ser um elemento filho em vez do elemento no qual o manipulador de eventos, na verdade, está anexado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2665">Because this event uses tunneling routing, the element that has focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="3347b-2666">Verifique o <xref:System.Windows.RoutedEventArgs.Source%2A> nos dados do evento para determinar o elemento real que tem o foco.</span><span class="sxs-lookup"><span data-stu-id="3347b-2666">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has focus.</span></span>  
  
 <span data-ttu-id="3347b-2667">Esse evento cria um alias para o <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.UIElement.PreviewGotKeyboardFocus> faz parte da classe a lista de membros quando <xref:System.Windows.UIElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="3347b-2667">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewGotKeyboardFocus> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="3347b-2668">Manipuladores de eventos que estão anexados para o <xref:System.Windows.UIElement.PreviewGotKeyboardFocus> evento associado subjacente <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2668">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewGotKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewGotKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-2669">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-2669">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-2670">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-2670">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewGotKeyboardFocusEvent>|  
|<span data-ttu-id="3347b-2671">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-2671">Routing strategy</span></span>|<span data-ttu-id="3347b-2672">O túnel</span><span class="sxs-lookup"><span data-stu-id="3347b-2672">Tunneling</span></span>|  
|<span data-ttu-id="3347b-2673">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-2673">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="3347b-2674">O evento por propagação correspondente é <xref:System.Windows.UIElement.GotKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2674">The corresponding bubbling event is <xref:System.Windows.UIElement.GotKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="3347b-2675">Substituir <xref:System.Windows.UIElement.OnPreviewGotKeyboardFocus%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-2675">Override <xref:System.Windows.UIElement.OnPreviewGotKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewLostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="PreviewGotKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewGotKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewGotKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewGotKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewGotKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewGotKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-2676">Identifica o evento roteado <see cref="E:System.Windows.UIElement.PreviewGotKeyboardFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2676">Identifies the <see cref="E:System.Windows.UIElement.PreviewGotKeyboardFocus" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2677">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-2677">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-2678">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2678">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-2679">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-2679">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-2680">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2680">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-2681">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2681">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler PreviewKeyDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler PreviewKeyDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewKeyDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewKeyDown As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ PreviewKeyDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewKeyDown : System.Windows.Input.KeyEventHandler " Usage="member this.PreviewKeyDown : System.Windows.Input.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewKeyDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-2682">Ocorre quando uma tecla é pressionada enquanto o foco está neste elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2682">Occurs when a key is pressed while focus is on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2683">Manipulação de chave interage com outros recursos de plataforma, como a composição de texto e dos comandos.</span><span class="sxs-lookup"><span data-stu-id="3347b-2683">Key handling interacts with other platform features such as commanding and text composition.</span></span> <span data-ttu-id="3347b-2684">O <xref:System.Windows.UIElement.KeyDown> é um evento de entrada de texto de nível inferior pode não se comportar conforme o esperado em certos controles.</span><span class="sxs-lookup"><span data-stu-id="3347b-2684">The <xref:System.Windows.UIElement.KeyDown> event is a lower-level text input event that might not behave as expected on certain controls.</span></span> <span data-ttu-id="3347b-2685">Isso ocorre porque alguns controles têm a composição de controle ou manipulação de classe que fornece uma versão de nível mais alto de texto, manipulação de entrada e eventos relacionados.</span><span class="sxs-lookup"><span data-stu-id="3347b-2685">This is because some controls have control compositing or class handling that provides a higher-level version of text input handling and related events.</span></span>  
  
 <span data-ttu-id="3347b-2686">Esse evento cria um alias para o <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.UIElement.PreviewKeyDown> faz parte da classe a lista de membros quando <xref:System.Windows.UIElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="3347b-2686">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewKeyDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="3347b-2687">Manipuladores de eventos que estão anexados para o <xref:System.Windows.UIElement.PreviewKeyDown> evento associado subjacente <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2687">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewKeyDown> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewKeyDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-2688">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-2688">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-2689">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-2689">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewKeyDownEvent>|  
|<span data-ttu-id="3347b-2690">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-2690">Routing strategy</span></span>|<span data-ttu-id="3347b-2691">O túnel</span><span class="sxs-lookup"><span data-stu-id="3347b-2691">Tunneling</span></span>|  
|<span data-ttu-id="3347b-2692">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-2692">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="3347b-2693">O evento por propagação correspondente é <xref:System.Windows.UIElement.KeyDown>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2693">The corresponding bubbling event is <xref:System.Windows.UIElement.KeyDown>.</span></span>  
  
-   <span data-ttu-id="3347b-2694">Substituir <xref:System.Windows.UIElement.OnPreviewKeyDown%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-2694">Override <xref:System.Windows.UIElement.OnPreviewKeyDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewKeyUp" />
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewKeyDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewKeyDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewKeyDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-2695">Identifica o evento roteado <see cref="E:System.Windows.UIElement.PreviewKeyDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2695">Identifies the <see cref="E:System.Windows.UIElement.PreviewKeyDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2696">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-2696">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-2697">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2697">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-2698">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-2698">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-2699">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2699">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-2700">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2700">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler PreviewKeyUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler PreviewKeyUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewKeyUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewKeyUp As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ PreviewKeyUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewKeyUp : System.Windows.Input.KeyEventHandler " Usage="member this.PreviewKeyUp : System.Windows.Input.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewKeyUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-2701">Ocorre quando uma chave é liberada enquanto o foco está neste elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2701">Occurs when a key is released while focus is on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2702">Manipulação de chave interage com outros recursos de plataforma, como a composição de texto e dos comandos.</span><span class="sxs-lookup"><span data-stu-id="3347b-2702">Key handling interacts with other platform features such as commanding and text composition.</span></span> <span data-ttu-id="3347b-2703">O <xref:System.Windows.UIElement.KeyUp> é um evento de entrada de texto de nível inferior pode não se comportar conforme o esperado em certos controles.</span><span class="sxs-lookup"><span data-stu-id="3347b-2703">The <xref:System.Windows.UIElement.KeyUp> event is a lower-level text input event that might not behave as expected on certain controls.</span></span> <span data-ttu-id="3347b-2704">Isso ocorre porque alguns controles têm a composição de controle ou manipulação de classe que fornece uma versão de nível mais alto de texto, manipulação de entrada e eventos relacionados.</span><span class="sxs-lookup"><span data-stu-id="3347b-2704">This is because some controls have control compositing or class handling that provides a higher-level version of text input handling and related events.</span></span> <span data-ttu-id="3347b-2705">Para obter detalhes, consulte a documentação de controles individuais.</span><span class="sxs-lookup"><span data-stu-id="3347b-2705">For details, check the documentation for individual controls.</span></span>  
  
 <span data-ttu-id="3347b-2706">Esse evento cria um alias para o <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.UIElement.PreviewKeyUp> faz parte da classe a lista de membros quando <xref:System.Windows.UIElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="3347b-2706">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewKeyUp> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="3347b-2707">Manipuladores de eventos que estão anexados para o <xref:System.Windows.UIElement.PreviewKeyUp> evento associado subjacente <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2707">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewKeyUp> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewKeyUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-2708">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-2708">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-2709">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-2709">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewKeyUpEvent>|  
|<span data-ttu-id="3347b-2710">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-2710">Routing strategy</span></span>|<span data-ttu-id="3347b-2711">O túnel</span><span class="sxs-lookup"><span data-stu-id="3347b-2711">Tunneling</span></span>|  
|<span data-ttu-id="3347b-2712">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-2712">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="3347b-2713">O evento por propagação correspondente é <xref:System.Windows.UIElement.KeyUp>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2713">The corresponding bubbling event is <xref:System.Windows.UIElement.KeyUp>.</span></span>  
  
-   <span data-ttu-id="3347b-2714">Substituir <xref:System.Windows.UIElement.OnPreviewKeyUp%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-2714">Override <xref:System.Windows.UIElement.OnPreviewKeyUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewKeyUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewKeyUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewKeyUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-2715">Identifica o evento roteado <see cref="E:System.Windows.UIElement.PreviewKeyUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2715">Identifies the <see cref="E:System.Windows.UIElement.PreviewKeyUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2716">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-2716">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-2717">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2717">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-2718">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-2718">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-2719">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2719">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-2720">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2720">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewLostKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler PreviewLostKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler PreviewLostKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewLostKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewLostKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ PreviewLostKeyboardFocus;" />
      <MemberSignature Language="F#" Value="member this.PreviewLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " Usage="member this.PreviewLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewLostKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-2721">Ocorre quando o teclado não está mais focalizado neste elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2721">Occurs when the keyboard is no longer focused on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2722">Como este evento usa o encapsulamento de roteamento, o elemento que perdeu o foco pode ser um elemento filho em vez do elemento no qual o manipulador de eventos, na verdade, está anexado.</span><span class="sxs-lookup"><span data-stu-id="3347b-2722">Because this event uses tunneling routing, the element that lost focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="3347b-2723">Verifique o <xref:System.Windows.RoutedEventArgs.Source%2A> nos dados do evento para determinar o elemento real que perdeu o foco.</span><span class="sxs-lookup"><span data-stu-id="3347b-2723">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.</span></span>  
  
 <span data-ttu-id="3347b-2724">Esse evento cria um alias para o <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.UIElement.PreviewLostKeyboardFocus> faz parte da classe a lista de membros quando <xref:System.Windows.UIElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="3347b-2724">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewLostKeyboardFocus> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="3347b-2725">Manipuladores de eventos que estão anexados para o <xref:System.Windows.UIElement.PreviewLostKeyboardFocus> evento associado subjacente <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2725">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewLostKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewLostKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-2726">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-2726">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-2727">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-2727">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewLostKeyboardFocusEvent>|  
|<span data-ttu-id="3347b-2728">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-2728">Routing strategy</span></span>|<span data-ttu-id="3347b-2729">O túnel</span><span class="sxs-lookup"><span data-stu-id="3347b-2729">Tunneling</span></span>|  
|<span data-ttu-id="3347b-2730">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-2730">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="3347b-2731">O evento por propagação correspondente é <xref:System.Windows.UIElement.LostKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2731">The corresponding bubbling event is <xref:System.Windows.UIElement.LostKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="3347b-2732">Substituir <xref:System.Windows.UIElement.OnPreviewLostKeyboardFocus%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-2732">Override <xref:System.Windows.UIElement.OnPreviewLostKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewGotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="PreviewLostKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewLostKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewLostKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewLostKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewLostKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewLostKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-2733">Identifica o evento roteado <see cref="E:System.Windows.UIElement.PreviewLostKeyboardFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2733">Identifies the <see cref="E:System.Windows.UIElement.PreviewLostKeyboardFocus" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2734">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-2734">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-2735">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2735">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-2736">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-2736">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-2737">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2737">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-2738">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2738">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-2739">Ocorre quando qualquer botão do mouse é pressionado enquanto o ponteiro está sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2739">Occurs when any mouse button is pressed while the pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2740">Esse evento cria um alias para o <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.UIElement.PreviewMouseDown> faz parte da classe a lista de membros quando <xref:System.Windows.UIElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="3347b-2740">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewMouseDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="3347b-2741">Manipuladores de eventos que estão anexados para o <xref:System.Windows.UIElement.PreviewMouseDown> evento associado subjacente <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2741">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewMouseDown> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="3347b-2742">O <xref:System.Windows.UIElement.PreviewMouseDown> é normalmente gerado junto com qualquer um <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> ou <xref:System.Windows.UIElement.PreviewMouseRightButtonDown>, que correspondem a um pressionamento de um dos dois botões de mouse padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-2742">The <xref:System.Windows.UIElement.PreviewMouseDown> event is often raised together with either <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> or <xref:System.Windows.UIElement.PreviewMouseRightButtonDown>, which correspond to a press of one of the two standard mouse buttons.</span></span> <span data-ttu-id="3347b-2743"><xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> e <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> também são eventos roteados, mas eles são eventos roteados diretos e o evento apropriado do botão específico é gerado quando o <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> evento atinge esse elemento ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2743"><xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> and <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="3347b-2744">Consulte os comentários para <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> ou <xref:System.Windows.UIElement.PreviewMouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2744">See Remarks for <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> or <xref:System.Windows.UIElement.PreviewMouseRightButtonDown>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-2745">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-2745">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-2746">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-2746">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseDownEvent>|  
|<span data-ttu-id="3347b-2747">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-2747">Routing strategy</span></span>|<span data-ttu-id="3347b-2748">O túnel</span><span class="sxs-lookup"><span data-stu-id="3347b-2748">Tunneling</span></span>|  
|<span data-ttu-id="3347b-2749">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-2749">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="3347b-2750">O evento por propagação correspondente é <xref:System.Windows.UIElement.MouseDown>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2750">The corresponding bubbling event is <xref:System.Windows.UIElement.MouseDown>.</span></span>  
  
-   <span data-ttu-id="3347b-2751">Substituir <xref:System.Windows.UIElement.OnPreviewMouseDown%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-2751">Override <xref:System.Windows.UIElement.OnPreviewMouseDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewMouseDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-2752">Identifica o evento roteado <see cref="E:System.Windows.UIElement.PreviewMouseDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2752">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2753">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-2753">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-2754">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2754">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-2755">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-2755">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-2756">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2756">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-2757">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2757">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseLeftButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseLeftButtonDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseLeftButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-2758">Ocorre quando o botão esquerdo do mouse é pressionado enquanto o ponteiro do mouse está sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2758">Occurs when the left mouse button is pressed while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2759">Embora isso pareça seguem uma rota de túnel pela árvore de elemento, na verdade, é um evento roteado direto que é gerado e geradas novamente ao longo da árvore de elementos por cada <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2759">Although this  seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="3347b-2760">Esse evento é um dos vários eventos relacionados que relatam as especificações de botão do mouse de uma subjacente <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> evento, que é um evento anexado que é processado por cada elemento ao longo de uma rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2760">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="3347b-2761">Os dados do evento desse evento expõe os dados do evento de subjacente <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="3347b-2761">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="3347b-2762">Se esse evento é marcado como manipulado ao longo da rota de evento, os eventos específicos do botão do mouse ainda são acionados; No entanto, os manipuladores dos eventos específicos para o botão do mouse devem ser adicionados explicitamente chamando <xref:System.Windows.UIElement.AddHandler%2A>, com a opção para lidar com eventos que já estão marcados como manipulados, para ser ouvintes para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2762">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="3347b-2763">Se você marcar <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> tratadas, você essencialmente marcar <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> manipulado para todas as outras escutas ao longo da rota e em todos os eventos relacionados.</span><span class="sxs-lookup"><span data-stu-id="3347b-2763">If you mark <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> handled, you are essentially marking <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span> <span data-ttu-id="3347b-2764">Isso possivelmente inclui eventos gerado pelo manipulador de classe, como <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2764">This possibly includes class-handler generated events such as <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick>.</span></span>  
  
 <span data-ttu-id="3347b-2765">Conceitualmente, pensar esse evento (e outros eventos do botão do mouse em <xref:System.Windows.UIElement>) para ser um "serviço" do mouse (com a definição de serviço fornecida pelo <xref:System.Windows.Input.Mouse> classe).</span><span class="sxs-lookup"><span data-stu-id="3347b-2765">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="3347b-2766">O evento adiciona a conveniência de não precisar verificar os estados do botão do mouse (esquerda-direita, superior / inferior) dos eventos originais do mouse nos dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2766">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="3347b-2767">Para cenários mais avançados, como a verificação de estados de botões não padrão, você talvez precise usar o [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] sobre o <xref:System.Windows.Input.Mouse> classe em vez no <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2767">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseLeftButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-2768">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-2768">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-2769">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-2769">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseLeftButtonDownEvent>|  
|<span data-ttu-id="3347b-2770">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-2770">Routing strategy</span></span>|<span data-ttu-id="3347b-2771">Direto</span><span class="sxs-lookup"><span data-stu-id="3347b-2771">Direct</span></span>|  
|<span data-ttu-id="3347b-2772">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-2772">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="3347b-2773">Substituir <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-2773">Override <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseLeftButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseLeftButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseLeftButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseLeftButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseLeftButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseLeftButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseLeftButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewMouseLeftButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-2774">Identifica o evento roteado <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2774">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2775">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-2775">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-2776">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2776">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-2777">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-2777">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-2778">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2778">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-2779">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2779">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseLeftButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseLeftButtonUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseLeftButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-2780">Ocorre quando o botão esquerdo do mouse é liberado enquanto o ponteiro do mouse está sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2780">Occurs when the left mouse button is released while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2781">Embora isso pareça seguem uma rota de túnel pela árvore de elemento, na verdade, é um evento roteado direto que é gerado e geradas novamente ao longo da árvore de elementos por cada <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2781">Although this  seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="3347b-2782">Esse evento é um dos vários eventos relacionados que relatam as especificações de botão do mouse de uma subjacente <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> evento, que é um evento anexado que é processado por cada elemento ao longo de uma rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2782">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="3347b-2783">Os dados do evento desse evento expõe os dados do evento de subjacente <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="3347b-2783">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="3347b-2784">Se esse evento é marcado como manipulado ao longo da rota de evento, os eventos específicos do botão do mouse ainda são acionados; No entanto, os manipuladores dos eventos específicos para o botão do mouse devem ser adicionados explicitamente chamando <xref:System.Windows.UIElement.AddHandler%2A>, com a opção para lidar com eventos que já estão marcados como manipulados, para ser ouvintes para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2784">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="3347b-2785">Se você marcar <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> tratadas, você essencialmente marcar <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> manipulado para todas as outras escutas ao longo da rota e em todos os eventos relacionados.</span><span class="sxs-lookup"><span data-stu-id="3347b-2785">If you mark <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> handled, you are essentially marking <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span>  
  
 <span data-ttu-id="3347b-2786">Conceitualmente, pensar esse evento (e outros eventos do botão do mouse em <xref:System.Windows.UIElement>) para ser um "serviço" do mouse (com a definição de serviço fornecida pelo <xref:System.Windows.Input.Mouse> classe).</span><span class="sxs-lookup"><span data-stu-id="3347b-2786">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="3347b-2787">O evento adiciona a conveniência de não precisar verificar os estados do botão do mouse (esquerda-direita, superior / inferior) dos eventos originais do mouse nos dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2787">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="3347b-2788">Para cenários mais avançados, como a verificação de estados de botões não padrão, você talvez precise usar o [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] sobre o <xref:System.Windows.Input.Mouse> classe em vez no <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2788">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseLeftButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-2789">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-2789">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-2790">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-2790">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseLeftButtonUpEvent>|  
|<span data-ttu-id="3347b-2791">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-2791">Routing strategy</span></span>|<span data-ttu-id="3347b-2792">Direto</span><span class="sxs-lookup"><span data-stu-id="3347b-2792">Direct</span></span>|  
|<span data-ttu-id="3347b-2793">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-2793">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="3347b-2794">Substituir <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonUp%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-2794">Override <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseLeftButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseLeftButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseLeftButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseLeftButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseLeftButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseLeftButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewMouseLeftButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-2795">Identifica o evento roteado <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2795">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2796">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-2796">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-2797">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2797">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-2798">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-2798">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-2799">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2799">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-2800">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2800">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler PreviewMouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler PreviewMouseMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseMove As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ PreviewMouseMove;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseMove : System.Windows.Input.MouseEventHandler " Usage="member this.PreviewMouseMove : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-2801">Ocorre quando o ponteiro do mouse se move enquanto está sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2801">Occurs when the mouse pointer moves while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2802">Esse evento ocorre quando o ponteiro do mouse entra pela primeira vez em que os limites do elemento, e também quando o ponteiro do mouse se move enquanto ainda permanecem dentro dos limites do elemento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2802">This event occurs both when the mouse pointer first enters into the element bounds, and also when the mouse pointer moves while still remaining within the element bounds.</span></span>  
  
 <span data-ttu-id="3347b-2803">Esse evento cria um alias para o <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.UIElement.PreviewMouseMove> faz parte da classe a lista de membros quando <xref:System.Windows.UIElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="3347b-2803">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewMouseMove> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="3347b-2804">Manipuladores de eventos que estão anexados para o <xref:System.Windows.UIElement.PreviewMouseMove> evento associado subjacente <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2804">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewMouseMove> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewMouseMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-2805">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-2805">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-2806">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-2806">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseMoveEvent>|  
|<span data-ttu-id="3347b-2807">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-2807">Routing strategy</span></span>|<span data-ttu-id="3347b-2808">O túnel</span><span class="sxs-lookup"><span data-stu-id="3347b-2808">Tunneling</span></span>|  
|<span data-ttu-id="3347b-2809">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-2809">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="3347b-2810">O evento por propagação correspondente é <xref:System.Windows.UIElement.MouseMove>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2810">The corresponding bubbling event is <xref:System.Windows.UIElement.MouseMove>.</span></span>  
  
-   <span data-ttu-id="3347b-2811">Substituir <xref:System.Windows.UIElement.OnPreviewMouseMove%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-2811">Override <xref:System.Windows.UIElement.OnPreviewMouseMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewMouseMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-2812">Identifica o evento roteado <see cref="E:System.Windows.UIElement.PreviewMouseMove" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2812">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseMove" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2813">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-2813">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-2814">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2814">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-2815">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-2815">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-2816">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2816">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-2817">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2817">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseRightButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseRightButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseRightButtonDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseRightButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-2818">Ocorre quando o botão direito do mouse é pressionado enquanto o ponteiro do mouse está sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2818">Occurs when the right mouse button is pressed while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2819">Embora isso pareça seguem uma rota de túnel pela árvore de elemento, na verdade, é um evento roteado direto que é gerado e geradas novamente ao longo da árvore de elementos por cada <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2819">Although this  seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="3347b-2820">Esse evento é um dos vários eventos relacionados que relatam as especificações de botão do mouse de uma subjacente <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> evento, que é um evento anexado que é processado por cada elemento ao longo de uma rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2820">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="3347b-2821">Os dados do evento desse evento expõe os dados do evento de subjacente <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="3347b-2821">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="3347b-2822">Se esse evento é marcado como manipulado ao longo da rota de evento, os eventos específicos do botão do mouse ainda são acionados; No entanto, os manipuladores dos eventos específicos para o botão do mouse devem ser adicionados explicitamente chamando <xref:System.Windows.UIElement.AddHandler%2A>, com a opção para lidar com eventos que já estão marcados como manipulados, para ser ouvintes para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2822">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="3347b-2823">Se você marcar <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> tratadas, você essencialmente marcar <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> manipulado para todas as outras escutas ao longo da rota e em todos os eventos relacionados.</span><span class="sxs-lookup"><span data-stu-id="3347b-2823">If you mark <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> handled, you are essentially marking <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span> <span data-ttu-id="3347b-2824">Isso possivelmente inclui eventos gerado pelo manipulador de classe, como <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2824">This possibly includes class-handler generated events such as <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick>.</span></span>  
  
 <span data-ttu-id="3347b-2825">Conceitualmente, pensar esse evento (e outros eventos do botão do mouse em <xref:System.Windows.UIElement>) para ser um "serviço" do mouse (com a definição de serviço fornecida pelo <xref:System.Windows.Input.Mouse> classe).</span><span class="sxs-lookup"><span data-stu-id="3347b-2825">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="3347b-2826">O evento adiciona a conveniência de não precisar verificar os estados do botão do mouse (esquerda-direita, superior / inferior) dos eventos originais do mouse nos dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2826">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="3347b-2827">Para cenários mais avançados, como a verificação de estados de botões não padrão, você talvez precise usar o [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] sobre o <xref:System.Windows.Input.Mouse> classe em vez no <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2827">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseRightButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-2828">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-2828">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-2829">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-2829">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseRightButtonDownEvent>|  
|<span data-ttu-id="3347b-2830">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-2830">Routing strategy</span></span>|<span data-ttu-id="3347b-2831">Direto</span><span class="sxs-lookup"><span data-stu-id="3347b-2831">Direct</span></span>|  
|<span data-ttu-id="3347b-2832">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-2832">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="3347b-2833">Substituir <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-2833">Override <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseRightButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseRightButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseRightButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseRightButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseRightButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseRightButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseRightButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewMouseRightButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-2834">Identifica o evento roteado <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2834">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2835">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-2835">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-2836">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2836">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-2837">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-2837">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-2838">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2838">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-2839">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2839">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseRightButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseRightButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseRightButtonUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseRightButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-2840">Ocorre quando o botão direito do mouse é liberado enquanto o ponteiro do mouse está sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2840">Occurs when the right mouse button is released while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2841">Embora isso pareça seguem uma rota de túnel pela árvore de elemento, na verdade, é um evento roteado direto que é gerado e geradas novamente ao longo da árvore de elementos por cada <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2841">Although this  seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="3347b-2842">Esse evento é um dos vários eventos relacionados que relatam as especificações de botão do mouse de uma subjacente <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> evento, que é um evento anexado que é processado por cada elemento ao longo de uma rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2842">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="3347b-2843">Os dados do evento desse evento expõe os dados do evento de subjacente <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="3347b-2843">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="3347b-2844">Se esse evento é marcado como manipulado ao longo da rota de evento, os eventos específicos do botão do mouse ainda são acionados; No entanto, os manipuladores dos eventos específicos para o botão do mouse devem ser adicionados explicitamente chamando <xref:System.Windows.UIElement.AddHandler%2A>, com a opção para lidar com eventos que já estão marcados como manipulados, para ser ouvintes para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2844">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="3347b-2845">Se você marcar <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> tratadas, você essencialmente marcar <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> manipulado para todas as outras escutas ao longo da rota e em todos os eventos relacionados.</span><span class="sxs-lookup"><span data-stu-id="3347b-2845">If you mark <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> handled, you are essentially marking <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span>  
  
 <span data-ttu-id="3347b-2846">Conceitualmente, pensar esse evento (e outros eventos do botão do mouse em <xref:System.Windows.UIElement>) para ser um "serviço" do mouse (com a definição de serviço fornecida pelo <xref:System.Windows.Input.Mouse> classe).</span><span class="sxs-lookup"><span data-stu-id="3347b-2846">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="3347b-2847">O evento adiciona a conveniência de não precisar verificar os estados do botão do mouse (esquerda-direita, superior / inferior) dos eventos originais do mouse nos dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2847">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="3347b-2848">Para cenários mais avançados, como a verificação de estados de botões não padrão, você talvez precise usar o [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] sobre o <xref:System.Windows.Input.Mouse> classe em vez no <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2848">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseRightButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-2849">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-2849">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-2850">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-2850">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseRightButtonUpEvent>|  
|<span data-ttu-id="3347b-2851">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-2851">Routing strategy</span></span>|<span data-ttu-id="3347b-2852">Direto</span><span class="sxs-lookup"><span data-stu-id="3347b-2852">Direct</span></span>|  
|<span data-ttu-id="3347b-2853">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-2853">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="3347b-2854">Substituir <xref:System.Windows.UIElement.OnPreviewMouseRightButtonUp%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-2854">Override <xref:System.Windows.UIElement.OnPreviewMouseRightButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseRightButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseRightButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseRightButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseRightButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseRightButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseRightButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseRightButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewMouseRightButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-2855">Identifica o evento roteado <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2855">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2856">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-2856">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-2857">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2857">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-2858">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-2858">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-2859">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2859">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-2860">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2860">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-2861">Ocorre quando qualquer botão do mouse é liberado enquanto o ponteiro do mouse está sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2861">Occurs when any mouse button is released while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2862">Esse evento cria um alias para o <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.UIElement.PreviewMouseUp> faz parte da classe a lista de membros quando <xref:System.Windows.UIElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="3347b-2862">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewMouseUp> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="3347b-2863">Manipuladores de eventos que estão anexados para o <xref:System.Windows.UIElement.PreviewMouseUp> evento associado subjacente <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2863">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewMouseUp> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="3347b-2864">O <xref:System.Windows.UIElement.PreviewMouseUp> é normalmente gerado junto com qualquer um <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> ou <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>, que correspondem a um pressionamento de um dos dois botões de mouse padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-2864">The <xref:System.Windows.UIElement.PreviewMouseUp> event is often raised together with either <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> or <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>, which correspond to a press of one of the two standard mouse buttons.</span></span> <span data-ttu-id="3347b-2865"><xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> e <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> também são eventos roteados, mas eles são eventos roteados diretos e o evento apropriado do botão específico é gerado quando o <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> evento atinge esse elemento ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2865"><xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> and <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="3347b-2866">Consulte os comentários para <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> ou <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2866">See Remarks for <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> or <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-2867">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-2867">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-2868">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-2868">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseUpEvent>|  
|<span data-ttu-id="3347b-2869">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-2869">Routing strategy</span></span>|<span data-ttu-id="3347b-2870">O túnel</span><span class="sxs-lookup"><span data-stu-id="3347b-2870">Tunneling</span></span>|  
|<span data-ttu-id="3347b-2871">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-2871">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="3347b-2872">O evento por propagação correspondente é <xref:System.Windows.UIElement.MouseUp>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2872">The corresponding bubbling event is <xref:System.Windows.UIElement.MouseUp>.</span></span>  
  
-   <span data-ttu-id="3347b-2873">Substituir <xref:System.Windows.UIElement.OnPreviewMouseUp%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-2873">Override <xref:System.Windows.UIElement.OnPreviewMouseUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewMouseUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-2874">Identifica o evento roteado <see cref="E:System.Windows.UIElement.PreviewMouseUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2874">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2875">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-2875">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-2876">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2876">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-2877">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-2877">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-2878">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2878">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-2879">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2879">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseWheel">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseWheelEventHandler PreviewMouseWheel;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseWheelEventHandler PreviewMouseWheel" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseWheel" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseWheel As MouseWheelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseWheelEventHandler ^ PreviewMouseWheel;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseWheel : System.Windows.Input.MouseWheelEventHandler " Usage="member this.PreviewMouseWheel : System.Windows.Input.MouseWheelEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseWheel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseWheelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-2880">Ocorre quando o usuário gira a roda do mouse enquanto o ponteiro do mouse está sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2880">Occurs when the user rotates the mouse wheel while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2881">Captura de foco ou de mouse têm precedência sobre onde o ponteiro do mouse é; Portanto, se você receber esse evento de um elemento com foco ou capturado, o ponteiro do mouse, na verdade, pode ser em outro elemento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2881">Focus or mouse capture take precedence over where the mouse pointer is; therefore, if you receive this event from a focused or captured element, the mouse pointer might actually be over another element.</span></span>  
  
 <span data-ttu-id="3347b-2882">Esse evento cria um alias para o <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.UIElement.PreviewMouseMove> faz parte da classe a lista de membros quando <xref:System.Windows.UIElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="3347b-2882">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewMouseMove> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="3347b-2883">Manipuladores de eventos que estão anexados para o <xref:System.Windows.UIElement.PreviewMouseMove> evento associado subjacente <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2883">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewMouseMove> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewMouseWheel"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-2884">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-2884">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-2885">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-2885">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseWheelEvent>|  
|<span data-ttu-id="3347b-2886">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-2886">Routing strategy</span></span>|<span data-ttu-id="3347b-2887">O túnel</span><span class="sxs-lookup"><span data-stu-id="3347b-2887">Tunneling</span></span>|  
|<span data-ttu-id="3347b-2888">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-2888">Delegate</span></span>|<xref:System.Windows.Input.MouseWheelEventHandler>|  
  
-   <span data-ttu-id="3347b-2889">O evento por propagação correspondente é <xref:System.Windows.UIElement.MouseWheel>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2889">The corresponding bubbling event is <xref:System.Windows.UIElement.MouseWheel>.</span></span>  
  
-   <span data-ttu-id="3347b-2890">Substituir <xref:System.Windows.UIElement.OnPreviewMouseWheel%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-2890">Override <xref:System.Windows.UIElement.OnPreviewMouseWheel%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseWheelEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseWheelEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseWheelEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseWheelEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseWheelEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseWheelEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseWheelEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewMouseWheelEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-2891">Identifica o evento roteado <see cref="E:System.Windows.UIElement.PreviewMouseWheel" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2891">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseWheel" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2892">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-2892">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-2893">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2893">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-2894">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-2894">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-2895">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2895">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-2896">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2896">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewQueryContinueDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.QueryContinueDragEventHandler PreviewQueryContinueDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.QueryContinueDragEventHandler PreviewQueryContinueDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewQueryContinueDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewQueryContinueDrag As QueryContinueDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::QueryContinueDragEventHandler ^ PreviewQueryContinueDrag;" />
      <MemberSignature Language="F#" Value="member this.PreviewQueryContinueDrag : System.Windows.QueryContinueDragEventHandler " Usage="member this.PreviewQueryContinueDrag : System.Windows.QueryContinueDragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.QueryContinueDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-2897">Ocorre quando há uma alteração no estado do botão do teclado ou do mouse durante uma operação de arrastar e soltar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2897">Occurs when there is a change in the keyboard or mouse button state during a drag-and-drop operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2898">O <xref:System.Windows.UIElement.PreviewQueryContinueDrag> evento permite que a origem do arrasto declarar se a operação de arrastar e soltar deve ser cancelada.</span><span class="sxs-lookup"><span data-stu-id="3347b-2898">The <xref:System.Windows.UIElement.PreviewQueryContinueDrag> event enables the drag source to declare whether the drag-and-drop operation should be canceled.</span></span>  
  
 <span data-ttu-id="3347b-2899">Esse evento cria um alias para o <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.UIElement.PreviewQueryContinueDrag> faz parte da classe a lista de membros quando <xref:System.Windows.UIElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="3347b-2899">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewQueryContinueDrag> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="3347b-2900">Manipuladores de eventos que estão anexados para o <xref:System.Windows.UIElement.PreviewQueryContinueDrag> evento associado subjacente <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2900">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewQueryContinueDrag> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewQueryContinueDrag"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-2901">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-2901">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-2902">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-2902">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewQueryContinueDragEvent>|  
|<span data-ttu-id="3347b-2903">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-2903">Routing strategy</span></span>|<span data-ttu-id="3347b-2904">O túnel</span><span class="sxs-lookup"><span data-stu-id="3347b-2904">Tunneling</span></span>|  
|<span data-ttu-id="3347b-2905">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-2905">Delegate</span></span>|<xref:System.Windows.QueryContinueDragEventHandler>|  
  
-   <span data-ttu-id="3347b-2906">O evento por propagação correspondente é <xref:System.Windows.UIElement.QueryContinueDrag>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2906">The corresponding bubbling event is <xref:System.Windows.UIElement.QueryContinueDrag>.</span></span>  
  
-   <span data-ttu-id="3347b-2907">Substituir <xref:System.Windows.UIElement.OnPreviewQueryContinueDrag%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-2907">Override <xref:System.Windows.UIElement.OnPreviewQueryContinueDrag%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewQueryContinueDragEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewQueryContinueDragEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewQueryContinueDragEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewQueryContinueDragEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewQueryContinueDragEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewQueryContinueDragEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewQueryContinueDragEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewQueryContinueDragEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-2908">Identifica o evento roteado <see cref="E:System.Windows.UIElement.PreviewQueryContinueDrag" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2908">Identifies the <see cref="E:System.Windows.UIElement.PreviewQueryContinueDrag" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2909">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-2909">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-2910">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2910">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-2911">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-2911">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-2912">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2912">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-2913">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2913">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusButtonDown As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ PreviewStylusButtonDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusButtonDown : System.Windows.Input.StylusButtonEventHandler " Usage="member this.PreviewStylusButtonDown : System.Windows.Input.StylusButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-2914">Ocorre quando o botão da caneta é pressionado enquanto o ponteiro está sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2914">Occurs when the stylus button is pressed while the pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2915">Esse evento cria um alias para o <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.UIElement.PreviewStylusButtonDown> faz parte da classe a lista de membros quando <xref:System.Windows.UIElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="3347b-2915">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusButtonDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="3347b-2916">Manipuladores de eventos que estão anexados para o <xref:System.Windows.UIElement.PreviewStylusButtonDown> evento associado subjacente <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2916">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusButtonDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="3347b-2917">Toque, mouse e entrada de caneta existem em uma relação específica.</span><span class="sxs-lookup"><span data-stu-id="3347b-2917">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="3347b-2918">Para obter mais informações, consulte [suporte de entrada de toque no Windows Vista](https://msdn.microsoft.com/library/63f1d71f-03d8-4d83-a174-e3dc7c57bad0) e [visão geral de entrada](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3347b-2918">For more information, see [Touch Input Support in Windows Vista](https://msdn.microsoft.com/library/63f1d71f-03d8-4d83-a174-e3dc7c57bad0) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-2919">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-2919">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-2920">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-2920">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusButtonDownEvent>|  
|<span data-ttu-id="3347b-2921">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-2921">Routing strategy</span></span>|<span data-ttu-id="3347b-2922">O túnel</span><span class="sxs-lookup"><span data-stu-id="3347b-2922">Tunneling</span></span>|  
|<span data-ttu-id="3347b-2923">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-2923">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="3347b-2924">O evento por propagação correspondente é <xref:System.Windows.UIElement.StylusButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2924">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusButtonDown>.</span></span>  
  
-   <span data-ttu-id="3347b-2925">Substituir <xref:System.Windows.UIElement.OnPreviewStylusButtonDown%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-2925">Override <xref:System.Windows.UIElement.OnPreviewStylusButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewStylusButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-2926">Identifica o evento roteado <see cref="E:System.Windows.UIElement.PreviewStylusButtonDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2926">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusButtonDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2927">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-2927">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-2928">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2928">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-2929">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-2929">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-2930">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2930">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-2931">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2931">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusButtonUp As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ PreviewStylusButtonUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusButtonUp : System.Windows.Input.StylusButtonEventHandler " Usage="member this.PreviewStylusButtonUp : System.Windows.Input.StylusButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-2932">Ocorre quando o botão da caneta é liberado enquanto o ponteiro está sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2932">Occurs when the stylus button is released while the pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2933">Esse evento cria um alias para o <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.UIElement.PreviewStylusButtonUp> faz parte da classe a lista de membros quando <xref:System.Windows.UIElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="3347b-2933">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusButtonUp> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="3347b-2934">Manipuladores de eventos que estão anexados para o <xref:System.Windows.UIElement.PreviewStylusButtonUp> evento associado subjacente <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2934">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusButtonUp> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="3347b-2935">Toque, mouse e entrada de caneta existem em uma relação específica.</span><span class="sxs-lookup"><span data-stu-id="3347b-2935">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="3347b-2936">Para obter mais informações, consulte [visão geral de entrada](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3347b-2936">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-2937">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-2937">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-2938">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-2938">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusButtonUpEvent>|  
|<span data-ttu-id="3347b-2939">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-2939">Routing strategy</span></span>|<span data-ttu-id="3347b-2940">O túnel</span><span class="sxs-lookup"><span data-stu-id="3347b-2940">Tunneling</span></span>|  
|<span data-ttu-id="3347b-2941">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-2941">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="3347b-2942">O evento por propagação correspondente é <xref:System.Windows.UIElement.StylusButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2942">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusButtonUp>.</span></span>  
  
-   <span data-ttu-id="3347b-2943">Substituir <xref:System.Windows.UIElement.OnPreviewStylusButtonUp%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-2943">Override <xref:System.Windows.UIElement.OnPreviewStylusButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewStylusButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-2944">Identifica o evento roteado <see cref="E:System.Windows.UIElement.PreviewStylusButtonUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2944">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusButtonUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2945">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-2945">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-2946">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2946">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-2947">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-2947">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-2948">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2948">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-2949">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2949">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusDownEventHandler PreviewStylusDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusDownEventHandler PreviewStylusDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusDown As StylusDownEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusDownEventHandler ^ PreviewStylusDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusDown : System.Windows.Input.StylusDownEventHandler " Usage="member this.PreviewStylusDown : System.Windows.Input.StylusDownEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusDownEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-2950">Ocorre quando a caneta toca o digitalizador enquanto está sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2950">Occurs when the stylus touches the digitizer while it is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2951">Esse evento cria um alias para o <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.UIElement.PreviewStylusDown> faz parte da classe a lista de membros quando <xref:System.Windows.UIElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="3347b-2951">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="3347b-2952">Manipuladores de eventos que estão anexados para o <xref:System.Windows.UIElement.PreviewStylusDown> evento associado subjacente <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2952">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="3347b-2953">Toque, mouse e entrada de caneta existem em uma relação específica.</span><span class="sxs-lookup"><span data-stu-id="3347b-2953">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="3347b-2954">Para obter mais informações, consulte [visão geral de entrada](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3347b-2954">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-2955">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-2955">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-2956">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-2956">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusDownEvent>|  
|<span data-ttu-id="3347b-2957">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-2957">Routing strategy</span></span>|<span data-ttu-id="3347b-2958">O túnel</span><span class="sxs-lookup"><span data-stu-id="3347b-2958">Tunneling</span></span>|  
|<span data-ttu-id="3347b-2959">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-2959">Delegate</span></span>|<xref:System.Windows.Input.StylusDownEventHandler>|  
  
-   <span data-ttu-id="3347b-2960">O evento por propagação correspondente é <xref:System.Windows.UIElement.StylusDown>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2960">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusDown>.</span></span>  
  
-   <span data-ttu-id="3347b-2961">Substituir <xref:System.Windows.UIElement.OnPreviewStylusDown%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-2961">Override <xref:System.Windows.UIElement.OnPreviewStylusDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewStylusDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-2962">Identifica o evento roteado <see cref="E:System.Windows.UIElement.PreviewStylusDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2962">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2963">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-2963">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-2964">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2964">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-2965">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-2965">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-2966">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2966">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-2967">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2967">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInAirMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusInAirMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusInAirMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusInAirMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusInAirMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusInAirMove;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusInAirMove : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusInAirMove : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusInAirMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-2968">Ocorre quando a caneta se move sobre um elemento sem tocar de fato o digitalizador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2968">Occurs when the stylus moves over an element without actually touching the digitizer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2969">Esse evento cria um alias para o <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.UIElement.PreviewStylusInAirMove> faz parte da classe a lista de membros quando <xref:System.Windows.UIElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="3347b-2969">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusInAirMove> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="3347b-2970">Manipuladores de eventos que estão anexados para o <xref:System.Windows.UIElement.PreviewStylusInAirMove> evento associado subjacente <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2970">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusInAirMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="3347b-2971">Toque, mouse e entrada de caneta existem em uma relação específica.</span><span class="sxs-lookup"><span data-stu-id="3347b-2971">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="3347b-2972">Para obter mais informações, consulte [visão geral de entrada](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3347b-2972">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusInAirMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-2973">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-2973">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-2974">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-2974">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusInAirMoveEvent>|  
|<span data-ttu-id="3347b-2975">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-2975">Routing strategy</span></span>|<span data-ttu-id="3347b-2976">O túnel</span><span class="sxs-lookup"><span data-stu-id="3347b-2976">Tunneling</span></span>|  
|<span data-ttu-id="3347b-2977">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-2977">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="3347b-2978">O evento por propagação correspondente é <xref:System.Windows.UIElement.StylusInAirMove>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2978">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusInAirMove>.</span></span>  
  
-   <span data-ttu-id="3347b-2979">Substituir <xref:System.Windows.UIElement.OnPreviewStylusInAirMove%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-2979">Override <xref:System.Windows.UIElement.OnPreviewStylusInAirMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInAirMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusInAirMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusInAirMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusInAirMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusInAirMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusInAirMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusInAirMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewStylusInAirMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-2980">Identifica o evento roteado <see cref="E:System.Windows.UIElement.PreviewStylusInAirMove" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2980">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusInAirMove" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2981">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-2981">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-2982">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2982">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-2983">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-2983">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-2984">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2984">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-2985">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2985">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusInRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusInRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusInRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusInRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusInRange;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusInRange : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusInRange : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusInRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-2986">Ocorre quando a caneta está sobre este elemento e perto o suficiente do digitalizador para ser detectada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2986">Occurs when the stylus is close enough to the digitizer to be detected, while over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2987">Esse evento cria um alias para o <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.UIElement.PreviewStylusInRange> faz parte da classe a lista de membros quando <xref:System.Windows.UIElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="3347b-2987">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusInRange> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="3347b-2988">Manipuladores de eventos que estão anexados para o <xref:System.Windows.UIElement.PreviewStylusInRange> evento associado subjacente <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-2988">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusInRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="3347b-2989">Toque, mouse e entrada de caneta existem em uma relação específica.</span><span class="sxs-lookup"><span data-stu-id="3347b-2989">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="3347b-2990">Para obter mais informações, consulte [visão geral de entrada](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3347b-2990">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusInRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-2991">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-2991">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-2992">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-2992">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusInRangeEvent>|  
|<span data-ttu-id="3347b-2993">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-2993">Routing strategy</span></span>|<span data-ttu-id="3347b-2994">O túnel</span><span class="sxs-lookup"><span data-stu-id="3347b-2994">Tunneling</span></span>|  
|<span data-ttu-id="3347b-2995">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-2995">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="3347b-2996">O evento por propagação correspondente é <xref:System.Windows.UIElement.StylusInRange>.</span><span class="sxs-lookup"><span data-stu-id="3347b-2996">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusInRange>.</span></span>  
  
-   <span data-ttu-id="3347b-2997">Substituir <xref:System.Windows.UIElement.OnPreviewStylusInRange%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-2997">Override <xref:System.Windows.UIElement.OnPreviewStylusInRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusInRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusInRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusInRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusInRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusInRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusInRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewStylusInRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-2998">Identifica o evento roteado <see cref="E:System.Windows.UIElement.PreviewStylusInRange" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-2998">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusInRange" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-2999">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-2999">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-3000">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-3000">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-3001">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-3001">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-3002">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3002">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-3003">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3003">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusMove;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusMove : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusMove : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3004">Ocorre quando a caneta se move enquanto está sobre o elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3004">Occurs when the stylus moves while over the element.</span>
          </span>
          <span data-ttu-id="3347b-3005">A caneta deverá se mover enquanto estiver sendo detectada pelo digitalizador para gerar este evento, caso contrário, <see cref="E:System.Windows.UIElement.PreviewStylusInAirMove" /> será gerado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3005">The stylus must move while being detected by the digitizer to raise this event, otherwise, <see cref="E:System.Windows.UIElement.PreviewStylusInAirMove" /> is raised instead.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-3006">Esse evento cria um alias para o <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.UIElement.PreviewStylusMove> faz parte da classe a lista de membros quando <xref:System.Windows.UIElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="3347b-3006">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusMove> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="3347b-3007">Manipuladores de eventos que estão anexados para o <xref:System.Windows.UIElement.PreviewStylusMove> evento associado subjacente <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-3007">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="3347b-3008">Toque, mouse e entrada de caneta existem em uma relação específica.</span><span class="sxs-lookup"><span data-stu-id="3347b-3008">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="3347b-3009">Para obter mais informações, consulte [visão geral de entrada](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3347b-3009">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-3010">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-3010">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-3011">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-3011">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusMoveEvent>|  
|<span data-ttu-id="3347b-3012">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-3012">Routing strategy</span></span>|<span data-ttu-id="3347b-3013">O túnel</span><span class="sxs-lookup"><span data-stu-id="3347b-3013">Tunneling</span></span>|  
|<span data-ttu-id="3347b-3014">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-3014">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="3347b-3015">O evento por propagação correspondente é <xref:System.Windows.UIElement.StylusMove>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3015">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusMove>.</span></span>  
  
-   <span data-ttu-id="3347b-3016">Substituir <xref:System.Windows.UIElement.OnPreviewStylusMove%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-3016">Override <xref:System.Windows.UIElement.OnPreviewStylusMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewStylusMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3017">Identifica o evento roteado <see cref="E:System.Windows.UIElement.PreviewStylusMove" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3017">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusMove" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-3018">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-3018">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-3019">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-3019">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-3020">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-3020">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-3021">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3021">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-3022">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3022">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusOutOfRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusOutOfRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusOutOfRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusOutOfRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusOutOfRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusOutOfRange;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusOutOfRange : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusOutOfRange : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusOutOfRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3023">Ocorre quando a caneta está longe demais do digitalizador para ser detectada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3023">Occurs when the stylus is too far from the digitizer to be detected.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-3024">Esse evento cria um alias para o <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.UIElement.PreviewStylusOutOfRange> faz parte da classe a lista de membros quando <xref:System.Windows.UIElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="3347b-3024">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusOutOfRange> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="3347b-3025">Manipuladores de eventos que estão anexados para o <xref:System.Windows.UIElement.PreviewStylusOutOfRange> evento associado subjacente <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-3025">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusOutOfRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="3347b-3026">Toque, mouse e entrada de caneta existem em uma relação específica.</span><span class="sxs-lookup"><span data-stu-id="3347b-3026">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="3347b-3027">Para obter mais informações, consulte [visão geral de entrada](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3347b-3027">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusOutOfRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-3028">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-3028">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-3029">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-3029">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusOutOfRangeEvent>|  
|<span data-ttu-id="3347b-3030">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-3030">Routing strategy</span></span>|<span data-ttu-id="3347b-3031">O túnel</span><span class="sxs-lookup"><span data-stu-id="3347b-3031">Tunneling</span></span>|  
|<span data-ttu-id="3347b-3032">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-3032">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="3347b-3033">O evento por propagação correspondente é <xref:System.Windows.UIElement.StylusOutOfRange>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3033">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusOutOfRange>.</span></span>  
  
-   <span data-ttu-id="3347b-3034">Substituir <xref:System.Windows.UIElement.OnPreviewStylusOutOfRange%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-3034">Override <xref:System.Windows.UIElement.OnPreviewStylusOutOfRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusOutOfRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusOutOfRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusOutOfRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusOutOfRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusOutOfRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusOutOfRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusOutOfRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewStylusOutOfRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3035">Identifica o evento roteado <see cref="E:System.Windows.UIElement.PreviewStylusOutOfRange" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3035">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusOutOfRange" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-3036">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-3036">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-3037">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-3037">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-3038">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-3038">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-3039">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3039">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-3040">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3040">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusSystemGesture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusSystemGestureEventHandler PreviewStylusSystemGesture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusSystemGestureEventHandler PreviewStylusSystemGesture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusSystemGesture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusSystemGesture As StylusSystemGestureEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusSystemGestureEventHandler ^ PreviewStylusSystemGesture;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventHandler " Usage="member this.PreviewStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusSystemGesture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusSystemGestureEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3041">Ocorre quando o usuário executa um dos diversos gestos da caneta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3041">Occurs when a user performs one of several stylus gestures.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-3042">Para obter informações sobre gestos da caneta, consulte <xref:System.Windows.Input.SystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3042">For information about stylus gestures, see <xref:System.Windows.Input.SystemGesture>.</span></span>  
  
 <span data-ttu-id="3347b-3043">Esse evento cria um alias para o <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.UIElement.PreviewStylusSystemGesture> faz parte da classe a lista de membros quando <xref:System.Windows.UIElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="3347b-3043">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusSystemGesture> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="3347b-3044">Manipuladores de eventos que estão anexados para o <xref:System.Windows.UIElement.PreviewStylusSystemGesture> evento associado subjacente <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-3044">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusSystemGesture> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="3347b-3045">Toque, mouse e entrada de caneta existem em uma relação específica.</span><span class="sxs-lookup"><span data-stu-id="3347b-3045">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="3347b-3046">Para obter mais informações, consulte [visão geral de entrada](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3347b-3046">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusSystemGesture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-3047">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-3047">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-3048">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-3048">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusSystemGestureEvent>|  
|<span data-ttu-id="3347b-3049">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-3049">Routing strategy</span></span>|<span data-ttu-id="3347b-3050">O túnel</span><span class="sxs-lookup"><span data-stu-id="3347b-3050">Tunneling</span></span>|  
|<span data-ttu-id="3347b-3051">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-3051">Delegate</span></span>|<xref:System.Windows.Input.StylusSystemGestureEventHandler>|  
  
-   <span data-ttu-id="3347b-3052">O evento por propagação correspondente é <xref:System.Windows.UIElement.StylusSystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3052">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusSystemGesture>.</span></span>  
  
-   <span data-ttu-id="3347b-3053">Substituir <xref:System.Windows.UIElement.OnPreviewStylusSystemGesture%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-3053">Override <xref:System.Windows.UIElement.OnPreviewStylusSystemGesture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusSystemGestureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusSystemGestureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusSystemGestureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusSystemGestureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusSystemGestureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusSystemGestureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusSystemGestureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewStylusSystemGestureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3054">Identifica o evento roteado <see cref="E:System.Windows.UIElement.PreviewStylusSystemGesture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3054">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusSystemGesture" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-3055">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-3055">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-3056">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-3056">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-3057">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-3057">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-3058">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3058">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-3059">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3059">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusUp As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusUp : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusUp : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3060">Ocorre quando o usuário retira a caneta do digitalizador enquanto ela está sobre esse elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3060">Occurs when the user raises the stylus off the digitizer while the stylus is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-3061">Esse evento cria um alias para o <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.UIElement.PreviewStylusDown> faz parte da classe a lista de membros quando <xref:System.Windows.UIElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="3347b-3061">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="3347b-3062">Manipuladores de eventos que estão anexados para o <xref:System.Windows.UIElement.PreviewStylusDown> evento associado subjacente <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-3062">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="3347b-3063">Toque, mouse e entrada de caneta existem em uma relação específica.</span><span class="sxs-lookup"><span data-stu-id="3347b-3063">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="3347b-3064">Para obter mais informações, consulte [visão geral de entrada](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3347b-3064">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-3065">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-3065">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-3066">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-3066">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusUpEvent>|  
|<span data-ttu-id="3347b-3067">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-3067">Routing strategy</span></span>|<span data-ttu-id="3347b-3068">O túnel</span><span class="sxs-lookup"><span data-stu-id="3347b-3068">Tunneling</span></span>|  
|<span data-ttu-id="3347b-3069">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-3069">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="3347b-3070">O evento por propagação correspondente é <xref:System.Windows.UIElement.StylusUp>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3070">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusUp>.</span></span>  
  
-   <span data-ttu-id="3347b-3071">Substituir <xref:System.Windows.UIElement.OnPreviewStylusUp%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-3071">Override <xref:System.Windows.UIElement.OnPreviewStylusUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewStylusUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3072">Identifica o evento roteado <see cref="E:System.Windows.UIElement.PreviewStylusUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3072">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-3073">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-3073">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-3074">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-3074">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-3075">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-3075">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-3076">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3076">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-3077">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3077">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTextInput">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.TextCompositionEventHandler PreviewTextInput;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.TextCompositionEventHandler PreviewTextInput" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewTextInput" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTextInput As TextCompositionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::TextCompositionEventHandler ^ PreviewTextInput;" />
      <MemberSignature Language="F#" Value="member this.PreviewTextInput : System.Windows.Input.TextCompositionEventHandler " Usage="member this.PreviewTextInput : System.Windows.Input.TextCompositionEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewTextInput</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TextCompositionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3078">Ocorre quando este elemento obtém texto de forma independente de dispositivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3078">Occurs when this element gets text in a device-independent manner.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-3079">O <xref:System.Windows.UIElement.PreviewTextInput> evento permite que um componente ou aplicativo para escutar a entrada de texto de forma independente de dispositivo.</span><span class="sxs-lookup"><span data-stu-id="3347b-3079">The <xref:System.Windows.UIElement.PreviewTextInput> event allows a component or application to listen for text input in a device-independent manner.</span></span> <span data-ttu-id="3347b-3080">O teclado é o principal meio de <xref:System.Windows.UIElement.PreviewTextInput>; mas outros dispositivos de entrada de fala e manuscrito também podem gerar <xref:System.Windows.UIElement.PreviewTextInput>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3080">The keyboard is the primary means of <xref:System.Windows.UIElement.PreviewTextInput>; but speech, handwriting, and other input devices can also generate <xref:System.Windows.UIElement.PreviewTextInput>.</span></span>  
  
 <span data-ttu-id="3347b-3081">Por causa de combinações de teclas — em teclados padrão ou por meio de editores de método de entrada — vários eventos de chave podem gerar apenas um evento de entrada de texto.</span><span class="sxs-lookup"><span data-stu-id="3347b-3081">Because of key combinations—either in default keyboards or through input method editors—multiple key events may raise just one text input event.</span></span>  
  
 <span data-ttu-id="3347b-3082">Esse evento cria um alias para o <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.UIElement.PreviewTextInput> faz parte da classe a lista de membros quando <xref:System.Windows.UIElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="3347b-3082">This event creates an alias for the <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewTextInput> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="3347b-3083">Manipuladores de eventos que estão anexados para o <xref:System.Windows.UIElement.PreviewTextInput> evento associado subjacente <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-3083">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewTextInput> event are attached to the underlying <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewTextInput"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-3084">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-3084">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-3085">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-3085">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewTextInputEvent>|  
|<span data-ttu-id="3347b-3086">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-3086">Routing strategy</span></span>|<span data-ttu-id="3347b-3087">O túnel</span><span class="sxs-lookup"><span data-stu-id="3347b-3087">Tunneling</span></span>|  
|<span data-ttu-id="3347b-3088">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-3088">Delegate</span></span>|<xref:System.Windows.Input.TextCompositionEventHandler>|  
  
-   <span data-ttu-id="3347b-3089">O evento por propagação correspondente é <xref:System.Windows.UIElement.TextInput>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3089">The corresponding bubbling event is <xref:System.Windows.UIElement.TextInput>.</span></span>  
  
-   <span data-ttu-id="3347b-3090">Substituir <xref:System.Windows.UIElement.OnPreviewTextInput%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-3090">Override <xref:System.Windows.UIElement.OnPreviewTextInput%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewKeyDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewTextInputEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTextInputEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTextInputEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewTextInputEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTextInputEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTextInputEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewTextInputEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewTextInputEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3091">Identifica o evento roteado <see cref="E:System.Windows.UIElement.PreviewTextInput" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3091">Identifies the <see cref="E:System.Windows.UIElement.PreviewTextInput" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-3092">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-3092">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-3093">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-3093">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-3094">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-3094">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-3095">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3095">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-3096">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3096">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchDown">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewTouchDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchDown As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewTouchDown : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.PreviewTouchDown : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3097">Ocorre quando um dedo toca a tela enquanto está sobre esse elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3097">Occurs when a finger touches the screen while the finger is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-3098">Por padrão, o <xref:System.Windows.UIElement.PreviewTouchDown> e <xref:System.Windows.UIElement.TouchDown> eventos não ocorrem até que um dedo toca na tela e move.</span><span class="sxs-lookup"><span data-stu-id="3347b-3098">By default, the <xref:System.Windows.UIElement.PreviewTouchDown> and <xref:System.Windows.UIElement.TouchDown> events do not occur until a finger touches the screen and moves.</span></span> <span data-ttu-id="3347b-3099">Pressionando um dedo na tela e mantendo sem movê-lo faz com que o toque e mantenha o comportamento de um <xref:System.Windows.Input.Stylus>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3099">Pressing a finger on the screen and holding it without moving it causes the press and hold behavior of a <xref:System.Windows.Input.Stylus>.</span></span> <span data-ttu-id="3347b-3100">O comportamento de pressionar e segurar é equivalente ao botão direito do mouse.</span><span class="sxs-lookup"><span data-stu-id="3347b-3100">The press and hold behavior is equivalent to a mouse right-click.</span></span>  
  
 <span data-ttu-id="3347b-3101">Para fazer com que o <xref:System.Windows.UIElement.PreviewTouchDown> e <xref:System.Windows.UIElement.TouchDown> eventos ocorram, assim que um dedo toca a tela, defina as <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> anexado à propriedade `false` para este elemento.</span><span class="sxs-lookup"><span data-stu-id="3347b-3101">To cause the <xref:System.Windows.UIElement.PreviewTouchDown> and <xref:System.Windows.UIElement.TouchDown> events to occur as soon as a finger touches the screen, set the <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> attached property to `false` for this element.</span></span>  
  
<a name="routedEventInfo_PreviewTouchDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-3102">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-3102">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-3103">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-3103">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewTouchDownEvent>|  
|<span data-ttu-id="3347b-3104">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-3104">Routing strategy</span></span>|<span data-ttu-id="3347b-3105">O túnel</span><span class="sxs-lookup"><span data-stu-id="3347b-3105">Tunneling</span></span>|  
|<span data-ttu-id="3347b-3106">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-3106">Delegate</span></span>|<span data-ttu-id="3347b-3107"><xref:System.EventHandler%601> do tipo <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3107"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="3347b-3108">O evento por propagação correspondente é <xref:System.Windows.UIElement.TouchDown>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3108">The corresponding bubbling event is <xref:System.Windows.UIElement.TouchDown>.</span></span>  
  
-   <span data-ttu-id="3347b-3109">Substituir <xref:System.Windows.UIElement.OnPreviewTouchDown%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-3109">Override <xref:System.Windows.UIElement.OnPreviewTouchDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" />
        <altmember cref="M:System.Windows.Input.Stylus.GetIsPressAndHoldEnabled(System.Windows.DependencyObject)" />
        <altmember cref="M:System.Windows.Input.Stylus.SetIsPressAndHoldEnabled(System.Windows.DependencyObject,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewTouchDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewTouchDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewTouchDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3110">Identifica o evento roteado <see cref="E:System.Windows.UIElement.PreviewTouchDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3110">Identifies the <see cref="E:System.Windows.UIElement.PreviewTouchDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchMove">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewTouchMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchMove As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchMove;" />
      <MemberSignature Language="F#" Value="member this.PreviewTouchMove : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.PreviewTouchMove : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3111">Ocorre quando um dedo se move na tela enquanto está sobre esse elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3111">Occurs when a finger moves on the screen while the finger is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_PreviewTouchMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-3112">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-3112">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-3113">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-3113">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewTouchMoveEvent>|  
|<span data-ttu-id="3347b-3114">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-3114">Routing strategy</span></span>|<span data-ttu-id="3347b-3115">O túnel</span><span class="sxs-lookup"><span data-stu-id="3347b-3115">Tunneling</span></span>|  
|<span data-ttu-id="3347b-3116">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-3116">Delegate</span></span>|<span data-ttu-id="3347b-3117"><xref:System.EventHandler%601> do tipo <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3117"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="3347b-3118">O evento por propagação correspondente é <xref:System.Windows.UIElement.TouchMove>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3118">The corresponding bubbling event is <xref:System.Windows.UIElement.TouchMove>.</span></span>  
  
-   <span data-ttu-id="3347b-3119">Substituir <xref:System.Windows.UIElement.OnPreviewTouchMove%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-3119">Override <xref:System.Windows.UIElement.OnPreviewTouchMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewTouchMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewTouchMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewTouchMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3120">Identifica o evento roteado <see cref="E:System.Windows.UIElement.PreviewTouchMove" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3120">Identifies the <see cref="E:System.Windows.UIElement.PreviewTouchMove" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchUp">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewTouchUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchUp As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewTouchUp : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.PreviewTouchUp : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3121">Ocorre quando um dedo é gerado fora da tela enquanto o dedo está sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3121">Occurs when a finger is raised off of the screen while the finger is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_PreviewTouchUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-3122">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-3122">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-3123">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-3123">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewTouchUpEvent>|  
|<span data-ttu-id="3347b-3124">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-3124">Routing strategy</span></span>|<span data-ttu-id="3347b-3125">O túnel</span><span class="sxs-lookup"><span data-stu-id="3347b-3125">Tunneling</span></span>|  
|<span data-ttu-id="3347b-3126">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-3126">Delegate</span></span>|<span data-ttu-id="3347b-3127"><xref:System.EventHandler%601> do tipo <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3127"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="3347b-3128">O evento por propagação correspondente é <xref:System.Windows.UIElement.TouchUp>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3128">The corresponding bubbling event is <xref:System.Windows.UIElement.TouchUp>.</span></span>  
  
-   <span data-ttu-id="3347b-3129">Substituir <xref:System.Windows.UIElement.OnPreviewTouchUp%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-3129">Override <xref:System.Windows.UIElement.OnPreviewTouchUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewTouchUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewTouchUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewTouchUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3130">Identifica o evento roteado <see cref="E:System.Windows.UIElement.PreviewTouchUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3130">Identifies the <see cref="E:System.Windows.UIElement.PreviewTouchUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryContinueDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.QueryContinueDragEventHandler QueryContinueDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.QueryContinueDragEventHandler QueryContinueDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.QueryContinueDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryContinueDrag As QueryContinueDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::QueryContinueDragEventHandler ^ QueryContinueDrag;" />
      <MemberSignature Language="F#" Value="member this.QueryContinueDrag : System.Windows.QueryContinueDragEventHandler " Usage="member this.QueryContinueDrag : System.Windows.QueryContinueDragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.QueryContinueDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3131">Ocorre quando há uma alteração no estado do botão do teclado ou do mouse durante uma operação de arrastar e soltar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3131">Occurs when there is a change in the keyboard or mouse button state during a drag-and-drop operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-3132">O evento <xref:System.Windows.UIElement.QueryContinueDrag> permite que a fonte de arrastar determine se a operação do tipo "arrastar e soltar" deve ser cancelada.</span><span class="sxs-lookup"><span data-stu-id="3347b-3132">The <xref:System.Windows.UIElement.QueryContinueDrag> event enables the drag source to determine whether the drag-and-drop operation should be canceled.</span></span>  
  
 <span data-ttu-id="3347b-3133">Esse evento cria um alias para o <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.UIElement.QueryContinueDrag> faz parte da classe a lista de membros quando <xref:System.Windows.UIElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="3347b-3133">This event creates an alias for the <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.QueryContinueDrag> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="3347b-3134">Manipuladores de eventos que estão anexados para o <xref:System.Windows.UIElement.QueryContinueDrag> evento associado subjacente <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-3134">Event handlers that are attached to the <xref:System.Windows.UIElement.QueryContinueDrag> event are attached to the underlying <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_QueryContinueDrag"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-3135">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-3135">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-3136">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-3136">Identifier field</span></span>|<xref:System.Windows.UIElement.QueryContinueDragEvent>|  
|<span data-ttu-id="3347b-3137">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-3137">Routing strategy</span></span>|<span data-ttu-id="3347b-3138">Propagação</span><span class="sxs-lookup"><span data-stu-id="3347b-3138">Bubbling</span></span>|  
|<span data-ttu-id="3347b-3139">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-3139">Delegate</span></span>|<xref:System.Windows.QueryContinueDragEventHandler>|  
  
-   <span data-ttu-id="3347b-3140">O evento por túnel correspondente é <xref:System.Windows.UIElement.PreviewQueryContinueDrag>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3140">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewQueryContinueDrag>.</span></span>  
  
-   <span data-ttu-id="3347b-3141">Substituir <xref:System.Windows.UIElement.OnQueryContinueDrag%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-3141">Override <xref:System.Windows.UIElement.OnQueryContinueDrag%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryContinueDragEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent QueryContinueDragEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent QueryContinueDragEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.QueryContinueDragEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly QueryContinueDragEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ QueryContinueDragEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable QueryContinueDragEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.QueryContinueDragEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3142">Identifica o evento roteado <see cref="E:System.Windows.UIElement.QueryContinueDrag" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3142">Identifies the <see cref="E:System.Windows.UIElement.QueryContinueDrag" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-3143">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-3143">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-3144">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-3144">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-3145">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-3145">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-3146">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3146">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-3147">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3147">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryCursor">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.QueryCursorEventHandler QueryCursor;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.QueryCursorEventHandler QueryCursor" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.QueryCursor" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryCursor As QueryCursorEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::QueryCursorEventHandler ^ QueryCursor;" />
      <MemberSignature Language="F#" Value="member this.QueryCursor : System.Windows.Input.QueryCursorEventHandler " Usage="member this.QueryCursor : System.Windows.Input.QueryCursorEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.QueryCursorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3148">Ocorre quando a exibição do cursor é solicitada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3148">Occurs when the cursor is requested to display.</span>
          </span>
          <span data-ttu-id="3347b-3149">Este evento é gerado em um elemento toda vez que o ponteiro do mouse se move para uma nova localização, o que significa que o objeto de cursor talvez precise ser alterado de acordo com sua nova posição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3149">This event is raised on an element each time that the mouse pointer moves to a new location, which means the cursor object might need to be changed based on its new position.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-3150">Esse evento cria um alias para o <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.UIElement.QueryCursor> faz parte da classe a lista de membros quando <xref:System.Windows.UIElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="3347b-3150">This event creates an alias for the <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.QueryCursor> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="3347b-3151">Manipuladores de eventos que estão anexados para o <xref:System.Windows.UIElement.QueryCursor> evento associado subjacente <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-3151">Event handlers that are attached to the <xref:System.Windows.UIElement.QueryCursor> event are attached to the underlying <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="3347b-3152">O cursor está sendo referenciado por este nome de evento não é necessariamente o cursor de texto (também conhecido como o ponto de inserção).</span><span class="sxs-lookup"><span data-stu-id="3347b-3152">The cursor being referred to by this event name is not necessarily the text cursor (sometimes known as the insertion point).</span></span> <span data-ttu-id="3347b-3153">Em vez disso, o cursor neste contexto é o objeto que declara a exibição gráfica na tela relacionada a vários dispositivos relacionados à entrada possíveis ou conceitos de programação do Windows.</span><span class="sxs-lookup"><span data-stu-id="3347b-3153">Instead, the cursor in this context is the object that declares the onscreen graphical display related to several possible input-related devices or concepts in Windows programming.</span></span> <span data-ttu-id="3347b-3154">Esse objeto é representado pelo <xref:System.Windows.Input.Cursor> classe no WPF.</span><span class="sxs-lookup"><span data-stu-id="3347b-3154">That object is represented by the <xref:System.Windows.Input.Cursor> class in WPF.</span></span> <span data-ttu-id="3347b-3155">O sistema de entrada do WPF permite que você altere esse cursor quando ele representa a posição na tela do ponteiro do mouse.</span><span class="sxs-lookup"><span data-stu-id="3347b-3155">The WPF input system enables you to change this cursor when it represents the onscreen position of the mouse pointer.</span></span> <span data-ttu-id="3347b-3156">Você pode usar valores predefinidos do <xref:System.Windows.Input.Cursors> enumeração, ou você pode declarar um cursor personalizado como um arquivo de imagem.</span><span class="sxs-lookup"><span data-stu-id="3347b-3156">You can use predefined values from the <xref:System.Windows.Input.Cursors> enumeration, or you can declare a custom cursor as an image file.</span></span>  
  
 <span data-ttu-id="3347b-3157">Ouvindo o <xref:System.Windows.UIElement.QueryCursor> evento não é uma técnica eficiente para o gerenciamento de cursor.</span><span class="sxs-lookup"><span data-stu-id="3347b-3157">Listening for the <xref:System.Windows.UIElement.QueryCursor> event is not an efficient technique for cursor management.</span></span> <span data-ttu-id="3347b-3158">Em vez disso, cada elemento deve definir seu próprio comportamento de cursor com <xref:System.Windows.FrameworkContentElement.Cursor%2A> e <xref:System.Windows.FrameworkContentElement.ForceCursor%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3158">Instead, each element should define its own cursor behavior with <xref:System.Windows.FrameworkContentElement.Cursor%2A> and <xref:System.Windows.FrameworkContentElement.ForceCursor%2A>.</span></span> <span data-ttu-id="3347b-3159">Você só deve confiar em <xref:System.Windows.UIElement.QueryCursor> se você não estiver usando os elementos de base de nível de framework WPF, ou em extraordinária circunstâncias em que definir o comportamento do cursor em uma base por elemento não atender às suas necessidades.</span><span class="sxs-lookup"><span data-stu-id="3347b-3159">You should only rely on <xref:System.Windows.UIElement.QueryCursor> if you are not using the WPF framework-level base elements, or in extraordinary circumstances where defining cursor behavior on a per-element basis does not meet your needs.</span></span> <span data-ttu-id="3347b-3160">Para obter mais informações sobre como implementar o comportamento do cursor em resposta às <xref:System.Windows.UIElement.QueryCursor>, consulte <xref:System.Windows.Input.QueryCursorEventHandler>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3160">For more information on implementing cursor behavior in response to <xref:System.Windows.UIElement.QueryCursor>, see <xref:System.Windows.Input.QueryCursorEventHandler>.</span></span>  
  
<a name="routedEventInfo_QueryCursor"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-3161">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-3161">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-3162">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-3162">Identifier field</span></span>|<xref:System.Windows.UIElement.QueryCursorEvent>|  
|<span data-ttu-id="3347b-3163">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-3163">Routing strategy</span></span>|<span data-ttu-id="3347b-3164">Propagação</span><span class="sxs-lookup"><span data-stu-id="3347b-3164">Bubbling</span></span>|  
|<span data-ttu-id="3347b-3165">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-3165">Delegate</span></span>|<xref:System.Windows.Input.QueryCursorEventHandler>|  
  
-   <span data-ttu-id="3347b-3166">Não há nenhum evento de túnel correspondente definido.</span><span class="sxs-lookup"><span data-stu-id="3347b-3166">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="3347b-3167">Substituir <xref:System.Windows.UIElement.OnQueryCursor%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-3167">Override <xref:System.Windows.UIElement.OnQueryCursor%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.FrameworkElement.Cursor" />
      </Docs>
    </Member>
    <Member MemberName="QueryCursorEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent QueryCursorEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent QueryCursorEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.QueryCursorEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly QueryCursorEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ QueryCursorEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable QueryCursorEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.QueryCursorEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3168">Identifica o evento roteado <see cref="E:System.Windows.UIElement.QueryCursor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3168">Identifies the <see cref="E:System.Windows.UIElement.QueryCursor" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-3169">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-3169">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-3170">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-3170">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-3171">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-3171">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-3172">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3172">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-3173">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3173">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseEvent">
      <MemberSignature Language="C#" Value="public void RaiseEvent (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RaiseEvent(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.RaiseEvent(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaiseEvent (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RaiseEvent(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member RaiseEvent : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.RaiseEvent : System.Windows.RoutedEventArgs -&gt; unit" Usage="uIElement.RaiseEvent e" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.RaiseEvent(System.Windows.RoutedEventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3347b-3174">Um <see cref="T:System.Windows.RoutedEventArgs" /> que contém os dados do evento e também identifica o evento a ser acionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3174">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains the event data and also identifies the event to raise.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-3175">Aciona um evento roteado específico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3175">Raises a specific routed event.</span>
          </span>
          <span data-ttu-id="3347b-3176">O <see cref="T:System.Windows.RoutedEvent" /> a ser gerado é identificado na instância <see cref="T:System.Windows.RoutedEventArgs" /> fornecida (como a propriedade <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> desses dados de eventos).</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3176">The <see cref="T:System.Windows.RoutedEvent" /> to be raised is identified within the <see cref="T:System.Windows.RoutedEventArgs" /> instance that is provided (as the <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> property of that event data).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-3177">O `e` parâmetro é digitado como o tipo de base comum para todos os dados de evento roteado; no entanto, os dados do evento devem ser fornecidos como o tipo de dados de evento mais específico que está disponível para o evento que está sendo gerado, porque <xref:System.Windows.RoutedEventArgs> contêm classes derivadas de propriedades específicas de dados reais que se destinam-se para o evento específico quando ele é gerado.</span><span class="sxs-lookup"><span data-stu-id="3347b-3177">The `e` parameter is typed as the common base type for all routed event data; however, the event data should be given as the most specific event data type that is available for the event being raised, because <xref:System.Windows.RoutedEventArgs> derived classes contain the actual specific data properties that are intended for the specific event when it is raised.</span></span>  
  
 <span data-ttu-id="3347b-3178"><xref:System.Windows.RoutedEventArgs> não é apenas as propriedades de estado para o evento; Ele também identifica qual evento roteado para elevar.</span><span class="sxs-lookup"><span data-stu-id="3347b-3178"><xref:System.Windows.RoutedEventArgs> is not just the state properties for the event; it also identifies which routed event to raise.</span></span> <span data-ttu-id="3347b-3179">Essa acionando o evento padrão e os dados de evento roteado ambos diferem [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] classes de eventos e dados, que normalmente contêm apenas as propriedades que são relacionadas ao evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-3179">This event-raising pattern and the routed event data both differ from [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] events and data classes, which typically just contain properties that are related to the event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3347b-3180">O exemplo a seguir cria dados de evento, acrescenta o identificador de evento para os dados e, em seguida, usa a instância de dados de evento para gerar um evento roteado personalizado.</span><span class="sxs-lookup"><span data-stu-id="3347b-3180">The following example creates event data, appends the event identifier to the data, and then uses the event data instance to raise a custom routed event.</span></span>  
  
 [!code-csharp[RoutedEventCustom#RaiseEvent](~/samples/snippets/csharp/VS_Snippets_Wpf/RoutedEventCustom/CSharp/SDKSampleLibrary/class1.cs#raiseevent)]
 [!code-vb[RoutedEventCustom#RaiseEvent](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RoutedEventCustom/VB/SDKSampleLibrary/Class1.vb#raiseevent)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseAllTouchCaptures">
      <MemberSignature Language="C#" Value="public void ReleaseAllTouchCaptures ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReleaseAllTouchCaptures() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ReleaseAllTouchCaptures" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseAllTouchCaptures ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseAllTouchCaptures();" />
      <MemberSignature Language="F#" Value="member this.ReleaseAllTouchCaptures : unit -&gt; unit" Usage="uIElement.ReleaseAllTouchCaptures " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3181">Libera todos os dispositivos de toque capturados desse elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3181">Releases all captured touch devices from this element.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseMouseCapture">
      <MemberSignature Language="C#" Value="public void ReleaseMouseCapture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseMouseCapture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ReleaseMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseMouseCapture ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseMouseCapture();" />
      <MemberSignature Language="F#" Value="abstract member ReleaseMouseCapture : unit -&gt; unit&#xA;override this.ReleaseMouseCapture : unit -&gt; unit" Usage="uIElement.ReleaseMouseCapture " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.ReleaseMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3182">Libera a captura do mouse, se esse elemento tiver mantido a captura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3182">Releases the mouse capture, if this element held the capture.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-3183">Se esse elemento não pode ser mantida a captura, chamar este método não tem nenhum efeito.</span><span class="sxs-lookup"><span data-stu-id="3347b-3183">If this element did not hold the capture, calling this method has no effect.</span></span> <span data-ttu-id="3347b-3184">Considere verificar o valor de <xref:System.Windows.UIElement.IsMouseCaptured%2A> antes de chamar esse método.</span><span class="sxs-lookup"><span data-stu-id="3347b-3184">Consider checking the value of <xref:System.Windows.UIElement.IsMouseCaptured%2A> before you call this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3347b-3185">O exemplo a seguir é o paralelo ao exemplo fornecido para <xref:System.Windows.UIElement.CaptureMouse%2A>: ele lida com o botão do mouse até o lançamento captura do mouse e habilite novamente a mover o mouse.</span><span class="sxs-lookup"><span data-stu-id="3347b-3185">The following example is the parallel to the example given for <xref:System.Windows.UIElement.CaptureMouse%2A>: it handles mouse button up to release mouse capture and re-enable moving the mouse.</span></span>  
  
 [!code-csharp[CubeAnimation#UIElementMouseCapture](~/samples/snippets/csharp/VS_Snippets_Wpf/CubeAnimation/CSharp/Trackball.cs#uielementmousecapture)]
 [!code-vb[CubeAnimation#UIElementMouseCapture](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CubeAnimation/visualbasic/trackball.vb#uielementmousecapture)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.IsMouseCaptured" />
      </Docs>
    </Member>
    <Member MemberName="ReleaseStylusCapture">
      <MemberSignature Language="C#" Value="public void ReleaseStylusCapture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseStylusCapture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ReleaseStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseStylusCapture ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseStylusCapture();" />
      <MemberSignature Language="F#" Value="abstract member ReleaseStylusCapture : unit -&gt; unit&#xA;override this.ReleaseStylusCapture : unit -&gt; unit" Usage="uIElement.ReleaseStylusCapture " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.ReleaseStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3186">Libera a captura do dispositivo de caneta, se esse elemento tiver mantido a captura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3186">Releases the stylus device capture, if this element held the capture.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-3187">Se esse elemento não pode ser mantida a captura, chamar este método não tem nenhum efeito.</span><span class="sxs-lookup"><span data-stu-id="3347b-3187">If this element did not hold the capture, calling this method has no effect.</span></span> <span data-ttu-id="3347b-3188">Considere verificar o valor de <xref:System.Windows.UIElement.IsStylusCaptured%2A> antes de chamar esse método.</span><span class="sxs-lookup"><span data-stu-id="3347b-3188">Consider checking the value of <xref:System.Windows.UIElement.IsStylusCaptured%2A> before you call this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseTouchCapture">
      <MemberSignature Language="C#" Value="public bool ReleaseTouchCapture (System.Windows.Input.TouchDevice touchDevice);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ReleaseTouchCapture(class System.Windows.Input.TouchDevice touchDevice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ReleaseTouchCapture(System.Windows.Input.TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ReleaseTouchCapture(System::Windows::Input::TouchDevice ^ touchDevice);" />
      <MemberSignature Language="F#" Value="member this.ReleaseTouchCapture : System.Windows.Input.TouchDevice -&gt; bool" Usage="uIElement.ReleaseTouchCapture touchDevice" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="touchDevice" Type="System.Windows.Input.TouchDevice" />
      </Parameters>
      <Docs>
        <param name="touchDevice">
          <span data-ttu-id="3347b-3189">O dispositivo a ser liberado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3189">The device to release.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-3190">Tenta liberar o dispositivo de toque especificado desse elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3190">Attempts to release the specified touch device from this element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3347b-3191">
            <see langword="true" /> se o dispositivo de toque estiver liberado; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3191">
              <see langword="true" /> if the touch device is released; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3347b-3192">
            <paramref name="touchDevice" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3192">
              <paramref name="touchDevice" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveHandler">
      <MemberSignature Language="C#" Value="public void RemoveHandler (System.Windows.RoutedEvent routedEvent, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member RemoveHandler : System.Windows.RoutedEvent * Delegate -&gt; unit&#xA;override this.RemoveHandler : System.Windows.RoutedEvent * Delegate -&gt; unit" Usage="uIElement.RemoveHandler (routedEvent, handler)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="routedEvent">
          <span data-ttu-id="3347b-3193">O identificador do evento roteado ao qual o manipulador está anexado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3193">The identifier of the routed event for which the handler is attached.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="3347b-3194">A implementação do manipulador específico para remover da coleção de manipuladores de eventos neste elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3194">The specific handler implementation to remove from the event handler collection on this element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-3195">Remove o manipulador de eventos roteados especificado desse elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3195">Removes the specified routed event handler from this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-3196">O cenário mais comum para usar esta [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] é quando você implementa o [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] evento "wrapper" que está associado um evento roteado personalizado, especialmente quando você implementa a lógica de "remover" para manipuladores no [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] nível.</span><span class="sxs-lookup"><span data-stu-id="3347b-3196">The most common scenario for using this [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] is when you implement the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] "wrapper" event that is associated with a custom routed event, specifically when you implement the "remove" logic for handlers at the [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] level.</span></span> <span data-ttu-id="3347b-3197">O exemplo a seguir esta seção ilustra esse cenário de comentários.</span><span class="sxs-lookup"><span data-stu-id="3347b-3197">The example that follows this remarks section illustrates this scenario.</span></span>  
  
 <span data-ttu-id="3347b-3198">Chamar esse método não tem nenhum efeito se não houvesse nenhum manipulador registrado com os critérios que corresponde aos parâmetros de entrada para a chamada de método.</span><span class="sxs-lookup"><span data-stu-id="3347b-3198">Calling this method has no effect if there were no handlers registered with criteria that matches the input parameters for the method call.</span></span>  
  
 <span data-ttu-id="3347b-3199">Se mais de um manipulador está anexado que correspondeu aos critérios, somente o primeiro manipulador no evento de armazenamento do manipulador é removido.</span><span class="sxs-lookup"><span data-stu-id="3347b-3199">If more than one handler is attached that matched the criteria, only the first handler in the event handler store is removed.</span></span> <span data-ttu-id="3347b-3200">Esse comportamento é consistente com [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] comportamento do `-=` operador.</span><span class="sxs-lookup"><span data-stu-id="3347b-3200">This behavior is consistent with [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] behavior of the `-=` operator.</span></span>  
  
 <span data-ttu-id="3347b-3201">Nem `routedEvent` nem `handler` pode ser `null`.</span><span class="sxs-lookup"><span data-stu-id="3347b-3201">Neither `routedEvent` nor `handler` may be `null`.</span></span> <span data-ttu-id="3347b-3202">A tentativa de fornecer o valor como `null` gerarão uma exceção.</span><span class="sxs-lookup"><span data-stu-id="3347b-3202">Attempting to provide either value as `null` will raise an exception.</span></span>  
  
 <span data-ttu-id="3347b-3203">Este método ignora a `handledEventsToo` informações de parâmetro, que serão fornecidas se o manipulador foi inicialmente adicionada com o <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> assinatura que permite a manipulação de eventos já manipulados.</span><span class="sxs-lookup"><span data-stu-id="3347b-3203">This method ignores the `handledEventsToo` parameter information, which is provided if the handler was first added with the <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature that enables handling of already-handled events.</span></span> <span data-ttu-id="3347b-3204">Qualquer tipo de manipulador é removido.</span><span class="sxs-lookup"><span data-stu-id="3347b-3204">Either type of handler is removed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3347b-3205">O exemplo a seguir usa <xref:System.Windows.UIElement.RemoveHandler%2A> como parte de uma definição de wrapper de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-3205">The following example uses <xref:System.Windows.UIElement.RemoveHandler%2A> as part of an event wrapper definition.</span></span>  
  
 [!code-csharp[RoutedEventCustom#AddRemoveHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/RoutedEventCustom/CSharp/SDKSampleLibrary/class1.cs#addremovehandler)]
 [!code-vb[RoutedEventCustom#AddRemoveHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RoutedEventCustom/VB/SDKSampleLibrary/Class1.vb#addremovehandler)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)" />
      </Docs>
    </Member>
    <Member MemberName="RenderSize">
      <MemberSignature Language="C#" Value="public System.Windows.Size RenderSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Size RenderSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.RenderSize" />
      <MemberSignature Language="VB.NET" Value="Public Property RenderSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Size RenderSize { System::Windows::Size get(); void set(System::Windows::Size value); };" />
      <MemberSignature Language="F#" Value="member this.RenderSize : System.Windows.Size with get, set" Usage="System.Windows.UIElement.RenderSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3206">Obtém (ou define) o tamanho de renderização final deste elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3206">Gets (or sets) the final render size of this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3347b-3207">O tamanho renderizado para este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3207">The rendered size for this element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="3347b-3208">Não tente definir essa propriedade, em [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] ou no código, se usando o sistema de layout de nível de framework WPF.</span><span class="sxs-lookup"><span data-stu-id="3347b-3208">Do not attempt to set this property, either in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] or in code, if using the WPF framework-level layout system.</span></span> <span data-ttu-id="3347b-3209">Quase todos os cenários de aplicativos típicos usará este sistema de layout.</span><span class="sxs-lookup"><span data-stu-id="3347b-3209">Nearly all typical application scenarios will use this layout system.</span></span> <span data-ttu-id="3347b-3210">O sistema de layout não respeitará tamanhos definidos no arquivo de <xref:System.Windows.UIElement.RenderSize%2A> propriedade diretamente.</span><span class="sxs-lookup"><span data-stu-id="3347b-3210">The layout system will not respect sizes set in the <xref:System.Windows.UIElement.RenderSize%2A> property directly.</span></span> <span data-ttu-id="3347b-3211">O <xref:System.Windows.UIElement.RenderSize%2A> propriedade é declarada gravável somente para habilitar determinado casos que deliberadamente contornar os protocolos de layout típico, como o suporte para a ponte de nível de núcleo do WPF a <xref:System.Windows.Documents.Adorner> classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-3211">The <xref:System.Windows.UIElement.RenderSize%2A> property is declared writable only to enable certain WPF core-level bridging cases that deliberately circumvent the typical layout protocols, such as support for the <xref:System.Windows.Documents.Adorner> class.</span></span>  
  
 <span data-ttu-id="3347b-3212">Essa propriedade pode ser usada para verificar o tamanho de renderização aplicável dentro do sistema de layout, como substituições <xref:System.Windows.UIElement.OnRender%2A> ou <xref:System.Windows.UIElement.GetLayoutClip%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3212">This property can be used for checking the applicable render size within layout system overrides such as <xref:System.Windows.UIElement.OnRender%2A> or <xref:System.Windows.UIElement.GetLayoutClip%2A>.</span></span>  
  
 <span data-ttu-id="3347b-3213">Um cenário mais comum está manipulando o <xref:System.Windows.FrameworkElement.SizeChanged> substituir eventos com o manipulador de classe ou o <xref:System.Windows.UIElement.OnRenderSizeChanged%2A> eventos.</span><span class="sxs-lookup"><span data-stu-id="3347b-3213">A more common scenario is handling the <xref:System.Windows.FrameworkElement.SizeChanged> event with the class handler override or the <xref:System.Windows.UIElement.OnRenderSizeChanged%2A> event.</span></span>  
  
## Examples  
 <span data-ttu-id="3347b-3214">O exemplo a seguir mostra como um adorno personalizado usa o <xref:System.Windows.UIElement.RenderSize%2A> valor para criar e dimensionar o gráfico de retângulo que define o adorno, como parte do seu <xref:System.Windows.UIElement.OnRender%2A> implementação.</span><span class="sxs-lookup"><span data-stu-id="3347b-3214">The following example shows how a custom adorner uses the <xref:System.Windows.UIElement.RenderSize%2A> value in order to create and size the rectangle graphic that defines the adorner, as part of its <xref:System.Windows.UIElement.OnRender%2A> implementation.</span></span>  
  
 [!code-csharp[AdornersMiscCode#UIElementDesiredSize](~/samples/snippets/csharp/VS_Snippets_Wpf/AdornersMiscCode/CSharp/Window1.xaml.cs#uielementdesiredsize)]
 [!code-vb[AdornersMiscCode#UIElementDesiredSize](~/samples/snippets/visualbasic/VS_Snippets_Wpf/AdornersMiscCode/visualbasic/window1.xaml.vb#uielementdesiredsize)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.UpdateLayout" />
      </Docs>
    </Member>
    <Member MemberName="RenderTransform">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Transform RenderTransform { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Transform RenderTransform" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.RenderTransform" />
      <MemberSignature Language="VB.NET" Value="Public Property RenderTransform As Transform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Transform ^ RenderTransform { System::Windows::Media::Transform ^ get(); void set(System::Windows::Media::Transform ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RenderTransform : System.Windows.Media.Transform with get, set" Usage="System.Windows.UIElement.RenderTransform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Transform</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3215">Obtém ou define informações de transformação que afetam a posição da renderização desse elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3215">Gets or sets transform information that affects the rendering position of this element.</span>
          </span>
          <span data-ttu-id="3347b-3216">É uma propriedade de dependência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3216">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3347b-3217">Descreve as especificações de transformação de renderização desejadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3217">Describes the specifics of the desired render transform.</span>
          </span>
          <span data-ttu-id="3347b-3218">O padrão é <see cref="P:System.Windows.Media.Transform.Identity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3218">The default is <see cref="P:System.Windows.Media.Transform.Identity" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-3219">Uma transformação de renderização não regenerar o tamanho do layout ou renderizar informações de tamanho.</span><span class="sxs-lookup"><span data-stu-id="3347b-3219">A render transform does not regenerate layout size or render size information.</span></span> <span data-ttu-id="3347b-3220">Renderizar transformações são usadas normalmente para animação ou aplicação de um efeito temporário a um elemento.</span><span class="sxs-lookup"><span data-stu-id="3347b-3220">Render transforms are typically intended for animating or applying a temporary effect to an element.</span></span> <span data-ttu-id="3347b-3221">Por exemplo, o elemento pode aplicar zoom quando focalizado ou moused sobre ou poderia variação na carga para chamar a atenção para essa parte do [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span><span class="sxs-lookup"><span data-stu-id="3347b-3221">For example, the element might zoom when focused or moused over, or might jitter on load to draw the eye to that part of the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span></span>  
  
<a name="dependencyPropertyInfo_RenderTransform"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3347b-3222">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="3347b-3222">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-3223">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-3223">Identifier field</span></span>|<xref:System.Windows.UIElement.RenderTransformProperty>|  
|<span data-ttu-id="3347b-3224">Propriedades de metadados definido como `true`</span><span class="sxs-lookup"><span data-stu-id="3347b-3224">Metadata properties set to `true`</span></span>|<span data-ttu-id="3347b-3225">Nenhum</span><span class="sxs-lookup"><span data-stu-id="3347b-3225">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderTransformOrigin">
      <MemberSignature Language="C#" Value="public System.Windows.Point RenderTransformOrigin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point RenderTransformOrigin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.RenderTransformOrigin" />
      <MemberSignature Language="VB.NET" Value="Public Property RenderTransformOrigin As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point RenderTransformOrigin { System::Windows::Point get(); void set(System::Windows::Point value); };" />
      <MemberSignature Language="F#" Value="member this.RenderTransformOrigin : System.Windows.Point with get, set" Usage="System.Windows.UIElement.RenderTransformOrigin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3226">Obtém ou define o ponto central de qualquer transformação de renderização possível declarada por <see cref="P:System.Windows.UIElement.RenderTransform" />, em relação aos limites do elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3226">Gets or sets the center point of any possible render transform declared by <see cref="P:System.Windows.UIElement.RenderTransform" />, relative to the bounds of the element.</span>
          </span>
          <span data-ttu-id="3347b-3227">É uma propriedade de dependência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3227">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3347b-3228">O valor que declara a transformação de renderização.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3228">The value that declares the render transform.</span>
          </span>
          <span data-ttu-id="3347b-3229">O valor padrão é um <see cref="T:System.Windows.Point" /> com coordenadas (0,0).</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3229">The default value is a <see cref="T:System.Windows.Point" /> with coordinates (0,0).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-3230"><xref:System.Windows.UIElement.RenderTransformOrigin%2A> tem um uso um pouco diferentes do padrão do <xref:System.Windows.Point> estrutura de valor, em que o <xref:System.Windows.Point> não representa um local absoluto em um sistema de coordenadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-3230"><xref:System.Windows.UIElement.RenderTransformOrigin%2A> has a somewhat nonstandard use of the <xref:System.Windows.Point> structure value, in that the <xref:System.Windows.Point> does not represent an absolute location in a coordinate system.</span></span> <span data-ttu-id="3347b-3231">Em vez disso, os valores entre 0 e 1 são interpretados como um fator para o intervalo do elemento atual em cada x, eixo y.</span><span class="sxs-lookup"><span data-stu-id="3347b-3231">Instead, values between 0 and 1 are interpreted as a factor for the range of the current element in each x,y axis.</span></span> <span data-ttu-id="3347b-3232">Por exemplo, (0.5,0.5) fará com que a transformação de renderização centralizado no elemento, ou (1,1) colocaria a transformação de renderização na parte inferior direito canto do elemento.</span><span class="sxs-lookup"><span data-stu-id="3347b-3232">For example, (0.5,0.5) will cause the render transform to be centered on the element, or (1,1) would place the render transform at the bottom right corner of the element.</span></span> <span data-ttu-id="3347b-3233"><xref:System.Double.NaN> não é um valor aceito.</span><span class="sxs-lookup"><span data-stu-id="3347b-3233"><xref:System.Double.NaN> is not an accepted value.</span></span>  
  
 <span data-ttu-id="3347b-3234">Os valores além de 0 e 1 também são aceitos e resultarão em mais efeitos de transformação não convencionais.</span><span class="sxs-lookup"><span data-stu-id="3347b-3234">Values beyond 0 and 1 are also accepted, and will result in more unconventional transform effects.</span></span> <span data-ttu-id="3347b-3235">Por exemplo, se você definir <xref:System.Windows.UIElement.RenderTransformOrigin%2A> (5,5) e, em seguida, aplicar um <xref:System.Windows.Media.RotateTransform>, o ponto de rotação será bem fora dos limites do próprio elemento.</span><span class="sxs-lookup"><span data-stu-id="3347b-3235">For instance, if you set <xref:System.Windows.UIElement.RenderTransformOrigin%2A> to be (5,5), and then apply a <xref:System.Windows.Media.RotateTransform>, the rotation point will be well outside the bounds of the element itself.</span></span> <span data-ttu-id="3347b-3236">A transformação irá girar o elemento ao redor em um círculo grande que se origina além do canto inferior direito.</span><span class="sxs-lookup"><span data-stu-id="3347b-3236">The transform will spin your element around in a big circle that originates beyond bottom right.</span></span> <span data-ttu-id="3347b-3237">A origem pode estar em algum lugar dentro de seu elemento pai e poderia ser possivelmente fora do quadro ou uma exibição.</span><span class="sxs-lookup"><span data-stu-id="3347b-3237">The origin might be somewhere inside its parent element and could possibly be possibly out of frame or view.</span></span> <span data-ttu-id="3347b-3238">Valores de ponto negativo são semelhantes, estes serão vá além da parte superior esquerda dos limites.</span><span class="sxs-lookup"><span data-stu-id="3347b-3238">Negative point values are similar, these will go beyond the top left bounds.</span></span>  
  
 <span data-ttu-id="3347b-3239">Renderizar transformações não afetam o layout e normalmente são usadas para animar ou aplicar um efeito temporário a um elemento.</span><span class="sxs-lookup"><span data-stu-id="3347b-3239">Render transforms do not affect layout, and are typically used to animate or apply a temporary effect to an element.</span></span>  
  
<a name="xamlAttributeUsage_RenderTransformOrigin"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="3347b-3240">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="3347b-3240">XAML Attribute Usage</span></span>  
  
```  
<object RenderTransformOrigin="xOrigin, yOrigin"/>  
```  
  
<a name="xamlPropertyElementUsage_RenderTransformOrigin"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="3347b-3241">Uso do elemento propriedade XAML</span><span class="sxs-lookup"><span data-stu-id="3347b-3241">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.RenderTransformOrigin>  
    <Point X=" xOrigin " Y=" yOrigin "/>  
  </object.RenderTransformOrigin>  
</object>  
```  
  
<a name="xamlValues_RenderTransformOrigin"></a>   
## <a name="xaml-values"></a><span data-ttu-id="3347b-3242">Valores XAML</span><span class="sxs-lookup"><span data-stu-id="3347b-3242">XAML Values</span></span>  
 <span data-ttu-id="3347b-3243">*xOrigin*</span><span class="sxs-lookup"><span data-stu-id="3347b-3243">*xOrigin*</span></span>  
 <span data-ttu-id="3347b-3244">O fator de origem horizontal.</span><span class="sxs-lookup"><span data-stu-id="3347b-3244">The horizontal origin factor.</span></span> <span data-ttu-id="3347b-3245">Isso geralmente é fornecido como um valor entre 0 e 1.</span><span class="sxs-lookup"><span data-stu-id="3347b-3245">This is typically given as a value between 0 and 1.</span></span> <span data-ttu-id="3347b-3246">Consulte Observações.</span><span class="sxs-lookup"><span data-stu-id="3347b-3246">See Remarks.</span></span>  
  
 <span data-ttu-id="3347b-3247">*yOrigin*</span><span class="sxs-lookup"><span data-stu-id="3347b-3247">*yOrigin*</span></span>  
 <span data-ttu-id="3347b-3248">O fator de origem vertical.</span><span class="sxs-lookup"><span data-stu-id="3347b-3248">The vertical origin factor.</span></span> <span data-ttu-id="3347b-3249">Isso geralmente é fornecido como um valor entre 0 e 1.</span><span class="sxs-lookup"><span data-stu-id="3347b-3249">This is typically given as a value between 0 and 1.</span></span> <span data-ttu-id="3347b-3250">Consulte Observações.</span><span class="sxs-lookup"><span data-stu-id="3347b-3250">See Remarks.</span></span>  
  
<a name="dependencyPropertyInfo_RenderTransformOrigin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3347b-3251">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="3347b-3251">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-3252">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-3252">Identifier field</span></span>|<xref:System.Windows.UIElement.RenderTransformOriginProperty>|  
|<span data-ttu-id="3347b-3253">Propriedades de metadados definido como `true`</span><span class="sxs-lookup"><span data-stu-id="3347b-3253">Metadata properties set to `true`</span></span>|<span data-ttu-id="3347b-3254">Nenhum</span><span class="sxs-lookup"><span data-stu-id="3347b-3254">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3347b-3255">O exemplo a seguir cria os elementos no código, aplica um <xref:System.Windows.UIElement.RenderTransformOrigin%2A>e, em seguida, aplica um <xref:System.Windows.UIElement.RenderTransform%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3255">The following example builds up elements in code, applies a <xref:System.Windows.UIElement.RenderTransformOrigin%2A>, and then applies a  <xref:System.Windows.UIElement.RenderTransform%2A>.</span></span>  
  
 [!code-csharp[transformanimations_snip#UIElementRenderTransformOrigin](~/samples/snippets/csharp/VS_Snippets_Wpf/transformanimations_snip/CSharp/RotateAboutCenterExample.cs#uielementrendertransformorigin)]
 [!code-vb[transformanimations_snip#UIElementRenderTransformOrigin](~/samples/snippets/visualbasic/VS_Snippets_Wpf/transformanimations_snip/visualbasic/rotateaboutcenterexample.vb#uielementrendertransformorigin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.RenderTransform" />
      </Docs>
    </Member>
    <Member MemberName="RenderTransformOriginProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RenderTransformOriginProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RenderTransformOriginProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.RenderTransformOriginProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RenderTransformOriginProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ RenderTransformOriginProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable RenderTransformOriginProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.RenderTransformOriginProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3256">Identifica a propriedade de dependência <see cref="P:System.Windows.UIElement.RenderTransformOrigin" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3256">Identifies the <see cref="P:System.Windows.UIElement.RenderTransformOrigin" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderTransformProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RenderTransformProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RenderTransformProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.RenderTransformProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RenderTransformProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ RenderTransformProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable RenderTransformProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.RenderTransformProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3257">Identifica a propriedade de dependência <see cref="P:System.Windows.UIElement.RenderTransform" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3257">Identifies the <see cref="P:System.Windows.UIElement.RenderTransform" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeCommandBindings">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeCommandBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeCommandBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ShouldSerializeCommandBindings" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeCommandBindings () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeCommandBindings();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeCommandBindings : unit -&gt; bool" Usage="uIElement.ShouldSerializeCommandBindings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3258">Indica se os processos de serialização devem serializar o conteúdo da propriedade <see cref="P:System.Windows.UIElement.CommandBindings" /> em instâncias dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3258">Returns whether serialization processes should serialize the contents of the <see cref="P:System.Windows.UIElement.CommandBindings" /> property on instances of this class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3347b-3259">
            <see langword="true" /> se o valor da propriedade <see cref="P:System.Windows.UIElement.CommandBindings" /> precisar ser serializado; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3259">
              <see langword="true" /> if the <see cref="P:System.Windows.UIElement.CommandBindings" /> property value should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-3260">Isso retornará `true` se <xref:System.Windows.UIElement.CommandBindings%2A> é definido localmente.</span><span class="sxs-lookup"><span data-stu-id="3347b-3260">This will return `true` if <xref:System.Windows.UIElement.CommandBindings%2A> is locally set.</span></span>  
  
 <span data-ttu-id="3347b-3261">Isso `ShouldSerialize` método é fornecido, pois o <xref:System.Windows.UIElement.CommandBindings%2A> propriedade não tem um valor padrão simples.</span><span class="sxs-lookup"><span data-stu-id="3347b-3261">This `ShouldSerialize` method is provided because the <xref:System.Windows.UIElement.CommandBindings%2A> property does not have a simple default value.</span></span> <span data-ttu-id="3347b-3262">Este método indica se a propriedade foi alterada do seu valor padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-3262">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="3347b-3263">Normalmente você invoca esse método se você estiver desenvolvendo um designer ou desenvolver seu próprio controle incorporando um <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3263">You typically invoke this method if you are either developing a designer or developing your own control incorporating a <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="3347b-3264">Para obter mais informações, consulte [definindo valores padrão com os métodos ShouldSerialize e redefinir](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span><span class="sxs-lookup"><span data-stu-id="3347b-3264">For more information, see [Defining Default Values with the ShouldSerialize and Reset Methods](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeInputBindings">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeInputBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeInputBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ShouldSerializeInputBindings" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeInputBindings () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeInputBindings();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeInputBindings : unit -&gt; bool" Usage="uIElement.ShouldSerializeInputBindings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3265">Indica se os processos de serialização devem serializar o conteúdo da propriedade <see cref="P:System.Windows.UIElement.InputBindings" /> em instâncias dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3265">Returns whether serialization processes should serialize the contents of the <see cref="P:System.Windows.UIElement.InputBindings" /> property on instances of this class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3347b-3266">
            <see langword="true" /> se o valor da propriedade <see cref="P:System.Windows.UIElement.InputBindings" /> precisar ser serializado; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3266">
              <see langword="true" /> if the <see cref="P:System.Windows.UIElement.InputBindings" /> property value should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-3267">Isso retornará `true` se <xref:System.Windows.UIElement.InputBindings%2A> é definido localmente.</span><span class="sxs-lookup"><span data-stu-id="3347b-3267">This will return `true` if <xref:System.Windows.UIElement.InputBindings%2A> is locally set.</span></span>  
  
 <span data-ttu-id="3347b-3268">Isso `ShouldSerialize` método é fornecido, pois o <xref:System.Windows.UIElement.InputBindings%2A> propriedade não tem um valor padrão simples.</span><span class="sxs-lookup"><span data-stu-id="3347b-3268">This `ShouldSerialize` method is provided because the <xref:System.Windows.UIElement.InputBindings%2A> property does not have a simple default value.</span></span> <span data-ttu-id="3347b-3269">Este método indica se a propriedade foi alterada do seu valor padrão.</span><span class="sxs-lookup"><span data-stu-id="3347b-3269">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="3347b-3270">Normalmente você invoca esse método se você estiver desenvolvendo um designer ou desenvolver seu próprio controle incorporando um <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3270">You typically invoke this method if you are either developing a designer or developing your own control incorporating a <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="3347b-3271">Para obter mais informações, consulte [definindo valores padrão com os métodos ShouldSerialize e redefinir](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span><span class="sxs-lookup"><span data-stu-id="3347b-3271">For more information, see [Defining Default Values with the ShouldSerialize and Reset Methods](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SnapsToDevicePixels">
      <MemberSignature Language="C#" Value="public bool SnapsToDevicePixels { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SnapsToDevicePixels" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.SnapsToDevicePixels" />
      <MemberSignature Language="VB.NET" Value="Public Property SnapsToDevicePixels As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SnapsToDevicePixels { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SnapsToDevicePixels : bool with get, set" Usage="System.Windows.UIElement.SnapsToDevicePixels" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3272">Obtém ou define um valor que determina se a renderização para esse elemento deve usar configurações de pixel específica do dispositivo durante a renderização.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3272">Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.</span>
          </span>
          <span data-ttu-id="3347b-3273">É uma propriedade de dependência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3273">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3347b-3274">
            <see langword="true" /> se o elemento precisar renderizar de acordo com os pixels do dispositivo; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3274">
              <see langword="true" /> if the element should render in accordance to device pixels; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3347b-3275">O padrão como declarado em <see cref="T:System.Windows.UIElement" /> é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3275">The default as declared on <see cref="T:System.Windows.UIElement" /> is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-3276">Você pode definir essa propriedade `true` no seu elemento raiz para habilitar o pixel ajustar-se de renderização em toda a interface do usuário.</span><span class="sxs-lookup"><span data-stu-id="3347b-3276">You can set this property to `true` on your root element to enable pixel snap rendering throughout the UI.</span></span> <span data-ttu-id="3347b-3277">Para dispositivos operando em maior 96 [!INCLUDE[TLA#tla_dpi](~/includes/tlasharptla-dpi-md.md)], pixel ajuste a renderização pode minimizar artefatos visuais de suavização perto linhas sólidas de unidade única.</span><span class="sxs-lookup"><span data-stu-id="3347b-3277">For devices operating at greater than 96 [!INCLUDE[TLA#tla_dpi](~/includes/tlasharptla-dpi-md.md)], pixel snap rendering can minimize anti-aliasing visual artifacts in the vicinity of single-unit solid lines.</span></span>  
  
 <span data-ttu-id="3347b-3278">Quando herdada pela <xref:System.Windows.FrameworkElement> ou qualquer possível classes derivadas, <xref:System.Windows.FrameworkElement> substitui os metadados para essa propriedade de dependência definir o <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> propriedade de metadados a `true`.</span><span class="sxs-lookup"><span data-stu-id="3347b-3278">When inherited by <xref:System.Windows.FrameworkElement> or any possible derived classes, <xref:System.Windows.FrameworkElement> overrides the metadata for this dependency property to set the <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> metadata property to `true`.</span></span> <span data-ttu-id="3347b-3279">O que isso atinge é que apenas o elemento mais externo em uma subárvore precisa especificar <xref:System.Windows.UIElement.SnapsToDevicePixels%2A> como `true`, e, em seguida, reporta todos os elementos filho nessa subárvore <xref:System.Windows.UIElement.SnapsToDevicePixels%2A> como `true` e terá o <xref:System.Windows.UIElement.SnapsToDevicePixels%2A> efeito visual.</span><span class="sxs-lookup"><span data-stu-id="3347b-3279">What this achieves is that only the outermost element in a subtree needs to specify <xref:System.Windows.UIElement.SnapsToDevicePixels%2A> as `true`, and all child elements of that subtree will then report <xref:System.Windows.UIElement.SnapsToDevicePixels%2A> as `true` and will have the <xref:System.Windows.UIElement.SnapsToDevicePixels%2A> visual effect.</span></span>  
  
<a name="dependencyPropertyInfo_SnapsToDevicePixels"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3347b-3280">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="3347b-3280">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-3281">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-3281">Identifier field</span></span>|<xref:System.Windows.UIElement.SnapsToDevicePixelsProperty>|  
|<span data-ttu-id="3347b-3282">Propriedades de metadados definido como `true`</span><span class="sxs-lookup"><span data-stu-id="3347b-3282">Metadata properties set to `true`</span></span>|<span data-ttu-id="3347b-3283">Nenhum</span><span class="sxs-lookup"><span data-stu-id="3347b-3283">None</span></span>|  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/aa970908(v=vs.90)">
          <span data-ttu-id="3347b-3284">Encaixe em aplicativos do WPF em pixels</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3284">Pixel Snapping in WPF Applications</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="SnapsToDevicePixelsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SnapsToDevicePixelsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SnapsToDevicePixelsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.SnapsToDevicePixelsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SnapsToDevicePixelsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SnapsToDevicePixelsProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SnapsToDevicePixelsProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.SnapsToDevicePixelsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3285">Identifica a propriedade de dependência <see cref="P:System.Windows.UIElement.SnapsToDevicePixels" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3285">Identifies the <see cref="P:System.Windows.UIElement.SnapsToDevicePixels" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler StylusButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler StylusButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusButtonDown As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ StylusButtonDown;" />
      <MemberSignature Language="F#" Value="member this.StylusButtonDown : System.Windows.Input.StylusButtonEventHandler " Usage="member this.StylusButtonDown : System.Windows.Input.StylusButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3286">Ocorre quando o botão da caneta é pressionado enquanto o ponteiro está sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3286">Occurs when the stylus button is pressed while the pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-3287">Esse evento cria um alias para o <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.UIElement.StylusButtonDown> faz parte da classe a lista de membros quando <xref:System.Windows.UIElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="3347b-3287">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusButtonDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="3347b-3288">Manipuladores de eventos que estão anexados para o <xref:System.Windows.UIElement.StylusButtonDown> evento associado subjacente <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-3288">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusButtonDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="3347b-3289">Toque, mouse e entrada de caneta existem em uma relação específica.</span><span class="sxs-lookup"><span data-stu-id="3347b-3289">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="3347b-3290">Para obter mais informações, consulte [visão geral de entrada](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3347b-3290">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-3291">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-3291">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-3292">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-3292">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusButtonDownEvent>|  
|<span data-ttu-id="3347b-3293">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-3293">Routing strategy</span></span>|<span data-ttu-id="3347b-3294">Propagação</span><span class="sxs-lookup"><span data-stu-id="3347b-3294">Bubbling</span></span>|  
|<span data-ttu-id="3347b-3295">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-3295">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="3347b-3296">O evento por túnel correspondente é <xref:System.Windows.UIElement.PreviewStylusButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3296">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusButtonDown>.</span></span>  
  
-   <span data-ttu-id="3347b-3297">Substituir <xref:System.Windows.UIElement.OnStylusButtonDown%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-3297">Override <xref:System.Windows.UIElement.OnStylusButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="StylusButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.StylusButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3298">Identifica o evento roteado <see cref="E:System.Windows.UIElement.StylusButtonDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3298">Identifies the <see cref="E:System.Windows.UIElement.StylusButtonDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-3299">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-3299">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-3300">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-3300">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-3301">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-3301">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-3302">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3302">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-3303">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3303">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler StylusButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler StylusButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusButtonUp As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ StylusButtonUp;" />
      <MemberSignature Language="F#" Value="member this.StylusButtonUp : System.Windows.Input.StylusButtonEventHandler " Usage="member this.StylusButtonUp : System.Windows.Input.StylusButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3304">Ocorre quando o botão da caneta é liberado enquanto o ponteiro está sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3304">Occurs when the stylus button is released while the pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-3305">Esse evento cria um alias para o <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.UIElement.StylusButtonUp> faz parte da classe a lista de membros quando <xref:System.Windows.UIElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="3347b-3305">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusButtonUp> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="3347b-3306">Manipuladores de eventos que estão anexados para o <xref:System.Windows.UIElement.StylusButtonUp> evento associado subjacente <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-3306">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusButtonUp> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="3347b-3307">Toque, mouse e entrada de caneta existem em uma relação específica.</span><span class="sxs-lookup"><span data-stu-id="3347b-3307">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="3347b-3308">Para obter mais informações, consulte [visão geral de entrada](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3347b-3308">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-3309">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-3309">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-3310">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-3310">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusButtonUpEvent>|  
|<span data-ttu-id="3347b-3311">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-3311">Routing strategy</span></span>|<span data-ttu-id="3347b-3312">Propagação</span><span class="sxs-lookup"><span data-stu-id="3347b-3312">Bubbling</span></span>|  
|<span data-ttu-id="3347b-3313">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-3313">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="3347b-3314">O evento por túnel correspondente é <xref:System.Windows.UIElement.PreviewStylusButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3314">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusButtonUp>.</span></span>  
  
-   <span data-ttu-id="3347b-3315">Substituir <xref:System.Windows.UIElement.OnStylusButtonUp%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-3315">Override <xref:System.Windows.UIElement.OnStylusButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="StylusButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.StylusButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3316">Identifica o evento roteado <see cref="E:System.Windows.UIElement.StylusButtonUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3316">Identifies the <see cref="E:System.Windows.UIElement.StylusButtonUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-3317">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-3317">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-3318">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-3318">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-3319">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-3319">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-3320">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3320">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-3321">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3321">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusDownEventHandler StylusDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusDownEventHandler StylusDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusDown As StylusDownEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusDownEventHandler ^ StylusDown;" />
      <MemberSignature Language="F#" Value="member this.StylusDown : System.Windows.Input.StylusDownEventHandler " Usage="member this.StylusDown : System.Windows.Input.StylusDownEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusDownEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3322">Ocorre quando a caneta toca o digitalizador enquanto está sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3322">Occurs when the stylus touches the digitizer while the stylus is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-3323">Esse evento cria um alias para o <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.UIElement.StylusDown> faz parte da classe a lista de membros quando <xref:System.Windows.UIElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="3347b-3323">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="3347b-3324">Manipuladores de eventos que estão anexados para o <xref:System.Windows.UIElement.StylusDown> evento associado subjacente <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-3324">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="3347b-3325">Toque, mouse e entrada de caneta existem em uma relação específica.</span><span class="sxs-lookup"><span data-stu-id="3347b-3325">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="3347b-3326">Para obter mais informações, consulte [visão geral de entrada](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3347b-3326">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-3327">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-3327">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-3328">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-3328">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusDownEvent>|  
|<span data-ttu-id="3347b-3329">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-3329">Routing strategy</span></span>|<span data-ttu-id="3347b-3330">Propagação</span><span class="sxs-lookup"><span data-stu-id="3347b-3330">Bubbling</span></span>|  
|<span data-ttu-id="3347b-3331">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-3331">Delegate</span></span>|<xref:System.Windows.Input.StylusDownEventHandler>|  
  
-   <span data-ttu-id="3347b-3332">O evento por túnel correspondente é <xref:System.Windows.UIElement.PreviewStylusDown>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3332">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusDown>.</span></span>  
  
-   <span data-ttu-id="3347b-3333">Substituir <xref:System.Windows.UIElement.OnStylusDown%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-3333">Override <xref:System.Windows.UIElement.OnStylusDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.StylusDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3334">Identifica o evento roteado <see cref="E:System.Windows.UIElement.StylusDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3334">Identifies the <see cref="E:System.Windows.UIElement.StylusDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-3335">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-3335">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-3336">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-3336">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-3337">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-3337">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-3338">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3338">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-3339">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3339">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusEnter As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusEnter;" />
      <MemberSignature Language="F#" Value="member this.StylusEnter : System.Windows.Input.StylusEventHandler " Usage="member this.StylusEnter : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusEnter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3340">Ocorre quando a caneta entra nos limites deste elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3340">Occurs when the stylus enters the bounds of this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-3341"><xref:System.Windows.UIElement.StylusEnter> é uma que usa o estratégia de roteamento de manipulação de eventos direto.</span><span class="sxs-lookup"><span data-stu-id="3347b-3341"><xref:System.Windows.UIElement.StylusEnter> is a  that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="3347b-3342">Eventos roteados diretos não são gerados ao longo de uma rota; em vez disso, eles são manipulados no mesmo elemento em que eles são gerados.</span><span class="sxs-lookup"><span data-stu-id="3347b-3342">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="3347b-3343">No entanto, eles permitem que outros aspectos do comportamento do evento roteado, como gatilhos de evento nos estilos.</span><span class="sxs-lookup"><span data-stu-id="3347b-3343">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="3347b-3344">Embora <xref:System.Windows.UIElement.StylusEnter> rastreia quando a caneta entra nos limites de um elemento, esse evento mais literalmente relata que o <xref:System.Windows.UIElement.IsStylusOver%2A> o valor da propriedade foi alterado de `false` para `true` neste elemento.</span><span class="sxs-lookup"><span data-stu-id="3347b-3344">Although <xref:System.Windows.UIElement.StylusEnter> tracks when the stylus enters the bounds of an element, this event more literally reports that the <xref:System.Windows.UIElement.IsStylusOver%2A> property value has changed from `false` to `true` on this element.</span></span>  
  
 <span data-ttu-id="3347b-3345">Esse evento cria um alias para o <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.UIElement.StylusEnter> faz parte da classe a lista de membros quando <xref:System.Windows.UIElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="3347b-3345">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusEnter> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="3347b-3346">Manipuladores de eventos que estão anexados para o <xref:System.Windows.UIElement.StylusEnter> evento associado subjacente <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-3346">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusEnter> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="3347b-3347">Toque, mouse e entrada de caneta existem em uma relação específica.</span><span class="sxs-lookup"><span data-stu-id="3347b-3347">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="3347b-3348">Para obter mais informações, consulte [visão geral de entrada](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3347b-3348">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-3349">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-3349">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-3350">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-3350">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusEnterEvent>|  
|<span data-ttu-id="3347b-3351">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-3351">Routing strategy</span></span>|<span data-ttu-id="3347b-3352">Direto</span><span class="sxs-lookup"><span data-stu-id="3347b-3352">Direct</span></span>|  
|<span data-ttu-id="3347b-3353">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-3353">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="3347b-3354">Substituir <xref:System.Windows.UIElement.OnStylusEnter%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-3354">Override <xref:System.Windows.UIElement.OnStylusEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.StylusEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3355">Identifica o evento roteado <see cref="E:System.Windows.UIElement.StylusEnter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3355">Identifies the <see cref="E:System.Windows.UIElement.StylusEnter" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-3356">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-3356">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-3357">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-3357">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-3358">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-3358">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-3359">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3359">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-3360">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3360">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInAirMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusInAirMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusInAirMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusInAirMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusInAirMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusInAirMove;" />
      <MemberSignature Language="F#" Value="member this.StylusInAirMove : System.Windows.Input.StylusEventHandler " Usage="member this.StylusInAirMove : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusInAirMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3361">Ocorre quando a caneta se move sobre um elemento sem tocar de fato o digitalizador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3361">Occurs when the stylus moves over an element without actually touching the digitizer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-3362">Esse evento cria um alias para o <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.UIElement.StylusInAirMove> faz parte da classe a lista de membros quando <xref:System.Windows.UIElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="3347b-3362">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusInAirMove> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="3347b-3363">Manipuladores de eventos que estão anexados para o <xref:System.Windows.UIElement.StylusInAirMove> evento associado subjacente <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-3363">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusInAirMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="3347b-3364">Toque, mouse e entrada de caneta existem em uma relação específica.</span><span class="sxs-lookup"><span data-stu-id="3347b-3364">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="3347b-3365">Para obter mais informações, consulte [visão geral de entrada](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3347b-3365">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusInAirMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-3366">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-3366">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-3367">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-3367">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusInAirMoveEvent>|  
|<span data-ttu-id="3347b-3368">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-3368">Routing strategy</span></span>|<span data-ttu-id="3347b-3369">Propagação</span><span class="sxs-lookup"><span data-stu-id="3347b-3369">Bubbling</span></span>|  
|<span data-ttu-id="3347b-3370">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-3370">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="3347b-3371">O evento por túnel correspondente é <xref:System.Windows.UIElement.PreviewStylusInAirMove>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3371">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusInAirMove>.</span></span>  
  
-   <span data-ttu-id="3347b-3372">Substituir <xref:System.Windows.UIElement.OnStylusInAirMove%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-3372">Override <xref:System.Windows.UIElement.OnStylusInAirMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInAirMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusInAirMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusInAirMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusInAirMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusInAirMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusInAirMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusInAirMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.StylusInAirMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3373">Identifica o evento roteado <see cref="E:System.Windows.UIElement.StylusInAirMove" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3373">Identifies the <see cref="E:System.Windows.UIElement.StylusInAirMove" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-3374">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-3374">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-3375">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-3375">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-3376">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-3376">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-3377">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3377">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-3378">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3378">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusInRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusInRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusInRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusInRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusInRange;" />
      <MemberSignature Language="F#" Value="member this.StylusInRange : System.Windows.Input.StylusEventHandler " Usage="member this.StylusInRange : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusInRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3379">Ocorre quando a caneta está sobre este elemento e perto o suficiente do digitalizador para ser detectada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3379">Occurs when the stylus is close enough to the digitizer to be detected, while over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-3380">Esse evento cria um alias para o <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.UIElement.StylusInRange> faz parte da classe a lista de membros quando <xref:System.Windows.UIElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="3347b-3380">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusInRange> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="3347b-3381">Manipuladores de eventos que estão anexados para o <xref:System.Windows.UIElement.StylusInRange> evento associado subjacente <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-3381">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusInRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="3347b-3382">Toque, mouse e entrada de caneta existem em uma relação específica.</span><span class="sxs-lookup"><span data-stu-id="3347b-3382">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="3347b-3383">Para obter mais informações, consulte [visão geral de entrada](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3347b-3383">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusInRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-3384">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-3384">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-3385">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-3385">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusInRangeEvent>|  
|<span data-ttu-id="3347b-3386">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-3386">Routing strategy</span></span>|<span data-ttu-id="3347b-3387">Propagação</span><span class="sxs-lookup"><span data-stu-id="3347b-3387">Bubbling</span></span>|  
|<span data-ttu-id="3347b-3388">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-3388">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="3347b-3389">O evento por túnel correspondente é <xref:System.Windows.UIElement.PreviewStylusInRange>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3389">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusInRange>.</span></span>  
  
-   <span data-ttu-id="3347b-3390">Substituir <xref:System.Windows.UIElement.OnStylusInRange%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-3390">Override <xref:System.Windows.UIElement.OnStylusInRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusInRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusInRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusInRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusInRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusInRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusInRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.StylusInRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3391">Identifica o evento roteado <see cref="E:System.Windows.UIElement.StylusInRange" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3391">Identifies the <see cref="E:System.Windows.UIElement.StylusInRange" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-3392">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-3392">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-3393">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-3393">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-3394">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-3394">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-3395">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3395">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-3396">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3396">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusLeave As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusLeave;" />
      <MemberSignature Language="F#" Value="member this.StylusLeave : System.Windows.Input.StylusEventHandler " Usage="member this.StylusLeave : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusLeave</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3397">Ocorre quando a caneta sai dos limites do elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3397">Occurs when the stylus leaves the bounds of the element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-3398"><xref:System.Windows.UIElement.StylusLeave> é uma que usa o estratégia de roteamento de manipulação de eventos direto.</span><span class="sxs-lookup"><span data-stu-id="3347b-3398"><xref:System.Windows.UIElement.StylusLeave> is a  that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="3347b-3399">Eventos roteados diretos não são gerados ao longo de uma rota; em vez disso, eles são manipulados no mesmo elemento em que eles são gerados.</span><span class="sxs-lookup"><span data-stu-id="3347b-3399">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="3347b-3400">No entanto, eles permitem que outros aspectos do comportamento do evento roteado, como gatilhos de evento nos estilos.</span><span class="sxs-lookup"><span data-stu-id="3347b-3400">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="3347b-3401">Embora <xref:System.Windows.UIElement.StylusLeave> rastreia quando a caneta sai dos limites de um elemento, esse evento mais literalmente relata que o <xref:System.Windows.UIElement.IsStylusOver%2A> o valor da propriedade foi alterado de `true` para `false` neste elemento.</span><span class="sxs-lookup"><span data-stu-id="3347b-3401">Although <xref:System.Windows.UIElement.StylusLeave> tracks when the stylus leaves the bounds of an element, this event more literally reports that the <xref:System.Windows.UIElement.IsStylusOver%2A> property value has changed from `true` to `false` on this element.</span></span>  
  
 <span data-ttu-id="3347b-3402">Esse evento cria um alias para o <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.UIElement.StylusLeave> faz parte da classe a lista de membros quando <xref:System.Windows.UIElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="3347b-3402">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusLeave> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="3347b-3403">Manipuladores de eventos que estão anexados para o <xref:System.Windows.UIElement.StylusLeave> evento associado subjacente <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-3403">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusLeave> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="3347b-3404">Toque, mouse e entrada de caneta existem em uma relação específica.</span><span class="sxs-lookup"><span data-stu-id="3347b-3404">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="3347b-3405">Para obter mais informações, consulte [visão geral de entrada](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3347b-3405">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-3406">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-3406">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-3407">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-3407">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusLeaveEvent>|  
|<span data-ttu-id="3347b-3408">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-3408">Routing strategy</span></span>|<span data-ttu-id="3347b-3409">Direto</span><span class="sxs-lookup"><span data-stu-id="3347b-3409">Direct</span></span>|  
|<span data-ttu-id="3347b-3410">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-3410">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="3347b-3411">Substituir <xref:System.Windows.UIElement.OnStylusLeave%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-3411">Override <xref:System.Windows.UIElement.OnStylusLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.StylusLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3412">Identifica o evento roteado <see cref="E:System.Windows.UIElement.StylusLeave" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3412">Identifies the <see cref="E:System.Windows.UIElement.StylusLeave" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-3413">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-3413">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-3414">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-3414">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-3415">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-3415">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-3416">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3416">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-3417">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3417">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusMove;" />
      <MemberSignature Language="F#" Value="member this.StylusMove : System.Windows.Input.StylusEventHandler " Usage="member this.StylusMove : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3418">Ocorre quando a caneta se move sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3418">Occurs when the stylus moves over this element.</span>
          </span>
          <span data-ttu-id="3347b-3419">A caneta deve mover-se enquanto está no digitalizador para gerar este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3419">The stylus must move while on the digitizer to raise this event.</span>
          </span>
          <span data-ttu-id="3347b-3420">Caso contrário, <see cref="E:System.Windows.UIElement.StylusInAirMove" /> será gerado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3420">Otherwise, <see cref="E:System.Windows.UIElement.StylusInAirMove" /> is raised instead.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-3421">Esse evento cria um alias para o <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.UIElement.StylusMove> faz parte da classe a lista de membros quando <xref:System.Windows.UIElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="3347b-3421">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusMove> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="3347b-3422">Manipuladores de eventos que estão anexados para o <xref:System.Windows.UIElement.StylusMove> evento associado subjacente <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-3422">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="3347b-3423">Toque, mouse e entrada de caneta existem em uma relação específica.</span><span class="sxs-lookup"><span data-stu-id="3347b-3423">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="3347b-3424">Para obter mais informações, consulte [visão geral de entrada](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3347b-3424">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-3425">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-3425">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-3426">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-3426">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusMoveEvent>|  
|<span data-ttu-id="3347b-3427">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-3427">Routing strategy</span></span>|<span data-ttu-id="3347b-3428">Propagação</span><span class="sxs-lookup"><span data-stu-id="3347b-3428">Bubbling</span></span>|  
|<span data-ttu-id="3347b-3429">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-3429">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="3347b-3430">O evento por túnel correspondente é <xref:System.Windows.UIElement.PreviewStylusMove>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3430">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusMove>.</span></span>  
  
-   <span data-ttu-id="3347b-3431">Substituir <xref:System.Windows.UIElement.OnStylusMove%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-3431">Override <xref:System.Windows.UIElement.OnStylusMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.StylusMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3432">Identifica o evento roteado <see cref="E:System.Windows.UIElement.StylusMove" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3432">Identifies the <see cref="E:System.Windows.UIElement.StylusMove" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-3433">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-3433">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-3434">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-3434">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-3435">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-3435">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-3436">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3436">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-3437">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3437">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusOutOfRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusOutOfRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusOutOfRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusOutOfRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusOutOfRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusOutOfRange;" />
      <MemberSignature Language="F#" Value="member this.StylusOutOfRange : System.Windows.Input.StylusEventHandler " Usage="member this.StylusOutOfRange : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusOutOfRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3438">Ocorre quando a caneta está sobre o elemento e longe demais do digitalizador para ser detectada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3438">Occurs when the stylus is too far from the digitizer to be detected, while over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-3439">Esse evento cria um alias para o <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.UIElement.StylusOutOfRange> faz parte da classe a lista de membros quando <xref:System.Windows.UIElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="3347b-3439">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusOutOfRange> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="3347b-3440">Manipuladores de eventos que estão anexados para o <xref:System.Windows.UIElement.StylusOutOfRange> evento associado subjacente <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-3440">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusOutOfRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="3347b-3441">Toque, mouse e entrada de caneta existem em uma relação específica.</span><span class="sxs-lookup"><span data-stu-id="3347b-3441">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="3347b-3442">Para obter mais informações, consulte [visão geral de entrada](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3347b-3442">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusOutOfRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-3443">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-3443">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-3444">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-3444">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusOutOfRangeEvent>|  
|<span data-ttu-id="3347b-3445">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-3445">Routing strategy</span></span>|<span data-ttu-id="3347b-3446">Propagação</span><span class="sxs-lookup"><span data-stu-id="3347b-3446">Bubbling</span></span>|  
|<span data-ttu-id="3347b-3447">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-3447">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="3347b-3448">O evento por túnel correspondente é <xref:System.Windows.UIElement.PreviewStylusOutOfRange>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3448">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusOutOfRange>.</span></span>  
  
-   <span data-ttu-id="3347b-3449">Substituir <xref:System.Windows.UIElement.OnStylusOutOfRange%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-3449">Override <xref:System.Windows.UIElement.OnStylusOutOfRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusOutOfRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusOutOfRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusOutOfRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusOutOfRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusOutOfRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusOutOfRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusOutOfRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.StylusOutOfRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3450">Identifica o evento roteado <see cref="E:System.Windows.UIElement.StylusOutOfRange" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3450">Identifies the <see cref="E:System.Windows.UIElement.StylusOutOfRange" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-3451">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-3451">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-3452">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-3452">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-3453">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-3453">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-3454">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3454">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-3455">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3455">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusPlugIns">
      <MemberSignature Language="C#" Value="protected System.Windows.Input.StylusPlugIns.StylusPlugInCollection StylusPlugIns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.StylusPlugIns.StylusPlugInCollection StylusPlugIns" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.StylusPlugIns" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property StylusPlugIns As StylusPlugInCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::Input::StylusPlugIns::StylusPlugInCollection ^ StylusPlugIns { System::Windows::Input::StylusPlugIns::StylusPlugInCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StylusPlugIns : System.Windows.Input.StylusPlugIns.StylusPlugInCollection" Usage="System.Windows.UIElement.StylusPlugIns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusPlugIns.StylusPlugInCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3456">Obtém uma coleção de todos os objetos de plug-in (personalização) de caneta associados a esse elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3456">Gets a collection of all stylus plug-in (customization) objects associated with this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3347b-3457">A coleção de plug-ins de caneta como uma coleção especializada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3457">The collection of stylus plug-ins, as a specialized collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-3458">Um exemplo de um controle que preenche essa coleção é <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3458">An example of a control that populates this collection is <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="3347b-3459"><xref:System.Windows.Controls.InkCanvas> Adiciona o <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> como um item de coleção, que permite que o <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> para interagir com a entrada de caneta e produzir a renderização exclusiva em resposta a caneta controlado por eventos.</span><span class="sxs-lookup"><span data-stu-id="3347b-3459"><xref:System.Windows.Controls.InkCanvas> adds the <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> as a collection item, which enables the <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> to interact with stylus input and produce the unique rendering in response to stylus driven events.</span></span>  
  
 <span data-ttu-id="3347b-3460">Para obter informações sobre a criação de plug-ins personalizados que podem receber e interpretar a entrada de caneta, consulte [interceptando entrada da caneta](~/docs/framework/wpf/advanced/intercepting-input-from-the-stylus.md).</span><span class="sxs-lookup"><span data-stu-id="3347b-3460">For information on creating custom plug-ins that can receive and interpret stylus input, see [Intercepting Input from the Stylus](~/docs/framework/wpf/advanced/intercepting-input-from-the-stylus.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3347b-3461">O exemplo a seguir cria uma <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> da instância e adiciona-o para o <xref:System.Windows.UIElement.StylusPlugIns%2A> coleção para uma controle de manuseio de tinta personalizada.</span><span class="sxs-lookup"><span data-stu-id="3347b-3461">The following example creates a <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> instance and adds it to the <xref:System.Windows.UIElement.StylusPlugIns%2A> collection for a custom ink handling control.</span></span>  
  
 [!code-csharp[StylusPluginSamples#3](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusPluginSamples/CSharp/StylusControl.cs#3)]
 [!code-vb[StylusPluginSamples#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusPluginSamples/VisualBasic/StylusControl.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.StylusPlugIns.DynamicRenderer" />
        <altmember cref="T:System.Windows.Controls.InkCanvas" />
      </Docs>
    </Member>
    <Member MemberName="StylusSystemGesture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusSystemGestureEventHandler StylusSystemGesture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusSystemGestureEventHandler StylusSystemGesture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusSystemGesture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusSystemGesture As StylusSystemGestureEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusSystemGestureEventHandler ^ StylusSystemGesture;" />
      <MemberSignature Language="F#" Value="member this.StylusSystemGesture : System.Windows.Input.StylusSystemGestureEventHandler " Usage="member this.StylusSystemGesture : System.Windows.Input.StylusSystemGestureEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusSystemGesture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusSystemGestureEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3462">Ocorre quando o usuário executa um dos diversos gestos da caneta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3462">Occurs when a user performs one of several stylus gestures.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-3463">Para obter mais informações sobre gestos da caneta, consulte <xref:System.Windows.Input.SystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3463">For more information about stylus gestures, see <xref:System.Windows.Input.SystemGesture>.</span></span>  
  
 <span data-ttu-id="3347b-3464">Esse evento cria um alias para o <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.UIElement.StylusSystemGesture> faz parte da classe a lista de membros quando <xref:System.Windows.UIElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="3347b-3464">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusSystemGesture> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="3347b-3465">Manipuladores de eventos que estão anexados para o <xref:System.Windows.UIElement.StylusSystemGesture> evento associado subjacente <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-3465">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusSystemGesture> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="3347b-3466">Toque, mouse e entrada de caneta existem em uma relação específica.</span><span class="sxs-lookup"><span data-stu-id="3347b-3466">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="3347b-3467">Para obter mais informações, consulte [visão geral de entrada](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3347b-3467">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusSystemGesture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-3468">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-3468">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-3469">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-3469">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusSystemGestureEvent>|  
|<span data-ttu-id="3347b-3470">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-3470">Routing strategy</span></span>|<span data-ttu-id="3347b-3471">Propagação</span><span class="sxs-lookup"><span data-stu-id="3347b-3471">Bubbling</span></span>|  
|<span data-ttu-id="3347b-3472">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-3472">Delegate</span></span>|<xref:System.Windows.Input.StylusSystemGestureEventHandler>|  
  
-   <span data-ttu-id="3347b-3473">O evento por túnel correspondente é <xref:System.Windows.UIElement.PreviewStylusSystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3473">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusSystemGesture>.</span></span>  
  
-   <span data-ttu-id="3347b-3474">Substituir <xref:System.Windows.UIElement.OnStylusSystemGesture%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-3474">Override <xref:System.Windows.UIElement.OnStylusSystemGesture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusSystemGestureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusSystemGestureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusSystemGestureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusSystemGestureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusSystemGestureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusSystemGestureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusSystemGestureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.StylusSystemGestureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3475">Identifica o evento roteado <see cref="E:System.Windows.UIElement.StylusSystemGesture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3475">Identifies the <see cref="E:System.Windows.UIElement.StylusSystemGesture" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-3476">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-3476">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-3477">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-3477">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-3478">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-3478">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-3479">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3479">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-3480">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3480">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusUp As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusUp;" />
      <MemberSignature Language="F#" Value="member this.StylusUp : System.Windows.Input.StylusEventHandler " Usage="member this.StylusUp : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3481">Ocorre quando o usuário retira a caneta do digitalizador enquanto ela está sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3481">Occurs when the user raises the stylus off the digitizer while it is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-3482">Esse evento cria um alias para o <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.UIElement.StylusUp> faz parte da classe a lista de membros quando <xref:System.Windows.UIElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="3347b-3482">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusUp> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="3347b-3483">Manipuladores de eventos que estão anexados para o <xref:System.Windows.UIElement.StylusUp> evento associado subjacente <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-3483">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusUp> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="3347b-3484">Toque, mouse e entrada de caneta existem em uma relação específica.</span><span class="sxs-lookup"><span data-stu-id="3347b-3484">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="3347b-3485">Para obter mais informações, consulte [visão geral de entrada](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3347b-3485">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-3486">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-3486">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-3487">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-3487">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusUpEvent>|  
|<span data-ttu-id="3347b-3488">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-3488">Routing strategy</span></span>|<span data-ttu-id="3347b-3489">Propagação</span><span class="sxs-lookup"><span data-stu-id="3347b-3489">Bubbling</span></span>|  
|<span data-ttu-id="3347b-3490">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-3490">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="3347b-3491">O evento por túnel correspondente é <xref:System.Windows.UIElement.PreviewStylusUp>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3491">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusUp>.</span></span>  
  
-   <span data-ttu-id="3347b-3492">Substituir <xref:System.Windows.UIElement.OnStylusUp%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-3492">Override <xref:System.Windows.UIElement.OnStylusUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.StylusUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3493">Identifica o evento roteado <see cref="E:System.Windows.UIElement.StylusUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3493">Identifies the <see cref="E:System.Windows.UIElement.StylusUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-3494">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-3494">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-3495">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-3495">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-3496">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-3496">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-3497">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3497">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-3498">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3498">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextInput">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.TextCompositionEventHandler TextInput;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.TextCompositionEventHandler TextInput" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.TextInput" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextInput As TextCompositionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::TextCompositionEventHandler ^ TextInput;" />
      <MemberSignature Language="F#" Value="member this.TextInput : System.Windows.Input.TextCompositionEventHandler " Usage="member this.TextInput : System.Windows.Input.TextCompositionEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.TextInput</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TextCompositionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3499">Ocorre quando este elemento obtém texto de forma independente de dispositivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3499">Occurs when this element gets text in a device-independent manner.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="3347b-3500">Esse evento já pode ser marcado como manipulados pelas implementações internas de controles compostos.</span><span class="sxs-lookup"><span data-stu-id="3347b-3500">This event might already be marked as handled by the internal implementations of composited controls.</span></span> <span data-ttu-id="3347b-3501">Consulte o comentário abaixo.</span><span class="sxs-lookup"><span data-stu-id="3347b-3501">See Remark below.</span></span>  
  
 <span data-ttu-id="3347b-3502">O <xref:System.Windows.UIElement.TextInput> evento já pode ser marcado como manipulados pelas implementações internas de controles compostos.</span><span class="sxs-lookup"><span data-stu-id="3347b-3502">The <xref:System.Windows.UIElement.TextInput> event may already be marked as handled by the internal implementations of composited controls.</span></span> <span data-ttu-id="3347b-3503">Por exemplo, uma <xref:System.Windows.Controls.TextBox> é um controle composto no qual o <xref:System.Windows.UIElement.TextInput> evento já estiver marcado como manipulado; dentro de sua composição.</span><span class="sxs-lookup"><span data-stu-id="3347b-3503">For example, a <xref:System.Windows.Controls.TextBox> is a composited control where the <xref:System.Windows.UIElement.TextInput> event is already marked as handled; within its compositing.</span></span> <span data-ttu-id="3347b-3504">Controles de fazer isso, porque o controle precisa interpretar alguns tipos de entrada, como teclas de direção, como tendo um significado especial para esse controle.</span><span class="sxs-lookup"><span data-stu-id="3347b-3504">Controls do this because the control needs to interpret some types of input, such as arrow keys, as having special meaning to that control.</span></span> <span data-ttu-id="3347b-3505">Se você usar <xref:System.Windows.UIElement.PreviewTextInput> como o evento em que você anexa manipuladores para entrada de texto, você poderá receber resultados melhores.</span><span class="sxs-lookup"><span data-stu-id="3347b-3505">If you use <xref:System.Windows.UIElement.PreviewTextInput> as the event where you attach handlers for text input, you may receive better results.</span></span> <span data-ttu-id="3347b-3506">Essa técnica contorna a maioria dos casos em que a composição de controle já marcou este evento como manipulado e impede que o seu manipulador de receber o evento ao longo da rota de evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-3506">This technique circumvents most cases where control composition has already marked this event as handled and prevents your handler from receiving the event along the event route.</span></span>  
  
 <span data-ttu-id="3347b-3507">O <xref:System.Windows.UIElement.TextInput> evento permite que um componente ou aplicativo para escutar a entrada de texto de forma independente de dispositivo.</span><span class="sxs-lookup"><span data-stu-id="3347b-3507">The <xref:System.Windows.UIElement.TextInput> event allows a component or application to listen for text input in a device-independent manner.</span></span> <span data-ttu-id="3347b-3508">O teclado é o principal meio de <xref:System.Windows.UIElement.TextInput>, mas outros dispositivos de entrada de fala e manuscrito também podem gerar <xref:System.Windows.UIElement.TextInput>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3508">The keyboard is the primary means of <xref:System.Windows.UIElement.TextInput>, but speech, handwriting, and other input devices can also raise <xref:System.Windows.UIElement.TextInput>.</span></span>  
  
 <span data-ttu-id="3347b-3509">Por causa de combinações de teclas — em teclados padrão ou por meio de editores de método de entrada — vários eventos de chave podem gerar apenas um evento de entrada de texto.</span><span class="sxs-lookup"><span data-stu-id="3347b-3509">Because of key combinations—either in default keyboards or through input method editors—multiple key events might raise just one text input event.</span></span>  
  
 <span data-ttu-id="3347b-3510">Esse evento cria um alias para o <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> anexado a eventos para essa classe, para que <xref:System.Windows.UIElement.TextInput> faz parte da classe a lista de membros quando <xref:System.Windows.UIElement> é herdado como um elemento base.</span><span class="sxs-lookup"><span data-stu-id="3347b-3510">This event creates an alias for the <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.TextInput> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="3347b-3511">Manipuladores de eventos que estão anexados para o <xref:System.Windows.UIElement.TextInput> evento associado subjacente <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> evento anexado e receber a mesma instância de dados do evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-3511">Event handlers that are attached to the <xref:System.Windows.UIElement.TextInput> event are attached to the underlying <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_TextInput"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-3512">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-3512">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-3513">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-3513">Identifier field</span></span>|<xref:System.Windows.UIElement.TextInputEvent>|  
|<span data-ttu-id="3347b-3514">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-3514">Routing strategy</span></span>|<span data-ttu-id="3347b-3515">Propagação</span><span class="sxs-lookup"><span data-stu-id="3347b-3515">Bubbling</span></span>|  
|<span data-ttu-id="3347b-3516">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-3516">Delegate</span></span>|<xref:System.Windows.Input.TextCompositionEventHandler>|  
  
-   <span data-ttu-id="3347b-3517">O evento por túnel correspondente é <xref:System.Windows.UIElement.PreviewTextInput>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3517">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewTextInput>.</span></span>  
  
-   <span data-ttu-id="3347b-3518">Substituir <xref:System.Windows.UIElement.OnTextInput%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-3518">Override <xref:System.Windows.UIElement.OnTextInput%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextInputEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TextInputEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TextInputEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.TextInputEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextInputEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TextInputEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TextInputEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.TextInputEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3519">Identifica o evento roteado <see cref="E:System.Windows.UIElement.TextInput" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3519">Identifies the <see cref="E:System.Windows.UIElement.TextInput" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-3520">Identificadores de eventos roteados são criados quando os eventos roteados são registrados.</span><span class="sxs-lookup"><span data-stu-id="3347b-3520">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="3347b-3521">Esses identificadores contêm um nome de identificação, tipo de proprietário, tipo de manipulador, estratégia de roteamento e o método de utilitário para adicionar proprietários para o evento.</span><span class="sxs-lookup"><span data-stu-id="3347b-3521">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="3347b-3522">Você pode usar esses identificadores para adicionar manipuladores de classe.</span><span class="sxs-lookup"><span data-stu-id="3347b-3522">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="3347b-3523">Para obter mais informações sobre como registrar eventos roteados, consulte <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3523">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="3347b-3524">Para obter mais informações sobre o uso de identificadores de eventos roteados para adicionar manipuladores de classe, consulte <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3524">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchDown">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.TouchDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchDown As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchDown;" />
      <MemberSignature Language="F#" Value="member this.TouchDown : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchDown : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3525">Ocorre quando um dedo toca a tela enquanto está sobre esse elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3525">Occurs when a finger touches the screen while the finger is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-3526">Por padrão, o <xref:System.Windows.UIElement.PreviewTouchDown> e <xref:System.Windows.UIElement.TouchDown> eventos não ocorrem até que um dedo toca na tela e move.</span><span class="sxs-lookup"><span data-stu-id="3347b-3526">By default, the <xref:System.Windows.UIElement.PreviewTouchDown> and <xref:System.Windows.UIElement.TouchDown> events do not occur until a finger touches the screen and moves.</span></span> <span data-ttu-id="3347b-3527">Pressionando um dedo na tela e mantendo sem movê-lo faz com que o toque e mantenha o comportamento de um <xref:System.Windows.Input.Stylus>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3527">Pressing a finger on the screen and holding it without moving it causes the press and hold behavior of a <xref:System.Windows.Input.Stylus>.</span></span> <span data-ttu-id="3347b-3528">O comportamento de pressionar e segurar é equivalente ao botão direito do mouse.</span><span class="sxs-lookup"><span data-stu-id="3347b-3528">The press and hold behavior is equivalent to a mouse right-click.</span></span>  
  
 <span data-ttu-id="3347b-3529">Para fazer com que o <xref:System.Windows.UIElement.PreviewTouchDown> e <xref:System.Windows.UIElement.TouchDown> eventos ocorram, assim que um dedo toca a tela, defina as <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> anexado à propriedade `false` para este elemento.</span><span class="sxs-lookup"><span data-stu-id="3347b-3529">To cause the <xref:System.Windows.UIElement.PreviewTouchDown> and <xref:System.Windows.UIElement.TouchDown> events to occur as soon as a finger touches the screen, set the <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> attached property to `false` for this element.</span></span>  
  
<a name="routedEventInfo_TouchDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-3530">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-3530">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-3531">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-3531">Identifier field</span></span>|<xref:System.Windows.UIElement.TouchDownEvent>|  
|<span data-ttu-id="3347b-3532">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-3532">Routing strategy</span></span>|<span data-ttu-id="3347b-3533">Propagação</span><span class="sxs-lookup"><span data-stu-id="3347b-3533">Bubbling</span></span>|  
|<span data-ttu-id="3347b-3534">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-3534">Delegate</span></span>|<span data-ttu-id="3347b-3535"><xref:System.EventHandler%601> do tipo <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3535"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="3347b-3536">O evento por túnel correspondente é <xref:System.Windows.UIElement.PreviewTouchDown>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3536">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewTouchDown>.</span></span>  
  
-   <span data-ttu-id="3347b-3537">Substituir <xref:System.Windows.UIElement.OnTouchDown%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-3537">Override <xref:System.Windows.UIElement.OnTouchDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" />
        <altmember cref="M:System.Windows.Input.Stylus.GetIsPressAndHoldEnabled(System.Windows.DependencyObject)" />
        <altmember cref="M:System.Windows.Input.Stylus.SetIsPressAndHoldEnabled(System.Windows.DependencyObject,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="TouchDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.TouchDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.TouchDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3538">Identifica o evento roteado <see cref="E:System.Windows.UIElement.TouchDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3538">Identifies the <see cref="E:System.Windows.UIElement.TouchDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchEnter">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.TouchEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchEnter As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchEnter;" />
      <MemberSignature Language="F#" Value="member this.TouchEnter : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchEnter : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3539">Ocorre quando um toque é movido de fora para dentro dos limites deste elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3539">Occurs when a touch moves from outside to inside the bounds of this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-3540">Esse evento é gerado sempre, se o dispositivo de toque é capturado para esse elemento.</span><span class="sxs-lookup"><span data-stu-id="3347b-3540">This event is always raised, whether or not the touch device is captured to this element.</span></span>  
  
<a name="routedEventInfo_TouchEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-3541">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-3541">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-3542">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-3542">Identifier field</span></span>|<xref:System.Windows.UIElement.TouchEnterEvent>|  
|<span data-ttu-id="3347b-3543">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-3543">Routing strategy</span></span>|<span data-ttu-id="3347b-3544">Direto</span><span class="sxs-lookup"><span data-stu-id="3347b-3544">Direct</span></span>|  
|<span data-ttu-id="3347b-3545">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-3545">Delegate</span></span>|<span data-ttu-id="3347b-3546"><xref:System.EventHandler%601> do tipo <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3546"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="3347b-3547">Substituir <xref:System.Windows.UIElement.OnTouchEnter%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-3547">Override <xref:System.Windows.UIElement.OnTouchEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.TouchEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.TouchEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3548">Identifica o evento roteado <see cref="E:System.Windows.UIElement.TouchEnter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3548">Identifies the <see cref="E:System.Windows.UIElement.TouchEnter" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesCaptured">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.TouchesCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesCaptured As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesCaptured { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchesCaptured : seq&lt;System.Windows.Input.TouchDevice&gt;" Usage="System.Windows.UIElement.TouchesCaptured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3549">Obtém todos os dispositivos de toque capturados para esse elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3549">Gets all touch devices that are captured to this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3347b-3550">Uma enumeração de objetos <see cref="T:System.Windows.Input.TouchDevice" /> capturados para esse elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3550">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are captured to this element.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesCapturedWithin">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesCapturedWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesCapturedWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.TouchesCapturedWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesCapturedWithin As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesCapturedWithin { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchesCapturedWithin : seq&lt;System.Windows.Input.TouchDevice&gt;" Usage="System.Windows.UIElement.TouchesCapturedWithin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3551">Obtém todos os dispositivos de toque que são capturados para esse elemento ou os elementos filho na árvore visual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3551">Gets all touch devices that are captured to this element or any child elements in its visual tree.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3347b-3552">Uma enumeração de objetos <see cref="T:System.Windows.Input.TouchDevice" /> que são capturados para esse elemento ou elementos filho na árvore visual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3552">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are captured to this element or any child elements in its visual tree.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesDirectlyOver">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.TouchesDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesDirectlyOver As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesDirectlyOver { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchesDirectlyOver : seq&lt;System.Windows.Input.TouchDevice&gt;" Usage="System.Windows.UIElement.TouchesDirectlyOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3553">Obtém todos os dispositivos de toque nesse elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3553">Gets all touch devices that are over this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3347b-3554">Uma enumeração de objetos <see cref="T:System.Windows.Input.TouchDevice" /> nesse elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3554">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are over this element.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesOver">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.TouchesOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesOver As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesOver { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchesOver : seq&lt;System.Windows.Input.TouchDevice&gt;" Usage="System.Windows.UIElement.TouchesOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3555">Obtém todos os dispositivos de toque que estão sobre esse elemento ou sobre os elementos filho na árvore visual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3555">Gets all touch devices that are over this element or any child elements in its visual tree.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3347b-3556">Uma enumeração de objetos <see cref="T:System.Windows.Input.TouchDevice" /> que estão acima desse elemento ou dos elementos filho na árvore visual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3556">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are over this element or any child elements in its visual tree.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchLeave">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.TouchLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchLeave As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchLeave;" />
      <MemberSignature Language="F#" Value="member this.TouchLeave : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchLeave : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3557">Ocorre quando um toque é movido de dentro para fora dos limites deste elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3557">Occurs when a touch moves from inside to outside the bounds of this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-3558">Esse evento é gerado sempre, se o dispositivo de toque é capturado para esse elemento.</span><span class="sxs-lookup"><span data-stu-id="3347b-3558">This event is always raised, whether or not the touch device is captured to this element.</span></span>  
  
<a name="routedEventInfo_TouchLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-3559">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-3559">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-3560">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-3560">Identifier field</span></span>|<xref:System.Windows.UIElement.TouchLeaveEvent>|  
|<span data-ttu-id="3347b-3561">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-3561">Routing strategy</span></span>|<span data-ttu-id="3347b-3562">Direto</span><span class="sxs-lookup"><span data-stu-id="3347b-3562">Direct</span></span>|  
|<span data-ttu-id="3347b-3563">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-3563">Delegate</span></span>|<span data-ttu-id="3347b-3564"><xref:System.EventHandler%601> do tipo <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3564"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="3347b-3565">Substituir <xref:System.Windows.UIElement.OnTouchLeave%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-3565">Override <xref:System.Windows.UIElement.OnTouchLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.TouchLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.TouchLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3566">Identifica o evento roteado <see cref="E:System.Windows.UIElement.TouchLeave" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3566">Identifies the <see cref="E:System.Windows.UIElement.TouchLeave" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchMove">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.TouchMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchMove As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchMove;" />
      <MemberSignature Language="F#" Value="member this.TouchMove : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchMove : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3567">Ocorre quando um dedo se move na tela enquanto está sobre esse elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3567">Occurs when a finger moves on the screen while the finger is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_TouchMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-3568">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-3568">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-3569">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-3569">Identifier field</span></span>|<xref:System.Windows.UIElement.TouchMoveEvent>|  
|<span data-ttu-id="3347b-3570">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-3570">Routing strategy</span></span>|<span data-ttu-id="3347b-3571">Propagação</span><span class="sxs-lookup"><span data-stu-id="3347b-3571">Bubbling</span></span>|  
|<span data-ttu-id="3347b-3572">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-3572">Delegate</span></span>|<span data-ttu-id="3347b-3573"><xref:System.EventHandler%601> do tipo <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3573"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="3347b-3574">O evento por túnel correspondente é <xref:System.Windows.UIElement.PreviewTouchMove>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3574">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewTouchMove>.</span></span>  
  
-   <span data-ttu-id="3347b-3575">Substituir <xref:System.Windows.UIElement.OnTouchMove%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-3575">Override <xref:System.Windows.UIElement.OnTouchMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.TouchMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.TouchMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3576">Identifica o evento roteado <see cref="E:System.Windows.UIElement.TouchMove" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3576">Identifies the <see cref="E:System.Windows.UIElement.TouchMove" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchUp">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.TouchUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchUp As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchUp;" />
      <MemberSignature Language="F#" Value="member this.TouchUp : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchUp : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3577">Ocorre quando um dedo é gerado fora da tela enquanto o dedo está sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3577">Occurs when a finger is raised off of the screen while the finger is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_TouchUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3347b-3578">Informações de evento encaminhado</span><span class="sxs-lookup"><span data-stu-id="3347b-3578">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-3579">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-3579">Identifier field</span></span>|<xref:System.Windows.UIElement.TouchUpEvent>|  
|<span data-ttu-id="3347b-3580">Estratégia de roteamento</span><span class="sxs-lookup"><span data-stu-id="3347b-3580">Routing strategy</span></span>|<span data-ttu-id="3347b-3581">Propagação</span><span class="sxs-lookup"><span data-stu-id="3347b-3581">Bubbling</span></span>|  
|<span data-ttu-id="3347b-3582">delegado</span><span class="sxs-lookup"><span data-stu-id="3347b-3582">Delegate</span></span>|<span data-ttu-id="3347b-3583"><xref:System.EventHandler%601> do tipo <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3583"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="3347b-3584">O evento por túnel correspondente é <xref:System.Windows.UIElement.PreviewTouchUp>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3584">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewTouchUp>.</span></span>  
  
-   <span data-ttu-id="3347b-3585">Substituir <xref:System.Windows.UIElement.OnTouchUp%2A> implementar manipulação de classe para esse evento em classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-3585">Override <xref:System.Windows.UIElement.OnTouchUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.TouchUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.TouchUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3586">Identifica o evento roteado <see cref="E:System.Windows.UIElement.TouchUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3586">Identifies the <see cref="E:System.Windows.UIElement.TouchUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslatePoint">
      <MemberSignature Language="C#" Value="public System.Windows.Point TranslatePoint (System.Windows.Point point, System.Windows.UIElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Point TranslatePoint(valuetype System.Windows.Point point, class System.Windows.UIElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.TranslatePoint(System.Windows.Point,System.Windows.UIElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Point TranslatePoint(System::Windows::Point point, System::Windows::UIElement ^ relativeTo);" />
      <MemberSignature Language="F#" Value="member this.TranslatePoint : System.Windows.Point * System.Windows.UIElement -&gt; System.Windows.Point" Usage="uIElement.TranslatePoint (point, relativeTo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="relativeTo" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="3347b-3587">O valor do ponto, como relativo a esse elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3587">The point value, as relative to this element.</span>
          </span>
        </param>
        <param name="relativeTo">
          <span data-ttu-id="3347b-3588">O elemento no qual converter o determinado ponto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3588">The element to translate the given point into.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3347b-3589">Converte um ponto em relação a esse elemento para coordenadas que são relativas ao elemento especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3589">Translates a point relative to this element to coordinates that are relative to the specified element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3347b-3590">Um valor de ponto, agora relativo ao elemento de destino em vez desse elemento de origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3590">A point value, now relative to the target element rather than this source element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-3591">Passando `null` para `relativeTo` é permitida e indica que as coordenadas devem ser relativo ao elemento raiz na árvore lógica desse elemento pertence.</span><span class="sxs-lookup"><span data-stu-id="3347b-3591">Passing `null` for `relativeTo` is permitted, and indicates that coordinates should be relative to the root element in the logical tree that this element belongs to.</span></span>  
  
 <span data-ttu-id="3347b-3592">Esse método é usado para converter valores de ponto de teste de ocorrências.</span><span class="sxs-lookup"><span data-stu-id="3347b-3592">This method is used for translating hit test point values.</span></span> <span data-ttu-id="3347b-3593">Chamar esse método é principalmente relevante se você estiver criando um controle e precisa processar a entrada em um nível inferior.</span><span class="sxs-lookup"><span data-stu-id="3347b-3593">Calling this method is mainly relevant if you are authoring a control and need to process input at a lower level.</span></span> <span data-ttu-id="3347b-3594">Se você estiver usando os controles existentes, pode-se presumir que controles concluídos relatará resultados de teste de clique traduzidos corretamente.</span><span class="sxs-lookup"><span data-stu-id="3347b-3594">If you are using existing controls, you can generally assume that completed controls will report correctly translated hit test results.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Uid">
      <MemberSignature Language="C#" Value="public string Uid { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Uid" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.Uid" />
      <MemberSignature Language="VB.NET" Value="Public Property Uid As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Uid { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Uid : string with get, set" Usage="System.Windows.UIElement.Uid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3595">Obtém ou define o identificador exclusivo (para localização) para esse elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3595">Gets or sets the unique identifier (for localization) for this element.</span>
          </span>
          <span data-ttu-id="3347b-3596">É uma propriedade de dependência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3596">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3347b-3597">Uma cadeia de caracteres que é o identificador exclusivo deste elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3597">A string that is the unique identifier for this element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-3598">Usada pelos designers para obter o `x:Uid` valor (consulte [visão geral de localização e globalização do WPF](~/docs/framework/wpf/advanced/wpf-globalization-and-localization-overview.md) para obter mais informações).</span><span class="sxs-lookup"><span data-stu-id="3347b-3598">Used by designers to get the `x:Uid` value (see [WPF Globalization and Localization Overview](~/docs/framework/wpf/advanced/wpf-globalization-and-localization-overview.md) for more information).</span></span>  
  
<a name="dependencyPropertyInfo_WindowWindowStyle"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3347b-3599">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="3347b-3599">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-3600">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-3600">Identifier field</span></span>|<xref:System.Windows.UIElement.UidProperty>|  
|<span data-ttu-id="3347b-3601">Propriedades de metadados definido como `true`</span><span class="sxs-lookup"><span data-stu-id="3347b-3601">Metadata properties set to `true`</span></span>|<span data-ttu-id="3347b-3602">Nenhum</span><span class="sxs-lookup"><span data-stu-id="3347b-3602">None</span></span>|  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/81defade-483b-4a89-b76d-9b25bba34010">
          <span data-ttu-id="3347b-3603">Atributo X:UID</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3603">x:Uid Attribute</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="UidProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty UidProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty UidProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.UidProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UidProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ UidProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable UidProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.UidProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3604">Identifica a propriedade de dependência <see cref="P:System.Windows.UIElement.Uid" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3604">Identifies the <see cref="P:System.Windows.UIElement.Uid" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateLayout">
      <MemberSignature Language="C#" Value="public void UpdateLayout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateLayout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.UpdateLayout" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateLayout ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateLayout();" />
      <MemberSignature Language="F#" Value="member this.UpdateLayout : unit -&gt; unit" Usage="uIElement.UpdateLayout " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3605">Garante que todos os elementos filho visuais desse elemento tenham o layout atualizado corretamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3605">Ensures that all visual child elements of this element are properly updated for layout.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-3606">Quando você chama esse método, os elementos com <xref:System.Windows.UIElement.IsMeasureValid%2A> `false` ou <xref:System.Windows.UIElement.IsArrangeValid%2A> `false` chamará específicos do elemento <xref:System.Windows.UIElement.MeasureCore%2A> e <xref:System.Windows.UIElement.ArrangeCore%2A> atualizar métodos, que força o layout e todos os tamanhos computados serão validados.</span><span class="sxs-lookup"><span data-stu-id="3347b-3606">When you call this method, elements with <xref:System.Windows.UIElement.IsMeasureValid%2A>`false` or <xref:System.Windows.UIElement.IsArrangeValid%2A>`false` will call element-specific <xref:System.Windows.UIElement.MeasureCore%2A> and <xref:System.Windows.UIElement.ArrangeCore%2A> methods, which forces layout update, and all computed sizes will be validated.</span></span>  
  
 <span data-ttu-id="3347b-3607">Chamar esse método não tem nenhum efeito se o layout é alterado, ou se o estado da organização nem a medida de um layout é inválido.</span><span class="sxs-lookup"><span data-stu-id="3347b-3607">Calling this method has no effect if layout is unchanged, or if neither arrangement nor measurement state of a layout is invalid.</span></span> <span data-ttu-id="3347b-3608">No entanto, se o layout é inválido em ambos os aspectos, o <xref:System.Windows.UIElement.UpdateLayout%2A> chamada será Refazer todo o layout.</span><span class="sxs-lookup"><span data-stu-id="3347b-3608">However, if layout is invalid in either respect, the <xref:System.Windows.UIElement.UpdateLayout%2A> call will redo the entire layout.</span></span> <span data-ttu-id="3347b-3609">Portanto, você deve evitar chamar <xref:System.Windows.UIElement.UpdateLayout%2A> após cada alteração incremental e secundária na árvore de elementos.</span><span class="sxs-lookup"><span data-stu-id="3347b-3609">Therefore, you should avoid calling <xref:System.Windows.UIElement.UpdateLayout%2A> after each incremental and minor change in the element tree.</span></span> <span data-ttu-id="3347b-3610">O sistema de layout executará o layout do elemento de forma adiada, usando um algoritmo que equilibra o desempenho e moeda, e com uma estratégia de ponderação para adiar as alterações às raízes até que todos os elementos filho são válidos.</span><span class="sxs-lookup"><span data-stu-id="3347b-3610">The layout system will perform element layout in a deferred manner, using an algorithm that balances performance and currency, and with a weighting strategy to defer changes to roots until all child elements are valid.</span></span> <span data-ttu-id="3347b-3611">Você só deve chamar <xref:System.Windows.UIElement.UpdateLayout%2A> se for absolutamente necessária atualizados tamanhos e posições, e somente depois que você tiver certeza de que todas as alterações às propriedades que você controle e que pode afetar o layout são concluídas.</span><span class="sxs-lookup"><span data-stu-id="3347b-3611">You should only call <xref:System.Windows.UIElement.UpdateLayout%2A> if you absolutely need updated sizes and positions, and only after you are certain that all changes to properties that you control and that may affect layout are completed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="Visibility">
      <MemberSignature Language="C#" Value="public System.Windows.Visibility Visibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Visibility Visibility" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.Visibility" />
      <MemberSignature Language="VB.NET" Value="Public Property Visibility As Visibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Visibility Visibility { System::Windows::Visibility get(); void set(System::Windows::Visibility value); };" />
      <MemberSignature Language="F#" Value="member this.Visibility : System.Windows.Visibility with get, set" Usage="System.Windows.UIElement.Visibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Visibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3612">Obtém ou define a visibilidade [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] desse elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3612">Gets or sets the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] visibility of this element.</span>
          </span>
          <span data-ttu-id="3347b-3613">É uma propriedade de dependência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3613">This is a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3347b-3614">Um valor da enumeração.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3614">A value of the enumeration.</span>
          </span>
          <span data-ttu-id="3347b-3615">O valor padrão é <see cref="F:System.Windows.Visibility.Visible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3615">The default value is <see cref="F:System.Windows.Visibility.Visible" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3347b-3616">Definir essa propriedade afeta o valor de <xref:System.Windows.UIElement.IsVisible%2A>, que por sua vez podem gerar o <xref:System.Windows.UIElement.IsVisibleChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="3347b-3616">Setting this property affects the value of <xref:System.Windows.UIElement.IsVisible%2A>, which in turn may raise the <xref:System.Windows.UIElement.IsVisibleChanged> event.</span></span> <span data-ttu-id="3347b-3617">No entanto, <xref:System.Windows.UIElement.IsVisible%2A> tem outros fatores que influenciam a ele, por exemplo, as configurações de visibilidade de pais que o contêm.</span><span class="sxs-lookup"><span data-stu-id="3347b-3617">However, <xref:System.Windows.UIElement.IsVisible%2A> has other factors that influence it, for instance the visibility settings of parents that contain it.</span></span>  
  
 <span data-ttu-id="3347b-3618">Elementos onde <xref:System.Windows.UIElement.Visibility%2A> não é <xref:System.Windows.Visibility.Visible> não participam de eventos de entrada (ou comandos), não influenciam a medida ou organizar passagens de layout, não estão em uma sequência de guia e não serão reportadas no teste de clique.</span><span class="sxs-lookup"><span data-stu-id="3347b-3618">Elements where <xref:System.Windows.UIElement.Visibility%2A> is not <xref:System.Windows.Visibility.Visible> do not participate in input events (or commands), do not influence either the Measure or Arrange passes of layout, are not in a tab sequence, and will not be reported in hit testing.</span></span>  
  
 <span data-ttu-id="3347b-3619">Quando herdada pela <xref:System.Windows.Window> ou suas classes derivadas, <xref:System.Windows.Window> redefine o valor padrão dessa propriedade para ser <xref:System.Windows.Visibility.Collapsed>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3619">When inherited by <xref:System.Windows.Window> or its derived classes, <xref:System.Windows.Window> redefines the default value of this property to be <xref:System.Windows.Visibility.Collapsed>.</span></span> <span data-ttu-id="3347b-3620">Isso tem o efeito da não execução a passagem de medida de layout no inicialmente criado <xref:System.Windows.Window>, e <xref:System.Windows.UIElement.RenderSize%2A> retorna (0,0).</span><span class="sxs-lookup"><span data-stu-id="3347b-3620">This has the effect of not running the Measure pass of layout on an initially created <xref:System.Windows.Window>, and <xref:System.Windows.UIElement.RenderSize%2A> returns (0,0).</span></span> <span data-ttu-id="3347b-3621">Para obter detalhes, consulte <xref:System.Windows.Window>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3621">For details, see <xref:System.Windows.Window>.</span></span> <span data-ttu-id="3347b-3622"><xref:System.Windows.Controls.Primitives.Popup> também redefine o valor padrão para serem <xref:System.Windows.Visibility.Collapsed>, com um comportamento semelhante resultante para <xref:System.Windows.Controls.Primitives.Popup> e suas classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="3347b-3622"><xref:System.Windows.Controls.Primitives.Popup> also redefines the default value to be <xref:System.Windows.Visibility.Collapsed>, with similar resulting behavior for <xref:System.Windows.Controls.Primitives.Popup> and its derived classes.</span></span>  
  
<a name="dependencyPropertyInfo_Visibility"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3347b-3623">Informações da propriedade de dependência</span><span class="sxs-lookup"><span data-stu-id="3347b-3623">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3347b-3624">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="3347b-3624">Identifier field</span></span>|<xref:System.Windows.UIElement.VisibilityProperty>|  
|<span data-ttu-id="3347b-3625">Propriedades de metadados definido como `true`</span><span class="sxs-lookup"><span data-stu-id="3347b-3625">Metadata properties set to `true`</span></span>|<span data-ttu-id="3347b-3626">Nenhum</span><span class="sxs-lookup"><span data-stu-id="3347b-3626">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3347b-3627">O exemplo a seguir implementa um manipulador que faz referência a dois botões nomeadas diferentes que devem ser um par mutuamente exclusivo na interface do usuário.</span><span class="sxs-lookup"><span data-stu-id="3347b-3627">The following example implements a handler that references two different named buttons that are intended to be a mutually exclusive pair in the user interface.</span></span> <span data-ttu-id="3347b-3628">Antes de executar a lógica real do programa associada ao botão, o próprio botão é definido para ser <xref:System.Windows.Visibility.Hidden?displayProperty=nameWithType>, e o outro botão par é definido como <xref:System.Windows.Visibility.Visible?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3347b-3628">Prior to running the actual program logic associated with the button, the button itself is set to be <xref:System.Windows.Visibility.Hidden?displayProperty=nameWithType>, and the other button in the pair is set to <xref:System.Windows.Visibility.Visible?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[MediaElement_snip#UIElementVisibility](~/samples/snippets/csharp/VS_Snippets_Wpf/MediaElement_snip/CSharp/PlaybackExample.cs#uielementvisibility)]
 [!code-vb[MediaElement_snip#UIElementVisibility](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MediaElement_snip/VB/PlaybackExample.vb#uielementvisibility)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.IsVisible" />
        <altmember cref="T:System.Windows.Visibility" />
      </Docs>
    </Member>
    <Member MemberName="VisibilityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty VisibilityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty VisibilityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.VisibilityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly VisibilityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ VisibilityProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable VisibilityProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.VisibilityProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3347b-3629">Identifica a propriedade de dependência <see cref="P:System.Windows.UIElement.Visibility" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3347b-3629">Identifies the <see cref="P:System.Windows.UIElement.Visibility" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>