<Type Name="RequestBringIntoViewEventHandler" FullName="System.Windows.RequestBringIntoViewEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1fabd3e8ca79d0ed50a5a9c8a6f00299e7b8f9dd" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37491187" /></Metadata><TypeSignature Language="C#" Value="public delegate void RequestBringIntoViewEventHandler(object sender, RequestBringIntoViewEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed RequestBringIntoViewEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.RequestBringIntoViewEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub RequestBringIntoViewEventHandler(sender As Object, e As RequestBringIntoViewEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void RequestBringIntoViewEventHandler(System::Object ^ sender, RequestBringIntoViewEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type RequestBringIntoViewEventHandler = delegate of obj * RequestBringIntoViewEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.RequestBringIntoViewEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">O objeto em que o manipulador de eventos está anexado.</param>
    <param name="e">Os dados do evento.</param>
    <summary>Representa o método que manipulará o evento roteado <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Manipular esse evento é normalmente somente dentro de elementos que dão suporte a uma região de rolagem ou caso contrário deliberadamente defina seu tamanho de renderização menor do que o combinado desejado tamanho de seu conteúdo de elemento filho e só é feito pelo tratamento deliberadamente o evento depois que ele foi encaminhado para cima na árvore de elementos e tiver atingido o primeiro parente que oferece suporte de região de rolagem. É uma implementação existente que manipula as áreas de rolagem de uma maneira que geralmente é desejável para controles de usuário <xref:System.Windows.Controls.ScrollViewer>. Se você derivar de <xref:System.Windows.Controls.ScrollViewer>, você pode registrar um manipulador de classe para <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType> e complementar a manipulação de classe base do evento. Você também deve considerar o uso ou a classe definida de manipulação de classe <xref:System.Windows.Controls.ScrollViewer.ScrollChanged> eventos em vez de <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType>. Como alternativa, se você criar uma classe totalmente personalizada que não deriva de <xref:System.Windows.Controls.ScrollViewer>, você ainda pode adicionar a manipulação chamando de classe <xref:System.Windows.EventManager.RegisterClassHandler%2A?displayProperty=nameWithType> na sua instanciação de classe.  Para obter detalhes sobre a manipulação de classe, consulte [marcando eventos roteados como manipulados e manipulação de classe](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).  
  
 Elementos de conteúdo podem fazer com que o evento seja acionado por seus hosts de conteúdo (chamando <xref:System.Windows.FrameworkContentElement.BringIntoView%2A> e acionar <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType> do host de conteúdo). Da mesma forma, você pode solicitar os elementos da árvore lógica para ser colocado na exibição com o método auxiliar <xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=nameWithType>.  
  
 Um <xref:System.Windows.Controls.ListBox> implementa um método relacionado, mas diferente <xref:System.Windows.Controls.ListBox.ScrollIntoView%2A>.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.RequestBringIntoViewEventArgs" />
    <altmember cref="P:System.Windows.UIElement.ClipToBounds" />
    <altmember cref="T:System.Windows.Controls.Primitives.ScrollBar" />
    <altmember cref="T:System.Windows.Controls.ScrollViewer" />
    <altmember cref="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)" />
    <altmember cref="M:System.Windows.LogicalTreeHelper.BringIntoView(System.Windows.DependencyObject)" />
  </Docs>
</Type>