<Type Name="RoutedEvent" FullName="System.Windows.RoutedEvent">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2854c203bd8bba6a06ab48dbb979d5c8c2485884" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39898018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class RoutedEvent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RoutedEvent extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.RoutedEvent" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RoutedEvent" />
  <TypeSignature Language="C++ CLI" Value="public ref class RoutedEvent sealed" />
  <TypeSignature Language="F#" Value="type RoutedEvent = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.TypeConverter("System.Windows.Markup.RoutedEventConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Windows.Markup.ValueSerializer("System.Windows.Markup.RoutedEventValueSerializer, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.TypeConverter("System.Windows.Markup.RoutedEventConverter, PresentationFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
      <AttributeName>System.Windows.Markup.ValueSerializer("System.Windows.Markup.RoutedEventValueSerializer, PresentationFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa e identifica um evento roteado e declara suas características.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa classe contém o <xref:System.Windows.RoutedEvent.Name%2A>, <xref:System.Windows.RoutedEvent.RoutingStrategy%2A>, <xref:System.Windows.RoutedEvent.HandlerType%2A>, e <xref:System.Windows.RoutedEvent.OwnerType%2A> propriedades. Nenhum desses membros pode ter valores nulos.  
  
 Essa classe tem uma utilização XAML que se destina exclusivamente para fornecer o valor da <xref:System.Windows.EventTrigger.RoutedEvent%2A> propriedade de um <xref:System.Windows.EventTrigger> (ou classe derivada), ou para o <xref:System.Windows.EventSetter.Event%2A> propriedade de um <xref:System.Windows.EventSetter> (ou classe derivada). Para obter mais informações sobre <xref:System.Windows.EventTrigger>, <xref:System.Windows.EventSetter>, e os usos de XAML para essas classes, consulte [visão geral de eventos roteados](~/docs/framework/wpf/advanced/routed-events-overview.md).  
  
<a name="xamlAttributeUsage_RoutedEvent"></a>   
## <a name="xaml-attribute-usage"></a>Uso do Atributo XAML  
  
```  
<object property="eventName"/>  
- or -  
<object property="type.eventName"/>  
  
```  
  
<a name="xamlValues_RoutedEvent"></a>   
## <a name="xaml-values"></a>Valores XAML  
 *eventName*  
 Um nome de evento não qualificados, equivalente à <xref:System.Windows.RoutedEvent.Name%2A> propriedade do <xref:System.Windows.RoutedEvent> campo, não o nome do membro real do <xref:System.Windows.RoutedEvent> campo identificador dentro de um tipo. Sem qualificação, *eventName* deve nomear um evento como encontrada no tipo que é o <xref:System.Windows.Style.TargetType%2A> do que o estilo contém o <xref:System.Windows.EventSetter> ou <xref:System.Windows.EventTrigger>.  
  
 *type*  
 O tipo a ser usado para qualificar o nome do evento. Se fornecido sem um prefixo *tipo* deve ser um tipo de dentro do namespace XAML padrão, e que pode ser mapeado para um tipo existente de CLR. Eventos personalizados, ou eventos que estão em tipos fora do namespace XAML padrão, a cadeia de caracteres *tipo* pode incluir um prefixo para um namespace XAML mapeado. Esse namespace XAML deve conter o tipo XAML que pode mapear para um tipo de CLR de apoio e esse tipo CLR deve definir o identificador de evento roteado desejado. Para obter detalhes sobre o mapeamento de namespace XAML, consulte [Namespaces de XAML e mapeamento de Namespace para XAML WPF](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddOwner">
      <MemberSignature Language="C#" Value="public System.Windows.RoutedEvent AddOwner (Type ownerType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.RoutedEvent AddOwner(class System.Type ownerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.RoutedEvent.AddOwner(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddOwner (ownerType As Type) As RoutedEvent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::RoutedEvent ^ AddOwner(Type ^ ownerType);" />
      <MemberSignature Language="F#" Value="member this.AddOwner : Type -&gt; System.Windows.RoutedEvent" Usage="routedEvent.AddOwner ownerType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ownerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="ownerType">O tipo em que o evento roteado é adicionado.</param>
        <summary>Associa o outro tipo de proprietário ao evento roteado representado por uma instância <see cref="T:System.Windows.RoutedEvent" /> e habilita o roteamento do evento e sua manipulação.</summary>
        <returns>O campo de identificador para o evento. Esse valor retornado deve ser usado para definir um campo somente leitura estático público que armazenará o identificador para a representação do evento roteado no tipo proprietário. Esse campo geralmente é definido com acesso público, pois o código do usuário deve fazer referência ao campo para anexar os manipuladores de instância para o evento encaminhado ao usar o método utilitário <see cref="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O tipo de proprietário é usado internamente para resolver um evento por nome.  
  
   
  
## Examples  
 O exemplo a seguir adiciona a classe atual como outro proprietário de um evento definido em uma classe diferente. Aqui, `AnotherEditContainer` é a classe atual e o `EditStateChangedEvent` <xref:System.Windows.RoutedEvent> campo é definido como um membro dessa classe. O `MyEditContainer` classe definida originalmente o evento, registrá-lo com nomes idênticos `EditStateChangedEvent` identificador.  
  
 [!code-csharp[ClassHandling#RoutedEventAddOwner](~/samples/snippets/csharp/VS_Snippets_Wpf/ClassHandling/CSharp/SDKSampleLibrary/class1.cs#routedeventaddowner)]
 [!code-vb[ClassHandling#RoutedEventAddOwner](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ClassHandling/visualbasic/sdksamplelibrary/class1.vb#routedeventaddowner)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HandlerType">
      <MemberSignature Language="C#" Value="public Type HandlerType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type HandlerType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.RoutedEvent.HandlerType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HandlerType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ HandlerType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HandlerType : Type" Usage="System.Windows.RoutedEvent.HandlerType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o tipo de manipulador do evento roteado.</summary>
        <value>O tipo de manipulador do evento roteado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O tipo de manipulador é o delegado de manipulador de eventos que deve ser usado durante a implementação de manipuladores que escutarão o evento representado por este <xref:System.Windows.RoutedEvent>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.RoutedEvent.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Windows.RoutedEvent.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o nome de identificação do evento roteado.</summary>
        <value>O nome do evento roteado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O nome de um evento roteado deve ser exclusivo dentro de cada tipo de proprietário, mas não é necessário para ser globalmente exclusivo.  
  
 O valor dessa propriedade é proveniente de <xref:System.Windows.EventManager.RegisterRoutedEvent%2A> método que define uma <xref:System.Windows.RoutedEvent>. Especificamente, o valor de <xref:System.Windows.RoutedEvent.Name%2A> é o `name` valor do parâmetro que foi passado para <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="OwnerType">
      <MemberSignature Language="C#" Value="public Type OwnerType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type OwnerType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.RoutedEvent.OwnerType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OwnerType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ OwnerType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OwnerType : Type" Usage="System.Windows.RoutedEvent.OwnerType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o tipo de proprietário registrado do evento roteado.</summary>
        <value>O tipo de proprietário do evento roteado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse tipo pode ser qualquer tipo de objeto, não necessariamente limitado ao <xref:System.Windows.DependencyObject>. Em casos de eventos roteados que têm proprietários adicionados, essa propriedade retornará o primeiro proprietário declarado.  
  
 O valor dessa propriedade é proveniente de <xref:System.Windows.EventManager.RegisterRoutedEvent%2A> método que define uma <xref:System.Windows.RoutedEvent>. Especificamente, o valor de <xref:System.Windows.RoutedEvent.OwnerType%2A> é o `ownerType` valor do parâmetro que foi passado para <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="RoutingStrategy">
      <MemberSignature Language="C#" Value="public System.Windows.RoutingStrategy RoutingStrategy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.RoutingStrategy RoutingStrategy" />
      <MemberSignature Language="DocId" Value="P:System.Windows.RoutedEvent.RoutingStrategy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RoutingStrategy As RoutingStrategy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::RoutingStrategy RoutingStrategy { System::Windows::RoutingStrategy get(); };" />
      <MemberSignature Language="F#" Value="member this.RoutingStrategy : System.Windows.RoutingStrategy" Usage="System.Windows.RoutedEvent.RoutingStrategy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutingStrategy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a estratégia de roteamento do evento roteado.</summary>
        <value>Um dos valores de enumeração. O padrão é o padrão de enumeração, <see cref="F:System.Windows.RoutingStrategy.Bubble" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Por convenção, eventos roteados por túnel têm o prefixo do nome "Visualização" e um evento de propagação associado definido. Ele deve ser raro que deveria haver apenas uma versão de túnel e não uma versão por propagação correspondente. Para obter mais informações, consulte [como: criar um evento roteado personalizado](~/docs/framework/wpf/advanced/how-to-create-a-custom-routed-event.md).  
  
 O valor dessa propriedade é proveniente de <xref:System.Windows.EventManager.RegisterRoutedEvent%2A> método que define uma <xref:System.Windows.RoutedEvent>. Especificamente, o valor de <xref:System.Windows.RoutedEvent.RoutingStrategy%2A> é o `routingStrategy` valor do parâmetro que foi passado para <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.RoutedEvent.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="routedEvent.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna a representação de cadeia de caracteres deste <see cref="T:System.Windows.RoutedEvent" />.</summary>
        <returns>Uma representação de cadeia de caracteres para este objeto, que é idêntico ao valor retornado por <see cref="P:System.Windows.RoutedEvent.Name" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>