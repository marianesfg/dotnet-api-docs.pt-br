<Type Name="NameObjectCollectionBase+KeysCollection" FullName="System.Collections.Specialized.NameObjectCollectionBase+KeysCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5258d83c16045d2ba4d2a80bf3ad7d070631e3f7" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52352398" /></Metadata><TypeSignature Language="C#" Value="public class NameObjectCollectionBase.KeysCollection : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi serializable beforefieldinit NameObjectCollectionBase/KeysCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class NameObjectCollectionBase.KeysCollection&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public: ref class NameObjectCollectionBase::KeysCollection : System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type NameObjectCollectionBase.KeysCollection = class&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Specialized</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2f2f6-101">Representa uma coleção de chaves <see cref="T:System.String" /> de uma coleção.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-101">Represents a collection of the <see cref="T:System.String" /> keys of a collection.</span></span></summary>
    <remarks>To be added.</remarks>
    <threadsafe><span data-ttu-id="2f2f6-102">Os membros estáticos públicos (<see langword="Shared" /> no Visual Basic) desse são thread-safe.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-102">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span></span> <span data-ttu-id="2f2f6-103">Não há garantia de que qualquer membro de instância seja thread-safe.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-103">Any instance members are not guaranteed to be thread safe.</span></span>  
  
<span data-ttu-id="2f2f6-104">Essa implementação não oferece um sincronizada wrapper (thread-safe) para um <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" />, mas as classes derivadas podem criar suas próprias versões sincronizadas do <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" /> usando o <see cref="P:System.Collections.ICollection.SyncRoot" /> propriedade.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-104">This implementation does not provide a synchronized (thread safe) wrapper for a <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" />, but derived classes can create their own synchronized versions of the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" /> using the <see cref="P:System.Collections.ICollection.SyncRoot" /> property.</span></span>  
  
<span data-ttu-id="2f2f6-105">A enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-105">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="2f2f6-106">Mesmo quando uma coleção está sincronizada, outros threads ainda podem modificar a coleção, o que faz o enumerador lançar uma exceção.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-106">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="2f2f6-107">Para garantir thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração ou verificar as exceções resultantes das alterações feitas por outros threads.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-107">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span></threadsafe>
  </Docs>
  <Members>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f2f6-108">Obtém o número de chaves em <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" />.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-108">Gets the number of keys in the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" />.</span></span></summary>
        <value><span data-ttu-id="2f2f6-109">O número de chaves no <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" />.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-109">The number of keys in the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f2f6-110">A recuperação do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="2f2f6-110">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual string Get (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Get(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.Get(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ Get(int index);" />
      <MemberSignature Language="F#" Value="abstract member Get : int -&gt; string&#xA;override this.Get : int -&gt; string" Usage="keysCollection.Get index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="2f2f6-111">O índice baseado em zero da chave a ser obtida da coleção.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-111">The zero-based index of the key to get from the collection.</span></span></param>
        <summary><span data-ttu-id="2f2f6-112">Obtém a chave no índice especificado da coleção.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-112">Gets the key at the specified index of the collection.</span></span></summary>
        <returns><span data-ttu-id="2f2f6-113">Um <see cref="T:System.String" /> que contém a chave no índice especificado da coleção.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-113">A <see cref="T:System.String" /> that contains the key at the specified index of the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f2f6-114">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="2f2f6-114">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2f2f6-115"><paramref name="index" /> está fora do intervalo válido de índices para a coleção.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-115"><paramref name="index" /> is outside the valid range of indexes for the collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="keysCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f2f6-116">Retorna um enumerador que itera por meio de <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" />.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-116">Returns an enumerator that iterates through the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" />.</span></span></summary>
        <returns><span data-ttu-id="2f2f6-117">Um <see cref="T:System.Collections.IEnumerator" /> para o <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" />.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-117">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f2f6-118">Este enumerador retorna as chaves da coleção como cadeias de caracteres.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-118">This enumerator returns the keys of the collection as strings.</span></span>  
  
 <span data-ttu-id="2f2f6-119">O `foreach` instrução da linguagem c# (`for each` no Visual Basic) oculta a complexidade dos enumeradores.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-119">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="2f2f6-120">Portanto, o uso de `foreach` é recomendado, em vez de manipular diretamente o enumerador.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-120">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="2f2f6-121">Os enumeradores podem ser usados para ler os dados na coleção, mas não podem ser usados para modificar a coleção subjacente.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-121">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="2f2f6-122">Inicialmente, o enumerador é posicionado antes do primeiro elemento da coleção.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-122">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="2f2f6-123"><xref:System.Collections.IEnumerator.Reset%2A> também traz o enumerador de volta para essa posição.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-123"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="2f2f6-124">Nesta posição, <xref:System.Collections.IEnumerator.Current%2A> está indefinido.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-124">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="2f2f6-125">Por isso, você deve chamar <xref:System.Collections.IEnumerator.MoveNext%2A> para avançar o enumerador até o primeiro elemento da coleção antes de ler o valor de <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-125">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="2f2f6-126"><xref:System.Collections.IEnumerator.Current%2A> retorna o mesmo objeto até <xref:System.Collections.IEnumerator.MoveNext%2A> ou <xref:System.Collections.IEnumerator.Reset%2A> ser chamado.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-126"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="2f2f6-127"><xref:System.Collections.IEnumerator.MoveNext%2A> define <xref:System.Collections.IEnumerator.Current%2A> como o próximo elemento.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-127"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="2f2f6-128">Caso <xref:System.Collections.IEnumerator.MoveNext%2A> passe o final da coleção, o enumerador é posicionado após o último elemento na coleção e <xref:System.Collections.IEnumerator.MoveNext%2A> retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-128">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="2f2f6-129">Quando o enumerador está nessa posição, as chamadas subsequentes para <xref:System.Collections.IEnumerator.MoveNext%2A> também retornam `false`.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-129">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="2f2f6-130">Caso a última chamada para <xref:System.Collections.IEnumerator.MoveNext%2A> tenha retornado `false`, <xref:System.Collections.IEnumerator.Current%2A> está indefinido.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-130">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="2f2f6-131">Para definir <xref:System.Collections.IEnumerator.Current%2A> como o primeiro elemento da coleção novamente, é possível chamar <xref:System.Collections.IEnumerator.Reset%2A> seguido de <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-131">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="2f2f6-132">Um enumerador permanece válido desde que a coleção continue inalterada.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-132">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="2f2f6-133">Se forem feitas alterações na coleção, como adicionar, modificar ou excluir elementos, o enumerador será invalidado de maneira irrevogável e seu comportamento permanecerá indefinido.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-133">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="2f2f6-134">O enumerador não tem acesso exclusivo à coleção; por isso, a enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-134">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="2f2f6-135">Para garantir acesso thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-135">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="2f2f6-136">Para permitir que a coleção seja acessada por vários threads para leitura e gravação, você deve implementar sua própria sincronização.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-136">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="2f2f6-137">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="2f2f6-137">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public string this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default[int] { System::String ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : string" Usage="System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="2f2f6-138">O índice baseado em zero da entrada a ser localizado na coleção.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-138">The zero-based index of the entry to locate in the collection.</span></span></param>
        <summary><span data-ttu-id="2f2f6-139">Obtém a entrada no índice especificado da coleção.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-139">Gets the entry at the specified index of the collection.</span></span></summary>
        <value><span data-ttu-id="2f2f6-140">O <see cref="T:System.String" /> chave da entrada no índice especificado da coleção.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-140">The <see cref="T:System.String" /> key of the entry at the specified index of the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f2f6-141">Esta propriedade fornece a capacidade de acessar um elemento específico na coleção usando a sintaxe a seguir: `myCollection[index]` (no Visual Basic, `myCollection(index)`).</span><span class="sxs-lookup"><span data-stu-id="2f2f6-141">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]` (In Visual Basic, `myCollection(index)`).</span></span>  
  
 <span data-ttu-id="2f2f6-142">A linguagem c# usa a palavra-chave para definir os indexadores em vez de implementar o <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.Item%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-142">The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.Item%2A> property.</span></span> <span data-ttu-id="2f2f6-143">Visual Basic implementa <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.Item%2A> como uma propriedade padrão, que fornece a mesma funcionalidade de indexação.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-143">Visual Basic implements <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="2f2f6-144">Recuperando o valor dessa propriedade é uma operação de (1); definindo a propriedade também é uma operação de (1).</span><span class="sxs-lookup"><span data-stu-id="2f2f6-144">Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2f2f6-145"><paramref name="index" /> está fora do intervalo válido de índices para a coleção.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-145"><paramref name="index" /> is outside the valid range of indexes for the collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="2f2f6-146">O <see cref="T:System.Array" /> unidimensional que é o destino dos elementos copiados de <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" />.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-146">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" />.</span></span> <span data-ttu-id="2f2f6-147">O <see cref="T:System.Array" /> deve ter indexação com base em zero.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-147">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="2f2f6-148">O índice com base em zero em <paramref name="array" /> no qual a cópia começa.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-148">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="2f2f6-149">Copia todo o <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" /> em um <see cref="T:System.Array" /> unidimensional compatível, começando no índice especificado da matriz de destino.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-149">Copies the entire <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f2f6-150">A matriz especificada deve ser de um tipo compatível.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-150">The specified array must be of a compatible type.</span></span>  
  
 <span data-ttu-id="2f2f6-151">Este método usa <xref:System.Array.Copy%2A?displayProperty=nameWithType> para copiar os elementos.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-151">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="2f2f6-152">Este método é uma operação O(`n`), em que `n` é <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-152">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2f2f6-153"><paramref name="array" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-153"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2f2f6-154"><paramref name="index" /> é menor que zero.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-154"><paramref name="index" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2f2f6-155"><paramref name="array" /> é multidimensional.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-155"><paramref name="array" /> is multidimensional.</span></span>  
  
<span data-ttu-id="2f2f6-156">- ou -</span><span class="sxs-lookup"><span data-stu-id="2f2f6-156">-or-</span></span> 
<span data-ttu-id="2f2f6-157">O número de elementos na origem <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" /> é maior do que o espaço disponível de <paramref name="index" /> até o final do <paramref name="array" /> de destino.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-157">The number of elements in the source <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="2f2f6-158">O tipo do <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" /> de origem não pode ser automaticamente convertido para o tipo de <paramref name="array" /> de destino.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-158">The type of the source <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f2f6-159">Obtém um valor que indica se o acesso à <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" /> é sincronizado (thread-safe).</span><span class="sxs-lookup"><span data-stu-id="2f2f6-159">Gets a value indicating whether access to the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" /> is synchronized (thread safe).</span></span></summary>
        <value><span data-ttu-id="2f2f6-160"><see langword="true" /> caso o acesso ao <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" /> seja sincronizado (thread-safe); do contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-160"><see langword="true" /> if access to the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span></span> <span data-ttu-id="2f2f6-161">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-161">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f2f6-162">As classes derivadas podem fornecer sua própria versão sincronizada do <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection> usando o <xref:System.Collections.ICollection.SyncRoot%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-162">Derived classes can provide their own synchronized version of the <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection> using the <xref:System.Collections.ICollection.SyncRoot%2A> property.</span></span> <span data-ttu-id="2f2f6-163">O código de sincronização necessário realizar operações na <xref:System.Collections.ICollection.SyncRoot%2A> do <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>, não diretamente no <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-163">The synchronizing code must perform operations on the <xref:System.Collections.ICollection.SyncRoot%2A> of the <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>, not directly on the <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>.</span></span> <span data-ttu-id="2f2f6-164">Isso garante a operação apropriada das coleções que são derivadas de outros objetos.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-164">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="2f2f6-165">Especificamente, ele mantém uma sincronização adequada com outros threads que podem ser simultaneamente modificando o <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection> objeto.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-165">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection> object.</span></span>  
  
 <span data-ttu-id="2f2f6-166">A enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-166">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="2f2f6-167">Mesmo quando uma coleção está sincronizada, outros threads ainda podem modificar a coleção, o que faz o enumerador lançar uma exceção.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-167">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="2f2f6-168">Para garantir thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração ou verificar as exceções resultantes das alterações feitas por outros threads.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-168">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f2f6-169">O exemplo de código a seguir mostra como bloquear a coleção usando o <xref:System.Collections.ICollection.SyncRoot%2A> durante toda a enumeração.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-169">The following code example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.KeysCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.collections.specialized.nameobjectcollectionbase.keyscollection/cpp/source.cpp#1)]
 [!code-csharp[System.Collections.Specialized.NameObjectCollectionBase.KeysCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.specialized.nameobjectcollectionbase.keyscollection/cs/source.cs#1)]
 [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.KeysCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.specialized.nameobjectcollectionbase.keyscollection/vb/source.vb#1)]  
  
 <span data-ttu-id="2f2f6-170">A recuperação do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="2f2f6-170">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f2f6-171">Obtém um objeto que pode ser usado para sincronizar o acesso ao <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" />.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-171">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" />.</span></span></summary>
        <value><span data-ttu-id="2f2f6-172">Um objeto que pode ser usado para sincronizar o acesso ao <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" />.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-172">An object that can be used to synchronize access to the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f2f6-173">As classes derivadas podem fornecer sua própria versão sincronizada do <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection> usando o <xref:System.Collections.ICollection.SyncRoot%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-173">Derived classes can provide their own synchronized version of the <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection> using the <xref:System.Collections.ICollection.SyncRoot%2A> property.</span></span> <span data-ttu-id="2f2f6-174">O código de sincronização necessário realizar operações na <xref:System.Collections.ICollection.SyncRoot%2A> do <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>, não diretamente no <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-174">The synchronizing code must perform operations on the <xref:System.Collections.ICollection.SyncRoot%2A> of the <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>, not directly on the <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>.</span></span> <span data-ttu-id="2f2f6-175">Isso garante a operação apropriada das coleções que são derivadas de outros objetos.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-175">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="2f2f6-176">Especificamente, ele mantém uma sincronização adequada com outros threads que podem ser simultaneamente modificando o <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection> objeto.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-176">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection> object.</span></span>  
  
 <span data-ttu-id="2f2f6-177">A enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-177">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="2f2f6-178">Mesmo quando uma coleção está sincronizada, outros threads ainda podem modificar a coleção, o que faz o enumerador lançar uma exceção.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-178">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="2f2f6-179">Para garantir thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração ou verificar as exceções resultantes das alterações feitas por outros threads.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-179">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f2f6-180">O exemplo de código a seguir mostra como bloquear a coleção usando o <xref:System.Collections.ICollection.SyncRoot%2A> durante toda a enumeração.</span><span class="sxs-lookup"><span data-stu-id="2f2f6-180">The following code example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.KeysCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.collections.specialized.nameobjectcollectionbase.keyscollection/cpp/source.cpp#1)]
 [!code-csharp[System.Collections.Specialized.NameObjectCollectionBase.KeysCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.specialized.nameobjectcollectionbase.keyscollection/cs/source.cs#1)]
 [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.KeysCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.specialized.nameobjectcollectionbase.keyscollection/vb/source.vb#1)]  
  
 <span data-ttu-id="2f2f6-181">A recuperação do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="2f2f6-181">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
  </Members>
</Type>