<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="StringEnumerator.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5acff11ebeaf7e351a3e77960f10a90170d853d70.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">acff11ebeaf7e351a3e77960f10a90170d853d70</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Collections.Specialized.StringEnumerator">
          <source>Supports a simple iteration over a <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph>.</source>
          <target state="translated">Dá suporte a uma iteração simples em um <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.StringEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">O <ph id="ph1">`foreach`</ph> instrução de linguagem c# (<ph id="ph2">`for each`</ph> no Visual Basic) oculta a complexidade dos enumeradores.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.StringEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">Portanto, o uso de <ph id="ph1">`foreach`</ph> é recomendado, em vez de manipular diretamente o enumerador.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.StringEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Os enumeradores podem ser usados para ler os dados na coleção, mas não podem ser usados para modificar a coleção subjacente.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.StringEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Inicialmente, o enumerador é posicionado antes do primeiro elemento da coleção.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.StringEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;</ph> também traz o enumerador de volta para essa posição.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.StringEnumerator">
          <source>At this position, calling <ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;</ph> throws an exception.</source>
          <target state="translated">AT isso posicionar, chamando <ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;</ph> lança uma exceção.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.StringEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">Por isso, você deve chamar <ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</ph> para avançar o enumerador até o primeiro elemento da coleção antes de ler o valor de <ph id="ph2">&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.StringEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;</ph> retorna o mesmo objeto até <ph id="ph2">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</ph> ou <ph id="ph3">&lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;</ph> ser chamado.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.StringEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</ph> define <ph id="ph2">&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;</ph> como o próximo elemento.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.StringEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Caso <ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</ph> passe o final da coleção, o enumerador é posicionado após o último elemento na coleção e <ph id="ph2">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</ph> retorna <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.StringEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Quando o enumerador está nessa posição, as chamadas subsequentes para <ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</ph> também retornam <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.StringEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, calling <ph id="ph3">&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;</ph> throws an exception.</source>
          <target state="translated">Se a última chamada <ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</ph> retornou <ph id="ph2">`false`</ph>, chamar <ph id="ph3">&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;</ph> lança uma exceção.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.StringEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">Para definir <ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;</ph> como o primeiro elemento da coleção novamente, é possível chamar <ph id="ph2">&lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;</ph> seguido de <ph id="ph3">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.StringEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Um enumerador permanece válido desde que a coleção continue inalterada.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.StringEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Se forem feitas alterações na coleção, como adicionar, modificar, ou excluir elementos, o enumerador é invalidado invalidado e a próxima chamada para <ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;</ph> lança um <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.StringEnumerator">
          <source>If the collection is modified between <ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;</ph> returns the element that it is set to, even if the enumerator is already invalidated.</source>
          <target state="translated">Se a coleção é modificada entre <ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;</ph> retorna o elemento que está definido como, mesmo se o enumerador já é invalidado.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.StringEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">O enumerador não tem acesso exclusivo à coleção; por isso, a enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.StringEnumerator">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Mesmo quando uma coleção está sincronizada, outros threads ainda podem modificar a coleção, o que faz o enumerador lançar uma exceção.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.StringEnumerator">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Para garantir thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração ou verificar as exceções resultantes das alterações feitas por outros threads.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.StringEnumerator">
          <source>The following code example demonstrates several of the properties and methods of <ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator&gt;</ph>.</source>
          <target state="translated">O exemplo de código a seguir demonstra várias propriedades e métodos de <ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.StringEnumerator">
          <source>Public static (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> in Visual Basic) members of this type are thread safe.</source>
          <target state="translated">Os membros estáticos públicos (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> no Visual Basic) desse são thread-safe.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.StringEnumerator">
          <source>Any instance members are not guaranteed to be thread safe.</source>
          <target state="translated">Não há garantia de que qualquer membro de instância seja thread-safe.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.StringEnumerator">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">A enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.StringEnumerator">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Mesmo quando uma coleção está sincronizada, outros threads ainda podem modificar a coleção, o que faz o enumerador lançar uma exceção.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.StringEnumerator">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Para garantir thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração ou verificar as exceções resultantes das alterações feitas por outros threads.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.StringEnumerator.Current">
          <source>Gets the current element in the collection.</source>
          <target state="translated">Obtém o elemento atual na coleção.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.StringEnumerator.Current">
          <source>The current element in the collection.</source>
          <target state="translated">O elemento atual na coleção.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.StringEnumerator.Current">
          <source>After an enumerator is created or after a <ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;</ph> is called, <ph id="ph2">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</ph> must be called to advance the enumerator to the first element of the collection before reading the value of <ph id="ph3">&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;</ph>; otherwise, <ph id="ph4">&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">Após a criação de um enumerador ou depois de um <ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;</ph> é chamado, <ph id="ph2">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</ph> deve ser chamado para avançar o enumerador para o primeiro elemento da coleção antes de ler o valor de <ph id="ph3">&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;</ph>; caso contrário, <ph id="ph4">&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;</ph> é indefinido.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.StringEnumerator.Current">
          <source><ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;</ph> also throws an exception if the last call to <ph id="ph2">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph3">`false`</ph>, which indicates the end of the collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;</ph> também gera uma exceção se a última chamada <ph id="ph2">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</ph> retornou <ph id="ph3">`false`</ph>, que indica o final da coleção.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.StringEnumerator.Current">
          <source><ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;</ph> does not move the position of the enumerator, and consecutive calls to <ph id="ph2">&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;</ph> return the same object until either <ph id="ph3">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;</ph> não move a posição do enumerador e chamadas consecutivas para <ph id="ph2">&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;</ph> retornar o mesmo objeto até que o <ph id="ph3">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</ph> ou <ph id="ph4">&lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;</ph> é chamado.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.StringEnumerator.Current">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Um enumerador permanece válido desde que a coleção continue inalterada.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.StringEnumerator.Current">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Se forem feitas alterações na coleção, como adicionar, modificar, ou excluir elementos, o enumerador é invalidado invalidado e a próxima chamada para <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> lança um <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.StringEnumerator.Current">
          <source>If the collection is modified between <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the element that it is set to, even if the enumerator is already invalidated.</source>
          <target state="translated">Se a coleção é modificada entre <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> retorna o elemento que está definido como, mesmo se o enumerador já é invalidado.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.StringEnumerator.Current">
          <source>The following code example demonstrates several of the properties and methods of <ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator&gt;</ph>.</source>
          <target state="translated">O exemplo de código a seguir demonstra várias propriedades e métodos de <ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.StringEnumerator.Current">
          <source>The enumerator is positioned before the first element of the collection or after the last element.</source>
          <target state="translated">O enumerador é posicionado antes do primeiro elemento da coleção ou depois do último elemento.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringEnumerator.MoveNext">
          <source>Advances the enumerator to the next element of the collection.</source>
          <target state="translated">Avança o enumerador para o próximo elemento da coleção.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringEnumerator.MoveNext">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the enumerator was successfully advanced to the next element; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the enumerator has passed the end of the collection.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o enumerador foi avançado com êxito para o próximo elemento; <ph id="ph2">&lt;see langword="false" /&gt;</ph> se o enumerador passou o final da coleção.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringEnumerator.MoveNext">
          <source>After an enumerator is created or after a <ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;</ph> is called, an enumerator is positioned before the first element of the collection, and the first call to <ph id="ph2">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</ph> moves the enumerator over the first element of the collection.</source>
          <target state="translated">Após a criação de um enumerador ou depois de um <ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;</ph> é chamado, um enumerador está posicionado antes do primeiro elemento da coleção e a primeira chamada para <ph id="ph2">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</ph> move o enumerador sobre o primeiro elemento da coleção.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringEnumerator.MoveNext">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Caso <ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</ph> passe o final da coleção, o enumerador é posicionado após o último elemento na coleção e <ph id="ph2">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</ph> retorna <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringEnumerator.MoveNext">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph> until <ph id="ph3">&lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated">Quando o enumerador está nessa posição, chamadas subsequentes para <ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</ph> também retornam <ph id="ph2">`false`</ph> até <ph id="ph3">&lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;</ph> é chamado.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringEnumerator.MoveNext">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Um enumerador permanece válido desde que a coleção continue inalterada.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringEnumerator.MoveNext">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Se forem feitas alterações na coleção, como adicionar, modificar, ou excluir elementos, o enumerador é invalidado invalidado e a próxima chamada para <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> lança um <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringEnumerator.MoveNext">
          <source>If the collection is modified between <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the element that it is set to, even if the enumerator is already invalidated.</source>
          <target state="translated">Se a coleção é modificada entre <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> retorna o elemento que está definido como, mesmo se o enumerador já é invalidado.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringEnumerator.MoveNext">
          <source>The following code example demonstrates several of the properties and methods of <ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator&gt;</ph>.</source>
          <target state="translated">O exemplo de código a seguir demonstra várias propriedades e métodos de <ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringEnumerator.MoveNext">
          <source>The collection was modified after the enumerator was created.</source>
          <target state="translated">A coleção foi modificada depois da criação do enumerador.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringEnumerator.Reset">
          <source>Sets the enumerator to its initial position, which is before the first element in the collection.</source>
          <target state="translated">Define o enumerador com sua posição inicial, que é antes do primeiro elemento da coleção.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringEnumerator.Reset">
          <source><ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;</ph> moves the enumerator to the beginning of the collection, before the first element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;</ph> Move o enumerador para o início da coleção, antes do primeiro elemento.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringEnumerator.Reset">
          <source>After <ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</ph> must be called to advance the enumerator to the first element of the collection before reading the value of <ph id="ph3">&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">Depois de <ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator.Reset%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A&gt;</ph> deve ser chamado para avançar o enumerador para o primeiro elemento da coleção antes de ler o valor de <ph id="ph3">&lt;xref:System.Collections.Specialized.StringEnumerator.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.StringEnumerator.Reset">
          <source>The following code example demonstrates several of the properties and methods of <ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator&gt;</ph>.</source>
          <target state="translated">O exemplo de código a seguir demonstra várias propriedades e métodos de <ph id="ph1">&lt;xref:System.Collections.Specialized.StringEnumerator&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.StringEnumerator.Reset">
          <source>The collection was modified after the enumerator was created.</source>
          <target state="translated">A coleção foi modificada depois da criação do enumerador.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>