<Type Name="ILogicalThreadAffinative" FullName="System.Runtime.Remoting.Messaging.ILogicalThreadAffinative">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bb7d87b2642cb63692bb7f07edc3f1b55dbf2b8b" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48614406" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ILogicalThreadAffinative" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ILogicalThreadAffinative" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Messaging.ILogicalThreadAffinative" />
  <TypeSignature Language="VB.NET" Value="Public Interface ILogicalThreadAffinative" />
  <TypeSignature Language="C++ CLI" Value="public interface class ILogicalThreadAffinative" />
  <TypeSignature Language="F#" Value="type ILogicalThreadAffinative = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Marca um objeto que pode ser propagado fora de um <see cref="T:System.AppDomain" /> em um <see cref="T:System.Runtime.Remoting.Messaging.LogicalCallContext" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando uma chamada de método remoto é feita de um objeto em outro <xref:System.AppDomain>, atual <xref:System.Runtime.Remoting.Messaging.CallContext> classe gera uma <xref:System.Runtime.Remoting.Messaging.LogicalCallContext> que viaja junto com a chamada para o local remoto. Somente objetos que expõem os <xref:System.Runtime.Remoting.Messaging.ILogicalThreadAffinative> de interface e são armazenados na <xref:System.Runtime.Remoting.Messaging.CallContext> são propagados fora o <xref:System.AppDomain>. Objetos que não dão suporte a essa interface não são transmitidos em <xref:System.Runtime.Remoting.Messaging.LogicalCallContext> instâncias com chamadas de método remoto.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra o uso do <xref:System.Runtime.Remoting.Messaging.ILogicalThreadAffinative> interface transmita [Principal e objetos de identidade](~/docs/standard/security/principal-and-identity-objects.md) em um local remoto para identificação. Para exibir o código para o `HelloServiceClass` classe usada no exemplo, consulte o exemplo para o <xref:System.Runtime.Remoting.Messaging.CallContext.GetData%2A> método. Para exibir o código para a classe de servidor usada neste exemplo, consulte o exemplo para o <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType%2A> classe. Para exibir o código para a classe de cliente usada no exemplo, consulte o exemplo para o <xref:System.Runtime.Remoting.Messaging.CallContext> classe.  
  
 [!code-cpp[CallContext#2](~/samples/snippets/cpp/VS_Snippets_Remoting/CallContext/CPP/service.cpp#2)]
 [!code-csharp[CallContext#2](~/samples/snippets/csharp/VS_Snippets_Remoting/CallContext/CS/service.cs#2)]
 [!code-vb[CallContext#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CallContext/VB/service.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members />
</Type>