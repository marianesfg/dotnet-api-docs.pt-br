<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlPreloadedResolver.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5ff174cb9ee7cd1fe20e10f54887ab4163da8e574.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ff174cb9ee7cd1fe20e10f54887ab4163da8e574</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Resolvers.XmlPreloadedResolver">
          <source>Represents a class that is used to prepopulate the cache with DTDs or XML streams.</source>
          <target state="translated">Representa uma classe usada para pré-popular o cache com DTDs ou fluxos XML.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Resolvers.XmlPreloadedResolver">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Resolvers.XmlPreloadedResolver&gt;</ph> type is used as a resolver when automatic calls to the network are not desired or are not possible.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Xml.Resolvers.XmlPreloadedResolver&gt;</ph> tipo é usado como um resolvedor quando chamadas automática para a rede não desejadas ou não são possíveis.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Resolvers.XmlPreloadedResolver">
          <source>For example, this type can be used for loading cached external DTDs.</source>
          <target state="translated">Por exemplo, esse tipo pode ser usado para carregar DTDs externos armazenadas em cache.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Resolvers.XmlPreloadedResolver">
          <source>Or, you might use <ph id="ph1">&lt;xref:System.Xml.Resolvers.XmlPreloadedResolver&gt;</ph> to preload well-known DTDs that are defined in XHTML 1.0.</source>
          <target state="translated">Ou, você pode usar <ph id="ph1">&lt;xref:System.Xml.Resolvers.XmlPreloadedResolver&gt;</ph> para pré-carregar DTDs bem conhecidos que são definidos em XHTML 1.0.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Resolvers.XmlPreloadedResolver">
          <source>Preloading well-known DTDs does not start any network connections because these DTDs are already embedded in the System.Xml.Utils assembly.</source>
          <target state="translated">Pré-carregamento DTDs conhecidos não iniciar qualquer conexão de rede porque esses DTDs já são inseridos no assembly System.Xml.Utils.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Resolvers.XmlPreloadedResolver">
          <source>Currently, <ph id="ph1">&lt;xref:System.Xml.Resolvers.XmlPreloadedResolver&gt;</ph> includes the DTDs that are defined in XHTML 1.0 and RSS 0.91.</source>
          <target state="translated">Atualmente, <ph id="ph1">&lt;xref:System.Xml.Resolvers.XmlPreloadedResolver&gt;</ph> inclui que são definidos no XHTML 1.0 e RSS 0.91 DTDs.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="T:System.Xml.Resolvers.XmlPreloadedResolver">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.Resolvers.XmlKnownDtds)">
          <source>The well-known DTDs that should be prepopulated into the cache.</source>
          <target state="translated">Os DTDs bem conhecidos que devem ser pré-preenchidos no cache.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.Resolvers.XmlKnownDtds)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> class with the specified preloaded well-known DTDs.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> com os DTDs bem-conhecidos pré-carregados especificados.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver)">
          <source>The <ph id="ph1">&lt;see langword="XmlResolver" /&gt;</ph>, <ph id="ph2">&lt;see langword="XmlXapResolver" /&gt;</ph>, or your own resolver.</source>
          <target state="translated">O <ph id="ph1">&lt;see langword="XmlResolver" /&gt;</ph>, o <ph id="ph2">&lt;see langword="XmlXapResolver" /&gt;</ph> ou seu próprio resolvedor.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> class with the specified fallback resolver.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> com o resolvedor de fallback especificado.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds)">
          <source>The <ph id="ph1">&lt;see langword="XmlResolver" /&gt;</ph>, <ph id="ph2">&lt;see langword="XmlXapResolver" /&gt;</ph>, or your own resolver.</source>
          <target state="translated">O <ph id="ph1">&lt;see langword="XmlResolver" /&gt;</ph>, o <ph id="ph2">&lt;see langword="XmlXapResolver" /&gt;</ph> ou seu próprio resolvedor.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds)">
          <source>The well-known DTDs that should be prepopulated into the cache.</source>
          <target state="translated">Os DTDs bem conhecidos que devem ser pré-preenchidos no cache.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> class with the specified fallback resolver and preloaded well-known DTDs.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> com o resolvedor de fallback especificado e DTDs bem conhecidos pré-carregados.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds,System.Collections.Generic.IEqualityComparer{System.Uri})">
          <source>The <ph id="ph1">&lt;see langword="XmlResolver" /&gt;</ph>, <ph id="ph2">&lt;see langword="XmlXapResolver" /&gt;</ph>, or your own resolver.</source>
          <target state="translated">O <ph id="ph1">&lt;see langword="XmlResolver" /&gt;</ph>, o <ph id="ph2">&lt;see langword="XmlXapResolver" /&gt;</ph> ou seu próprio resolvedor.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds,System.Collections.Generic.IEqualityComparer{System.Uri})">
          <source>The well-known DTDs that should be prepopulated into cache.</source>
          <target state="translated">Os DTDs bem conhecidos que devem ser pré-preenchidos em cache.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds,System.Collections.Generic.IEqualityComparer{System.Uri})">
          <source>The implementation of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> generic interface to use when you compare URIs.</source>
          <target state="translated">A implementação da interface genérica <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph> a usar ao comparar URIs.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds,System.Collections.Generic.IEqualityComparer{System.Uri})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> class with the specified fallback resolver, preloaded well-known DTDs, and URI equality comparer.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> com o resolvedor de fallback especificado, DTDs bem conhecidos pré-carregados e o comparador de igualdade do URI.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds,System.Collections.Generic.IEqualityComparer{System.Uri})">
          <source>Use this constructor overload if you want to customize URI comparison.</source>
          <target state="translated">Use essa sobrecarga de construtor, se você quiser personalizar a comparação do URI.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="T:System.Xml.Resolvers.XmlPreloadedResolver">
          <source>Adds a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, byte array, or string with preloaded data to the <ph id="ph2">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> store and maps it to a URI.</source>
          <target state="translated">Adiciona um <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, uma matriz de bytes ou cadeia de caracteres com os dados pré-carregados ao repositório de <ph id="ph2">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> e mapeia-os para um URI.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="T:System.Xml.Resolvers.XmlPreloadedResolver">
          <source>If the store already contains a mapping for the same URI, the existing mapping is overridden.</source>
          <target state="translated">Se o repositório já contiver um mapeamento para o mesmo URI, o mapeamento existente será substituído.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[])">
          <source>The URI of the data that is being added to the <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> store.</source>
          <target state="translated">O URI dos dados que estão sendo adicionados ao repositório do <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[])">
          <source>A byte array with the data that corresponds to the provided URI.</source>
          <target state="translated">Uma matriz de bytes com os dados que correspondem ao URI fornecido.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[])">
          <source>Adds a byte array to the <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> store and maps it to a URI.</source>
          <target state="translated">Adiciona uma matriz de bytes ao repositório <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> e mapeia-a para um URI.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[])">
          <source>If the store already contains a mapping for the same URI, the existing mapping is overridden.</source>
          <target state="translated">Se o repositório já contiver um mapeamento para o mesmo URI, o mapeamento existente será substituído.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="uri" /&gt;</ph> or <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uri" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="value" /&gt;</ph> é <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.IO.Stream)">
          <source>The URI of the data that is being added to the <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> store.</source>
          <target state="translated">O URI dos dados que estão sendo adicionados ao repositório do <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.IO.Stream)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> with the data that corresponds to the provided URI.</source>
          <target state="translated">Uma <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> com os dados que correspondem ao URI fornecido.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.IO.Stream)">
          <source>Adds a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> to the <ph id="ph2">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> store and maps it to a URI.</source>
          <target state="translated">Adiciona um <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> ao repositório de <ph id="ph2">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> e mapeia-o para um URI.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.IO.Stream)">
          <source>If the store already contains a mapping for the same URI, the existing mapping is overridden.</source>
          <target state="translated">Se o repositório já contiver um mapeamento para o mesmo URI, o mapeamento existente será substituído.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.IO.Stream)">
          <source><ph id="ph1">&lt;paramref name="uri" /&gt;</ph> or <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uri" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="value" /&gt;</ph> é <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.String)">
          <source>The URI of the data that is being added to the <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> store.</source>
          <target state="translated">O URI dos dados que estão sendo adicionados ao repositório do <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.String)">
          <source>A <ph id="ph1">&lt;see langword="String" /&gt;</ph> with the data that corresponds to the provided URI.</source>
          <target state="translated">Uma <ph id="ph1">&lt;see langword="String" /&gt;</ph> com os dados que correspondem ao URI fornecido.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.String)">
          <source>Adds a string with preloaded data to the <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> store and maps it to a URI.</source>
          <target state="translated">Adiciona uma cadeia de caracteres com os dados pré-carregados ao repositório de <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> e mapeia-os para um URI.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.String)">
          <source>If the store already contains a mapping for the same URI, the existing mapping is overridden.</source>
          <target state="translated">Se o repositório já contiver um mapeamento para o mesmo URI, o mapeamento existente será substituído.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.String)">
          <source><ph id="ph1">&lt;paramref name="uri" /&gt;</ph> or <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uri" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="value" /&gt;</ph> é <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[],System.Int32,System.Int32)">
          <source>The URI of the data that is being added to the <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> store.</source>
          <target state="translated">O URI dos dados que estão sendo adicionados ao repositório do <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[],System.Int32,System.Int32)">
          <source>A byte array with the data that corresponds to the provided URI.</source>
          <target state="translated">Uma matriz de bytes com os dados que correspondem ao URI fornecido.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[],System.Int32,System.Int32)">
          <source>The offset in the provided byte array where the data starts.</source>
          <target state="translated">O deslocamento da matriz de bytes fornecida em que os dados começam.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes to read from the byte array, starting at the provided offset.</source>
          <target state="translated">O número de bytes a serem lidos da matriz de bytes, começando no deslocamento fornecido.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[],System.Int32,System.Int32)">
          <source>Adds a byte array to the <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> store and maps it to a URI.</source>
          <target state="translated">Adiciona uma matriz de bytes ao repositório <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> e mapeia-a para um URI.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[],System.Int32,System.Int32)">
          <source>If the store already contains a mapping for the same URI, the existing mapping is overridden.</source>
          <target state="translated">Se o repositório já contiver um mapeamento para o mesmo URI, o mapeamento existente será substituído.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="uri" /&gt;</ph> or <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uri" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="value" /&gt;</ph> é <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="count" /&gt;</ph> é menor que 0.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[],System.Int32,System.Int32)">
          <source>The length of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> minus <ph id="ph2">&lt;paramref name="offset" /&gt;</ph> is less than <ph id="ph3">&lt;paramref name="count." /&gt;</ph></source>
          <target state="translated">O comprimento de <ph id="ph1">&lt;paramref name="value" /&gt;</ph> menos <ph id="ph2">&lt;paramref name="offset" /&gt;</ph> é menor que <ph id="ph3">&lt;paramref name="count." /&gt;</ph></target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="P:System.Xml.Resolvers.XmlPreloadedResolver.Credentials">
          <source>Sets the credentials that are used to authenticate the underlying <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph>.</source>
          <target state="translated">Define as credenciais que são usadas para autenticar o <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> subjacente.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Resolvers.XmlPreloadedResolver.Credentials">
          <source>The credentials that are used to authenticate the underlying web request.</source>
          <target state="translated">As credenciais que são usadas para autenticar a solicitação da web subjacente.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>The URI returned from <ph id="ph1">&lt;see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" /&gt;</ph>.</source>
          <target state="translated">O URI retornado de <ph id="ph1">&lt;see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>The current version of the .NET Framework for Silverlight does not use this parameter when resolving URIs.</source>
          <target state="translated">A versão atual do .NET Framework para Silverlight não usa esse parâmetro durante a resolução de URIs.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>This parameter is provided for future extensibility purposes.</source>
          <target state="translated">Esse parâmetro é fornecido para fins de extensibilidade futura.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>For example, this parameter can be mapped to the xlink:role and used as an implementation-specific argument in other scenarios.</source>
          <target state="translated">Por exemplo, esse parâmetro pode ser mapeado para o xlink:role e usado como um argumento específico de implementação em outros cenários.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>The type of object to return.</source>
          <target state="translated">O tipo de objeto a ser retornado.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> supports <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph> objects and <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> objects for URIs that were added as <ph id="ph4">&lt;see langword="String" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> dá suporte a objetos <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph> e a objetos <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> para URIs que foram adicionados como <ph id="ph4">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>If the requested type is not supported by the resolver, an exception will be thrown.</source>
          <target state="translated">Se o tipo solicitado não tiver suporte no resolvedor, uma exceção será gerada.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>Use the <ph id="ph1">&lt;see cref="M:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)" /&gt;</ph> method to determine whether a certain <ph id="ph2">&lt;see langword="Type" /&gt;</ph> is supported by this resolver.</source>
          <target state="translated">Use o método <ph id="ph1">&lt;see cref="M:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)" /&gt;</ph> para determinar se um certo <ph id="ph2">&lt;see langword="Type" /&gt;</ph> tem suporte nesse resolvedor.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>Maps a URI to an object that contains the actual resource.</source>
          <target state="translated">Mapeia um URI para um objeto que contém o recurso real.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object that corresponds to the actual source.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> ou <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> que corresponde à fonte atual.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Resolvers.XmlPreloadedResolver&gt;</ph> will first try to look up the resource in its store of preloaded data.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Xml.Resolvers.XmlPreloadedResolver&gt;</ph> tentará primeiro consultar o recurso em seu repositório de dados previamente carregados.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>If it cannot find it, it will call the fallback resolver's <ph id="ph1">`GetEntity`</ph> method.</source>
          <target state="translated">Se ele não é possível encontrá-la, ele chamará o resolvedor de fallback <ph id="ph1">`GetEntity`</ph> método.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>If no fallback resolver was provided in the <ph id="ph1">&lt;xref:System.Xml.Resolvers.XmlPreloadedResolver&gt;</ph> constructor, an exception is thrown.</source>
          <target state="translated">Se nenhum resolvedor fallback foi fornecida no <ph id="ph1">&lt;xref:System.Xml.Resolvers.XmlPreloadedResolver&gt;</ph> construtor, uma exceção será lançada.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source><ph id="ph1">&lt;paramref name="absoluteUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="absoluteUri" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>Cannot resolve URI passed in <ph id="ph1">&lt;paramref name="absoluteUri" /&gt;</ph>.</source>
          <target state="translated">Não é possível resolver o URI passado em <ph id="ph1">&lt;paramref name="absoluteUri" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)">
          <source><ph id="ph1">&lt;paramref name="ofObjectToReturn" /&gt;</ph> is not of a supported type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ofObjectToReturn" /&gt;</ph> não é de um tipo com suporte.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
          <source>The URI returned from <ph id="ph1">&lt;see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" /&gt;</ph>.</source>
          <target state="translated">O URI retornado de <ph id="ph1">&lt;see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
          <source>The current version of the .NET Framework for Silverlight does not use this parameter when resolving URIs.</source>
          <target state="translated">A versão atual do .NET Framework para Silverlight não usa esse parâmetro durante a resolução de URIs.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
          <source>This parameter is provided for future extensibility purposes.</source>
          <target state="translated">Esse parâmetro é fornecido para fins de extensibilidade futura.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
          <source>For example, this parameter can be mapped to the xlink:role and used as an implementation-specific argument in other scenarios.</source>
          <target state="translated">Por exemplo, esse parâmetro pode ser mapeado para o xlink:role e usado como um argumento específico de implementação em outros cenários.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
          <source>The type of object to return.</source>
          <target state="translated">O tipo de objeto a ser retornado.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> supports <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph> objects and <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> objects for URIs that were added as <ph id="ph4">&lt;see langword="String" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> dá suporte a objetos <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph> e a objetos <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> para URIs que foram adicionados como <ph id="ph4">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
          <source>If the requested type is not supported by the resolver, an exception will be thrown.</source>
          <target state="translated">Se o tipo solicitado não tiver suporte no resolvedor, uma exceção será gerada.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
          <source>Use the <ph id="ph1">&lt;see cref="M:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)" /&gt;</ph> method to determine whether a certain <ph id="ph2">&lt;see langword="Type" /&gt;</ph> is supported by this resolver.</source>
          <target state="translated">Use o método <ph id="ph1">&lt;see cref="M:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)" /&gt;</ph> para determinar se um certo <ph id="ph2">&lt;see langword="Type" /&gt;</ph> tem suporte nesse resolvedor.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
          <source>Asynchronously maps a URI to an object that contains the actual resource.</source>
          <target state="translated">Mapeia de forma assíncrona um URI para um objeto que contém o recurso real.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object that corresponds to the actual source.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> ou <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> que corresponde à fonte atual.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="P:System.Xml.Resolvers.XmlPreloadedResolver.PreloadedUris">
          <source>Gets a collection of preloaded URIs.</source>
          <target state="translated">Obtém uma coleção de URIs pré-carregados.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Resolvers.XmlPreloadedResolver.PreloadedUris">
          <source>The collection of preloaded URIs.</source>
          <target state="translated">A coleção de URIs pré-carregados.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.Remove(System.Uri)">
          <source>The URI of the data that should be removed from the <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph> store.</source>
          <target state="translated">O URI dos dados que devem ser removidos do repositório <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.Remove(System.Uri)">
          <source>Removes the data that corresponds to the URI from the <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph>.</source>
          <target state="translated">Remove os dados que correspondem ao URI de <ph id="ph1">&lt;see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.Remove(System.Uri)">
          <source>No exception is thrown if the data does not exist in the store.</source>
          <target state="translated">Nenhuma exceção é lançada se os dados não existe no repositório.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.Remove(System.Uri)">
          <source><ph id="ph1">&lt;paramref name="uri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uri" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri(System.Uri,System.String)">
          <source>The base URI used to resolve the relative URI.</source>
          <target state="translated">O URI base usado para resolver o URI relativo.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri(System.Uri,System.String)">
          <source>The URI to resolve.</source>
          <target state="translated">O URI a ser resolvido.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri(System.Uri,System.String)">
          <source>The URI can be absolute or relative.</source>
          <target state="translated">O URI pode ser absoluto ou relativo.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri(System.Uri,System.String)">
          <source>If absolute, this value effectively replaces the <bpt id="p1">&lt;c&gt;</bpt>baseUri<ept id="p1">&lt;/c&gt;</ept> value.</source>
          <target state="translated">Se for absoluto, esse valor substitui o valor <bpt id="p1">&lt;c&gt;</bpt>baseUri<ept id="p1">&lt;/c&gt;</ept> na prática.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri(System.Uri,System.String)">
          <source>If relative, it combines with the <bpt id="p1">&lt;c&gt;</bpt>baseUri<ept id="p1">&lt;/c&gt;</ept> to make an absolute URI.</source>
          <target state="translated">Se for relativo, ele combinará com o <bpt id="p1">&lt;c&gt;</bpt>baseUri<ept id="p1">&lt;/c&gt;</ept> para tornar um URI absoluto.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri(System.Uri,System.String)">
          <source>Resolves the absolute URI from the base and relative URIs.</source>
          <target state="translated">Resolve o URI absoluto dos URIs de base e relativo.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri(System.Uri,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> representing the absolute URI or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the relative URI cannot be resolved.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> que representa o URI absoluto ou <ph id="ph2">&lt;see langword="null" /&gt;</ph> se não for possível resolver o URI relativo.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri(System.Uri,System.String)">
          <source><ph id="ph1">&lt;paramref name="uri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uri" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)">
          <source>The absolute URI to check.</source>
          <target state="translated">O URI absoluto a verificar.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> to return.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> a ser retornado.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)">
          <source>Determines whether the resolver supports other <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>s than just <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">Determina se o resolvedor é compatível com outros <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>s do que apenas <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> is supported; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se houver suporte para o <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)">
          <source><ph id="ph1">&lt;paramref name="uri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uri" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>