<Type Name="ChangeMonitor" FullName="System.Runtime.Caching.ChangeMonitor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="aa8f739063475b844ca1c37c795d7728c6ae75a7" /><Meta Name="ms.sourcegitcommit" Value="c5fd6b431a16f0412349201a0e93a9eacddf4b35" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="12/14/2018" /><Meta Name="ms.locfileid" Value="53390047" /></Metadata><TypeSignature Language="C#" Value="public abstract class ChangeMonitor : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ChangeMonitor extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Caching.ChangeMonitor" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ChangeMonitor&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChangeMonitor abstract : IDisposable" />
  <TypeSignature Language="F#" Value="type ChangeMonitor = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Caching</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="71934-101">Fornece uma classe base para um tipo personalizado derivado que monitora alterações no estado dos dados, ao qual um item de cache depende.</span><span class="sxs-lookup"><span data-stu-id="71934-101">Provides a base class for a derived custom type that monitors changes in the state of the data which a cache item depends on.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71934-102">O <xref:System.Runtime.Caching.ChangeMonitor> classe é usada como a classe base para classes derivadas de monitor que são especializadas para implementações de cache específica.</span><span class="sxs-lookup"><span data-stu-id="71934-102">The <xref:System.Runtime.Caching.ChangeMonitor> class is used as the base class for derived monitor classes that are specialized for particular cache implementations.</span></span> <span data-ttu-id="71934-103">Um <xref:System.Runtime.Caching.ChangeMonitor> instância monitora as alterações feitas no estado dos dados que depende de um item de cache.</span><span class="sxs-lookup"><span data-stu-id="71934-103">A <xref:System.Runtime.Caching.ChangeMonitor> instance monitors changes in the state of data which a cache item depends on.</span></span> <span data-ttu-id="71934-104">Por exemplo, o item pode ser uma entidade de dados ou arquivo cujos conteúdos são armazenados em cache.</span><span class="sxs-lookup"><span data-stu-id="71934-104">For example, the item can be a file or data entity whose contents are cached.</span></span> <span data-ttu-id="71934-105">Se a entidade de dados ou arquivo for atualizada, a entrada de cache associado deve ser alterada também.</span><span class="sxs-lookup"><span data-stu-id="71934-105">If the file or data entity is updated, the associated cache entry must be changed also.</span></span> <span data-ttu-id="71934-106">Itens comuns que podem ser monitorados incluem entidades de dados (como campos de banco de dados, valores, linhas ou tabelas), outra entrada de cache e arquivos e atributos de arquivo.</span><span class="sxs-lookup"><span data-stu-id="71934-106">Common items that can be monitored include data entities (such as database fields, values, rows, or tables), another cache entry, and files and file attributes.</span></span>  
  
 <span data-ttu-id="71934-107">Uma alteração de dependência é uma alteração no estado de uma dependência.</span><span class="sxs-lookup"><span data-stu-id="71934-107">A dependency change is a change in the state of a dependency.</span></span> <span data-ttu-id="71934-108">Em uma implementação típica do cache, depois que um <xref:System.Runtime.Caching.ChangeMonitor> instância notifica o cache de uma dependência foi alterada, o cache realiza a ação necessária, como invalidar a entrada de cache inseridas.</span><span class="sxs-lookup"><span data-stu-id="71934-108">In a typical cache implementation, after a <xref:System.Runtime.Caching.ChangeMonitor> instance notifies the cache that a dependency has changed, the cache performs the required action, such as invalidating the inserted cache entry.</span></span>  
  
 <span data-ttu-id="71934-109">Derivado <xref:System.Runtime.Caching.ChangeMonitor> classes podem ser personalizadas para monitorar as alterações de dependência para armazenamentos de dados específicos de diferentes.</span><span class="sxs-lookup"><span data-stu-id="71934-109">Derived <xref:System.Runtime.Caching.ChangeMonitor> classes can be customized to monitor dependency changes for specific different data stores.</span></span> <span data-ttu-id="71934-110">Por exemplo, há implementações de cache para um sistema de arquivos, a memória física ou um banco de dados.</span><span class="sxs-lookup"><span data-stu-id="71934-110">For example, there are cache implementations for a file system, physical memory, or a database.</span></span> <span data-ttu-id="71934-111">O <xref:System.Runtime.Caching.ChangeMonitor> classe examina as alterações que ocorrem fora do cache e, em seguida, o cache que ocorreram alterações de alertas.</span><span class="sxs-lookup"><span data-stu-id="71934-111">The <xref:System.Runtime.Caching.ChangeMonitor> class examines changes that occur outside the cache, and then alerts the cache that changes have occurred.</span></span>  
  
 <span data-ttu-id="71934-112">O [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] inclui as seguintes classes que derivam de <xref:System.Runtime.Caching.ChangeMonitor> classe:</span><span class="sxs-lookup"><span data-stu-id="71934-112">The [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] includes the following classes that derive from <xref:System.Runtime.Caching.ChangeMonitor> class:</span></span>  
  
-   <xref:System.Runtime.Caching.CacheEntryChangeMonitor>  
  
-   <xref:System.Runtime.Caching.FileChangeMonitor>  
  
-   <xref:System.Runtime.Caching.HostFileChangeMonitor>  
  
-   <xref:System.Runtime.Caching.SqlChangeMonitor>  
  
 <span data-ttu-id="71934-113">Cada uma dessas classes funciona com tipos diferentes de dependências.</span><span class="sxs-lookup"><span data-stu-id="71934-113">Each of these classes works with different types of dependencies.</span></span> <span data-ttu-id="71934-114">Por exemplo, a derivada <xref:System.Runtime.Caching.FileChangeMonitor> classe monitora as alterações feitas a um cache de dados do sistema de arquivos (arquivos e pastas) que o item de cache depende.</span><span class="sxs-lookup"><span data-stu-id="71934-114">For example, the derived <xref:System.Runtime.Caching.FileChangeMonitor> class monitors changes to a cache for file system data (files and folders) that the cache item depends on.</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="71934-115">Este tipo é thread-safe.</span><span class="sxs-lookup"><span data-stu-id="71934-115">This type is thread safe.</span></span></threadsafe>
    <block subset="none" type="overrides"><para><span data-ttu-id="71934-116">Se você criar um personalizado a implementação de cache ou uma alteração derivada monitorar tipo, você deve seguir certas diretrizes.</span><span class="sxs-lookup"><span data-stu-id="71934-116">If you create a custom cache implementation or a derived change monitor type, you must follow certain guidelines.</span></span> <span data-ttu-id="71934-117">A lista a seguir resume essas diretrizes.</span><span class="sxs-lookup"><span data-stu-id="71934-117">The following list summarizes these guidelines.</span></span> <span data-ttu-id="71934-118">Para obter mais informações, consulte a documentação para as propriedades ou métodos individuais.</span><span class="sxs-lookup"><span data-stu-id="71934-118">For more information, see the documentation for individual methods or properties.</span></span>  
  
<span data-ttu-id="71934-119">-O construtor de uma classe derivada deve definir a <see cref="P:System.Runtime.Caching.ChangeMonitor.UniqueId" /> propriedade, comece a monitorar e chamar <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> método antes do método retorna.</span><span class="sxs-lookup"><span data-stu-id="71934-119">-   The constructor of a derived class must set the <see cref="P:System.Runtime.Caching.ChangeMonitor.UniqueId" /> property, begin monitoring, and call <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> method before the method returns.</span></span> <span data-ttu-id="71934-120">Se um construtor encontra um erro durante construções e deve ter para descartar os recursos, o construtor pode chamar apenas o <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> sobrecarregar após o <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> o método é chamado porque o <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> sobrecarga lançará um <see cref="T:System.InvalidOperationException" /> exceção se a inicialização não for concluída.</span><span class="sxs-lookup"><span data-stu-id="71934-120">If a constructor encounters an error during constructions and must have to dispose of resources, the constructor can only call the <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> overload after the <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> method is called because the <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> overload will throw an <see cref="T:System.InvalidOperationException" /> exception if initialization is not completed.</span></span>  
  
<span data-ttu-id="71934-121">-Se houver alterações nos dados que está sendo monitorados antes que a inicialização é concluída, o construtor deve chamar o <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> método antes de chamar o <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> método.</span><span class="sxs-lookup"><span data-stu-id="71934-121">-   If changes occur in the data that is being monitored before initialization is complete, the constructor must call the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method before calling the <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> method.</span></span>  
  
<span data-ttu-id="71934-122">-Após um derivado <see cref="T:System.Runtime.Caching.ChangeMonitor" /> tipo é instanciado, você deve inserir o monitor em um personalizado <see cref="T:System.Runtime.Caching.ObjectCache" /> implementação.</span><span class="sxs-lookup"><span data-stu-id="71934-122">-   After a derived <see cref="T:System.Runtime.Caching.ChangeMonitor" /> type is instantiated, you must insert the monitor into a custom <see cref="T:System.Runtime.Caching.ObjectCache" /> implementation.</span></span> <span data-ttu-id="71934-123">Ou, se você tiver terminado de usar o monitor de alteração, chame o <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> método.</span><span class="sxs-lookup"><span data-stu-id="71934-123">Or if you are finished using the change monitor, call the <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> method.</span></span>  
  
<span data-ttu-id="71934-124">-Após um <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instância é inserida em um <see cref="T:System.Runtime.Caching.ObjectCache" /> implementação, o <see cref="T:System.Runtime.Caching.ObjectCache" /> instância exigem que o monitor de alteração é descartado.</span><span class="sxs-lookup"><span data-stu-id="71934-124">-   After a <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance is inserted into a <see cref="T:System.Runtime.Caching.ObjectCache" /> implementation, the <see cref="T:System.Runtime.Caching.ObjectCache" /> instance require that the change monitor is disposed.</span></span> <span data-ttu-id="71934-125">Mesmo se a inserção é inválida e gera uma exceção, o <see cref="T:System.Runtime.Caching.ObjectCache" /> implementação deve chamar o <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> de sobrecarga.</span><span class="sxs-lookup"><span data-stu-id="71934-125">Even if the insertion is invalid and causes an exception, the <see cref="T:System.Runtime.Caching.ObjectCache" /> implementation must call the <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> overload.</span></span>  
  
<span data-ttu-id="71934-126">-Depois que um monitor de alteração derivado é inserido em um cache, o <see cref="T:System.Runtime.Caching.ObjectCache" /> deve chamar a implementação <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" />, passando um <see cref="T:System.Runtime.Caching.OnChangedCallback" /> objeto.</span><span class="sxs-lookup"><span data-stu-id="71934-126">-   After a derived change monitor is inserted into a cache, the <see cref="T:System.Runtime.Caching.ObjectCache" /> implementation must call <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" />, by passing a <see cref="T:System.Runtime.Caching.OnChangedCallback" /> object.</span></span> <span data-ttu-id="71934-127">O <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> método pode ser chamado apenas uma vez.</span><span class="sxs-lookup"><span data-stu-id="71934-127">The <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> method can be called only one time.</span></span> <span data-ttu-id="71934-128">Se já tiver ocorrido uma alteração de dependência, o <see cref="T:System.Runtime.Caching.OnChangedCallback" /> instância será chamada imediatamente quando <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> é chamado.</span><span class="sxs-lookup"><span data-stu-id="71934-128">If a dependency change has already occurred, the <see cref="T:System.Runtime.Caching.OnChangedCallback" /> instance will be called immediately when <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> is called.</span></span> <span data-ttu-id="71934-129">Caso contrário, o <see cref="T:System.Runtime.Caching.OnChangedCallback" /> instância será chamada apenas uma vez.</span><span class="sxs-lookup"><span data-stu-id="71934-129">Otherwise, the <see cref="T:System.Runtime.Caching.OnChangedCallback" /> instance will be called only one time.</span></span> <span data-ttu-id="71934-130">Isso uma vez chamada ocorre quando o <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> o método é chamado porque o <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instância foi detectada uma alteração, ou quando o <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> método é chamado no <see cref="T:System.Runtime.Caching.ChangeMonitor" />, o que ocorrer primeiro.</span><span class="sxs-lookup"><span data-stu-id="71934-130">This one time call occurs either when the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method is called because the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance detected a change, or when the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method is called on the <see cref="T:System.Runtime.Caching.ChangeMonitor" />, whichever occurs first.</span></span>  
  
<span data-ttu-id="71934-131">-A <see cref="T:System.Runtime.Caching.OnChangedCallback" /> instância que é fornecida por um <see cref="T:System.Runtime.Caching.ObjectCache" /> implementação deve remover a entrada de cache associada e especifique um motivo usando o <see cref="F:System.Web.Caching.CacheItemRemovedReason.DependencyChanged" /> enumeração.</span><span class="sxs-lookup"><span data-stu-id="71934-131">-   The <see cref="T:System.Runtime.Caching.OnChangedCallback" /> instance that is provided by an <see cref="T:System.Runtime.Caching.ObjectCache" /> implementation should remove the associated cache entry and specify a reason by using the <see cref="F:System.Web.Caching.CacheItemRemovedReason.DependencyChanged" /> enumeration.</span></span>  
  
<span data-ttu-id="71934-132">-A <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instância poderá chamar o <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> método o antes de uma implementação de cache tiver chamado <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> método ou depois.</span><span class="sxs-lookup"><span data-stu-id="71934-132">-   A <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance can call the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method either before a cache implementation has called <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> method or after.</span></span> <span data-ttu-id="71934-133">Se o <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> método é chamado antes <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> é chamado, a base <see cref="T:System.Runtime.Caching.ChangeMonitor" /> implementação notificará o cache que isso tenha ocorrido e disparará a serem passados para o retorno de chamada <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> imediatamente quando <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> é invocado.</span><span class="sxs-lookup"><span data-stu-id="71934-133">If the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method is called before <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> is called, the base <see cref="T:System.Runtime.Caching.ChangeMonitor" /> implementation will notify the cache that this has occurred and will trigger the callback to be passed to <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> immediately when <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> is invoked.</span></span> <span data-ttu-id="71934-134">Quaisquer dados de estado que são passados para o <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> método é salvo pelo monitor de alteração e subsequentemente passado para o <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> método quando o <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> método é invocado.</span><span class="sxs-lookup"><span data-stu-id="71934-134">Any state data that is passed to the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method is saved by the change monitor and subsequently passed to the <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> method when the <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> method is invoked.</span></span>  
  
<span data-ttu-id="71934-135">-Um monitor de alteração deve implementar o <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> método.</span><span class="sxs-lookup"><span data-stu-id="71934-135">-   A change monitor must implement the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> method.</span></span> <span data-ttu-id="71934-136">Para obter mais informações, consulte a documentação do método <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" />.</span><span class="sxs-lookup"><span data-stu-id="71934-136">For more information, see the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> method documentation.</span></span>  
  
<span data-ttu-id="71934-137">-A <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> sobrecarga do método deve ser chamada para descartar o <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instância.</span><span class="sxs-lookup"><span data-stu-id="71934-137">-   The <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method overload must be called to dispose of the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance.</span></span> <span data-ttu-id="71934-138">As regras para chamar Dispose são da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="71934-138">The rules for calling Dispose are as follows:</span></span> 
<span data-ttu-id="71934-139">-Antes de um item é inserido no cache, é responsabilidade do chamador para descartar um <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instância.</span><span class="sxs-lookup"><span data-stu-id="71934-139">-   Before an item is inserted into the cache, it is the responsibility of caller to dispose of a <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance.</span></span>  
  
<span data-ttu-id="71934-140">-Item de cache uma vez e o <see cref="T:System.Runtime.Caching.ChangeMonitor" /> as instâncias que estão associadas ele são passadas para um cache, o implementador de cache deve garantir que o <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> método é chamado, mesmo se a inserção falhará.</span><span class="sxs-lookup"><span data-stu-id="71934-140">-   Once cache item and the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instances that are associated with it are passed to a cache, the cache implementer must make sure that the <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> method is called, even if the insert fails.</span></span>  
  
<span data-ttu-id="71934-141">-Depois de um item e seus associados <see cref="T:System.Runtime.Caching.ChangeMonitor" /> as instâncias são passadas para um cache, o chamador não deve descartar a dependência porque quando o <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> método é chamado, a chamada será tratada como se a dependência foi alterada.</span><span class="sxs-lookup"><span data-stu-id="71934-141">-   After an item and its associated <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instances are passed to a cache, the caller must not dispose the dependency because when the <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> method is called, the call is treated as if the dependency has changed.</span></span> <span data-ttu-id="71934-142">Como resultado, o <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> método é invocado automaticamente.</span><span class="sxs-lookup"><span data-stu-id="71934-142">As a result, the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method is automatically invoked.</span></span>  
  
<span data-ttu-id="71934-143">-Levando essas regras em consideração, o <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> método deve ser chamado em uma das seguintes maneiras:</span><span class="sxs-lookup"><span data-stu-id="71934-143">-   Taking these rules into consideration, the <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> method must be called in one of the following ways:</span></span> 
<span data-ttu-id="71934-144">-Os usuários devem chamar o <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> sobrecarga de método se eles não quiser inserir a instância derivada de monitor de alteração em um cache.</span><span class="sxs-lookup"><span data-stu-id="71934-144">-   Users must call the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method overload if they decide not to insert the derived change-monitor instance into a cache.</span></span>  
  
<span data-ttu-id="71934-145">-Se a implementação tenta inserir a instância do monitor de alteração em um cache de objeto, mas a inserção falhar, a implementação de cache é responsável por chamar o <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> de sobrecarga.</span><span class="sxs-lookup"><span data-stu-id="71934-145">-   If the implementation tries to insert the change-monitor instance into an object cache but the insertion fails, the cache implementation is responsible for calling the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> overload.</span></span> <span data-ttu-id="71934-146">Quando a tentativa de inserção faz com que uma exceção, a implementação de cache deve descartar quaisquer dependências associadas.</span><span class="sxs-lookup"><span data-stu-id="71934-146">When the insertion attempt causes an exception, the cache implementation must dispose of any associated dependencies.</span></span>  
  
<span data-ttu-id="71934-147">-Se a entrada de cache for removida, a implementação de cache também deve descartar a dependência.</span><span class="sxs-lookup"><span data-stu-id="71934-147">-   If the cache entry is removed, the cache implementation must also dispose of the dependency.</span></span>  
  
<span data-ttu-id="71934-148">-A implementação interna do <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> método chama automaticamente o <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> método depois que ele chama um retorno de chamada que é registrado por meio de <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" />.</span><span class="sxs-lookup"><span data-stu-id="71934-148">-   The internal implementation of the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method automatically calls the <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> method after it calls a callback that is registered through <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" />.</span></span>  
  
 <block subset="none" type="note"><para>  
 <span data-ttu-id="71934-149">Essa chamada automática para o método dispose durante o acionamento do evento só ocorrerá se a inicialização da <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instância anteriormente foi concluída.</span><span class="sxs-lookup"><span data-stu-id="71934-149">This automatic call to the dispose method during the event firing only occurs if the initialization of the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance was previously completed.</span></span>  
  
</para></block>  
  
 <span data-ttu-id="71934-150">Quando chama o construtor de um monitor de alteração derivado o <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> método, se já tiver sido alterado o estado do monitor de alteração (ou seja, o estado que é monitorado já alterados quando o construtor ainda estava ativo) o <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> será de método Descarte o monitor de alteração automaticamente.</span><span class="sxs-lookup"><span data-stu-id="71934-150">When a derived change monitor's constructor calls the <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> method, if the state of the change monitor has already changed (that is, the state that is monitored already changed when the constructor was still active) then the <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> method will automatically dispose of the change monitor.</span></span>  
  
<span data-ttu-id="71934-151">-A <see cref="P:System.Runtime.Caching.ChangeMonitor.HasChanged" /> estiver definida como <see langword="true" /> depois que o <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> método é chamado pela instância derivada de monitor de alteração, independentemente se um <see cref="T:System.Runtime.Caching.OnChangedCallback" /> objeto foi definido por uma chamada para o <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> método ou não.</span><span class="sxs-lookup"><span data-stu-id="71934-151">-   The <see cref="P:System.Runtime.Caching.ChangeMonitor.HasChanged" /> property is set to <see langword="true" /> after the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method is called by the derived change-monitor instance, regardless of whether a <see cref="T:System.Runtime.Caching.OnChangedCallback" /> object has been set by a call to the <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> method or not.</span></span></para></block>
    <altmember cref="N:System.Web.Caching" />
    <altmember cref="T:System.Runtime.Caching.ObjectCache" />
    <related type="Article" href="https://msdn.microsoft.com/library/ac11c8ea-df5d-4de8-b315-9ccf1048b0ce"><span data-ttu-id="71934-152">O cache do ASP.NET</span><span class="sxs-lookup"><span data-stu-id="71934-152">ASP.NET Caching</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ChangeMonitor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ChangeMonitor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ChangeMonitor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="71934-153">Inicializa uma nova instância da classe <see cref="T:System.Runtime.Caching.ChangeMonitor" />.</span><span class="sxs-lookup"><span data-stu-id="71934-153">Initializes a new instance of the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> class.</span></span> <span data-ttu-id="71934-154">Esse construtor é chamado de construtores em classes derivadas para inicializar a classe base.</span><span class="sxs-lookup"><span data-stu-id="71934-154">This constructor is called from constructors in derived classes to initialize the base class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71934-155">O <xref:System.Runtime.Caching.ChangeMonitor> classe tem um construtor padrão.</span><span class="sxs-lookup"><span data-stu-id="71934-155">The <xref:System.Runtime.Caching.ChangeMonitor> class has a default constructor.</span></span> <span data-ttu-id="71934-156">No entanto, as classes que herdam da base <xref:System.Runtime.Caching.ChangeMonitor> de classe e definir o monitoramento de alterações personalizada comportamento deve executar a inicialização no construtor.</span><span class="sxs-lookup"><span data-stu-id="71934-156">However, classes that inherit from the base <xref:System.Runtime.Caching.ChangeMonitor> class and define custom change-monitoring behavior must perform initialization in the constructor.</span></span> <span data-ttu-id="71934-157">Para obter mais informações, consulte as notas para a seção de herdeiros.</span><span class="sxs-lookup"><span data-stu-id="71934-157">For more information, see the Notes for Inheritors section.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="71934-158">O construtor de uma classe derivada deve definir a <see cref="P:System.Runtime.Caching.ChangeMonitor.UniqueId" /> propriedade, comece a monitorar e chamar o <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> classe antes de retornar.</span><span class="sxs-lookup"><span data-stu-id="71934-158">The constructor of a derived class must set the <see cref="P:System.Runtime.Caching.ChangeMonitor.UniqueId" /> property, begin monitoring, and call the <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> class before it returns.</span></span> <span data-ttu-id="71934-159">Se uma dependência é alterada antes da inicialização estiver concluída (por exemplo, se uma chave de cache dependente não for encontrada no cache), o construtor deve chamar o <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> método antes de chamar o <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> método.</span><span class="sxs-lookup"><span data-stu-id="71934-159">If a dependency changes before initialization is complete (for example, if a dependent cache key is not found in the cache), the constructor must call the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method before it calls the <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> method.</span></span> <span data-ttu-id="71934-160">Nesse caso, o construtor pode chamar o <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> método somente após o <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> método é chamado, porque o <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> método gera uma exceção se a inicialização não for concluída.</span><span class="sxs-lookup"><span data-stu-id="71934-160">In this case, constructor can call the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method only after the <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> method is called, because the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method throws an exception if initialization is not completed.</span></span></para></block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="71934-161">Libera todos os recursos usados pela instância atual da classe <see cref="T:System.Runtime.Caching.ChangeMonitor" />.</span><span class="sxs-lookup"><span data-stu-id="71934-161">Releases all resources used by the current instance of the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71934-162">O <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> método é usado para liberar o <xref:System.Runtime.Caching.ChangeMonitor> instância e recursos relacionados.</span><span class="sxs-lookup"><span data-stu-id="71934-162">The <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method is used to release the <xref:System.Runtime.Caching.ChangeMonitor> instance and related resources.</span></span> <span data-ttu-id="71934-163">O público <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> método é invocado para coordenar o processo de descarte com eventos de ciclo de vida da chave de classes derivadas de monitor de alteração (como inicialização) e para liberar o <xref:System.Runtime.Caching.ChangeMonitor> da instância para que a instância pode ser coletado como lixo.</span><span class="sxs-lookup"><span data-stu-id="71934-163">The public <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method is invoked to coordinate the disposal process with key life-cycle events of derived change-monitor classes (such as initialization), and to release the <xref:System.Runtime.Caching.ChangeMonitor> instance so that the instance can be garbage collected.</span></span> <span data-ttu-id="71934-164">O <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> método é implementado por classes derivadas de monitor de alteração para descartar os seus recursos gerenciados e não gerenciados.</span><span class="sxs-lookup"><span data-stu-id="71934-164">The <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method is implemented by derived change-monitor classes to dispose of their managed and unmanaged resources.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ChangeMonitor.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="changeMonitor.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="71934-165">Libera todos os recursos usados pela instância atual da classe <see cref="T:System.Runtime.Caching.ChangeMonitor" />.</span><span class="sxs-lookup"><span data-stu-id="71934-165">Releases all resources that are used by the current instance of the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71934-166">O <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> método invoca o <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> método de apenas uma vez, na primeira vez que ele é chamado de classes derivadas.</span><span class="sxs-lookup"><span data-stu-id="71934-166">The <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method invokes the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method of derived classes only one time, the first time it is called.</span></span> <span data-ttu-id="71934-167">As chamadas subsequentes para o <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> método não têm nenhum efeito.</span><span class="sxs-lookup"><span data-stu-id="71934-167">Subsequent calls to the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method have no effect.</span></span> <span data-ttu-id="71934-168">Depois que o método foi chamado, o <xref:System.Runtime.Caching.ChangeMonitor.IsDisposed%2A> estiver definida como `true`.</span><span class="sxs-lookup"><span data-stu-id="71934-168">After the method has been called, the <xref:System.Runtime.Caching.ChangeMonitor.IsDisposed%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="71934-169">O <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> sobrecarga deve ser chamada para descartar um <xref:System.Runtime.Caching.ChangeMonitor> instância.</span><span class="sxs-lookup"><span data-stu-id="71934-169">The <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> overload must be called to dispose of a <xref:System.Runtime.Caching.ChangeMonitor> instance.</span></span> <span data-ttu-id="71934-170">Seguem as regras para chamar o método dispose:</span><span class="sxs-lookup"><span data-stu-id="71934-170">The following are the rules for calling the dispose method:</span></span>  
  
-   <span data-ttu-id="71934-171">Antes de um item é inserido no cache, é responsabilidade do chamador para descartar um <xref:System.Runtime.Caching.ChangeMonitor> instância.</span><span class="sxs-lookup"><span data-stu-id="71934-171">Before an item is inserted into the cache, it is the caller's responsibility to dispose of a <xref:System.Runtime.Caching.ChangeMonitor> instance.</span></span>  
  
-   <span data-ttu-id="71934-172">Uma vez o item de cache e o <xref:System.Runtime.Caching.ChangeMonitor> as instâncias que estão associadas ele são passadas a um cache, o implementador de cache que deve se certificar que <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> é chamado, mesmo se a inserção falhará.</span><span class="sxs-lookup"><span data-stu-id="71934-172">Once cache item and the <xref:System.Runtime.Caching.ChangeMonitor> instances that are associated with it are passed to a cache, the cache implementer that must make sure that <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> is called, even if the insert fails.</span></span>  
  
-   <span data-ttu-id="71934-173">Depois de um item e seus associados <xref:System.Runtime.Caching.ChangeMonitor> as instâncias são passadas para um cache, o chamador não deve descartar a dependência porque quando o <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> método é chamado, a chamada será tratada como se a dependência foi alterada.</span><span class="sxs-lookup"><span data-stu-id="71934-173">After an item and its associated <xref:System.Runtime.Caching.ChangeMonitor> instances are passed to a cache, the caller must not dispose the dependency because when the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method is called, the call is treated as if the dependency has changed.</span></span> <span data-ttu-id="71934-174">Como resultado, o <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> método é invocado automaticamente.</span><span class="sxs-lookup"><span data-stu-id="71934-174">As a result, the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is automatically invoked.</span></span>  
  
-   <span data-ttu-id="71934-175">Levando essas regras em consideração, o <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> método deve ser chamado em uma das seguintes maneiras:</span><span class="sxs-lookup"><span data-stu-id="71934-175">Taking these rules into consideration, the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method must be called in one of the following ways:</span></span>  
  
    -   <span data-ttu-id="71934-176">Os usuários devem chamar o <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> sobrecarga de método se eles não quiser inserir a instância derivada de monitor de alteração em um cache.</span><span class="sxs-lookup"><span data-stu-id="71934-176">Users must call the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method overload if they decide not to insert the derived change-monitor instance into a cache.</span></span>  
  
    -   <span data-ttu-id="71934-177">A implementação de cache é responsável por chamar o <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> sobrecarga se a implementação tenta inserir a instância do monitor de alteração em um cache de objeto, mas a inserção falhar.</span><span class="sxs-lookup"><span data-stu-id="71934-177">The cache implementation is responsible for calling the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> overload if the implementation tries to insert the change-monitor instance into an object cache but the insertion fails.</span></span> <span data-ttu-id="71934-178">Quando a tentativa de inserção faz com que uma exceção, a implementação de cache deve descartar quaisquer dependências associadas.</span><span class="sxs-lookup"><span data-stu-id="71934-178">When the insertion attempt causes an exception, the cache implementation must dispose any associated dependencies.</span></span>  
  
    -   <span data-ttu-id="71934-179">Se a entrada de cache for removida, a implementação de cache também deve descartar a dependência.</span><span class="sxs-lookup"><span data-stu-id="71934-179">If the cache entry is removed, the cache implementation must also dispose the dependency.</span></span>  
  
 <span data-ttu-id="71934-180">A implementação interna do <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> método chama automaticamente o <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> método depois que ele chama um retorno de chamada que é registrado por meio do <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> método.</span><span class="sxs-lookup"><span data-stu-id="71934-180">The internal implementation of the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method automatically calls the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method after it calls a callback that is registered through the <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="71934-181">Esse descarte automático durante o acionamento do evento ocorrerá somente se a inicialização da <xref:System.Runtime.Caching.ChangeMonitor> instância concluída anteriormente.</span><span class="sxs-lookup"><span data-stu-id="71934-181">This automatic dispose during the event firing only occurs if the initialization of the <xref:System.Runtime.Caching.ChangeMonitor> instance previously completed.</span></span>  
  
 <span data-ttu-id="71934-182">Quando chama o construtor de um monitor de alteração derivado o <xref:System.Runtime.Caching.ChangeMonitor.InitializationComplete%2A> método, se já tiver sido alterado o estado do monitor de alteração (ou seja, o estado que é monitorado já mudou quando o construtor ainda estava ativo), em seguida, <xref:System.Runtime.Caching.ChangeMonitor.InitializationComplete%2A> será de método descarta automaticamente o monitor de alteração.</span><span class="sxs-lookup"><span data-stu-id="71934-182">When a derived change monitor's constructor calls the <xref:System.Runtime.Caching.ChangeMonitor.InitializationComplete%2A> method, if the state of the change monitor has already changed (that is, the state that is monitored has already changed when the constructor was still active) then <xref:System.Runtime.Caching.ChangeMonitor.InitializationComplete%2A> method will automatically dispose the change monitor.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="71934-183">Os usuários não devem chamar o <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> método.</span><span class="sxs-lookup"><span data-stu-id="71934-183">Users should not call the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method.</span></span> <span data-ttu-id="71934-184">No entanto, você não pode impedir que usuários chamando o método.</span><span class="sxs-lookup"><span data-stu-id="71934-184">However, you cannot prevent users from calling the method.</span></span> <span data-ttu-id="71934-185">Portanto, se o fizer, o <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> método é invocado.</span><span class="sxs-lookup"><span data-stu-id="71934-185">Therefore, if they do, the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is invoked.</span></span> <span data-ttu-id="71934-186">Nesse caso, a entrada de cache é notificada como se a dependência foi alterada.</span><span class="sxs-lookup"><span data-stu-id="71934-186">In that case, the cache entry is notified as if the dependency has changed.</span></span>  
  
 <span data-ttu-id="71934-187">Para impedir que classes derivadas substituam <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> método, o método não é uma implementação de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="71934-187">To prevent derived classes from overriding <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method, the method is not an explicit interface implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="71934-188">A inicialização não está concluída na classe do monitor de alteração derivada que chamou o método <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> de base.</span><span class="sxs-lookup"><span data-stu-id="71934-188">Initialization is not complete in the derived change-monitor class that called the base <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method.</span></span></exception>
        <altmember cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected abstract void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit" Usage="changeMonitor.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="71934-189"><see langword="true" /> para liberar recursos gerenciados e não gerenciados, bem como referências a uma instância de <see cref="T:System.Runtime.Caching.ChangeMonitor" />; <see langword="false" /> para liberar apenas recursos não gerenciados.</span><span class="sxs-lookup"><span data-stu-id="71934-189"><see langword="true" /> to release managed and unmanaged resources and any references to a <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance; <see langword="false" /> to release only unmanaged resources.</span></span> <span data-ttu-id="71934-190">Quando <see langword="false" /> é passado, o método <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> é chamado por um thread <see langword="finalizer" /> e qualquer referência gerenciada externa provavelmente deixa de ser válida porque já foi coletada pelo coletor de lixo.</span><span class="sxs-lookup"><span data-stu-id="71934-190">When <see langword="false" /> is passed, the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> method is called by a <see langword="finalizer" /> thread and any external managed references are likely no longer valid because they have already been garbage collected.</span></span></param>
        <summary><span data-ttu-id="71934-191">Libera todos os recursos gerenciados e não gerenciados e todas as referências à instância de <see cref="T:System.Runtime.Caching.ChangeMonitor" />.</span><span class="sxs-lookup"><span data-stu-id="71934-191">Releases all managed and unmanaged resources and any references to the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance.</span></span> <span data-ttu-id="71934-192">Essa sobrecarga deve ser implementada por classes de monitor de alteração derivadas.</span><span class="sxs-lookup"><span data-stu-id="71934-192">This overload must be implemented by derived change-monitor classes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71934-193">Quando o valor de `disposing` valor é `true`, todos os recursos gerenciados e não gerenciados sejam descartados e todas as referências a esse objeto são liberadas para que a instância do monitor de alteração derivada pode ser coletado como lixo.</span><span class="sxs-lookup"><span data-stu-id="71934-193">When the value of `disposing` value is `true`, all managed and unmanaged resources are disposed and any references to this object are released so that the derived change-monitor instance can be garbage collected.</span></span> <span data-ttu-id="71934-194">É garantido que a base <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> método invocará o implementado <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> método apenas uma vez.</span><span class="sxs-lookup"><span data-stu-id="71934-194">It is guaranteed that the base <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method will invoke the implemented <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method only one time.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="71934-195">Um monitor de alteração deve implementar o <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> sobrecarga para liberar todos os recursos gerenciados e quando o valor da <paramref name="disposing" /> é <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="71934-195">A change monitor must implement the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> overload to release all managed and unmanaged resources when the value of <paramref name="disposing" /> is <see langword="true" />.</span></span> <span data-ttu-id="71934-196">O <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> sobrecarga de método que tem um <paramref name="disposing" /> valor <see langword="true" /> é chamado apenas uma vez, ou seja, quando a instância é descartada pela primeira vez.</span><span class="sxs-lookup"><span data-stu-id="71934-196">The <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> method overload that has a <paramref name="disposing" /> value of <see langword="true" /> is called only one time, namely, when the instance is disposed for the first time.</span></span> <span data-ttu-id="71934-197">Um monitor de alteração não deve chamar o <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> sobrecarregar diretamente.</span><span class="sxs-lookup"><span data-stu-id="71934-197">A change monitor must not call the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> overload directly.</span></span> <span data-ttu-id="71934-198">Um monitor de alteração derivada pode chamar o público sem parâmetros <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> método na base de <see cref="T:System.Runtime.Caching.ChangeMonitor" /> classe.</span><span class="sxs-lookup"><span data-stu-id="71934-198">A derived change monitor can call the public parameter-less <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method on the base <see cref="T:System.Runtime.Caching.ChangeMonitor" /> class.</span></span>  
  
<span data-ttu-id="71934-199">Como alternativa, um monitor de alteração pode implementar um método do finalizador.</span><span class="sxs-lookup"><span data-stu-id="71934-199">Alternatively, a change monitor can implement a finalizer method.</span></span> <span data-ttu-id="71934-200">Nesse caso, o finalizador pode invocar o <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> método e passá-lo um <paramref name="disposing" /> valor <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="71934-200">In that case, the finalizer can invoke the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> method and pass it a <paramref name="disposing" /> value of <see langword="false" />.</span></span> <span data-ttu-id="71934-201">No entanto, isso normalmente é desnecessário.</span><span class="sxs-lookup"><span data-stu-id="71934-201">However, this is usually unnecessary.</span></span> <span data-ttu-id="71934-202">Monitoramento de alterações de dependência normalmente é executado por um serviço que mantém uma referência à instância do monitor de alteração.</span><span class="sxs-lookup"><span data-stu-id="71934-202">Monitoring for dependency changes is typically performed by a service that maintains a reference to the change-monitor instance.</span></span> <span data-ttu-id="71934-203">A referência impede que a instância que está sendo coletado como lixo e, portanto, faz com que um método do finalizador desnecessários.</span><span class="sxs-lookup"><span data-stu-id="71934-203">The reference prevents the instance from being garbage collected, and therefore makes a finalizer method unnecessary.</span></span> <span data-ttu-id="71934-204">Para evitar vazamentos de memória, quando uma dependência for alterada, o <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> método descarta a instância do monitor de alteração (a menos que a inicialização não foi concluída).</span><span class="sxs-lookup"><span data-stu-id="71934-204">To avoid memory leaks, when a dependency changes, the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method disposes the change-monitor instance (unless initialization has not finished).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="HasChanged">
      <MemberSignature Language="C#" Value="public bool HasChanged { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChanged" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ChangeMonitor.HasChanged" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasChanged As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasChanged { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasChanged : bool" Usage="System.Runtime.Caching.ChangeMonitor.HasChanged" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71934-205">Obtém um valor que indica que o estado monitorado pela classe <see cref="T:System.Runtime.Caching.ChangeMonitor" /> foi alterado.</span><span class="sxs-lookup"><span data-stu-id="71934-205">Gets a value that indicates that the state that is monitored by the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> class has changed.</span></span></summary>
        <value><span data-ttu-id="71934-206"><see langword="true" /> Se o estado que é monitorado pelo <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instância tiver sido alterado; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="71934-206"><see langword="true" /> if the state that is monitored by the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance has changed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71934-207">Você pode verificar o valor dessa propriedade em um derivada <xref:System.Runtime.Caching.ChangeMonitor> classe para ver se uma dependência foi alterado.</span><span class="sxs-lookup"><span data-stu-id="71934-207">You can check the value of this property in a derived <xref:System.Runtime.Caching.ChangeMonitor> class to see whether a dependency has changed.</span></span>  
  
 <span data-ttu-id="71934-208">O valor é definido como `true` quando ocorre uma alteração de dependência (ou seja, quando o <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> método é chamado).</span><span class="sxs-lookup"><span data-stu-id="71934-208">The value is set to `true` when a dependency change occurs (that is, when the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is called).</span></span> <span data-ttu-id="71934-209">Após o <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> método é chamado pela classe derivada, o valor da <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> propriedade será `true`, independentemente de uma <xref:System.Runtime.Caching.OnChangedCallback> instância foi notificada por uma chamada para o <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> método.</span><span class="sxs-lookup"><span data-stu-id="71934-209">After the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is called by the derived class, the value of the <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> property will be `true`, regardless of whether a <xref:System.Runtime.Caching.OnChangedCallback> instance has been notified by a call to the <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="71934-210">Os chamadores podem verificar o <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> propriedade para ver se uma dependência foi alterado.</span><span class="sxs-lookup"><span data-stu-id="71934-210">Callers can check the <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> property to see whether a dependency has changed.</span></span> <span data-ttu-id="71934-211">No entanto, uma abordagem mais simples e mais passível de manutenção em um ambiente multithread, é inserir dados em uma implementação de cache sem verificar o <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="71934-211">However, in a multi-threaded environment, a simpler and more maintainable approach is to insert data into a cache implementation without checking the <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> property.</span></span> <span data-ttu-id="71934-212">Implementações de cache devem verificar o <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> propriedade para você e não deve executar uma inserção ou operação de definição se um ou mais dependências associadas já tiverem sido alteradas.</span><span class="sxs-lookup"><span data-stu-id="71934-212">Cache implementations must check the <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> property for you and must not perform an insert or set operation if one or more associated dependencies have already changed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" />
        <altmember cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="InitializationComplete">
      <MemberSignature Language="C#" Value="protected void InitializationComplete ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InitializationComplete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InitializationComplete ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InitializationComplete();" />
      <MemberSignature Language="F#" Value="member this.InitializationComplete : unit -&gt; unit" Usage="changeMonitor.InitializationComplete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="71934-213">Chamado do construtor de classes derivadas para indicar que a inicialização foi concluída.</span><span class="sxs-lookup"><span data-stu-id="71934-213">Called from the constructor of derived classes to indicate that initialization is finished.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71934-214">Se uma dependência for alterada antes que a inicialização foi concluída em uma classe derivada, o construtor da classe derivada deve invocar o <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> método.</span><span class="sxs-lookup"><span data-stu-id="71934-214">If a dependency changes before initialization is complete in a derived class, the constructor of the derived class must invoke the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method.</span></span>  
  
 <span data-ttu-id="71934-215">Quando o <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> método é invocado, o <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> propriedade é definida automaticamente como `true` pelo monitor de alteração.</span><span class="sxs-lookup"><span data-stu-id="71934-215">When the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is invoked, the <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> property is automatically set to `true` by the change monitor.</span></span> <span data-ttu-id="71934-216">Como resultado, quando o construtor do monitor de alteração chama o <xref:System.Runtime.Caching.ChangeMonitor.InitializationComplete%2A> método, a classe base automaticamente chamará o <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> método.</span><span class="sxs-lookup"><span data-stu-id="71934-216">As a result, when the change monitor's constructor calls the <xref:System.Runtime.Caching.ChangeMonitor.InitializationComplete%2A> method, the base class will automatically call the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method.</span></span> <span data-ttu-id="71934-217">Se a inicialização foi concluída, o <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> método descarta a instância derivada de monitor de alteração automaticamente.</span><span class="sxs-lookup"><span data-stu-id="71934-217">If initialization is complete, the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method automatically disposes the derived change-monitor instance.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="71934-218">O construtor de uma classe derivada deve chamar a base <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> método antes de retorna o construtor.</span><span class="sxs-lookup"><span data-stu-id="71934-218">The constructor of a derived class must call the base <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> method before the constructor returns.</span></span> <span data-ttu-id="71934-219">O construtor de uma classe derivada pode chamar o <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> método somente após <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> é chamado, porque o <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> método gera uma exceção se a inicialização não for concluída.</span><span class="sxs-lookup"><span data-stu-id="71934-219">The constructor of a derived class can call the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method only after <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> is called, because the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method throws an exception if initialization is not completed.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="IsDisposed">
      <MemberSignature Language="C#" Value="public bool IsDisposed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDisposed" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ChangeMonitor.IsDisposed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDisposed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDisposed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDisposed : bool" Usage="System.Runtime.Caching.ChangeMonitor.IsDisposed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71934-220">Obtém um valor que indica que a instância derivada de uma classe <see cref="T:System.Runtime.Caching.ChangeMonitor" /> foi descartada.</span><span class="sxs-lookup"><span data-stu-id="71934-220">Gets a value that indicates that the derived instance of a <see cref="T:System.Runtime.Caching.ChangeMonitor" /> class is disposed.</span></span></summary>
        <value><span data-ttu-id="71934-221"><see langword="true" /> Se a instância é descartada; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="71934-221"><see langword="true" /> if the instance is disposed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71934-222">A propriedade é definida como `true` depois de base <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> chamadas de método a <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> método em uma classe derivada de descartar a instância.</span><span class="sxs-lookup"><span data-stu-id="71934-222">The property is set to `true` after the base <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method calls the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method in a derived class to dispose of the instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyOnChanged">
      <MemberSignature Language="C#" Value="public void NotifyOnChanged (System.Runtime.Caching.OnChangedCallback onChangedCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void NotifyOnChanged(class System.Runtime.Caching.OnChangedCallback onChangedCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void NotifyOnChanged(System::Runtime::Caching::OnChangedCallback ^ onChangedCallback);" />
      <MemberSignature Language="F#" Value="member this.NotifyOnChanged : System.Runtime.Caching.OnChangedCallback -&gt; unit" Usage="changeMonitor.NotifyOnChanged onChangedCallback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="onChangedCallback" Type="System.Runtime.Caching.OnChangedCallback" />
      </Parameters>
      <Docs>
        <param name="onChangedCallback"><span data-ttu-id="71934-223">Uma referência para um método que será invocado quando uma dependência tiver sido alterada.</span><span class="sxs-lookup"><span data-stu-id="71934-223">A reference to a method that is invoked when a dependency has changed.</span></span></param>
        <summary><span data-ttu-id="71934-224">Chamado pelos implementadores de cache para registrar um retorno de chamada e notificar uma instância de <see cref="T:System.Runtime.Caching.ObjectCache" /> por meio do delegado de <see cref="T:System.Runtime.Caching.OnChangedCallback" /> quando uma dependência tiver sido alterada.</span><span class="sxs-lookup"><span data-stu-id="71934-224">Called by Cache implementers to register a callback and notify an <see cref="T:System.Runtime.Caching.ObjectCache" /> instance through the <see cref="T:System.Runtime.Caching.OnChangedCallback" /> delegate when a dependency has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71934-225">Os implementadores de cache usam esse método para conectar-se até um monitor de alteração.</span><span class="sxs-lookup"><span data-stu-id="71934-225">Cache implementers use this method to wire themselves up to a change monitor.</span></span> <span data-ttu-id="71934-226">Se você associar um ou mais monitores com o item de cache de alteração, você passa um <xref:System.Runtime.Caching.CacheItemPolicy> instância com uma propriedade de monitores de alteração preenchidas para o item de cache.</span><span class="sxs-lookup"><span data-stu-id="71934-226">If you associate one or more change monitors with the cache item, you pass a <xref:System.Runtime.Caching.CacheItemPolicy> instance with a populated change monitors property to the cache item.</span></span> <span data-ttu-id="71934-227">Um implementador de cache dá suporte a monitores de alteração é responsável por iteração sobre o <xref:System.Runtime.Caching.CacheItemPolicy.ChangeMonitors%2A> propriedade e registrar o <xref:System.Runtime.Caching.OnChangedCallback> delegados com cada alterar monitor que encontra.</span><span class="sxs-lookup"><span data-stu-id="71934-227">A cache implementer that supports change monitors is responsible for iterating over the <xref:System.Runtime.Caching.CacheItemPolicy.ChangeMonitors%2A> property and register the <xref:System.Runtime.Caching.OnChangedCallback> delegates with each change monitor that it finds.</span></span>  
  
 <span data-ttu-id="71934-228">Porque o <xref:System.Runtime.Caching.OnChangedCallback> delegado inclui um parâmetro opcional de estado, uma implementação de monitor de alteração concreto pode passar informações de estado opcionais.</span><span class="sxs-lookup"><span data-stu-id="71934-228">Because the <xref:System.Runtime.Caching.OnChangedCallback> delegate includes an optional state parameter, a concrete change monitor implementation can pass optional state information.</span></span> <span data-ttu-id="71934-229">O implementador de cache determina se uma dependência explícita no tipo de estado que passa de um monitor de alteração personalizada como parte do retorno de chamada pode ser realizada.</span><span class="sxs-lookup"><span data-stu-id="71934-229">The cache implementer determines whether an explicit dependency on the type of state that a custom change monitor passes as part of the callback can be taken.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="71934-230">A API de extensibilidade do cache base tem sem a necessidade de dependência explícita no tipo de estado.</span><span class="sxs-lookup"><span data-stu-id="71934-230">The base cache extensibility API has no requirement for explicit dependency on the type of state.</span></span>  
  
 <span data-ttu-id="71934-231">A implementação de <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> método determina automaticamente se o estado do monitor já foi alterado no momento <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> método é chamado.</span><span class="sxs-lookup"><span data-stu-id="71934-231">The implementation of the <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> method automatically determines whether the state of the monitor has already changed at the time <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> method is called.</span></span> <span data-ttu-id="71934-232">Se o <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> é de propriedade `true`, em seguida, o método chama automaticamente o <xref:System.Runtime.Caching.OnChangedCallback> manipulador de eventos, que foi registrado, por meio de <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> método.</span><span class="sxs-lookup"><span data-stu-id="71934-232">If the <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> property is `true`, then the method automatically calls the <xref:System.Runtime.Caching.OnChangedCallback> event handler, that was registered, through the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method.</span></span> <span data-ttu-id="71934-233">Isso ocorre porque é possível que, desde o momento em que uma implementação de cache cria um monitor de alteração, até o momento em que uma implementação de cache obtém o monitor e conecta em si até ele, o estado monitorado subjacente foi alterado.</span><span class="sxs-lookup"><span data-stu-id="71934-233">This occurs because it is possible that from the time a cache implementation creates a change monitor, to the time a cache implementation gets the monitor and wires itself up to it, the underlying monitored state has changed.</span></span> <span data-ttu-id="71934-234">Se o estado já mudou, em seguida, o objeto que é passado para o <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> método é `null`.</span><span class="sxs-lookup"><span data-stu-id="71934-234">If the state has already changed then the object that is passed to the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is `null`.</span></span>  
  
 <span data-ttu-id="71934-235">O <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> método pode ser chamado apenas uma vez e lançará uma exceção em chamadas subsequentes.</span><span class="sxs-lookup"><span data-stu-id="71934-235">The <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> method can be invoked only one time, and will throw an exception on subsequent calls.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="71934-236">O método de retorno de chamada já foi invocado.</span><span class="sxs-lookup"><span data-stu-id="71934-236">The callback method has already been invoked.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="71934-237"><paramref name="onChangedCallback" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="71934-237"><paramref name="onChangedCallback" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="71934-238">1.  Você deve chamar o <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> método a ser notificado de qualquer alteração de dependência.</span><span class="sxs-lookup"><span data-stu-id="71934-238">1.  You must call the <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> method to be notified of any dependency changes.</span></span> <span data-ttu-id="71934-239">Se já tiver ocorrido uma alteração de dependência, o <see cref="T:System.Runtime.Caching.OnChangedCallback" /> instância será chamada quando <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> é chamado.</span><span class="sxs-lookup"><span data-stu-id="71934-239">If a dependency change has already occurred, the <see cref="T:System.Runtime.Caching.OnChangedCallback" /> instance will be called when <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> is called.</span></span> <span data-ttu-id="71934-240">Caso contrário, o <see cref="T:System.Runtime.Caching.OnChangedCallback" /> instância será chamada uma vez, quando o <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> método é chamado ou quando o <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> método é chamado, o que ocorrer primeiro.</span><span class="sxs-lookup"><span data-stu-id="71934-240">Otherwise, the <see cref="T:System.Runtime.Caching.OnChangedCallback" /> instance will be called one time, either when the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method is called or when the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method is called, whichever occurs first.</span></span> <span data-ttu-id="71934-241">O <see cref="T:System.Runtime.Caching.OnChangedCallback" /> instância fornecida pela implementação de cache deve remover a entrada de cache e se eles forem solicitados pelo chamador cache, acionar o evento de atualização de volta para o chamador original do cache ou alteração necessária.</span><span class="sxs-lookup"><span data-stu-id="71934-241">The <see cref="T:System.Runtime.Caching.OnChangedCallback" /> instance provided by the cache implementation should remove the cache entry and if it is requested by the cache caller, raise the necessary change or update event back to the original cache caller.</span></span>  
  
<span data-ttu-id="71934-242">2.</span><span class="sxs-lookup"><span data-stu-id="71934-242">2.</span></span>  <span data-ttu-id="71934-243">A implementação de cache do objeto deve remover a entrada de cache que está associada uma alteração de dependência.</span><span class="sxs-lookup"><span data-stu-id="71934-243">The object cache implementation must remove the cache entry that is associated with a dependency change.</span></span></para></block>
        <altmember cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnChanged">
      <MemberSignature Language="C#" Value="protected void OnChanged (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnChanged(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnChanged (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnChanged(System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.OnChanged : obj -&gt; unit" Usage="changeMonitor.OnChanged state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="71934-244">Os dados do evento de alteração.</span><span class="sxs-lookup"><span data-stu-id="71934-244">The data for the change event.</span></span> <span data-ttu-id="71934-245">Este valor pode ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="71934-245">This value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="71934-246">Chamado por classes derivadas para gerar o evento quando uma dependência é alterada.</span><span class="sxs-lookup"><span data-stu-id="71934-246">Called by derived classes to raise the event when a dependency changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71934-247">Normalmente, o <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> método é chamado quando ocorrem alterações de dependência.</span><span class="sxs-lookup"><span data-stu-id="71934-247">Typically, the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is called when dependency changes occur.</span></span> <span data-ttu-id="71934-248">O <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> método também é chamado quando uma instância do monitor de alteração é descartada, mas o descarte ocorre somente se o retorno de chamada já não foi invocado.</span><span class="sxs-lookup"><span data-stu-id="71934-248">The <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is also invoked when a change-monitor instance is disposed but the disposal occurs only if the callback has not already been invoked.</span></span>  
  
 <span data-ttu-id="71934-249">Se o <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> método é chamado antes do <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> método é chamado, os dados de estado da chamada para o <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> método é salvo pela implementação de cache.</span><span class="sxs-lookup"><span data-stu-id="71934-249">If the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is called before the <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> method is called, the state data from the call to the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is saved by the cache implementation.</span></span> <span data-ttu-id="71934-250">Além disso, o retorno de chamada para o <xref:System.Runtime.Caching.OnChangedCallback> método é invocado imediatamente quando o <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> método é invocado.</span><span class="sxs-lookup"><span data-stu-id="71934-250">Also, the callback to the <xref:System.Runtime.Caching.OnChangedCallback> method is invoked immediately when the <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> method is invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" />
        <altmember cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" />
        <altmember cref="P:System.Runtime.Caching.ChangeMonitor.HasChanged" />
      </Docs>
    </Member>
    <Member MemberName="UniqueId">
      <MemberSignature Language="C#" Value="public abstract string UniqueId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UniqueId" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ChangeMonitor.UniqueId" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property UniqueId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ UniqueId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UniqueId : string" Usage="System.Runtime.Caching.ChangeMonitor.UniqueId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71934-251">Obtém um valor que representa a instância da classe <see cref="T:System.Runtime.Caching.ChangeMonitor" />.</span><span class="sxs-lookup"><span data-stu-id="71934-251">Gets a value that represents the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> class instance.</span></span></summary>
        <value><span data-ttu-id="71934-252">O identificador para uma instância do monitor de alteração.</span><span class="sxs-lookup"><span data-stu-id="71934-252">The identifier for a change-monitor instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71934-253">O <xref:System.Runtime.Caching.ChangeMonitor.UniqueId%2A> o valor da propriedade normalmente consiste em dados de cadeia de caracteres de nomes combinados de dependência que exclusivamente identificadores os dados que está sendo monitorados por um <xref:System.Runtime.Caching.ChangeMonitor> instância.</span><span class="sxs-lookup"><span data-stu-id="71934-253">The <xref:System.Runtime.Caching.ChangeMonitor.UniqueId%2A> property value typically consists of dependency names combined string data that uniquely identifiers the data that is being monitored by a <xref:System.Runtime.Caching.ChangeMonitor> instance.</span></span> <span data-ttu-id="71934-254">O valor da <xref:System.Runtime.Caching.ChangeMonitor.UniqueId%2A> propriedade é uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="71934-254">The value of the <xref:System.Runtime.Caching.ChangeMonitor.UniqueId%2A> property is a string.</span></span> <span data-ttu-id="71934-255">O valor da cadeia de caracteres é usado para atribuir a ID exclusiva do <xref:System.Runtime.Caching.ChangeMonitor> instância.</span><span class="sxs-lookup"><span data-stu-id="71934-255">The value of the string is used to assign the unique ID of the <xref:System.Runtime.Caching.ChangeMonitor> instance.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="71934-256">Substituindo a propriedade, você pode definir uma implementação personalizada para o valor de cadeia de caracteres da propriedade para atribuí-la uma ID exclusiva.</span><span class="sxs-lookup"><span data-stu-id="71934-256">By overriding the property, you can define a custom implementation for the string value of the property in order to assign it a unique ID.</span></span></para></block>
        <block subset="none" type="overrides"><para><span data-ttu-id="71934-257">Em classes derivadas, você deve definir o valor da propriedade no construtor.</span><span class="sxs-lookup"><span data-stu-id="71934-257">In derived classes, you must set the value of the property in the constructor.</span></span></para></block>
      </Docs>
    </Member>
  </Members>
</Type>