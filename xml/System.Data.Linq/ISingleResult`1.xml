<Type Name="ISingleResult&lt;T&gt;" FullName="System.Data.Linq.ISingleResult&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="420d79906928756d8b84b497b5ae12a0daafa8d8" />
    <Meta Name="ms.sourcegitcommit" Value="723b8a6d92667ba86fcda96190bad3b4a03283b3" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="11/09/2018" />
    <Meta Name="ms.locfileid" Value="51304134" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ISingleResult&lt;T&gt; : IDisposable, System.Collections.Generic.IEnumerable&lt;T&gt;, System.Data.Linq.IFunctionResult" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISingleResult`1&lt;T&gt; implements class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.IEnumerable, class System.Data.Linq.IFunctionResult, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.ISingleResult`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISingleResult(Of T)&#xA;Implements IDisposable, IEnumerable(Of T), IFunctionResult" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class ISingleResult : IDisposable, System::Collections::Generic::IEnumerable&lt;T&gt;, System::Data::Linq::IFunctionResult" />
  <TypeSignature Language="F#" Value="type ISingleResult&lt;'T&gt; = interface&#xA;    interface seq&lt;'T&gt;&#xA;    interface IEnumerable&#xA;    interface IFunctionResult&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Data.Linq.IFunctionResult</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">O tipo dos elementos na sequência de retorno.</typeparam>
    <summary>Representa o resultado de uma função mapeada que tem uma única sequência de retorno.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O exemplo a seguir representa um procedimento armazenado que retorna linhas de clientes e usa um parâmetro de entrada para retornar somente as linhas que listam "London" como a cidade do cliente. O exemplo supõe uma classe `CustomersByCityResult` enumerável.  
  
```  
CREATE PROCEDURE [dbo].[Customers By City]  
    (@param1 NVARCHAR(20))  
AS  
BEGIN  
    -- SET NOCOUNT ON added to prevent extra result sets from  
    -- interfering with SELECT statements.  
    SET NOCOUNT ON;  
    SELECT CustomerID, ContactName, CompanyName, City from Customers  
        as c where c.City=@param1  
END  
```  
  
   
  
## Examples  
 [!code-csharp[DLinqSprox#1](~/samples/snippets/csharp/VS_Snippets_Data/DLinqSprox/cs/northwind-sprox.cs#1)]
 [!code-vb[DLinqSprox#1](~/samples/snippets/visualbasic/VS_Snippets_Data/DLinqSprox/vb/northwind-sprox.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members />
</Type>