<Type Name="ISingleResult&lt;T&gt;" FullName="System.Data.Linq.ISingleResult&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="60ee90d615fce90de3fbb806824d71cf4e10ba16" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ISingleResult&lt;T&gt; : IDisposable, System.Collections.Generic.IEnumerable&lt;T&gt;, System.Data.Linq.IFunctionResult" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISingleResult`1&lt;T&gt; implements class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.IEnumerable, class System.Data.Linq.IFunctionResult, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.ISingleResult`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISingleResult(Of T)&#xA;Implements IDisposable, IEnumerable(Of T), IFunctionResult" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class ISingleResult : IDisposable, System::Collections::Generic::IEnumerable&lt;T&gt;, System::Data::Linq::IFunctionResult" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Data.Linq.IFunctionResult</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="43e0c-101">O tipo dos elementos na sequência de retorno.</span>
      <span class="sxs-lookup">
        <span data-stu-id="43e0c-101">The type of the elements in the return sequence.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="43e0c-102">Representa o resultado de uma função mapeada que tem uma única sequência de retorno.</span>
      <span class="sxs-lookup">
        <span data-stu-id="43e0c-102">Represents the result of a mapped function that has a single return sequence.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43e0c-103">O exemplo a seguir representa um procedimento armazenado que retorna linhas de clientes e usa um parâmetro de entrada para retornar somente as linhas que listam "London" como a cidade do cliente.</span><span class="sxs-lookup"><span data-stu-id="43e0c-103">The following example represents a stored procedure that returns rows of customers and uses an input parameter to return only those rows that list "London" as the customer city.</span></span> <span data-ttu-id="43e0c-104">O exemplo supõe uma classe `CustomersByCityResult` enumerável.</span><span class="sxs-lookup"><span data-stu-id="43e0c-104">The example assumes an enumerable `CustomersByCityResult` class.</span></span>  
  
```  
CREATE PROCEDURE [dbo].[Customers By City]  
    (@param1 NVARCHAR(20))  
AS  
BEGIN  
    -- SET NOCOUNT ON added to prevent extra result sets from  
    -- interfering with SELECT statements.  
    SET NOCOUNT ON;  
    SELECT CustomerID, ContactName, CompanyName, City from Customers  
        as c where c.City=@param1  
END  
```  
  
   
  
## Examples  
 [!code-csharp[DLinqSprox#1](~/samples/snippets/csharp/VS_Snippets_Data/DLinqSprox/cs/northwind-sprox.cs#1)]
 [!code-vb[DLinqSprox#1](~/samples/snippets/visualbasic/VS_Snippets_Data/DLinqSprox/vb/northwind-sprox.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members />
</Type>