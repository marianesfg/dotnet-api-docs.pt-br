<Type Name="DataLoadOptions" FullName="System.Data.Linq.DataLoadOptions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4d7a1641f923121f7dc6f5ac9f8bc574e9cf05e1" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37680930" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DataLoadOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataLoadOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.DataLoadOptions" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataLoadOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataLoadOptions sealed" />
  <TypeSignature Language="F#" Value="type DataLoadOptions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="7286c-101">Provides for immediate loading and filtering of related data.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7286c-101">Provides for immediate loading and filtering of related data.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="general"></a><span data-ttu-id="7286c-102">Geral</span><span class="sxs-lookup"><span data-stu-id="7286c-102">General</span></span>  
 <span data-ttu-id="7286c-103">Quando você consulta para um objeto, você só retorna o objeto que você solicitou.</span><span class="sxs-lookup"><span data-stu-id="7286c-103">When you query for an object, you actually retrieve only the object you requested.</span></span> <span data-ttu-id="7286c-104">O *relacionados* objetos não são buscados automaticamente ao mesmo tempo.</span><span class="sxs-lookup"><span data-stu-id="7286c-104">The *related* objects are not automatically fetched at the same time.</span></span> <span data-ttu-id="7286c-105">(Para obter mais informações, consulte [consultando através de relações](~/docs/framework/data/adonet/sql/linq/querying-across-relationships.md).)</span><span class="sxs-lookup"><span data-stu-id="7286c-105">(For more information, see [Querying Across Relationships](~/docs/framework/data/adonet/sql/linq/querying-across-relationships.md).)</span></span>  
  
 <span data-ttu-id="7286c-106">O <xref:System.Data.Linq.DataLoadOptions> classe fornece dois métodos para alcançar o carregamento imediata de dados relacionados especificados.</span><span class="sxs-lookup"><span data-stu-id="7286c-106">The <xref:System.Data.Linq.DataLoadOptions> class provides two methods to achieve immediate loading of specified related data.</span></span> <span data-ttu-id="7286c-107">O <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> método permite carregar dados relacionados ao destino principal imediato.</span><span class="sxs-lookup"><span data-stu-id="7286c-107">The <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> method allows for immediate loading of data related to the main target.</span></span> <span data-ttu-id="7286c-108">O <xref:System.Data.Linq.DataLoadOptions.AssociateWith%2A> método permite a filtragem de objetos relacionados.</span><span class="sxs-lookup"><span data-stu-id="7286c-108">The <xref:System.Data.Linq.DataLoadOptions.AssociateWith%2A> method allows for filtering related objects.</span></span>  
  
## <a name="rules"></a><span data-ttu-id="7286c-109">Regras</span><span class="sxs-lookup"><span data-stu-id="7286c-109">Rules</span></span>  
 <span data-ttu-id="7286c-110">Observe as seguintes regras em relação ao <xref:System.Data.Linq.DataLoadOptions> uso:</span><span class="sxs-lookup"><span data-stu-id="7286c-110">Note the following rules regarding <xref:System.Data.Linq.DataLoadOptions> usage:</span></span>  
  
-   <span data-ttu-id="7286c-111">Atribuindo uma <xref:System.Data.Linq.DataLoadOptions> para um <xref:System.Data.Linq.DataContext> depois que a primeira consulta é executada, gera uma exceção.</span><span class="sxs-lookup"><span data-stu-id="7286c-111">Assigning a <xref:System.Data.Linq.DataLoadOptions> to a <xref:System.Data.Linq.DataContext> after the first query has been executed generates an exception.</span></span>  
  
-   <span data-ttu-id="7286c-112">Modificando um <xref:System.Data.Linq.DataLoadOptions> depois que ele foi atribuído a um <xref:System.Data.Linq.DataContext> gera uma exceção</span><span class="sxs-lookup"><span data-stu-id="7286c-112">Modifying a <xref:System.Data.Linq.DataLoadOptions> after it has been assigned to a <xref:System.Data.Linq.DataContext> generates an exception</span></span>  
  
## <a name="cycle-handling"></a><span data-ttu-id="7286c-113">Tratamento de ciclo</span><span class="sxs-lookup"><span data-stu-id="7286c-113">Cycle Handling</span></span>  
 <span data-ttu-id="7286c-114"><xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> e <xref:System.Data.Linq.DataLoadOptions.AssociateWith%2A> diretivas não devem criar ciclos.</span><span class="sxs-lookup"><span data-stu-id="7286c-114"><xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> and <xref:System.Data.Linq.DataLoadOptions.AssociateWith%2A> directives must not create cycles.</span></span> <span data-ttu-id="7286c-115">A seguir representa os exemplos de tais gráficos:</span><span class="sxs-lookup"><span data-stu-id="7286c-115">The following represent examples of such graphs:</span></span>  
  
-   <span data-ttu-id="7286c-116">Exemplo 1: Self recursiva</span><span class="sxs-lookup"><span data-stu-id="7286c-116">Example 1: Self recursive</span></span>  
  
    -   `dlo.LoadWith<Employee>(e => e.Reports);`  
  
-   <span data-ttu-id="7286c-117">Exemplo 2: Back-ponteiros</span><span class="sxs-lookup"><span data-stu-id="7286c-117">Example 2: Back-pointers</span></span>  
  
    -   `dlo.LoadWith <Customer>(c => C.Orders);`  
  
    -   `dlo.LoadWith <Order>(o => o.Customer);`  
  
-   <span data-ttu-id="7286c-118">Exemplo 3: Ciclos de mais</span><span class="sxs-lookup"><span data-stu-id="7286c-118">Example 3: Longer cycles</span></span>  
  
     <span data-ttu-id="7286c-119">Embora isso não deve ocorrer em um modelo normalizado bem, é possível.</span><span class="sxs-lookup"><span data-stu-id="7286c-119">Although this should not occur in a well-normalized model, it is possible.</span></span>  
  
    -   `dlo.LoadWith <A>(a => a.Bs);`  
  
    -   `dlo.LoadWith <B>(b => b.Cs);`  
  
    -   `dlo.LoadWith <C>(c => c.As);`  
  
-   <span data-ttu-id="7286c-120">Exemplo 4: Self recursiva subconsultas</span><span class="sxs-lookup"><span data-stu-id="7286c-120">Example 4: Self recursive subQueries</span></span>  
  
    -   `dlo.AssociateWith<A>(a=>a.As.Where(a=>a.Id=33));`  
  
-   <span data-ttu-id="7286c-121">Exemplo 5: Subconsultas de recursiva mais</span><span class="sxs-lookup"><span data-stu-id="7286c-121">Example 5: Longer recursive subqueries</span></span>  
  
    -   `dlo.AssociateWith<A>(a=>a.Bs.Where(b=>b.Id==3));`  
  
    -   `dlo.AssociateWith<B>(b=>b.As.Where(a=>a.Id==3));`  
  
 <span data-ttu-id="7286c-122">A seguir estão algumas regras gerais que ajudam você a entender o que ocorre nesses cenários.</span><span class="sxs-lookup"><span data-stu-id="7286c-122">The following are some general rules that help you understand what occurs in these scenarios.</span></span>  
  
 <span data-ttu-id="7286c-123">**LoadWith** cada chamada para <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> verifica se ciclos foram introduzidos no grafo.</span><span class="sxs-lookup"><span data-stu-id="7286c-123">**LoadWith** Each call to <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> checks whether cycles have been introduced into the graph.</span></span> <span data-ttu-id="7286c-124">Se houver, como em exemplos 1, 2 e 3, uma exceção é lançada.</span><span class="sxs-lookup"><span data-stu-id="7286c-124">If there are, as in Examples 1, 2, and 3, an exception is thrown.</span></span>  
  
 <span data-ttu-id="7286c-125">**AssociateWith** o mecanismo de tempo de execução não se aplica as cláusulas de subconsulta existentes para a relação de dentro da expressão.</span><span class="sxs-lookup"><span data-stu-id="7286c-125">**AssociateWith** The engine at run time does not apply the existing SubQuery clauses to the relationship inside the expression.</span></span>  
  
-   <span data-ttu-id="7286c-126">No exemplo 4, o `Where` cláusula é executada em todos os `A`, não apenas aqueles inferiores filtrados pela expressão de subconsulta (porque o que deveria ser recursivo)</span><span class="sxs-lookup"><span data-stu-id="7286c-126">In Example 4, the `Where` clause is executed against all `A`, not just the ones sub-filtered by the SubQuery expression itself (because that would be recursive)</span></span>  
  
-   <span data-ttu-id="7286c-127">No exemplo 5, a primeira `Where` cláusula é aplicada a todos os `B`s, mesmo quando há subconsultas em `B`.</span><span class="sxs-lookup"><span data-stu-id="7286c-127">In Example 5, the first `Where` clause is applied to all the `B`s, even though there are subqueries on `B`.</span></span> <span data-ttu-id="7286c-128">A segunda `Where` cláusula é aplicada a todos os as `A`s, mesmo que haja subconsultas em `A`.</span><span class="sxs-lookup"><span data-stu-id="7286c-128">The second `Where` clause is applied to all the `A`s even though there are subqueries on `A`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7286c-129">Quando você recupera `Customers` do banco de dados de exemplo Northwind, você pode usar <xref:System.Data.Linq.DataLoadOptions> para especificar que `Orders` também deve ser recuperado.</span><span class="sxs-lookup"><span data-stu-id="7286c-129">When you retrieve `Customers` from the Northwind sample database, you can use <xref:System.Data.Linq.DataLoadOptions> to specify that `Orders` is also to be retrieved.</span></span> <span data-ttu-id="7286c-130">Você pode até especificar qual subconjunto de `Orders` para recuperar.</span><span class="sxs-lookup"><span data-stu-id="7286c-130">You can even specify which subset of `Orders` to retrieve.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataLoadOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataLoadOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataLoadOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7286c-131">Initializes a new instance of the <see cref="T:System.Data.Linq.DataLoadOptions" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7286c-131">Initializes a new instance of the <see cref="T:System.Data.Linq.DataLoadOptions" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssociateWith">
      <MemberSignature Language="C#" Value="public void AssociateWith (System.Linq.Expressions.LambdaExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AssociateWith(class System.Linq.Expressions.LambdaExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataLoadOptions.AssociateWith(System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AssociateWith (expression As LambdaExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AssociateWith(System::Linq::Expressions::LambdaExpression ^ expression);" />
      <MemberSignature Language="F#" Value="member this.AssociateWith : System.Linq.Expressions.LambdaExpression -&gt; unit" Usage="dataLoadOptions.AssociateWith expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.LambdaExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="7286c-132">Identifies the query to be used on a particular one-to-many field or property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7286c-132">Identifies the query to be used on a particular one-to-many field or property.</span>
          </span>
          <span data-ttu-id="7286c-133">Note the following:  If the expression does not start with a field or property that represents a one-to-many relationship, an exception is thrown.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7286c-133">Note the following:  If the expression does not start with a field or property that represents a one-to-many relationship, an exception is thrown.</span>
          </span>
          <span data-ttu-id="7286c-134">If an operator other than a valid operator appears in the expression, an exception is thrown.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7286c-134">If an operator other than a valid operator appears in the expression, an exception is thrown.</span>
          </span>
          <span data-ttu-id="7286c-135">Valid operators are as follows:  Where  OrderBy  ThenBy  OrderByDescending  ThenByDescending  Take</span>
          <span class="sxs-lookup">
            <span data-stu-id="7286c-135">Valid operators are as follows:  Where  OrderBy  ThenBy  OrderByDescending  ThenByDescending  Take</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7286c-136">Filters the objects retrieved for a particular relationship.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7286c-136">Filters the objects retrieved for a particular relationship.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7286c-137">No exemplo a seguir, o loop interno itera somente aqueles `Orders` que não foram enviadas hoje mesmo.</span><span class="sxs-lookup"><span data-stu-id="7286c-137">In the following example, the inner loop iterates only over those `Orders` that have not been shipped today.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.DataLoadOptions#1](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.dataloadoptions/cs/program.cs#1)]
 [!code-vb[System.Data.Linq.DataLoadOptions#1](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.dataloadoptions/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AssociateWith&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void AssociateWith&lt;T&gt; (System.Linq.Expressions.Expression&lt;Func&lt;T,object&gt;&gt; expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AssociateWith&lt;T&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!T, object&gt;&gt; expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataLoadOptions.AssociateWith``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AssociateWith(Of T) (expression As Expression(Of Func(Of T, Object)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void AssociateWith(System::Linq::Expressions::Expression&lt;Func&lt;T, System::Object ^&gt; ^&gt; ^ expression);" />
      <MemberSignature Language="F#" Value="member this.AssociateWith : System.Linq.Expressions.Expression&lt;Func&lt;'T, obj&gt;&gt; -&gt; unit" Usage="dataLoadOptions.AssociateWith expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;T,System.Object&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="7286c-138">O tipo é consultado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7286c-138">The type that is queried against.</span>
          </span>
          <span data-ttu-id="7286c-139">Se o tipo não estiver mapeado, uma exceção será gerada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7286c-139">If the type is unmapped, an exception is thrown.</span>
          </span>
        </typeparam>
        <param name="expression">
          <span data-ttu-id="7286c-140">Identifies the query to be used on a particular one-to-many field or property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7286c-140">Identifies the query to be used on a particular one-to-many field or property.</span>
          </span>
          <span data-ttu-id="7286c-141">Note the following:  If the expression does not start with a field or property that represents a one-to-many relationship, an exception is thrown.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7286c-141">Note the following:  If the expression does not start with a field or property that represents a one-to-many relationship, an exception is thrown.</span>
          </span>
          <span data-ttu-id="7286c-142">If an operator other than a valid operator appears in the expression, an exception is thrown.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7286c-142">If an operator other than a valid operator appears in the expression, an exception is thrown.</span>
          </span>
          <span data-ttu-id="7286c-143">Valid operators are as follows:  Where  OrderBy  ThenBy  OrderByDescending  ThenByDescending  Take</span>
          <span class="sxs-lookup">
            <span data-stu-id="7286c-143">Valid operators are as follows:  Where  OrderBy  ThenBy  OrderByDescending  ThenByDescending  Take</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7286c-144">Filters objects retrieved for a particular relationship.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7286c-144">Filters objects retrieved for a particular relationship.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7286c-145">Para obter informações sobre como evitar ciclos, consulte <xref:System.Data.Linq.DataLoadOptions>.</span><span class="sxs-lookup"><span data-stu-id="7286c-145">For information about how to avoid cycles, see <xref:System.Data.Linq.DataLoadOptions>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7286c-146">No exemplo a seguir, o loop interno itera somente aqueles `Orders` que não foram enviadas hoje mesmo.</span><span class="sxs-lookup"><span data-stu-id="7286c-146">In the following example, the inner loop iterates only over those `Orders` that have not been shipped today.</span></span>  
  
 [!code-csharp[System.Data.Linq.DataLoadOptions#1](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.dataloadoptions/cs/program.cs#1)]
 [!code-vb[System.Data.Linq.DataLoadOptions#1](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.dataloadoptions/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAssociationCriteria">
      <MemberSignature Language="C#" Value="public bool GetAssociationCriteria (System.Reflection.MemberInfo memberInfo, out System.Linq.Expressions.LambdaExpression associationCriteria);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetAssociationCriteria(class System.Reflection.MemberInfo memberInfo, [out] class System.Linq.Expressions.LambdaExpression&amp; associationCriteria) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataLoadOptions.GetAssociationCriteria(System.Reflection.MemberInfo,System.Linq.Expressions.LambdaExpression@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetAssociationCriteria(System::Reflection::MemberInfo ^ memberInfo, [Runtime::InteropServices::Out] System::Linq::Expressions::LambdaExpression ^ % associationCriteria);" />
      <MemberSignature Language="F#" Value="member this.GetAssociationCriteria : System.Reflection.MemberInfo *  -&gt; bool" Usage="dataLoadOptions.GetAssociationCriteria (memberInfo, associationCriteria)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memberInfo" Type="System.Reflection.MemberInfo" />
        <Parameter Name="associationCriteria" Type="System.Linq.Expressions.LambdaExpression&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="memberInfo">To be added.</param>
        <param name="associationCriteria">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsImmediate">
      <MemberSignature Language="C#" Value="public bool IsImmediate (System.Reflection.MemberInfo memberInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsImmediate(class System.Reflection.MemberInfo memberInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataLoadOptions.IsImmediate(System.Reflection.MemberInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsImmediate(System::Reflection::MemberInfo ^ memberInfo);" />
      <MemberSignature Language="F#" Value="member this.IsImmediate : System.Reflection.MemberInfo -&gt; bool" Usage="dataLoadOptions.IsImmediate memberInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memberInfo" Type="System.Reflection.MemberInfo" />
      </Parameters>
      <Docs>
        <param name="memberInfo">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadWith">
      <MemberSignature Language="C#" Value="public void LoadWith (System.Linq.Expressions.LambdaExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadWith(class System.Linq.Expressions.LambdaExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataLoadOptions.LoadWith(System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadWith (expression As LambdaExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadWith(System::Linq::Expressions::LambdaExpression ^ expression);" />
      <MemberSignature Language="F#" Value="member this.LoadWith : System.Linq.Expressions.LambdaExpression -&gt; unit" Usage="dataLoadOptions.LoadWith expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.LambdaExpression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="7286c-147">A lambda expression that identifies the related material.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7286c-147">A lambda expression that identifies the related material.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7286c-148">Retrieves specified data related to the main target by using a lambda expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7286c-148">Retrieves specified data related to the main target by using a lambda expression.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7286c-149">No exemplo a seguir, qualquer `Orders` para qualquer `Customers` que está localizado em Londres é recuperado quando a consulta é executada.</span><span class="sxs-lookup"><span data-stu-id="7286c-149">In the following example, all the `Orders` for all the `Customers` who are located in London are retrieved when the query is executed.</span></span> <span data-ttu-id="7286c-150">Como resultado, o acesso são a propriedade de `Orders` em um objeto de `Customer` não dispara uma nova consulta de base de dados.</span><span class="sxs-lookup"><span data-stu-id="7286c-150">As a result, successive access to the `Orders` property on a `Customer` object does not trigger a new database query.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.DataLoadOptions#2](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.dataloadoptions/cs/program.cs#2)]
 [!code-vb[System.Data.Linq.DataLoadOptions#2](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.dataloadoptions/vb/module1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadWith&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void LoadWith&lt;T&gt; (System.Linq.Expressions.Expression&lt;Func&lt;T,object&gt;&gt; expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadWith&lt;T&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!T, object&gt;&gt; expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataLoadOptions.LoadWith``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadWith(Of T) (expression As Expression(Of Func(Of T, Object)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void LoadWith(System::Linq::Expressions::Expression&lt;Func&lt;T, System::Object ^&gt; ^&gt; ^ expression);" />
      <MemberSignature Language="F#" Value="member this.LoadWith : System.Linq.Expressions.Expression&lt;Func&lt;'T, obj&gt;&gt; -&gt; unit" Usage="dataLoadOptions.LoadWith expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;T,System.Object&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="7286c-151">O tipo que é consultado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7286c-151">Type that is queried against.</span>
          </span>
          <span data-ttu-id="7286c-152">Se esse tipo não estiver mapeado, uma exceção será gerada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7286c-152">If this type is unmapped, an exception is thrown.</span>
          </span>
        </typeparam>
        <param name="expression">
          <span data-ttu-id="7286c-153">Identifies the field or property to be retrieved.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7286c-153">Identifies the field or property to be retrieved.</span>
          </span>
          <span data-ttu-id="7286c-154">If the expression does not identify a field or property that represents a one-to-one or one-to-many relationship, an exception is thrown.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7286c-154">If the expression does not identify a field or property that represents a one-to-one or one-to-many relationship, an exception is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7286c-155">Specifies which sub-objects to retrieve when a query is submitted for an object of type T.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7286c-155">Specifies which sub-objects to retrieve when a query is submitted for an object of type T.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7286c-156">Não é possível especificar o carregamento de dois níveis de relações (por exemplo, `Orders.OrderDetails`).</span><span class="sxs-lookup"><span data-stu-id="7286c-156">You cannot specify the loading of two levels of relationships (for example, `Orders.OrderDetails`).</span></span> <span data-ttu-id="7286c-157">Nesses cenários, você deve especificar dois separado <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="7286c-157">In these scenarios you must specify two separate <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> methods.</span></span>  
  
 <span data-ttu-id="7286c-158">Para evitar o ciclo, consulte os comentários seção <xref:System.Data.Linq.DataLoadOptions>.</span><span class="sxs-lookup"><span data-stu-id="7286c-158">To avoid cycling, see Remarks section in <xref:System.Data.Linq.DataLoadOptions>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7286c-159">No exemplo a seguir, qualquer `Orders` para qualquer `Customers` que está localizado em Londres é recuperado quando a consulta é executada.</span><span class="sxs-lookup"><span data-stu-id="7286c-159">In the following example, all the `Orders` for all the `Customers` who are located in London are retrieved when the query is executed.</span></span> <span data-ttu-id="7286c-160">Como resultado, o acesso são a propriedade de `Orders` em um objeto de `Customer` não dispara uma nova consulta de base de dados.</span><span class="sxs-lookup"><span data-stu-id="7286c-160">As a result, successive access to the `Orders` property on a `Customer` object does not trigger a new database query.</span></span>  
  
 [!code-csharp[System.Data.Linq.DataLoadOptions#2](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.dataloadoptions/cs/program.cs#2)]
 [!code-vb[System.Data.Linq.DataLoadOptions#2](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.dataloadoptions/vb/module1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>