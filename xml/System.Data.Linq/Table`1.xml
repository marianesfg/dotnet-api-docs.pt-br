<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Table`1.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58f2e2c57717f41b8415d2d08b9d484756b3b8509.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8f2e2c57717f41b8415d2d08b9d484756b3b8509</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>The type of the data in the table.</source>
          <target state="translated">O tipo de dados na tabela.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Data.Linq.Table`1">
          <source>Represents a table for a particular type in the underlying database.</source>
          <target state="translated">Representa uma tabela para determinado tipo no banco de dados subjacente.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>This class enables you to query over the table and add, remove, and attach objects.</source>
          <target state="translated">Essa classe permite que você consultar a tabela e adicionar, remover e anexar objetos.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>An application can access a <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance via <ph id="ph2">&lt;xref:System.Data.Linq.DataContext.GetTable%2A&gt;</ph> or by using a strongly typed property for the strongly typed <ph id="ph3">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.</source>
          <target state="translated">Um aplicativo pode acessar uma <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instância <ph id="ph2">&lt;xref:System.Data.Linq.DataContext.GetTable%2A&gt;</ph> ou usando uma propriedade com rigidez de tipos para fortemente tipada <ph id="ph3">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>That is, when the designer generates a DataContext object, it generates properties to represent each Table.</source>
          <target state="translated">Ou seja, quando o designer gera um objeto DataContext, ele gera propriedades para representar cada tabela.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>For example:</source>
          <target state="translated">Por exemplo:</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>For this strongly typed DataContext, you can access the Users property to get <ph id="ph1">`Table&lt;User&gt;`</ph>.</source>
          <target state="translated">Para este DataContext com rigidez de tipos, você pode acessar a propriedade de usuários para obter <ph id="ph1">`Table&lt;User&gt;`</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="T:System.Data.Linq.Table`1">
          <source>Attaches an entity to the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph>.</source>
          <target state="translated">Anexa uma entidade ao <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>Use the <ph id="ph1">`Attach`</ph> methods with entities that have been created in one <ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph>, serialized to a client, and then deserialized back (with the intention to perform an update or delete operation).</source>
          <target state="translated">Use o <ph id="ph1">`Attach`</ph> métodos com entidades que foram criados em um <ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph>serializado para um cliente e desserializado (com a intenção de executar uma atualização ou operação de exclusão).</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>For more information, see <bpt id="p1">[</bpt>Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>recuperação de dados e operações de comida RUMINADA em aplicativos de N camadas (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>Do not try to <ph id="ph1">`Attach`</ph> an entity that has not been detached through serialization.</source>
          <target state="translated">Não tente <ph id="ph1">`Attach`</ph> uma entidade que não foi desanexada por meio de serialização.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>Entities that have not been serialized still maintain associations with deferred loaders that can cause unexpected results if the entity becomes tracked by a second data context.</source>
          <target state="translated">Entidades que não foi serializadas ainda mantenham as associações com carregadores adiadas que podem causar resultados inesperados se a entidade se tornará acompanhada por um segundo contexto de dados.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>When a new entity is attached, deferred loaders for any child collections (for example, <ph id="ph1">`EntitySet`</ph> collections of entities from associated tables) are initialized.</source>
          <target state="translated">Quando uma nova entidade é anexada, adiada carregadores de todas as coleções filho (por exemplo, <ph id="ph1">`EntitySet`</ph> coleções de entidades de tabelas associadas) são inicializados.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>When <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> is called, members of the child collections are put into an <ph id="ph2">`Unmodified`</ph> state.</source>
          <target state="translated">Quando <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> é chamado, os membros do filho coleções são colocadas em um <ph id="ph2">`Unmodified`</ph> estado.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>To update members of a child collection, you must explicitly call <ph id="ph1">`Attach`</ph> and specify that entity.</source>
          <target state="translated">Para atualizar os membros de uma coleção de filhos, você deve chamar explicitamente <ph id="ph1">`Attach`</ph> e especifique essa entidade.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source><ph id="ph1">`Attach`</ph> attaches all entities in the object graph of the provided object.</source>
          <target state="translated"><ph id="ph1">`Attach`</ph> anexa a todas as entidades no gráfico de objeto do objeto fornecido.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>For example, the following C# code:</source>
          <target state="translated">Por exemplo, o código c# a seguir:</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>The equivalent Visual Basic code is:</source>
          <target state="translated">O código do Visual Basic equivalente é:</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>Calling <ph id="ph1">`Attach`</ph> on <ph id="ph2">`Employee`</ph> attaches employee, master, and child, because the <ph id="ph3">`Employee`</ph> has relationships to both master and child.</source>
          <target state="translated">Chamando <ph id="ph1">`Attach`</ph> na <ph id="ph2">`Employee`</ph> anexa o funcionário, master e filho, porque o <ph id="ph3">`Employee`</ph> tem relações para master e filho.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>You must explicitly call <ph id="ph1">`InsertOnSubmit`</ph> to change the state from attached to inserted.</source>
          <target state="translated">Você deve chamar explicitamente <ph id="ph1">`InsertOnSubmit`</ph> alterar o estado de anexado ao inserido.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.Attach(`0)">
          <source>The original values of the entity to be attached.</source>
          <target state="translated">Os valores originais da entidade a ser anexada.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.Attach(`0)">
          <source>Attaches a disconnected or "detached" entity to a new <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> when original values are required for optimistic concurrency checks.</source>
          <target state="translated">Anexa uma entidade desconectada ou “desanexada” a um novo <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> quando os valores originais são necessários para verificações de simultaneidade otimista.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0)">
          <source>Use the <ph id="ph1">`Attach`</ph> methods with entities that have been created in one <ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph>, serialized to a client, and then deserialized back to perform an update or delete operation.</source>
          <target state="translated">Use o <ph id="ph1">`Attach`</ph> métodos com entidades que foram criados em um <ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph>serializado para um cliente e desserializado voltar para executar uma atualização ou operação de exclusão.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0)">
          <source>Because the new <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> has no way of tracking what the original values were for a disconnected entity, the client is responsible for supplying those values.</source>
          <target state="translated">Porque o novo <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> dispõe de nenhuma forma de controlar quais foram os valores originais para uma entidade desconectada, o cliente é responsável por fornecer esses valores.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0)">
          <source>In this version of <ph id="ph1">&lt;xref:System.Data.Linq.Table%601.Attach%2A&gt;</ph>, the entity is assumed to be in its original value state.</source>
          <target state="translated">Nesta versão do <ph id="ph1">&lt;xref:System.Data.Linq.Table%601.Attach%2A&gt;</ph>, a entidade deve para estar no estado de valor original.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0)">
          <source>After calling this method, you can then update its fields, for example with additional data sent from the client.</source>
          <target state="translated">Depois de chamar esse método, você pode atualizar seus campos, por exemplo com dados adicionais enviados do cliente.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0)">
          <source>When a new entity is attached, deferred loaders for any child collections (for example, <ph id="ph1">`EntitySet`</ph> collections of entities from associated tables) are initialized.</source>
          <target state="translated">Quando uma nova entidade é anexada, adiada carregadores de todas as coleções filho (por exemplo, <ph id="ph1">`EntitySet`</ph> coleções de entidades de tabelas associadas) são inicializados.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0)">
          <source>When <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> is called, members of the child collections are put into an <ph id="ph2">`Unmodified`</ph> state.</source>
          <target state="translated">Quando <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> é chamado, os membros do filho coleções são colocadas em um <ph id="ph2">`Unmodified`</ph> estado.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0)">
          <source>To update members of a child collection, you must explicitly call <ph id="ph1">`Attach`</ph> and specify that entity.</source>
          <target state="translated">Para atualizar os membros de uma coleção de filhos, você deve chamar explicitamente <ph id="ph1">`Attach`</ph> e especifique essa entidade.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0)">
          <source>For more information, see <bpt id="p1">[</bpt>Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>recuperação de dados e operações de comida RUMINADA em aplicativos de N camadas (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0)">
          <source>Do not try to <ph id="ph1">`Attach`</ph> an entity that has not been detached through serialization.</source>
          <target state="translated">Não tente <ph id="ph1">`Attach`</ph> uma entidade que não foi desanexada por meio de serialização.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0)">
          <source>Entities that have not been serialized still maintain associations with deferred loaders that can cause unexpected results if the entity becomes tracked by a second data context.</source>
          <target state="translated">Entidades que não foi serializadas ainda mantenham as associações com carregadores adiadas que podem causar resultados inesperados se a entidade se tornará acompanhada por um segundo contexto de dados.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.Attach(`0,System.Boolean)">
          <source>The entity to be attached.</source>
          <target state="translated">A entidade a ser anexada.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.Attach(`0,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to attach the entity as modified; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to attach the entity as unmodified.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para anexar a entidade como modificada; <ph id="ph2">&lt;see langword="false" /&gt;</ph> anexar a entidade como inalterada.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.Attach(`0,System.Boolean)">
          <source>Attaches an entity to the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> in either a modified or unmodified state.</source>
          <target state="translated">Anexa uma entidade ao <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> em um estado modificado ou inalterado.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0,System.Boolean)">
          <source>If attaching <bpt id="p1">*</bpt>as modified<ept id="p1">*</ept>, the entity must either declare a version member or must not participate in update conflict checking.</source>
          <target state="translated">Se anexar <bpt id="p1">*</bpt>como modificado<ept id="p1">*</ept>, a entidade ou deve declarar um membro de versão ou não deve fazer parte de verificação de conflitos de atualização.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0,System.Boolean)">
          <source>When a new entity is attached, deferred loaders for any child collections (for example, <ph id="ph1">`EntitySet`</ph> collections of entities from associated tables) are initialized.</source>
          <target state="translated">Quando uma nova entidade é anexada, adiada carregadores de todas as coleções filho (por exemplo, <ph id="ph1">`EntitySet`</ph> coleções de entidades de tabelas associadas) são inicializados.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0,System.Boolean)">
          <source>When <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> is called, members of the child collections are put into an <ph id="ph2">`Unmodified`</ph> state.</source>
          <target state="translated">Quando <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> é chamado, os membros do filho coleções são colocadas em um <ph id="ph2">`Unmodified`</ph> estado.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0,System.Boolean)">
          <source>To update members of a child collection, you must explicitly call <ph id="ph1">`Attach`</ph> and specify that entity.</source>
          <target state="translated">Para atualizar os membros de uma coleção de filhos, você deve chamar explicitamente <ph id="ph1">`Attach`</ph> e especifique essa entidade.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.Attach(`0,`0)">
          <source>The entity to be attached.</source>
          <target state="translated">A entidade a ser anexada.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.Attach(`0,`0)">
          <source>An instance of the same entity type with data members that contain the original values.</source>
          <target state="translated">Uma instância do mesmo tipo de entidade com membros de dados que contém os valores originais.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.Attach(`0,`0)">
          <source>Attaches an entity to the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> in either a modified or unmodified state by specifying both the entity and its original state.</source>
          <target state="translated">Anexa uma entidade para o <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> em um estado modificado ou não modificado especificando a entidade e seu estado original.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0,`0)">
          <source>In the following example, the <ph id="ph1">`Customer`</ph> object is already correctly configured.</source>
          <target state="translated">No exemplo a seguir, o <ph id="ph1">`Customer`</ph> objeto corretamente já está configurado.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0,`0)">
          <source>You can call <ph id="ph1">`Attach`</ph> without having to replay the updates.</source>
          <target state="translated">Você pode chamar <ph id="ph1">`Attach`</ph> sem a necessidade de repetir as atualizações.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0,`0)">
          <source>When a new entity is attached, deferred loaders for any child collections (for example, <ph id="ph1">`EntitySet`</ph> collections of entities from associated tables) are initialized.</source>
          <target state="translated">Quando uma nova entidade é anexada, adiada carregadores de todas as coleções filho (por exemplo, <ph id="ph1">`EntitySet`</ph> coleções de entidades de tabelas associadas) são inicializados.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0,`0)">
          <source>When <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> is called, members of the child collections are put into an <ph id="ph2">`Unmodified`</ph> state.</source>
          <target state="translated">Quando <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> é chamado, os membros do filho coleções são colocadas em um <ph id="ph2">`Unmodified`</ph> estado.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0,`0)">
          <source>To update members of a child collection, you must explicitly call <ph id="ph1">`Attach`</ph> and specify that entity.</source>
          <target state="translated">Para atualizar os membros de uma coleção de filhos, você deve chamar explicitamente <ph id="ph1">`Attach`</ph> e especifique essa entidade.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="T:System.Data.Linq.Table`1">
          <source>Attaches all entities of a collection to the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> in either a modified or unmodified state.</source>
          <target state="translated">Anexa todas as entidades de uma coleção ao <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> em um estado inalterado ou modificado.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>If attaching as modified, the entity must either declare a version member or must not participate in update conflict checking.</source>
          <target state="translated">Se anexar como modificada, a entidade ou deve declarar um membro de versão ou não deve fazer parte de verificação de conflitos de atualização.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>When a new entity is attached, deferred loaders for any child collections (for example, <ph id="ph1">`EntitySet`</ph> collections of entities from associated tables) are initialized.</source>
          <target state="translated">Quando uma nova entidade é anexada, adiada carregadores de todas as coleções filho (por exemplo, <ph id="ph1">`EntitySet`</ph> coleções de entidades de tabelas associadas) são inicializados.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>When <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> is called, members of the child collections are put into an <ph id="ph2">`Unmodified`</ph> state.</source>
          <target state="translated">Quando <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> é chamado, os membros do filho coleções são colocadas em um <ph id="ph2">`Unmodified`</ph> estado.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>To update members of a child collection, you must explicitly call <ph id="ph1">`Attach`</ph> and specify that entity.</source>
          <target state="translated">Para atualizar os membros de uma coleção de filhos, você deve chamar explicitamente <ph id="ph1">`Attach`</ph> e especifique essa entidade.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>For more information, see <bpt id="p1">[</bpt>Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>recuperação de dados e operações de comida RUMINADA em aplicativos de N camadas (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of entities to attach.</source>
          <target state="translated">O tipo de entidade a serem anexadas.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The collection of entities.</source>
          <target state="translated">A coleção de entidades.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Attaches all entities of a collection to the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> in either a modified or unmodified state.</source>
          <target state="translated">Anexa todas as entidades de uma coleção ao <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> em um estado inalterado ou modificado.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0})">
          <source>This method attaches all entities of a collection to a new <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.</source>
          <target state="translated">Esse método anexa todas as entidades de uma coleção para um novo <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0})">
          <source>When a new entity is attached, deferred loaders for any child collections (for example, <ph id="ph1">`EntitySet`</ph> collections of entities from associated tables) are initialized.</source>
          <target state="translated">Quando uma nova entidade é anexada, adiada carregadores de todas as coleções filho (por exemplo, <ph id="ph1">`EntitySet`</ph> coleções de entidades de tabelas associadas) são inicializados.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0})">
          <source>When <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> is called, members of the child collections are put into an <ph id="ph2">`Unmodified`</ph> state.</source>
          <target state="translated">Quando <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> é chamado, os membros do filho coleções são colocadas em um <ph id="ph2">`Unmodified`</ph> estado.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0})">
          <source>To update members of a child collection, you must explicitly call <ph id="ph1">`Attach`</ph> and specify that entity.</source>
          <target state="translated">Para atualizar os membros de uma coleção de filhos, você deve chamar explicitamente <ph id="ph1">`Attach`</ph> e especifique essa entidade.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0})">
          <source>For more information, see <bpt id="p1">[</bpt>Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>recuperação de dados e operações de comida RUMINADA em aplicativos de N camadas (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>The type of entities to attach.</source>
          <target state="translated">O tipo de entidade a serem anexadas.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>The collection of entities.</source>
          <target state="translated">A coleção de entidades.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the object has a timestamp or RowVersion member; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if original values are being used for the optimistic concurrency check.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o objeto tiver um membro RowVersion ou um carimbo de data/hora, <ph id="ph2">&lt;see langword="false" /&gt;</ph> se os valores estiverem sendo usados para a verificação de simultaneidade otimista.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>Attaches all entities of a collection to the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> in either a modified or unmodified state.</source>
          <target state="translated">Anexa todas as entidades de uma coleção ao <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> em um estado inalterado ou modificado.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>This method attaches all entities of a collection to the <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> in either a <bpt id="p1">*</bpt>modified<ept id="p1">*</ept> or <bpt id="p2">*</bpt>unmodified<ept id="p2">*</ept> state.</source>
          <target state="translated">Esse método anexa todas as entidades de uma coleção para o <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> em um <bpt id="p1">*</bpt>modificado<ept id="p1">*</ept> ou <bpt id="p2">*</bpt>inalterado<ept id="p2">*</ept> estado.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>If attaching as modified, the entity must either declare a version member or must not participate in update conflict checking.</source>
          <target state="translated">Se anexar como modificada, a entidade ou deve declarar um membro de versão ou não deve fazer parte de verificação de conflitos de atualização.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>If attaching as unmodified, the entity is assumed to represent the original value.</source>
          <target state="translated">Se anexar como não modificado, a entidade será assumida para representar o valor original.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>After calling this method, the entity's fields can be modified with other information from the client before <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> is called.</source>
          <target state="translated">Depois de chamar esse método, os campos da entidade podem ser modificados com outras informações do cliente antes de <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> é chamado.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>For more information, see <bpt id="p1">[</bpt>Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>recuperação de dados e operações de comida RUMINADA em aplicativos de N camadas (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>When a new entity is attached, deferred loaders for any child collections (for example, <ph id="ph1">`EntitySet`</ph> collections of entities from associated tables) are initialized.</source>
          <target state="translated">Quando uma nova entidade é anexada, adiada carregadores de todas as coleções filho (por exemplo, <ph id="ph1">`EntitySet`</ph> coleções de entidades de tabelas associadas) são inicializados.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>When <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> is called, members of the child collections are put into an <ph id="ph2">`Unmodified`</ph> state.</source>
          <target state="translated">Quando <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> é chamado, os membros do filho coleções são colocadas em um <ph id="ph2">`Unmodified`</ph> estado.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>To update members of a child collection, you must explicitly call <ph id="ph1">`Attach`</ph> and specify that entity.</source>
          <target state="translated">Para atualizar os membros de uma coleção de filhos, você deve chamar explicitamente <ph id="ph1">`Attach`</ph> e especifique essa entidade.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>The following example shows how you can update an <ph id="ph1">`Order`</ph> object on a different <ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph> instance.</source>
          <target state="translated">O exemplo a seguir mostra como você pode atualizar um <ph id="ph1">`Order`</ph> objeto em outro <ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph> instância.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>The example assumes that you have a connection to a database and have made a <ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> file for it (in this case, the Northwind sample database).</source>
          <target state="translated">O exemplo supõe que você tem uma conexão para um banco de dados e fazer uma <ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> arquivo para ele (nesse caso, o banco de dados de exemplo Northwind).</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>In the following example, an entity object to be attached has a foreign key relation with another object and is stored in the cache but not attached.</source>
          <target state="translated">No exemplo a seguir, um objeto de entidade a ser anexado tem uma relação de chave estrangeira com outro objeto e é armazenado no cache, mas não anexado.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>When you call <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph>, the <ph id="ph2">`ChangeProcessor`</ph> adds an <ph id="ph3">`Insert`</ph> operation for all the foreign key objects.</source>
          <target state="translated">Quando você chama <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph>, o <ph id="ph2">`ChangeProcessor`</ph> adiciona um <ph id="ph3">`Insert`</ph> operação para todos os objetos de chave estrangeiras.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>This is a side-effect when an entity instance is re-used in a different <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> instance.</source>
          <target state="translated">Este é um efeito colateral, quando uma instância de entidade é reutilizada em outro <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> instância.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>For this reason, <ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> does not support re-use of objects.</source>
          <target state="translated">Por esse motivo, <ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> não oferece suporte a reutilização de objetos.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>The following example shows a scenario in which Customer A has canceled all orders and Customer B has taken ownership of them.</source>
          <target state="translated">O exemplo a seguir mostra um cenário em que o cliente cancelou a todos os pedidos e cliente B tem assumir a propriedade deles.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>You can attach all orders of Customer A at the same time.</source>
          <target state="translated">Você pode anexar todos os pedidos do cliente ao mesmo tempo.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Table`1.Context">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> that has been used to retrieve this <ph id="ph2">&lt;see cref="T:System.Data.Linq.Table`1" /&gt;</ph>.</source>
          <target state="translated">Obtém o <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> que foi usado para recuperar esse <ph id="ph2">&lt;see cref="T:System.Data.Linq.Table`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Table`1.Context">
          <source>The data context that has been used to retrieve this table.</source>
          <target state="translated">O contexto de dados que foi usado para recuperar essa tabela.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.DeleteAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements to delete.</source>
          <target state="translated">O tipo dos elementos a serem excluídos.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.DeleteAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The entities to delete.</source>
          <target state="translated">As entidades a serem excluídas.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.DeleteAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Puts all entities from the collection into a <ph id="ph1">&lt;see langword="pending delete" /&gt;</ph> state.</source>
          <target state="translated">Coloca todas as entidades da coleção em um estado <ph id="ph1">&lt;see langword="pending delete" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.DeleteAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Entities that are put into the pending delete state with this method do not disappear from query results until after <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> is called.</source>
          <target state="translated">Entidades que são colocadas no estado de exclusão pendente com esse método não desaparecem dos resultados de consulta até depois <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> é chamado.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.DeleteAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Disconnected entities must be attached before they can be deleted.</source>
          <target state="translated">Entidades desconectadas devem ser conectadas antes de serem excluídos.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.DeleteAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})">
          <source>For more information, see <bpt id="p1">[</bpt>Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>recuperação de dados e operações de comida RUMINADA em aplicativos de N camadas (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.DeleteAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The following C# snippet shows one use for this method:</source>
          <target state="translated">O trecho c# a seguir mostra um uso para este método:</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.DeleteAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})">
          <source>In Visual Basic:</source>
          <target state="translated">No Visual Basic:</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.DeleteOnSubmit(`0)">
          <source>The entity to be deleted.</source>
          <target state="translated">A entidade a ser excluída.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.DeleteOnSubmit(`0)">
          <source>Puts an entity from this table into a <ph id="ph1">&lt;see langword="pending delete" /&gt;</ph> state.</source>
          <target state="translated">Coloca uma entidade desta tabela em um estado de <ph id="ph1">&lt;see langword="pending delete" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.DeleteOnSubmit(`0)">
          <source>The removed entity does not disappear from the query results until after <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> is called.</source>
          <target state="translated">A entidade removida não desaparecerá dos resultados da consulta até depois <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> é chamado.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.DeleteOnSubmit(`0)">
          <source>Disconnected entities must first be attached before they can be deleted.</source>
          <target state="translated">Entidades desconectadas primeiro devem ser anexadas antes de serem excluídos.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.DeleteOnSubmit(`0)">
          <source>For more information, see <bpt id="p1">[</bpt>Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>recuperação de dados e operações de comida RUMINADA em aplicativos de N camadas (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.DeleteOnSubmit(`0)">
          <source><ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> does not support or recognize cascade-delete operations.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> não dá suporte ou reconhece as operações de exclusão em cascata.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.DeleteOnSubmit(`0)">
          <source>If you want to delete a row in a table that has constraints against it, you must either set the <ph id="ph1">`ON DELETE CASCADE`</ph> rule in the foreign-key constraint in the database, or use your own code to first delete the child objects that prevent the parent object from being deleted.</source>
          <target state="translated">Se você quiser excluir uma linha em uma tabela que tem restrições em relação a ela, você deve definir o <ph id="ph1">`ON DELETE CASCADE`</ph> regra na restrição de chave estrangeira no banco de dados ou usar seu próprio código primeiro excluir os objetos filho que impedem que o objeto pai que está sendo excluído.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.DeleteOnSubmit(`0)">
          <source>Otherwise, an exception is thrown.</source>
          <target state="translated">Caso contrário, uma exceção será gerada.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.GetEnumerator">
          <source>Gets an enumerator that iterates through the collection.</source>
          <target state="translated">Obtém um enumerador que itera por meio da coleção.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.GetEnumerator">
          <source>An enumerator that can be used to iterate through the collection.</source>
          <target state="translated">Um enumerador que pode ser usado para iterar pela coleção.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.GetModifiedMembers(`0)">
          <source>The entity from which to get the array.</source>
          <target state="translated">A entidade da qual obter a matriz.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.GetModifiedMembers(`0)">
          <source>Returns an array of modified members that contain their current and original values.</source>
          <target state="translated">Retorna uma matriz de membros modificados que contêm os valores atuais e originais.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.GetModifiedMembers(`0)">
          <source>An array of modified members that contain their current and original values.</source>
          <target state="translated">Uma matriz de membros modificados que contêm os valores atuais e originais.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.GetNewBindingList">
          <source>Creates a new list for binding to a data source.</source>
          <target state="translated">Cria uma nova lista para associar a uma fonte de dados.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.GetNewBindingList">
          <source>A new <ph id="ph1">&lt;see cref="T:System.ComponentModel.IBindingList" /&gt;</ph> for binding to a data source.</source>
          <target state="translated">Uma nova <ph id="ph1">&lt;see cref="T:System.ComponentModel.IBindingList" /&gt;</ph> para associar a uma fonte de dados.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.GetNewBindingList">
          <source>The returned list supports standard operations, such as additions, deletions, insertions, and updates, but saves must be explicitly managed by the programmer.</source>
          <target state="translated">A lista retornada dá suporte a operações padrão, como adições, exclusões, inserções e atualizações, mas salva deve ser explicitamente gerenciada pelo programador.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.GetOriginalEntityState(`0)">
          <source>The entity whose original state is to be returned.</source>
          <target state="translated">A entidade cujo estado original deve ser retornado.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.GetOriginalEntityState(`0)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Data.Linq.Table`1" /&gt;</ph> instance that contains the original state of the entity.</source>
          <target state="translated">Retorna uma instância <ph id="ph1">&lt;see cref="T:System.Data.Linq.Table`1" /&gt;</ph> que contém o estado original da entidade.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.GetOriginalEntityState(`0)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Linq.Table`1" /&gt;</ph> instance that contains the original state of the entity.</source>
          <target state="translated">Uma instância <ph id="ph1">&lt;see cref="T:System.Data.Linq.Table`1" /&gt;</ph> que contém o estado original da entidade.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.GetOriginalEntityState(`0)">
          <source>This method returns the original state of an entity since it was either created or attached to the current <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.</source>
          <target state="translated">Esse método retorna o estado original de uma entidade, desde que ele foi criado ou anexado a atual <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.GetOriginalEntityState(`0)">
          <source>The original state of an entity that has been serialized and deserialized must be provided by an independent tracking mechanism and supplied when the entity is attached to a new <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.</source>
          <target state="translated">O estado original de uma entidade que serializados e desserializado deve ser fornecido por um mecanismo de controle independente e fornecido quando a entidade é anexada a um novo <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.GetOriginalEntityState(`0)">
          <source>For more information, see <bpt id="p1">[</bpt>Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>recuperação de dados e operações de comida RUMINADA em aplicativos de N camadas (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.InsertAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements to insert.</source>
          <target state="translated">O tipo dos elementos a ser inserido.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.InsertAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The entities to add.</source>
          <target state="translated">As entidades a serem adicionadas.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.InsertAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Adds all entities of a collection to the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> in a <ph id="ph2">&lt;see langword="pending insert" /&gt;</ph> state.</source>
          <target state="translated">Adiciona todas as entidades de uma coleção ao <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> em um estado <ph id="ph2">&lt;see langword="pending insert" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.InsertAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The added entities will not be in query results until after <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> has been called.</source>
          <target state="translated">Não será adicionadas entidades nos resultados da consulta até depois <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> foi chamado.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.InsertOnSubmit(`0)">
          <source>The entity to be added.</source>
          <target state="translated">A entidade a ser adicionada.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.InsertOnSubmit(`0)">
          <source>Adds an entity in a <ph id="ph1">&lt;see langword="pending insert" /&gt;</ph> state to this <ph id="ph2">&lt;see cref="T:System.Data.Linq.Table`1" /&gt;</ph>.</source>
          <target state="translated">Adiciona uma entidade em um estado <ph id="ph1">&lt;see langword="pending insert" /&gt;</ph> a esse <ph id="ph2">&lt;see cref="T:System.Data.Linq.Table`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.InsertOnSubmit(`0)">
          <source>The added entity will not appear in query results from this table until after <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> has been called.</source>
          <target state="translated">A entidade adicionada não aparecerá nos resultados da consulta dessa tabela até depois <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> foi chamado.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Table`1.IsReadOnly">
          <source>Gets a value that indicates whether the type of the entities contained in this <ph id="ph1">&lt;see cref="T:System.Data.Linq.Table`1" /&gt;</ph> instance has a primary key.</source>
          <target state="translated">Obtém um valor que indica se o tipo das entidades contidas nessa instância <ph id="ph1">&lt;see cref="T:System.Data.Linq.Table`1" /&gt;</ph> tem uma chave primária.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Table`1.IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the entity type does not have a primary key; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se o tipo de entidade não tem uma chave primária; Caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Collections#Generic#IEnumerable&amp;lt;TEntity&amp;gt;#GetEnumerator">
          <source>Returns an enumerator that iterates through the collection.</source>
          <target state="translated">Retorna um enumerador que itera pela coleção.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Collections#Generic#IEnumerable&amp;lt;TEntity&amp;gt;#GetEnumerator">
          <source>An enumerator that can be used to iterate through the collection.</source>
          <target state="translated">Um enumerador que pode ser usado para iterar pela coleção.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an enumerator that iterates through the collection.</source>
          <target state="translated">Retorna um enumerador que itera pela coleção.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Collections#IEnumerable#GetEnumerator">
          <source>An enumerator that can be used to iterate through the collection.</source>
          <target state="translated">Um enumerador que pode ser usado para iterar pela coleção.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Collections#IEnumerable#GetEnumerator">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Collections#IEnumerable#GetEnumerator">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Table`1.System#ComponentModel#IListSource#ContainsListCollection">
          <source>Gets a value that indicates whether the collection is a collection of <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> objects.</source>
          <target state="translated">Obtém um valor que indica se a coleção é uma coleção de objetos <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Table`1.System#ComponentModel#IListSource#ContainsListCollection">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the collection is a collection of <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph> objects; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se a coleção for uma coleção de objetos <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Table`1.System#ComponentModel#IListSource#ContainsListCollection">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Table`1.System#ComponentModel#IListSource#ContainsListCollection">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.ComponentModel.IListSource&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.ComponentModel.IListSource&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#ComponentModel#IListSource#GetList">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> that can be bound to a data source from an object that does not implement an <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph> itself.</source>
          <target state="translated">Retorna um <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> que pode ser associado a uma fonte de dados de um objeto que não implementa um <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#ComponentModel#IListSource#GetList">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> that can be bound to a data source.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> que pode ser associado a uma fonte de dados.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#ComponentModel#IListSource#GetList">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#ComponentModel#IListSource#GetList">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.ComponentModel.IListSource&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.ComponentModel.IListSource&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="T:System.Data.Linq.Table`1">
          <source>Allows deserialized entities to be associated with a new instance of a <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> so that they can be updated or deleted from the database.</source>
          <target state="translated">Permite que entidades desserializadas sejam associadas uma nova instância de um <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> para que possam ser atualizados ou excluídos do banco de dados.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object)">
          <source>The entity to be attached.</source>
          <target state="translated">A entidade a ser anexada.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object)">
          <source>Attaches an entity to the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> in an unmodified state.</source>
          <target state="translated">Anexa uma entidade ao <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> em um estado inalterado.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object,System.Boolean)">
          <source>The entity to be attached.</source>
          <target state="translated">A entidade a ser anexada.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to attach the entity as modified; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to attached the entity as unmodified.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para anexar a entidade como modificada; <ph id="ph2">&lt;see langword="false" /&gt;</ph> para anexá-la como inalterada.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object,System.Boolean)">
          <source>Attaches all entities of a collection to the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> in either a modified or unmodified state.</source>
          <target state="translated">Anexa todas as entidades de uma coleção ao <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> em um estado inalterado ou modificado.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object,System.Boolean)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object,System.Boolean)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object,System.Object)">
          <source>The entity to be attached.</source>
          <target state="translated">A entidade a ser anexada.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object,System.Object)">
          <source>An instance of the same entity type with data members that contain the original values.</source>
          <target state="translated">Uma instância do mesmo tipo de entidade com membros de dados que contém os valores originais.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object,System.Object)">
          <source>Attaches an entity to the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> in either a modified or unmodified state by specifying both the entity and its original state.</source>
          <target state="translated">Anexa uma entidade para o <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> em um estado modificado ou não modificado especificando a entidade e seu estado original.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object,System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object,System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="T:System.Data.Linq.Table`1">
          <source>Attaches all entities of a collection to the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> in either a modified or unmodified state.</source>
          <target state="translated">Anexa todas as entidades de uma coleção ao <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> em um estado inalterado ou modificado.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable)">
          <source>The collection of entities to be attached.</source>
          <target state="translated">A coleção de entidades a serem anexadas.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable)">
          <source>Attaches all entities of a collection to the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> in either a modified or unmodified state.</source>
          <target state="translated">Anexa todas as entidades de uma coleção ao <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> em um estado inalterado ou modificado.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable,System.Boolean)">
          <source>The collection of entities to be attched.</source>
          <target state="translated">A coleção de entidades a serem anexadas.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to attach the entities as modified; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to attach the entities as unmodified.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para anexar as entidades como modificadas; <ph id="ph2">&lt;see langword="false" /&gt;</ph> para anexá-las como inalteradas.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable,System.Boolean)">
          <source>Attaches all entities of a collection to the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> in either a modified or unmodified state.</source>
          <target state="translated">Anexa todas as entidades de uma coleção ao <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> em um estado inalterado ou modificado.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable,System.Boolean)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable,System.Boolean)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteAllOnSubmit(System.Collections.IEnumerable)">
          <source>The entities being removed.</source>
          <target state="translated">As entidades que estão sendo removidas.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteAllOnSubmit(System.Collections.IEnumerable)">
          <source>Puts all entities from the collection into a <ph id="ph1">&lt;see langword="pending delete" /&gt;</ph> state.</source>
          <target state="translated">Coloca todas as entidades da coleção em um estado <ph id="ph1">&lt;see langword="pending delete" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteAllOnSubmit(System.Collections.IEnumerable)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteAllOnSubmit(System.Collections.IEnumerable)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteOnSubmit(System.Object)">
          <source>The entity to be removed.</source>
          <target state="translated">A entidade a ser removida.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteOnSubmit(System.Object)">
          <source>Puts an entity from this table into a <ph id="ph1">&lt;see langword="pending delete" /&gt;</ph> state.</source>
          <target state="translated">Coloca uma entidade desta tabela em um estado de <ph id="ph1">&lt;see langword="pending delete" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteOnSubmit(System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteOnSubmit(System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteOnSubmit(System.Object)">
          <source><ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> does not support or recognize cascade-delete operations.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> não dá suporte ou reconhece as operações de exclusão em cascata.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteOnSubmit(System.Object)">
          <source>If you want to delete a row in a table that has constraints against it, you must either set the <ph id="ph1">`ON DELETE CASCADE`</ph> rule in the foreign-key constraint in the database, or use your own code to first delete the child objects that prevent the parent object from being deleted.</source>
          <target state="translated">Se você quiser excluir uma linha em uma tabela que tem restrições em relação a ela, você deve definir o <ph id="ph1">`ON DELETE CASCADE`</ph> regra na restrição de chave estrangeira no banco de dados ou usar seu próprio código primeiro excluir os objetos filho que impedem que o objeto pai que está sendo excluído.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteOnSubmit(System.Object)">
          <source>Otherwise, an exception is thrown.</source>
          <target state="translated">Caso contrário, uma exceção será gerada.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#GetModifiedMembers(System.Object)">
          <source>The entity from which to obtain the modified members.</source>
          <target state="translated">A entidade da qual se obtém os membros modificados.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#GetModifiedMembers(System.Object)">
          <source>Returns an array of modified members that contain their current and original values.</source>
          <target state="translated">Retorna uma matriz de membros modificados que contêm os valores atuais e originais.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#GetModifiedMembers(System.Object)">
          <source>An array of modified members.</source>
          <target state="translated">Uma matriz de membros modificados.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#GetModifiedMembers(System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#GetModifiedMembers(System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#GetOriginalEntityState(System.Object)">
          <source>The entity whose original state is to be accessed.</source>
          <target state="translated">A entidade cujo estado original deve ser acessado.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#GetOriginalEntityState(System.Object)">
          <source>Retrieves original values of a given entity.</source>
          <target state="translated">Recupera os valores originais de uma determinada entidade.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#GetOriginalEntityState(System.Object)">
          <source>A copy of the original entity.</source>
          <target state="translated">Uma cópia da entidade original.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#GetOriginalEntityState(System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#GetOriginalEntityState(System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertAllOnSubmit(System.Collections.IEnumerable)">
          <source>The collection of entities to be added.</source>
          <target state="translated">A coleção de entidades a ser adicionada.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertAllOnSubmit(System.Collections.IEnumerable)">
          <source>Adds all entities of a collection to the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> in an <ph id="ph2">&lt;see langword="pending insert" /&gt;</ph> state.</source>
          <target state="translated">Adiciona todas as entidades de uma coleção ao <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> em um estado <ph id="ph2">&lt;see langword="pending insert" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertAllOnSubmit(System.Collections.IEnumerable)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertAllOnSubmit(System.Collections.IEnumerable)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertOnSubmit(System.Object)">
          <source>The entity to add.</source>
          <target state="translated">A entidade a ser adicionada.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertOnSubmit(System.Object)">
          <source>Adds an entity in a <ph id="ph1">&lt;see langword="pending insert" /&gt;</ph> state to this table.</source>
          <target state="translated">Adiciona uma entidade em um estado <ph id="ph1">&lt;see langword="pending insert" /&gt;</ph> a esta tabela.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertOnSubmit(System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertOnSubmit(System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Table`1.System#Linq#IQueryable#ElementType">
          <source>Gets the type of the element(s) that are returned when the expression tree associated with this object is executed.</source>
          <target state="translated">Obtém o tipo de elemento(s) retornado quando a árvore de expressão associada a esse objeto é executada.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Table`1.System#Linq#IQueryable#ElementType">
          <source>The type of the element(s) that are returned when the expression tree associated with this object is executed.</source>
          <target state="translated">O tipo de elemento (s) que é retornadas quando a árvore de expressão associada a esse objeto é executada.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Table`1.System#Linq#IQueryable#ElementType">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Table`1.System#Linq#IQueryable#ElementType">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Linq.IQueryable&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.Linq.IQueryable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Table`1.System#Linq#IQueryable#Expression">
          <source>Gets the expression tree that is associated with this instance of <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable" /&gt;</ph>.</source>
          <target state="translated">Obtém a árvore de expressão associada a essa instância do <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Table`1.System#Linq#IQueryable#Expression">
          <source>The <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.Expression" /&gt;</ph> that is associated with this instance of <ph id="ph2">&lt;see cref="T:System.Linq.IQueryable" /&gt;</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.Expression" /&gt;</ph> associada a essa instância de <ph id="ph2">&lt;see cref="T:System.Linq.IQueryable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Table`1.System#Linq#IQueryable#Expression">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Table`1.System#Linq#IQueryable#Expression">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Linq.IQueryable&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.Linq.IQueryable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Table`1.System#Linq#IQueryable#Provider">
          <source>Gets the query provider that is associated with this data source.</source>
          <target state="translated">Obtém o provedor de consulta associado esta fonte de dados.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Table`1.System#Linq#IQueryable#Provider">
          <source>The <ph id="ph1">&lt;see cref="T:System.Linq.IQueryProvider" /&gt;</ph> that is associated with this data source.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Linq.IQueryProvider" /&gt;</ph> associado a essa fonte de dados.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Table`1.System#Linq#IQueryable#Provider">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Table`1.System#Linq#IQueryable#Provider">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Linq.IQueryable&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.Linq.IQueryable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery(System.Linq.Expressions.Expression)">
          <source>The query expression from which the evaluation is performed.</source>
          <target state="translated">A expressão de consulta em que a avaliação é executada.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery(System.Linq.Expressions.Expression)">
          <source>Constructs an <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable" /&gt;</ph> object that can evaluate the query represented by a specified expression tree.</source>
          <target state="translated">Constrói um objeto <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable" /&gt;</ph> que pode avaliar a consulta representada por uma árvore de expressão especificada.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery(System.Linq.Expressions.Expression)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable" /&gt;</ph> that can evaluate the query represented by the specified expression tree.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable" /&gt;</ph> que pode avaliar a consulta representada pela árvore de expressão especificada.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery(System.Linq.Expressions.Expression)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery(System.Linq.Expressions.Expression)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Linq.IQueryProvider&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.Linq.IQueryProvider&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery``1(System.Linq.Expressions.Expression)">
          <source>The type of the data in the table.</source>
          <target state="translated">O tipo de dados na tabela.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery``1(System.Linq.Expressions.Expression)">
          <source>The query expression from which the evaluation is performed.</source>
          <target state="translated">A expressão de consulta em que a avaliação é executada.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery``1(System.Linq.Expressions.Expression)">
          <source>Constructs an <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> object that can evaluate the query represented by a specified expression tree.</source>
          <target state="translated">Constrói um objeto <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> que pode avaliar a consulta representada por uma árvore de expressão especificada.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery``1(System.Linq.Expressions.Expression)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> that can evaluate the query represented by the specified expression tree.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> que pode avaliar a consulta representada pela árvore de expressão especificada.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery``1(System.Linq.Expressions.Expression)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery``1(System.Linq.Expressions.Expression)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Linq.IQueryProvider&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.Linq.IQueryProvider&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute(System.Linq.Expressions.Expression)">
          <source>The query expression to execute.</source>
          <target state="translated">A expressão de consulta a ser executada.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute(System.Linq.Expressions.Expression)">
          <source>Executes the query represented by a specified expression tree.</source>
          <target state="translated">Executa a consulta representada por uma árvore de expressão especificada.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute(System.Linq.Expressions.Expression)">
          <source>The value that results from executing the specified query.</source>
          <target state="translated">O valor resultante da execução da consulta especificada.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute(System.Linq.Expressions.Expression)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute(System.Linq.Expressions.Expression)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Linq.IQueryProvider&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.Linq.IQueryProvider&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute``1(System.Linq.Expressions.Expression)">
          <source>The type of the data in the table.</source>
          <target state="translated">O tipo de dados na tabela.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute``1(System.Linq.Expressions.Expression)">
          <source>The query expression to execute.</source>
          <target state="translated">A expressão de consulta a ser executada.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute``1(System.Linq.Expressions.Expression)">
          <source>Executes the strongly-typed query represented by a specified expression tree.</source>
          <target state="translated">Executa a consulta fortemente tipada representada por uma árvore de expressão especificada.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute``1(System.Linq.Expressions.Expression)">
          <source>The value that results from executing the specified query.</source>
          <target state="translated">O valor resultante da execução da consulta especificada.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute``1(System.Linq.Expressions.Expression)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este membro é uma implementação do membro de interface explícita.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute``1(System.Linq.Expressions.Expression)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Linq.IQueryProvider&gt;</ph> interface.</source>
          <target state="translated">Ele só pode ser usado quando a instância de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> é convertida em uma interface de <ph id="ph2">&lt;xref:System.Linq.IQueryProvider&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.ToString">
          <source>Returns a string that represents the table.</source>
          <target state="translated">Retorna uma cadeia de caracteres que representa a tabela.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.ToString">
          <source>A string representation of the table.</source>
          <target state="translated">Uma representação de cadeia de caracteres da tabela.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>