<Type Name="DataContext" FullName="System.Data.Linq.DataContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4950874af0e1b0c1e46a314bd7a3714b5206ccfe" /><Meta Name="ms.sourcegitcommit" Value="4ee26ac79338b0bf99fa1e0913e8a06b21994d8e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="03/26/2019" /><Meta Name="ms.locfileid" Value="58461950" /></Metadata><TypeSignature Language="C#" Value="public class DataContext : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataContext extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.DataContext" />
  <TypeSignature Language="VB.NET" Value="Public Class DataContext&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataContext : IDisposable" />
  <TypeSignature Language="F#" Value="type DataContext = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="b97c6-101">Representa o ponto de entrada principal para a estrutura de LINQ to SQL.</span><span class="sxs-lookup"><span data-stu-id="b97c6-101">Represents the main entry point for the LINQ to SQL framework.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b97c6-102">O <xref:System.Data.Linq.DataContext> é a origem de todas as entidades mapeado sobre uma conexão de banco de dados.</span><span class="sxs-lookup"><span data-stu-id="b97c6-102">The <xref:System.Data.Linq.DataContext> is the source of all entities mapped over a database connection.</span></span> <span data-ttu-id="b97c6-103">Ele controla as alterações feitas a todas as entidades recuperadas e mantém um "cache de identidade" garante que as entidades recuperadas mais de uma vez é representados por usando a mesma instância do objeto.</span><span class="sxs-lookup"><span data-stu-id="b97c6-103">It tracks changes that you made to all retrieved entities and maintains an "identity cache" that guarantees that entities retrieved more than one time are represented by using the same object instance.</span></span>  
  
 <span data-ttu-id="b97c6-104">Em geral, um <xref:System.Data.Linq.DataContext> instância destina-se até o último, para uma "unidade de trabalho", no entanto, seu aplicativo define esse termo.</span><span class="sxs-lookup"><span data-stu-id="b97c6-104">In general, a <xref:System.Data.Linq.DataContext> instance is designed to last for one "unit of work" however your application defines that term.</span></span> <span data-ttu-id="b97c6-105">Um <xref:System.Data.Linq.DataContext> é leve e não é caro criar.</span><span class="sxs-lookup"><span data-stu-id="b97c6-105">A <xref:System.Data.Linq.DataContext> is lightweight and is not expensive to create.</span></span> <span data-ttu-id="b97c6-106">Um típico [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] aplicativo cria <xref:System.Data.Linq.DataContext> instâncias no escopo do método ou como um membro das classes de curta duração que representam um conjunto lógico de relacionadas a operações de banco de dados.</span><span class="sxs-lookup"><span data-stu-id="b97c6-106">A typical [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] application creates <xref:System.Data.Linq.DataContext> instances at method scope or as a member of short-lived classes that represent a logical set of related database operations.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b97c6-107">Inicializa uma nova instância da classe <see cref="T:System.Data.Linq.DataContext" />.</span><span class="sxs-lookup"><span data-stu-id="b97c6-107">Initializes a new instance of the <see cref="T:System.Data.Linq.DataContext" /> class.</span></span> <span data-ttu-id="b97c6-108">A cadeia de conexão que você usa pode ser uma cadeia de conexão ADO.NET.</span><span class="sxs-lookup"><span data-stu-id="b97c6-108">The connection string you use can be an ADO.NET connection string.</span></span> <span data-ttu-id="b97c6-109">Você também pode especificar um nome de arquivo para um arquivo SQL Server Express ou SQL Server Compact.</span><span class="sxs-lookup"><span data-stu-id="b97c6-109">You can also specify a filename to a SQL Server Express or SQL Server Compact file.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContext (System.Data.IDbConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.IDbConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.#ctor(System.Data.IDbConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connection As IDbConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContext(System::Data::IDbConnection ^ connection);" />
      <MemberSignature Language="F#" Value="new System.Data.Linq.DataContext : System.Data.IDbConnection -&gt; System.Data.Linq.DataContext" Usage="new System.Data.Linq.DataContext connection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.IDbConnection" />
      </Parameters>
      <Docs>
        <param name="connection"><span data-ttu-id="b97c6-110">A conexão usada pelo [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span><span class="sxs-lookup"><span data-stu-id="b97c6-110">The connection used by the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span></param>
        <summary><span data-ttu-id="b97c6-111">Inicializa uma nova instância da classe <see cref="T:System.Data.Linq.DataContext" /> referenciando a conexão usada pelo [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span><span class="sxs-lookup"><span data-stu-id="b97c6-111">Initializes a new instance of the <see cref="T:System.Data.Linq.DataContext" /> class by referencing the connection used by the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b97c6-112">Um <xref:System.Data.Linq.DataContext> abre e fecha uma conexão de banco de dados conforme necessário se você fornecer uma conexão fechada ou uma cadeia de caracteres de conexão.</span><span class="sxs-lookup"><span data-stu-id="b97c6-112">A <xref:System.Data.Linq.DataContext> opens and closes a database connection as needed if you provide a closed connection or a connection string.</span></span> <span data-ttu-id="b97c6-113">Em geral, você nunca deve ter que chamar `Dispose` em um <xref:System.Data.Linq.DataContext>.</span><span class="sxs-lookup"><span data-stu-id="b97c6-113">In general, you should never have to call `Dispose` on a <xref:System.Data.Linq.DataContext>.</span></span> <span data-ttu-id="b97c6-114">Se você fornecer uma conexão aberta, o <xref:System.Data.Linq.DataContext> não será fechado.</span><span class="sxs-lookup"><span data-stu-id="b97c6-114">If you provide an open connection, the <xref:System.Data.Linq.DataContext> will not close it.</span></span> <span data-ttu-id="b97c6-115">Portanto, não é instanciado um <xref:System.Data.Linq.DataContext> com uma conexão aberta, a menos que você tem um bom motivo para fazer isso.</span><span class="sxs-lookup"><span data-stu-id="b97c6-115">Therefore, do not instantiate a <xref:System.Data.Linq.DataContext> with an open connection unless you have a good reason to do this.</span></span> <span data-ttu-id="b97c6-116">Em um <xref:System.Transactions> transação, um <xref:System.Data.Linq.DataContext> não abrir ou fechar uma conexão para evitar a promoção.</span><span class="sxs-lookup"><span data-stu-id="b97c6-116">In a <xref:System.Transactions> transaction, a <xref:System.Data.Linq.DataContext> will not open or close a connection to avoid promotion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContext (System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.IDbConnection connection, class System.Data.Linq.Mapping.MappingSource mapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.#ctor(System.Data.IDbConnection,System.Data.Linq.Mapping.MappingSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connection As IDbConnection, mapping As MappingSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContext(System::Data::IDbConnection ^ connection, System::Data::Linq::Mapping::MappingSource ^ mapping);" />
      <MemberSignature Language="F#" Value="new System.Data.Linq.DataContext : System.Data.IDbConnection * System.Data.Linq.Mapping.MappingSource -&gt; System.Data.Linq.DataContext" Usage="new System.Data.Linq.DataContext (connection, mapping)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.IDbConnection" />
        <Parameter Name="mapping" Type="System.Data.Linq.Mapping.MappingSource" />
      </Parameters>
      <Docs>
        <param name="connection"><span data-ttu-id="b97c6-117">A conexão usada pelo .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="b97c6-117">The connection used by the .NET Framework.</span></span></param>
        <param name="mapping"><span data-ttu-id="b97c6-118">Uma fonte de mapeamento.</span><span class="sxs-lookup"><span data-stu-id="b97c6-118">A source for mapping.</span></span></param>
        <summary><span data-ttu-id="b97c6-119">Inicializa uma nova instância da classe <see cref="T:System.Data.Linq.DataContext" /> referenciando uma conexão e uma fonte de mapeamento.</span><span class="sxs-lookup"><span data-stu-id="b97c6-119">Initializes a new instance of the <see cref="T:System.Data.Linq.DataContext" /> class by referencing a connection and a mapping source.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContext (string fileOrServerOrConnection, System.Data.Linq.Mapping.MappingSource mapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileOrServerOrConnection, class System.Data.Linq.Mapping.MappingSource mapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.#ctor(System.String,System.Data.Linq.Mapping.MappingSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileOrServerOrConnection As String, mapping As MappingSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContext(System::String ^ fileOrServerOrConnection, System::Data::Linq::Mapping::MappingSource ^ mapping);" />
      <MemberSignature Language="F#" Value="new System.Data.Linq.DataContext : string * System.Data.Linq.Mapping.MappingSource -&gt; System.Data.Linq.DataContext" Usage="new System.Data.Linq.DataContext (fileOrServerOrConnection, mapping)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileOrServerOrConnection" Type="System.String" />
        <Parameter Name="mapping" Type="System.Data.Linq.Mapping.MappingSource" />
      </Parameters>
      <Docs>
        <param name="fileOrServerOrConnection"><span data-ttu-id="b97c6-120">Esse argumento pode ser um dos seguintes:</span><span class="sxs-lookup"><span data-stu-id="b97c6-120">This argument can be any one of the following:</span></span> 
<span data-ttu-id="b97c6-121">O nome de um arquivo em que reside um banco de dados SQL Server Express.</span><span class="sxs-lookup"><span data-stu-id="b97c6-121">The name of a file where a SQL Server Express database resides.</span></span>  
  
<span data-ttu-id="b97c6-122">O nome de um servidor em que existe um banco de dados.</span><span class="sxs-lookup"><span data-stu-id="b97c6-122">The name of a server where a database is present.</span></span> <span data-ttu-id="b97c6-123">Nesse caso, o provedor usa o banco de dados padrão de um usuário.</span><span class="sxs-lookup"><span data-stu-id="b97c6-123">In this case the provider uses the default database for a user.</span></span>  
  
<span data-ttu-id="b97c6-124">Uma cadeia de conexão completa.</span><span class="sxs-lookup"><span data-stu-id="b97c6-124">A complete connection string.</span></span> <span data-ttu-id="b97c6-125">O [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] passa apenas a cadeia de caracteres para o provedor sem modificação.</span><span class="sxs-lookup"><span data-stu-id="b97c6-125">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] just passes the string to the provider without modification.</span></span></param>
        <param name="mapping"><span data-ttu-id="b97c6-126">Uma fonte de mapeamento.</span><span class="sxs-lookup"><span data-stu-id="b97c6-126">A source for mapping.</span></span></param>
        <summary><span data-ttu-id="b97c6-127">Inicializa uma nova instância da classe <see cref="T:System.Data.Linq.DataContext" /> referenciando uma fonte de arquivo e fonte de mapeamento.</span><span class="sxs-lookup"><span data-stu-id="b97c6-127">Initializes a new instance of the <see cref="T:System.Data.Linq.DataContext" /> class by referencing a file source and a mapping source.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContext (string fileOrServerOrConnection);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileOrServerOrConnection) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileOrServerOrConnection As String)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContext(System::String ^ fileOrServerOrConnection);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="public DataContext (string connectionString);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContext(System::String ^ connectionString);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.#ctor(System.String)" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="new System.Data.Linq.DataContext : string -&gt; System.Data.Linq.DataContext" Usage="new System.Data.Linq.DataContext connectionString" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.#ctor(System.String)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.Data.Linq.DataContext : string -&gt; System.Data.Linq.DataContext" Usage="new System.Data.Linq.DataContext connectionString" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileOrServerOrConnection" Type="System.String" Index="0" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="connectionString" Type="System.String" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="fileOrServerOrConnection"><span data-ttu-id="b97c6-128">Esse argumento pode ser um dos seguintes: O nome de um arquivo em que reside um banco de dados SQL Server Express.</span><span class="sxs-lookup"><span data-stu-id="b97c6-128">This argument can be any one of the following: The name of a file where a SQL Server Express database resides.</span></span>

<span data-ttu-id="b97c6-129">O nome de um servidor em que existe um banco de dados.</span><span class="sxs-lookup"><span data-stu-id="b97c6-129">The name of a server where a database is present.</span></span> <span data-ttu-id="b97c6-130">Nesse caso, o provedor usa o banco de dados padrão de um usuário.</span><span class="sxs-lookup"><span data-stu-id="b97c6-130">In this case the provider uses the default database for a user.</span></span>  
  
<span data-ttu-id="b97c6-131">Uma cadeia de conexão completa.</span><span class="sxs-lookup"><span data-stu-id="b97c6-131">A complete connection string.</span></span> <span data-ttu-id="b97c6-132">O LINQ to SQL passa apenas a cadeia de caracteres para o provedor sem modificação.</span><span class="sxs-lookup"><span data-stu-id="b97c6-132">LINQ to SQL just passes the string to the provider without modification.</span></span></param>
        <param name="connectionString"><span data-ttu-id="b97c6-133">Esse argumento pode ser um dos seguintes: O nome de um arquivo em que reside um banco de dados SQL Server Express.</span><span class="sxs-lookup"><span data-stu-id="b97c6-133">This argument can be any one of the following: The name of a file where a SQL Server Express database resides.</span></span>

<span data-ttu-id="b97c6-134">O nome de um servidor em que existe um banco de dados.</span><span class="sxs-lookup"><span data-stu-id="b97c6-134">The name of a server where a database is present.</span></span> <span data-ttu-id="b97c6-135">Nesse caso, o provedor usa o banco de dados padrão de um usuário.</span><span class="sxs-lookup"><span data-stu-id="b97c6-135">In this case the provider uses the default database for a user.</span></span>  
  
<span data-ttu-id="b97c6-136">Uma cadeia de conexão completa.</span><span class="sxs-lookup"><span data-stu-id="b97c6-136">A complete connection string.</span></span> <span data-ttu-id="b97c6-137">O LINQ to SQL passa apenas a cadeia de caracteres para o provedor sem modificação.</span><span class="sxs-lookup"><span data-stu-id="b97c6-137">LINQ to SQL just passes the string to the provider without modification.</span></span></param>
        <summary><span data-ttu-id="b97c6-138">Inicializa uma nova instância da classe <see cref="T:System.Data.Linq.DataContext" /> referenciando uma fonte de arquivo.</span><span class="sxs-lookup"><span data-stu-id="b97c6-138">Initializes a new instance of the <see cref="T:System.Data.Linq.DataContext" /> class by referencing a file source.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeConflicts">
      <MemberSignature Language="C#" Value="public System.Data.Linq.ChangeConflictCollection ChangeConflicts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.ChangeConflictCollection ChangeConflicts" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.ChangeConflicts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChangeConflicts As ChangeConflictCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Linq::ChangeConflictCollection ^ ChangeConflicts { System::Data::Linq::ChangeConflictCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChangeConflicts : System.Data.Linq.ChangeConflictCollection" Usage="System.Data.Linq.DataContext.ChangeConflicts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.ChangeConflictCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b97c6-139">Obtém uma coleção de objetos que causaram conflitos de simultaneidade quando o <see cref="M:System.Data.Linq.DataContext.SubmitChanges" /> foi chamado.</span><span class="sxs-lookup"><span data-stu-id="b97c6-139">Gets a collection of objects that caused concurrency conflicts when <see cref="M:System.Data.Linq.DataContext.SubmitChanges" /> was called.</span></span></summary>
        <value><span data-ttu-id="b97c6-140">Uma coleção de objetos que causaram conflitos de simultaneidade.</span><span class="sxs-lookup"><span data-stu-id="b97c6-140">A collection of objects that caused concurrency conflicts.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b97c6-141">O exemplo a seguir mostra como a coleção pode ser iterada para recuperar informações de conflito.</span><span class="sxs-lookup"><span data-stu-id="b97c6-141">The following example shows how the collection can be iterated over to retrieve conflict information.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.ObjectChangeConflict#1](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.objectchangeconflict/cs/program.cs#1)]
 [!code-vb[System.Data.Linq.ObjectChangeConflict#1](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.objectchangeconflict/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandTimeout">
      <MemberSignature Language="C#" Value="public int CommandTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CommandTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.CommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CommandTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CommandTimeout : int with get, set" Usage="System.Data.Linq.DataContext.CommandTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b97c6-142">Obtém ou define um valor que aumenta o período de tempo limite para consultas que, de outra forma, atingir o tempo limite durante o período de tempo limite padrão.</span><span class="sxs-lookup"><span data-stu-id="b97c6-142">Gets or sets a value that increases the time-out period for queries that would otherwise time out during the default time-out period.</span></span></summary>
        <value><span data-ttu-id="b97c6-143">Um valor que aumenta o período de tempo limite para consultas que, de outra forma, atingir o tempo limite durante o período de tempo limite padrão.</span><span class="sxs-lookup"><span data-stu-id="b97c6-143">An integer value that increases the time-out period for queries that would otherwise time out during the default time-out period.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b97c6-144">Essa propriedade obtém ou define o tempo limite do comando usado para executar os comandos gerados (`IDbCommands`).</span><span class="sxs-lookup"><span data-stu-id="b97c6-144">This property gets or sets the command time-out used to execute generated commands (`IDbCommands`).</span></span> <span data-ttu-id="b97c6-145">Para obter mais informações, consulte <xref:System.Data.IDbCommand.CommandTimeout%2A>.</span><span class="sxs-lookup"><span data-stu-id="b97c6-145">For more information, see <xref:System.Data.IDbCommand.CommandTimeout%2A>.</span></span>  
  
 <span data-ttu-id="b97c6-146">Quando essa propriedade não é definida, o valor padrão de <xref:System.Data.IDbCommand.CommandTimeout%2A> é usado para execução do comando de consulta.</span><span class="sxs-lookup"><span data-stu-id="b97c6-146">When this property is not set, the default value of <xref:System.Data.IDbCommand.CommandTimeout%2A> is used for query command execution.</span></span> <span data-ttu-id="b97c6-147">O valor padrão é definido pelo provedor de armazenamento.</span><span class="sxs-lookup"><span data-stu-id="b97c6-147">This default value is set by the storage provider.</span></span> <span data-ttu-id="b97c6-148">Observe que alguns provedores podem gerar exceções se esse valor é definido como um valor diferente de zero.</span><span class="sxs-lookup"><span data-stu-id="b97c6-148">Note that some providers may throw exceptions if this value is set to a non-zero value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbConnection Connection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.Connection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connection As DbConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbConnection ^ Connection { System::Data::Common::DbConnection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Connection : System.Data.Common.DbConnection" Usage="System.Data.Linq.DataContext.Connection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b97c6-149">Obtém a conexão usada pela estrutura.</span><span class="sxs-lookup"><span data-stu-id="b97c6-149">Gets the connection used by the framework.</span></span></summary>
        <value><span data-ttu-id="b97c6-150">A conexão usada pela estrutura.</span><span class="sxs-lookup"><span data-stu-id="b97c6-150">The connection used by the framework.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b97c6-151">Você pode usar essa propriedade para interoperar com código do ADO.NET relacional.</span><span class="sxs-lookup"><span data-stu-id="b97c6-151">You can use this property to interoperate with relational ADO.NET code.</span></span>  
  
 <span data-ttu-id="b97c6-152">A conexão retornado será fechado, a menos que tenha sido aberta explicitamente pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="b97c6-152">The returned connection will be closed unless it has been explicitly opened by the user.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDatabase">
      <MemberSignature Language="C#" Value="public void CreateDatabase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateDatabase() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.CreateDatabase" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateDatabase ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateDatabase();" />
      <MemberSignature Language="F#" Value="member this.CreateDatabase : unit -&gt; unit" Usage="dataContext.CreateDatabase " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b97c6-153">Cria um banco de dados no servidor.</span><span class="sxs-lookup"><span data-stu-id="b97c6-153">Creates a database on the server.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b97c6-154">O nome do banco de dados é derivado usando o seguinte algoritmo:</span><span class="sxs-lookup"><span data-stu-id="b97c6-154">The name of the database is derived by using the following algorithm:</span></span>  
  
1. <span data-ttu-id="b97c6-155">Se um banco de dados é identificado na cadeia de conexão, seu nome será usado.</span><span class="sxs-lookup"><span data-stu-id="b97c6-155">If a database is identified in the connection string, its name is used.</span></span>  
1. <span data-ttu-id="b97c6-156">Se um <xref:System.Data.Linq.Mapping.DatabaseAttribute> atributo estiver presente, seu <xref:System.Data.Linq.Mapping.DatabaseAttribute.Name%2A> propriedade é usada como o nome do banco de dados.</span><span class="sxs-lookup"><span data-stu-id="b97c6-156">If a <xref:System.Data.Linq.Mapping.DatabaseAttribute> attribute is present, its <xref:System.Data.Linq.Mapping.DatabaseAttribute.Name%2A> property is used as the name of the database.</span></span>  
1. <span data-ttu-id="b97c6-157">Se não houver nenhuma marca de banco de dados na cadeia de caracteres de conexão e fortemente tipada <xref:System.Data.Linq.DataContext> for usado, um banco de dados que tem o mesmo nome que o <xref:System.Data.Linq.DataContext> herdando da classe é criada.</span><span class="sxs-lookup"><span data-stu-id="b97c6-157">If there is no database tag in the connection string and a strongly typed <xref:System.Data.Linq.DataContext> is used, a database that has the same name as the <xref:System.Data.Linq.DataContext> inheriting class is created.</span></span>  
1. <span data-ttu-id="b97c6-158">Se um fracamente tipada <xref:System.Data.Linq.DataContext> é usado, uma exceção será lançada.</span><span class="sxs-lookup"><span data-stu-id="b97c6-158">If a weakly typed <xref:System.Data.Linq.DataContext> is used, an exception is thrown.</span></span>  
1. <span data-ttu-id="b97c6-159">Se o <xref:System.Data.Linq.DataContext> foi criado usando um nome de arquivo, o banco de dados correspondente para o nome do arquivo é criado.</span><span class="sxs-lookup"><span data-stu-id="b97c6-159">If the <xref:System.Data.Linq.DataContext> has been created by using a file name, the database corresponding to that file name is created.</span></span>  
     
  
## Examples  
 <span data-ttu-id="b97c6-160">O código a seguir mostra como configurar um banco de dados temporário e, em seguida, removê-lo.</span><span class="sxs-lookup"><span data-stu-id="b97c6-160">The following code shows how to set up a temporary database and then remove it.</span></span>  
  
 [!code-csharp[System.Data.Linq.DataContext#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.DataContext/cs/Program.cs#1)]
 [!code-vb[System.Data.Linq.DataContext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.DataContext/vb/Module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/fb7f23c4-4572-4c38-9898-a287807d070c"><span data-ttu-id="b97c6-161">Como: Criar dinamicamente um banco de dados (LINQ to SQL)</span><span class="sxs-lookup"><span data-stu-id="b97c6-161">How to: Dynamically Create a Database (LINQ to SQL)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/4ed76327-54a7-414b-82a9-7579bfcec04b"><span data-ttu-id="b97c6-162">Mapeamento de tipo de SQL-CLR (LINQ to SQL)</span><span class="sxs-lookup"><span data-stu-id="b97c6-162">SQL-CLR Type Mapping (LINQ to SQL)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateMethodCallQuery&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="protected internal System.Linq.IQueryable&lt;TResult&gt; CreateMethodCallQuery&lt;TResult&gt; (object instance, System.Reflection.MethodInfo methodInfo, params object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.Linq.IQueryable`1&lt;!!TResult&gt; CreateMethodCallQuery&lt;TResult&gt;(object instance, class System.Reflection.MethodInfo methodInfo, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.CreateMethodCallQuery``1(System.Object,System.Reflection.MethodInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Linq::IQueryable&lt;TResult&gt; ^ CreateMethodCallQuery(System::Object ^ instance, System::Reflection::MethodInfo ^ methodInfo, ... cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.CreateMethodCallQuery : obj * System.Reflection.MethodInfo * obj[] -&gt; System.Linq.IQueryable&lt;'Result&gt;" Usage="dataContext.CreateMethodCallQuery (instance, methodInfo, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="methodInfo" Type="System.Reflection.MethodInfo" />
        <Parameter Name="parameters" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="b97c6-163">O tipo dos elementos na coleção retornada.</span><span class="sxs-lookup"><span data-stu-id="b97c6-163">The type of the elements in the returned collection.</span></span></typeparam>
        <param name="instance"><span data-ttu-id="b97c6-164">A instância da invocação do método (o objeto atual).</span><span class="sxs-lookup"><span data-stu-id="b97c6-164">The instance of the method invocation (the current object).</span></span></param>
        <param name="methodInfo"><span data-ttu-id="b97c6-165">O <see cref="T:System.Reflection.MethodInfo" /> que identifica o método .NET que corresponde a um método de banco de dados.</span><span class="sxs-lookup"><span data-stu-id="b97c6-165">The <see cref="T:System.Reflection.MethodInfo" /> that identifies the .NET method that corresponds to a database method.</span></span></param>
        <param name="parameters"><span data-ttu-id="b97c6-166">A matriz de parâmetros a serem passados para o comando.</span><span class="sxs-lookup"><span data-stu-id="b97c6-166">The array of parameters to be passed to the command.</span></span></param>
        <summary><span data-ttu-id="b97c6-167">Executa a função de banco de dados com valor de tabela associada ao método .NET especificado.</span><span class="sxs-lookup"><span data-stu-id="b97c6-167">Executes the table-valued database function associated with the specified .NET method.</span></span></summary>
        <returns><span data-ttu-id="b97c6-168">Uma coleção de valores resultantes retornada pela consulta de banco de dados.</span><span class="sxs-lookup"><span data-stu-id="b97c6-168">A collection of resultant values returned by the database query.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b97c6-169">O <xref:System.Data.Linq.DataContext.CreateMethodCallQuery%2A> método é usado no código gerado automaticamente e atua como um proxy para funções de banco de dados.</span><span class="sxs-lookup"><span data-stu-id="b97c6-169">The <xref:System.Data.Linq.DataContext.CreateMethodCallQuery%2A> method is used in automatically generated code and acts as a proxy to database functions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DatabaseExists">
      <MemberSignature Language="C#" Value="public bool DatabaseExists ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool DatabaseExists() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.DatabaseExists" />
      <MemberSignature Language="VB.NET" Value="Public Function DatabaseExists () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool DatabaseExists();" />
      <MemberSignature Language="F#" Value="member this.DatabaseExists : unit -&gt; bool" Usage="dataContext.DatabaseExists " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b97c6-170">Determina se o banco de dados associado pode ser aberto.</span><span class="sxs-lookup"><span data-stu-id="b97c6-170">Determines whether the associated database can be opened.</span></span></summary>
        <returns><span data-ttu-id="b97c6-171"><see langword="true" /> se o banco de dados especificado puder ser aberto; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b97c6-171"><see langword="true" /> if the specified database can be opened; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b97c6-172">Esse método usa a conexão no <xref:System.Data.Linq.DataContext.Connection%2A> propriedade para tentar abrir o banco de dados associado.</span><span class="sxs-lookup"><span data-stu-id="b97c6-172">This method uses the connection in the <xref:System.Data.Linq.DataContext.Connection%2A> property to attempt to open the associated database.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b97c6-173">O exemplo a seguir usa esse método para determinar se um banco de dados já existe.</span><span class="sxs-lookup"><span data-stu-id="b97c6-173">The following example uses this method to determine whether a database already exists.</span></span>  
  
 [!code-csharp[System.Data.Linq.DataContext#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.DataContext/cs/Program.cs#1)]
 [!code-vb[System.Data.Linq.DataContext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.DataContext/vb/Module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferredLoadingEnabled">
      <MemberSignature Language="C#" Value="public bool DeferredLoadingEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DeferredLoadingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.DeferredLoadingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property DeferredLoadingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DeferredLoadingEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DeferredLoadingEnabled : bool with get, set" Usage="System.Data.Linq.DataContext.DeferredLoadingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b97c6-174">Obtém ou define um valor que indica se relações de um-para-muitos ou de um-para-um devem ter o carregamento adiado.</span><span class="sxs-lookup"><span data-stu-id="b97c6-174">Gets or sets a value that indicates whether to delay-load one-to-many or one-to-one relationships.</span></span></summary>
        <value><span data-ttu-id="b97c6-175"><see langword="true" /> se o adiamento de carregamento for habilitado; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b97c6-175"><see langword="true" /> if deferred loading is enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b97c6-176">Quando o código acessa uma das relações, nulas será retornado se a relação é um para um, e uma coleção vazia será retornada se ele for um-para-muitos.</span><span class="sxs-lookup"><span data-stu-id="b97c6-176">When the code accesses one of these relationships, null is returned if the relationship is one-to-one, and an empty collection is returned if it is one-to-many.</span></span> <span data-ttu-id="b97c6-177">As relações ainda poderão ser preenchidas, definindo o <xref:System.Data.Linq.DataContext.LoadOptions%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="b97c6-177">The relationships can still be filled by setting the <xref:System.Data.Linq.DataContext.LoadOptions%2A> property.</span></span>  
  
 <span data-ttu-id="b97c6-178">O cenário principal para essa propriedade é para que você possa extrair uma parte do modelo de objeto e enviá-las (por exemplo, para um serviço da Web).</span><span class="sxs-lookup"><span data-stu-id="b97c6-178">The main scenario for this property is to enable you to extract a piece of the object model and send it out (for example, to a Web service).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b97c6-179">Se essa propriedade é definida como `false` depois que uma consulta foi executada, uma exceção será lançada.</span><span class="sxs-lookup"><span data-stu-id="b97c6-179">If this property is set to `false` after a query has been executed, an exception is thrown.</span></span> <span data-ttu-id="b97c6-180">Consulte a **modos válidos** seção abaixo para obter mais informações.</span><span class="sxs-lookup"><span data-stu-id="b97c6-180">See the **Valid Modes** section below for more information.</span></span>  
  
## <a name="valid-modes"></a><span data-ttu-id="b97c6-181">Modos válidos</span><span class="sxs-lookup"><span data-stu-id="b97c6-181">Valid modes</span></span>  
 <span data-ttu-id="b97c6-182">Carregamento adiado requer um acompanhamento de objeto.</span><span class="sxs-lookup"><span data-stu-id="b97c6-182">Deferred loading requires object tracking.</span></span> <span data-ttu-id="b97c6-183">Somente os três seguintes modos são válidos:</span><span class="sxs-lookup"><span data-stu-id="b97c6-183">Only the following three modes are valid:</span></span>  
  
-   <span data-ttu-id="b97c6-184"><xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> = `false`.</span><span class="sxs-lookup"><span data-stu-id="b97c6-184"><xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> = `false`.</span></span> <span data-ttu-id="b97c6-185"><xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> é ignorado e inferida para ser `false`.</span><span class="sxs-lookup"><span data-stu-id="b97c6-185"><xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> is ignored and inferred to be `false`.</span></span> <span data-ttu-id="b97c6-186">Esse comportamento corresponde a um somente leitura <xref:System.Data.Linq.DataContext>.</span><span class="sxs-lookup"><span data-stu-id="b97c6-186">This behavior corresponds to a read-only <xref:System.Data.Linq.DataContext>.</span></span>  
  
-   <span data-ttu-id="b97c6-187"><xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> = `true`.</span><span class="sxs-lookup"><span data-stu-id="b97c6-187"><xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> = `true`.</span></span> <span data-ttu-id="b97c6-188"><xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> = `false`.</span><span class="sxs-lookup"><span data-stu-id="b97c6-188"><xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> = `false`.</span></span> <span data-ttu-id="b97c6-189">Essa situação corresponde a um <xref:System.Data.Linq.DataContext> que permite aos usuários carregar um grafo de objeto usando <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> diretivas, mas ele não habilita o carregamento adiado.</span><span class="sxs-lookup"><span data-stu-id="b97c6-189">This situation corresponds to a <xref:System.Data.Linq.DataContext> that allows users to load an object graph by using <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> directives, but it does not enable deferred loading.</span></span>  
  
-   <span data-ttu-id="b97c6-190">Ambos são definidas como `true`.</span><span class="sxs-lookup"><span data-stu-id="b97c6-190">Both are set to `true`.</span></span> <span data-ttu-id="b97c6-191">Esse é o padrão.</span><span class="sxs-lookup"><span data-stu-id="b97c6-191">This is the default.</span></span>  
  
 <span data-ttu-id="b97c6-192">Os sinalizadores não podem ser alterados depois que uma consulta é executada.</span><span class="sxs-lookup"><span data-stu-id="b97c6-192">The flags may not be changed after a query has been executed.</span></span> <span data-ttu-id="b97c6-193">Qualquer alteração após a execução da primeira consulta que usa que <xref:System.Data.Linq.DataContext> gera uma exceção.</span><span class="sxs-lookup"><span data-stu-id="b97c6-193">Any change after the execution of the first query that uses that <xref:System.Data.Linq.DataContext> throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteDatabase">
      <MemberSignature Language="C#" Value="public void DeleteDatabase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteDatabase() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.DeleteDatabase" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteDatabase ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteDatabase();" />
      <MemberSignature Language="F#" Value="member this.DeleteDatabase : unit -&gt; unit" Usage="dataContext.DeleteDatabase " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b97c6-194">Exclui o banco de dados associado.</span><span class="sxs-lookup"><span data-stu-id="b97c6-194">Deletes the associated database.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b97c6-195">Esse método usa a conexão no <xref:System.Data.Linq.DataContext.Connection%2A> propriedade para identificar o banco de dados a ser excluído.</span><span class="sxs-lookup"><span data-stu-id="b97c6-195">This method uses the connection in the <xref:System.Data.Linq.DataContext.Connection%2A> property to identify the database to be deleted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b97c6-196">O exemplo a seguir mostra como excluir um banco de dados que foi criado temporariamente.</span><span class="sxs-lookup"><span data-stu-id="b97c6-196">The following example shows how to delete a database that has been temporarily created.</span></span>  
  
 [!code-csharp[System.Data.Linq.DataContext#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.DataContext/cs/Program.cs#1)]
 [!code-vb[System.Data.Linq.DataContext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.DataContext/vb/Module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Data.Linq.DataContext.Dispose" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b97c6-197">Libera os recursos usados pela classe <see cref="T:System.Data.Linq.DataContext" />.</span><span class="sxs-lookup"><span data-stu-id="b97c6-197">Releases the resources used by the <see cref="T:System.Data.Linq.DataContext" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="dataContext.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b97c6-198">Libera todos os recursos usados pela instância atual da classe <see cref="T:System.Data.Linq.DataContext" />.</span><span class="sxs-lookup"><span data-stu-id="b97c6-198">Releases all resources used by the current instance of the <see cref="T:System.Data.Linq.DataContext" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="dataContext.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="b97c6-199"><see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</span><span class="sxs-lookup"><span data-stu-id="b97c6-199"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="b97c6-200">Libera os recursos não gerenciados usados pela classe <see cref="T:System.Data.Linq.DataContext" /> e, opcionalmente, libera o recurso gerenciado.</span><span class="sxs-lookup"><span data-stu-id="b97c6-200">Releases the unmanaged resources used by the <see cref="T:System.Data.Linq.DataContext" /> class and optionally releases the managed resource.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteCommand">
      <MemberSignature Language="C#" Value="public int ExecuteCommand (string command, params object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ExecuteCommand(string command, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.ExecuteCommand(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteCommand (command As String, ParamArray parameters As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ExecuteCommand(System::String ^ command, ... cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.ExecuteCommand : string * obj[] -&gt; int" Usage="dataContext.ExecuteCommand (command, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="command"><span data-ttu-id="b97c6-201">O comando SQL ser executado.</span><span class="sxs-lookup"><span data-stu-id="b97c6-201">The SQL command to be executed.</span></span></param>
        <param name="parameters"><span data-ttu-id="b97c6-202">A matriz de parâmetros a serem passados para o comando.</span><span class="sxs-lookup"><span data-stu-id="b97c6-202">The array of parameters to be passed to the command.</span></span> <span data-ttu-id="b97c6-203">Observe o seguinte comportamento:</span><span class="sxs-lookup"><span data-stu-id="b97c6-203">Note the following behavior:</span></span> 
<span data-ttu-id="b97c6-204">Se o número de objetos na matriz for menor que o maior número identificado na cadeia de caracteres de comando, uma exceção será gerada.</span><span class="sxs-lookup"><span data-stu-id="b97c6-204">If the number of objects in the array is less than the highest number identified in the command string, an exception is thrown.</span></span>  
  
<span data-ttu-id="b97c6-205">Se a matriz contiver objetos que não são referenciados na cadeia de caracteres de comando, nenhuma exceção será gerada.</span><span class="sxs-lookup"><span data-stu-id="b97c6-205">If the array contains objects that are not referenced in the command string, no exception is thrown.</span></span>  
  
<span data-ttu-id="b97c6-206">Se um dos parâmetros for nulo, ele será convertido em <see langword="DBNull.Value" />.</span><span class="sxs-lookup"><span data-stu-id="b97c6-206">If any one of the parameters is null, it is converted to <see langword="DBNull.Value" />.</span></span></param>
        <summary><span data-ttu-id="b97c6-207">Executa comandos SQL diretamente no banco de dados.</span><span class="sxs-lookup"><span data-stu-id="b97c6-207">Executes SQL commands directly on the database.</span></span></summary>
        <returns><span data-ttu-id="b97c6-208">O número de linhas modificadas pelo comando executado.</span><span class="sxs-lookup"><span data-stu-id="b97c6-208">The number of rows modified by the executed command.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b97c6-209">Esse método é um mecanismo de passagem para casos em que [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] não fornece adequadamente para um cenário específico.</span><span class="sxs-lookup"><span data-stu-id="b97c6-209">This method is a pass-through mechanism for cases where [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] does not adequately provide for a particular scenario.</span></span>  
  
 <span data-ttu-id="b97c6-210">A sintaxe do comando é quase o mesmo que a sintaxe usada para criar um ADO.NET `DataCommand`.</span><span class="sxs-lookup"><span data-stu-id="b97c6-210">The syntax for the command is almost the same as the syntax used to create an ADO.NET `DataCommand`.</span></span> <span data-ttu-id="b97c6-211">A única diferença está em como os parâmetros são especificados.</span><span class="sxs-lookup"><span data-stu-id="b97c6-211">The only difference is in how the parameters are specified.</span></span> <span data-ttu-id="b97c6-212">Especificamente, você pode especificar parâmetros, colocando-os entre chaves ({...}) e enumerá-los a partir de 0.</span><span class="sxs-lookup"><span data-stu-id="b97c6-212">Specifically, you specify parameters by enclosing them in braces ({…}) and enumerate them starting from 0.</span></span> <span data-ttu-id="b97c6-213">O parâmetro é associado ao objeto igualmente numerado na matriz de parâmetros.</span><span class="sxs-lookup"><span data-stu-id="b97c6-213">The parameter is associated with the equally numbered object in the parameters array.</span></span>  
  
 <span data-ttu-id="b97c6-214">`ExecuteQuery` e `ExecuteCommand` permitem que você especifique um número variável de argumentos para a substituição de parâmetro.</span><span class="sxs-lookup"><span data-stu-id="b97c6-214">`ExecuteQuery` and `ExecuteCommand` allow you to specify a variable number of arguments for parameter substitution.</span></span> <span data-ttu-id="b97c6-215">Por exemplo, você pode especificar os parâmetros ao invocar ExecuteQuery\<TResult >:</span><span class="sxs-lookup"><span data-stu-id="b97c6-215">For example, you can specify the parameters when invoking ExecuteQuery\<TResult>:</span></span>  
  
```  
db.ExecuteQuery<Customer>("select * from dbo.Customers where City = {0}", "London");  
```  
  
 <span data-ttu-id="b97c6-216">E outro exemplo:</span><span class="sxs-lookup"><span data-stu-id="b97c6-216">And, another example:</span></span>  
  
```  
db.ExecuteCommand("UPDATE Products SET QuantityPerUnit = {0} WHERE ProductID = {1}", "24 boxes", 5);  
```  
  
 <span data-ttu-id="b97c6-217">O exemplo a seguir abre uma conexão e passa um SQL `UPDATE` comando com o mecanismo SQL.</span><span class="sxs-lookup"><span data-stu-id="b97c6-217">The following example opens a connection and passes a SQL `UPDATE` command to the SQL engine.</span></span>  
  
   
  
## Examples  
 [!code-csharp[DLinqCommunicatingWithDatabase#3](~/samples/snippets/csharp/VS_Snippets_Data/DLinqCommunicatingWithDatabase/cs/Program.cs#3)]
 [!code-vb[DLinqCommunicatingWithDatabase#3](~/samples/snippets/visualbasic/VS_Snippets_Data/DLinqCommunicatingWithDatabase/vb/Module1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDynamicDelete">
      <MemberSignature Language="C#" Value="protected internal void ExecuteDynamicDelete (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void ExecuteDynamicDelete(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.ExecuteDynamicDelete(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub ExecuteDynamicDelete (entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void ExecuteDynamicDelete(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.ExecuteDynamicDelete : obj -&gt; unit" Usage="dataContext.ExecuteDynamicDelete entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity"><span data-ttu-id="b97c6-218">A entidade a ser excluída.</span><span class="sxs-lookup"><span data-stu-id="b97c6-218">The entity to be deleted.</span></span></param>
        <summary><span data-ttu-id="b97c6-219">É executado, dentro de métodos de substituição de exclusão, para redelegar para [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] a tarefa de geração e execução de SQL dinâmico para operações de exclusão.</span><span class="sxs-lookup"><span data-stu-id="b97c6-219">Executes, inside delete override methods, to redelegate to [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] the task of generating and executing dynamic SQL for delete operations.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b97c6-220">Consulte <xref:System.Data.Linq.DataContext.ExecuteDynamicInsert%2A>.</span><span class="sxs-lookup"><span data-stu-id="b97c6-220">See <xref:System.Data.Linq.DataContext.ExecuteDynamicInsert%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDynamicInsert">
      <MemberSignature Language="C#" Value="protected internal void ExecuteDynamicInsert (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void ExecuteDynamicInsert(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.ExecuteDynamicInsert(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub ExecuteDynamicInsert (entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void ExecuteDynamicInsert(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.ExecuteDynamicInsert : obj -&gt; unit" Usage="dataContext.ExecuteDynamicInsert entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity"><span data-ttu-id="b97c6-221">A entidade a ser inserida.</span><span class="sxs-lookup"><span data-stu-id="b97c6-221">The entity to be inserted.</span></span></param>
        <summary><span data-ttu-id="b97c6-222">É executado, dentro de métodos de substituição de inserção, para delegar novamente para [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] a tarefa de gerar e executar SQL dinâmico para operações de inserção.</span><span class="sxs-lookup"><span data-stu-id="b97c6-222">Executes, inside insert override methods, to redelegate to [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] the task of generating and executing dynamic SQL for insert operations.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b97c6-223">Observe as seguintes considerações:</span><span class="sxs-lookup"><span data-stu-id="b97c6-223">Note the following considerations:</span></span>  
  
-   <span data-ttu-id="b97c6-224">Como o método tem um modificador protegido, seu uso exige a criação de subclasses <xref:System.Data.Linq.DataContext>.</span><span class="sxs-lookup"><span data-stu-id="b97c6-224">Because the method has a protected modifier, its use requires subclassing <xref:System.Data.Linq.DataContext>.</span></span>  
  
-   <span data-ttu-id="b97c6-225">Uma exceção é gerada se essa operação não é chamada dentro de um <xref:System.Data.Linq.DataContext.SubmitChanges%2A> operação.</span><span class="sxs-lookup"><span data-stu-id="b97c6-225">An exception is thrown if this operation is not called inside a <xref:System.Data.Linq.DataContext.SubmitChanges%2A> operation.</span></span> <span data-ttu-id="b97c6-226">Ele não se destina a ser chamado como uma operação autônoma fora do escopo de um <xref:System.Data.Linq.DataContext.SubmitChanges%2A> operação.</span><span class="sxs-lookup"><span data-stu-id="b97c6-226">It is not intended to be called as a stand-alone operation outside the scope of a <xref:System.Data.Linq.DataContext.SubmitChanges%2A> operation.</span></span> <span data-ttu-id="b97c6-227"><xref:System.Data.Linq.DataContext.SubmitChanges%2A> em si chamadas substituem métodos se eles são implementados e os métodos anteriores são se destina a ser chamada dentro de métodos de substituição.</span><span class="sxs-lookup"><span data-stu-id="b97c6-227"><xref:System.Data.Linq.DataContext.SubmitChanges%2A> itself calls override methods if they are implemented and the previous methods are intended to be called inside the override methods.</span></span>  
  
-   <span data-ttu-id="b97c6-228">É responsabilidade do desenvolvedor para passar na entidade correta.</span><span class="sxs-lookup"><span data-stu-id="b97c6-228">It is the responsibility of the developer to pass in the correct entity.</span></span> <span data-ttu-id="b97c6-229">A implementação verifica que a entidade passada é rastreada.</span><span class="sxs-lookup"><span data-stu-id="b97c6-229">The implementation verifies that the passed-in entity is tracked.</span></span> <span data-ttu-id="b97c6-230">No entanto, é responsabilidade do desenvolvedor para manter a ordem ou passe na mesma entidade duas vezes.</span><span class="sxs-lookup"><span data-stu-id="b97c6-230">However, it is the responsibility of the developer to maintain the order or pass in the same entity two times.</span></span>  
  
-   <span data-ttu-id="b97c6-231">É responsabilidade do desenvolvedor para invocar a API dinâmico correto.</span><span class="sxs-lookup"><span data-stu-id="b97c6-231">It is the responsibility of the developer to invoke the correct dynamic API.</span></span> <span data-ttu-id="b97c6-232">Por exemplo, nos `Update` substituir o método, apenas o <xref:System.Data.Linq.DataContext.ExecuteDynamicUpdate%2A> método pode ser chamado.</span><span class="sxs-lookup"><span data-stu-id="b97c6-232">For example, in the `Update` override method, only the <xref:System.Data.Linq.DataContext.ExecuteDynamicUpdate%2A> method can be called.</span></span> [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] <span data-ttu-id="b97c6-233">não detecta ou não verifica se o método dinâmico chamado corresponde a operação aplicável.</span><span class="sxs-lookup"><span data-stu-id="b97c6-233">does not detect or verify whether the invoked dynamic method matches the applicable operation.</span></span> <span data-ttu-id="b97c6-234">Os resultados serão indefinidos se um método inaplicável é chamado (por exemplo, chamar <xref:System.Data.Linq.DataContext.ExecuteDynamicDelete%2A> para um objeto a ser atualizado).</span><span class="sxs-lookup"><span data-stu-id="b97c6-234">The results are undefined if an inapplicable method is called (for example, calling <xref:System.Data.Linq.DataContext.ExecuteDynamicDelete%2A> for an object to be updated).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDynamicUpdate">
      <MemberSignature Language="C#" Value="protected internal void ExecuteDynamicUpdate (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void ExecuteDynamicUpdate(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.ExecuteDynamicUpdate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub ExecuteDynamicUpdate (entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void ExecuteDynamicUpdate(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.ExecuteDynamicUpdate : obj -&gt; unit" Usage="dataContext.ExecuteDynamicUpdate entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity"><span data-ttu-id="b97c6-235">A entidade a ser atualizada.</span><span class="sxs-lookup"><span data-stu-id="b97c6-235">The entity to be updated.</span></span></param>
        <summary><span data-ttu-id="b97c6-236">É executado, dentro de métodos de substituição de atualização, para redelegar para [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] a tarefa de geração e execução de SQL dinâmico para operações de atualização.</span><span class="sxs-lookup"><span data-stu-id="b97c6-236">Executes, inside update override methods, to redelegate to [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] the task of generating and executing dynamic SQL for update operations.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b97c6-237">Consulte <xref:System.Data.Linq.DataContext.ExecuteDynamicInsert%2A>.</span><span class="sxs-lookup"><span data-stu-id="b97c6-237">See <xref:System.Data.Linq.DataContext.ExecuteDynamicInsert%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteMethodCall">
      <MemberSignature Language="C#" Value="protected System.Data.Linq.IExecuteResult ExecuteMethodCall (object instance, System.Reflection.MethodInfo methodInfo, params object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Data.Linq.IExecuteResult ExecuteMethodCall(object instance, class System.Reflection.MethodInfo methodInfo, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.ExecuteMethodCall(System.Object,System.Reflection.MethodInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Data::Linq::IExecuteResult ^ ExecuteMethodCall(System::Object ^ instance, System::Reflection::MethodInfo ^ methodInfo, ... cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.ExecuteMethodCall : obj * System.Reflection.MethodInfo * obj[] -&gt; System.Data.Linq.IExecuteResult" Usage="dataContext.ExecuteMethodCall (instance, methodInfo, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.IExecuteResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="methodInfo" Type="System.Reflection.MethodInfo" />
        <Parameter Name="parameters" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="b97c6-238">A instância da invocação do método (o objeto atual).</span><span class="sxs-lookup"><span data-stu-id="b97c6-238">The instance of the method invocation (the current object).</span></span></param>
        <param name="methodInfo"><span data-ttu-id="b97c6-239">Identifica o método .NET que corresponde a um método de banco de dados.</span><span class="sxs-lookup"><span data-stu-id="b97c6-239">Identifies the .NET method that corresponds to a database method.</span></span></param>
        <param name="parameters"><span data-ttu-id="b97c6-240">A matriz de parâmetros a serem passados para o comando.</span><span class="sxs-lookup"><span data-stu-id="b97c6-240">The array of parameters to be passed to the command.</span></span></param>
        <summary><span data-ttu-id="b97c6-241">Executa o procedimento armazenado do banco de dados ou a função escalar associada com o método .NET especificado.</span><span class="sxs-lookup"><span data-stu-id="b97c6-241">Executes the stored database procedure or scalar function associated with the specified .NET method.</span></span></summary>
        <returns><span data-ttu-id="b97c6-242">O resultado (o valor retornado e parâmetros de saída) da execução do método especificado.</span><span class="sxs-lookup"><span data-stu-id="b97c6-242">The result (the return value and output parameters) of executing the specified method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b97c6-243">O <xref:System.Data.Linq.DataContext.ExecuteMethodCall%2A> método é usado no código gerado automaticamente e atua como um proxy para funções de banco de dados.</span><span class="sxs-lookup"><span data-stu-id="b97c6-243">The <xref:System.Data.Linq.DataContext.ExecuteMethodCall%2A> method is used in automatically generated code and acts as a proxy to database functions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteQuery">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable ExecuteQuery (Type elementType, string query, params object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerable ExecuteQuery(class System.Type elementType, string query, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.ExecuteQuery(System.Type,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteQuery (elementType As Type, query As String, ParamArray parameters As Object()) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerable ^ ExecuteQuery(Type ^ elementType, System::String ^ query, ... cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.ExecuteQuery : Type * string * obj[] -&gt; System.Collections.IEnumerable" Usage="dataContext.ExecuteQuery (elementType, query, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementType" Type="System.Type" />
        <Parameter Name="query" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="elementType"><span data-ttu-id="b97c6-244">O tipo dos <see cref="T:System.Collections.Generic.IEnumerable`1" /> a serem retornados.</span><span class="sxs-lookup"><span data-stu-id="b97c6-244">The type of the <see cref="T:System.Collections.Generic.IEnumerable`1" /> to be returned.</span></span>  
  
<span data-ttu-id="b97c6-245">O algoritmo para colunas correspondentes nos resultados da consulta para campos ou propriedades no objeto funciona da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="b97c6-245">The algorithm for matching columns in the result of the query to fields or properties in the object works as follows:</span></span> 
<span data-ttu-id="b97c6-246">Se um campo ou propriedade é mapeado para um nome de coluna em particular, o nome dessa coluna é esperado no conjunto de resultados.</span><span class="sxs-lookup"><span data-stu-id="b97c6-246">If a field or property is mapped to a particular column name, that column name is expected in the resultset.</span></span>  
  
<span data-ttu-id="b97c6-247">Se um campo ou propriedade não for mapeado, uma coluna com o mesmo nome do campo ou propriedade é esperada no conjunto de resultados.</span><span class="sxs-lookup"><span data-stu-id="b97c6-247">If a field or property is not mapped, a column with the same name as the field or property is expected in the resultset.</span></span>  
  
<span data-ttu-id="b97c6-248">A comparação é realizada procurando, primeiro, uma correspondência que diferencia maiúsculas de minúsculas.</span><span class="sxs-lookup"><span data-stu-id="b97c6-248">The comparison is performed by looking for a case-sensitive match first.</span></span> <span data-ttu-id="b97c6-249">Se essa correspondência não for encontrada, uma pesquisa subsequente ocorre para uma correspondência que diferencia maiúsculas de minúsculas.</span><span class="sxs-lookup"><span data-stu-id="b97c6-249">If this match is not found, a subsequent search occurs for a case-insensitive match.</span></span>  
  
<span data-ttu-id="b97c6-250">A consulta deve retornar todos os campos rastreados e propriedades do objeto (exceto aqueles que são carregados de forma adiada) quando todas as seguintes condições forem verdadeiras:</span><span class="sxs-lookup"><span data-stu-id="b97c6-250">The query must return all the tracked fields and properties of the object (except those that are loaded on a deferred basis) when all the following conditions are true:</span></span> 
 <span data-ttu-id="b97c6-251"><c>T</c> é uma entidade explicitamente controlada por <see cref="T:System.Data.Linq.DataContext" />.</span><span class="sxs-lookup"><span data-stu-id="b97c6-251"><c>T</c> is an entity explicitly tracked by the <see cref="T:System.Data.Linq.DataContext" />.</span></span>  
  
 <span data-ttu-id="b97c6-252"><see cref="P:System.Data.Linq.DataContext.ObjectTrackingEnabled" /> é <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="b97c6-252"><see cref="P:System.Data.Linq.DataContext.ObjectTrackingEnabled" /> is <see langword="true" />.</span></span>  
  
<span data-ttu-id="b97c6-253">A entidade tem uma chave primária.</span><span class="sxs-lookup"><span data-stu-id="b97c6-253">The entity has a primary key.</span></span>  
  
<span data-ttu-id="b97c6-254">Do contrário, uma exceção será acionada.</span><span class="sxs-lookup"><span data-stu-id="b97c6-254">Otherwise an exception is thrown.</span></span></param>
        <param name="query"><span data-ttu-id="b97c6-255">A consulta SQL a ser executada.</span><span class="sxs-lookup"><span data-stu-id="b97c6-255">The SQL query to be executed.</span></span></param>
        <param name="parameters"><span data-ttu-id="b97c6-256">A matriz de parâmetros a serem passados para o comando.</span><span class="sxs-lookup"><span data-stu-id="b97c6-256">The array of parameters to be passed to the command.</span></span> <span data-ttu-id="b97c6-257">Observe o seguinte comportamento:</span><span class="sxs-lookup"><span data-stu-id="b97c6-257">Note the following behavior:</span></span> 
<span data-ttu-id="b97c6-258">Se o número de objetos na matriz for menor que o maior número identificado na cadeia de caracteres de comando, uma exceção será gerada.</span><span class="sxs-lookup"><span data-stu-id="b97c6-258">If the number of objects in the array is less than the highest number identified in the command string, an exception is thrown.</span></span>  
  
<span data-ttu-id="b97c6-259">Se a matriz contiver objetos que não são referenciados na cadeia de caracteres de comando, nenhuma exceção será gerada.</span><span class="sxs-lookup"><span data-stu-id="b97c6-259">If the array contains objects that are not referenced in the command string, no exception is thrown.</span></span>  
  
<span data-ttu-id="b97c6-260">Se um parâmetro for <see langword="null" />, ele será convertido em <see langword="DBNull.Value" />.</span><span class="sxs-lookup"><span data-stu-id="b97c6-260">If a parameter is <see langword="null" />, it is converted to <see langword="DBNull.Value" />.</span></span></param>
        <summary><span data-ttu-id="b97c6-261">Executa consultas SQL diretamente no banco de dados.</span><span class="sxs-lookup"><span data-stu-id="b97c6-261">Executes SQL queries directly on the database.</span></span></summary>
        <returns><span data-ttu-id="b97c6-262">Uma coleção de objetos <see cref="T:System.Collections.Generic.IEnumerable`1" /> retornada pela consulta.</span><span class="sxs-lookup"><span data-stu-id="b97c6-262">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of objects returned by the query.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteQuery&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;TResult&gt; ExecuteQuery&lt;TResult&gt; (string query, params object[] parameters) where TResult : new();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt; ExecuteQuery&lt;.ctor TResult&gt;(string query, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.ExecuteQuery``1(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteQuery(Of TResult As New) (query As String, ParamArray parameters As Object()) As IEnumerable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; where TResult : gcnew() System::Collections::Generic::IEnumerable&lt;TResult&gt; ^ ExecuteQuery(System::String ^ query, ... cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.ExecuteQuery : string * obj[] -&gt; seq&lt;'Result (requires 'Result : (new : unit -&gt; 'Result))&gt; (requires 'Result : (new : unit -&gt; 'Result))" Usage="dataContext.ExecuteQuery (query, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="b97c6-263">O tipo dos elementos na coleção retornada.</span><span class="sxs-lookup"><span data-stu-id="b97c6-263">The type of the elements in the returned collection.</span></span></typeparam>
        <param name="query"><span data-ttu-id="b97c6-264">A consulta SQL a ser executada.</span><span class="sxs-lookup"><span data-stu-id="b97c6-264">The SQL query to be executed.</span></span></param>
        <param name="parameters"><span data-ttu-id="b97c6-265">A matriz de parâmetros a serem passados para o comando.</span><span class="sxs-lookup"><span data-stu-id="b97c6-265">The array of parameters to be passed to the command.</span></span> <span data-ttu-id="b97c6-266">Observe o seguinte comportamento:</span><span class="sxs-lookup"><span data-stu-id="b97c6-266">Note the following behavior:</span></span> 
<span data-ttu-id="b97c6-267">Se o número de objetos na matriz for menor que o maior número identificado na cadeia de caracteres de comando, uma exceção será gerada.</span><span class="sxs-lookup"><span data-stu-id="b97c6-267">If the number of objects in the array is less than the highest number identified in the command string, an exception is thrown.</span></span>  
  
<span data-ttu-id="b97c6-268">Se a matriz contiver objetos que não são referenciados na cadeia de caracteres de comando, nenhuma exceção será gerada.</span><span class="sxs-lookup"><span data-stu-id="b97c6-268">If the array contains objects that are not referenced in the command string, no exception is thrown.</span></span>  
  
<span data-ttu-id="b97c6-269">Se um parâmetro for nulo, ele será convertido em <see langword="DBNull.Value" />.</span><span class="sxs-lookup"><span data-stu-id="b97c6-269">If a parameter is null, it is converted to <see langword="DBNull.Value" />.</span></span></param>
        <summary><span data-ttu-id="b97c6-270">Executa consultas SQL diretamente no banco de dados e retorna objetos.</span><span class="sxs-lookup"><span data-stu-id="b97c6-270">Executes SQL queries directly on the database and returns objects.</span></span></summary>
        <returns><span data-ttu-id="b97c6-271">Uma coleção de objetos retornada pela consulta.</span><span class="sxs-lookup"><span data-stu-id="b97c6-271">A collection of objects returned by the query.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b97c6-272">Esse método é um mecanismo de passagem para casos em que [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] não fornece um cenário específico.</span><span class="sxs-lookup"><span data-stu-id="b97c6-272">This method is a pass-through mechanism for cases where [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] does not provide for a particular scenario.</span></span>  
  
 <span data-ttu-id="b97c6-273">O algoritmo para colunas correspondentes nos resultados da consulta para campos e propriedades no objeto funciona da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="b97c6-273">The algorithm for matching columns in the result of the query to fields and properties in the object works as follows:</span></span>  
  
-   <span data-ttu-id="b97c6-274">Se um campo ou propriedade é mapeado para um nome de coluna em particular, o nome dessa coluna é esperado no conjunto de resultados.</span><span class="sxs-lookup"><span data-stu-id="b97c6-274">If a field or property is mapped to a particular column name, that column name is expected in the resultset.</span></span>  
  
-   <span data-ttu-id="b97c6-275">Se um campo ou propriedade não for mapeado, uma coluna com o mesmo nome do campo ou propriedade é esperada no conjunto de resultados.</span><span class="sxs-lookup"><span data-stu-id="b97c6-275">If a field or property is not mapped, a column with the same name as the field or property is expected in the resultset.</span></span>  
  
-   <span data-ttu-id="b97c6-276">A comparação é executada primeiro procurando uma correspondência diferencia maiusculas de minúsculas.</span><span class="sxs-lookup"><span data-stu-id="b97c6-276">The comparison is performed by first looking for a case-sensitive match.</span></span> <span data-ttu-id="b97c6-277">Se essa correspondência não for encontrada, uma pesquisa subsequente ocorre para que a correspondência diferencia maiusculas de minúsculas.</span><span class="sxs-lookup"><span data-stu-id="b97c6-277">If such a match is not found, a subsequent search occurs for a case-insensitive match.</span></span>  
  
-   <span data-ttu-id="b97c6-278">A consulta deve retornar todos os campos rastreados e propriedades do objeto (além de os sujeitos a carga adiada) quando todos os itens a seguir forem verdadeiras:</span><span class="sxs-lookup"><span data-stu-id="b97c6-278">The query must return all the tracked fields and properties of the object (apart from those subject to deferred loading) when all the following are true:</span></span>  
  
    -   <span data-ttu-id="b97c6-279">Se `<T>` é uma entidade explicitamente controlada pela <xref:System.Data.Linq.DataContext>.</span><span class="sxs-lookup"><span data-stu-id="b97c6-279">If `<T>` is an entity explicitly tracked by the <xref:System.Data.Linq.DataContext>.</span></span>  
  
    -   <span data-ttu-id="b97c6-280">ObjectTrackingEnabled é verdadeiro.</span><span class="sxs-lookup"><span data-stu-id="b97c6-280">ObjectTrackingEnabled is true.</span></span>  
  
    -   <span data-ttu-id="b97c6-281">A entidade tem uma chave primária.</span><span class="sxs-lookup"><span data-stu-id="b97c6-281">The entity has a primary key.</span></span>  
  
     <span data-ttu-id="b97c6-282">Do contrário, uma exceção será acionada.</span><span class="sxs-lookup"><span data-stu-id="b97c6-282">Otherwise an exception is thrown.</span></span>  
  
-   <span data-ttu-id="b97c6-283">Em todos os outros casos, a consulta pode recuperar apenas um subconjunto dos campos rastreados e propriedades para o objeto.</span><span class="sxs-lookup"><span data-stu-id="b97c6-283">In all other cases, the query can retrieve just a subset of the tracked fields and properties for the object.</span></span>  
  
 <span data-ttu-id="b97c6-284">O trecho em C# a seguir mostra um uso para esse método:</span><span class="sxs-lookup"><span data-stu-id="b97c6-284">The following C# snippet shows one use for this method:</span></span>  
  
```  
var customers = db.ExecuteQuery<Customer>(@"SELECT CustomerID, CompanyName, ContactName, ContactTitle,   
   Address, City, Region, PostalCode, Country, Phone, Fax  
   FROM   dbo.Customers  
   WHERE  City = {0}", "London");  
  
foreach (Customer c in customers)  
   Console.WriteLine(c.ContactName);  
```  
  
 <span data-ttu-id="b97c6-285">No Visual Basic</span><span class="sxs-lookup"><span data-stu-id="b97c6-285">In Visual Basic</span></span>  
  
```  
Dim customers = db.ExecuteQuery(Of Customer)("SELECT CustomerID, _    CompanyName, ContactName, ContactTitle, _  
   Address, City, Region, PostalCode, Country, Phone, Fax _  
   FROM dbo.Customers _  
WHERE City = {0}", "London")  
  
For Each c As Customer In customers  
    Console.WriteLine(c.ContactName)  
Next  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChangeSet">
      <MemberSignature Language="C#" Value="public System.Data.Linq.ChangeSet GetChangeSet ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Linq.ChangeSet GetChangeSet() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.GetChangeSet" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChangeSet () As ChangeSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Linq::ChangeSet ^ GetChangeSet();" />
      <MemberSignature Language="F#" Value="member this.GetChangeSet : unit -&gt; System.Data.Linq.ChangeSet" Usage="dataContext.GetChangeSet " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.ChangeSet</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b97c6-286">Obtém os objetos modificados controlados pelo <see cref="T:System.Data.Linq.DataContext" />.</span><span class="sxs-lookup"><span data-stu-id="b97c6-286">Gets the modified objects tracked by <see cref="T:System.Data.Linq.DataContext" />.</span></span></summary>
        <returns><span data-ttu-id="b97c6-287">O conjunto de objetos é retornado como três coleções somente leitura.</span><span class="sxs-lookup"><span data-stu-id="b97c6-287">The set of objects is returned as three read-only collections.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b97c6-288">Observe as seguintes considerações:</span><span class="sxs-lookup"><span data-stu-id="b97c6-288">Note the following considerations:</span></span>  
  
-   <span data-ttu-id="b97c6-289"><xref:System.Data.Linq.DataContext.GetChangeSet%2A> pode ter efeitos colaterais, como inferência de inserir e excluir operações que normalmente são executadas no momento da <xref:System.Data.Linq.DataContext.SubmitChanges%2A>.</span><span class="sxs-lookup"><span data-stu-id="b97c6-289"><xref:System.Data.Linq.DataContext.GetChangeSet%2A> might have side effects, such as inference of insert and delete operations that are usually performed at the time of <xref:System.Data.Linq.DataContext.SubmitChanges%2A>.</span></span> <span data-ttu-id="b97c6-290">Por exemplo, objetos que são usados em operações a seguir podem criar operações inferidas correspondentes na lista a seguir:</span><span class="sxs-lookup"><span data-stu-id="b97c6-290">For example, objects that are used in the following operations can create corresponding inferred operations in the following list:</span></span>  
  
    -   <span data-ttu-id="b97c6-291"><xref:System.Data.Linq.EntitySet%601.Add%2A> para <xref:System.Data.Linq.Table%601.InsertOnSubmit%2A>.</span><span class="sxs-lookup"><span data-stu-id="b97c6-291"><xref:System.Data.Linq.EntitySet%601.Add%2A> to <xref:System.Data.Linq.Table%601.InsertOnSubmit%2A>.</span></span>  
  
    -   <span data-ttu-id="b97c6-292"><xref:System.Data.Linq.EntityRef%601> atribuição como nulo (possivelmente por causa da <xref:System.Data.Linq.EntitySet%601.Remove%2A> para <xref:System.Data.Linq.Table%601.DeleteOnSubmit%2A>.</span><span class="sxs-lookup"><span data-stu-id="b97c6-292"><xref:System.Data.Linq.EntityRef%601> assignment to null (possibly because of <xref:System.Data.Linq.EntitySet%601.Remove%2A> to <xref:System.Data.Linq.Table%601.DeleteOnSubmit%2A>.</span></span>  
  
-   <span data-ttu-id="b97c6-293">O conjunto não pode ser ordenado de acordo com as restrições de chave estrangeiras.</span><span class="sxs-lookup"><span data-stu-id="b97c6-293">The set may not be ordered according to foreign key constraints.</span></span>  
  
-   <span data-ttu-id="b97c6-294">Valores gerados por banco de dados (por exemplo, valores de chave primárias e estrangeiras, os carimbos de hora e assim por diante) não estão disponíveis.</span><span class="sxs-lookup"><span data-stu-id="b97c6-294">Database-generated values (for example, primary and foreign key values, timestamps, and so forth) are not available.</span></span> <span data-ttu-id="b97c6-295">Essas informações requerem a execução do comando de banco de dados e talvez a propagação de informações recuperadas (por exemplo, chave estrangeira da chave primária).</span><span class="sxs-lookup"><span data-stu-id="b97c6-295">Such information requires database command execution and perhaps the propagation of retrieved information (for example, foreign key from primary key).</span></span>  
  
-   <span data-ttu-id="b97c6-296">O conjunto de objetos alterados é calculado no momento da chamada.</span><span class="sxs-lookup"><span data-stu-id="b97c6-296">The set of changed objects is computed at the time of the call.</span></span> <span data-ttu-id="b97c6-297">As chamadas subsequentes para <xref:System.Data.Linq.DataContext.SubmitChanges%2A> pode produzir um conjunto diferente de se forem feitas alterações adicionais.</span><span class="sxs-lookup"><span data-stu-id="b97c6-297">Subsequent calls to <xref:System.Data.Linq.DataContext.SubmitChanges%2A> can produce a different set if additional changes are made.</span></span>  
  
 <span data-ttu-id="b97c6-298">Saída quando nenhuma alteração tiver sido feita aparece da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="b97c6-298">Output when no changes have been made appears as follows:</span></span>  
  
 `{Added: 0, Removed: 0, Modified: 0}`  
  
   
  
## Examples  
 [!code-csharp[DLinqDebuggingSupport#2](~/samples/snippets/csharp/VS_Snippets_Data/DLinqDebuggingSupport/cs/Program.cs#2)]
 [!code-vb[DLinqDebuggingSupport#2](~/samples/snippets/visualbasic/VS_Snippets_Data/DLinqDebuggingSupport/vb/Module1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand GetCommand (System.Linq.IQueryable query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommand GetCommand(class System.Linq.IQueryable query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.GetCommand(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCommand (query As IQueryable) As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbCommand ^ GetCommand(System::Linq::IQueryable ^ query);" />
      <MemberSignature Language="F#" Value="member this.GetCommand : System.Linq.IQueryable -&gt; System.Data.Common.DbCommand" Usage="dataContext.GetCommand query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="query"><span data-ttu-id="b97c6-299">A consulta cujas informações de comando SQL devem ser recuperadas.</span><span class="sxs-lookup"><span data-stu-id="b97c6-299">The query whose SQL command information is to be retrieved.</span></span></param>
        <summary><span data-ttu-id="b97c6-300">Obtém as informações sobre os comandos SQL gerados pelo [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)].</span><span class="sxs-lookup"><span data-stu-id="b97c6-300">Gets the information about SQL commands generated by [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)].</span></span></summary>
        <returns><span data-ttu-id="b97c6-301">O objeto de informações do comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="b97c6-301">The requested command information object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b97c6-302">Esse método é apenas um getter e não afeta <xref:System.Data.Linq.DataContext> estado.</span><span class="sxs-lookup"><span data-stu-id="b97c6-302">This method is only a getter and does not affect <xref:System.Data.Linq.DataContext> state.</span></span>  
  
 <span data-ttu-id="b97c6-303">Observe as seguintes considerações:</span><span class="sxs-lookup"><span data-stu-id="b97c6-303">Note the following considerations:</span></span>  
  
-   <span data-ttu-id="b97c6-304">O argumento deve ser não nulo.</span><span class="sxs-lookup"><span data-stu-id="b97c6-304">The argument must be non-null.</span></span> <span data-ttu-id="b97c6-305">Caso contrário, será gerada uma exceção de argumento nulo.</span><span class="sxs-lookup"><span data-stu-id="b97c6-305">Otherwise, a null argument exception is thrown.</span></span>  
  
-   <span data-ttu-id="b97c6-306">Exceções de conversão de consulta normal geradas durante [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] se aplicam a execução de consulta para uma consulta que não pode ser convertida.</span><span class="sxs-lookup"><span data-stu-id="b97c6-306">Normal query translation exceptions thrown during [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] query execution apply for a query that cannot be translated.</span></span>  
  
-   <span data-ttu-id="b97c6-307">Somente o primeiro comando de consulta é retornado.</span><span class="sxs-lookup"><span data-stu-id="b97c6-307">Only the first query command is returned.</span></span> <span data-ttu-id="b97c6-308">Especificamente, os comandos adicionais que são usados para o carregamento adiantado (<xref:System.Data.Linq.DataLoadOptions.LoadWith%2A>) não são incluídos.</span><span class="sxs-lookup"><span data-stu-id="b97c6-308">Specifically, additional commands that are used for eager loading (<xref:System.Data.Linq.DataLoadOptions.LoadWith%2A>) are not included.</span></span>  
  
-   <span data-ttu-id="b97c6-309"><xref:System.Data.Linq.DataContext> não controla as ações do usuário com o comando.</span><span class="sxs-lookup"><span data-stu-id="b97c6-309"><xref:System.Data.Linq.DataContext> does not track what the user does with the command.</span></span> <span data-ttu-id="b97c6-310">Por exemplo, os resultados da execução do comando retornada não são rastreados e não afetam <xref:System.Data.Linq.DataContext> estado.</span><span class="sxs-lookup"><span data-stu-id="b97c6-310">For example, results from the execution of the returned command are not tracked and do not affect <xref:System.Data.Linq.DataContext> state.</span></span>  
  
   
  
## Examples  
 [!code-csharp[DLinqDebuggingSupport#3](~/samples/snippets/csharp/VS_Snippets_Data/DLinqDebuggingSupport/cs/Program.cs#3)]
 [!code-vb[DLinqDebuggingSupport#3](~/samples/snippets/visualbasic/VS_Snippets_Data/DLinqDebuggingSupport/vb/Module1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIDbCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand GetIDbCommand (System.Linq.IQueryable query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.IDbCommand GetIDbCommand(class System.Linq.IQueryable query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.GetIDbCommand(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIDbCommand (query As IQueryable) As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::IDbCommand ^ GetIDbCommand(System::Linq::IQueryable ^ query);" />
      <MemberSignature Language="F#" Value="member this.GetIDbCommand : System.Linq.IQueryable -&gt; System.Data.IDbCommand" Usage="dataContext.GetIDbCommand query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.IQueryable" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="query">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTable">
      <MemberSignature Language="C#" Value="public System.Data.Linq.ITable GetTable (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Linq.ITable GetTable(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.GetTable(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Linq::ITable ^ GetTable(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.GetTable : Type -&gt; System.Data.Linq.ITable" Usage="dataContext.GetTable type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.ITable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="b97c6-311">O tipo dos objetos a serem retornados.</span><span class="sxs-lookup"><span data-stu-id="b97c6-311">The type of the objects to be returned.</span></span></param>
        <summary><span data-ttu-id="b97c6-312">Retorna uma coleção de objetos de um tipo específico, em que o tipo é definido pelo parâmetro <paramref name="type" />.</span><span class="sxs-lookup"><span data-stu-id="b97c6-312">Returns a collection of objects of a particular type, where the type is defined by the <paramref name="type" /> parameter.</span></span></summary>
        <returns><span data-ttu-id="b97c6-313">Uma coleção de objetos definidos pelo parâmetro <paramref name="type" />.</span><span class="sxs-lookup"><span data-stu-id="b97c6-313">A collection of objects defined by the <paramref name="type" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b97c6-314">Esta é uma versão sem rigidez de tipos de <xref:System.Data.Linq.DataContext.GetTable%2A>.</span><span class="sxs-lookup"><span data-stu-id="b97c6-314">This is a weakly typed version of <xref:System.Data.Linq.DataContext.GetTable%2A>.</span></span> <span data-ttu-id="b97c6-315">É importante ter uma versão sem rigidez de tipos, porque ele é uma prática comum relativamente construir consultas dinamicamente.</span><span class="sxs-lookup"><span data-stu-id="b97c6-315">It is important to have a weakly typed version because it is a relatively common practice to construct queries dynamically.</span></span> <span data-ttu-id="b97c6-316">Seria inconveniente forçar o aplicativo para usar a reflexão para chamar o método genérico correto.</span><span class="sxs-lookup"><span data-stu-id="b97c6-316">It would be inconvenient to force the application to use reflection to call the correct generic method.</span></span>  
  
 <span data-ttu-id="b97c6-317">Se não houver nenhuma coleção para um tipo específico, uma exceção é lançada.</span><span class="sxs-lookup"><span data-stu-id="b97c6-317">If there is no collection for a particular type, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTable&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Linq.Table&lt;TEntity&gt; GetTable&lt;TEntity&gt; () where TEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Linq.Table`1&lt;!!TEntity&gt; GetTable&lt;class TEntity&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.GetTable``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTable(Of TEntity As Class) () As Table(Of TEntity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEntity&gt;&#xA; where TEntity : class System::Data::Linq::Table&lt;TEntity&gt; ^ GetTable();" />
      <MemberSignature Language="F#" Value="member this.GetTable : unit -&gt; System.Data.Linq.Table&lt;'Entity (requires 'Entity : null)&gt; (requires 'Entity : null)" Usage="dataContext.GetTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Table&lt;TEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TEntity"><span data-ttu-id="b97c6-318">O tipo dos objetos a serem retornados.</span><span class="sxs-lookup"><span data-stu-id="b97c6-318">The type of the objects to be returned.</span></span></typeparam>
        <summary><span data-ttu-id="b97c6-319">Retorna uma coleção de objetos de um tipo específico, em que o tipo é definido pelo parâmetro <paramref name="TEntity" />.</span><span class="sxs-lookup"><span data-stu-id="b97c6-319">Returns a collection of objects of a particular type, where the type is defined by the <paramref name="TEntity" /> parameter.</span></span></summary>
        <returns><span data-ttu-id="b97c6-320">Uma coleção de objetos definidos pelo parâmetro <paramref name="TEntity" />.</span><span class="sxs-lookup"><span data-stu-id="b97c6-320">A collection of objects defined by the <paramref name="TEntity" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b97c6-321">Esse método é o ponto de entrada principal para a consulta.</span><span class="sxs-lookup"><span data-stu-id="b97c6-321">This method is the main entry point for querying.</span></span> <span data-ttu-id="b97c6-322">Quando um fortemente tipado <xref:System.Data.Linq.DataContext> é criadas, novas propriedades geradas encapsulam chamadas para esse método.</span><span class="sxs-lookup"><span data-stu-id="b97c6-322">When a strongly typed <xref:System.Data.Linq.DataContext> is created, new generated properties encapsulate calls to this method.</span></span> <span data-ttu-id="b97c6-323">Por exemplo, uma `Customers` propriedade é gerada que retorna `GetTable<Customer>`.</span><span class="sxs-lookup"><span data-stu-id="b97c6-323">For example, a `Customers` property is generated that returns `GetTable<Customer>`.</span></span>  
  
 <span data-ttu-id="b97c6-324">Se não houver nenhuma coleção para um tipo específico, uma exceção é lançada.</span><span class="sxs-lookup"><span data-stu-id="b97c6-324">If there is no collection for a particular type, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadOptions">
      <MemberSignature Language="C#" Value="public System.Data.Linq.DataLoadOptions LoadOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.DataLoadOptions LoadOptions" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.LoadOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property LoadOptions As DataLoadOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Linq::DataLoadOptions ^ LoadOptions { System::Data::Linq::DataLoadOptions ^ get(); void set(System::Data::Linq::DataLoadOptions ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LoadOptions : System.Data.Linq.DataLoadOptions with get, set" Usage="System.Data.Linq.DataContext.LoadOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.DataLoadOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b97c6-325">Obtém ou define o <see cref="T:System.Data.Linq.DataLoadOptions" /> associado a esse <see cref="T:System.Data.Linq.DataContext" />.</span><span class="sxs-lookup"><span data-stu-id="b97c6-325">Gets or sets the <see cref="T:System.Data.Linq.DataLoadOptions" /> associated with this <see cref="T:System.Data.Linq.DataContext" />.</span></span></summary>
        <value><span data-ttu-id="b97c6-326">As opções de carregamento da pré-busca para os dados relacionados.</span><span class="sxs-lookup"><span data-stu-id="b97c6-326">The prefetch load options for related data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b97c6-327">Essa propriedade obtém ou define as opções que são usadas para definir o comportamento de pré-busca de membros carregado adiada e associação de coleções relacionadas.</span><span class="sxs-lookup"><span data-stu-id="b97c6-327">This property gets or sets the options that are used to define prefetch behavior for deferred-loaded members and membership of related collections.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public System.IO.TextWriter Log { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.TextWriter Log" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.Log" />
      <MemberSignature Language="VB.NET" Value="Public Property Log As TextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::TextWriter ^ Log { System::IO::TextWriter ^ get(); void set(System::IO::TextWriter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Log : System.IO.TextWriter with get, set" Usage="System.Data.Linq.DataContext.Log" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b97c6-328">Obtém ou define o destino para escrever a consulta ou o comando SQL.</span><span class="sxs-lookup"><span data-stu-id="b97c6-328">Gets or sets the destination to write the SQL query or command.</span></span></summary>
        <value><span data-ttu-id="b97c6-329">O <see cref="T:System.IO.TextReader" /> a ser usado para gravar o comando.</span><span class="sxs-lookup"><span data-stu-id="b97c6-329">The <see cref="T:System.IO.TextReader" /> to use for writing the command.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b97c6-330">Defina essa propriedade como `null` para desabilitar o log de comando.</span><span class="sxs-lookup"><span data-stu-id="b97c6-330">Set this property to `null` to disable command logging.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b97c6-331">O exemplo a seguir exibe o SQL gerado na janela do console antes de exibir os resultados da consulta.</span><span class="sxs-lookup"><span data-stu-id="b97c6-331">The following example displays generated SQL in the console window before it displays the results of the query.</span></span>  
  
 [!code-csharp[System.Data.Linq.DataContext#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.DataContext/cs/Program.cs#2)]
 [!code-vb[System.Data.Linq.DataContext#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.DataContext/vb/Module1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mapping">
      <MemberSignature Language="C#" Value="public System.Data.Linq.Mapping.MetaModel Mapping { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaModel Mapping" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.Mapping" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Mapping As MetaModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Linq::Mapping::MetaModel ^ Mapping { System::Data::Linq::Mapping::MetaModel ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Mapping : System.Data.Linq.Mapping.MetaModel" Usage="System.Data.Linq.DataContext.Mapping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b97c6-332">Obtém o <see cref="T:System.Data.Linq.Mapping.MetaModel" /> no qual o mapeamento é baseado.</span><span class="sxs-lookup"><span data-stu-id="b97c6-332">Gets the <see cref="T:System.Data.Linq.Mapping.MetaModel" /> on which the mapping is based.</span></span></summary>
        <value><span data-ttu-id="b97c6-333">O mapeamento entre objetos de banco de dados e de domínio.</span><span class="sxs-lookup"><span data-stu-id="b97c6-333">The mapping between a database and domain objects.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ObjectTrackingEnabled">
      <MemberSignature Language="C#" Value="public bool ObjectTrackingEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ObjectTrackingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.ObjectTrackingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property ObjectTrackingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ObjectTrackingEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ObjectTrackingEnabled : bool with get, set" Usage="System.Data.Linq.DataContext.ObjectTrackingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b97c6-334">Obtém ou define um valor que indica se o rastreamento do objeto está habilitado.</span><span class="sxs-lookup"><span data-stu-id="b97c6-334">Gets or sets a value that indicates whether object tracking is enabled.</span></span></summary>
        <value><span data-ttu-id="b97c6-335"><see langword="true" /> se o rastreamento do objeto estiver habilitado; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b97c6-335"><see langword="true" /> if the object tracking is enabled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b97c6-336">O padrão é <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="b97c6-336">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b97c6-337">Definir essa propriedade como `false` melhora o desempenho em tempo de recuperação, pois há menos itens para rastrear.</span><span class="sxs-lookup"><span data-stu-id="b97c6-337">Setting this property to `false` improves performance at retrieval time, because there are fewer items to track.</span></span>  
  
 <span data-ttu-id="b97c6-338">Uma exceção é gerada:</span><span class="sxs-lookup"><span data-stu-id="b97c6-338">An exception is thrown:</span></span>  
  
-   <span data-ttu-id="b97c6-339">Se a propriedade é definida como `false` depois que uma consulta é executada.</span><span class="sxs-lookup"><span data-stu-id="b97c6-339">If the property is set to `false` after a query has been executed.</span></span>  
  
     <span data-ttu-id="b97c6-340">Para obter mais informações, consulte a seção modos válidos em <xref:System.Data.Linq.DataContext>.</span><span class="sxs-lookup"><span data-stu-id="b97c6-340">For more information, see the Valid Modes section in <xref:System.Data.Linq.DataContext>.</span></span>  
  
-   <span data-ttu-id="b97c6-341">Se a propriedade é definida como `false` e <xref:System.Data.Linq.DataContext.SubmitChanges%2A> é chamado.</span><span class="sxs-lookup"><span data-stu-id="b97c6-341">If the property is set to `false` and <xref:System.Data.Linq.DataContext.SubmitChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="b97c6-342">Se <xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> está `false`, <xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> é ignorada e tratada como `false`.</span><span class="sxs-lookup"><span data-stu-id="b97c6-342">If <xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> is `false`, <xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> is ignored and treated as `false`.</span></span> <span data-ttu-id="b97c6-343">Nesse caso, o <xref:System.Data.Linq.DataContext> é somente leitura.</span><span class="sxs-lookup"><span data-stu-id="b97c6-343">In this case, the <xref:System.Data.Linq.DataContext> is read-only.</span></span>  
  
 <span data-ttu-id="b97c6-344">Se <xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> for `true`, <xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> será `false`.</span><span class="sxs-lookup"><span data-stu-id="b97c6-344">If <xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> is `true`, <xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> is `false`.</span></span> <span data-ttu-id="b97c6-345">Nesse caso, <xref:System.Data.Linq.DataContext> permite que você carregue um grafo de objeto usando <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> diretivas, mas não permite o carregamento adiado.</span><span class="sxs-lookup"><span data-stu-id="b97c6-345">In this case, <xref:System.Data.Linq.DataContext> allows you to load an object graph by using <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> directives, but does not enable deferred loading.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryCacheEnabled">
      <MemberSignature Language="C#" Value="public bool QueryCacheEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool QueryCacheEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.QueryCacheEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property QueryCacheEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool QueryCacheEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.QueryCacheEnabled : bool with get, set" Usage="System.Data.Linq.DataContext.QueryCacheEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Refresh">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b97c6-346">Atualiza o estado do objeto usando os dados no banco de dados.</span><span class="sxs-lookup"><span data-stu-id="b97c6-346">Refreshes object state by using data in the database.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b97c6-347">Esse método é útil após um erro de simultaneidade otimista para colocar itens em um estado para outra tentativa.</span><span class="sxs-lookup"><span data-stu-id="b97c6-347">This method is useful after an optimistic concurrency error to bring items into a state for another attempt.</span></span> <span data-ttu-id="b97c6-348">Ele atualiza o estado dos primitivos campos e propriedades nos objetos.</span><span class="sxs-lookup"><span data-stu-id="b97c6-348">It updates the state of the primitive fields and properties on the objects.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b97c6-349">Se um objeto está localizado o *muitos* lado de uma relação um-para-muitos, a chave estrangeira no objeto será definido e o ponteiro de objeto para o outro lado da relação será definido para o novo valor.</span><span class="sxs-lookup"><span data-stu-id="b97c6-349">If an object is on the *many* side of a one-to-many relationship, the foreign key on the object will be set and the object pointer for the other side of the relationship will be set to the new value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh (System.Data.Linq.RefreshMode mode, System.Collections.IEnumerable entities);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh(valuetype System.Data.Linq.RefreshMode mode, class System.Collections.IEnumerable entities) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Refresh(System.Data.Linq.RefreshMode,System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh (mode As RefreshMode, entities As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh(System::Data::Linq::RefreshMode mode, System::Collections::IEnumerable ^ entities);" />
      <MemberSignature Language="F#" Value="member this.Refresh : System.Data.Linq.RefreshMode * System.Collections.IEnumerable -&gt; unit" Usage="dataContext.Refresh (mode, entities)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Data.Linq.RefreshMode" />
        <Parameter Name="entities" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="mode"><span data-ttu-id="b97c6-350">Um valor que especifica como os conflitos de simultaneidade otimista são tratados.</span><span class="sxs-lookup"><span data-stu-id="b97c6-350">A value that specifies how optimistic concurrency conflicts are handled.</span></span></param>
        <param name="entities"><span data-ttu-id="b97c6-351">A coleção de entidades a ser atualizada.</span><span class="sxs-lookup"><span data-stu-id="b97c6-351">The collection of entities to be refreshed.</span></span></param>
        <summary><span data-ttu-id="b97c6-352">Atualiza uma coleção de objetos de entidade de acordo com o modo especificado.</span><span class="sxs-lookup"><span data-stu-id="b97c6-352">Refreshes a collection of entity objects according to the specified mode.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh (System.Data.Linq.RefreshMode mode, object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh(valuetype System.Data.Linq.RefreshMode mode, object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Refresh(System.Data.Linq.RefreshMode,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh (mode As RefreshMode, entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh(System::Data::Linq::RefreshMode mode, System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.Refresh : System.Data.Linq.RefreshMode * obj -&gt; unit" Usage="dataContext.Refresh (mode, entity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Data.Linq.RefreshMode" />
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="mode"><span data-ttu-id="b97c6-353">Um valor que especifica como os conflitos de simultaneidade otimista são tratados.</span><span class="sxs-lookup"><span data-stu-id="b97c6-353">A value that specifies how optimistic concurrency conflicts are handled.</span></span></param>
        <param name="entity"><span data-ttu-id="b97c6-354">O objeto a ser atualizado.</span><span class="sxs-lookup"><span data-stu-id="b97c6-354">The object to be refreshed.</span></span></param>
        <summary><span data-ttu-id="b97c6-355">Atualiza um objeto de entidade de acordo com o modo especificado.</span><span class="sxs-lookup"><span data-stu-id="b97c6-355">Refreshes an entity object according to the specified mode.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh (System.Data.Linq.RefreshMode mode, params object[] entities);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh(valuetype System.Data.Linq.RefreshMode mode, object[] entities) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Refresh(System.Data.Linq.RefreshMode,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh (mode As RefreshMode, ParamArray entities As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh(System::Data::Linq::RefreshMode mode, ... cli::array &lt;System::Object ^&gt; ^ entities);" />
      <MemberSignature Language="F#" Value="member this.Refresh : System.Data.Linq.RefreshMode * obj[] -&gt; unit" Usage="dataContext.Refresh (mode, entities)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Data.Linq.RefreshMode" />
        <Parameter Name="entities" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mode"><span data-ttu-id="b97c6-356">Um valor que especifica como os conflitos de simultaneidade otimista são tratados.</span><span class="sxs-lookup"><span data-stu-id="b97c6-356">A value that specifies how optimistic concurrency conflicts are handled.</span></span></param>
        <param name="entities"><span data-ttu-id="b97c6-357">A matriz de objetos de entidade a ser atualizada.</span><span class="sxs-lookup"><span data-stu-id="b97c6-357">The array of entity objects to be refreshed.</span></span></param>
        <summary><span data-ttu-id="b97c6-358">Atualiza uma matriz de objetos de entidade de acordo com o modo especificado.</span><span class="sxs-lookup"><span data-stu-id="b97c6-358">Refreshes an array of entity objects according to the specified mode.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SubmitChanges">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b97c6-359">Calcula o conjunto de objetos modificados a serem inseridos, atualizados ou excluídos e executa os comandos adequados para implementar as alterações no banco de dados.</span><span class="sxs-lookup"><span data-stu-id="b97c6-359">Computes the set of modified objects to be inserted, updated, or deleted, and executes the appropriate commands to implement the changes to the database.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b97c6-360">Se os métodos de substituição estão presentes para insert, update ou delete, <xref:System.Data.Linq.DataContext.SubmitChanges%2A> executa esses métodos em vez do padrão [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] comandos.</span><span class="sxs-lookup"><span data-stu-id="b97c6-360">If override methods are present for insert, update, or delete, <xref:System.Data.Linq.DataContext.SubmitChanges%2A> executes these methods instead of the default [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] commands.</span></span>  
  
 <span data-ttu-id="b97c6-361"><xref:System.Data.Linq.DataContext.SubmitChanges%2A> inicia uma transação e será revertida se ocorrer uma exceção enquanto <xref:System.Data.Linq.DataContext.SubmitChanges%2A> está em execução.</span><span class="sxs-lookup"><span data-stu-id="b97c6-361"><xref:System.Data.Linq.DataContext.SubmitChanges%2A> starts a transaction and will roll back if an exception occurs while <xref:System.Data.Linq.DataContext.SubmitChanges%2A> is executing.</span></span> <span data-ttu-id="b97c6-362">No entanto, isso não reverte as alterações na memória ou controlados pelo <xref:System.Data.Linq.DataContext>; essas alterações precisará ser revertido manualmente.</span><span class="sxs-lookup"><span data-stu-id="b97c6-362">However, this does not roll back the changes in memory or tracked by the <xref:System.Data.Linq.DataContext>; those changes will need to be rolled back manually.</span></span> <span data-ttu-id="b97c6-363">Você pode começar com uma nova instância do <xref:System.Data.Linq.DataContext> se as alterações na memória devem ser descartadas.</span><span class="sxs-lookup"><span data-stu-id="b97c6-363">You can start with a new instance of the <xref:System.Data.Linq.DataContext> if the changes in memory are to be discarded.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SubmitChanges">
      <MemberSignature Language="C#" Value="public void SubmitChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SubmitChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.SubmitChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub SubmitChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SubmitChanges();" />
      <MemberSignature Language="F#" Value="member this.SubmitChanges : unit -&gt; unit" Usage="dataContext.SubmitChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b97c6-364">Calcula o conjunto de objetos modificados a serem inseridos, atualizados ou excluídos e executa os comandos adequados para implementar as alterações no banco de dados.</span><span class="sxs-lookup"><span data-stu-id="b97c6-364">Computes the set of modified objects to be inserted, updated, or deleted, and executes the appropriate commands to implement the changes to the database.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b97c6-365">Se os métodos de substituição estão presentes para insert, update ou delete, <xref:System.Data.Linq.DataContext.SubmitChanges%2A> executa esses métodos em vez do padrão [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] comandos.</span><span class="sxs-lookup"><span data-stu-id="b97c6-365">If override methods are present for insert, update, or delete, <xref:System.Data.Linq.DataContext.SubmitChanges%2A> executes these methods instead of the default [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] commands.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubmitChanges">
      <MemberSignature Language="C#" Value="public virtual void SubmitChanges (System.Data.Linq.ConflictMode failureMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SubmitChanges(valuetype System.Data.Linq.ConflictMode failureMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.SubmitChanges(System.Data.Linq.ConflictMode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SubmitChanges (failureMode As ConflictMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SubmitChanges(System::Data::Linq::ConflictMode failureMode);" />
      <MemberSignature Language="F#" Value="abstract member SubmitChanges : System.Data.Linq.ConflictMode -&gt; unit&#xA;override this.SubmitChanges : System.Data.Linq.ConflictMode -&gt; unit" Usage="dataContext.SubmitChanges failureMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="failureMode" Type="System.Data.Linq.ConflictMode" />
      </Parameters>
      <Docs>
        <param name="failureMode"><span data-ttu-id="b97c6-366">A ação a ser tomada se o envio falhar.</span><span class="sxs-lookup"><span data-stu-id="b97c6-366">The action to be taken if the submission fails.</span></span> <span data-ttu-id="b97c6-367">Os argumentos válidos são da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="b97c6-367">Valid arguments are as follows:</span></span> 
 <see cref="F:System.Data.Linq.ConflictMode.FailOnFirstConflict" /><see cref="F:System.Data.Linq.ConflictMode.ContinueOnConflict" /></param>
        <summary><span data-ttu-id="b97c6-368">Envia as alterações que foram feitas para recuperar objetos de banco de dados subjacente e especifica a ação a ser tomada se o envio falhar.</span><span class="sxs-lookup"><span data-stu-id="b97c6-368">Sends changes that were made to retrieved objects to the underlying database, and specifies the action to be taken if the submission fails.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b97c6-369">Modo de falha padrão é <xref:System.Data.Linq.ConflictMode.FailOnFirstConflict>.</span><span class="sxs-lookup"><span data-stu-id="b97c6-369">Default failure mode is <xref:System.Data.Linq.ConflictMode.FailOnFirstConflict>.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.ConflictModeEnumeration#1](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.conflictmodeenumeration/cs/program.cs#1)]
 [!code-vb[System.Data.Linq.ConflictModeEnumeration#1](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.conflictmodeenumeration/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transaction">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbTransaction Transaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbTransaction Transaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.Transaction" />
      <MemberSignature Language="VB.NET" Value="Public Property Transaction As DbTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbTransaction ^ Transaction { System::Data::Common::DbTransaction ^ get(); void set(System::Data::Common::DbTransaction ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Transaction : System.Data.Common.DbTransaction with get, set" Usage="System.Data.Linq.DataContext.Transaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b97c6-370">Obtém ou define uma transação local para o [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] para usar para acessar o banco de dados.</span><span class="sxs-lookup"><span data-stu-id="b97c6-370">Gets or sets a local transaction for the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] to use to access the database.</span></span></summary>
        <value><span data-ttu-id="b97c6-371">O objeto de transação usado pelo <see cref="T:System.Data.Linq.DataContext" /> ao executar consultas e comandos.</span><span class="sxs-lookup"><span data-stu-id="b97c6-371">The transaction object used by the <see cref="T:System.Data.Linq.DataContext" /> when executing queries and commands.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b97c6-372">O cenário principal para essa propriedade é a interoperabilidade com relacional [!INCLUDE[vstecado](~/includes/vstecado-md.md)] código.</span><span class="sxs-lookup"><span data-stu-id="b97c6-372">The primary scenario for this property is interoperability with relational [!INCLUDE[vstecado](~/includes/vstecado-md.md)] code.</span></span> <span data-ttu-id="b97c6-373">Por exemplo, usar essa propriedade quando você escrever seus próprios `Create` / `Update` / `Delete` métodos para definir o `Transaction` propriedade no ADO `Command` objeto.</span><span class="sxs-lookup"><span data-stu-id="b97c6-373">For example, use this property when you write your own `Create`/`Update`/`Delete` methods to set the `Transaction` property on the ADO `Command` object.</span></span>  
  
 <span data-ttu-id="b97c6-374">Observe o seguinte:</span><span class="sxs-lookup"><span data-stu-id="b97c6-374">Note the following:</span></span>  
  
-   <span data-ttu-id="b97c6-375">Se essa propriedade não tiver sido definida explicitamente, o getter retorna null.</span><span class="sxs-lookup"><span data-stu-id="b97c6-375">If this property has not been explicitly set, the getter returns null.</span></span>  
  
-   <span data-ttu-id="b97c6-376">Se o código está sendo executado em um <xref:System.Transactions.Transaction> contexto, a definição dessa propriedade gera uma exceção.</span><span class="sxs-lookup"><span data-stu-id="b97c6-376">If the code is executing in a <xref:System.Transactions.Transaction> context, setting this property throws an exception.</span></span>  
  
-   <span data-ttu-id="b97c6-377">Se essa propriedade está definida e um novo <xref:System.Transactions.Transaction> é aberto, uma exceção é lançada quando uma consulta ou atualização é executada.</span><span class="sxs-lookup"><span data-stu-id="b97c6-377">If this property is set and a new <xref:System.Transactions.Transaction> is opened, an exception is thrown when a query or update is executed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Translate">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b97c6-378">Converte um <see cref="T:System.Data.IDataReader" /> existente em objetos.</span><span class="sxs-lookup"><span data-stu-id="b97c6-378">Converts an existing <see cref="T:System.Data.IDataReader" /> to objects.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b97c6-379">Cada linha de <xref:System.Data.IDataReader> é convertido em um objeto no <xref:System.Collections.Generic.IEnumerable%601>.</span><span class="sxs-lookup"><span data-stu-id="b97c6-379">Each row in the <xref:System.Data.IDataReader> is converted to an object in the <xref:System.Collections.Generic.IEnumerable%601>.</span></span>  
  
```  
public IEnumerable<T> Translate<T>(IDataReader reader) {}  
```  
  
 <span data-ttu-id="b97c6-380">Descrição: o Esse método é usado para converter um existente <xref:System.Data.Common.DbDataReader> a objetos.</span><span class="sxs-lookup"><span data-stu-id="b97c6-380">Description: This method is used to convert an existing <xref:System.Data.Common.DbDataReader> to objects.</span></span> <span data-ttu-id="b97c6-381">Cada linha de <xref:System.Data.Common.DbDataReader> é convertido em um objeto no <xref:System.Collections.Generic.IEnumerable%601>.</span><span class="sxs-lookup"><span data-stu-id="b97c6-381">Each row in the <xref:System.Data.Common.DbDataReader> is converted to an object in the <xref:System.Collections.Generic.IEnumerable%601>.</span></span>  
  
 <span data-ttu-id="b97c6-382">**Parâmetros genéricos:**</span><span class="sxs-lookup"><span data-stu-id="b97c6-382">**Generic parameters:**</span></span>  
  
 <span data-ttu-id="b97c6-383">`T`: Consulte <xref:System.Data.Linq.DataContext.ExecuteQuery%2A>.</span><span class="sxs-lookup"><span data-stu-id="b97c6-383">`T`: See <xref:System.Data.Linq.DataContext.ExecuteQuery%2A>.</span></span>  
  
 <span data-ttu-id="b97c6-384">**Parâmetros:**</span><span class="sxs-lookup"><span data-stu-id="b97c6-384">**Parameters:**</span></span>  
  
 <span data-ttu-id="b97c6-385">`Query`: Consulte a descrição do comando sob <xref:System.Data.Linq.DataContext.ExecuteCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="b97c6-385">`Query`: See the description for command under <xref:System.Data.Linq.DataContext.ExecuteCommand%2A>.</span></span>  
  
 <span data-ttu-id="b97c6-386">`Parameters`: Consulte a descrição de parâmetros em <xref:System.Data.Linq.DataContext.ExecuteCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="b97c6-386">`Parameters`: See the description for parameters under <xref:System.Data.Linq.DataContext.ExecuteCommand%2A>.</span></span>  
  
 <span data-ttu-id="b97c6-387">**Tipo de retorno:**</span><span class="sxs-lookup"><span data-stu-id="b97c6-387">**Return type:**</span></span>  
  
 <span data-ttu-id="b97c6-388"><xref:System.Collections.Generic.IEnumerable%601>: coleção de objetos retornada pela conversão.</span><span class="sxs-lookup"><span data-stu-id="b97c6-388"><xref:System.Collections.Generic.IEnumerable%601>: collection of objects returned by the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Translate">
      <MemberSignature Language="C#" Value="public System.Data.Linq.IMultipleResults Translate (System.Data.Common.DbDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Linq.IMultipleResults Translate(class System.Data.Common.DbDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Translate(System.Data.Common.DbDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function Translate (reader As DbDataReader) As IMultipleResults" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Linq::IMultipleResults ^ Translate(System::Data::Common::DbDataReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.Translate : System.Data.Common.DbDataReader -&gt; System.Data.Linq.IMultipleResults" Usage="dataContext.Translate reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.IMultipleResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="b97c6-389">O <see cref="T:System.Data.IDataReader" /> a ser convertido.</span><span class="sxs-lookup"><span data-stu-id="b97c6-389">The <see cref="T:System.Data.IDataReader" /> to be converted.</span></span></param>
        <summary><span data-ttu-id="b97c6-390">Converte um <see cref="T:System.Data.Common.DbDataReader" /> existente em objetos.</span><span class="sxs-lookup"><span data-stu-id="b97c6-390">Converts an existing <see cref="T:System.Data.Common.DbDataReader" /> to objects.</span></span></summary>
        <returns><span data-ttu-id="b97c6-391">Uma lista de objetos retornada pela conversão.</span><span class="sxs-lookup"><span data-stu-id="b97c6-391">A list of objects returned by the conversion.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Translate">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable Translate (Type elementType, System.Data.Common.DbDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerable Translate(class System.Type elementType, class System.Data.Common.DbDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Translate(System.Type,System.Data.Common.DbDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function Translate (elementType As Type, reader As DbDataReader) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerable ^ Translate(Type ^ elementType, System::Data::Common::DbDataReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.Translate : Type * System.Data.Common.DbDataReader -&gt; System.Collections.IEnumerable" Usage="dataContext.Translate (elementType, reader)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementType" Type="System.Type" />
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" />
      </Parameters>
      <Docs>
        <param name="elementType"><span data-ttu-id="b97c6-392">O tipo dos <see cref="T:System.Collections.Generic.IEnumerable`1" /> a serem retornados.</span><span class="sxs-lookup"><span data-stu-id="b97c6-392">The type of the <see cref="T:System.Collections.Generic.IEnumerable`1" /> to be returned.</span></span>  
  
<span data-ttu-id="b97c6-393">O algoritmo para colunas correspondentes no resultado para os campos e propriedades no objeto funciona da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="b97c6-393">The algorithm for matching columns in the result to fields and properties in the object works as follows:</span></span> 
<span data-ttu-id="b97c6-394">Se um campo ou propriedade é mapeado para um nome de coluna em particular, o nome dessa coluna é esperado no conjunto de resultados.</span><span class="sxs-lookup"><span data-stu-id="b97c6-394">If a field or property is mapped to a particular column name, that column name is expected in the resultset.</span></span>  
  
<span data-ttu-id="b97c6-395">Se um campo ou propriedade não for mapeado, uma coluna com o mesmo nome do campo ou propriedade é esperada no conjunto de resultados.</span><span class="sxs-lookup"><span data-stu-id="b97c6-395">If a field or property is not mapped, a column with the same name as the field or property is expected in the resultset.</span></span>  
  
<span data-ttu-id="b97c6-396">A comparação é realizada procurando, primeiro, uma correspondência que diferencia maiúsculas de minúsculas.</span><span class="sxs-lookup"><span data-stu-id="b97c6-396">The comparison is performed by looking for a case-sensitive match first.</span></span> <span data-ttu-id="b97c6-397">Se essa correspondência não for encontrada, uma pesquisa subsequente ocorre para uma correspondência que diferencia maiúsculas de minúsculas.</span><span class="sxs-lookup"><span data-stu-id="b97c6-397">If this match is not found, a subsequent search is occurs for a case-insensitive match.</span></span>  
  
<span data-ttu-id="b97c6-398">A consulta deve retornar todos os campos rastreados e propriedades do objeto (exceto aqueles que são carregados de forma adiada) quando todas as seguintes condições forem verdadeiras:</span><span class="sxs-lookup"><span data-stu-id="b97c6-398">The query must return all the tracked fields and properties of the object (except those that are loaded on a deferred basis) when all the following conditions are true:</span></span> 
 <span data-ttu-id="b97c6-399"><c>T</c> é uma entidade explicitamente controlada por <see cref="T:System.Data.Linq.DataContext" />.</span><span class="sxs-lookup"><span data-stu-id="b97c6-399"><c>T</c> is an entity explicitly tracked by the <see cref="T:System.Data.Linq.DataContext" />.</span></span>  
  
 <span data-ttu-id="b97c6-400"><see cref="P:System.Data.Linq.DataContext.ObjectTrackingEnabled" /> é <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="b97c6-400"><see cref="P:System.Data.Linq.DataContext.ObjectTrackingEnabled" /> is <see langword="true" />.</span></span>  
  
<span data-ttu-id="b97c6-401">A entidade tem uma chave primária.</span><span class="sxs-lookup"><span data-stu-id="b97c6-401">The entity has a primary key.</span></span>  
  
<span data-ttu-id="b97c6-402">Do contrário, uma exceção será acionada.</span><span class="sxs-lookup"><span data-stu-id="b97c6-402">Otherwise an exception is thrown.</span></span></param>
        <param name="reader"><span data-ttu-id="b97c6-403">O <see cref="T:System.Data.IDataReader" /> a ser convertido.</span><span class="sxs-lookup"><span data-stu-id="b97c6-403">The <see cref="T:System.Data.IDataReader" /> to be converted.</span></span></param>
        <summary><span data-ttu-id="b97c6-404">Converte um <see cref="T:System.Data.Common.DbDataReader" /> existente em objetos.</span><span class="sxs-lookup"><span data-stu-id="b97c6-404">Converts an existing <see cref="T:System.Data.Common.DbDataReader" /> to objects.</span></span></summary>
        <returns><span data-ttu-id="b97c6-405">Uma lista de objetos retornada pela conversão.</span><span class="sxs-lookup"><span data-stu-id="b97c6-405">A list of objects returned by the conversion.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Translate&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;TResult&gt; Translate&lt;TResult&gt; (System.Data.Common.DbDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt; Translate&lt;TResult&gt;(class System.Data.Common.DbDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Translate``1(System.Data.Common.DbDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function Translate(Of TResult) (reader As DbDataReader) As IEnumerable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Collections::Generic::IEnumerable&lt;TResult&gt; ^ Translate(System::Data::Common::DbDataReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.Translate : System.Data.Common.DbDataReader -&gt; seq&lt;'Result&gt;" Usage="dataContext.Translate reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="b97c6-406">O tipo dos <see cref="T:System.Collections.Generic.IEnumerable`1" /> a serem retornados.</span><span class="sxs-lookup"><span data-stu-id="b97c6-406">The type of the <see cref="T:System.Collections.Generic.IEnumerable`1" /> to be returned.</span></span></typeparam>
        <param name="reader"><span data-ttu-id="b97c6-407">O <see cref="T:System.Data.IDataReader" /> a ser convertido.</span><span class="sxs-lookup"><span data-stu-id="b97c6-407">The <see cref="T:System.Data.IDataReader" /> to be converted.</span></span></param>
        <summary><span data-ttu-id="b97c6-408">Converte um <see cref="T:System.Data.Common.DbDataReader" /> existente em objetos.</span><span class="sxs-lookup"><span data-stu-id="b97c6-408">Converts an existing <see cref="T:System.Data.Common.DbDataReader" /> to objects.</span></span></summary>
        <returns><span data-ttu-id="b97c6-409">Uma coleção de objetos retornada pela conversão.</span><span class="sxs-lookup"><span data-stu-id="b97c6-409">A collection of objects returned by the conversion.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>