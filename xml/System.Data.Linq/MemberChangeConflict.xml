<Type Name="MemberChangeConflict" FullName="System.Data.Linq.MemberChangeConflict">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8b5c8fa934312aa55ce7b99aefbae8c519fbbfee" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37680288" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class MemberChangeConflict" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MemberChangeConflict extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.MemberChangeConflict" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MemberChangeConflict" />
  <TypeSignature Language="C++ CLI" Value="public ref class MemberChangeConflict sealed" />
  <TypeSignature Language="F#" Value="type MemberChangeConflict = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="867f3-101">Representa uma situação em que uma tentativa de atualização falha porque os valores de membro foram atualizados desde que o último cliente os leu.</span>
      <span class="sxs-lookup">
        <span data-stu-id="867f3-101">Represents a situation in which an attempted update fails because member values have been updated since the client last read them.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="867f3-102">O exemplo a seguir mostra como recuperar informações sobre membros em conflito.</span><span class="sxs-lookup"><span data-stu-id="867f3-102">The following example shows how to retrieve information about members in conflict.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.MemberChangeConflict#1](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.memberchangeconflict/cs/program.cs#1)]
 [!code-vb[System.Data.Linq.MemberChangeConflict#1](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.memberchangeconflict/vb/module1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CurrentValue">
      <MemberSignature Language="C#" Value="public object CurrentValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CurrentValue" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.MemberChangeConflict.CurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CurrentValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentValue : obj" Usage="System.Data.Linq.MemberChangeConflict.CurrentValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="867f3-103">Obtém o valor atual do membro em conflito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="867f3-103">Gets the current value of the member in conflict.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="867f3-104">O objeto em conflito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="867f3-104">The object in conflict.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DatabaseValue">
      <MemberSignature Language="C#" Value="public object DatabaseValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DatabaseValue" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.MemberChangeConflict.DatabaseValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DatabaseValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DatabaseValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DatabaseValue : obj" Usage="System.Data.Linq.MemberChangeConflict.DatabaseValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="867f3-105">Obtém o valor do banco de dados do membro em conflito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="867f3-105">Gets the database value of the member in conflict.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="867f3-106">O valor do objeto em conflito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="867f3-106">The value of the object in conflict.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsModified">
      <MemberSignature Language="C#" Value="public bool IsModified { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsModified" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.MemberChangeConflict.IsModified" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsModified As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsModified { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsModified : bool" Usage="System.Data.Linq.MemberChangeConflict.IsModified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="867f3-107">Obtém um valor que indica se os dados do membro foram alterados desde a última leitura ou atualização do banco de dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="867f3-107">Gets a value that indicates whether the member data has been changed since the last database read or refresh.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="867f3-108">
            <see langword="True" /> Se os dados de membro tem sido alterados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="867f3-108">
              <see langword="True" /> if the member data has been changed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="867f3-109">Use a propriedade para mesclar os novos valores sem substituir as atualizações pendentes.</span><span class="sxs-lookup"><span data-stu-id="867f3-109">Use the property to merge new values without overwriting pending updates.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsResolved">
      <MemberSignature Language="C#" Value="public bool IsResolved { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsResolved" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.MemberChangeConflict.IsResolved" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsResolved As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsResolved { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsResolved : bool" Usage="System.Data.Linq.MemberChangeConflict.IsResolved" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="867f3-110">Obtém um valor que indica se o conflito foi resolvido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="867f3-110">Gets a value that indicates whether the conflict has been resolved.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="867f3-111">
            <see langword="True" /> Se o conflito foi resolvido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="867f3-111">
              <see langword="True" /> if the conflict has been resolved.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="867f3-112">Essa propriedade é somente leitura e é atualizada automaticamente conforme os conflitos são resolvidos.</span><span class="sxs-lookup"><span data-stu-id="867f3-112">This property is read-only and is automatically updated as conflicts are resolved.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Member">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo Member { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MemberInfo Member" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.MemberChangeConflict.Member" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Member As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MemberInfo ^ Member { System::Reflection::MemberInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Member : System.Reflection.MemberInfo" Usage="System.Data.Linq.MemberChangeConflict.Member" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="867f3-113">Obtém informações de metadados sobre o membro em conflito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="867f3-113">Gets metadata information about the member in conflict.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="867f3-114">Informações sobre o membro em conflito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="867f3-114">Information about the member in conflict.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalValue">
      <MemberSignature Language="C#" Value="public object OriginalValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object OriginalValue" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.MemberChangeConflict.OriginalValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OriginalValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ OriginalValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OriginalValue : obj" Usage="System.Data.Linq.MemberChangeConflict.OriginalValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="867f3-115">Obtém o valor original do membro em conflito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="867f3-115">Gets the original value of the member in conflict.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="867f3-116">O valor original do membro em conflito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="867f3-116">The original value of the member in conflict.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Resolve">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="867f3-117">Resolve conflitos de membro mantendo os valores atuais e redefinindo os valores originais da linha de base para que correspondam aos valores mais recentes do banco de dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="867f3-117">Resolves member conflicts by keeping current values and resetting the baseline original values to match the more recent database values.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public void Resolve (System.Data.Linq.RefreshMode refreshMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resolve(valuetype System.Data.Linq.RefreshMode refreshMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.MemberChangeConflict.Resolve(System.Data.Linq.RefreshMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resolve(System::Data::Linq::RefreshMode refreshMode);" />
      <MemberSignature Language="F#" Value="member this.Resolve : System.Data.Linq.RefreshMode -&gt; unit" Usage="memberChangeConflict.Resolve refreshMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="refreshMode" Type="System.Data.Linq.RefreshMode" />
      </Parameters>
      <Docs>
        <param name="refreshMode">
          <span data-ttu-id="867f3-118">Consulte <see cref="T:System.Data.Linq.RefreshMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="867f3-118">See <see cref="T:System.Data.Linq.RefreshMode" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="867f3-119">Usa um parâmetro <see cref="T:System.Data.Linq.RefreshMode" /> para especificar automaticamente o valor a ser definido como o valor atual para o membro em conflito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="867f3-119">Uses a <see cref="T:System.Data.Linq.RefreshMode" /> parameter to automatically specify the value to set as the current value for the member in conflict.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="867f3-120">Os seguintes exemplos mostram quais resultados são produzidos por meio de vários valores para <xref:System.Data.Linq.RefreshMode>.</span><span class="sxs-lookup"><span data-stu-id="867f3-120">The following examples show what results are produced by using the various values for <xref:System.Data.Linq.RefreshMode>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="867f3-121">O exemplo a seguir substitui os valores atuais com valores do banco de dados.</span><span class="sxs-lookup"><span data-stu-id="867f3-121">The following example overwrites current values with values from the database.</span></span>  
  
 [!code-csharp[System.Data.Linq.RefreshMode#1](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.refreshmode/cs/program.cs#1)]
 [!code-vb[System.Data.Linq.RefreshMode#1](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.refreshmode/vb/module1.vb#1)]  
  
 <span data-ttu-id="867f3-122">O exemplo a seguir mostra como alternar o valor original pelos valores recuperados do banco de dados.</span><span class="sxs-lookup"><span data-stu-id="867f3-122">The following example shows how to swap the original value with the values retrieved from the database.</span></span> <span data-ttu-id="867f3-123">Nenhum valor atual é modificado.</span><span class="sxs-lookup"><span data-stu-id="867f3-123">No current value is modified.</span></span>  
  
 [!code-csharp[System.Data.Linq.RefreshMode#2](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.refreshmode/cs/program.cs#2)]
 [!code-vb[System.Data.Linq.RefreshMode#2](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.refreshmode/vb/module1.vb#2)]  
  
 <span data-ttu-id="867f3-124">O exemplo a seguir mantém os valores atuais que foram alterados, mas atualiza os outros valores com os valores de banco de dados.</span><span class="sxs-lookup"><span data-stu-id="867f3-124">The following example keeps the current values that have been changed, but updates the other values with database values.</span></span>  
  
 [!code-csharp[System.Data.Linq.RefreshMode#3](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.refreshmode/cs/program.cs#3)]
 [!code-vb[System.Data.Linq.RefreshMode#3](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.refreshmode/vb/module1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public void Resolve (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resolve(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.MemberChangeConflict.Resolve(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resolve (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resolve(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.Resolve : obj -&gt; unit" Usage="memberChangeConflict.Resolve value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="867f3-125">O valor a ser definido como o valor atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="867f3-125">The value to set as the current value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="867f3-126">Especifica o valor a ser definido como o valor atual para o membro em conflito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="867f3-126">Specifies the value to set as the current value for the member in conflict.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="867f3-127">O valor definido aqui é o valor a ser usado em um subsequente <xref:System.Data.Linq.DataContext.SubmitChanges%2A> operação.</span><span class="sxs-lookup"><span data-stu-id="867f3-127">The value set here is the value to be used in a subsequent <xref:System.Data.Linq.DataContext.SubmitChanges%2A> operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>