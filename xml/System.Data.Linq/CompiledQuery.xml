<Type Name="CompiledQuery" FullName="System.Data.Linq.CompiledQuery">
  <Metadata><Meta Name="ms.openlocfilehash" Value="55159785e0ea17bd63705f635645ffa6cbdcdeab" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39794339" /></Metadata><TypeSignature Language="C#" Value="public sealed class CompiledQuery" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CompiledQuery extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.CompiledQuery" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CompiledQuery" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompiledQuery sealed" />
  <TypeSignature Language="F#" Value="type CompiledQuery = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornece compilação e cache de consultas para reutilização.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Conceitualmente, essa classe contém um único método (`Compile`) com várias sobrecargas. Você chama o <xref:System.Data.Linq.CompiledQuery.Compile%2A> método para criar um novo delegado para representar a consulta compilada.  
  
> [!NOTE]
>  Compilação não ocorrerá até que a primeira vez em que a consulta é executada.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Compile&lt;TArg0,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TResult&gt; Compile&lt;TArg0,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TResult&gt;&gt; query) where TArg0 : System.Data.Linq.DataContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`2&lt;!!TArg0, !!TResult&gt; Compile&lt;(class System.Data.Linq.DataContext) TArg0, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TArg0, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As DataContext, TResult As DataContext) (query As Expression(Of Func(Of TArg0, TResult))) As Func(Of TArg0, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TResult&gt;&#xA; where TArg0 : System::Data::Linq::DataContext static Func&lt;TArg0, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TResult&gt; ^&gt; ^ query);" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'Result (requires 'TArg0 :&gt; System.Data.Linq.DataContext)&gt; (requires 'TArg0 :&gt; System.Data.Linq.DataContext)" Usage="System.Data.Linq.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Linq.DataContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TResult">O tipo de <see langword="T" /> no <see cref="T:System.Collections.Generic.IEnumerable`1" /> retornado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <param name="query">A expressão de consulta a ser compilada.</param>
        <summary>Compila a consulta.</summary>
        <returns>Um delegado genérico que representa a consulta compilada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Consulte <xref:System.Data.Linq.CompiledQuery.Compile%2A>.  
  
   
  
## Examples  
 Consulte <xref:System.Data.Linq.CompiledQuery.Compile%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TResult&gt; Compile&lt;TArg0,TArg1,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TResult&gt;&gt; query) where TArg0 : System.Data.Linq.DataContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`3&lt;!!TArg0, !!TArg1, !!TResult&gt; Compile&lt;(class System.Data.Linq.DataContext) TArg0, TArg1, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TArg0, !!TArg1, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.CompiledQuery.Compile``3(System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As DataContext, TArg1 As DataContext, TResult As DataContext) (query As Expression(Of Func(Of TArg0, TArg1, TResult))) As Func(Of TArg0, TArg1, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TArg1, typename TResult&gt;&#xA; where TArg0 : System::Data::Linq::DataContext static Func&lt;TArg0, TArg1, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TArg1, TResult&gt; ^&gt; ^ query);" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'TArg1, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'TArg1, 'Result (requires 'TArg0 :&gt; System.Data.Linq.DataContext)&gt; (requires 'TArg0 :&gt; System.Data.Linq.DataContext)" Usage="System.Data.Linq.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Linq.DataContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg1">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TResult">O tipo de <see langword="T" /> no <see cref="T:System.Collections.Generic.IEnumerable`1" /> retornado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <param name="query">A expressão de consulta a ser compilada.</param>
        <summary>Compila a consulta.</summary>
        <returns>Um delegado genérico que representa a consulta compilada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Consulte <xref:System.Data.Linq.CompiledQuery.Compile%2A>.  
  
   
  
## Examples  
 Consulte <xref:System.Data.Linq.CompiledQuery.Compile%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TResult&gt;&gt; query) where TArg0 : System.Data.Linq.DataContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`4&lt;!!TArg0, !!TArg1, !!TArg2, !!TResult&gt; Compile&lt;(class System.Data.Linq.DataContext) TArg0, TArg1, TArg2, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`4&lt;!!TArg0, !!TArg1, !!TArg2, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.CompiledQuery.Compile``4(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As DataContext, TArg1 As DataContext, TArg2 As DataContext, TResult As DataContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TResult))) As Func(Of TArg0, TArg1, TArg2, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TArg1, typename TArg2, typename TResult&gt;&#xA; where TArg0 : System::Data::Linq::DataContext static Func&lt;TArg0, TArg1, TArg2, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TArg1, TArg2, TResult&gt; ^&gt; ^ query);" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'TArg1, 'TArg2, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'TArg1, 'TArg2, 'Result (requires 'TArg0 :&gt; System.Data.Linq.DataContext)&gt; (requires 'TArg0 :&gt; System.Data.Linq.DataContext)" Usage="System.Data.Linq.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Linq.DataContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg1">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg2">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TResult">O tipo de <see langword="T" /> no <see cref="T:System.Collections.Generic.IEnumerable`1" /> retornado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <param name="query">A expressão de consulta a ser compilada.</param>
        <summary>Compila a consulta.</summary>
        <returns>Um delegado genérico que representa a consulta compilada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Consulte <xref:System.Data.Linq.CompiledQuery.Compile%2A>.  
  
   
  
## Examples  
 Consulte <xref:System.Data.Linq.CompiledQuery.Compile%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TResult&gt;&gt; query) where TArg0 : System.Data.Linq.DataContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`5&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TResult&gt; Compile&lt;(class System.Data.Linq.DataContext) TArg0, TArg1, TArg2, TArg3, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`5&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.CompiledQuery.Compile``5(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As DataContext, TArg1 As DataContext, TArg2 As DataContext, TArg3 As DataContext, TResult As DataContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TArg1, typename TArg2, typename TArg3, typename TResult&gt;&#xA; where TArg0 : System::Data::Linq::DataContext static Func&lt;TArg0, TArg1, TArg2, TArg3, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TArg1, TArg2, TArg3, TResult&gt; ^&gt; ^ query);" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'Result (requires 'TArg0 :&gt; System.Data.Linq.DataContext)&gt; (requires 'TArg0 :&gt; System.Data.Linq.DataContext)" Usage="System.Data.Linq.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Linq.DataContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg1">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg2">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg3">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TResult">O tipo de <see langword="T" /> no <see cref="T:System.Collections.Generic.IEnumerable`1" /> retornado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <param name="query">A expressão de consulta a ser compilada.</param>
        <summary>Compila a consulta.</summary>
        <returns>Um delegado genérico que representa a consulta compilada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Consulte <xref:System.Data.Linq.CompiledQuery.Compile%2A>.  
  
   
  
## Examples  
 Consulte <xref:System.Data.Linq.CompiledQuery.Compile%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TResult&gt;&gt; query) where TArg0 : System.Data.Linq.DataContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`6&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TResult&gt; Compile&lt;(class System.Data.Linq.DataContext) TArg0, TArg1, TArg2, TArg3, TArg4, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`6&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.CompiledQuery.Compile``6(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As DataContext, TArg1 As DataContext, TArg2 As DataContext, TArg3 As DataContext, TArg4 As DataContext, TResult As DataContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TArg1, typename TArg2, typename TArg3, typename TArg4, typename TResult&gt;&#xA; where TArg0 : System::Data::Linq::DataContext static Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TResult&gt; ^&gt; ^ query);" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'Result (requires 'TArg0 :&gt; System.Data.Linq.DataContext)&gt; (requires 'TArg0 :&gt; System.Data.Linq.DataContext)" Usage="System.Data.Linq.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Linq.DataContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg1">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg2">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg3">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg4">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TResult">O tipo de <see langword="T" /> no <see cref="T:System.Collections.Generic.IEnumerable`1" /> retornado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <param name="query">A expressão de consulta a ser compilada.</param>
        <summary>Compila a consulta.</summary>
        <returns>Um delegado genérico que representa a consulta compilada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Consulte <xref:System.Data.Linq.CompiledQuery.Compile%2A>.  
  
   
  
## Examples  
 Consulte <xref:System.Data.Linq.CompiledQuery.Compile%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult&gt;&gt; query) where TArg0 : System.Data.Linq.DataContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`7&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TResult&gt; Compile&lt;(class System.Data.Linq.DataContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`7&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.CompiledQuery.Compile``7(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As DataContext, TArg1 As DataContext, TArg2 As DataContext, TArg3 As DataContext, TArg4 As DataContext, TArg5 As DataContext, TResult As DataContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TArg1, typename TArg2, typename TArg3, typename TArg4, typename TArg5, typename TResult&gt;&#xA; where TArg0 : System::Data::Linq::DataContext static Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TResult&gt; ^&gt; ^ query);" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'Result (requires 'TArg0 :&gt; System.Data.Linq.DataContext)&gt; (requires 'TArg0 :&gt; System.Data.Linq.DataContext)" Usage="System.Data.Linq.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Linq.DataContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg1">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg2">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg3">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg4">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg5">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TResult">O tipo de <see langword="T" /> no <see cref="T:System.Collections.Generic.IEnumerable`1" /> retornado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <param name="query">A expressão de consulta a ser compilada.</param>
        <summary>Compila a consulta.</summary>
        <returns>Um delegado genérico que representa a consulta compilada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Consulte <xref:System.Data.Linq.CompiledQuery.Compile%2A>.  
  
   
  
## Examples  
 Consulte <xref:System.Data.Linq.CompiledQuery.Compile%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult&gt;&gt; query) where TArg0 : System.Data.Linq.DataContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`8&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TResult&gt; Compile&lt;(class System.Data.Linq.DataContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`8&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.CompiledQuery.Compile``8(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As DataContext, TArg1 As DataContext, TArg2 As DataContext, TArg3 As DataContext, TArg4 As DataContext, TArg5 As DataContext, TArg6 As DataContext, TResult As DataContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TArg1, typename TArg2, typename TArg3, typename TArg4, typename TArg5, typename TArg6, typename TResult&gt;&#xA; where TArg0 : System::Data::Linq::DataContext static Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TResult&gt; ^&gt; ^ query);" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'Result (requires 'TArg0 :&gt; System.Data.Linq.DataContext)&gt; (requires 'TArg0 :&gt; System.Data.Linq.DataContext)" Usage="System.Data.Linq.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Linq.DataContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TArg6" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg1">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg2">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg3">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg4">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg5">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg6">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TResult">O tipo de <see langword="T" /> no <see cref="T:System.Collections.Generic.IEnumerable`1" /> retornado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <param name="query">A expressão de consulta a ser compilada.</param>
        <summary>Compila a consulta.</summary>
        <returns>Um delegado genérico que representa a consulta compilada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Consulte <xref:System.Data.Linq.CompiledQuery.Compile%2A>.  
  
   
  
## Examples  
 Consulte <xref:System.Data.Linq.CompiledQuery.Compile%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult&gt;&gt; query) where TArg0 : System.Data.Linq.DataContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`9&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TResult&gt; Compile&lt;(class System.Data.Linq.DataContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`9&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.CompiledQuery.Compile``9(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As DataContext, TArg1 As DataContext, TArg2 As DataContext, TArg3 As DataContext, TArg4 As DataContext, TArg5 As DataContext, TArg6 As DataContext, TArg7 As DataContext, TResult As DataContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TArg1, typename TArg2, typename TArg3, typename TArg4, typename TArg5, typename TArg6, typename TArg7, typename TResult&gt;&#xA; where TArg0 : System::Data::Linq::DataContext static Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TResult&gt; ^&gt; ^ query);" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'Result (requires 'TArg0 :&gt; System.Data.Linq.DataContext)&gt; (requires 'TArg0 :&gt; System.Data.Linq.DataContext)" Usage="System.Data.Linq.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Linq.DataContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TArg6" />
        <TypeParameter Name="TArg7" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg1">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg2">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg3">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg4">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg5">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg6">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg7">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TResult">O tipo de <see langword="T" /> no <see cref="T:System.Collections.Generic.IEnumerable`1" /> retornado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <param name="query">A expressão de consulta a ser compilada.</param>
        <summary>Compila a consulta.</summary>
        <returns>Um delegado genérico que representa a consulta compilada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Consulte <xref:System.Data.Linq.CompiledQuery.Compile%2A>.  
  
   
  
## Examples  
 Consulte <xref:System.Data.Linq.CompiledQuery.Compile%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult&gt;&gt; query) where TArg0 : System.Data.Linq.DataContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`10&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TResult&gt; Compile&lt;(class System.Data.Linq.DataContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`10&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.CompiledQuery.Compile``10(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As DataContext, TArg1 As DataContext, TArg2 As DataContext, TArg3 As DataContext, TArg4 As DataContext, TArg5 As DataContext, TArg6 As DataContext, TArg7 As DataContext, TArg8 As DataContext, TResult As DataContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TArg1, typename TArg2, typename TArg3, typename TArg4, typename TArg5, typename TArg6, typename TArg7, typename TArg8, typename TResult&gt;&#xA; where TArg0 : System::Data::Linq::DataContext static Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TResult&gt; ^&gt; ^ query);" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'Result (requires 'TArg0 :&gt; System.Data.Linq.DataContext)&gt; (requires 'TArg0 :&gt; System.Data.Linq.DataContext)" Usage="System.Data.Linq.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Linq.DataContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TArg6" />
        <TypeParameter Name="TArg7" />
        <TypeParameter Name="TArg8" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg1">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg2">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg3">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg4">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg5">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg6">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg7">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg8">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TResult">O tipo de <see langword="T" /> no <see cref="T:System.Collections.Generic.IEnumerable`1" /> retornado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <param name="query">A expressão de consulta a ser compilada.</param>
        <summary>Compila a consulta.</summary>
        <returns>Um delegado genérico que representa a consulta compilada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Consulte <xref:System.Data.Linq.CompiledQuery.Compile%2A>.  
  
   
  
## Examples  
 Consulte <xref:System.Data.Linq.CompiledQuery.Compile%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult&gt;&gt; query) where TArg0 : System.Data.Linq.DataContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`11&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TResult&gt; Compile&lt;(class System.Data.Linq.DataContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`11&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.CompiledQuery.Compile``11(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As DataContext, TArg1 As DataContext, TArg2 As DataContext, TArg3 As DataContext, TArg4 As DataContext, TArg5 As DataContext, TArg6 As DataContext, TArg7 As DataContext, TArg8 As DataContext, TArg9 As DataContext, TResult As DataContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TArg1, typename TArg2, typename TArg3, typename TArg4, typename TArg5, typename TArg6, typename TArg7, typename TArg8, typename TArg9, typename TResult&gt;&#xA; where TArg0 : System::Data::Linq::DataContext static Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TResult&gt; ^&gt; ^ query);" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'TArg9, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'TArg9, 'Result (requires 'TArg0 :&gt; System.Data.Linq.DataContext)&gt; (requires 'TArg0 :&gt; System.Data.Linq.DataContext)" Usage="System.Data.Linq.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Linq.DataContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TArg6" />
        <TypeParameter Name="TArg7" />
        <TypeParameter Name="TArg8" />
        <TypeParameter Name="TArg9" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg1">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg2">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg3">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg4">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg5">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg6">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg7">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg8">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg9">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TResult">O tipo de <see langword="T" /> no <see cref="T:System.Collections.Generic.IEnumerable`1" /> retornado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <param name="query">A expressão de consulta a ser compilada.</param>
        <summary>Compila a consulta.</summary>
        <returns>Um delegado genérico que representa a consulta compilada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Consulte <xref:System.Data.Linq.CompiledQuery.Compile%2A>.  
  
   
  
## Examples  
 Consulte <xref:System.Data.Linq.CompiledQuery.Compile%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult&gt;&gt; query) where TArg0 : System.Data.Linq.DataContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`12&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TResult&gt; Compile&lt;(class System.Data.Linq.DataContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`12&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.CompiledQuery.Compile``12(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As DataContext, TArg1 As DataContext, TArg2 As DataContext, TArg3 As DataContext, TArg4 As DataContext, TArg5 As DataContext, TArg6 As DataContext, TArg7 As DataContext, TArg8 As DataContext, TArg9 As DataContext, TArg10 As DataContext, TResult As DataContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TArg1, typename TArg2, typename TArg3, typename TArg4, typename TArg5, typename TArg6, typename TArg7, typename TArg8, typename TArg9, typename TArg10, typename TResult&gt;&#xA; where TArg0 : System::Data::Linq::DataContext static Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TResult&gt; ^&gt; ^ query);" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'TArg9, 'TArg10, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'TArg9, 'TArg10, 'Result (requires 'TArg0 :&gt; System.Data.Linq.DataContext)&gt; (requires 'TArg0 :&gt; System.Data.Linq.DataContext)" Usage="System.Data.Linq.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Linq.DataContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TArg6" />
        <TypeParameter Name="TArg7" />
        <TypeParameter Name="TArg8" />
        <TypeParameter Name="TArg9" />
        <TypeParameter Name="TArg10" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg1">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg2">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg3">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg4">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg5">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg6">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg7">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg8">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg9">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg10">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TResult">O tipo de <see langword="T" /> no <see cref="T:System.Collections.Generic.IEnumerable`1" /> retornado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <param name="query">A expressão de consulta a ser compilada.</param>
        <summary>Compila a consulta.</summary>
        <returns>Um delegado genérico que representa a consulta compilada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Consulte <xref:System.Data.Linq.CompiledQuery.Compile%2A>.  
  
   
  
## Examples  
 Consulte <xref:System.Data.Linq.CompiledQuery.Compile%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult&gt;&gt; query) where TArg0 : System.Data.Linq.DataContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`13&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TArg11, !!TResult&gt; Compile&lt;(class System.Data.Linq.DataContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`13&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TArg11, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.CompiledQuery.Compile``13(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As DataContext, TArg1 As DataContext, TArg2 As DataContext, TArg3 As DataContext, TArg4 As DataContext, TArg5 As DataContext, TArg6 As DataContext, TArg7 As DataContext, TArg8 As DataContext, TArg9 As DataContext, TArg10 As DataContext, TArg11 As DataContext, TResult As DataContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TArg1, typename TArg2, typename TArg3, typename TArg4, typename TArg5, typename TArg6, typename TArg7, typename TArg8, typename TArg9, typename TArg10, typename TArg11, typename TResult&gt;&#xA; where TArg0 : System::Data::Linq::DataContext static Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TResult&gt; ^&gt; ^ query);" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'TArg9, 'TArg10, 'TArg11, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'TArg9, 'TArg10, 'TArg11, 'Result (requires 'TArg0 :&gt; System.Data.Linq.DataContext)&gt; (requires 'TArg0 :&gt; System.Data.Linq.DataContext)" Usage="System.Data.Linq.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Linq.DataContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TArg6" />
        <TypeParameter Name="TArg7" />
        <TypeParameter Name="TArg8" />
        <TypeParameter Name="TArg9" />
        <TypeParameter Name="TArg10" />
        <TypeParameter Name="TArg11" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg1">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg2">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg3">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg4">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg5">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg6">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg7">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg8">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg9">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg10">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg11">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TResult">O tipo de <see langword="T" /> no <see cref="T:System.Collections.Generic.IEnumerable`1" /> retornado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <param name="query">A expressão de consulta a ser compilada.</param>
        <summary>Compila a consulta.</summary>
        <returns>Um delegado genérico que representa a consulta compilada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Consulte <xref:System.Data.Linq.CompiledQuery.Compile%2A>.  
  
   
  
## Examples  
 Consulte <xref:System.Data.Linq.CompiledQuery.Compile%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult&gt;&gt; query) where TArg0 : System.Data.Linq.DataContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`14&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TArg11, !!TArg12, !!TResult&gt; Compile&lt;(class System.Data.Linq.DataContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`14&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TArg11, !!TArg12, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.CompiledQuery.Compile``14(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As DataContext, TArg1 As DataContext, TArg2 As DataContext, TArg3 As DataContext, TArg4 As DataContext, TArg5 As DataContext, TArg6 As DataContext, TArg7 As DataContext, TArg8 As DataContext, TArg9 As DataContext, TArg10 As DataContext, TArg11 As DataContext, TArg12 As DataContext, TResult As DataContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TArg1, typename TArg2, typename TArg3, typename TArg4, typename TArg5, typename TArg6, typename TArg7, typename TArg8, typename TArg9, typename TArg10, typename TArg11, typename TArg12, typename TResult&gt;&#xA; where TArg0 : System::Data::Linq::DataContext static Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TResult&gt; ^&gt; ^ query);" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'TArg9, 'TArg10, 'TArg11, 'TArg12, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'TArg9, 'TArg10, 'TArg11, 'TArg12, 'Result (requires 'TArg0 :&gt; System.Data.Linq.DataContext)&gt; (requires 'TArg0 :&gt; System.Data.Linq.DataContext)" Usage="System.Data.Linq.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Linq.DataContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TArg6" />
        <TypeParameter Name="TArg7" />
        <TypeParameter Name="TArg8" />
        <TypeParameter Name="TArg9" />
        <TypeParameter Name="TArg10" />
        <TypeParameter Name="TArg11" />
        <TypeParameter Name="TArg12" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg1">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg2">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg3">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg4">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg5">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg6">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg7">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg8">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg9">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg10">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg11">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg12">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TResult">O tipo de <see langword="T" /> no <see cref="T:System.Collections.Generic.IEnumerable`1" /> retornado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <param name="query">A expressão de consulta a ser compilada.</param>
        <summary>Compila a consulta.</summary>
        <returns>Um delegado genérico que representa a consulta compilada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Consulte <xref:System.Data.Linq.CompiledQuery.Compile%2A>.  
  
   
  
## Examples  
 Consulte <xref:System.Data.Linq.CompiledQuery.Compile%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult&gt;&gt; query) where TArg0 : System.Data.Linq.DataContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`15&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TArg11, !!TArg12, !!TArg13, !!TResult&gt; Compile&lt;(class System.Data.Linq.DataContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`15&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TArg11, !!TArg12, !!TArg13, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.CompiledQuery.Compile``15(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As DataContext, TArg1 As DataContext, TArg2 As DataContext, TArg3 As DataContext, TArg4 As DataContext, TArg5 As DataContext, TArg6 As DataContext, TArg7 As DataContext, TArg8 As DataContext, TArg9 As DataContext, TArg10 As DataContext, TArg11 As DataContext, TArg12 As DataContext, TArg13 As DataContext, TResult As DataContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TArg1, typename TArg2, typename TArg3, typename TArg4, typename TArg5, typename TArg6, typename TArg7, typename TArg8, typename TArg9, typename TArg10, typename TArg11, typename TArg12, typename TArg13, typename TResult&gt;&#xA; where TArg0 : System::Data::Linq::DataContext static Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TResult&gt; ^&gt; ^ query);" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'TArg9, 'TArg10, 'TArg11, 'TArg12, 'TArg13, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'TArg9, 'TArg10, 'TArg11, 'TArg12, 'TArg13, 'Result (requires 'TArg0 :&gt; System.Data.Linq.DataContext)&gt; (requires 'TArg0 :&gt; System.Data.Linq.DataContext)" Usage="System.Data.Linq.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Linq.DataContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TArg6" />
        <TypeParameter Name="TArg7" />
        <TypeParameter Name="TArg8" />
        <TypeParameter Name="TArg9" />
        <TypeParameter Name="TArg10" />
        <TypeParameter Name="TArg11" />
        <TypeParameter Name="TArg12" />
        <TypeParameter Name="TArg13" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg1">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg2">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg3">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg4">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg5">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg6">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg7">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg8">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg9">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg10">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg11">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg12">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg13">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TResult">O tipo de <see langword="T" /> no <see cref="T:System.Collections.Generic.IEnumerable`1" /> retornado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <param name="query">A expressão de consulta a ser compilada.</param>
        <summary>Compila a consulta.</summary>
        <returns>Um delegado genérico que representa a consulta compilada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Consulte <xref:System.Data.Linq.CompiledQuery.Compile%2A>.  
  
   
  
## Examples  
 Consulte <xref:System.Data.Linq.CompiledQuery.Compile%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult&gt;&gt; query) where TArg0 : System.Data.Linq.DataContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`16&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TArg11, !!TArg12, !!TArg13, !!TArg14, !!TResult&gt; Compile&lt;(class System.Data.Linq.DataContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`16&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TArg11, !!TArg12, !!TArg13, !!TArg14, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.CompiledQuery.Compile``16(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As DataContext, TArg1 As DataContext, TArg2 As DataContext, TArg3 As DataContext, TArg4 As DataContext, TArg5 As DataContext, TArg6 As DataContext, TArg7 As DataContext, TArg8 As DataContext, TArg9 As DataContext, TArg10 As DataContext, TArg11 As DataContext, TArg12 As DataContext, TArg13 As DataContext, TArg14 As DataContext, TResult As DataContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TArg1, typename TArg2, typename TArg3, typename TArg4, typename TArg5, typename TArg6, typename TArg7, typename TArg8, typename TArg9, typename TArg10, typename TArg11, typename TArg12, typename TArg13, typename TArg14, typename TResult&gt;&#xA; where TArg0 : System::Data::Linq::DataContext static Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TResult&gt; ^&gt; ^ query);" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'TArg9, 'TArg10, 'TArg11, 'TArg12, 'TArg13, 'TArg14, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'TArg9, 'TArg10, 'TArg11, 'TArg12, 'TArg13, 'TArg14, 'Result (requires 'TArg0 :&gt; System.Data.Linq.DataContext)&gt; (requires 'TArg0 :&gt; System.Data.Linq.DataContext)" Usage="System.Data.Linq.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Linq.DataContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TArg6" />
        <TypeParameter Name="TArg7" />
        <TypeParameter Name="TArg8" />
        <TypeParameter Name="TArg9" />
        <TypeParameter Name="TArg10" />
        <TypeParameter Name="TArg11" />
        <TypeParameter Name="TArg12" />
        <TypeParameter Name="TArg13" />
        <TypeParameter Name="TArg14" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg1">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg2">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg3">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg4">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg5">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg6">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg7">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg8">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg9">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg10">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg11">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg12">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg13">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg14">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TResult">O tipo de <see langword="T" /> no <see cref="T:System.Collections.Generic.IEnumerable`1" /> retornado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <param name="query">A expressão de consulta a ser compilada.</param>
        <summary>Compila a consulta.</summary>
        <returns>Um delegado genérico que representa a consulta compilada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Consulte <xref:System.Data.Linq.CompiledQuery.Compile%2A>.  
  
   
  
## Examples  
 Consulte <xref:System.Data.Linq.CompiledQuery.Compile%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult&gt;&gt; query) where TArg0 : System.Data.Linq.DataContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`17&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TArg11, !!TArg12, !!TArg13, !!TArg14, !!TArg15, !!TResult&gt; Compile&lt;(class System.Data.Linq.DataContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TArg15, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`17&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TArg11, !!TArg12, !!TArg13, !!TArg14, !!TArg15, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.CompiledQuery.Compile``17(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As DataContext, TArg1 As DataContext, TArg2 As DataContext, TArg3 As DataContext, TArg4 As DataContext, TArg5 As DataContext, TArg6 As DataContext, TArg7 As DataContext, TArg8 As DataContext, TArg9 As DataContext, TArg10 As DataContext, TArg11 As DataContext, TArg12 As DataContext, TArg13 As DataContext, TArg14 As DataContext, TArg15 As DataContext, TResult As DataContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TArg15, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TArg15, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TArg1, typename TArg2, typename TArg3, typename TArg4, typename TArg5, typename TArg6, typename TArg7, typename TArg8, typename TArg9, typename TArg10, typename TArg11, typename TArg12, typename TArg13, typename TArg14, typename TArg15, typename TResult&gt;&#xA; where TArg0 : System::Data::Linq::DataContext static Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TArg15, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TArg15, TResult&gt; ^&gt; ^ query);" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'TArg9, 'TArg10, 'TArg11, 'TArg12, 'TArg13, 'TArg14, 'TArg15, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'TArg9, 'TArg10, 'TArg11, 'TArg12, 'TArg13, 'TArg14, 'TArg15, 'Result (requires 'TArg0 :&gt; System.Data.Linq.DataContext)&gt; (requires 'TArg0 :&gt; System.Data.Linq.DataContext)" Usage="System.Data.Linq.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Linq.DataContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TArg6" />
        <TypeParameter Name="TArg7" />
        <TypeParameter Name="TArg8" />
        <TypeParameter Name="TArg9" />
        <TypeParameter Name="TArg10" />
        <TypeParameter Name="TArg11" />
        <TypeParameter Name="TArg12" />
        <TypeParameter Name="TArg13" />
        <TypeParameter Name="TArg14" />
        <TypeParameter Name="TArg15" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg1">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg2">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg3">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg4">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg5">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg6">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg7">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg8">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg9">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg10">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg11">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg12">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg13">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg14">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TArg15">Representa o tipo do parâmetro que deve ser passado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <typeparam name="TResult">O tipo de <see langword="T" /> no <see cref="T:System.Collections.Generic.IEnumerable`1" /> retornado ao executar o delegado retornado pelo método <see cref="M:System.Data.Linq.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</typeparam>
        <param name="query">A expressão de consulta a ser compilada.</param>
        <summary>Compila a consulta.</summary>
        <returns>Um delegado genérico que representa a consulta compilada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Consulte <xref:System.Data.Linq.CompiledQuery.Compile%2A>.  
  
   
  
## Examples  
 Consulte <xref:System.Data.Linq.CompiledQuery.Compile%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.LambdaExpression Expression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.Expressions.LambdaExpression Expression" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.CompiledQuery.Expression" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Expression As LambdaExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Linq::Expressions::LambdaExpression ^ Expression { System::Linq::Expressions::LambdaExpression ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Expression : System.Linq.Expressions.LambdaExpression" Usage="System.Data.Linq.CompiledQuery.Expression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LambdaExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retorna a consulta como uma expressão lambda.</summary>
        <value>A expressão lambda que representa a consulta.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>