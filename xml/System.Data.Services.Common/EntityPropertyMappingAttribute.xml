<Type Name="EntityPropertyMappingAttribute" FullName="System.Data.Services.Common.EntityPropertyMappingAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="60d2da9437c7e860bc72b060a3ac11563f52a303" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51876898" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EntityPropertyMappingAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EntityPropertyMappingAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Data.Services.Common.EntityPropertyMappingAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EntityPropertyMappingAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class EntityPropertyMappingAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type EntityPropertyMappingAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Services.Client</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=true, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="19770-101">Atributo que especifica um mapeamento personalizado entre as propriedades de um tipo de entidade e elementos de uma entrada em um feed retornado pelo WCF Data Services.</span>
      <span class="sxs-lookup">
        <span data-stu-id="19770-101">Attribute that specifies a custom mapping between properties of an entity type and elements of an entry in a feed returned by WCF Data Services.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19770-102">O <xref:System.Data.Services.Common.EntityPropertyMappingAttribute> é usado para definir o mapeamento de feed personalizado no modelo de dados de um provedor de reflexão.</span><span class="sxs-lookup"><span data-stu-id="19770-102">The <xref:System.Data.Services.Common.EntityPropertyMappingAttribute> is used to define custom feed mapping in the data model of a reflection provider.</span></span> <span data-ttu-id="19770-103">Esse atributo também é aplicado a classes de serviço de dados do cliente gerado quando os metadados usados para gerar as classes indicam que os mapeamentos de feed personalizados são definidos no modelo de dados.</span><span class="sxs-lookup"><span data-stu-id="19770-103">This attribute is also applied to generated client data service classes when the metadata used to generate the classes indicates that custom feed mappings are defined in the data model.</span></span> <span data-ttu-id="19770-104">Essas informações são necessárias para certificar-se de que o cliente pode criar e consumir mensagens que dão suporte a feeds personalizados.</span><span class="sxs-lookup"><span data-stu-id="19770-104">This information is necessary to make sure that the client can create and consume messages that support custom feeds.</span></span> <span data-ttu-id="19770-105">Para obter mais informações, consulte [personalização de Feed](~/docs/framework/data/wcf/feed-customization-wcf-data-services.md).</span><span class="sxs-lookup"><span data-stu-id="19770-105">For more information, see [Feed Customization](~/docs/framework/data/wcf/feed-customization-wcf-data-services.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19770-106">No exemplo a seguir, ambas as propriedades do `Order` tipo são mapeados para existente de feed de elementos.</span><span class="sxs-lookup"><span data-stu-id="19770-106">In the following example, both properties of the `Order` type are mapped to existing feed elements.</span></span> <span data-ttu-id="19770-107">O `Product` propriedade do `Item` tipo é mapeado para um atributo de feed personalizado em um namespace separado.</span><span class="sxs-lookup"><span data-stu-id="19770-107">The `Product` property of the `Item` type is mapped to a custom feed attribute in a separate namespace.</span></span>  
  
 [!code-csharp[Astoria Custom Feeds#CustomIQueryableFeeds](~/samples/snippets/csharp/VS_Snippets_Misc/astoria custom feeds/cs/orderitems.svc.cs#customiqueryablefeeds)]
 [!code-vb[Astoria Custom Feeds#CustomIQueryableFeeds](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria custom feeds/vb/orderitems.svc.vb#customiqueryablefeeds)]  
  
 <span data-ttu-id="19770-108">O exemplo anterior retorna o resultado a seguir para o URI `http://myservice/OrderItems.svc/Orders(0)?$expand=Items`.</span><span class="sxs-lookup"><span data-stu-id="19770-108">The previous example returns the following result for the URI `http://myservice/OrderItems.svc/Orders(0)?$expand=Items`.</span></span>  
  
 [!code-xml[Astoria Custom Feeds#IQueryableFeedResultInline](~/samples/snippets/xml/VS_Snippets_Misc/astoria custom feeds/xml/iqueryablefeedresultinline.xml#iqueryablefeedresultinline)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/7315c6d8-f452-4fb2-a0c1-76ab0593c146">
      <span data-ttu-id="19770-109">Como: criar um serviço de dados usando o provedor de reflexão (WCF Data Services)</span>
      <span class="sxs-lookup">
        <span data-stu-id="19770-109">How to: Create a Data Service Using the Reflection Provider (WCF Data Services)</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="19770-110">Cria uma nova instância do <see cref="T:System.Data.Services.Common.EntityPropertyMappingAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19770-110">Creates a new instance of the <see cref="T:System.Data.Services.Common.EntityPropertyMappingAttribute" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityPropertyMappingAttribute (string sourcePath, System.Data.Services.Common.SyndicationItemProperty targetSyndicationItem, System.Data.Services.Common.SyndicationTextContentKind targetTextContentKind, bool keepInContent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string sourcePath, valuetype System.Data.Services.Common.SyndicationItemProperty targetSyndicationItem, valuetype System.Data.Services.Common.SyndicationTextContentKind targetTextContentKind, bool keepInContent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Common.EntityPropertyMappingAttribute.#ctor(System.String,System.Data.Services.Common.SyndicationItemProperty,System.Data.Services.Common.SyndicationTextContentKind,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sourcePath As String, targetSyndicationItem As SyndicationItemProperty, targetTextContentKind As SyndicationTextContentKind, keepInContent As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityPropertyMappingAttribute(System::String ^ sourcePath, System::Data::Services::Common::SyndicationItemProperty targetSyndicationItem, System::Data::Services::Common::SyndicationTextContentKind targetTextContentKind, bool keepInContent);" />
      <MemberSignature Language="F#" Value="new System.Data.Services.Common.EntityPropertyMappingAttribute : string * System.Data.Services.Common.SyndicationItemProperty * System.Data.Services.Common.SyndicationTextContentKind * bool -&gt; System.Data.Services.Common.EntityPropertyMappingAttribute" Usage="new System.Data.Services.Common.EntityPropertyMappingAttribute (sourcePath, targetSyndicationItem, targetTextContentKind, keepInContent)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sourcePath" Type="System.String" />
        <Parameter Name="targetSyndicationItem" Type="System.Data.Services.Common.SyndicationItemProperty" />
        <Parameter Name="targetTextContentKind" Type="System.Data.Services.Common.SyndicationTextContentKind" />
        <Parameter Name="keepInContent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sourcePath">
          <span data-ttu-id="19770-111">O nome da propriedade, como cadeia de caracteres, do tipo de entidade que é mapeado para a propriedade especificada no item de feed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19770-111">The name of the property, as string, of the entity type that is mapped to the specified property of the feed item.</span>
          </span>
        </param>
        <param name="targetSyndicationItem">
          <span data-ttu-id="19770-112">Um valor <see cref="T:System.Data.Services.Common.SyndicationItemProperty" /> que representa o elemento no feed para o qual a propriedade deve ser mapeada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19770-112">A <see cref="T:System.Data.Services.Common.SyndicationItemProperty" /> value that represents the element in the feed to which to map the property.</span>
          </span>
          <span data-ttu-id="19770-113">Esse valor precisará ser definido como <c>None</c> se o <see cref="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath" /> não for <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19770-113">This value must be set to <c>None</c> if the <see cref="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath" /> is not <see langword="null" />.</span>
          </span>
        </param>
        <param name="targetTextContentKind">
          <span data-ttu-id="19770-114">Um valor <see cref="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetTextContentKind" /> que identifica o formato do conteúdo a ser exibido no feed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19770-114">A <see cref="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetTextContentKind" /> value that identifies the format of the content to display in the feed.</span>
          </span>
        </param>
        <param name="keepInContent">
          <span data-ttu-id="19770-115">Valor booliano que é <see langword="true" /> quando a propriedade que está sendo mapeada deve aparecer em seu local mapeado e na seção de conteúdo do feed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19770-115">Boolean value that is <see langword="true" /> when the property being mapped should appear both in its mapped-to location and in the content section of the feed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19770-116">Cria uma nova instância do <see cref="T:System.Data.Services.Common.EntityPropertyMappingAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19770-116">Creates a new instance of the <see cref="T:System.Data.Services.Common.EntityPropertyMappingAttribute" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityPropertyMappingAttribute (string sourcePath, string targetPath, string targetNamespacePrefix, string targetNamespaceUri, bool keepInContent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string sourcePath, string targetPath, string targetNamespacePrefix, string targetNamespaceUri, bool keepInContent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Common.EntityPropertyMappingAttribute.#ctor(System.String,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sourcePath As String, targetPath As String, targetNamespacePrefix As String, targetNamespaceUri As String, keepInContent As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityPropertyMappingAttribute(System::String ^ sourcePath, System::String ^ targetPath, System::String ^ targetNamespacePrefix, System::String ^ targetNamespaceUri, bool keepInContent);" />
      <MemberSignature Language="F#" Value="new System.Data.Services.Common.EntityPropertyMappingAttribute : string * string * string * string * bool -&gt; System.Data.Services.Common.EntityPropertyMappingAttribute" Usage="new System.Data.Services.Common.EntityPropertyMappingAttribute (sourcePath, targetPath, targetNamespacePrefix, targetNamespaceUri, keepInContent)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sourcePath" Type="System.String" />
        <Parameter Name="targetPath" Type="System.String" />
        <Parameter Name="targetNamespacePrefix" Type="System.String" />
        <Parameter Name="targetNamespaceUri" Type="System.String" />
        <Parameter Name="keepInContent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sourcePath">
          <span data-ttu-id="19770-117">O nome da propriedade do tipo de entidade, como cadeia de caracteres, que é mapeada para a propriedade especificada no feed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19770-117">The name of the property of the entity type, as string, that is mapped to the specified property in the feed.</span>
          </span>
        </param>
        <param name="targetPath">
          <span data-ttu-id="19770-118">O nome do destino, como cadeia de caracteres, no feed resultante para o qual a propriedade é mapeada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19770-118">The name of the target, as string, in the resulting feed to which the property is mapped.</span>
          </span>
        </param>
        <param name="targetNamespacePrefix">
          <span data-ttu-id="19770-119">Esse parâmetro, junto com <c>targetNamespaceUri</c>, especifica o namespace no qual o elemento <c>targetPath</c> existe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19770-119">This parameter, together with <c>targetNamespaceUri</c>, specifies the namespace in which the <c>targetPath</c> element exists.</span>
          </span>
        </param>
        <param name="targetNamespaceUri">
          <span data-ttu-id="19770-120">Especifica o URI do namespace do elemento, como cadeia de caracteres, definido pela propriedade <c>targetName</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19770-120">Specifies the namespace URI of the element, as string, specified by the <c>targetName</c> property.</span>
          </span>
        </param>
        <param name="keepInContent">
          <span data-ttu-id="19770-121">Valor booliano que é <see langword="true" /> quando a propriedade que está sendo mapeada deve aparecer em seu local mapeado e na seção de conteúdo do feed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19770-121">Boolean value that is <see langword="true" /> when the property being mapped should appear both in its mapped-to location and in the content section of the feed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19770-122">Cria uma instância do <see cref="T:System.Data.Services.Common.EntityPropertyMappingAttribute" /> para mapear uma propriedade para um elemento de feed personalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19770-122">Creates an instance of the <see cref="T:System.Data.Services.Common.EntityPropertyMappingAttribute" /> to map a property to a custom feed element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19770-123">Se nem `targetNamespacePrefix` nem `targetNamespaceUri` forem especificados, o `targetName` será colocado no namespace padrão.</span><span class="sxs-lookup"><span data-stu-id="19770-123">If neither `targetNamespacePrefix` nor `targetNamespaceUri` are specified, the `targetName` will be put in the default namespace.</span></span> <span data-ttu-id="19770-124">Se `targetNamespacePrefix` não for especificado, um prefixo é gerado automaticamente.</span><span class="sxs-lookup"><span data-stu-id="19770-124">If `targetNamespacePrefix` is not specified, a prefix is autogenerated.</span></span> <span data-ttu-id="19770-125">Se `targetNamespacePrefix` for especificado, mas `targetNamespaceUri` não for especificado, uma exceção é lançada na ocasião da construção.</span><span class="sxs-lookup"><span data-stu-id="19770-125">If `targetNamespacePrefix` is specified, but `targetNamespaceUri` is not specified, an exception is thrown at construction time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepInContent">
      <MemberSignature Language="C#" Value="public bool KeepInContent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepInContent" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Common.EntityPropertyMappingAttribute.KeepInContent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeepInContent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepInContent { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.KeepInContent : bool" Usage="System.Data.Services.Common.EntityPropertyMappingAttribute.KeepInContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19770-126">Obtém um valor booliano que indica se um valor da propriedade deve ser repetido na seção de conteúdo do feed e no local mapeado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19770-126">Gets a Boolean value that indicates whether a property value should be repeated both in the content section of the feed and in the mapped location.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19770-127">Um <see cref="T:System.Boolean" /> valor que é <see langword="true" /> quando a propriedade é mapeada em ambos os locais no feed; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19770-127">A <see cref="T:System.Boolean" /> value that is <see langword="true" /> when the property is mapped into both locations in the feed; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19770-128">Quando o valor de <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.KeepInContent%2A> está `true`, o feed é compatível com versões anteriores [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] aplicativos cliente que usam o protocolo versão 1.0.</span><span class="sxs-lookup"><span data-stu-id="19770-128">Whenthe value of <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.KeepInContent%2A> is `true`, the feed is backward compatible with [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] client applications that use protocol version 1.0.</span></span> <span data-ttu-id="19770-129">Quando o valor de <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.KeepInContent%2A>' é `false`, a versão do protocolo usada pelo serviço de dados deve ser 2.0 ou versões posteriores.</span><span class="sxs-lookup"><span data-stu-id="19770-129">When the value of <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.KeepInContent%2A>\`\`is `false`, the protocol version used by the data service must be 2.0 or later versions.</span></span> <span data-ttu-id="19770-130">Para obter mais informações, consulte [controle de versão de serviço de dados](~/docs/framework/data/wcf/data-service-versioning-wcf-data-services.md).</span><span class="sxs-lookup"><span data-stu-id="19770-130">For more information, see [Data Service Versioning](~/docs/framework/data/wcf/data-service-versioning-wcf-data-services.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourcePath">
      <MemberSignature Language="C#" Value="public string SourcePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourcePath" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Common.EntityPropertyMappingAttribute.SourcePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SourcePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourcePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SourcePath : string" Usage="System.Data.Services.Common.EntityPropertyMappingAttribute.SourcePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19770-131">Obtém o nome da propriedade do item de sindicalização que será mapeado para o elemento especificado do feed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19770-131">Gets the name of the property of the syndication item that will be mapped to the specified element of the feed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19770-132">Valor de cadeia de caracteres que contém o nome da propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19770-132">String value that contains property name.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19770-133">O <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.SourcePath%2A> propriedade diretamente não é possível fazer referência a um tipo complexo.</span><span class="sxs-lookup"><span data-stu-id="19770-133">The <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.SourcePath%2A> property cannot directly reference a complex type.</span></span> <span data-ttu-id="19770-134">Para tipos complexos, você deve usar uma expressão de caminho em que os nomes de propriedade são separados por uma barra invertida (`/`) caracteres.</span><span class="sxs-lookup"><span data-stu-id="19770-134">For complex types, you must use a path expression where property names are separated by a backslash (`/`) character.</span></span> <span data-ttu-id="19770-135">Por exemplo, os valores a seguir são permitidos para um tipo de entidade `Person` com uma propriedade de inteiro `Age` e uma propriedade complexa `Address`:</span><span class="sxs-lookup"><span data-stu-id="19770-135">For example, the following values are permitted for an entity type `Person` with an integer property `Age` and a complex property `Address`:</span></span>  
  
-   `Age`  
  
-   `Address/Street`  
  
 <span data-ttu-id="19770-136">O <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.SourcePath%2A> propriedade não pode ser definida como um valor que contém um espaço ou qualquer outro caractere que não é válido em um nome de propriedade.</span><span class="sxs-lookup"><span data-stu-id="19770-136">The <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.SourcePath%2A> property cannot be set to a value that contains a space or any other character that is not valid in a property name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetNamespacePrefix">
      <MemberSignature Language="C#" Value="public string TargetNamespacePrefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetNamespacePrefix" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespacePrefix" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetNamespacePrefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TargetNamespacePrefix { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetNamespacePrefix : string" Usage="System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespacePrefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19770-137">Obtém um valor de cadeia de caracteres que, junto com <see cref="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespaceUri" />, especifica o namespace no qual o elemento <see cref="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath" /> existe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19770-137">Gets a string value that, together with <see cref="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespaceUri" />, specifies the namespace in which the <see cref="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath" /> element exists.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19770-138">Valor de cadeia de caracteres que contém o prefixo de namespace de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19770-138">String value that contains the target namespace prefix.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19770-139">Se nem <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespacePrefix%2A> nem <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespaceUri%2A> forem especificados, o <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath%2A> será colocado no namespace padrão.</span><span class="sxs-lookup"><span data-stu-id="19770-139">If neither <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespacePrefix%2A> nor <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespaceUri%2A> are specified, the <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath%2A> will be put in the default namespace.</span></span> <span data-ttu-id="19770-140">Se <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespacePrefix%2A> não for especificado, um prefixo é gerado automaticamente.</span><span class="sxs-lookup"><span data-stu-id="19770-140">If <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespacePrefix%2A> is not specified, a prefix is autogenerated.</span></span> <span data-ttu-id="19770-141">Se <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespacePrefix%2A> for especificado, mas <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespaceUri%2A> não for especificado, uma exceção é lançada na ocasião da construção.</span><span class="sxs-lookup"><span data-stu-id="19770-141">If <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespacePrefix%2A> is specified, but <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespaceUri%2A> is not specified, an exception is thrown at construction time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetNamespaceUri">
      <MemberSignature Language="C#" Value="public string TargetNamespaceUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetNamespaceUri" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespaceUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetNamespaceUri As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TargetNamespaceUri { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetNamespaceUri : string" Usage="System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespaceUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19770-142">Obtém um valor de cadeia de caracteres que especifica o URI do namespace do elemento definido pela propriedade <see cref="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19770-142">Gets a string value that specifies the namespace URI of the element specified by the <see cref="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19770-143">Cadeia de caracteres que contém o URI de namespace.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19770-143">String that contains the namespace URI.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19770-144">Se o mapeamento para o elemento/atributo não syndication, essa propriedade é o namespace para o elemento/atributo de destino.</span><span class="sxs-lookup"><span data-stu-id="19770-144">If mapping to non-syndication element/attribute, this property is the namespace for the target element/attribute.</span></span>  
  
 <span data-ttu-id="19770-145">Se nem <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespacePrefix%2A> nem <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespaceUri%2A> forem especificados, o <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath%2A> será colocado no namespace padrão.</span><span class="sxs-lookup"><span data-stu-id="19770-145">If neither <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespacePrefix%2A> nor <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespaceUri%2A> are specified, the <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath%2A> will be put in the default namespace.</span></span> <span data-ttu-id="19770-146">Se <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespacePrefix%2A> não for especificado, um prefixo é gerado automaticamente.</span><span class="sxs-lookup"><span data-stu-id="19770-146">If <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespacePrefix%2A> is not specified, a prefix is autogenerated.</span></span> <span data-ttu-id="19770-147">Se <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespacePrefix%2A> for especificado, mas <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespaceUri%2A> não for especificado, uma exceção é lançada na ocasião da construção.</span><span class="sxs-lookup"><span data-stu-id="19770-147">If <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespacePrefix%2A> is specified, but <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespaceUri%2A> is not specified, an exception is thrown at construction time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetPath">
      <MemberSignature Language="C#" Value="public string TargetPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetPath" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TargetPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetPath : string" Usage="System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19770-148">Obtém o nome do destino personalizado no feed para o qual a propriedade é mapeada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19770-148">Gets the name of the custom target in the feed to which the property is mapped.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19770-149">Valor com o atributo ou elemento XML de destino da cadeia de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19770-149">String value with target XML element or attribute.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19770-150">Quando o <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath%2A> propriedade for definida, o <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespaceUri%2A> e <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespacePrefix%2A> propriedades também devem ser definidas.</span><span class="sxs-lookup"><span data-stu-id="19770-150">When the <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath%2A> property is set, the <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespaceUri%2A> and <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespacePrefix%2A> properties must also be set.</span></span>  
  
 <span data-ttu-id="19770-151">O valor de <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath%2A> deve ser `null` (`Nothing` no Visual Basic) quando o valor da <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetSyndicationItem%2A> propriedade for algo diferente de <xref:System.Data.Services.Common.SyndicationItemProperty.CustomProperty>.</span><span class="sxs-lookup"><span data-stu-id="19770-151">The value of <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath%2A> must be `null` (`Nothing` in Visual Basic) when the value of the <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetSyndicationItem%2A> property is anything other than <xref:System.Data.Services.Common.SyndicationItemProperty.CustomProperty>.</span></span>  
  
 <span data-ttu-id="19770-152"><xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath%2A> deve ser uma expressão de caminho no qual os elementos aninhados são separados por uma barra invertida (`/`) e atributos são especificados por um e comercial (`@`).</span><span class="sxs-lookup"><span data-stu-id="19770-152"><xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath%2A> must be a path expression in which nested elements are separated by a backslash (`/`) and attributes are specified by an ampersand (`@`).</span></span> <span data-ttu-id="19770-153">No exemplo a seguir, a cadeia de caracteres `UnitsInStock/@ReorderLevel` mapeia um valor da propriedade para um atributo denominado `ReorderLevel` em um elemento filho chamado `UnitsInStock` do elemento de entrada de raiz.</span><span class="sxs-lookup"><span data-stu-id="19770-153">In the following example, the string `UnitsInStock/@ReorderLevel` maps a property value to an attribute named `ReorderLevel` on a child element named `UnitsInStock` of the root entry element.</span></span>  
  
 [!code-xml[Astoria Custom Feeds#EdmFeedMappedToAttributeSpecific](~/samples/snippets/xml/VS_Snippets_Misc/astoria custom feeds/xml/northwind.csdl#edmfeedmappedtoattributespecific)]  
  
 <span data-ttu-id="19770-154">O <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath%2A> propriedade não pode conter espaço em branco.</span><span class="sxs-lookup"><span data-stu-id="19770-154">The <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath%2A> property cannot contain white space.</span></span>  
  
 <span data-ttu-id="19770-155">O <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath%2A> propriedade não é expressa como uma expressão XPath true, mas os nomes de elementos e atributos especificados devem representar atributos e elementos XML bem formados.</span><span class="sxs-lookup"><span data-stu-id="19770-155">The <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath%2A> property is not expressed as a true XPath expression, but the specified element and attribute names must represent well-formed XML elements and attributes.</span></span> <span data-ttu-id="19770-156">Um valor inválido fará com que uma exceção ocorra quando o serviço de dados é inicializado.</span><span class="sxs-lookup"><span data-stu-id="19770-156">An invalid value will cause an exception to occur when the data service is initialized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetSyndicationItem">
      <MemberSignature Language="C#" Value="public System.Data.Services.Common.SyndicationItemProperty TargetSyndicationItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Services.Common.SyndicationItemProperty TargetSyndicationItem" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetSyndicationItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetSyndicationItem As SyndicationItemProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Services::Common::SyndicationItemProperty TargetSyndicationItem { System::Data::Services::Common::SyndicationItemProperty get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetSyndicationItem : System.Data.Services.Common.SyndicationItemProperty" Usage="System.Data.Services.Common.EntityPropertyMappingAttribute.TargetSyndicationItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Services.Common.SyndicationItemProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19770-157">Obtém uma propriedade na classe <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19770-157">Gets a property on the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19770-158">Um objeto <see cref="T:System.ServiceModel.Syndication.SyndicationItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19770-158">A <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19770-159">Se o mapeamento para o elemento de distribuição, essa propriedade é o nome do item de sindicalização.</span><span class="sxs-lookup"><span data-stu-id="19770-159">If mapping to syndication element, this property is the name of the syndication item.</span></span>  
  
 <span data-ttu-id="19770-160">Esse valor deve ser definido como `None` se o <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath%2A> não é nulo.</span><span class="sxs-lookup"><span data-stu-id="19770-160">This value must be set to `None` if the <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath%2A> is not null.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetTextContentKind">
      <MemberSignature Language="C#" Value="public System.Data.Services.Common.SyndicationTextContentKind TargetTextContentKind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Services.Common.SyndicationTextContentKind TargetTextContentKind" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetTextContentKind" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetTextContentKind As SyndicationTextContentKind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Services::Common::SyndicationTextContentKind TargetTextContentKind { System::Data::Services::Common::SyndicationTextContentKind get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetTextContentKind : System.Data.Services.Common.SyndicationTextContentKind" Usage="System.Data.Services.Common.EntityPropertyMappingAttribute.TargetTextContentKind" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Services.Common.SyndicationTextContentKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19770-161">Obtém o tipo de conteúdo da propriedade mapeada por <see cref="T:System.Data.Services.Common.EntityPropertyMappingAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19770-161">Gets the type of content of the property mapped by <see cref="T:System.Data.Services.Common.EntityPropertyMappingAttribute" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19770-162">Uma cadeia de caracteres que identifica o tipo de conteúdo no elemento de feed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19770-162">A string that identifies the type of content in the feed element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19770-163">Se o mapeamento para o conteúdo de sindicalização, essa propriedade é o tipo de item de distribuição de conteúdo.</span><span class="sxs-lookup"><span data-stu-id="19770-163">If mapping to syndication content, this property is the content type of syndication item.</span></span>  
  
 <span data-ttu-id="19770-164">Quando você especifica um valor de <xref:System.Data.Services.Common.SyndicationTextContentKind.Xhtml> para o <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetTextContentKind%2A> atributo, você deve garantir que o valor da propriedade contém o XML formatado corretamente.</span><span class="sxs-lookup"><span data-stu-id="19770-164">When you specify a value of <xref:System.Data.Services.Common.SyndicationTextContentKind.Xhtml> for the <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetTextContentKind%2A> attribute, you must ensure that the property value contains properly formatted XML.</span></span> <span data-ttu-id="19770-165">O serviço de dados retorna o valor sem executar todas as transformações.</span><span class="sxs-lookup"><span data-stu-id="19770-165">The data service returns the value without performing any transformations.</span></span> <span data-ttu-id="19770-166">Você também deve garantir que quaisquer prefixos de elemento XML no XML retornado tem um URI de namespace e prefixo definido no feed mapeado.</span><span class="sxs-lookup"><span data-stu-id="19770-166">You must also ensure that any XML element prefixes in the returned XML have a namespace URI and prefix defined in the mapped feed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>