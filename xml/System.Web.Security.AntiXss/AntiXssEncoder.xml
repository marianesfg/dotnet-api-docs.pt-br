<Type Name="AntiXssEncoder" FullName="System.Web.Security.AntiXss.AntiXssEncoder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2d3fc87f2788e5135ad533da1948ec2f36b8f78c" /><Meta Name="ms.sourcegitcommit" Value="c5fd6b431a16f0412349201a0e93a9eacddf4b35" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="12/14/2018" /><Meta Name="ms.locfileid" Value="53395559" /></Metadata><TypeSignature Language="C#" Value="public class AntiXssEncoder : System.Web.Util.HttpEncoder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AntiXssEncoder extends System.Web.Util.HttpEncoder" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.AntiXss.AntiXssEncoder" />
  <TypeSignature Language="VB.NET" Value="Public Class AntiXssEncoder&#xA;Inherits HttpEncoder" />
  <TypeSignature Language="C++ CLI" Value="public ref class AntiXssEncoder : System::Web::Util::HttpEncoder" />
  <TypeSignature Language="F#" Value="type AntiXssEncoder = class&#xA;    inherit HttpEncoder" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Util.HttpEncoder</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Codifica uma cadeia de caracteres para uso em cadeias de caracteres XML, HTML, CSS e URL.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode usar o <xref:System.Web.Security.AntiXss.AntiXssEncoder> classe substituir o <xref:System.Web.Util.HttpEncoder> classe que é usado por padrão para codificar e decodificar cadeias de caracteres em métodos de classes, como <xref:System.Web.HttpUtility>, <xref:System.Web.HttpServerUtility>, e <xref:System.Net.HttpResponseHeader>.  
  
 No <xref:System.Web.Security.AntiXss.AntiXssEncoder> classe, todos os caracteres que não são encontrados na lista de confiáveis são codificados pela <xref:System.Web.Security.AntiXss.AntiXssEncoder.HtmlAttributeEncode%2A> e <xref:System.Web.Security.AntiXss.AntiXssEncoder.HtmlEncode%2A> métodos.  
  
 Para substituir a <xref:System.Web.Util.HttpEncoder> classe com o <xref:System.Web.Security.AntiXss.AntiXssEncoder> classe, registrá-lo usando o `encoderType` atributo do elemento httpRuntime no arquivo Web. config, conforme mostrado no exemplo a seguir:  
  
```  
<httpRuntime encoderType="System.Web.Security.AntiXss.AntiXssEncoder" />  
```  
  
 Uma lista de caracteres de segurança padrão para diferentes métodos de codificação pode ser encontrada nos comentários para o <xref:System.Web.Security.AntiXss.AntiXssEncoder.HtmlAttributeEncode%2A>, <xref:System.Web.Security.AntiXss.AntiXssEncoder.HtmlEncode%2A>, <xref:System.Web.Security.AntiXss.AntiXssEncoder.XmlAttributeEncode%2A>, e <xref:System.Web.Security.AntiXss.AntiXssEncoder.XmlEncode%2A> métodos. A lista de segurança padrão pode ser modificada usando o <xref:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe%2A> método.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AntiXssEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AntiXssEncoder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Security.AntiXss.AntiXssEncoder" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CssEncode">
      <MemberSignature Language="C#" Value="public static string CssEncode (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CssEncode(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.CssEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CssEncode (input As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ CssEncode(System::String ^ input);" />
      <MemberSignature Language="F#" Value="static member CssEncode : string -&gt; string" Usage="System.Web.Security.AntiXss.AntiXssEncoder.CssEncode input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">A cadeia de caracteres a ser codificada.</param>
        <summary>Codifica a cadeia de caracteres especificada para uso em folhas de estilos em cascata (CSS).</summary>
        <returns>A cadeia de caracteres codificada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método codifica todos os caracteres, exceto aqueles que estão na lista de confiáveis.  
  
> [!NOTE]
>  Inserir aspas ("") em torno de cadeia de caracteres resultante antes de adicioná-lo a uma folha de estilos em cascata.  
  
 A tabela a seguir lista os caracteres de segurança padrão.  
  
|Gráfico de código Unicode|Caractere(s)|Descrição|  
|------------------------|--------------------|-----------------|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|A-Z|Caracteres alfabéticos maiusculos|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|a-z|Caracteres alfabéticos minúsculos|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|0-9|Números|  
  
 A tabela a seguir lista exemplos de entradas e saídas codificadas correspondentes.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert\000028\000027XSS\000020Attack\000021\000027\000029\00003B`|  
|`user@contoso.com`|`user\000040contoso\00002Ecom`|  
|`Anti-Cross Site Scripting Namespace`|`Anti\00002DCross\000020Site\000020Scripting\000020Namespace`|  
  
 A sequência de escape de caractere CSS consiste em um caractere de barra invertida (\\) seguido por até seis dígitos hexadecimais que representam um código de caracteres do padrão ISO 10646. (O padrão ISO 10646 é efetivamente equivalente a Unicode). Qualquer caractere que não seja um dígito hexadecimal encerra a sequência de escape. Se um caractere que segue a sequência de escape também for um dígito hexadecimal válido, ele deve incluir seis dígitos na sequência de escape ou usar um caractere de espaço em branco para encerrar a sequência de escape. Por exemplo, `\000020` denota um espaço.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlAttributeEncode">
      <MemberSignature Language="C#" Value="protected internal override void HtmlAttributeEncode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void HtmlAttributeEncode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub HtmlAttributeEncode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void HtmlAttributeEncode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="override this.HtmlAttributeEncode : string * System.IO.TextWriter -&gt; unit" Usage="antiXssEncoder.HtmlAttributeEncode (value, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value">A cadeia de caracteres a ser codificada.</param>
        <param name="output">O text writer a ser usado para gerar a cadeia de caracteres.</param>
        <summary>Codifica e gera a cadeia de caracteres especificada para uso em um atributo HTML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método codifica todos os caracteres, exceto aqueles que estão na lista de confiáveis. Caracteres são codificados usando `&#DECIMAL;` notação.  
  
> [!NOTE]
>  Colocando aspas duplas ("") ou aspas simples (' ') em torno de cadeia de caracteres resultante antes de adicioná-lo a uma página.  
  
 A tabela a seguir lista os caracteres de segurança padrão.  
  
|Gráfico de código Unicode|Caractere(s)|Descrição|  
|------------------------|--------------------|-----------------|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|A-Z|Caracteres alfabéticos de latinos maiuscula|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|a-z|Letras minúsculas caracteres alfabéticos latinos|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|0-9|Números|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|!|Ponto de exclamação|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|#|Sinal de número, hash|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|$|Sinal de cifrão|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|%|Símbolo de porcentagem|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|( )|Parênteses|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|*|Asterisco|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|+|Sinal de adição|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|,|Vírgula|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|-|Hífen, menos|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|.|Período, pontos, ponto final|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|/|Barra "/"|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|:|Dois-pontos|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|;|Ponto e vírgula|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|=|Sinal de igual|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|?|Ponto de interrogação|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|@|Comercial arroba|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|[ ]|Colchetes|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|\\| Barra invertida|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|^|Sinal de interpolação|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|_|Sublinhado|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|\`|Acento grave|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|{ }|Chaves, chaves de saída|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|&#124;|Linha vertical|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|~|Til|  
|[C1 Suplemento Latino-1 e controles](https://www.unicode.org/charts/PDF/U0080.pdf)|0x00A1 - 0x00AC|Caracteres especiais entre 0x00A1 (161 decimal) e 0x00AC (172 decimal).|  
|[C1 Suplemento Latino-1 e controles](https://www.unicode.org/charts/PDF/U0080.pdf)|0x00AE - 0x00FF|Caracteres especiais entre 0x00AE (174 decimal) e 0x00FF (255 decimal).|  
|[Latin-Extended-A](https://www.unicode.org/charts/PDF/U0100.pdf)|0x0100 - 0x017F|Latim estendido de caracteres entre 0x0100 (256 decimal) e 0x017F (383 decimal).|  
|[Latin-Extended-B](https://www.unicode.org/charts/PDF/U0180.pdf)|0x0180 - 0x024F|Latim estendido de caracteres entre 0x0180 (384 decimal) e 0x024F (591 decimal).|  
|[Extensões IPA](https://www.unicode.org/charts/PDF/U0250.pdf)|0x0250 - 0x02AF|Caracteres de extensão de IPA entre 0x0250 (592 decimal) e 0x02AF (687 decimal).|  
|[Letras modificadoras de espaçamento](https://www.unicode.org/charts/PDF/U02B0.pdf)|0x02B0 - 0x02FF|Caracteres de letras modificadoras de espaçamento entre 0x02B0 (688 decimal) e 0x02FF (767 decimal).|  
|[Combinando as marcas diacríticas](https://www.unicode.org/charts/PDF/U0300.pdf)|0x0300 - 0x036F|Combinação de caracteres de diacrítico entre 0x0300 (768 decimal) e 0x036F (879 decimal).|  
  
 A tabela a seguir lista exemplos de entradas e saídas codificadas correspondentes.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert(&#39;XSS&#32;Attack!&#39;);`|  
|`<script>alert('XSS Attack!');</script>`|`&lt;script&gt;alert(&#39;XSS Attack!&#39;);&lt;/script&gt;`|  
|`alert('XSSあAttack!');`|`alert(&#39;XSS&#12354;Attack!&#39;);`|  
|`user@contoso.com`|`user@contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`&quot;Anti-Cross&#32;Site&#32;Scripting&#32;Namespace&quot;`|  
  
 Para personalizar a lista segura, chame o <xref:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe%2A> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Codifica a cadeia de caracteres especificada para uso como texto na marcação HTML.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public static string HtmlEncode (string input, bool useNamedEntities);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlEncode(string input, bool useNamedEntities) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.HtmlEncode(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlEncode (input As String, useNamedEntities As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlEncode(System::String ^ input, bool useNamedEntities);" />
      <MemberSignature Language="F#" Value="static member HtmlEncode : string * bool -&gt; string" Usage="System.Web.Security.AntiXss.AntiXssEncoder.HtmlEncode (input, useNamedEntities)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="useNamedEntities" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="input">A cadeia de caracteres a ser codificada.</param>
        <param name="useNamedEntities"><see langword="true" /> para usar entidades nomeadas de HTML 4.0 em algumas codificações de caracteres; <see langword="false" /> para codificar usando apenas a notação <c>&amp;#DECIMAL;</c>.</param>
        <summary>Codifica a cadeia de caracteres especificada para uso como texto na marcação HTML e, opcionalmente, especifica se entidades nomeadas HTML 4.0 devem ser usadas.</summary>
        <returns>A cadeia de caracteres codificada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método codifica todos os caracteres, exceto aqueles que estão na lista de confiáveis. Caracteres são codificados usando `&#DECIMAL;` notação.  
  
> [!NOTE]
>  Colocando aspas duplas ("") ou aspas simples (' ') em torno de cadeia de caracteres resultante antes de adicioná-lo a uma página.  
  
 A tabela a seguir lista os caracteres de segurança padrão.  
  
|Gráfico de código Unicode|Caractere(s)|Descrição|  
|------------------------|--------------------|-----------------|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|A-Z|Caracteres alfabéticos de latinos maiuscula|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|a-z|Letras minúsculas caracteres alfabéticos latinos|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|0-9|Números|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|(Espaço)|Espaço|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|!|Ponto de exclamação|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|#|Sinal de número, hash|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|$|Sinal de cifrão|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|%|Símbolo de porcentagem|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|( )|Parênteses|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|*|Asterisco|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|+|Sinal de adição|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|,|Vírgula|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|-|Hífen, menos|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|.|Período, pontos, ponto final|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|/|Barra "/"|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|:|Dois-pontos|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|;|Ponto e vírgula|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|=|Sinal de igual|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|?|Ponto de interrogação|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|@|Comercial em|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|[ ]|Colchetes|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|\\| Barra invertida|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|^|Sinal de interpolação|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|_|Sublinhado|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|\`|Acento grave|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|{ }|Chaves, chaves de saída|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|&#124;|Linha vertical|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|~|Til|  
|[C1 Suplemento Latino-1 e controles](https://www.unicode.org/charts/PDF/U0080.pdf)|0x00A1 - 0x00AC|Caracteres especiais entre 0x00A1 (161 decimal) e 0x00AC (172 decimal). Caracteres nesse intervalo são codificados quando `useNamedEntities` é `true`.|  
|[C1 Suplemento Latino-1 e controles](https://www.unicode.org/charts/PDF/U0080.pdf)|0x00AE - 0x00FF|Caracteres especiais entre 0x00AE (174 decimal) e 0x00FF (255 decimal). Caracteres nesse intervalo são codificados quando `useNamedEntities` é `true`.|  
|[Latim estendido-A](https://www.unicode.org/charts/PDF/U0100.pdf)|0x0100 - 0x017F|Latim estendido de caracteres entre 0x0100 (256 decimal) e 0x017F (383 decimal).|  
|[Latim estendido-B](https://www.unicode.org/charts/PDF/U0180.pdf)|0x0180 - 0x024F|Latim estendido de caracteres entre 0x0180 (384 decimal) e 0x024F (591 decimal).|  
|[Extensões IPA](https://www.unicode.org/charts/PDF/U0250.pdf)|0x0250 - 0x02AF|Caracteres de extensão de IPA entre 0x0250 (592 decimal) e 0x02AF (687 decimal).|  
|[Letras modificadoras de espaçamento](https://www.unicode.org/charts/PDF/U02B0.pdf)|0x02B0 - 0x02FF|Caracteres de letras modificadoras de espaçamento entre 0x02B0 (688 decimal) e 0x02FF (767 decimal).|  
|[Combinando as marcas diacríticas](https://www.unicode.org/charts/PDF/U0300.pdf)|0x0300 - 0x036F|Combinação de caracteres de diacrítico entre 0x0300 (768 decimal) e 0x036F (879 decimal).|  
  
 A tabela a seguir lista exemplos de entradas e saídas codificadas correspondentes.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert(&#39;XSS&#32;Attack!&#39;);`|  
|`<script>alert('XSS Attack!');</script>`|`&lt;script&gt;alert(&#39;XSS Attack!&#39;);&lt;/script&gt;`|  
|`alert('XSSあAttack!');`|`alert(&#39;XSS&#12354;Attack!&#39;);`|  
|`user@contoso.com`|`user@contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`&quot;Anti-Cross&#32;Site&#32;Scripting&#32;Namespace&quot;`|  
  
 Para personalizar a lista segura, chame o <xref:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe%2A> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="protected internal override void HtmlEncode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void HtmlEncode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.HtmlEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub HtmlEncode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void HtmlEncode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="override this.HtmlEncode : string * System.IO.TextWriter -&gt; unit" Usage="antiXssEncoder.HtmlEncode (value, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value">A cadeia de caracteres a ser codificada.</param>
        <param name="output">O text writer a ser usado para gerar a cadeia de caracteres.</param>
        <summary>Codifica a cadeia de caracteres especificada para uso como texto na marcação HTML e gera a cadeia de caracteres usando o text writer especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método codifica todos os caracteres, exceto aqueles que estão na lista de confiáveis. Caracteres são codificados usando `&#DECIMAL;` notação.  
  
> [!NOTE]
>  Colocando aspas duplas ("") ou aspas simples (' ') em torno de cadeia de caracteres resultante antes de adicioná-lo a uma página.  
  
 A tabela a seguir lista os caracteres de segurança padrão.  
  
|Gráfico de código Unicode|Caractere(s)|Descrição|  
|------------------------|--------------------|-----------------|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|A-Z|Caracteres alfabéticos de latinos maiuscula|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|a-z|Letras minúsculas caracteres alfabéticos latinos|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|0-9|Números|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|(Espaço)|Espaço|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|!|Ponto de exclamação|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|#|Sinal de número, hash|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|$|Sinal de cifrão|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|%|Símbolo de porcentagem|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|( )|Parênteses|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|*|Asterisco|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|+|Sinal de adição|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|,|Vírgula|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|-|Hífen, menos|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|.|Período, pontos, ponto final|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|/|Barra "/"|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|:|Dois-pontos|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|;|Ponto e vírgula|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|=|Sinal de igual|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|?|Ponto de interrogação|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|@|Comercial em|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|[ ]|Colchetes|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|\\| Barra invertida|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|^|Sinal de interpolação|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|_|Sublinhado|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|\`|Acento grave|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|{ }|Chaves, chaves de saída|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|&#124;|Linha vertical|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|~|Til|  
|[C1 Suplemento Latino-1 e controles](https://www.unicode.org/charts/PDF/U0080.pdf)|0x00A1 - 0x00AC|Caracteres especiais entre 0x00A1 (161 decimal) e 0x00AC (172 decimal). Caracteres nesse intervalo são codificados quando `useNamedEntities` é `true`.|  
|[C1 Suplemento Latino-1 e controles](https://www.unicode.org/charts/PDF/U0080.pdf)|0x00AE - 0x00FF|Caracteres especiais entre 0x00AE (174 decimal) e 0x00FF (255 decimal). Caracteres nesse intervalo são codificados quando `useNamedEntities` é `true`.|  
|[Latim estendido-A](https://www.unicode.org/charts/PDF/U0100.pdf)|0x0100 - 0x017F|Latim estendido de caracteres entre 0x0100 (256 decimal) e 0x017F (383 decimal).|  
|[Latim estendido-B](https://www.unicode.org/charts/PDF/U0180.pdf)|0x0180 - 0x024F|Latim estendido de caracteres entre 0x0180 (384 decimal) e 0x024F (591 decimal).|  
|[Extensões IPA](https://www.unicode.org/charts/PDF/U0250.pdf)|0x0250 - 0x02AF|Caracteres de extensão de IPA entre 0x0250 (592 decimal) e 0x02AF (687 decimal).|  
|[Letras modificadoras de espaçamento](https://www.unicode.org/charts/PDF/U02B0.pdf)|0x02B0 - 0x02FF|Caracteres de letras modificadoras de espaçamento entre 0x02B0 (688 decimal) e 0x02FF (767 decimal).|  
|[Combinando as marcas diacríticas](https://www.unicode.org/charts/PDF/U0300.pdf)|0x0300 - 0x036F|Combinação de caracteres de diacrítico entre 0x0300 (768 decimal) e 0x036F (879 decimal).|  
  
 A tabela a seguir lista exemplos de entradas e saídas codificadas correspondentes.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert(&#39;XSS&#32;Attack!&#39;);`|  
|`<script>alert('XSS Attack!');</script>`|`&lt;script&gt;alert(&#39;XSS Attack!&#39;);&lt;/script&gt;`|  
|`alert('XSSあAttack!');`|`alert(&#39;XSS&#12354;Attack!&#39;);`|  
|`user@contoso.com`|`user@contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`&quot;Anti-Cross&#32;Site&#32;Scripting&#32;Namespace&quot;`|  
  
 Para personalizar a lista segura, chame o <xref:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe%2A> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlFormUrlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Codifica a cadeia de caracteres especificada para uso em envios de formulário cujo tipo MIME é "application/x-www-form-urlencoded".</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlFormUrlEncode">
      <MemberSignature Language="C#" Value="public static string HtmlFormUrlEncode (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlFormUrlEncode(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.HtmlFormUrlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlFormUrlEncode (input As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlFormUrlEncode(System::String ^ input);" />
      <MemberSignature Language="F#" Value="static member HtmlFormUrlEncode : string -&gt; string" Usage="System.Web.Security.AntiXss.AntiXssEncoder.HtmlFormUrlEncode input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">A cadeia de caracteres a ser codificada.</param>
        <summary>Codifica a cadeia de caracteres especificada para uso em envios de formulário cujo tipo MIME é "application/x-www-form-urlencoded".</summary>
        <returns>A cadeia de caracteres codificada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método codifica todos os caracteres, exceto aqueles que estão na lista de confiáveis. Caracteres são codificados usando `%SINGLE_BYTE_HEX` notação.  
  
> [!NOTE]
>  Colocando aspas duplas ("") ou aspas simples (' ') em torno de cadeia de caracteres resultante antes de adicioná-lo a uma página.  
  
|Gráfico de código Unicode|Caractere(s)|Descrição|  
|------------------------|--------------------|-----------------|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|A-Z|Caracteres alfabéticos maiusculos|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|a-z|Caracteres alfabéticos minúsculos|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|0-9|Números|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|-|Hífen, menos|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|.|Período, pontos, ponto final|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|_|Sublinhado|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|~|Til|  
  
 A tabela a seguir lista exemplos de entradas e saídas codificadas correspondentes.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert%28%27XSS+Attack%21%27%29%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert%28%27XSS+Attack%21%27%29%3b%3c%2fscript%3e`|  
|`alert('XSSあAttack!');`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|  
|`user@contoso.com`|`user@contoso.com`|  
|`Anti-Cross Site Scripting Namespace`|`Anti-Cross+Site+Scripting+Namespace`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlFormUrlEncode">
      <MemberSignature Language="C#" Value="public static string HtmlFormUrlEncode (string input, int codePage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlFormUrlEncode(string input, int32 codePage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.HtmlFormUrlEncode(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlFormUrlEncode (input As String, codePage As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlFormUrlEncode(System::String ^ input, int codePage);" />
      <MemberSignature Language="F#" Value="static member HtmlFormUrlEncode : string * int -&gt; string" Usage="System.Web.Security.AntiXss.AntiXssEncoder.HtmlFormUrlEncode (input, codePage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="codePage" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">A cadeia de caracteres a ser codificada.</param>
        <param name="codePage">A página de código a usar para codificar a cadeia de caracteres de <paramref name="input" />.</param>
        <summary>Codifica a cadeia de caracteres especificada para uso em envios de formulário cujo tipo MIME é "application/x-www-form-urlencoded" usando a página de código especificada.</summary>
        <returns>A cadeia de caracteres codificada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método codifica todos os caracteres, exceto aqueles que estão na lista de confiáveis. Caracteres são codificados usando `%SINGLE_BYTE_HEX` notação.  
  
> [!NOTE]
>  Colocando aspas duplas ("") ou aspas simples (' ') em torno de cadeia de caracteres resultante antes de adicioná-lo a uma página.  
  
 A tabela a seguir lista os caracteres de segurança padrão.  
  
|Gráfico de código Unicode|Caractere(s)|Descrição|  
|------------------------|--------------------|-----------------|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|A-Z|Caracteres alfabéticos maiusculos|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|a-z|Caracteres alfabéticos minúsculos|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|0-9|Números|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|-|Hífen, menos|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|.|Período, pontos, ponto final|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|_|Sublinhado|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|~|Til|  
  
 A tabela a seguir lista exemplos de entradas e saídas codificadas correspondentes.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert%28%27XSS+Attack%21%27%29%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert%28%27XSS+Attack%21%27%29%3b%3c%2fscript%3e`|  
|`alert('XSSあAttack!');`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|  
|`user@contoso.com`|`user%40contoso.com`|  
|`Anti-Cross Site Scripting Namespace`|`Anti-Cross+Site+Scripting+Namespace`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlFormUrlEncode">
      <MemberSignature Language="C#" Value="public static string HtmlFormUrlEncode (string input, System.Text.Encoding inputEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlFormUrlEncode(string input, class System.Text.Encoding inputEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.HtmlFormUrlEncode(System.String,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlFormUrlEncode (input As String, inputEncoding As Encoding) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlFormUrlEncode(System::String ^ input, System::Text::Encoding ^ inputEncoding);" />
      <MemberSignature Language="F#" Value="static member HtmlFormUrlEncode : string * System.Text.Encoding -&gt; string" Usage="System.Web.Security.AntiXss.AntiXssEncoder.HtmlFormUrlEncode (input, inputEncoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="inputEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="input">A cadeia de caracteres a ser codificada.</param>
        <param name="inputEncoding">O tipo de codificação de entrada.</param>
        <summary>Codifica a cadeia de caracteres especificada para envios de formulário cujo tipo MIME é "application/x-www-form-urlencoded" usando o tipo de codificação de caractere especificado.</summary>
        <returns>A cadeia de caracteres codificada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método codifica todos os caracteres, exceto aqueles que estão na lista de confiáveis. Caracteres são codificados usando `%SINGLE_BYTE_HEX` notação.  
  
> [!NOTE]
>  Colocando aspas duplas ("") ou aspas simples (' ') em torno de cadeia de caracteres resultante antes de adicioná-lo a uma página.  
  
 A tabela a seguir lista os caracteres de segurança padrão.  
  
|Gráfico de código Unicode|Caractere(s)|Descrição|  
|------------------------|--------------------|-----------------|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|A-Z|Caracteres alfabéticos maiusculos|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|a-z|Caracteres alfabéticos minúsculos|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|0-9|Números|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|-|Hífen, menos|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|.|Período, pontos, ponto final|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|_|Sublinhado|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|~|Til|  
  
 A tabela a seguir lista exemplos de entradas e saídas codificadas correspondentes.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert%28%27XSS+Attack%21%27%29%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert%28%27XSS+Attack%21%27%29%3b%3c%2fscript%3e`|  
|`alert('XSSあAttack!');`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|  
|`user@contoso.com`|`user%40contoso.com`|  
|`Anti-Cross Site Scripting Namespace`|`Anti-Cross+Site+Scripting+Namespace`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkAsSafe">
      <MemberSignature Language="C#" Value="public static void MarkAsSafe (System.Web.Security.AntiXss.LowerCodeCharts lowerCodeCharts, System.Web.Security.AntiXss.LowerMidCodeCharts lowerMidCodeCharts, System.Web.Security.AntiXss.MidCodeCharts midCodeCharts, System.Web.Security.AntiXss.UpperMidCodeCharts upperMidCodeCharts, System.Web.Security.AntiXss.UpperCodeCharts upperCodeCharts);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MarkAsSafe(valuetype System.Web.Security.AntiXss.LowerCodeCharts lowerCodeCharts, valuetype System.Web.Security.AntiXss.LowerMidCodeCharts lowerMidCodeCharts, valuetype System.Web.Security.AntiXss.MidCodeCharts midCodeCharts, valuetype System.Web.Security.AntiXss.UpperMidCodeCharts upperMidCodeCharts, valuetype System.Web.Security.AntiXss.UpperCodeCharts upperCodeCharts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe(System.Web.Security.AntiXss.LowerCodeCharts,System.Web.Security.AntiXss.LowerMidCodeCharts,System.Web.Security.AntiXss.MidCodeCharts,System.Web.Security.AntiXss.UpperMidCodeCharts,System.Web.Security.AntiXss.UpperCodeCharts)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MarkAsSafe(System::Web::Security::AntiXss::LowerCodeCharts lowerCodeCharts, System::Web::Security::AntiXss::LowerMidCodeCharts lowerMidCodeCharts, System::Web::Security::AntiXss::MidCodeCharts midCodeCharts, System::Web::Security::AntiXss::UpperMidCodeCharts upperMidCodeCharts, System::Web::Security::AntiXss::UpperCodeCharts upperCodeCharts);" />
      <MemberSignature Language="F#" Value="static member MarkAsSafe : System.Web.Security.AntiXss.LowerCodeCharts * System.Web.Security.AntiXss.LowerMidCodeCharts * System.Web.Security.AntiXss.MidCodeCharts * System.Web.Security.AntiXss.UpperMidCodeCharts * System.Web.Security.AntiXss.UpperCodeCharts -&gt; unit" Usage="System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe (lowerCodeCharts, lowerMidCodeCharts, midCodeCharts, upperMidCodeCharts, upperCodeCharts)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lowerCodeCharts" Type="System.Web.Security.AntiXss.LowerCodeCharts" />
        <Parameter Name="lowerMidCodeCharts" Type="System.Web.Security.AntiXss.LowerMidCodeCharts" />
        <Parameter Name="midCodeCharts" Type="System.Web.Security.AntiXss.MidCodeCharts" />
        <Parameter Name="upperMidCodeCharts" Type="System.Web.Security.AntiXss.UpperMidCodeCharts" />
        <Parameter Name="upperCodeCharts" Type="System.Web.Security.AntiXss.UpperCodeCharts" />
      </Parameters>
      <Docs>
        <param name="lowerCodeCharts">A combinação de gráficos de código inferiores a serem marcados como seguros.</param>
        <param name="lowerMidCodeCharts">A combinação de gráficos de código inferiores a médios a serem marcados como seguros.</param>
        <param name="midCodeCharts">A combinação de gráficos de código médios a serem marcados como seguros.</param>
        <param name="upperMidCodeCharts">A combinação de gráficos de código superiores a médios a serem marcados como seguros.</param>
        <param name="upperCodeCharts">A combinação de gráficos de código superiores a serem marcados como seguros.</param>
        <summary>Marca caracteres de gráficos de código Unicode especificados como seguros.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lista de confiáveis afeta todos os métodos de codificação XML do HTML, CSS e URL.  
  
 Com algumas exceções, gráficos de código Unicode não correspondem diretamente aos idiomas escritos. Para adicionar suporte para um idioma específico ou conjunto de idiomas geralmente requer vários gráficos de código de marcação como safe.  
  
 Para adicionar suporte para o idioma japonês enquanto continua permitir que o inglês, use a seguinte sintaxe:  
  
```  
  
MarkAsSafe(  
            LowerCodeCharts.Default,  
            LowerMidCodeCharts.HangulJamo,  
            MidCodeCharts.None,  
            UpperMidCodeCharts.CjkRadicalsSupplement |   
            UpperMidCodeCharts.CjkSymbolsAndPunctuation |   
            UpperMidCodeCharts.Hiragana |   
            UpperMidCodeCharts.Katakana |   
            UpperMidCodeCharts.KatakanaPhoneticExtensions |   
            UpperMidCodeCharts.LatinExtendedD |  
            UpperMidCodeCharts.CjkUnifiedIdeographs,  
            UpperCodeCharts.None);  
```  
  
> [!NOTE]
>  O <xref:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe%2A> método deve ser chamado a `Application_Start` método no arquivo global. asax.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">O método <see cref="M:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe(System.Web.Security.AntiXss.LowerCodeCharts,System.Web.Security.AntiXss.LowerMidCodeCharts,System.Web.Security.AntiXss.MidCodeCharts,System.Web.Security.AntiXss.UpperMidCodeCharts,System.Web.Security.AntiXss.UpperCodeCharts)" /> foi chamado externamente ao método <see langword="Application_Start" /> no arquivo Global.asax.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="UrlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Codifica cadeias de caracteres e matrizes de bytes para uso em uma URL.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public static string UrlEncode (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncode (input As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncode(System::String ^ input);" />
      <MemberSignature Language="F#" Value="static member UrlEncode : string -&gt; string" Usage="System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">A cadeia de caracteres a ser codificada.</param>
        <summary>Codifica a cadeia de caracteres especificada para uso em uma URL.</summary>
        <returns>A cadeia de caracteres codificada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método codifica todos os caracteres, exceto aqueles que estão na lista de confiáveis. Caracteres são codificados usando `%SINGLE_BYTE_HEX` notação.  
  
 A tabela a seguir lista os caracteres de segurança padrão.  
  
|Gráfico de código Unicode|Caractere(s)|Descrição|  
|------------------------|--------------------|-----------------|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|A-Z|Caracteres alfabéticos maiusculos|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|a-z|Caracteres alfabéticos minúsculos|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|0-9|Números|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|-|Hífen, menos|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|.|Período, pontos, ponto final|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|_|Sublinhado|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|~|Til|  
  
 A tabela a seguir lista exemplos de entradas e saídas codificadas correspondentes.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert%28%27XSS%20Attack%21%27%29%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert%28%27XSS%20Attack%21%27%29%3b%3c%2fscript%3e`|  
|`alert('XSSあAttack!');`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|  
|`user@contoso.com`|`user%40contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`%22Anti-Cross%20Site%20Scripting%20Namespace%22`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public static string UrlEncode (string input, int codePage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(string input, int32 codePage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncode (input As String, codePage As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncode(System::String ^ input, int codePage);" />
      <MemberSignature Language="F#" Value="static member UrlEncode : string * int -&gt; string" Usage="System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode (input, codePage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="codePage" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">A cadeia de caracteres a ser codificada.</param>
        <param name="codePage">A página de código a usar para codificar a cadeia de caracteres de <paramref name="input" />.</param>
        <summary>Codifica a cadeia de caracteres especificada para uso em uma URL, utilizando a página de código especificada.</summary>
        <returns>A cadeia de caracteres codificada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método codifica todos os caracteres, exceto aqueles que estão na lista de confiáveis. Caracteres são codificados usando `%SINGLE_BYTE_HEX` notação.  
  
 A tabela a seguir lista os caracteres de segurança padrão.  
  
|Gráfico de código Unicode|Caractere(s)|Descrição|  
|------------------------|--------------------|-----------------|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|A-Z|Caracteres alfabéticos maiusculos|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|a-z|Caracteres alfabéticos minúsculos|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|0-9|Números|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|-|Hífen, menos|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|.|Período, pontos, ponto final|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|_|Sublinhado|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|~|Til|  
  
 A tabela a seguir lista exemplos de entradas e saídas codificadas correspondentes.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert%28%27XSS%20Attack%21%27%29%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert%28%27XSS%20Attack%21%27%29%3b%3c%2fscript%3e`|  
|`alert('XSSあAttack!');`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|  
|`user@contoso.com`|`user%40contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`%22Anti-Cross%20Site%20Scripting%20Namespace%22`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public static string UrlEncode (string input, System.Text.Encoding inputEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(string input, class System.Text.Encoding inputEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode(System.String,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncode (input As String, inputEncoding As Encoding) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncode(System::String ^ input, System::Text::Encoding ^ inputEncoding);" />
      <MemberSignature Language="F#" Value="static member UrlEncode : string * System.Text.Encoding -&gt; string" Usage="System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode (input, inputEncoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="inputEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="input">A cadeia de caracteres a ser codificada.</param>
        <param name="inputEncoding">O tipo de codificação de entrada.</param>
        <summary>Codifica a cadeia de caracteres especificada para uso em uma URL utilizando o tipo de codificação de caractere especificado.</summary>
        <returns>A cadeia de caracteres codificada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método codifica todos os caracteres, exceto aqueles que estão na lista de confiáveis. Caracteres são codificados usando `%SINGLE_BYTE_HEX` notação.  
  
 A tabela a seguir lista os caracteres de segurança padrão.  
  
|Gráfico de código Unicode|Caractere(s)|Descrição|  
|------------------------|--------------------|-----------------|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|A-Z|Caracteres alfabéticos maiusculos|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|a-z|Caracteres alfabéticos minúsculos|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|0-9|Números|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|-|Hífen, menos|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|.|Período, pontos, ponto final|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|_|Sublinhado|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|~|Til|  
  
 A tabela a seguir lista exemplos de entradas e saídas codificadas correspondentes.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert%28%27XSS%20Attack%21%27%29%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert%28%27XSS%20Attack%21%27%29%3b%3c%2fscript%3e`|  
|`alert('XSSあAttack!');`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|  
|`user@contoso.com`|`user%40contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`%22Anti-Cross%20Site%20Scripting%20Namespace%22`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="protected internal override byte[] UrlEncode (byte[] bytes, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance unsigned int8[] UrlEncode(unsigned int8[] bytes, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function UrlEncode (bytes As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override cli::array &lt;System::Byte&gt; ^ UrlEncode(cli::array &lt;System::Byte&gt; ^ bytes, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.UrlEncode : byte[] * int * int -&gt; byte[]" Usage="antiXssEncoder.UrlEncode (bytes, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">A matriz de bytes para codificar.</param>
        <param name="offset">O índice do primeiro byte a ser codificado.</param>
        <param name="count">O número de bytes a ser codificado.</param>
        <summary>Codifica a matriz de bytes especificada para uso em uma URL, começando com o deslocamento especificado na matriz de bytes e codificando o número especificado de bytes.</summary>
        <returns>A matriz de bytes codificados.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método codifica todos os caracteres, exceto aqueles que estão na lista de confiáveis. Caracteres são codificados usando `%SINGLE_BYTE_HEX` notação.  
  
 A tabela a seguir lista os caracteres de segurança padrão.  
  
|Gráfico de código Unicode|Caractere(s)|Descrição|  
|------------------------|--------------------|-----------------|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|A-Z|Caracteres alfabéticos maiusculos|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|a-z|Caracteres alfabéticos minúsculos|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|0-9|Números|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|-|Hífen, menos|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|.|Período, pontos, ponto final|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|_|Sublinhado|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|~|Til|  
  
 A tabela a seguir lista exemplos de entradas e saídas codificadas correspondentes.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert%28%27XSS%20Attack%21%27%29%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert%28%27XSS%20Attack%21%27%29%3b%3c%2fscript%3e`|  
|`alert('XSSあAttack!');`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|  
|`user@contoso.com`|`user%40contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`%22Anti-Cross%20Site%20Scripting%20Namespace%22`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlPathEncode">
      <MemberSignature Language="C#" Value="protected internal override string UrlPathEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance string UrlPathEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.UrlPathEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function UrlPathEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::String ^ UrlPathEncode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="override this.UrlPathEncode : string -&gt; string" Usage="antiXssEncoder.UrlPathEncode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">A cadeia de caracteres a ser codificada.</param>
        <summary>Codifica cadeias de caracteres de caminho para uso em uma URL.</summary>
        <returns>A URL que contém o caminho codificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método codifica todos os caracteres, exceto aqueles que estão na lista de confiáveis. Caracteres são codificados usando `%SINGLE_BYTE_HEX` notação.  
  
|Gráfico de código Unicode|Caractere(s)|Descrição|  
|------------------------|--------------------|-----------------|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|A-Z|Caracteres alfabéticos maiusculos|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|a-z|Caracteres alfabéticos minúsculos|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|0-9|Números|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|#|Sinal de número, hash|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|%|Símbolo de porcentagem|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|( )|Parênteses|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|-|Hífen, menos|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|.|Período, pontos, ponto final|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|/|Barra "/"|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|\|barra invertida|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|_|Sublinhado|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|{ }|Chaves, chaves de saída|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|&#124;|Linha vertical|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|~|Til|  
  
 A tabela a seguir lista exemplos de entradas e saídas codificadas correspondentes.  
  
|||  
|-|-|  
|`http://www.contoso.com:8080/<en-us>/[page].htm?v={value1}#x=[amount]`|`http://www.contoso.com:8080/%3cen-us%3e/%5bpage%5d.htm?v={value1}#x=[amount]`|  
|`alert('XSS Attack!');`|`alert(%27XSS%20Attack%21%27)%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert(%27XSS%20Attack%21%27)%3b%3c/script%3e`|  
|`alert('XSSあAttack!');`|`alert(%27XSS%e3%81%82Attack%21%27)%3b`|  
|`user@contoso.com`|`user%40contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`%22Anti-Cross%20Site%20Scripting%20Namespace%22`|  
  
 Este método codifica somente o caminho de URL. Esse método não codificará o esquema (por exemplo, `http:`, `ftp:`, ou `file:`), a autoridade (por exemplo, `www.northwind.com` ou `www.contoso.com:8080`), a consulta ou fragmento (por exemplo, `?v=s978dfs9#x=103`). Se não houver nenhum esquema ou a autoridade na cadeia de caracteres, a cadeia de caracteres deve para ser um caminho relativo e o caminho é codificado. Na URL a seguir, somente a subcadeia de caracteres `/default.htm` é codificado:  
  
 `http://www.contoso.com:8080/default.htm?v=s978dfs9#x=103`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlAttributeEncode">
      <MemberSignature Language="C#" Value="public static string XmlAttributeEncode (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string XmlAttributeEncode(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.XmlAttributeEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function XmlAttributeEncode (input As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ XmlAttributeEncode(System::String ^ input);" />
      <MemberSignature Language="F#" Value="static member XmlAttributeEncode : string -&gt; string" Usage="System.Web.Security.AntiXss.AntiXssEncoder.XmlAttributeEncode input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">A cadeia de caracteres a ser codificada.</param>
        <summary>Codifica a cadeia de caracteres especificada para uso em atributos XML.</summary>
        <returns>A cadeia de caracteres codificada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método codifica todos os caracteres, exceto aqueles que estão na lista de confiáveis. Caracteres são codificados usando `&#DECIMAL;` notação.  
  
> [!NOTE]
>  Colocando aspas duplas ("") ou aspas simples (' ') em torno de cadeia de caracteres resultante antes de adicioná-lo a uma página.  
  
 A tabela a seguir lista os caracteres de segurança padrão.  
  
|Gráfico de código Unicode|Caractere(s)|Descrição|  
|------------------------|--------------------|-----------------|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|A-Z|Caracteres alfabéticos de latinos maiuscula|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|a-z|Letras minúsculas caracteres alfabéticos latinos|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|0-9|Números|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|!|Ponto de exclamação|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|#|Sinal de número, hash|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|$|Sinal de cifrão|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|%|Símbolo de porcentagem|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|( )|Parênteses|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|*|Asterisco|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|+|Sinal de adição|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|,|Vírgula|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|-|Hífen, menos|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|.|Período, pontos, ponto final|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|/|Barra "/"|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|:|Dois-pontos|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|;|Ponto e vírgula|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|=|Sinal de igual|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|?|Ponto de interrogação|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|@|Comercial arroba|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|[ ]|Colchetes|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|\\| Barra invertida|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|^|Sinal de interpolação|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|_|Sublinhado|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|\`|Acento grave|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|{ }|Chaves, chaves de saída|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|&#124;|Linha vertical|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|~|Til|  
|[C1 Suplemento Latino-1 e controles](https://www.unicode.org/charts/PDF/U0080.pdf)|0x00A1 - 0x00AC|Caracteres especiais entre 0x00A1 (161 decimal) e 0x00AC (172 decimal).|  
|[C1 Suplemento Latino-1 e controles](https://www.unicode.org/charts/PDF/U0080.pdf)|0x00AE - 0x00FF|Caracteres especiais entre 0x00AE (174 decimal) e 0x00FF (255 decimal).|  
|[Latim estendido-A](https://www.unicode.org/charts/PDF/U0100.pdf)|0x0100 - 0x017F|Latim estendido de caracteres entre 0x0100 (256 decimal) e 0x017F (383 decimal).|  
|[Latim estendido-B](https://www.unicode.org/charts/PDF/U0180.pdf)|0x0180 - 0x024F|Latim estendido de caracteres entre 0x0180 (384 decimal) e 0x024F (591 decimal).|  
|[Extensões IPA](https://www.unicode.org/charts/PDF/U0250.pdf)|0x0250 - 0x02AF|Caracteres de extensão de IPA entre 0x0250 (592 decimal) e 0x02AF (687 decimal).|  
|[Letras modificadoras de espaçamento](https://www.unicode.org/charts/PDF/U02B0.pdf)|0x02B0 - 0x02FF|Caracteres de letras modificadoras de espaçamento entre 0x02B0 (688 decimal) e 0x02FF (767 decimal).|  
|[Combinando as marcas diacríticas](https://www.unicode.org/charts/PDF/U0300.pdf)|0x0300 - 0x036F|Combinação de caracteres de diacrítico entre 0x0300 (768 decimal) e 0x036F (879 decimal).|  
  
 A tabela a seguir lista exemplos de entradas e saídas codificadas correspondentes.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert(&apos;XSS&#32;Attack!&apos;);`|  
|`<script>alert('XSS Attack!');</script>`|`&lt;script&gt;alert(&apos;XSS&#32;Attack!&apos;);&lt;/script&gt;`|  
|`alert('XSSあAttack!');`|`alert(&apos;XSS&#12354;Attack!&apos;);`|  
|`user@contoso.com`|`user@contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`&quot;Anti-Cross&#32;Site&#32;Scripting&#32;Namespace&quot;`|  
  
 Para personalizar a lista segura, chame o <xref:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe%2A> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncode">
      <MemberSignature Language="C#" Value="public static string XmlEncode (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string XmlEncode(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.XmlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function XmlEncode (input As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ XmlEncode(System::String ^ input);" />
      <MemberSignature Language="F#" Value="static member XmlEncode : string -&gt; string" Usage="System.Web.Security.AntiXss.AntiXssEncoder.XmlEncode input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">A cadeia de caracteres a ser codificada.</param>
        <summary>Codifica a cadeia de caracteres especificada para uso em atributos XML.</summary>
        <returns>A cadeia de caracteres codificada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método codifica todos os caracteres, exceto aqueles que estão na lista de confiáveis. Caracteres são codificados usando `&#DECIMAL;` notação.  
  
> [!NOTE]
>  Colocando aspas duplas ("") ou aspas simples (' ') em torno de cadeia de caracteres resultante antes de adicioná-lo a uma página.  
  
 A tabela a seguir lista os caracteres de segurança padrão.  
  
|Gráfico de código Unicode|Caractere(s)|Descrição|  
|------------------------|--------------------|-----------------|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|A-Z|Caracteres alfabéticos de latinos maiuscula|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|a-z|Letras minúsculas caracteres alfabéticos latinos|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|0-9|Números|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|(Espaço)|Espaço|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|!|Ponto de exclamação|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|#|Sinal de número, hash|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|$|Sinal de cifrão|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|%|Símbolo de porcentagem|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|( )|Parênteses|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|*|Asterisco|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|+|Sinal de adição|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|,|Vírgula|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|-|Hífen, menos|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|.|Ponto final|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|/|Barra "/"|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|:|Dois-pontos|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|;|Ponto e vírgula|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|=|Sinal de igual|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|?|Ponto de interrogação|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|@|Comercial em|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|[ ]|Colchetes|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|\\| Barra invertida|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|^|Sinal de interpolação|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|_|Sublinhado|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|\`|Acento grave|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|{ }|Chaves, chaves de saída|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|&#124;|Linha vertical|  
|[C0 Controles e Latim básico](https://www.unicode.org/charts/PDF/U0000.pdf)|~|Til|  
|[C1 Suplemento Latino-1 e controles](https://www.unicode.org/charts/PDF/U0080.pdf)|0x00A1 - 0x00AC|Caracteres especiais entre 0x00A1 (161 decimal) e 0x00AC (172 decimal). Caracteres nesse intervalo são codificados quando `useNamedEntities` é `true`.|  
|[C1 Suplemento Latino-1 e controles](https://www.unicode.org/charts/PDF/U0080.pdf)|0x00AE - 0x00FF|Caracteres especiais entre 0x00AE (174 decimal) e 0x00FF (255 decimal). Caracteres nesse intervalo são codificados quando `useNamedEntities` é `true`.|  
|[Latim estendido-A](https://www.unicode.org/charts/PDF/U0100.pdf)|0x0100 - 0x017F|Latim estendido de caracteres entre 0x0100 (256 decimal) e 0x017F (383 decimal).|  
|[Latim estendido-B](https://www.unicode.org/charts/PDF/U0180.pdf)|0x0180 - 0x024F|Latim estendido de caracteres entre 0x0180 (384 decimal) e 0x024F (591 decimal).|  
|[Extensões IPA](https://www.unicode.org/charts/PDF/U0250.pdf)|0x0250 - 0x02AF|Caracteres de extensão de IPA entre 0x0250 (592 decimal) e 0x02AF (687 decimal).|  
|[Letras modificadoras de espaçamento](https://www.unicode.org/charts/PDF/U02B0.pdf)|0x02B0 - 0x02FF|Caracteres de letras modificadoras de espaçamento entre 0x02B0 (688 decimal) e 0x02FF (767 decimal).|  
|[Combinando as marcas diacríticas](https://www.unicode.org/charts/PDF/U0300.pdf)|0x0300 - 0x036F|Combinação de caracteres de diacrítico entre 0x0300 (768 decimal) e 0x036F (879 decimal).|  
  
 A tabela a seguir lista exemplos de entradas e saídas codificadas correspondentes.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert(&#39;XSS&#32;Attack!&#39;);`|  
|`<script>alert('XSS Attack!');</script>`|`&lt;script&gt;alert(&apos;XSS Attack!&apos;);&lt;/script&gt;`|  
|`alert('XSSあAttack!');`|`alert(&apos;XSS&#12354;Attack!&apos;);`|  
|`user@contoso.com`|`user@contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`&quot;Anti-Cross&#32;Site&#32;Scripting&#32;Namespace&quot;`|  
  
 Para personalizar a lista segura, chame o <xref:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe%2A> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>