<Type Name="HMAC" FullName="System.Security.Cryptography.HMAC">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="df66b5970c5b42ca57431b1c3a22899568116ba8" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39955721" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class HMAC : System.Security.Cryptography.KeyedHashAlgorithm" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HMAC extends System.Security.Cryptography.KeyedHashAlgorithm" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.HMAC" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HMAC&#xA;Inherits KeyedHashAlgorithm" />
  <TypeSignature Language="C++ CLI" Value="public ref class HMAC abstract : System::Security::Cryptography::KeyedHashAlgorithm" />
  <TypeSignature Language="F#" Value="type HMAC = class&#xA;    inherit KeyedHashAlgorithm" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.KeyedHashAlgorithm</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="aee7b-101">Representa a classe abstrata da qual todas as implementações de HMAC (Hash-based Message Authentication Code) devem derivar.</span>
      <span class="sxs-lookup">
        <span data-stu-id="aee7b-101">Represents the abstract class from which all implementations of Hash-based Message Authentication Code (HMAC) must derive.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aee7b-102">Um código de autenticação de mensagem baseado em Hash (HMAC) pode ser usado para determinar se uma mensagem enviada por um canal inseguro foi violada, desde que o remetente e receptor compartilham uma chave secreta.</span><span class="sxs-lookup"><span data-stu-id="aee7b-102">A Hash-based Message Authentication Code (HMAC) can be used to determine whether a message sent over an insecure channel has been tampered with, provided that the sender and receiver share a secret key.</span></span> <span data-ttu-id="aee7b-103">O remetente calcula o valor de hash para os dados originais e envia os dados originais e o HMAC como uma única mensagem.</span><span class="sxs-lookup"><span data-stu-id="aee7b-103">The sender computes the hash value for the original data and sends both the original data and the HMAC as a single message.</span></span> <span data-ttu-id="aee7b-104">O receptor calcula novamente o valor de hash na mensagem recebida e verifica se o valor de hash computado corresponde ao valor de hash transmitidos.</span><span class="sxs-lookup"><span data-stu-id="aee7b-104">The receiver recomputes the hash value on the received message and checks that the computed hash value matches the transmitted hash value.</span></span>  
  
 <span data-ttu-id="aee7b-105">HMAC pode ser usado com qualquer função de hash criptográfico iterativo, como MD5 ou SHA-1, em combinação com uma chave de segredo compartilhada.</span><span class="sxs-lookup"><span data-stu-id="aee7b-105">HMAC can be used with any iterative cryptographic hash function, such as MD5 or SHA-1, in combination with a secret shared key.</span></span> <span data-ttu-id="aee7b-106">A intensidade criptográfica da HMAC depende das propriedades da função de hash subjacente.</span><span class="sxs-lookup"><span data-stu-id="aee7b-106">The cryptographic strength of HMAC depends on the properties of the underlying hash function.</span></span>  
  
 <span data-ttu-id="aee7b-107">Qualquer alteração de dados ou o valor de hash resulta em uma incompatibilidade, porque é necessário conhecimento da chave secreta para alterar a mensagem e reproduzir o valor de hash correto.</span><span class="sxs-lookup"><span data-stu-id="aee7b-107">Any change to the data or the hash value results in a mismatch, because knowledge of the secret key is required to change the message and reproduce the correct hash value.</span></span> <span data-ttu-id="aee7b-108">Portanto, se os valores originais e computadas hash corresponderem, a mensagem é autenticada.</span><span class="sxs-lookup"><span data-stu-id="aee7b-108">Therefore, if the original and computed hash values match, the message is authenticated.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HMAC ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HMAC();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aee7b-109">Inicializa uma nova instância da classe <see cref="T:System.Security.Cryptography.HMAC" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aee7b-109">Initializes a new instance of the <see cref="T:System.Security.Cryptography.HMAC" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlockSizeValue">
      <MemberSignature Language="C#" Value="protected int BlockSizeValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BlockSizeValue" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HMAC.BlockSizeValue" />
      <MemberSignature Language="VB.NET" Value="Protected Property BlockSizeValue As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property int BlockSizeValue { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BlockSizeValue : int with get, set" Usage="System.Security.Cryptography.HMAC.BlockSizeValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aee7b-110">Obtém ou define o tamanho do bloco a ser usado no valor de hash.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aee7b-110">Gets or sets the block size to use in the hash value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aee7b-111">O tamanho de bloco a ser usado no valor de hash.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aee7b-111">The block size to use in the hash value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aee7b-112">Um código de autenticação de mensagem baseado em Hash (HMAC) usa uma função de hash em que dados será transformada em hash pela iteração de uma função de compactação básica em blocos de dados.</span><span class="sxs-lookup"><span data-stu-id="aee7b-112">A Hash-based Message Authentication Code (HMAC) uses a hash function where data is hashed by iterating a basic compression function on blocks of data.</span></span> <span data-ttu-id="aee7b-113"><xref:System.Security.Cryptography.HMAC.BlockSizeValue%2A> é o tamanho em bytes de tal um bloco.</span><span class="sxs-lookup"><span data-stu-id="aee7b-113"><xref:System.Security.Cryptography.HMAC.BlockSizeValue%2A> is the byte size of such a block.</span></span> <span data-ttu-id="aee7b-114">Seu valor é de 64 bytes.</span><span class="sxs-lookup"><span data-stu-id="aee7b-114">Its value is 64 bytes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="aee7b-115">Cria uma instância da implementação de um <see cref="T:System.Security.Cryptography.HMAC" /> (Hash-based Message Authentication Code).</span>
          <span class="sxs-lookup">
            <span data-stu-id="aee7b-115">Creates an instance of an implementation of a Hash-based Message Authentication Code (<see cref="T:System.Security.Cryptography.HMAC" />) .</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.HMAC Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.HMAC Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.Create" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create () As HMAC" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::HMAC ^ Create();" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; System.Security.Cryptography.HMAC" Usage="System.Security.Cryptography.HMAC.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HMAC</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aee7b-116">Cria uma instância da implementação padrão de um HMAC (Hash-based Message Authentication Code).</span>
          <span class="sxs-lookup">
            <span data-stu-id="aee7b-116">Creates an instance of the default implementation of a Hash-based Message Authentication Code (HMAC).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aee7b-117">Uma nova instância SHA-1, a menos que as configurações padrão tenham sido alteradas usando o [elemento &lt;cryptoClass&gt;](~/docs/framework/configure-apps/file-schema/cryptography/cryptoclass-element.md).</span>
          <span class="sxs-lookup">
            <span data-stu-id="aee7b-117">A new SHA-1 instance, unless the default settings have been changed by using the [&lt;cryptoClass&gt; element](~/docs/framework/configure-apps/file-schema/cryptography/cryptoclass-element.md).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aee7b-118">Por padrão, essa sobrecarga usa a implementação de SHA-1 do HMAC.</span><span class="sxs-lookup"><span data-stu-id="aee7b-118">By default, this overload uses the SHA-1 implementation of HMAC.</span></span> <span data-ttu-id="aee7b-119">Se você quiser especificar uma implementação diferente, use o <xref:System.Security.Cryptography.HMAC.Create%28System.String%29> sobrecarregar, que permite que você especifique um nome de algoritmo, em vez disso.</span><span class="sxs-lookup"><span data-stu-id="aee7b-119">If you want to specify a different implementation, use the <xref:System.Security.Cryptography.HMAC.Create%28System.String%29> overload, which lets you specify an algorithm name, instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.HMAC Create (string algorithmName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.HMAC Create(string algorithmName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (algorithmName As String) As HMAC" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::HMAC ^ Create(System::String ^ algorithmName);" />
      <MemberSignature Language="F#" Value="static member Create : string -&gt; System.Security.Cryptography.HMAC" Usage="System.Security.Cryptography.HMAC.Create algorithmName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HMAC</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithmName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithmName">
          <span data-ttu-id="aee7b-120">A implementação do HMAC a ser usada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aee7b-120">The HMAC implementation to use.</span>
          </span>
          <span data-ttu-id="aee7b-121">A tabela a seguir mostra os valores válidos para o parâmetro <c>algorithmName</c> e os algoritmos para os quais são mapeados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aee7b-121">The following table shows the valid values for the <c>algorithmName</c> parameter and the algorithms they map to.</span>
          </span>
          <span data-ttu-id="aee7b-122">
            <list type="table">
              <listheader>
                <term> Valor do parâmetro  </term>
                <description> Implementa  </description>
              </listheader>
              <item>
                <term> System.Security.Cryptography.HMAC  </term>
                <description>
                  <see cref="T:System.Security.Cryptography.HMACSHA1" />
                </description>
              </item>
              <item>
                <term> System.Security.Cryptography.KeyedHashAlgorithm  </term>
                <description>
                  <see cref="T:System.Security.Cryptography.HMACSHA1" />
                </description>
              </item>
              <item>
                <term> HMACMD5  </term>
                <description>
                  <see cref="T:System.Security.Cryptography.HMACMD5" />
                </description>
              </item>
              <item>
                <term> System.Security.Cryptography.HMACMD5  </term>
                <description>
                  <see cref="T:System.Security.Cryptography.HMACMD5" />
                </description>
              </item>
              <item>
                <term> HMACRIPEMD160  </term>
                <description>
                  <see cref="T:System.Security.Cryptography.HMACRIPEMD160" />
                </description>
              </item>
              <item>
                <term> System.Security.Cryptography.HMACRIPEMD160  </term>
                <description>
                  <see cref="T:System.Security.Cryptography.HMACRIPEMD160" />
                </description>
              </item>
              <item>
                <term> HMACSHA1  </term>
                <description>
                  <see cref="T:System.Security.Cryptography.HMACSHA1" />
                </description>
              </item>
              <item>
                <term> System.Security.Cryptography.HMACSHA1  </term>
                <description>
                  <see cref="T:System.Security.Cryptography.HMACSHA1" />
                </description>
              </item>
              <item>
                <term> HMACSHA256  </term>
                <description>
                  <see cref="T:System.Security.Cryptography.HMACSHA256" />
                </description>
              </item>
              <item>
                <term> System.Security.Cryptography.HMACSHA256  </term>
                <description>
                  <see cref="T:System.Security.Cryptography.HMACSHA256" />
                </description>
              </item>
              <item>
                <term> HMACSHA384  </term>
                <description>
                  <see cref="T:System.Security.Cryptography.HMACSHA384" />
                </description>
              </item>
              <item>
                <term> System.Security.Cryptography.HMACSHA384  </term>
                <description>
                  <see cref="T:System.Security.Cryptography.HMACSHA384" />
                </description>
              </item>
              <item>
                <term> HMACSHA512  </term>
                <description>
                  <see cref="T:System.Security.Cryptography.HMACSHA512" />
                </description>
              </item>
              <item>
                <term> System.Security.Cryptography.HMACSHA512  </term>
                <description>
                  <see cref="T:System.Security.Cryptography.HMACSHA512" />
                </description>
              </item>
              <item>
                <term> MACTripleDES  </term>
                <description>
                  <see cref="T:System.Security.Cryptography.MACTripleDES" />
                </description>
              </item>
              <item>
                <term> System.Security.Cryptography.MACTripleDES  </term>
                <description>
                  <see cref="T:System.Security.Cryptography.MACTripleDES" />
                </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="aee7b-122">
              <list type="table">
                <listheader>
                  <term> Parameter value  </term>
                  <description> Implements  </description>
                </listheader>
                <item>
                  <term> System.Security.Cryptography.HMAC  </term>
                  <description>
                    <see cref="T:System.Security.Cryptography.HMACSHA1" />
                  </description>
                </item>
                <item>
                  <term> System.Security.Cryptography.KeyedHashAlgorithm  </term>
                  <description>
                    <see cref="T:System.Security.Cryptography.HMACSHA1" />
                  </description>
                </item>
                <item>
                  <term> HMACMD5  </term>
                  <description>
                    <see cref="T:System.Security.Cryptography.HMACMD5" />
                  </description>
                </item>
                <item>
                  <term> System.Security.Cryptography.HMACMD5  </term>
                  <description>
                    <see cref="T:System.Security.Cryptography.HMACMD5" />
                  </description>
                </item>
                <item>
                  <term> HMACRIPEMD160  </term>
                  <description>
                    <see cref="T:System.Security.Cryptography.HMACRIPEMD160" />
                  </description>
                </item>
                <item>
                  <term> System.Security.Cryptography.HMACRIPEMD160  </term>
                  <description>
                    <see cref="T:System.Security.Cryptography.HMACRIPEMD160" />
                  </description>
                </item>
                <item>
                  <term> HMACSHA1  </term>
                  <description>
                    <see cref="T:System.Security.Cryptography.HMACSHA1" />
                  </description>
                </item>
                <item>
                  <term> System.Security.Cryptography.HMACSHA1  </term>
                  <description>
                    <see cref="T:System.Security.Cryptography.HMACSHA1" />
                  </description>
                </item>
                <item>
                  <term> HMACSHA256  </term>
                  <description>
                    <see cref="T:System.Security.Cryptography.HMACSHA256" />
                  </description>
                </item>
                <item>
                  <term> System.Security.Cryptography.HMACSHA256  </term>
                  <description>
                    <see cref="T:System.Security.Cryptography.HMACSHA256" />
                  </description>
                </item>
                <item>
                  <term> HMACSHA384  </term>
                  <description>
                    <see cref="T:System.Security.Cryptography.HMACSHA384" />
                  </description>
                </item>
                <item>
                  <term> System.Security.Cryptography.HMACSHA384  </term>
                  <description>
                    <see cref="T:System.Security.Cryptography.HMACSHA384" />
                  </description>
                </item>
                <item>
                  <term> HMACSHA512  </term>
                  <description>
                    <see cref="T:System.Security.Cryptography.HMACSHA512" />
                  </description>
                </item>
                <item>
                  <term> System.Security.Cryptography.HMACSHA512  </term>
                  <description>
                    <see cref="T:System.Security.Cryptography.HMACSHA512" />
                  </description>
                </item>
                <item>
                  <term> MACTripleDES  </term>
                  <description>
                    <see cref="T:System.Security.Cryptography.MACTripleDES" />
                  </description>
                </item>
                <item>
                  <term> System.Security.Cryptography.MACTripleDES  </term>
                  <description>
                    <see cref="T:System.Security.Cryptography.MACTripleDES" />
                  </description>
                </item>
              </list>
            </span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aee7b-123">Cria uma instância da implementação especificada de um HMAC (Hash-based Message Authentication Code).</span>
          <span class="sxs-lookup">
            <span data-stu-id="aee7b-123">Creates an instance of the specified implementation of a Hash-based Message Authentication Code (HMAC).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aee7b-124">Uma nova instância da implementação do HMAC especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aee7b-124">A new instance of the specified HMAC implementation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aee7b-125">HMAC dá suporte a um número de algoritmos de hash, incluindo MD5, SHA-1, SHA-256 e RIPEMD160.</span><span class="sxs-lookup"><span data-stu-id="aee7b-125">HMAC supports a number of hash algorithms, including MD5, SHA-1, SHA-256, and RIPEMD160.</span></span> <span data-ttu-id="aee7b-126">Para obter a lista completa, consulte os valores com suporte para o `algorithmName` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="aee7b-126">For the full list, see the supported values for the `algorithmName` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="hMAC.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="aee7b-127">
            <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aee7b-127">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aee7b-128">Libera os recursos não gerenciados usados pela classe <see cref="T:System.Security.Cryptography.HMAC" /> quando uma alteração de chave é legítima e, opcionalmente, libera os recursos gerenciados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aee7b-128">Releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.HMAC" /> class when a key change is legitimate and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aee7b-129">Este método é chamado pelo método público `Dispose()` e pelo método `Finalize`.</span><span class="sxs-lookup"><span data-stu-id="aee7b-129">This method is called by the public `Dispose()` method and the `Finalize` method.</span></span> <span data-ttu-id="aee7b-130">`Dispose()` invoca o método `Dispose(Boolean)` protegido com o parâmetro `disposing` definido como `true`.</span><span class="sxs-lookup"><span data-stu-id="aee7b-130">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="aee7b-131">`Finalize` invoca `Dispose` com `disposing` definido como `false`.</span><span class="sxs-lookup"><span data-stu-id="aee7b-131">`Finalize` invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="aee7b-132">Quando o `disposing` parâmetro é `true`, esse método libera todos os recursos mantidos por qualquer objeto gerenciado que este <xref:System.Security.Cryptography.HMAC> referências.</span><span class="sxs-lookup"><span data-stu-id="aee7b-132">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.HMAC> references.</span></span> <span data-ttu-id="aee7b-133">Este método invoca o método `Dispose()` de cada objeto referenciado.</span><span class="sxs-lookup"><span data-stu-id="aee7b-133">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="aee7b-134">
            <para>
              <see langword="Dispose" /> pode ser chamado várias vezes por outros objetos. Ao substituir <see langword="Dispose(Boolean)" />, tenha cuidado para referenciar objetos que tenham sido descartados anteriormente em uma chamada anterior para não <see langword="Dispose" />. Para obter mais informações sobre como implementar <see langword="Dispose(Boolean)" />, consulte [implementando um método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).  Para obter mais informações sobre <see langword="Dispose" /> e <see langword="Finalize" />, consulte [limpeza de recursos não gerenciados](~/docs/standard/garbage-collection/unmanaged.md).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="aee7b-134">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="HashCore">
      <MemberSignature Language="C#" Value="protected override void HashCore (ReadOnlySpan&lt;byte&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void HashCore(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.HashCore(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub HashCore (source As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void HashCore(ReadOnlySpan&lt;System::Byte&gt; source);" />
      <MemberSignature Language="F#" Value="override this.HashCore : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="hMAC.HashCore source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashCore">
      <MemberSignature Language="C#" Value="protected override void HashCore (byte[] rgb, int ib, int cb);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void HashCore(unsigned int8[] rgb, int32 ib, int32 cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.HashCore(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub HashCore (rgb As Byte(), ib As Integer, cb As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void HashCore(cli::array &lt;System::Byte&gt; ^ rgb, int ib, int cb);" />
      <MemberSignature Language="F#" Value="override this.HashCore : byte[] * int * int -&gt; unit" Usage="hMAC.HashCore (rgb, ib, cb)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgb" Type="System.Byte[]" />
        <Parameter Name="ib" Type="System.Int32" />
        <Parameter Name="cb" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rgb">
          <span data-ttu-id="aee7b-135">Os dados de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aee7b-135">The input data.</span>
          </span>
        </param>
        <param name="ib">
          <span data-ttu-id="aee7b-136">O deslocamento para a matriz de bytes com base na qual os dados começarão a ser usados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aee7b-136">The offset into the byte array from which to begin using data.</span>
          </span>
        </param>
        <param name="cb">
          <span data-ttu-id="aee7b-137">O número de bytes na matriz a ser usado como dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aee7b-137">The number of bytes in the array to use as data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aee7b-138">Quando substituído em uma classe derivada, roteia os dados gravados no objeto para o algoritmo de hash <see cref="T:System.Security.Cryptography.HMAC" /> padrão para computar o valor de hash.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aee7b-138">When overridden in a derived class, routes data written to the object into the default <see cref="T:System.Security.Cryptography.HMAC" /> hash algorithm for computing the hash value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aee7b-139">Esse método não é chamado pelo código do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="aee7b-139">This method is not called by application code.</span></span>  
  
 <span data-ttu-id="aee7b-140">Esse método abstract realiza o cálculo de hash.</span><span class="sxs-lookup"><span data-stu-id="aee7b-140">This abstract method performs the hash computation.</span></span> <span data-ttu-id="aee7b-141">Todas as gravações para o objeto de fluxo de criptografia passam os dados por meio desse método.</span><span class="sxs-lookup"><span data-stu-id="aee7b-141">Every write to the cryptographic stream object passes the data through this method.</span></span> <span data-ttu-id="aee7b-142">Para cada bloco de dados, esse método atualizará o estado do objeto de hash para que um valor de hash correto seja retornado do final do fluxo de dados.</span><span class="sxs-lookup"><span data-stu-id="aee7b-142">For each block of data, this method updates the state of the hash object so that a correct hash value is returned at the end of the data stream.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.Cryptography.HashAlgorithm" />
      </Docs>
    </Member>
    <Member MemberName="HashFinal">
      <MemberSignature Language="C#" Value="protected override byte[] HashFinal ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] HashFinal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.HashFinal" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HashFinal () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::Byte&gt; ^ HashFinal();" />
      <MemberSignature Language="F#" Value="override this.HashFinal : unit -&gt; byte[]" Usage="hMAC.HashFinal " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aee7b-143">Quando substituído em uma classe derivada, finaliza o cálculo de hash depois que os últimos dados são processados pelo objeto de fluxo criptográfico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aee7b-143">When overridden in a derived class, finalizes the hash computation after the last data is processed by the cryptographic stream object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aee7b-144">O código hash computado em uma matriz de bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aee7b-144">The computed hash code in a byte array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aee7b-145">Esse método não é chamado pelo código do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="aee7b-145">This method is not called by application code.</span></span> <span data-ttu-id="aee7b-146">Esse método finaliza qualquer computação parcial e retorna o valor de hash correto do fluxo de dados.</span><span class="sxs-lookup"><span data-stu-id="aee7b-146">This method finalizes any partial computation and returns the correct hash value of the data stream.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HashName">
      <MemberSignature Language="C#" Value="public string HashName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HashName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HMAC.HashName" />
      <MemberSignature Language="VB.NET" Value="Public Property HashName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HashName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HashName : string with get, set" Usage="System.Security.Cryptography.HMAC.HashName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aee7b-147">Obtém ou define o nome do algoritmo de hash a ser usado para hash.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aee7b-147">Gets or sets the name of the hash algorithm to use for hashing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aee7b-148">O nome do algoritmo de hash.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aee7b-148">The name of the hash algorithm.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="aee7b-149">O algoritmo de hash atual não pode ser alterado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aee7b-149">The current hash algorithm cannot be changed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize();" />
      <MemberSignature Language="F#" Value="override this.Initialize : unit -&gt; unit" Usage="hMAC.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aee7b-150">Inicializa uma nova instância da implementação padrão do <see cref="T:System.Security.Cryptography.HMAC" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aee7b-150">Initializes an instance of the default implementation of <see cref="T:System.Security.Cryptography.HMAC" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aee7b-151">Um código de autenticação de mensagem baseado em Hash (HMAC) pode ser usado para determinar se uma mensagem enviada por um canal inseguro foi violada, desde que o remetente e receptor compartilham uma chave secreta.</span><span class="sxs-lookup"><span data-stu-id="aee7b-151">A Hash-based Message Authentication Code (HMAC) can be used to determine whether a message sent over an insecure channel has been tampered with, provided that the sender and receiver share a secret key.</span></span> <span data-ttu-id="aee7b-152">O remetente calcula o valor de hash para os dados originais e envia os dados originais e o HMAC como uma única mensagem.</span><span class="sxs-lookup"><span data-stu-id="aee7b-152">The sender computes the hash value for the original data and sends both the original data and the HMAC as a single message.</span></span> <span data-ttu-id="aee7b-153">O receptor calcula novamente o valor de hash na mensagem recebida e verifica se o valor de hash computado corresponde ao valor de hash transmitidos.</span><span class="sxs-lookup"><span data-stu-id="aee7b-153">The receiver recomputes the hash value on the received message and checks that the computed hash value matches the transmitted hash value.</span></span>  
  
 <span data-ttu-id="aee7b-154">HMAC pode ser usado com qualquer função de hash criptográfico iterativo, como MD5 ou SHA-1, em combinação com uma chave de segredo compartilhada.</span><span class="sxs-lookup"><span data-stu-id="aee7b-154">HMAC can be used with any iterative cryptographic hash function, such as MD5 or SHA-1, in combination with a secret shared key.</span></span> <span data-ttu-id="aee7b-155">A intensidade criptográfica da HMAC depende das propriedades da função de hash subjacente.</span><span class="sxs-lookup"><span data-stu-id="aee7b-155">The cryptographic strength of HMAC depends on the properties of the underlying hash function.</span></span>  
  
 <span data-ttu-id="aee7b-156">Qualquer alteração de dados ou o valor de hash resultará em uma incompatibilidade, porque é necessário conhecimento da chave secreta para alterar a mensagem e reproduzir o valor de hash correto.</span><span class="sxs-lookup"><span data-stu-id="aee7b-156">Any change to the data or the hash value will result in a mismatch, because knowledge of the secret key is required to change the message and reproduce the correct hash value.</span></span> <span data-ttu-id="aee7b-157">Portanto, se os valores originais e computadas hash corresponderem, a mensagem é autenticada.</span><span class="sxs-lookup"><span data-stu-id="aee7b-157">Therefore, if the original and computed hash values match, the message is authenticated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public override byte[] Key { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Key" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HMAC.Key" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Key As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Byte&gt; ^ Key { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Key : byte[] with get, set" Usage="System.Security.Cryptography.HMAC.Key" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aee7b-158">Obtém ou define a chave a ser usada no algoritmo de hash.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aee7b-158">Gets or sets the key to use in the hash algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aee7b-159">A chave a ser usada no algoritmo de hash.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aee7b-159">The key to use in the hash algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aee7b-160">Essa propriedade é a chave para o algoritmo de hash com chave.</span><span class="sxs-lookup"><span data-stu-id="aee7b-160">This property is the key for the keyed hash algorithm.</span></span>  
  
 <span data-ttu-id="aee7b-161">Um código de autenticação de mensagem baseado em Hash (HMAC) pode ser usado para determinar se uma mensagem enviada por um canal inseguro foi violada, desde que o remetente e receptor compartilham uma chave secreta.</span><span class="sxs-lookup"><span data-stu-id="aee7b-161">A Hash-based Message Authentication Code (HMAC) can be used to determine whether a message sent over an insecure channel has been tampered with, provided that the sender and receiver share a secret key.</span></span> <span data-ttu-id="aee7b-162">O remetente calcula o valor de hash para os dados originais e envia os dados originais e o HMAC como uma única mensagem.</span><span class="sxs-lookup"><span data-stu-id="aee7b-162">The sender computes the hash value for the original data and sends both the original data and the HMAC as a single message.</span></span> <span data-ttu-id="aee7b-163">O receptor calcula novamente o valor de hash na mensagem recebida e verifica se o valor de hash computado corresponde ao valor de hash transmitidos.</span><span class="sxs-lookup"><span data-stu-id="aee7b-163">The receiver recomputes the hash value on the received message and checks that the computed hash value matches the transmitted hash value.</span></span>  
  
 <span data-ttu-id="aee7b-164">HMAC pode ser usado com qualquer função de hash criptográfico iterativo, como MD5 ou SHA-1, em combinação com uma chave de segredo compartilhada.</span><span class="sxs-lookup"><span data-stu-id="aee7b-164">HMAC can be used with any iterative cryptographic hash function, such as MD5 or SHA-1, in combination with a secret shared key.</span></span> <span data-ttu-id="aee7b-165">A intensidade criptográfica da HMAC depende das propriedades da função de hash subjacente.</span><span class="sxs-lookup"><span data-stu-id="aee7b-165">The cryptographic strength of HMAC depends on the properties of the underlying hash function.</span></span>  
  
 <span data-ttu-id="aee7b-166">Qualquer alteração de dados ou o valor de hash resulta em uma incompatibilidade, porque é necessário conhecimento da chave secreta para alterar a mensagem e reproduzir o valor de hash correto.</span><span class="sxs-lookup"><span data-stu-id="aee7b-166">Any change to the data or the hash value results in a mismatch, because knowledge of the secret key is required to change the message and reproduce the correct hash value.</span></span> <span data-ttu-id="aee7b-167">Portanto, se os valores originais e computadas hash corresponderem, a mensagem é autenticada.</span><span class="sxs-lookup"><span data-stu-id="aee7b-167">Therefore, if the original and computed hash values match, the message is authenticated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="aee7b-168">É feita uma tentativa de alterar a propriedade <see cref="P:System.Security.Cryptography.HMAC.Key" /> após o início do hash.</span>
          <span class="sxs-lookup">
            <span data-stu-id="aee7b-168">An attempt is made to change the <see cref="P:System.Security.Cryptography.HMAC.Key" /> property after hashing has begun.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TryHashFinal">
      <MemberSignature Language="C#" Value="protected override bool TryHashFinal (Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool TryHashFinal(valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.TryHashFinal(System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function TryHashFinal (destination As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool TryHashFinal(Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="override this.TryHashFinal : Span&lt;byte&gt; *  -&gt; bool" Usage="hMAC.TryHashFinal (destination, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="bytesWritten">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>