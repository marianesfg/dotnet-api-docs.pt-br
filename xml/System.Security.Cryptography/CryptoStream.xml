<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CryptoStream.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">360c3a36-c465-4a92-baa7-e17b5430051fe9df8f5e32be435b4f97fa42cf467cb442b69471.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e9df8f5e32be435b4f97fa42cf467cb442b69471</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e7865e39826e7aaf54da4c7042975153813a31c7</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/16/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.CryptoStream">
          <source>Defines a stream that links data streams to cryptographic transformations.</source>
          <target state="translated">Define uma transmissão que liga fluxos de dados a transformações criptográficas.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.CryptoStream">
          <source>The common language runtime uses a stream-oriented design for cryptography.</source>
          <target state="translated">O common language runtime usa um design orientado por fluxo para a criptografia.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.CryptoStream">
          <source>The core of this design is <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoStream&gt;</ph>.</source>
          <target state="translated">O núcleo desse design é <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoStream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.CryptoStream">
          <source>Any cryptographic objects that implement <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoStream&gt;</ph> can be chained together with any objects that implement <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph>, so the streamed output from one object can be fed into the input of another object.</source>
          <target state="translated">Qualquer criptografia os objetos que implementam <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoStream&gt;</ph> podem ser encadeadas junto com todos os objetos que implementam <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph>, portanto, a saída transmitidos de um objeto pode ser alimentada para a entrada de outro objeto.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.CryptoStream">
          <source>The intermediate result (the output from the first object) does not need to be stored separately.</source>
          <target state="translated">O resultado intermediário (a saída do primeiro objeto) não precisam ser armazenados separadamente.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.CryptoStream">
          <source>This type implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">Este tipo implementa o <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.CryptoStream">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly by calling its <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoStream.Clear%2A&gt;</ph> method, which in turn calls its <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> implementation.</source>
          <target state="translated">Quando você terminar de usar o tipo, descarte-direta ou indiretamente chamando seu <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoStream.Clear%2A&gt;</ph> método, que por sua vez chama seu <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> implementação.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.CryptoStream">
          <source>To dispose of the type directly, call its <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoStream.Clear%2A&gt;</ph> method in a <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block.</source>
          <target state="translated">Para descartar o tipo diretamente, chame seu <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoStream.Clear%2A&gt;</ph> método em um <ph id="ph2">`try`</ph> <ph id="ph3">/</ph> <ph id="ph4">`catch`</ph> bloco.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.CryptoStream">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">Para descartar indiretamente dele, use uma construção de linguagem, como <ph id="ph1">`using`</ph> (em c#) ou <ph id="ph2">`Using`</ph> (no Visual Basic).</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.CryptoStream">
          <source>For more information, see the "Using an Object that Implements IDisposable" section in the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface topic.</source>
          <target state="translated">Para obter mais informações, consulte a seção "Usando um objeto que implementa IDisposable" o <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> tópico de interface.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.CryptoStream">
          <source>You should always explicitly close your <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoStream&gt;</ph> object after you are done using it by calling the <ph id="ph2">&lt;xref:System.Security.Cryptography.CryptoStream.Clear%2A&gt;</ph> method.</source>
          <target state="translated">Você sempre deve fechar seu <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoStream&gt;</ph> objeto depois que você usá-lo ao chamar o <ph id="ph2">&lt;xref:System.Security.Cryptography.CryptoStream.Clear%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.CryptoStream">
          <source>Doing so flushes the underlying stream and causes all remaining blocks of data to be processed by the <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoStream&gt;</ph> object.</source>
          <target state="translated">Isso libera o fluxo subjacente e faz com que todos os demais blocos de dados a serem processadas pelo <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoStream&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.CryptoStream">
          <source>However, if an exception occurs before you call the <ph id="ph1">&lt;xref:System.IO.Stream.Close%2A&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Security.Cryptography.CryptoStream&gt;</ph> object might not be closed.</source>
          <target state="translated">No entanto, se ocorrer uma exceção antes de chamar o <ph id="ph1">&lt;xref:System.IO.Stream.Close%2A&gt;</ph> método, o <ph id="ph2">&lt;xref:System.Security.Cryptography.CryptoStream&gt;</ph> objeto não pode ser fechado.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.CryptoStream">
          <source>To ensure that the <ph id="ph1">&lt;xref:System.IO.Stream.Close%2A&gt;</ph> method always gets called, place your call to the <ph id="ph2">&lt;xref:System.Security.Cryptography.CryptoStream.Clear%2A&gt;</ph> method within the <ph id="ph3">`finally`</ph> block of a <ph id="ph4">`try`</ph><ph id="ph5">/</ph><ph id="ph6">`catch`</ph> statement.</source>
          <target state="translated">Para garantir que o <ph id="ph1">&lt;xref:System.IO.Stream.Close%2A&gt;</ph> sempre método é chamado, coloque a chamada para o <ph id="ph2">&lt;xref:System.Security.Cryptography.CryptoStream.Clear%2A&gt;</ph> método dentro de <ph id="ph3">`finally`</ph> bloco de um <ph id="ph4">`try`</ph> <ph id="ph5">/</ph> <ph id="ph6">`catch`</ph> instrução.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.CryptoStream">
          <source>The following example demonstrates how to use a <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoStream&gt;</ph> to encrypt a string.</source>
          <target state="translated">O exemplo a seguir demonstra como usar um <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoStream&gt;</ph> para criptografar uma cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.CryptoStream">
          <source>This method uses <ph id="ph1">&lt;xref:System.Security.Cryptography.RijndaelManaged&gt;</ph> class with the specified <ph id="ph2">&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A&gt;</ph> and initialization vector (<ph id="ph3">&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A&gt;</ph>).</source>
          <target state="translated">Esse método usa <ph id="ph1">&lt;xref:System.Security.Cryptography.RijndaelManaged&gt;</ph> classe com especificado <ph id="ph2">&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A&gt;</ph> e vetor de inicialização (<ph id="ph3">&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.#ctor(System.IO.Stream,System.Security.Cryptography.ICryptoTransform,System.Security.Cryptography.CryptoStreamMode)">
          <source>The stream on which to perform the cryptographic transformation.</source>
          <target state="translated">O fluxo no qual a transformação de criptografia será executada.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.#ctor(System.IO.Stream,System.Security.Cryptography.ICryptoTransform,System.Security.Cryptography.CryptoStreamMode)">
          <source>The cryptographic transformation that is to be performed on the stream.</source>
          <target state="translated">A transformação criptográfica a ser executada no fluxo.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.#ctor(System.IO.Stream,System.Security.Cryptography.ICryptoTransform,System.Security.Cryptography.CryptoStreamMode)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CryptoStreamMode" /&gt;</ph> values.</source>
          <target state="translated">Um dos valores de <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CryptoStreamMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.#ctor(System.IO.Stream,System.Security.Cryptography.ICryptoTransform,System.Security.Cryptography.CryptoStreamMode)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CryptoStream" /&gt;</ph> class with a target data stream, the transformation to use, and the mode of the stream.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CryptoStream" /&gt;</ph> com um fluxo de dados de destino, a transformação a ser usada e o modo do fluxo.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.#ctor(System.IO.Stream,System.Security.Cryptography.ICryptoTransform,System.Security.Cryptography.CryptoStreamMode)">
          <source>Any object that derives from <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> can be passed into the <ph id="ph2">`stream`</ph> parameter.</source>
          <target state="translated">Qualquer objeto derivado de <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> pode ser passado para o <ph id="ph2">`stream`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.#ctor(System.IO.Stream,System.Security.Cryptography.ICryptoTransform,System.Security.Cryptography.CryptoStreamMode)">
          <source>Any object that implements <ph id="ph1">&lt;xref:System.Security.Cryptography.ICryptoTransform&gt;</ph> (such as <ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph>) can be passed into the <ph id="ph3">`transform`</ph> parameter.</source>
          <target state="translated">Qualquer objeto que implementa <ph id="ph1">&lt;xref:System.Security.Cryptography.ICryptoTransform&gt;</ph> (como <ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph>) pode ser passado para o <ph id="ph3">`transform`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.#ctor(System.IO.Stream,System.Security.Cryptography.ICryptoTransform,System.Security.Cryptography.CryptoStreamMode)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> é inválido.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.#ctor(System.IO.Stream,System.Security.Cryptography.ICryptoTransform,System.Security.Cryptography.CryptoStreamMode,System.Boolean)">
          <source>The stream on which to perform the cryptographic transformation.</source>
          <target state="translated">O fluxo no qual a transformação de criptografia será executada.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.#ctor(System.IO.Stream,System.Security.Cryptography.ICryptoTransform,System.Security.Cryptography.CryptoStreamMode,System.Boolean)">
          <source>The cryptographic transformation that is to be performed on the stream.</source>
          <target state="translated">A transformação criptográfica a ser executada no fluxo.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.#ctor(System.IO.Stream,System.Security.Cryptography.ICryptoTransform,System.Security.Cryptography.CryptoStreamMode,System.Boolean)">
          <source>The mode of the stream.</source>
          <target state="translated">O modo de fluxo.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.#ctor(System.IO.Stream,System.Security.Cryptography.ICryptoTransform,System.Security.Cryptography.CryptoStreamMode,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to not close the underlying stream when the <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.CryptoStream" /&gt;</ph> object is disposed; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para não fechar o fluxo subjacente quando o objeto <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.CryptoStream" /&gt;</ph> é descartado; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.#ctor(System.IO.Stream,System.Security.Cryptography.ICryptoTransform,System.Security.Cryptography.CryptoStreamMode,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CryptoStream" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CryptoStream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.#ctor(System.IO.Stream,System.Security.Cryptography.ICryptoTransform,System.Security.Cryptography.CryptoStreamMode,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="mode" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="mode" /&gt;</ph> é inválido.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.CryptoStream.CanRead">
          <source>Gets a value indicating whether the current <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CryptoStream" /&gt;</ph> is readable.</source>
          <target state="translated">Obtém um valor que indica se o <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CryptoStream" /&gt;</ph> atual é legível.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.CryptoStream.CanRead">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current stream is readable; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o fluxo atual é legível; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.CryptoStream.CanSeek">
          <source>Gets a value indicating whether you can seek within the current <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CryptoStream" /&gt;</ph>.</source>
          <target state="translated">Obtém um valor que indica se você pode buscar dentro do <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CryptoStream" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.CryptoStream.CanSeek">
          <source>Always <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Sempre <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.CryptoStream.CanSeek">
          <source>Seeking is not enabled in a <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoStream&gt;</ph>, so this method always returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Busca não está habilitado em um <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoStream&gt;</ph>, portanto, esse método sempre retornará <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.CryptoStream.CanWrite">
          <source>Gets a value indicating whether the current <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CryptoStream" /&gt;</ph> is writable.</source>
          <target state="translated">Obtém um valor que indica se o <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CryptoStream" /&gt;</ph> atual é gravável.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.CryptoStream.CanWrite">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current stream is writable; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se o fluxo atual é gravável; Caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Clear">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CryptoStream" /&gt;</ph>.</source>
          <target state="translated">Libera todos os recursos usados pelo <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CryptoStream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.Clear">
          <source>This method wraps a call to the type's <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph> implementation.</source>
          <target state="translated">Este método envolve uma chamada para o tipo <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph> implementação.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.Clear">
          <source>Calling <ph id="ph1">`Dispose`</ph> allows the resources used by the <ph id="ph2">&lt;xref:System.Security.Cryptography.CryptoStream&gt;</ph> to be reallocated for other purposes.</source>
          <target state="translated">Chamando <ph id="ph1">`Dispose`</ph> permite que os recursos usados pelo <ph id="ph2">&lt;xref:System.Security.Cryptography.CryptoStream&gt;</ph> para ser realocada para outros fins.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.Clear">
          <source>For more information about <ph id="ph1">`Dispose`</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept></source>
          <target state="translated">Para obter mais informações sobre <ph id="ph1">`Dispose`</ph>, consulte <bpt id="p1">[</bpt>limpeza de recursos não gerenciados<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept></target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para liberar recursos gerenciados e não gerenciados; <ph id="ph2">&lt;see langword="false" /&gt;</ph> para liberar apenas recursos não gerenciados.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CryptoStream" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">Libera os recursos não gerenciados usados pelo <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CryptoStream" /&gt;</ph> e opcionalmente libera os recursos gerenciados.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">Este método é chamado pelo método público <ph id="ph1">`Dispose()`</ph> e pelo método <ph id="ph2">`Finalize`</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the disposing parameter set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> invoca o protegido <ph id="ph2">`Dispose(Boolean)`</ph> método com o parâmetro descartando definido como <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.Dispose(System.Boolean)">
          <source><ph id="ph1">`Finalize`</ph> invokes <ph id="ph2">`Dispose`</ph> with disposing set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">`Finalize`</ph> invoca <ph id="ph2">`Dispose`</ph> com disposing definido como <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.Security.Cryptography.CryptoStream&gt;</ph> references.</source>
          <target state="translated">Quando o <ph id="ph1">`disposing`</ph> parâmetro é <ph id="ph2">`true`</ph>, esse método libera todos os recursos mantidos por qualquer objeto gerenciado que este <ph id="ph3">&lt;xref:System.Security.Cryptography.CryptoStream&gt;</ph> referências.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">Este método invoca o método <ph id="ph1">`Dispose()`</ph> de cada objeto referenciado.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> pode ser chamado várias vezes por outros objetos.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, be careful not to reference objects that have been previously disposed in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, tenha cuidado em não para referenciar objetos que foi descartados anteriormente em uma chamada anterior para <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre como implementar <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, consulte <bpt id="p1">[</bpt>implementar um método Dispose<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see langword="Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> e <ph id="ph2">&lt;see langword="Finalize" /&gt;</ph>, consulte <bpt id="p1">[</bpt>limpeza de recursos não gerenciados<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Flush">
          <source>Clears all buffers for the current stream and causes any buffered data to be written to the underlying device.</source>
          <target state="translated">Limpa todos os buffers do fluxo atual e faz com que todos os dados armazenados em buffer sejam gravados no dispositivo subjacente.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.Flush">
          <source>Flushing the stream will not flush its underlying encoder unless you explicitly call <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoStream.Flush%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.IO.Stream.Close%2A&gt;</ph>.</source>
          <target state="translated">Liberando o fluxo não liberar seu codificador subjacente, a menos que você chamar explicitamente <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoStream.Flush%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.IO.Stream.Close%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.Flush">
          <source>Setting <ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A&gt;</ph> to <ph id="ph2">`true`</ph> means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</source>
          <target state="translated">Configuração <ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A&gt;</ph> para <ph id="ph2">`true`</ph> significa que os dados serão liberados do buffer no fluxo, mas o estado de codificador não será liberado.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.Flush">
          <source>This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</source>
          <target state="translated">Isso permite que o codificador deve manter o estado (parcial caracteres) para que ele pode codificar o próximo bloco de caracteres corretamente.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.Flush">
          <source>This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</source>
          <target state="translated">Este cenário afeta UTF8 e UTF7 onde determinados caracteres podem ser codificados somente depois que o codificador recebe adjacentes ou mais caracteres.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.Flush">
          <source>You should call either the <ph id="ph1">&lt;xref:System.IO.Stream.Close%2A&gt;</ph> method or the <ph id="ph2">&lt;xref:System.Security.Cryptography.CryptoStream.FlushFinalBlock%2A&gt;</ph> method to complete flushing the buffer.</source>
          <target state="translated">Você deve chamar o a <ph id="ph1">&lt;xref:System.IO.Stream.Close%2A&gt;</ph> método ou o <ph id="ph2">&lt;xref:System.Security.Cryptography.CryptoStream.FlushFinalBlock%2A&gt;</ph> método para concluir a liberação de buffer.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.FlushAsync(System.Threading.CancellationToken)">
          <source>The token to monitor for cancellation requests.</source>
          <target state="translated">O token a se monitorar para solicitações de cancelamento.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.FlushAsync(System.Threading.CancellationToken)">
          <source>The default value is <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph>.</source>
          <target state="translated">O valor padrão é <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.FlushAsync(System.Threading.CancellationToken)">
          <source>Clears all buffers for the current stream asynchronously, causes any buffered data to be written to the underlying device, and monitors cancellation requests.</source>
          <target state="translated">Limpa todos os buffers para o fluxo atual de forma assíncrona, faz com que quaisquer dados armazenados em buffer sejam gravados no dispositivo subjacente e monitora as solicitações de cancelamento.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.FlushAsync(System.Threading.CancellationToken)">
          <source>A task that represents the asynchronous flush operation.</source>
          <target state="translated">Uma tarefa que representa a operação de liberação assíncrona.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.FlushAsync(System.Threading.CancellationToken)">
          <source>You must preface your call to <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoStream.FlushAsync%2A&gt;</ph> with the <ph id="ph2">`await`</ph> (C#) or <ph id="ph3">`Await`</ph> (Visual Basic) operator to suspend execution of the method until the task is complete.</source>
          <target state="translated">Você deve iniciar sua chamada para <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoStream.FlushAsync%2A&gt;</ph> com o <ph id="ph2">`await`</ph> (c#) ou <ph id="ph3">`Await`</ph> operador (Visual Basic) para suspender a execução do método até que a tarefa seja concluída.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.FlushAsync(System.Threading.CancellationToken)">
          <source>For more information, see <bpt id="p1">[</bpt>Asynchronous Programming with Async and Await<ept id="p1">](http://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7)</ept>.</source>
          <target state="translated">Para saber mais, veja <bpt id="p1">[</bpt>Programação assíncrona com Async e Await<ept id="p1">](http://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7)</ept>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.FlushAsync(System.Threading.CancellationToken)">
          <source>If the operation is canceled before it completes, the returned task contains the <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus.Canceled&gt;</ph> value for the <ph id="ph2">&lt;xref:System.Threading.Tasks.Task.Status%2A&gt;</ph> property.</source>
          <target state="translated">Se a operação foi cancelada antes da conclusão, a tarefa retornada contém o <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus.Canceled&gt;</ph> valor para o <ph id="ph2">&lt;xref:System.Threading.Tasks.Task.Status%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.FlushAsync(System.Threading.CancellationToken)">
          <source>The stream has been disposed.</source>
          <target state="translated">O fluxo foi descartado.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.FlushFinalBlock">
          <source>Updates the underlying data source or repository with the current state of the buffer, then clears the buffer.</source>
          <target state="translated">Atualiza a fonte de dados ou o repositório subjacente com o estado atual do buffer e, em seguida, limpa o buffer.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.FlushFinalBlock">
          <source>Calling the <ph id="ph1">&lt;xref:System.IO.Stream.Close%2A&gt;</ph> method will call <ph id="ph2">&lt;xref:System.Security.Cryptography.CryptoStream.FlushFinalBlock%2A&gt;</ph>.</source>
          <target state="translated">Chamando o <ph id="ph1">&lt;xref:System.IO.Stream.Close%2A&gt;</ph> chamará o método <ph id="ph2">&lt;xref:System.Security.Cryptography.CryptoStream.FlushFinalBlock%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.FlushFinalBlock">
          <source>If you do not call <ph id="ph1">&lt;xref:System.IO.Stream.Close%2A&gt;</ph>, call <ph id="ph2">&lt;xref:System.Security.Cryptography.CryptoStream.FlushFinalBlock%2A&gt;</ph> to complete flushing the buffer.</source>
          <target state="translated">Se você não chama <ph id="ph1">&lt;xref:System.IO.Stream.Close%2A&gt;</ph>, chame <ph id="ph2">&lt;xref:System.Security.Cryptography.CryptoStream.FlushFinalBlock%2A&gt;</ph> para concluir a liberação de buffer.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.FlushFinalBlock">
          <source>Call <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoStream.FlushFinalBlock%2A&gt;</ph> only when all stream activity is complete.</source>
          <target state="translated">Chamar <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoStream.FlushFinalBlock%2A&gt;</ph> somente quando todas as atividades de fluxo for concluída.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.FlushFinalBlock">
          <source>The key is corrupt which can cause invalid padding to the stream.</source>
          <target state="translated">A chave está corrompida, o que pode causar um preenchimento inválido no fluxo.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.FlushFinalBlock">
          <source>The current stream is not writable.</source>
          <target state="translated">O fluxo atual não é gravável.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.FlushFinalBlock">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.FlushFinalBlock">
          <source>The final block has already been transformed.</source>
          <target state="translated">O bloco final já foi transformado.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.CryptoStream.HasFlushedFinalBlock">
          <source>Gets a value indicating whether the final buffer block has been written to the underlying stream.</source>
          <target state="translated">Obtém um valor que indica se o bloco de buffer final foi gravado no fluxo subjacente.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.CryptoStream.HasFlushedFinalBlock">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the final block has been flushed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se o bloco final foi liberado; Caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.CryptoStream.HasFlushedFinalBlock">
          <source>This property is set <ph id="ph1">`true`</ph> when the <ph id="ph2">&lt;xref:System.Security.Cryptography.CryptoStream.FlushFinalBlock%2A&gt;</ph> method is called.</source>
          <target state="translated">Essa propriedade é definida <ph id="ph1">`true`</ph> quando o <ph id="ph2">&lt;xref:System.Security.Cryptography.CryptoStream.FlushFinalBlock%2A&gt;</ph> método é chamado.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.CryptoStream.Length">
          <source>Gets the length in bytes of the stream.</source>
          <target state="translated">Obtém o tamanho do fluxo em bytes.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.CryptoStream.Length">
          <source>This property is not supported.</source>
          <target state="translated">Não há suporte a esta propriedade.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.CryptoStream.Length">
          <source>This property exists only to support inheritance from <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph>, and cannot be used.</source>
          <target state="translated">Essa propriedade existe somente para dar suporte à herança de <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> e não pode ser usada.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.CryptoStream.Length">
          <source>This property is not supported.</source>
          <target state="translated">Não há suporte a esta propriedade.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.CryptoStream.Position">
          <source>Gets or sets the position within the current stream.</source>
          <target state="translated">Obtém ou define a posição no fluxo atual.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.CryptoStream.Position">
          <source>This property is not supported.</source>
          <target state="translated">Não há suporte a esta propriedade.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.CryptoStream.Position">
          <source>This property exists only to support inheritance from <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph>, and cannot be used.</source>
          <target state="translated">Essa propriedade existe somente para dar suporte à herança de <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> e não pode ser usada.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.CryptoStream.Position">
          <source>This property is not supported.</source>
          <target state="translated">Não há suporte a esta propriedade.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>An array of bytes.</source>
          <target state="translated">Uma matriz de bytes.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>A maximum of <bpt id="p1">&lt;c&gt;</bpt>count<ept id="p1">&lt;/c&gt;</ept> bytes are read from the current stream and stored in <bpt id="p2">&lt;c&gt;</bpt>buffer<ept id="p2">&lt;/c&gt;</ept>.</source>
          <target state="translated">Um máximo de <bpt id="p1">&lt;c&gt;</bpt>count<ept id="p1">&lt;/c&gt;</ept> bytes são lidos do fluxo atual e armazenados em <bpt id="p2">&lt;c&gt;</bpt>buffer<ept id="p2">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The byte offset in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> at which to begin storing the data read from the current stream.</source>
          <target state="translated">O deslocamento de bytes em <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> no qual será iniciada a leitura de dados no fluxo atual.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The maximum number of bytes to be read from the current stream.</source>
          <target state="translated">O número máximo de bytes a serem lidos no fluxo atual.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>Reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.</source>
          <target state="translated">Lê uma sequência de bytes do fluxo atual e avança a posição no fluxo até o número de bytes lidos.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The total number of bytes read into the buffer.</source>
          <target state="translated">O número total de bytes lidos do buffer.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>This can be less than the number of bytes requested if that many bytes are not currently available, or zero if the end of the stream has been reached.</source>
          <target state="translated">Isso poderá ser menor que o número de bytes solicitado se tal quantidade de bytes não estiver disponível no momento ou zero se o final do fluxo tiver sido atingido.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CryptoStreamMode" /&gt;</ph> associated with current <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.CryptoStream" /&gt;</ph> object does not match the underlying stream.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CryptoStreamMode" /&gt;</ph> associado ao objeto <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.CryptoStream" /&gt;</ph> atual não corresponde ao fluxo subjacente.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>For example, this exception is thrown when using <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.CryptoStreamMode.Read" /&gt;</ph> with an underlying stream that is write only.</source>
          <target state="translated">Por exemplo, essa exceção é gerada ao usar <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.CryptoStreamMode.Read" /&gt;</ph> com um fluxo subjacente que é somente gravação.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> parameter is less than zero.</source>
          <target state="translated">O parâmetro <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> é menor que zero.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="count" /&gt;</ph> parameter is less than zero.</source>
          <target state="translated">O parâmetro <ph id="ph1">&lt;paramref name="count" /&gt;</ph> é menor que zero.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>Thesum of the <ph id="ph1">&lt;paramref name="count" /&gt;</ph> and <ph id="ph2">&lt;paramref name="offset" /&gt;</ph> parameters is longer than the length of the buffer.</source>
          <target state="translated">A soma dos parâmetros <ph id="ph1">&lt;paramref name="count" /&gt;</ph> e <ph id="ph2">&lt;paramref name="offset" /&gt;</ph> é maior do que o tamanho do buffer.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The buffer to write the data into.</source>
          <target state="translated">O buffer no qual os dados serão gravados.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The byte offset in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> at which to begin writing data from the stream.</source>
          <target state="translated">O deslocamento de bytes no <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> em que será iniciada a gravação de dados do fluxo.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The maximum number of bytes to read.</source>
          <target state="translated">O número máximo de bytes a serem lidos.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The token to monitor for cancellation requests.</source>
          <target state="translated">O token a se monitorar para solicitações de cancelamento.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The default value is <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph>.</source>
          <target state="translated">O valor padrão é <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>Reads a sequence of bytes from the current stream asynchronously, advances the position within the stream by the number of bytes read, and monitors cancellation requests.</source>
          <target state="translated">Lê uma sequência de bytes do fluxo atual de forma assíncrona, avança a posição no fluxo até o número de bytes lidos e monitora as solicitações de cancelamento.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>A task that represents the asynchronous read operation.</source>
          <target state="translated">Uma tarefa que representa a operação de leitura assíncrona.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The value of the task object's <ph id="ph1">&lt;paramref name="TResult" /&gt;</ph> parameter contains the total number of bytes read into the buffer.</source>
          <target state="translated">O valor do parâmetro <ph id="ph1">&lt;paramref name="TResult" /&gt;</ph> do objeto da tarefa contém o número total de bytes lidos no buffer.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The result can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached.</source>
          <target state="translated">O resultado poderá ser menor que o número de bytes solicitados se o número de bytes disponíveis no momento for menor que o número solicitado ou poderá ser 0 (zero) se o final do fluxo foi atingido.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>You must preface your call to <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoStream.ReadAsync%2A&gt;</ph> with the <ph id="ph2">`await`</ph> (C#) or <ph id="ph3">`Await`</ph> (Visual Basic) operator to suspend execution of the method until the task is complete.</source>
          <target state="translated">Você deve iniciar sua chamada para <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoStream.ReadAsync%2A&gt;</ph> com o <ph id="ph2">`await`</ph> (c#) ou <ph id="ph3">`Await`</ph> operador (Visual Basic) para suspender a execução do método até que a tarefa seja concluída.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>For more information, see <bpt id="p1">[</bpt>Asynchronous Programming with Async and Await<ept id="p1">](http://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7)</ept>.</source>
          <target state="translated">Para saber mais, veja <bpt id="p1">[</bpt>Programação assíncrona com Async e Await<ept id="p1">](http://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7)</ept>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>If the operation is canceled before it completes, the returned task contains the <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus.Canceled&gt;</ph> value for the <ph id="ph2">&lt;xref:System.Threading.Tasks.Task.Status%2A&gt;</ph> property.</source>
          <target state="translated">Se a operação foi cancelada antes da conclusão, a tarefa retornada contém o <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus.Canceled&gt;</ph> valor para o <ph id="ph2">&lt;xref:System.Threading.Tasks.Task.Status%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="count" /&gt;</ph> é negativo.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The sum of <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is larger than the buffer length.</source>
          <target state="translated">A soma de <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> e <ph id="ph2">&lt;paramref name="count" /&gt;</ph> é maior que o tamanho do buffer.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The stream does not support reading.</source>
          <target state="translated">Não há suporte para leitura no fluxo.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The stream has been disposed.</source>
          <target state="translated">O fluxo foi descartado.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The stream is currently in use by a previous read operation.</source>
          <target state="translated">O fluxo está sendo usado no momento por uma operação de leitura anterior.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>A byte offset relative to the <bpt id="p1">&lt;c&gt;</bpt>origin<ept id="p1">&lt;/c&gt;</ept> parameter.</source>
          <target state="translated">Um deslocamento de bytes relativo ao parâmetro <bpt id="p1">&lt;c&gt;</bpt>origem<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.SeekOrigin" /&gt;</ph> object indicating the reference point used to obtain the new position.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.IO.SeekOrigin" /&gt;</ph> indicando o ponto de referência usado para obter a nova posição.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>Sets the position within the current stream.</source>
          <target state="translated">Define a posição no fluxo atual.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>This method is not supported.</source>
          <target state="translated">Não há suporte para o método.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>This method exists only to support inheritance from <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph>, and cannot be used.</source>
          <target state="translated">Este método existe apenas para oferecer suporte a herança de <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph>e não pode ser usado.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>This method is not supported.</source>
          <target state="translated">Não há suporte para o método.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.SetLength(System.Int64)">
          <source>The desired length of the current stream in bytes.</source>
          <target state="translated">O tamanho desejado do fluxo atual em bytes.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.SetLength(System.Int64)">
          <source>Sets the length of the current stream.</source>
          <target state="translated">Define o comprimento do fluxo atual.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.SetLength(System.Int64)">
          <source>This property exists only to support inheritance from <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph>, and cannot be used.</source>
          <target state="translated">Essa propriedade existe somente para dar suporte à herança de <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> e não pode ser usada.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.SetLength(System.Int64)">
          <source>This property exists only to support inheritance from <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, and cannot be used.</source>
          <target state="translated">Essa propriedade existe somente para dar suporte à herança de <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> e não pode ser usada.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>An array of bytes.</source>
          <target state="translated">Uma matriz de bytes.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>This method copies <bpt id="p1">&lt;c&gt;</bpt>count<ept id="p1">&lt;/c&gt;</ept> bytes from <bpt id="p2">&lt;c&gt;</bpt>buffer<ept id="p2">&lt;/c&gt;</ept> to the current stream.</source>
          <target state="translated">Esse método copia os bytes de <bpt id="p1">&lt;c&gt;</bpt>contagem<ept id="p1">&lt;/c&gt;</ept> do <bpt id="p2">&lt;c&gt;</bpt>buffer<ept id="p2">&lt;/c&gt;</ept> para o fluxo atual.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The byte offset in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> at which to begin copying bytes to the current stream.</source>
          <target state="translated">O deslocamento de bytes em <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> no qual será iniciada a cópia de bytes no fluxo atual.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes to be written to the current stream.</source>
          <target state="translated">O número de bytes a serem gravados no fluxo atual.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>Writes a sequence of bytes to the current <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CryptoStream" /&gt;</ph> and advances the current position within the stream by the number of bytes written.</source>
          <target state="translated">Grava assincronamente uma sequência de bytes no <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CryptoStream" /&gt;</ph> atual e avança a posição atual no fluxo pelo número de bytes gravados.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CryptoStreamMode" /&gt;</ph> associated with current <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.CryptoStream" /&gt;</ph> object does not match the underlying stream.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CryptoStreamMode" /&gt;</ph> associado ao objeto <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.CryptoStream" /&gt;</ph> atual não corresponde ao fluxo subjacente.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>For example, this exception is thrown when using <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.CryptoStreamMode.Write" /&gt;</ph> with an underlying stream that is read only.</source>
          <target state="translated">Por exemplo, essa exceção é gerada ao usar <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.CryptoStreamMode.Write" /&gt;</ph> com um fluxo subjacente que é somente leitura.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> parameter is less than zero.</source>
          <target state="translated">O parâmetro <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> é menor que zero.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="count" /&gt;</ph> parameter is less than zero.</source>
          <target state="translated">O parâmetro <ph id="ph1">&lt;paramref name="count" /&gt;</ph> é menor que zero.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The sum of the <ph id="ph1">&lt;paramref name="count" /&gt;</ph> and <ph id="ph2">&lt;paramref name="offset" /&gt;</ph> parameters is longer than the length of the buffer.</source>
          <target state="translated">A soma dos parâmetros <ph id="ph1">&lt;paramref name="count" /&gt;</ph> e <ph id="ph2">&lt;paramref name="offset" /&gt;</ph> é maior do que o tamanho do buffer.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The buffer to write data from.</source>
          <target state="translated">O buffer do qual os dados serão gravados.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The zero-based byte offset in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> from which to begin writing bytes to the stream.</source>
          <target state="translated">O deslocamento de bytes baseado em zero no <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> do qual será iniciada a gravação de bytes para o fluxo.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The maximum number of bytes to write.</source>
          <target state="translated">O número máximo de bytes a serem gravados.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The token to monitor for cancellation requests.</source>
          <target state="translated">O token a se monitorar para solicitações de cancelamento.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The default value is <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph>.</source>
          <target state="translated">O valor padrão é <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>Writes a sequence of bytes to the current stream asynchronously, advances the current position within the stream by the number of bytes written, and monitors cancellation requests.</source>
          <target state="translated">Grava uma sequência de bytes no fluxo atual de forma assíncrona, avança a posição atual dentro do fluxo pelo número de bytes gravados e monitora as solicitações de cancelamento.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>A task that represents the asynchronous write operation.</source>
          <target state="translated">Uma tarefa que representa a operação de gravação assíncrona.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>You must preface your call to <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoStream.WriteAsync%2A&gt;</ph> with the <ph id="ph2">`await`</ph> (C#) or <ph id="ph3">`Await`</ph> (Visual Basic) operator to suspend execution of the method until the task is complete.</source>
          <target state="translated">Você deve iniciar sua chamada para <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoStream.WriteAsync%2A&gt;</ph> com o <ph id="ph2">`await`</ph> (c#) ou <ph id="ph3">`Await`</ph> operador (Visual Basic) para suspender a execução do método até que a tarefa seja concluída.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>For more information, see <bpt id="p1">[</bpt>Asynchronous Programming with Async and Await<ept id="p1">](http://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7)</ept>.</source>
          <target state="translated">Para saber mais, veja <bpt id="p1">[</bpt>Programação assíncrona com Async e Await<ept id="p1">](http://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7)</ept>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>If the operation is canceled before it completes, the returned task contains the <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus.Canceled&gt;</ph> value for the <ph id="ph2">&lt;xref:System.Threading.Tasks.Task.Status%2A&gt;</ph> property.</source>
          <target state="translated">Se a operação foi cancelada antes da conclusão, a tarefa retornada contém o <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus.Canceled&gt;</ph> valor para o <ph id="ph2">&lt;xref:System.Threading.Tasks.Task.Status%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="count" /&gt;</ph> é negativo.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The sum of <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is larger than the buffer length.</source>
          <target state="translated">A soma de <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> e <ph id="ph2">&lt;paramref name="count" /&gt;</ph> é maior que o tamanho do buffer.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The stream does not support writing.</source>
          <target state="translated">Não há suporte para gravação no fluxo.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The stream has been disposed.</source>
          <target state="translated">O fluxo foi descartado.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The stream is currently in use by a previous write operation.</source>
          <target state="translated">O fluxo está em uso no momento por uma operação de gravação anterior.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>