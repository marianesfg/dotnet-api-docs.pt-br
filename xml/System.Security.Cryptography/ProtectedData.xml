<Type Name="ProtectedData" FullName="System.Security.Cryptography.ProtectedData">
  <Metadata><Meta Name="ms.openlocfilehash" Value="38eb090e97e5972009f0065e48a5b55765ceee17" /><Meta Name="ms.sourcegitcommit" Value="3575d47a0ba065e8986f03d99279f478811907b8" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="05/20/2019" /><Meta Name="ms.locfileid" Value="65922704" /></Metadata><TypeSignature Language="C#" Value="public sealed class ProtectedData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ProtectedData extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.ProtectedData" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ProtectedData" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProtectedData sealed" />
  <TypeSignature Language="F#" Value="type ProtectedData = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.ProtectedData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornece métodos para criptografar e descriptografar dados. Essa classe não pode ser herdada.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks

Essa classe fornece acesso para o Data Protection DPAPI (API) disponível nos sistemas operacionais do Windows. Esse é um serviço que é fornecido pelo sistema operacional e não requer bibliotecas adicionais. Ele oferece proteção usando as credenciais de usuário ou o computador para criptografar ou descriptografar dados.

> [!IMPORTANT]
> Porque ela depende da DPAPI, a `ProtectedData` classe tem suporte na plataforma do Windows somente. Seu uso no .NET Core em plataformas diferentes do Windows gera um <xref:System.PlatformNotSupportedException>.
  
A classe consiste em dois wrappers para o DPAPI não gerenciado, <xref:System.Security.Cryptography.ProtectedData.Protect%2A> e <xref:System.Security.Cryptography.ProtectedData.Unprotect%2A>. Esses dois métodos podem ser usados para criptografar e descriptografar dados como senhas, chaves e cadeias de caracteres de conexão.  
  
Se você usar esses métodos durante a representação, você receberá o seguinte erro: "Chave não é válido para uso no estado especificado". Isso ocorre porque a DPAPI armazena os dados de chave nos perfis de usuário. Se o perfil não é carregado, o DPAPI não será capaz de executar a descriptografia. Para evitar esse erro, carrega o perfil do usuário que deseja representar antes de chamar qualquer um dos métodos. Usando a DPAPI com a representação pode incorrer em complicação significativa e requer que as opções de design cuidadoso.  

## Examples  
 O exemplo a seguir mostra como usar a proteção de dados.  
  
 [!code-cpp[Cryptography.DataProtectionSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.DataProtectionSample/CPP/dataprotectionsample.cpp#1)]
 [!code-csharp[Cryptography.DataProtectionSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.DataProtectionSample/CS/dataprotectionsample.cs#1)]
 [!code-vb[Cryptography.DataProtectionSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.DataProtectionSample/vb/dataprotectionsample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Protect">
      <MemberSignature Language="C#" Value="public static byte[] Protect (byte[] userData, byte[] optionalEntropy, System.Security.Cryptography.DataProtectionScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Protect(unsigned int8[] userData, unsigned int8[] optionalEntropy, valuetype System.Security.Cryptography.DataProtectionScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ProtectedData.Protect(System.Byte[],System.Byte[],System.Security.Cryptography.DataProtectionScope)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Protect (userData As Byte(), optionalEntropy As Byte(), scope As DataProtectionScope) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Protect(cli::array &lt;System::Byte&gt; ^ userData, cli::array &lt;System::Byte&gt; ^ optionalEntropy, System::Security::Cryptography::DataProtectionScope scope);" />
      <MemberSignature Language="F#" Value="static member Protect : byte[] * byte[] * System.Security.Cryptography.DataProtectionScope -&gt; byte[]" Usage="System.Security.Cryptography.ProtectedData.Protect (userData, optionalEntropy, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.ProtectedData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userData" Type="System.Byte[]" />
        <Parameter Name="optionalEntropy" Type="System.Byte[]" />
        <Parameter Name="scope" Type="System.Security.Cryptography.DataProtectionScope" />
      </Parameters>
      <Docs>
        <param name="userData">Uma matriz de bytes que contém os dados a serem criptografados.</param>
        <param name="optionalEntropy">Uma matriz de bytes adicional opcional usada para aumentar a complexidade da criptografia ou <see langword="null" /> para que não haja complexidade adicional.</param>
        <param name="scope">Um dos valores de enumeração que especifica o escopo da criptografia.</param>
        <summary>Criptografa os dados em uma matriz de bytes especificada e retorna uma matriz de bytes que contém os dados criptografados.</summary>
        <returns>Uma matriz de bytes que representa os dados criptografados.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método pode ser usado para criptografar os dados como senhas, chaves ou cadeias de caracteres de conexão. O `optionalEntropy` permite que você adicione dados para aumentar a complexidade da criptografia do parâmetro; especifique `null` para nenhuma complexidade adicional. Se fornecido, essas informações também devem ser usadas ao descriptografar os dados usando o <xref:System.Security.Cryptography.ProtectedData.Unprotect%2A> método.  
  
> [!NOTE]
>  Se você usar esse método durante a representação, você receberá o seguinte erro: "Chave não é válido para uso no estado especificado". Para evitar esse erro, carrega o perfil do usuário que deseja representar antes de chamar o método.  
  
   
  
## Examples  
 O exemplo a seguir mostra como usar a proteção de dados.  
  
 [!code-cpp[Cryptography.DataProtectionSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.DataProtectionSample/CPP/dataprotectionsample.cpp#1)]
 [!code-csharp[Cryptography.DataProtectionSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.DataProtectionSample/CS/dataprotectionsample.cs#1)]
 [!code-vb[Cryptography.DataProtectionSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.DataProtectionSample/vb/dataprotectionsample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="userData" /> é <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Falha na criptografia.</exception>
        <exception cref="T:System.NotSupportedException">O sistema operacional não é compatível com esse método.</exception>
        <exception cref="T:System.OutOfMemoryException">O sistema ficou sem memória ao criptografar os dados.</exception>
        <exception cref="T:System.PlatformNotSupportedException">Somente .NET Core: Chamadas para o <c>proteger</c> método têm suporte no Windows somente nos sistemas operacionais.</exception>
        <permission cref="T:System.Security.Permissions.DataProtectionPermission">com o associado <see cref="P:System.Security.Permissions.DataProtectionPermissionAttribute.ProtectData" /> sinalizador de permissão para proteger os dados.</permission>
      </Docs>
    </Member>
    <Member MemberName="Unprotect">
      <MemberSignature Language="C#" Value="public static byte[] Unprotect (byte[] encryptedData, byte[] optionalEntropy, System.Security.Cryptography.DataProtectionScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Unprotect(unsigned int8[] encryptedData, unsigned int8[] optionalEntropy, valuetype System.Security.Cryptography.DataProtectionScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ProtectedData.Unprotect(System.Byte[],System.Byte[],System.Security.Cryptography.DataProtectionScope)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Unprotect (encryptedData As Byte(), optionalEntropy As Byte(), scope As DataProtectionScope) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Unprotect(cli::array &lt;System::Byte&gt; ^ encryptedData, cli::array &lt;System::Byte&gt; ^ optionalEntropy, System::Security::Cryptography::DataProtectionScope scope);" />
      <MemberSignature Language="F#" Value="static member Unprotect : byte[] * byte[] * System.Security.Cryptography.DataProtectionScope -&gt; byte[]" Usage="System.Security.Cryptography.ProtectedData.Unprotect (encryptedData, optionalEntropy, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.ProtectedData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedData" Type="System.Byte[]" />
        <Parameter Name="optionalEntropy" Type="System.Byte[]" />
        <Parameter Name="scope" Type="System.Security.Cryptography.DataProtectionScope" />
      </Parameters>
      <Docs>
        <param name="encryptedData">Uma matriz de bytes que contém dados criptografados com o método <see cref="M:System.Security.Cryptography.ProtectedData.Protect(System.Byte[],System.Byte[],System.Security.Cryptography.DataProtectionScope)" />.</param>
        <param name="optionalEntropy">Uma matriz de bytes adicional opcional que foi usada para criptografar os dados ou <see langword="null" /> se a matriz de bytes adicional não tiver sido usada.</param>
        <param name="scope">Um dos valores de enumeração que especificam o escopo de proteção de dados que foi usado para criptografar os dados.</param>
        <summary>Descriptografa os dados em uma matriz de bytes especificada e retorna uma matriz de bytes que contém os dados descriptografados.</summary>
        <returns>Uma matriz de bytes que representa os dados descriptografados.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método pode ser usado para desproteger dados criptografados usando o <xref:System.Security.Cryptography.ProtectedData.Protect%2A> método. Se o `optionalEntropy` parâmetro foi usado durante a criptografia, ele deve ser fornecido para descriptografar os dados.  
  
> [!NOTE]
>  Se você usar esse método durante a representação, você receberá o seguinte erro: "Chave não é válido para uso no estado especificado". Para evitar esse erro, carrega o perfil do usuário que deseja representar antes de chamar o método.  
  
   
  
## Examples  
 O exemplo de código a seguir mostra como usar a proteção de dados.  
  
 [!code-cpp[Cryptography.DataProtectionSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.DataProtectionSample/CPP/dataprotectionsample.cpp#1)]
 [!code-csharp[Cryptography.DataProtectionSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.DataProtectionSample/CS/dataprotectionsample.cs#1)]
 [!code-vb[Cryptography.DataProtectionSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.DataProtectionSample/vb/dataprotectionsample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="encryptedData" /> é <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Falha na descriptografia.</exception>
        <exception cref="T:System.NotSupportedException">O sistema operacional não é compatível com esse método.</exception>
        <exception cref="T:System.OutOfMemoryException">Sem memória.</exception>
        <exception cref="T:System.PlatformNotSupportedException">Somente .NET Core: Chamadas para o <c>Unprotect</c> método têm suporte no Windows somente nos sistemas operacionais.</exception>
        <permission cref="T:System.Security.Permissions.DataProtectionPermission">com o associado <see cref="P:System.Security.Permissions.DataProtectionPermissionAttribute.UnprotectData" /> sinalizador de permissão para desproteger dados.</permission>
      </Docs>
    </Member>
  </Members>
</Type>