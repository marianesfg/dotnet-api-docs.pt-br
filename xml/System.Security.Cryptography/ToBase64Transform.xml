<Type Name="ToBase64Transform" FullName="System.Security.Cryptography.ToBase64Transform">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b09c2eccabf095e70980b37d9972ff4e92319ced" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ToBase64Transform : System.Security.Cryptography.ICryptoTransform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ToBase64Transform extends System.Object implements class System.IDisposable, class System.Security.Cryptography.ICryptoTransform" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.ToBase64Transform" />
  <TypeSignature Language="VB.NET" Value="Public Class ToBase64Transform&#xA;Implements ICryptoTransform" />
  <TypeSignature Language="C++ CLI" Value="public ref class ToBase64Transform : System::Security::Cryptography::ICryptoTransform" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Cryptography.ICryptoTransform</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="a7c2f-101">Converte um <see cref="T:System.Security.Cryptography.CryptoStream" /> em base 64.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a7c2f-101">Converts a <see cref="T:System.Security.Cryptography.CryptoStream" /> to base 64.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c2f-102">Codificação de transferência de conteúdo de base 64 representa sequências de bit arbitrário em um formulário que não seja humana legível.</span><span class="sxs-lookup"><span data-stu-id="a7c2f-102">Base 64 Content-Transfer-Encoding represents arbitrary bit sequences in a form that is not human readable.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7c2f-103">O exemplo de código a seguir demonstra como usar membros de <xref:System.Security.Cryptography.ToBase64Transform> classe.</span><span class="sxs-lookup"><span data-stu-id="a7c2f-103">The following code example demonstrates how to use members of the <xref:System.Security.Cryptography.ToBase64Transform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.ToBase64Transform#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CPP/members.cpp#1)]
 [!code-csharp[System.Security.Cryptography.ToBase64Transform#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CS/members.cs#1)]
 [!code-vb[System.Security.Cryptography.ToBase64Transform#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/VB/members.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToBase64Transform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ToBase64Transform.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToBase64Transform();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a7c2f-104">Inicializa uma nova instância da classe <see cref="T:System.Security.Cryptography.ToBase64Transform" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c2f-104">Initializes a new instance of the <see cref="T:System.Security.Cryptography.ToBase64Transform" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanReuseTransform">
      <MemberSignature Language="C#" Value="public virtual bool CanReuseTransform { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanReuseTransform" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ToBase64Transform.CanReuseTransform" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanReuseTransform As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanReuseTransform { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.CanReuseTransform</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a7c2f-105">Obtém um valor que indica se a transformação atual pode ser reutilizada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c2f-105">Gets a value indicating whether the current transform can be reused.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a7c2f-106">Sempre <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c2f-106">Always <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a7c2f-107">O exemplo de código a seguir demonstra como chamar o <xref:System.Security.Cryptography.ToBase64Transform.CanReuseTransform%2A> propriedade para determinar se a transformação atual pode ser reutilizada.</span><span class="sxs-lookup"><span data-stu-id="a7c2f-107">The following code example demonstrates how to call the <xref:System.Security.Cryptography.ToBase64Transform.CanReuseTransform%2A> property to determine if the current transform can be reused.</span></span> <span data-ttu-id="a7c2f-108">Este exemplo de código é parte de um exemplo maior fornecido para a <xref:System.Security.Cryptography.ToBase64Transform> classe.</span><span class="sxs-lookup"><span data-stu-id="a7c2f-108">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.ToBase64Transform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.ToBase64Transform#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CPP/members.cpp#3)]
 [!code-csharp[System.Security.Cryptography.ToBase64Transform#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CS/members.cs#3)]
 [!code-vb[System.Security.Cryptography.ToBase64Transform#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/VB/members.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanTransformMultipleBlocks">
      <MemberSignature Language="C#" Value="public bool CanTransformMultipleBlocks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTransformMultipleBlocks" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ToBase64Transform.CanTransformMultipleBlocks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanTransformMultipleBlocks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanTransformMultipleBlocks { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.CanTransformMultipleBlocks</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a7c2f-109">Obtém um valor que indica se vários blocos podem ser transformados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c2f-109">Gets a value that indicates whether multiple blocks can be transformed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a7c2f-110">Sempre <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c2f-110">Always <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c2f-111">Na implementação atual, apenas um bloco pode ser transformado ao mesmo tempo, portanto, essa propriedade é sempre `false`.</span><span class="sxs-lookup"><span data-stu-id="a7c2f-111">In the current implementation, only one block can be transformed at a time, so this property is always `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7c2f-112">O exemplo de código a seguir demonstra como chamar o <xref:System.Security.Cryptography.ToBase64Transform.CanTransformMultipleBlocks%2A> método para verificar que vários blocos podem ser transformados.</span><span class="sxs-lookup"><span data-stu-id="a7c2f-112">The following code example demonstrates how to call the <xref:System.Security.Cryptography.ToBase64Transform.CanTransformMultipleBlocks%2A> method to verify that multiple blocks can be transformed.</span></span> <span data-ttu-id="a7c2f-113">Este exemplo de código é parte de um exemplo maior fornecido para a <xref:System.Security.Cryptography.ToBase64Transform> classe.</span><span class="sxs-lookup"><span data-stu-id="a7c2f-113">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.ToBase64Transform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.ToBase64Transform#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CPP/members.cpp#4)]
 [!code-csharp[System.Security.Cryptography.ToBase64Transform#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CS/members.cs#4)]
 [!code-vb[System.Security.Cryptography.ToBase64Transform#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/VB/members.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ToBase64Transform.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a7c2f-114">Libera todos os recursos usados pelo <see cref="T:System.Security.Cryptography.ToBase64Transform" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c2f-114">Releases all resources used by the <see cref="T:System.Security.Cryptography.ToBase64Transform" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c2f-115">Esse método é uma chamada simple para <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a7c2f-115">This method is a simple call to <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="a7c2f-116">Chamando `Dispose` permite que os recursos usados pelo <xref:System.Security.Cryptography.ToBase64Transform> para ser realocada para outros fins.</span><span class="sxs-lookup"><span data-stu-id="a7c2f-116">Calling `Dispose` allows the resources used by the <xref:System.Security.Cryptography.ToBase64Transform> to be reallocated for other purposes.</span></span> <span data-ttu-id="a7c2f-117">Para obter mais informações sobre `Dispose`, consulte [limpeza de recursos não gerenciados](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="a7c2f-117">For more information about `Dispose`, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7c2f-118">O exemplo de código a seguir demonstra como chamar o <xref:System.Security.Cryptography.ToBase64Transform.Clear%2A> método para liberar recursos não usados pela transformação atual.</span><span class="sxs-lookup"><span data-stu-id="a7c2f-118">The following code example demonstrates how to call the <xref:System.Security.Cryptography.ToBase64Transform.Clear%2A> method to free up unused resources by the current transform.</span></span> <span data-ttu-id="a7c2f-119">Este exemplo de código é parte de um exemplo maior fornecido para a <xref:System.Security.Cryptography.ToBase64Transform> classe.</span><span class="sxs-lookup"><span data-stu-id="a7c2f-119">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.ToBase64Transform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.ToBase64Transform#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CPP/members.cpp#7)]
 [!code-csharp[System.Security.Cryptography.ToBase64Transform#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CS/members.cs#7)]
 [!code-vb[System.Security.Cryptography.ToBase64Transform#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/VB/members.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a7c2f-120">Libera todos os recursos usados pela instância atual da classe <see cref="T:System.Security.Cryptography.ToBase64Transform" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c2f-120">Releases all resources used by the current instance of the <see cref="T:System.Security.Cryptography.ToBase64Transform" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ToBase64Transform.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a7c2f-121">Libera todos os recursos usados pela instância atual da classe <see cref="T:System.Security.Cryptography.ToBase64Transform" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c2f-121">Releases all resources used by the current instance of the <see cref="T:System.Security.Cryptography.ToBase64Transform" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c2f-122">Chamar `Dispose` quando tiver terminado de usar o <xref:System.Security.Cryptography.ToBase64Transform>.</span><span class="sxs-lookup"><span data-stu-id="a7c2f-122">Call `Dispose` when you are finished using the <xref:System.Security.Cryptography.ToBase64Transform>.</span></span> <span data-ttu-id="a7c2f-123">O `Dispose` método deixa o <xref:System.Security.Cryptography.ToBase64Transform> em um estado inutilizável.</span><span class="sxs-lookup"><span data-stu-id="a7c2f-123">The `Dispose` method leaves the <xref:System.Security.Cryptography.ToBase64Transform> in an unusable state.</span></span> <span data-ttu-id="a7c2f-124">Depois de chamar `Dispose`, você deve liberar todas as referências para o <xref:System.Security.Cryptography.ToBase64Transform> para o coletor de lixo possa recuperar a memória que o <xref:System.Security.Cryptography.ToBase64Transform> estava ocupando.</span><span class="sxs-lookup"><span data-stu-id="a7c2f-124">After calling `Dispose`, you must release all references to the <xref:System.Security.Cryptography.ToBase64Transform> so the garbage collector can reclaim the memory that the <xref:System.Security.Cryptography.ToBase64Transform> was occupying.</span></span>  
  
 <span data-ttu-id="a7c2f-125">Para obter mais informações, consulte [limpeza de recursos não gerenciados](~/docs/standard/garbage-collection/unmanaged.md) e [implementar um método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="a7c2f-125">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a7c2f-126">Sempre chamar `Dispose` antes de liberar sua última referência para o <xref:System.Security.Cryptography.ToBase64Transform>.</span><span class="sxs-lookup"><span data-stu-id="a7c2f-126">Always call `Dispose` before you release your last reference to the <xref:System.Security.Cryptography.ToBase64Transform>.</span></span> <span data-ttu-id="a7c2f-127">Caso contrário, os recursos que está usando não serão liberados até que o coletor de lixo chame o <xref:System.Security.Cryptography.ToBase64Transform> do objeto `Finalize` método.</span><span class="sxs-lookup"><span data-stu-id="a7c2f-127">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Cryptography.ToBase64Transform> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ToBase64Transform.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="a7c2f-128">
            <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c2f-128">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a7c2f-129">Libera os recursos não gerenciados usados pelo <see cref="T:System.Security.Cryptography.ToBase64Transform" /> e opcionalmente libera os recursos gerenciados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c2f-129">Releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.ToBase64Transform" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c2f-130">Este método é chamado pelo método público `Dispose()` e pelo método `Finalize`.</span><span class="sxs-lookup"><span data-stu-id="a7c2f-130">This method is called by the public `Dispose()` method and the `Finalize` method.</span></span> <span data-ttu-id="a7c2f-131">`Dispose()` invoca o protegido `Dispose(Boolean)` método com o parâmetro descartando definido como `true`.</span><span class="sxs-lookup"><span data-stu-id="a7c2f-131">`Dispose()` invokes the protected `Dispose(Boolean)` method with the disposing parameter set to `true`.</span></span> <span data-ttu-id="a7c2f-132">`Finalize` invoca `Dispose` com disposing definido como `false`.</span><span class="sxs-lookup"><span data-stu-id="a7c2f-132">`Finalize` invokes `Dispose` with disposing set to `false`.</span></span>  
  
 <span data-ttu-id="a7c2f-133">Quando o `disposing` parâmetro é `true`, esse método libera todos os recursos mantidos por qualquer objeto gerenciado que este <xref:System.Security.Cryptography.ToBase64Transform> referências.</span><span class="sxs-lookup"><span data-stu-id="a7c2f-133">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.ToBase64Transform> references.</span></span> <span data-ttu-id="a7c2f-134">Este método invoca o método `Dispose()` de cada objeto referenciado.</span><span class="sxs-lookup"><span data-stu-id="a7c2f-134">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="a7c2f-135">
              <see langword="Dispose" /> pode ser chamado várias vezes por outros objetos.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a7c2f-135">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="a7c2f-136">Ao substituir <see langword="Dispose(Boolean)" />, tenha cuidado em não para referenciar objetos que foi descartados anteriormente em uma chamada anterior para <see langword="Dispose" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a7c2f-136">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="a7c2f-137">Para obter mais informações sobre como implementar <see langword="Dispose(Boolean)" />, consulte [implementar um método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="a7c2f-137">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="a7c2f-138">Para obter mais informações sobre <see langword="Dispose" /> e <see langword="Finalize" />, consulte [limpeza de recursos não gerenciados](~/docs/standard/garbage-collection/unmanaged.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="a7c2f-138">For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ToBase64Transform ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ToBase64Transform.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ToBase64Transform ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a7c2f-139">Libera os recursos não gerenciados usados pelo <see cref="T:System.Security.Cryptography.ToBase64Transform" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c2f-139">Releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.ToBase64Transform" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputBlockSize">
      <MemberSignature Language="C#" Value="public int InputBlockSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InputBlockSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ToBase64Transform.InputBlockSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputBlockSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int InputBlockSize { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.InputBlockSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a7c2f-140">Obtém o tamanho do bloco de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c2f-140">Gets the input block size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a7c2f-141">Bloqueia o tamanho dos dados de entrada em bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c2f-141">The size of the input data blocks in bytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c2f-142">O tamanho do bloco de entrada para essa transformação é 3 bytes.</span><span class="sxs-lookup"><span data-stu-id="a7c2f-142">The input block size for this transformation is 3 bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7c2f-143">O exemplo de código a seguir demonstra como chamar o <xref:System.Security.Cryptography.ToBase64Transform.InputBlockSize%2A> propriedade para recuperar o tamanho do bloco de entrada da transformação atual.</span><span class="sxs-lookup"><span data-stu-id="a7c2f-143">The following code example demonstrates how to call the <xref:System.Security.Cryptography.ToBase64Transform.InputBlockSize%2A> property to retrieve the input block size of the current transform.</span></span> <span data-ttu-id="a7c2f-144">Este exemplo de código é parte de um exemplo maior fornecido para a <xref:System.Security.Cryptography.ToBase64Transform> classe.</span><span class="sxs-lookup"><span data-stu-id="a7c2f-144">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.ToBase64Transform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.ToBase64Transform#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CPP/members.cpp#5)]
 [!code-csharp[System.Security.Cryptography.ToBase64Transform#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CS/members.cs#5)]
 [!code-vb[System.Security.Cryptography.ToBase64Transform#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/VB/members.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputBlockSize">
      <MemberSignature Language="C#" Value="public int OutputBlockSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 OutputBlockSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ToBase64Transform.OutputBlockSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputBlockSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int OutputBlockSize { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.OutputBlockSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a7c2f-145">Obtém o tamanho do bloco de saída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c2f-145">Gets the output block size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a7c2f-146">Bloqueia o tamanho dos dados de saída em bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c2f-146">The size of the output data blocks in bytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c2f-147">O tamanho do bloco de saída para essa transformação é de 4 bytes.</span><span class="sxs-lookup"><span data-stu-id="a7c2f-147">The output block size for this transformation is 4 bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7c2f-148">O exemplo de código a seguir demonstra como chamar o <xref:System.Security.Cryptography.ToBase64Transform.OutputBlockSize%2A> propriedade para criar uma nova matriz de bytes com o tamanho do bloco de saída.</span><span class="sxs-lookup"><span data-stu-id="a7c2f-148">The following code example demonstrates how to call the <xref:System.Security.Cryptography.ToBase64Transform.OutputBlockSize%2A> property to create a new byte array with the size of the output block size.</span></span> <span data-ttu-id="a7c2f-149">Este exemplo de código é parte de um exemplo maior fornecido para a <xref:System.Security.Cryptography.ToBase64Transform> classe.</span><span class="sxs-lookup"><span data-stu-id="a7c2f-149">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.ToBase64Transform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.ToBase64Transform#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CPP/members.cpp#6)]
 [!code-csharp[System.Security.Cryptography.ToBase64Transform#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CS/members.cs#6)]
 [!code-vb[System.Security.Cryptography.ToBase64Transform#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/VB/members.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformBlock">
      <MemberSignature Language="C#" Value="public int TransformBlock (byte[] inputBuffer, int inputOffset, int inputCount, byte[] outputBuffer, int outputOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 TransformBlock(unsigned int8[] inputBuffer, int32 inputOffset, int32 inputCount, unsigned int8[] outputBuffer, int32 outputOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ToBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function TransformBlock (inputBuffer As Byte(), inputOffset As Integer, inputCount As Integer, outputBuffer As Byte(), outputOffset As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int TransformBlock(cli::array &lt;System::Byte&gt; ^ inputBuffer, int inputOffset, int inputCount, cli::array &lt;System::Byte&gt; ^ outputBuffer, int outputOffset);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Cryptography.ICryptoTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputBuffer" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputCount" Type="System.Int32" />
        <Parameter Name="outputBuffer" Type="System.Byte[]" />
        <Parameter Name="outputOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inputBuffer">
          <span data-ttu-id="a7c2f-150">A entrada a ser computada em base 64.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c2f-150">The input to compute to base 64.</span>
          </span>
        </param>
        <param name="inputOffset">
          <span data-ttu-id="a7c2f-151">O deslocamento na matriz de bytes de entrada do qual começar a usar os dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c2f-151">The offset into the input byte array from which to begin using data.</span>
          </span>
        </param>
        <param name="inputCount">
          <span data-ttu-id="a7c2f-152">O número de bytes na matriz de bytes de entrada a ser usado como dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c2f-152">The number of bytes in the input byte array to use as data.</span>
          </span>
        </param>
        <param name="outputBuffer">
          <span data-ttu-id="a7c2f-153">A saída na qual gravar o resultado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c2f-153">The output to which to write the result.</span>
          </span>
        </param>
        <param name="outputOffset">
          <span data-ttu-id="a7c2f-154">O deslocamento na matriz de bytes de saída do qual começar a gravar os dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c2f-154">The offset into the output byte array from which to begin writing data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a7c2f-155">Converte a região especificada da matriz de bytes de entrada em base 64 e copia o resultado para a região especificada da matriz de bytes de saída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c2f-155">Converts the specified region of the input byte array to base 64 and copies the result to the specified region of the output byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a7c2f-156">O número de bytes gravados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c2f-156">The number of bytes written.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c2f-157">O <xref:System.Security.Cryptography.ToBase64Transform> classe é um algoritmo de bloco que processa os blocos de 3 bytes de entrada e cria blocos de saída de 4 bytes.</span><span class="sxs-lookup"><span data-stu-id="a7c2f-157">The <xref:System.Security.Cryptography.ToBase64Transform> class is a block algorithm that processes input blocks of 3 bytes and creates output blocks of 4 bytes.</span></span>  <span data-ttu-id="a7c2f-158">O <xref:System.Security.Cryptography.ToBase64Transform.TransformBlock%2A> método transforma um bloco de entrada de 24 bits em 32 bits de dados de caractere.</span><span class="sxs-lookup"><span data-stu-id="a7c2f-158">The <xref:System.Security.Cryptography.ToBase64Transform.TransformBlock%2A> method transforms an input block of 24 bits into 32 bits of character data.</span></span>  <span data-ttu-id="a7c2f-159">Você deve manter os limites de entrada de 3 bytes para limites de saída de 4 bytes para corresponder a transformação de bloco.</span><span class="sxs-lookup"><span data-stu-id="a7c2f-159">You must maintain 3 byte input boundaries to 4 byte output boundaries in order to match the block transform.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7c2f-160">O exemplo de código a seguir demonstra como chamar o <xref:System.Security.Cryptography.ToBase64Transform.TransformBlock%2A> método para iterar `inputBytes` transformação `blockSize`.</span><span class="sxs-lookup"><span data-stu-id="a7c2f-160">The following code example demonstrates how to call the <xref:System.Security.Cryptography.ToBase64Transform.TransformBlock%2A> method to iterate through `inputBytes` transforming by `blockSize`.</span></span> <span data-ttu-id="a7c2f-161">Este exemplo de código é parte de um exemplo maior fornecido para a <xref:System.Security.Cryptography.ToBase64Transform> classe.</span><span class="sxs-lookup"><span data-stu-id="a7c2f-161">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.ToBase64Transform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.ToBase64Transform#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CPP/members.cpp#8)]
 [!code-csharp[System.Security.Cryptography.ToBase64Transform#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CS/members.cs#8)]
 [!code-vb[System.Security.Cryptography.ToBase64Transform#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/VB/members.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="a7c2f-162">O objeto <see cref="T:System.Security.Cryptography.ToBase64Transform" /> atual já foi descartado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c2f-162">The current <see cref="T:System.Security.Cryptography.ToBase64Transform" /> object has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="a7c2f-163">O tamanho dos dados não é válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c2f-163">The data size is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a7c2f-164">O parâmetro <paramref name="inputBuffer" /> contém um tamanho de deslocamento inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c2f-164">The <paramref name="inputBuffer" /> parameter contains an invalid offset length.</span>
          </span>
          <span data-ttu-id="a7c2f-165">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c2f-165">-or-</span>
          </span>
          <span data-ttu-id="a7c2f-166">O parâmetro <paramref name="inputCount" /> contém um valor inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c2f-166">The <paramref name="inputCount" /> parameter contains an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a7c2f-167">O parâmetro <paramref name="inputBuffer" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c2f-167">The <paramref name="inputBuffer" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a7c2f-168">O parâmetro <paramref name="inputBuffer" /> exige um número não negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c2f-168">The <paramref name="inputBuffer" /> parameter requires a non-negative number.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TransformFinalBlock">
      <MemberSignature Language="C#" Value="public byte[] TransformFinalBlock (byte[] inputBuffer, int inputOffset, int inputCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] TransformFinalBlock(unsigned int8[] inputBuffer, int32 inputOffset, int32 inputCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ToBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function TransformFinalBlock (inputBuffer As Byte(), inputOffset As Integer, inputCount As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ TransformFinalBlock(cli::array &lt;System::Byte&gt; ^ inputBuffer, int inputOffset, int inputCount);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Cryptography.ICryptoTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputBuffer" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inputBuffer">
          <span data-ttu-id="a7c2f-169">A entrada a ser convertida em base 64.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c2f-169">The input to convert to base 64.</span>
          </span>
        </param>
        <param name="inputOffset">
          <span data-ttu-id="a7c2f-170">O deslocamento para a matriz de bytes com base na qual os dados começarão a ser usados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c2f-170">The offset into the byte array from which to begin using data.</span>
          </span>
        </param>
        <param name="inputCount">
          <span data-ttu-id="a7c2f-171">O número de bytes na matriz de bytes a ser usado como dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c2f-171">The number of bytes in the byte array to use as data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a7c2f-172">Converte a região especificada da matriz de bytes especificada em base 64.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c2f-172">Converts the specified region of the specified byte array to base 64.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a7c2f-173">A conversão de base 64 computada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c2f-173">The computed base 64 conversion.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a7c2f-174">O exemplo de código a seguir demonstra como chamar o <xref:System.Security.Cryptography.ToBase64Transform.TransformFinalBlock%2A> método para transformar o bloco final dos dados.</span><span class="sxs-lookup"><span data-stu-id="a7c2f-174">The following code example demonstrates how to call the <xref:System.Security.Cryptography.ToBase64Transform.TransformFinalBlock%2A> method to transform the final block of data.</span></span> <span data-ttu-id="a7c2f-175">Este exemplo de código é parte de um exemplo maior fornecido para a <xref:System.Security.Cryptography.ToBase64Transform> classe.</span><span class="sxs-lookup"><span data-stu-id="a7c2f-175">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.ToBase64Transform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.ToBase64Transform#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CPP/members.cpp#9)]
 [!code-csharp[System.Security.Cryptography.ToBase64Transform#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CS/members.cs#9)]
 [!code-vb[System.Security.Cryptography.ToBase64Transform#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/VB/members.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="a7c2f-176">O objeto <see cref="T:System.Security.Cryptography.ToBase64Transform" /> atual já foi descartado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c2f-176">The current <see cref="T:System.Security.Cryptography.ToBase64Transform" /> object has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a7c2f-177">O parâmetro <paramref name="inputBuffer" /> contém um tamanho de deslocamento inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c2f-177">The <paramref name="inputBuffer" /> parameter contains an invalid offset length.</span>
          </span>
          <span data-ttu-id="a7c2f-178">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c2f-178">-or-</span>
          </span>
          <span data-ttu-id="a7c2f-179">O parâmetro <paramref name="inputCount" /> contém um valor inválido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c2f-179">The <paramref name="inputCount" /> parameter contains an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a7c2f-180">O parâmetro <paramref name="inputBuffer" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c2f-180">The <paramref name="inputBuffer" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a7c2f-181">O parâmetro <paramref name="inputBuffer" /> exige um número não negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c2f-181">The <paramref name="inputBuffer" /> parameter requires a non-negative number.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>