<Type Name="HMACRIPEMD160" FullName="System.Security.Cryptography.HMACRIPEMD160">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="af4f8995a55f8bf92313c47b792af80d17b7aef7" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39878651" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HMACRIPEMD160 : System.Security.Cryptography.HMAC" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HMACRIPEMD160 extends System.Security.Cryptography.HMAC" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.HMACRIPEMD160" />
  <TypeSignature Language="VB.NET" Value="Public Class HMACRIPEMD160&#xA;Inherits HMAC" />
  <TypeSignature Language="C++ CLI" Value="public ref class HMACRIPEMD160 : System::Security::Cryptography::HMAC" />
  <TypeSignature Language="F#" Value="type HMACRIPEMD160 = class&#xA;    inherit HMAC" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.HMAC</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Calcula um HMAC (Hash-based Message Authentication Code) usando a função de hash <see cref="T:System.Security.Cryptography.RIPEMD160" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.HMACRIPEMD160> é um tipo de algoritmo de hash com chave que é construído a partir da função de hash RIPEMD-160 e usado como um Hash-based código HMAC (Message Authentication). O processo HMAC combina uma chave secreta com os dados da mensagem, hashes o resultado com a função de hash, combine esse valor de hash com a chave secreta novamente e, em seguida, aplica-se a função de hash uma segunda vez. O hash de saída é de 160 bits de comprimento.  
  
 Um HMAC pode ser usado para determinar se uma mensagem enviada por um canal inseguro foi violada, desde que o remetente e receptor compartilham uma chave secreta. O remetente calcula o valor de hash para os dados originais e envia os dados originais e o valor de hash como uma única mensagem. O receptor recalcula o valor de hash na mensagem recebida e verifica se o HMAC computado corresponde ao HMAC transmitido.  
  
 Qualquer alteração de dados ou o valor de hash resulta em uma incompatibilidade, porque é necessário conhecimento da chave secreta para alterar a mensagem e reproduzir o valor de hash correto. Portanto, se os valores originais e computadas hash corresponderem, a mensagem é autenticada.  
  
 <xref:System.Security.Cryptography.HMACRIPEMD160> aceita as chaves de qualquer tamanho e produz uma sequência de hash é de 160 bits de comprimento.  
  
 O algoritmo de hash RIPEMD e seus sucessores foram desenvolvidos pelo projeto europeus MADURO. O algoritmo RIPEMD original foi projetado para substituir MD4 e MD5 e foi reforçado mais tarde e renomeado RIPEMD-160. O algoritmo de hash RIPEMD-160 produz um valor de hash de 160 bits. Designers do algoritmo tem colocado de domínio público.  
  
   
  
## Examples  
 O exemplo a seguir mostra como assinar um arquivo usando o <xref:System.Security.Cryptography.HMACRIPEMD160> objeto e, em seguida, como verificar o arquivo.  
  
 [!code-cpp[HMACRIPEMD160#1](~/samples/snippets/cpp/VS_Snippets_CLR/HMACRIPEMD160/CPP/hmacripemd160.cpp#1)]
 [!code-csharp[HMACRIPEMD160#1](~/samples/snippets/csharp/VS_Snippets_CLR/HMACRIPEMD160/CS/hmacripemd160.cs#1)]
 [!code-vb[HMACRIPEMD160#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/HMACRIPEMD160/vb/hmacripemd160.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Cryptography.HMACRIPEMD160" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HMACRIPEMD160 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMACRIPEMD160.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HMACRIPEMD160();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Cryptography.HMACRIPEMD160" /> com uma chave de 64 bytes gerada aleatoriamente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.HMACRIPEMD160> é um tipo de algoritmo de hash com chave que é construído a partir da função de hash RIPEMD-160 e usado como um Hash-based código HMAC (Message Authentication). O processo HMAC combina uma chave secreta com os dados da mensagem, hashes o resultado com a função de hash, combine esse valor de hash com a chave secreta novamente e, em seguida, aplica-se a função de hash uma segunda vez. O hash de saída é 160 bytes de comprimento.  
  
 Este construtor usa uma chave gerada aleatoriamente de 64 bytes.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HMACRIPEMD160 (byte[] key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMACRIPEMD160.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HMACRIPEMD160(cli::array &lt;System::Byte&gt; ^ key);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.HMACRIPEMD160 : byte[] -&gt; System.Security.Cryptography.HMACRIPEMD160" Usage="new System.Security.Cryptography.HMACRIPEMD160 key" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="key">A chave secreta para a criptografia <see cref="T:System.Security.Cryptography.HMACRIPEMD160" />. A chave poderá ter qualquer comprimento, mas se tiver mais de 64 bytes ela terá hash (usando SHA-1) para derivar uma chave de 64 bytes. Portanto, o tamanho recomendado da chave secreta é de 64 bytes.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Cryptography.HMACRIPEMD160" /> com os dados de chave especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.HMACRIPEMD160> é um tipo de algoritmo de hash com chave que é construído a partir da função de hash RIPEMD-160 e usado como um Hash-based código HMAC (Message Authentication). O processo HMAC combina uma chave secreta com os dados da mensagem, hashes o resultado com a função de hash, combine esse valor de hash com a chave secreta novamente e, em seguida, aplica-se a função de hash uma segunda vez. O hash de saída é 160 bytes de comprimento.  
  
   
  
## Examples  
 Para obter um exemplo de como usar esse construtor, consulte o <xref:System.Security.Cryptography.HMACRIPEMD160> classe.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="key" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>