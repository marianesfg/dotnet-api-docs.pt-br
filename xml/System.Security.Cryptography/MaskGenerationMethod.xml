<Type Name="MaskGenerationMethod" FullName="System.Security.Cryptography.MaskGenerationMethod">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fa9d1456d4bcc5f87726367673e0e7d5859fce55" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30494840" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MaskGenerationMethod" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MaskGenerationMethod extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.MaskGenerationMethod" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MaskGenerationMethod" />
  <TypeSignature Language="C++ CLI" Value="public ref class MaskGenerationMethod abstract" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa a classe abstrata da qual todos os algoritmos do gerador de máscara devem derivar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Classes derivadas de <xref:System.Security.Cryptography.MaskGenerationMethod> computar máscaras que são usadas em algoritmos de troca de chaves, como criptografia assimétrica ideal preenchimento (OAEP).  
  
 Essa classe é usada por implementações de algoritmos de troca de chaves apenas para geração de máscara. Código do aplicativo não usar essa classe diretamente.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como derivar o <xref:System.Security.Cryptography.MaskGenerationMethod> classe.  
  
 [!code-cpp[System.Security.Cryptography.MaskGenerationMethod#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.MaskGenerationMethod/CPP/maskgenerator.cpp#1)]
 [!code-csharp[System.Security.Cryptography.MaskGenerationMethod#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.MaskGenerationMethod/CS/maskgenerator.cs#1)]
 [!code-vb[System.Security.Cryptography.MaskGenerationMethod#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.MaskGenerationMethod/VB/maskgenerator.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MaskGenerationMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.MaskGenerationMethod.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MaskGenerationMethod();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Cryptography.MaskGenerationMethod" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateMask">
      <MemberSignature Language="C#" Value="public abstract byte[] GenerateMask (byte[] rgbSeed, int cbReturn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GenerateMask(unsigned int8[] rgbSeed, int32 cbReturn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.MaskGenerationMethod.GenerateMask(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GenerateMask (rgbSeed As Byte(), cbReturn As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::Byte&gt; ^ GenerateMask(cli::array &lt;System::Byte&gt; ^ rgbSeed, int cbReturn);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbSeed" Type="System.Byte[]" />
        <Parameter Name="cbReturn" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rgbSeed">A semente aleatória a ser usada para computar a máscara.</param>
        <param name="cbReturn">O comprimento da máscara gerada em bytes.</param>
        <summary>Quando substituído em uma classe derivada, gera uma máscara com o comprimento especificado usando a semente aleatória especificada.</summary>
        <returns>Uma máscara gerada aleatoriamente cujo comprimento é igual ao parâmetro <paramref name="cbReturn" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir demonstra como substituir o <xref:System.Security.Cryptography.MaskGenerationMethod.GenerateMask%2A> para criar e retornar uma máscara usando a propagação especificada. Este exemplo de código é parte de um exemplo maior fornecido para a <xref:System.Security.Cryptography.MaskGenerationMethod> classe.  
  
 System.Security.Cryptography.MaskGenerationMethod#3  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>