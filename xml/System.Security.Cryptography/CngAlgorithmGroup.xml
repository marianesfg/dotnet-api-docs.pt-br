<Type Name="CngAlgorithmGroup" FullName="System.Security.Cryptography.CngAlgorithmGroup">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f415f7b149afdfe29cae646a8bd3844a28f72a99" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36426835" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class CngAlgorithmGroup : IEquatable&lt;System.Security.Cryptography.CngAlgorithmGroup&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit CngAlgorithmGroup extends System.Object implements class System.IEquatable`1&lt;class System.Security.Cryptography.CngAlgorithmGroup&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.CngAlgorithmGroup" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CngAlgorithmGroup&#xA;Implements IEquatable(Of CngAlgorithmGroup)" />
  <TypeSignature Language="C++ CLI" Value="public ref class CngAlgorithmGroup sealed : IEquatable&lt;System::Security::Cryptography::CngAlgorithmGroup ^&gt;" />
  <TypeSignature Language="F#" Value="type CngAlgorithmGroup = class&#xA;    interface IEquatable&lt;CngAlgorithmGroup&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Security.Cryptography.CngAlgorithmGroup&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="ade26-101">Encapsula o nome de um grupo de algoritmos de criptografia.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ade26-101">Encapsulates the name of an encryption algorithm group.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ade26-102">O <xref:System.Security.Cryptography.CngAlgorithmGroup> classe é uma classe de utilitário.</span><span class="sxs-lookup"><span data-stu-id="ade26-102">The <xref:System.Security.Cryptography.CngAlgorithmGroup> class is a utility class.</span></span> <span data-ttu-id="ade26-103">Ele consiste em propriedades estáticas, métodos de comparação e um privado, mantida internamente a cadeia de caracteres que define um nome de grupo de algoritmo.</span><span class="sxs-lookup"><span data-stu-id="ade26-103">It consists of static properties, comparison methods, and a private, internally maintained string that defines an algorithm group name.</span></span>  
  
 <span data-ttu-id="ade26-104">O retorno de propriedades estáticas <xref:System.Security.Cryptography.CngAlgorithmGroup> objetos.</span><span class="sxs-lookup"><span data-stu-id="ade26-104">The static properties return <xref:System.Security.Cryptography.CngAlgorithmGroup> objects.</span></span> <span data-ttu-id="ade26-105">Cadeia de caracteres de cada objeto interno é inicializada com o nome do grupo de algoritmo que corresponde ao nome da propriedade estática.</span><span class="sxs-lookup"><span data-stu-id="ade26-105">Each object's internal string is initialized to the algorithm group name that corresponds to the name of the static property.</span></span>  
  
 <span data-ttu-id="ade26-106">Você também pode usar essa classe para criar objetos de grupos de algoritmo que não são cobertos pelas propriedades estáticas.</span><span class="sxs-lookup"><span data-stu-id="ade26-106">You can also use this class to create objects for algorithm groups that are not covered by the static properties.</span></span>  
  
 <span data-ttu-id="ade26-107">Várias classes Cryptography Next Generation (CNG) (como <xref:System.Security.Cryptography.CngKey>) retornam <xref:System.Security.Cryptography.CngAlgorithmGroup> objetos.</span><span class="sxs-lookup"><span data-stu-id="ade26-107">Several Cryptography Next Generation (CNG) classes (such as <xref:System.Security.Cryptography.CngKey>) return <xref:System.Security.Cryptography.CngAlgorithmGroup> objects.</span></span> <span data-ttu-id="ade26-108">Classes que recebem <xref:System.Security.Cryptography.CngAlgorithm> objetos podem recuperar o nome do grupo de algoritmo incorporado chamando o objeto <xref:System.Security.Cryptography.CngKey.AlgorithmGroup%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="ade26-108">Classes that receive <xref:System.Security.Cryptography.CngAlgorithm> objects can retrieve the embedded algorithm group name by calling the object's <xref:System.Security.Cryptography.CngKey.AlgorithmGroup%2A> property.</span></span>  
  
 <span data-ttu-id="ade26-109">Portanto, <xref:System.Security.Cryptography.CngAlgorithmGroup> serve como uma enumeração dos grupos de algoritmo bem conhecidos.</span><span class="sxs-lookup"><span data-stu-id="ade26-109">Therefore, <xref:System.Security.Cryptography.CngAlgorithmGroup> serves as an enumeration of well-known algorithm groups.</span></span> <span data-ttu-id="ade26-110">Ele permite que você especifique um nome de grupo de algoritmo usando um valor fortemente tipado em vez de uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="ade26-110">It lets you specify an algorithm group name by using a strongly typed value instead of a string.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CngAlgorithmGroup (string algorithmGroup);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string algorithmGroup) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngAlgorithmGroup.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (algorithmGroup As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CngAlgorithmGroup(System::String ^ algorithmGroup);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.CngAlgorithmGroup : string -&gt; System.Security.Cryptography.CngAlgorithmGroup" Usage="new System.Security.Cryptography.CngAlgorithmGroup algorithmGroup" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="algorithmGroup" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithmGroup">
          <span data-ttu-id="ade26-111">O nome do grupo de algoritmos a ser inicializado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ade26-111">The name of the algorithm group to initialize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ade26-112">Inicializa uma nova instância da classe <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ade26-112">Initializes a new instance of the <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ade26-113">Instâncias do <xref:System.Security.Cryptography.CngAlgorithmGroup> classe internamente manter o nome do grupo de algoritmo que é especificado pelo `algorithmGroup` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="ade26-113">Instances of the <xref:System.Security.Cryptography.CngAlgorithmGroup> class internally maintain the algorithm group name that is specified by the `algorithmGroup` parameter.</span></span>  
  
 <span data-ttu-id="ade26-114">O principal objetivo desse construtor é fornecer um método para criar <xref:System.Security.Cryptography.CngAlgorithmGroup> objetos para grupos de algoritmo que não são representados por propriedades estáticas do <xref:System.Security.Cryptography.CngAlgorithmGroup> classe.</span><span class="sxs-lookup"><span data-stu-id="ade26-114">The primary purpose of this constructor is to provide a method for creating <xref:System.Security.Cryptography.CngAlgorithmGroup> objects for algorithm groups that are not represented by the static properties of the <xref:System.Security.Cryptography.CngAlgorithmGroup> class.</span></span> <span data-ttu-id="ade26-115">Essa capacidade permite futuro [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] versões, service packs e desenvolvedores de terceiros para adicionar novos grupos de algoritmo, o que podem ser acessados como os grupos de algoritmo que estão disponíveis no momento.</span><span class="sxs-lookup"><span data-stu-id="ade26-115">This capacity enables future [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] releases, service packs, and third-party developers to add new algorithm groups, which can be accessed just like the algorithm groups that are currently available.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ade26-116">O parâmetro <paramref name="algorithmGroup" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ade26-116">The <paramref name="algorithmGroup" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ade26-117">O comprimento do parâmetro <paramref name="algorithmGroup" /> é 0 (zero).</span>
          <span class="sxs-lookup">
            <span data-stu-id="ade26-117">The <paramref name="algorithmGroup" /> parameter length is 0 (zero).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AlgorithmGroup">
      <MemberSignature Language="C#" Value="public string AlgorithmGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AlgorithmGroup" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithmGroup.AlgorithmGroup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AlgorithmGroup As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AlgorithmGroup { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlgorithmGroup : string" Usage="System.Security.Cryptography.CngAlgorithmGroup.AlgorithmGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ade26-118">Obtém o nome do grupo de algoritmos que o objeto <see cref="T:System.Security.Cryptography.CngAlgorithm" /> atual especifica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ade26-118">Gets the name of the algorithm group that the current <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object specifies.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ade26-119">O nome do grupo de algoritmos inserido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ade26-119">The embedded algorithm group name.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffieHellman">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngAlgorithmGroup DiffieHellman { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.CngAlgorithmGroup DiffieHellman" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithmGroup.DiffieHellman" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DiffieHellman As CngAlgorithmGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::CngAlgorithmGroup ^ DiffieHellman { System::Security::Cryptography::CngAlgorithmGroup ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DiffieHellman : System.Security.Cryptography.CngAlgorithmGroup" Usage="System.Security.Cryptography.CngAlgorithmGroup.DiffieHellman" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithmGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ade26-120">Obtém um objeto <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> que especifica a família de algoritmos Diffie-Hellman.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ade26-120">Gets a <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> object that specifies the Diffie-Hellman family of algorithms.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ade26-121">Um objeto que especifica a família de Diffie-Hellman de algoritmos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ade26-121">An object that specifies the Diffie-Hellman family of algorithms.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dsa">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngAlgorithmGroup Dsa { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.CngAlgorithmGroup Dsa" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithmGroup.Dsa" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Dsa As CngAlgorithmGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::CngAlgorithmGroup ^ Dsa { System::Security::Cryptography::CngAlgorithmGroup ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Dsa : System.Security.Cryptography.CngAlgorithmGroup" Usage="System.Security.Cryptography.CngAlgorithmGroup.Dsa" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithmGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ade26-122">Obtém um objeto <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> que especifica a família de algoritmos DSA (Algoritmo de Assinatura Digital).</span>
          <span class="sxs-lookup">
            <span data-stu-id="ade26-122">Gets a <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> object that specifies the Digital Signature Algorithm (DSA) family of algorithms.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ade26-123">Um objeto que especifica a família de algoritmos de DSA.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ade26-123">An object that specifies the DSA family of algorithms.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ECDiffieHellman">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngAlgorithmGroup ECDiffieHellman { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.CngAlgorithmGroup ECDiffieHellman" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ECDiffieHellman As CngAlgorithmGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::CngAlgorithmGroup ^ ECDiffieHellman { System::Security::Cryptography::CngAlgorithmGroup ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ECDiffieHellman : System.Security.Cryptography.CngAlgorithmGroup" Usage="System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithmGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ade26-124">Obtém um objeto <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> que especifica a família de algoritmos ECDH (Diffie-Hellman de Curva Elíptica).</span>
          <span class="sxs-lookup">
            <span data-stu-id="ade26-124">Gets a <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> object that specifies the Elliptic Curve Diffie-Hellman (ECDH) family of algorithms.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ade26-125">Um objeto que especifica a família ECDH dos algoritmos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ade26-125">An object that specifies the ECDH family of algorithms.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ECDsa">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngAlgorithmGroup ECDsa { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.CngAlgorithmGroup ECDsa" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithmGroup.ECDsa" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ECDsa As CngAlgorithmGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::CngAlgorithmGroup ^ ECDsa { System::Security::Cryptography::CngAlgorithmGroup ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ECDsa : System.Security.Cryptography.CngAlgorithmGroup" Usage="System.Security.Cryptography.CngAlgorithmGroup.ECDsa" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithmGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ade26-126">Obtém um objeto <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> que especifica a família de algoritmos ECDSA (Algoritmo de Assinatura Digital Curva Elíptica).</span>
          <span class="sxs-lookup">
            <span data-stu-id="ade26-126">Gets a <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> object that specifies the Elliptic Curve Digital Signature Algorithm (ECDSA) family of algorithms.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ade26-127">Um objeto que especifica a família de algoritmos de ECDSA.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ade26-127">An object that specifies the ECDSA family of algorithms.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ade26-128">Compara dois objetos <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ade26-128">Compares two <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> objects.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="cngAlgorithmGroup.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="ade26-129">Um objeto a ser comparado ao objeto <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ade26-129">An object to be compared to the current <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ade26-130">Compara o objeto especificado ao objeto <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ade26-130">Compares the specified object to the current <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ade26-131">
            <see langword="true" /> se o parâmetro <paramref name="obj" /> for um <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> que especifica o mesmo grupo de algoritmos que o objeto atual, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ade26-131">
              <see langword="true" /> if the <paramref name="obj" /> parameter is a <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> that specifies the same algorithm group as the current object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Security.Cryptography.CngAlgorithmGroup other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Security.Cryptography.CngAlgorithmGroup other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Security.Cryptography.CngAlgorithmGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As CngAlgorithmGroup) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Security::Cryptography::CngAlgorithmGroup ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Security.Cryptography.CngAlgorithmGroup -&gt; bool" Usage="cngAlgorithmGroup.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Security.Cryptography.CngAlgorithmGroup" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="ade26-132">Um objeto a ser comparado ao objeto <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ade26-132">An object to be compared to the current <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ade26-133">Compara o objeto <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> especificado ao objeto <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ade26-133">Compares the specified <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> object to the current <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ade26-134">
            <see langword="true" /> se o parâmetro <paramref name="other" /> especifica o mesmo grupo de algoritmos que o objeto atual, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ade26-134">
              <see langword="true" /> if the <paramref name="other" /> parameter specifies the same algorithm group as the current object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngAlgorithmGroup.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="cngAlgorithmGroup.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ade26-135">Gera um valor de hash para o nome do grupo de algoritmos que está inserido no objeto <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ade26-135">Generates a hash value for the algorithm group name that is embedded in the current <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ade26-136">O valor de hash do nome do grupo de algoritmos inserido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ade26-136">The hash value of the embedded algorithm group name.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Security.Cryptography.CngAlgorithmGroup left, System.Security.Cryptography.CngAlgorithmGroup right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Security.Cryptography.CngAlgorithmGroup left, class System.Security.Cryptography.CngAlgorithmGroup right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngAlgorithmGroup.op_Equality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As CngAlgorithmGroup, right As CngAlgorithmGroup) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Security::Cryptography::CngAlgorithmGroup ^ left, System::Security::Cryptography::CngAlgorithmGroup ^ right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Security.Cryptography.CngAlgorithmGroup * System.Security.Cryptography.CngAlgorithmGroup -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Security.Cryptography.CngAlgorithmGroup" />
        <Parameter Name="right" Type="System.Security.Cryptography.CngAlgorithmGroup" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="ade26-137">Um objeto que especifica um grupo de algoritmos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ade26-137">An object that specifies an algorithm group.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="ade26-138">Um segundo objeto, a ser comparado ao objeto que é identificado pelo parâmetro <c>left</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ade26-138">A second object, to be compared to the object that is identified by the <c>left</c> parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ade26-139">Determina se dois objetos <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> especificam o mesmo grupo de algoritmos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ade26-139">Determines whether two <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> objects specify the same algorithm group.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ade26-140">
            <see langword="true" /> se os dois objetos especificam o mesmo grupo de algoritmos, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ade26-140">
              <see langword="true" /> if the two objects specify the same algorithm group; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Security.Cryptography.CngAlgorithmGroup left, System.Security.Cryptography.CngAlgorithmGroup right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Security.Cryptography.CngAlgorithmGroup left, class System.Security.Cryptography.CngAlgorithmGroup right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngAlgorithmGroup.op_Inequality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As CngAlgorithmGroup, right As CngAlgorithmGroup) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Security::Cryptography::CngAlgorithmGroup ^ left, System::Security::Cryptography::CngAlgorithmGroup ^ right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Security.Cryptography.CngAlgorithmGroup * System.Security.Cryptography.CngAlgorithmGroup -&gt; bool" Usage="System.Security.Cryptography.CngAlgorithmGroup.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Security.Cryptography.CngAlgorithmGroup" />
        <Parameter Name="right" Type="System.Security.Cryptography.CngAlgorithmGroup" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="ade26-141">Um objeto que especifica um grupo de algoritmos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ade26-141">An object that specifies an algorithm group.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="ade26-142">Um segundo objeto, a ser comparado ao objeto que é identificado pelo parâmetro <c>left</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ade26-142">A second object, to be compared to the object that is identified by the <c>left</c> parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ade26-143">Determina se dois objetos <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> não especificam o mesmo grupo de algoritmos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ade26-143">Determines whether two <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> objects do not specify the same algorithm group.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ade26-144">
            <see langword="true" /> se os dois objetos não especificam o mesmo grupo de algoritmos, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ade26-144">
              <see langword="true" /> if the two objects do not specify the same algorithm group; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rsa">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngAlgorithmGroup Rsa { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.CngAlgorithmGroup Rsa" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngAlgorithmGroup.Rsa" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Rsa As CngAlgorithmGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::CngAlgorithmGroup ^ Rsa { System::Security::Cryptography::CngAlgorithmGroup ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Rsa : System.Security.Cryptography.CngAlgorithmGroup" Usage="System.Security.Cryptography.CngAlgorithmGroup.Rsa" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithmGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ade26-145">Obtém um objeto <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> que especifica a família de algoritmos RSA (Rivest-Shamir-Adleman).</span>
          <span class="sxs-lookup">
            <span data-stu-id="ade26-145">Gets a <see cref="T:System.Security.Cryptography.CngAlgorithmGroup" /> object that specifies the Rivest-Shamir-Adleman (RSA) family of algorithms.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ade26-146">Um objeto que especifica a família de algoritmos de RSA.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ade26-146">An object that specifies the RSA family of algorithms.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngAlgorithmGroup.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="cngAlgorithmGroup.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ade26-147">Obtém o nome do grupo de algoritmos que o objeto <see cref="T:System.Security.Cryptography.CngAlgorithm" /> atual especifica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ade26-147">Gets the name of the algorithm group that the current <see cref="T:System.Security.Cryptography.CngAlgorithm" /> object specifies.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ade26-148">O nome do grupo de algoritmos inserido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ade26-148">The embedded algorithm group name.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>