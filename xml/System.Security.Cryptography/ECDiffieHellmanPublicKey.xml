<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ECDiffieHellmanPublicKey.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-81070f4" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1e344e59-9d8e-481b-978a-09f2e01be86cfad6c56d701276d8e7cde20aaee3791dbf5f37f3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fad6c56d701276d8e7cde20aaee3791dbf5f37f3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f9e3295b6cc303a611a73a84c4b27f9da792ad0d</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/26/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDiffieHellmanPublicKey">
          <source>Provides an abstract base class from which all <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" /&gt;</ph> implementations must inherit.</source>
          <target state="translated">Fornece uma classe base abstrata da qual todas as implementações <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" /&gt;</ph> devem ser herdadas.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.#ctor(System.Byte[])">
          <source>A byte array that represents an <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /&gt;</ph> object.</source>
          <target state="translated">Uma matriz de bytes que representa um objeto <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.#ctor(System.Byte[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.#ctor(System.Byte[])">
          <source>This constructor is called by classes that derive from the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanPublicKey&gt;</ph> class.</source>
          <target state="translated">Este construtor é chamado por classes que derivam de <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanPublicKey&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.#ctor(System.Byte[])">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCngPublicKey&gt;</ph> class is the only currently supported implementation.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCngPublicKey&gt;</ph> classe é a única implementação com suporte no momento.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.#ctor(System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="keyBlob" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="keyBlob" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDiffieHellmanPublicKey">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellman" /&gt;</ph> class.</source>
          <target state="translated">Libera os recursos usados pela classe <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellman" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose">
          <source>Releases all resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellman" /&gt;</ph> class.</source>
          <target state="translated">Libera todos os recursos usados pela instância atual da classe <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellman" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose">
          <source>Call <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose%2A&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellman&gt;</ph>.</source>
          <target state="translated">Chamar <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose%2A&gt;</ph> quando tiver terminado de usar o <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellman&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose%2A&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellman&gt;</ph> in an unusable state.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose%2A&gt;</ph> método deixa o <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellman&gt;</ph> em um estado inutilizável.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose">
          <source>After calling <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellman&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Security.Cryptography.ECDiffieHellman&gt;</ph> was occupying.</source>
          <target state="translated">Depois de chamar <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose%2A&gt;</ph>, você deve liberar todas as referências para o <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellman&gt;</ph> para o coletor de lixo possa recuperar a memória que o <ph id="ph3">&lt;xref:System.Security.Cryptography.ECDiffieHellman&gt;</ph> estava ocupando.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>limpeza de recursos não gerenciados<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> e <bpt id="p2">[</bpt>implementar um método Dispose<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para liberar recursos gerenciados e não gerenciados; <ph id="ph2">&lt;see langword="false" /&gt;</ph> para liberar apenas recursos não gerenciados.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellman" /&gt;</ph> class and optionally releases the managed resources.</source>
          <target state="translated">Libera os recursos não gerenciados usados pela classe <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellman" /&gt;</ph> e, opcionalmente, libera os recursos gerenciados.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)">
          <source>This method executes in two distinct scenarios:</source>
          <target state="translated">Esse método é executado em dois cenários diferentes:</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)">
          <source>If <ph id="ph1">`disposing`</ph> equals <ph id="ph2">`true`</ph>, the method has been called directly or indirectly by a user's code.</source>
          <target state="translated">Se <ph id="ph1">`disposing`</ph> é igual a <ph id="ph2">`true`</ph>, o método foi chamado direta ou indiretamente pelo código do usuário.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)">
          <source>Managed and unmanaged resources can be disposed.</source>
          <target state="translated">Gerenciados e os recursos não gerenciados podem ser descartados.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)">
          <source>If <ph id="ph1">`disposing`</ph> equals <ph id="ph2">`false`</ph>, the method has been called by the runtime from inside the finalizer, and you should not reference managed resources.</source>
          <target state="translated">Se <ph id="ph1">`disposing`</ph> é igual a <ph id="ph2">`false`</ph>, o método foi chamado pelo tempo de execução de dentro do finalizador e você não deve fazer referência a recursos gerenciados.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)">
          <source>Only unmanaged resources can be disposed.</source>
          <target state="translated">Apenas recursos não gerenciados podem ser descartados.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)">
          <source>If you need to provide cleanup code for managed and unmanaged resources that an object created, you should override this method.</source>
          <target state="translated">Se você precisa fornecer o código de limpeza de recursos gerenciados e que um objeto é criado, você deve substituir esse método.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">Este método é chamado pelo método público <ph id="ph1">`Dispose()`</ph> e pelo método <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> invoca o método <ph id="ph2">`Dispose(Boolean)`</ph> protegido com o parâmetro <ph id="ph3">`disposing`</ph> definido como <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invoca <ph id="ph2">`Dispose`</ph> com <ph id="ph3">`disposing`</ph> definido como <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellmanPublicKey&gt;</ph> references.</source>
          <target state="translated">Quando o <ph id="ph1">`disposing`</ph> parâmetro for true, este método libera todos os recursos mantidos por qualquer objeto gerenciado que este <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellmanPublicKey&gt;</ph> referências.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">Este método invoca o método <ph id="ph1">`Dispose()`</ph> de cada objeto referenciado.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> pode ser chamado várias vezes por outros objetos.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> cuidado para não fazer referência a objetos que têm foi descartados anteriormente em uma chamada anterior para <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre como implementar <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, consulte <bpt id="p1">[</bpt>implementar um método Dispose<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> e <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, consulte <bpt id="p1">[</bpt>limpeza de recursos não gerenciados<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.ExportExplicitParameters">
          <source>When overridden in a derived class, exports the explicit <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECParameters" /&gt;</ph> for an <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.ECCurve" /&gt;</ph> object.</source>
          <target state="translated">Quando substituído em uma classe derivada, exporta o <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECParameters" /&gt;</ph> explícito para um objeto <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.ECCurve" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.ExportExplicitParameters">
          <source>An object that represents the point on the curve for this key, using the explicit curve format.</source>
          <target state="translated">Um objeto que representa o ponto na curva para essa chave, usando o formato de curva explícita.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.ExportExplicitParameters">
          <source>A derived class must override this method.</source>
          <target state="translated">Uma classe derivada deve substituir esse método.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.ExportParameters">
          <source>When overridden in a derived class, exports the named or explicit <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECParameters" /&gt;</ph> for an <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.ECCurve" /&gt;</ph> object.</source>
          <target state="translated">Quando substituído em uma classe derivada, exporta o <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECParameters" /&gt;</ph> nomeada ou explícito para um objeto <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.ECCurve" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.ExportParameters">
          <source>An object that represents the point on the curve for this key.</source>
          <target state="translated">Um objeto que representa o ponto na curva para essa chave.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.ExportParameters">
          <source>A derived class must override this method.</source>
          <target state="translated">Uma classe derivada deve substituir esse método.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.ToByteArray">
          <source>Serializes the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /&gt;</ph> key BLOB to a byte array.</source>
          <target state="translated">Serializa o BLOB da chave <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /&gt;</ph> para uma matriz de bytes.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.ToByteArray">
          <source>A byte array that contains the serialized Elliptic Curve Diffie-Hellman (ECDH) public key.</source>
          <target state="translated">Uma matriz de bytes que contém a chave pública ECDH (Diffie-Hellman de curva elíptica) serializada.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.ToXmlString">
          <source>Serializes the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /&gt;</ph> public key to an XML string.</source>
          <target state="translated">Serializa a chave pública <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /&gt;</ph> para uma cadeia de caracteres XML.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.ToXmlString">
          <source>An XML string that contains the serialized Elliptic Curve Diffie-Hellman (ECDH) public key.</source>
          <target state="translated">Uma cadeia de caracteres XML que contém a chave pública ECDH (Diffie-Hellman de curva elíptica) serializada.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>