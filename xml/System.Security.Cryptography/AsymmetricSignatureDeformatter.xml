<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AsymmetricSignatureDeformatter.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac56186130863db672e4a4ddf4bf7dc4c2b8796cdb9.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6186130863db672e4a4ddf4bf7dc4c2b8796cdb9</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.AsymmetricSignatureDeformatter">
          <source>Represents the abstract base class from which all implementations of asymmetric signature deformatters derive.</source>
          <target state="translated">Representa a classe base abstrata de qual todas as implementações de desformatadores de assinatura assimétricos derivam.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.AsymmetricSignatureDeformatter">
          <source>Asymmetric signature deformatters verify the digital signatures that are created using implementations of <ph id="ph1">&lt;xref:System.Security.Cryptography.AsymmetricSignatureFormatter&gt;</ph>.</source>
          <target state="translated">Deformatters de assinatura assimétrica verificar as assinaturas digitais que são criadas com implementações de <ph id="ph1">&lt;xref:System.Security.Cryptography.AsymmetricSignatureFormatter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.AsymmetricSignatureDeformatter.#ctor">
          <source>Initializes a new instance of <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.AsymmetricSignatureDeformatter" /&gt;</ph>.</source>
          <target state="translated">Inicializa uma nova instância de <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.AsymmetricSignatureDeformatter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.AsymmetricSignatureDeformatter.#ctor">
          <source>You cannot create an instance of an abstract class.</source>
          <target state="translated">Não é possível criar uma instância de uma classe abstrata.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.AsymmetricSignatureDeformatter.#ctor">
          <source>Application code will create a new instance of a derived class.</source>
          <target state="translated">Código do aplicativo criará uma nova instância de uma classe derivada.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.AsymmetricSignatureDeformatter.#ctor">
          <source>Use implementations of <ph id="ph1">&lt;xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.SetKey%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.SetHashAlgorithm%2A&gt;</ph> to set the key and hash algorithm before calling an implementation of <ph id="ph3">&lt;xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature%2A&gt;</ph>.</source>
          <target state="translated">Usar implementações <ph id="ph1">&lt;xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.SetKey%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.SetHashAlgorithm%2A&gt;</ph> para definir o algoritmo de hash e a chave antes de chamar uma implementação de <ph id="ph3">&lt;xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.AsymmetricSignatureDeformatter.SetHashAlgorithm(System.String)">
          <source>The name of the hash algorithm to use for verifying the signature.</source>
          <target state="translated">O nome do algoritmo de hash a ser usado para verificar a assinatura.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.AsymmetricSignatureDeformatter.SetHashAlgorithm(System.String)">
          <source>When overridden in a derived class, sets the hash algorithm to use for verifying the signature.</source>
          <target state="translated">Quando substituído em uma classe derivada, define o algoritmo de hash a ser usado para verificar a assinatura.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.AsymmetricSignatureDeformatter.SetHashAlgorithm(System.String)">
          <source>You must set a hash algorithm before calling an implementation of <ph id="ph1">&lt;xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature%2A&gt;</ph>.</source>
          <target state="translated">Você deve definir um algoritmo de hash antes de chamar uma implementação de <ph id="ph1">&lt;xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.AsymmetricSignatureDeformatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)">
          <source>The instance of an implementation of <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /&gt;</ph> that holds the public key.</source>
          <target state="translated">A instância de uma implementação de <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /&gt;</ph> que contém a chave pública.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.AsymmetricSignatureDeformatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)">
          <source>When overridden in a derived class, sets the public key to use for verifying the signature.</source>
          <target state="translated">Quando substituído em uma classe derivada, define a chave pública a ser usada para verificar a assinatura.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.AsymmetricSignatureDeformatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)">
          <source>You must set a key before calling an implementation of <ph id="ph1">&lt;xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature%2A&gt;</ph>.</source>
          <target state="translated">Você deve definir uma chave antes de chamar uma implementação de <ph id="ph1">&lt;xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.AsymmetricSignatureDeformatter">
          <source>Verifies the signature.</source>
          <target state="translated">Verifica a assinatura.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(System.Byte[],System.Byte[])">
          <source>The data signed with <bpt id="p1">&lt;c&gt;</bpt>rgbSignature<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Os dados assinados com <bpt id="p1">&lt;c&gt;</bpt>rgbSignature<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(System.Byte[],System.Byte[])">
          <source>The signature to be verified for <bpt id="p1">&lt;c&gt;</bpt>rgbHash<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">A assinatura a ser verificada para <bpt id="p1">&lt;c&gt;</bpt>rgbHash<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(System.Byte[],System.Byte[])">
          <source>When overridden in a derived class, verifies the signature for the specified data.</source>
          <target state="translated">Quando substituído em uma classe derivada, verifica a assinatura para os dados especificados.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(System.Byte[],System.Byte[])">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="rgbSignature" /&gt;</ph> matches the signature computed using the specified hash algorithm and key on <ph id="ph3">&lt;paramref name="rgbHash" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;paramref name="rgbSignature" /&gt;</ph> corresponder à assinatura computada usando a chave e o algoritmo de hash especificados em <ph id="ph3">&lt;paramref name="rgbHash" /&gt;</ph>; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(System.Byte[],System.Byte[])">
          <source>You must specify a public key and a hash algorithm before calling this method.</source>
          <target state="translated">Você deve especificar uma chave pública e um algoritmo de hash antes de chamar esse método.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(System.Security.Cryptography.HashAlgorithm,System.Byte[])">
          <source>The hash algorithm to use to verify the signature.</source>
          <target state="translated">O algoritmo de hash a ser usado para verificar a assinatura.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(System.Security.Cryptography.HashAlgorithm,System.Byte[])">
          <source>The signature to be verified.</source>
          <target state="translated">A assinatura a ser verificada.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(System.Security.Cryptography.HashAlgorithm,System.Byte[])">
          <source>Verifies the signature from the specified hash value.</source>
          <target state="translated">Verifica a assinatura do valor de hash especificado.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(System.Security.Cryptography.HashAlgorithm,System.Byte[])">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the signature is valid for the hash; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se a assinatura for válida para o hash, caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(System.Security.Cryptography.HashAlgorithm,System.Byte[])">
          <source>This method sets the hash algorithm to be used before verifying the signature of the input hash algorithm value.</source>
          <target state="translated">Esse método define o algoritmo de hash a ser usado antes de verificar a assinatura do valor de algoritmo de hash de entrada.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(System.Security.Cryptography.HashAlgorithm,System.Byte[])">
          <source>The <ph id="ph1">&lt;paramref name="hash" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O parâmetro <ph id="ph1">&lt;paramref name="hash" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>