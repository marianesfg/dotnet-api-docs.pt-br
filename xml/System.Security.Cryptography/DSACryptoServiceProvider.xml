<Type Name="DSACryptoServiceProvider" FullName="System.Security.Cryptography.DSACryptoServiceProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2d67917b270981fdbb76fcb2283aa3a2105ea457" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37464284" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DSACryptoServiceProvider : System.Security.Cryptography.DSA, System.Security.Cryptography.ICspAsymmetricAlgorithm" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DSACryptoServiceProvider extends System.Security.Cryptography.DSA implements class System.Security.Cryptography.ICspAsymmetricAlgorithm" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.DSACryptoServiceProvider" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DSACryptoServiceProvider&#xA;Inherits DSA&#xA;Implements ICspAsymmetricAlgorithm" />
  <TypeSignature Language="C++ CLI" Value="public ref class DSACryptoServiceProvider sealed : System::Security::Cryptography::DSA, System::Security::Cryptography::ICspAsymmetricAlgorithm" />
  <TypeSignature Language="F#" Value="type DSACryptoServiceProvider = class&#xA;    inherit DSA&#xA;    interface ICspAsymmetricAlgorithm" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.DSA</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Cryptography.ICspAsymmetricAlgorithm</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="95d8e-101">Defines a wrapper object to access the cryptographic service provider (CSP) implementation of the <see cref="T:System.Security.Cryptography.DSA" /> algorithm.</span>
      <span class="sxs-lookup">
        <span data-stu-id="95d8e-101">Defines a wrapper object to access the cryptographic service provider (CSP) implementation of the <see cref="T:System.Security.Cryptography.DSA" /> algorithm.</span>
      </span>
      <span data-ttu-id="95d8e-102">This class cannot be inherited.</span>
      <span class="sxs-lookup">
        <span data-stu-id="95d8e-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95d8e-103">Você pode usar o <xref:System.Security.Cryptography.DSACryptoServiceProvider> classe para criar assinaturas digitais e proteger a integridade de seus dados.</span><span class="sxs-lookup"><span data-stu-id="95d8e-103">You can use the <xref:System.Security.Cryptography.DSACryptoServiceProvider> class to create digital signatures and protect the integrity of your data.</span></span>  
  
 <span data-ttu-id="95d8e-104">Para usar um sistema de chave pública para assinar digitalmente uma mensagem, o remetente primeiro se aplica a uma função de hash para a mensagem para criar um resumo da mensagem.</span><span class="sxs-lookup"><span data-stu-id="95d8e-104">To use a public-key system to digitally sign a message, the sender first applies a hash function to the message to create a message digest.</span></span> <span data-ttu-id="95d8e-105">O remetente, em seguida, criptografa o resumo da mensagem com a chave privada do remetente para criar a assinatura do remetente pessoal.</span><span class="sxs-lookup"><span data-stu-id="95d8e-105">The sender then encrypts the message digest with the sender's private key to create the sender's personal signature.</span></span> <span data-ttu-id="95d8e-106">Ao receber a mensagem e a assinatura, o receptor descriptografa a assinatura usando a chave pública do remetente para recuperar o resumo da mensagem e hashes de mensagem usando o mesmo algoritmo de hash que o remetente é usado.</span><span class="sxs-lookup"><span data-stu-id="95d8e-106">Upon receiving the message and signature, the receiver decrypts the signature using the sender's public key to recover the message digest and hashes the message using the same hash algorithm that the sender used.</span></span> <span data-ttu-id="95d8e-107">Se o resumo da mensagem que o receptor calcula corresponda exatamente ao que o resumo da mensagem recebida do remetente, o receptor pode ter certeza de que a mensagem não foi alterada em trânsito.</span><span class="sxs-lookup"><span data-stu-id="95d8e-107">If the message digest that the receiver computes exactly matches the message digest received from the sender, the receiver can be sure that the message was not altered while in transit.</span></span> <span data-ttu-id="95d8e-108">Observe que uma assinatura pode ser verificada por qualquer pessoa, porque a chave pública do remetente é conhecimento comum.</span><span class="sxs-lookup"><span data-stu-id="95d8e-108">Note that a signature can be verified by anyone, because the sender's public key is common knowledge.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="95d8e-109">Algoritmos assimétricos mais recentes estão disponíveis.</span><span class="sxs-lookup"><span data-stu-id="95d8e-109">Newer asymmetric algorithms are available.</span></span> <span data-ttu-id="95d8e-110">Considere o uso de <xref:System.Security.Cryptography.RSACryptoServiceProvider> classe, em vez do <xref:System.Security.Cryptography.DSACryptoServiceProvider> classe.</span><span class="sxs-lookup"><span data-stu-id="95d8e-110">Consider using the <xref:System.Security.Cryptography.RSACryptoServiceProvider> class instead of the <xref:System.Security.Cryptography.DSACryptoServiceProvider> class.</span></span> <span data-ttu-id="95d8e-111">Use <xref:System.Security.Cryptography.DSACryptoServiceProvider> somente para compatibilidade com aplicativos herdados e dados.</span><span class="sxs-lookup"><span data-stu-id="95d8e-111">Use <xref:System.Security.Cryptography.DSACryptoServiceProvider> only for compatibility with legacy applications and data.</span></span>  
  
 <span data-ttu-id="95d8e-112">Esse algoritmo dá suporte a tamanhos de chave de 512 bits para 1024 bits em incrementos de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="95d8e-112">This algorithm supports key lengths from 512 bits to 1024 bits in increments of 64 bits.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="95d8e-113">Initializes a new instance of the <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-113">Initializes a new instance of the <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DSACryptoServiceProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DSACryptoServiceProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="95d8e-114">Initializes a new instance of the <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-114">Initializes a new instance of the <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="95d8e-115">para a capacidade de chamar código não gerenciado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-115">for the ability to call unmanaged code.</span>
          </span>
          <span data-ttu-id="95d8e-116">Enumeração associada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-116">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DSACryptoServiceProvider (int dwKeySize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 dwKeySize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dwKeySize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DSACryptoServiceProvider(int dwKeySize);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.DSACryptoServiceProvider : int -&gt; System.Security.Cryptography.DSACryptoServiceProvider" Usage="new System.Security.Cryptography.DSACryptoServiceProvider dwKeySize" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dwKeySize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dwKeySize">
          <span data-ttu-id="95d8e-117">The size of the key for the asymmetric algorithm in bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-117">The size of the key for the asymmetric algorithm in bits.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95d8e-118">Initializes a new instance of the <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> class with the specified key size.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-118">Initializes a new instance of the <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> class with the specified key size.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="95d8e-119">para a capacidade de chamar código não gerenciado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-119">for the ability to call unmanaged code.</span>
          </span>
          <span data-ttu-id="95d8e-120">Enumeração associada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-120">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DSACryptoServiceProvider (System.Security.Cryptography.CspParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.CspParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameters As CspParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DSACryptoServiceProvider(System::Security::Cryptography::CspParameters ^ parameters);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.DSACryptoServiceProvider : System.Security.Cryptography.CspParameters -&gt; System.Security.Cryptography.DSACryptoServiceProvider" Usage="new System.Security.Cryptography.DSACryptoServiceProvider parameters" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameters" Type="System.Security.Cryptography.CspParameters" />
      </Parameters>
      <Docs>
        <param name="parameters">
          <span data-ttu-id="95d8e-121">The parameters for the CSP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-121">The parameters for the CSP.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95d8e-122">Initializes a new instance of the <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> class with the specified parameters for the cryptographic service provider (CSP).</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-122">Initializes a new instance of the <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> class with the specified parameters for the cryptographic service provider (CSP).</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="95d8e-123">para a capacidade de chamar código não gerenciado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-123">for the ability to call unmanaged code.</span>
          </span>
          <span data-ttu-id="95d8e-124">Enumeração associada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-124">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DSACryptoServiceProvider (int dwKeySize, System.Security.Cryptography.CspParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 dwKeySize, class System.Security.Cryptography.CspParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dwKeySize As Integer, parameters As CspParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DSACryptoServiceProvider(int dwKeySize, System::Security::Cryptography::CspParameters ^ parameters);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.DSACryptoServiceProvider : int * System.Security.Cryptography.CspParameters -&gt; System.Security.Cryptography.DSACryptoServiceProvider" Usage="new System.Security.Cryptography.DSACryptoServiceProvider (dwKeySize, parameters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dwKeySize" Type="System.Int32" />
        <Parameter Name="parameters" Type="System.Security.Cryptography.CspParameters" />
      </Parameters>
      <Docs>
        <param name="dwKeySize">
          <span data-ttu-id="95d8e-125">The size of the key for the cryptographic algorithm in bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-125">The size of the key for the cryptographic algorithm in bits.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="95d8e-126">The parameters for the CSP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-126">The parameters for the CSP.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95d8e-127">Initializes a new instance of the <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> class with the specified key size and parameters for the cryptographic service provider (CSP).</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-127">Initializes a new instance of the <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> class with the specified key size and parameters for the cryptographic service provider (CSP).</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="95d8e-128">The CSP cannot be acquired.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-128">The CSP cannot be acquired.</span>
          </span>
          <span data-ttu-id="95d8e-129">-or-  The key cannot be created.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-129">-or-  The key cannot be created.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="95d8e-130">
            <paramref name="dwKeySize" /> is out of range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-130">
              <paramref name="dwKeySize" /> is out of range.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="95d8e-131">para a capacidade de chamar código não gerenciado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-131">for the ability to call unmanaged code.</span>
          </span>
          <span data-ttu-id="95d8e-132">Enumeração associada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-132">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateSignature">
      <MemberSignature Language="C#" Value="public override byte[] CreateSignature (byte[] rgbHash);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] CreateSignature(unsigned int8[] rgbHash) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.CreateSignature(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateSignature (rgbHash As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ CreateSignature(cli::array &lt;System::Byte&gt; ^ rgbHash);" />
      <MemberSignature Language="F#" Value="override this.CreateSignature : byte[] -&gt; byte[]" Usage="dSACryptoServiceProvider.CreateSignature rgbHash" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbHash" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbHash">
          <span data-ttu-id="95d8e-133">The data to be signed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-133">The data to be signed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95d8e-134">Creates the <see cref="T:System.Security.Cryptography.DSA" /> signature for the specified data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-134">Creates the <see cref="T:System.Security.Cryptography.DSA" /> signature for the specified data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95d8e-135">The digital signature for the specified data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-135">The digital signature for the specified data.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CspKeyContainerInfo">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CspKeyContainerInfo CspKeyContainerInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.CspKeyContainerInfo CspKeyContainerInfo" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CspKeyContainerInfo As CspKeyContainerInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::CspKeyContainerInfo ^ CspKeyContainerInfo { System::Security::Cryptography::CspKeyContainerInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CspKeyContainerInfo : System.Security.Cryptography.CspKeyContainerInfo" Usage="System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICspAsymmetricAlgorithm.CspKeyContainerInfo</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CspKeyContainerInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="95d8e-136">Gets a <see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /> object that describes additional information about a cryptographic key pair.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-136">Gets a <see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /> object that describes additional information about a cryptographic key pair.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="95d8e-137">Um objeto <see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /> que descreve informações adicionais sobre um par de chaves de criptografia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-137">A <see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /> object that describes additional information about a cryptographic key pair.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95d8e-138">Use o <xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A> propriedade para recuperar informações adicionais sobre um par de chaves criptográficas.</span><span class="sxs-lookup"><span data-stu-id="95d8e-138">Use the <xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A> property to retrieve additional information about a cryptographic key pair.</span></span>  <span data-ttu-id="95d8e-139">Retornado <xref:System.Security.Cryptography.CspKeyContainerInfo> objeto descreve se a chave é exportável e especifica o nome do contêiner de chave, informações sobre o provedor e outras informações.</span><span class="sxs-lookup"><span data-stu-id="95d8e-139">The returned <xref:System.Security.Cryptography.CspKeyContainerInfo> object describes whether the key is exportable, and specifies the key container name, information about the provider, and other information.</span></span>  
  
 <span data-ttu-id="95d8e-140">Em casos em que uma chave aleatória é gerada, um contêiner de chave não será criado até que você chame um método que usa a chave.</span><span class="sxs-lookup"><span data-stu-id="95d8e-140">In cases where a random key is generated, a key container will not be created until you call a method that uses the key.</span></span>  <span data-ttu-id="95d8e-141">Algumas propriedades do <xref:System.Security.Cryptography.CspKeyContainerInfo> objeto retornado pela <xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A> propriedade gerará uma <xref:System.Security.Cryptography.CryptographicException> se não tiver sido criado um contêiner de chave.</span><span class="sxs-lookup"><span data-stu-id="95d8e-141">Some properties of the <xref:System.Security.Cryptography.CspKeyContainerInfo> object returned by the <xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A> property will throw a <xref:System.Security.Cryptography.CryptographicException> if a key container has not been created.</span></span>  <span data-ttu-id="95d8e-142">Para certificar-se de que um contêiner de chave foi criado, chamar um método como <xref:System.Security.Cryptography.DSACryptoServiceProvider.SignData%2A>, <xref:System.Security.Cryptography.DSACryptoServiceProvider.SignHash%2A>, <xref:System.Security.Cryptography.DSACryptoServiceProvider.VerifyData%2A>, <xref:System.Security.Cryptography.DSACryptoServiceProvider.VerifyHash%2A>e assim por diante, antes de chamar o <xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="95d8e-142">To make sure that a key container has been created, call a method such as <xref:System.Security.Cryptography.DSACryptoServiceProvider.SignData%2A>, <xref:System.Security.Cryptography.DSACryptoServiceProvider.SignHash%2A>, <xref:System.Security.Cryptography.DSACryptoServiceProvider.VerifyData%2A>, <xref:System.Security.Cryptography.DSACryptoServiceProvider.VerifyHash%2A>, and so on, before you call the <xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="dSACryptoServiceProvider.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportCspBlob">
      <MemberSignature Language="C#" Value="public byte[] ExportCspBlob (bool includePrivateParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] ExportCspBlob(bool includePrivateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.ExportCspBlob(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportCspBlob (includePrivateParameters As Boolean) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ ExportCspBlob(bool includePrivateParameters);" />
      <MemberSignature Language="F#" Value="abstract member ExportCspBlob : bool -&gt; byte[]&#xA;override this.ExportCspBlob : bool -&gt; byte[]" Usage="dSACryptoServiceProvider.ExportCspBlob includePrivateParameters" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Cryptography.ICspAsymmetricAlgorithm.ExportCspBlob(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrivateParameters" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePrivateParameters">
          <span data-ttu-id="95d8e-143">
            <see langword="true" /> to include the private key; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-143">
              <see langword="true" /> to include the private key; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95d8e-144">Exports a blob containing the key information associated with a <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-144">Exports a blob containing the key information associated with a <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95d8e-145">A byte array containing the key information associated with a <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-145">A byte array containing the key information associated with a <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95d8e-146">O <xref:System.Security.Cryptography.DSACryptoServiceProvider.ExportCspBlob%2A> método retorna um blob que contém informações de chave que é compatíveis com o não gerenciado Microsoft CAPI (API criptográfica).</span><span class="sxs-lookup"><span data-stu-id="95d8e-146">The <xref:System.Security.Cryptography.DSACryptoServiceProvider.ExportCspBlob%2A> method returns a blob containing key information that is compatible with the unmanaged Microsoft Cryptographic API (CAPI).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection">
          <span data-ttu-id="95d8e-147">permissão acessar um contêiner de chave ao exportar uma chave privada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-147">for permission to access a key container when exporting a private key.</span>
          </span>
          <span data-ttu-id="95d8e-148">Ação de segurança: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-148">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="95d8e-149">Enumeração associada: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Export" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-149">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Export" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ExportParameters">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.DSAParameters ExportParameters (bool includePrivateParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Security.Cryptography.DSAParameters ExportParameters(bool includePrivateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.ExportParameters(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExportParameters (includePrivateParameters As Boolean) As DSAParameters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::DSAParameters ExportParameters(bool includePrivateParameters);" />
      <MemberSignature Language="F#" Value="override this.ExportParameters : bool -&gt; System.Security.Cryptography.DSAParameters" Usage="dSACryptoServiceProvider.ExportParameters includePrivateParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.DSAParameters</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrivateParameters" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePrivateParameters">
          <span data-ttu-id="95d8e-150">
            <see langword="true" /> to include private parameters; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-150">
              <see langword="true" /> to include private parameters; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95d8e-151">Exports the <see cref="T:System.Security.Cryptography.DSAParameters" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-151">Exports the <see cref="T:System.Security.Cryptography.DSAParameters" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95d8e-152">The parameters for <see cref="T:System.Security.Cryptography.DSA" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-152">The parameters for <see cref="T:System.Security.Cryptography.DSA" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="95d8e-153">The key cannot be exported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-153">The key cannot be exported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection">
          <span data-ttu-id="95d8e-154">permissão exportar uma chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-154">for permission to export a key.</span>
          </span>
          <span data-ttu-id="95d8e-155">Ação de segurança: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-155">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="95d8e-156">Enumeração associada: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Export" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-156">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Export" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~DSACryptoServiceProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!DSACryptoServiceProvider ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="dSACryptoServiceProvider.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashData">
      <MemberSignature Language="C#" Value="protected override byte[] HashData (System.IO.Stream data, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] HashData(class System.IO.Stream data, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HashData (data As Stream, hashAlgorithm As HashAlgorithmName) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::Byte&gt; ^ HashData(System::IO::Stream ^ data, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="F#" Value="override this.HashData : System.IO.Stream * System.Security.Cryptography.HashAlgorithmName -&gt; byte[]" Usage="dSACryptoServiceProvider.HashData (data, hashAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.IO.Stream" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="hashAlgorithm">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashData">
      <MemberSignature Language="C#" Value="protected override byte[] HashData (byte[] data, int offset, int count, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] HashData(unsigned int8[] data, int32 offset, int32 count, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HashData (data As Byte(), offset As Integer, count As Integer, hashAlgorithm As HashAlgorithmName) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::Byte&gt; ^ HashData(cli::array &lt;System::Byte&gt; ^ data, int offset, int count, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="F#" Value="override this.HashData : byte[] * int * int * System.Security.Cryptography.HashAlgorithmName -&gt; byte[]" Usage="dSACryptoServiceProvider.HashData (data, offset, count, hashAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="offset">To be added.</param>
        <param name="count">To be added.</param>
        <param name="hashAlgorithm">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportCspBlob">
      <MemberSignature Language="C#" Value="public void ImportCspBlob (byte[] keyBlob);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ImportCspBlob(unsigned int8[] keyBlob) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.ImportCspBlob(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub ImportCspBlob (keyBlob As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ImportCspBlob(cli::array &lt;System::Byte&gt; ^ keyBlob);" />
      <MemberSignature Language="F#" Value="abstract member ImportCspBlob : byte[] -&gt; unit&#xA;override this.ImportCspBlob : byte[] -&gt; unit" Usage="dSACryptoServiceProvider.ImportCspBlob keyBlob" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Cryptography.ICspAsymmetricAlgorithm.ImportCspBlob(System.Byte[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyBlob" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="keyBlob">
          <span data-ttu-id="95d8e-157">A byte array that represents a DSA key blob.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-157">A byte array that represents a DSA key blob.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95d8e-158">Imports a blob that represents DSA key information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-158">Imports a blob that represents DSA key information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95d8e-159">O <xref:System.Security.Cryptography.DSACryptoServiceProvider.ImportCspBlob%2A> método inicializa os dados da chave de um <xref:System.Security.Cryptography.DSACryptoServiceProvider> usando um blob que seja compatível com o não gerenciado Microsoft CAPI (API criptográfica) do objeto.</span><span class="sxs-lookup"><span data-stu-id="95d8e-159">The <xref:System.Security.Cryptography.DSACryptoServiceProvider.ImportCspBlob%2A> method initializes the key data of a <xref:System.Security.Cryptography.DSACryptoServiceProvider> object using a blob that is compatible with the unmanaged Microsoft Cryptographic API (CAPI).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection">
          <span data-ttu-id="95d8e-160">permissão acessar um contêiner de chave ao importar uma chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-160">for permission to access a key container when importing a key.</span>
          </span>
          <span data-ttu-id="95d8e-161">Ação de segurança: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-161">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="95d8e-162">Enumeração associada: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Import" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-162">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Import" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ImportParameters">
      <MemberSignature Language="C#" Value="public override void ImportParameters (System.Security.Cryptography.DSAParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ImportParameters(valuetype System.Security.Cryptography.DSAParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.ImportParameters(System.Security.Cryptography.DSAParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ImportParameters (parameters As DSAParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ImportParameters(System::Security::Cryptography::DSAParameters parameters);" />
      <MemberSignature Language="F#" Value="override this.ImportParameters : System.Security.Cryptography.DSAParameters -&gt; unit" Usage="dSACryptoServiceProvider.ImportParameters parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Security.Cryptography.DSAParameters" />
      </Parameters>
      <Docs>
        <param name="parameters">
          <span data-ttu-id="95d8e-163">The parameters for <see cref="T:System.Security.Cryptography.DSA" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-163">The parameters for <see cref="T:System.Security.Cryptography.DSA" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95d8e-164">Imports the specified <see cref="T:System.Security.Cryptography.DSAParameters" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-164">Imports the specified <see cref="T:System.Security.Cryptography.DSAParameters" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="95d8e-165">The cryptographic service provider (CSP) cannot be acquired.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-165">The cryptographic service provider (CSP) cannot be acquired.</span>
          </span>
          <span data-ttu-id="95d8e-166">-or-  The <paramref name="parameters" /> parameter has missing fields.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-166">-or-  The <paramref name="parameters" /> parameter has missing fields.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection">
          <span data-ttu-id="95d8e-167">permissão importar uma chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-167">for permission to import a key.</span>
          </span>
          <span data-ttu-id="95d8e-168">Ação de segurança: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-168">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="95d8e-169">Enumeração associada: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Import" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-169">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Import" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="KeyExchangeAlgorithm">
      <MemberSignature Language="C#" Value="public override string KeyExchangeAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string KeyExchangeAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.DSACryptoServiceProvider.KeyExchangeAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property KeyExchangeAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ KeyExchangeAlgorithm { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyExchangeAlgorithm : string" Usage="System.Security.Cryptography.DSACryptoServiceProvider.KeyExchangeAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="95d8e-170">Gets the name of the key exchange algorithm.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-170">Gets the name of the key exchange algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="95d8e-171">O nome do algoritmo de troca de chaves.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-171">The name of the key exchange algorithm.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeySize">
      <MemberSignature Language="C#" Value="public override int KeySize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeySize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.DSACryptoServiceProvider.KeySize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property KeySize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int KeySize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.KeySize : int" Usage="System.Security.Cryptography.DSACryptoServiceProvider.KeySize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="95d8e-172">Gets the size of the key used by the asymmetric algorithm in bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-172">Gets the size of the key used by the asymmetric algorithm in bits.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="95d8e-173">O tamanho da chave usada pelo algoritmo assimétrico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-173">The size of the key used by the asymmetric algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95d8e-174">Esse algoritmo dá suporte a tamanhos de chave de 512 bits para 1024 bits em incrementos de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="95d8e-174">This algorithm supports key lengths from 512 bits to 1024 bits in increments of 64 bits.</span></span>  
  
 <span data-ttu-id="95d8e-175">O <xref:System.Security.Cryptography.DSACryptoServiceProvider> classe não permite que você altere os tamanhos de chave usando o <xref:System.Security.Cryptography.DSACryptoServiceProvider.KeySize%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="95d8e-175">The <xref:System.Security.Cryptography.DSACryptoServiceProvider> class does not allow you to change key sizes using the <xref:System.Security.Cryptography.DSACryptoServiceProvider.KeySize%2A> property.</span></span>  <span data-ttu-id="95d8e-176">Qualquer valor gravado para essa propriedade não atualizarão a propriedade sem erro.</span><span class="sxs-lookup"><span data-stu-id="95d8e-176">Any value written to this property will fail to update the property without error.</span></span>  <span data-ttu-id="95d8e-177">Para alterar o tamanho da chave, use uma das sobrecargas de construtor.</span><span class="sxs-lookup"><span data-stu-id="95d8e-177">To change the key size, use one of the constructor overloads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LegalKeySizes">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.KeySizes[] LegalKeySizes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.KeySizes[] LegalKeySizes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.DSACryptoServiceProvider.LegalKeySizes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LegalKeySizes As KeySizes()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ LegalKeySizes { cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LegalKeySizes : System.Security.Cryptography.KeySizes[]" Usage="System.Security.Cryptography.DSACryptoServiceProvider.LegalKeySizes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeySizes[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PersistKeyInCsp">
      <MemberSignature Language="C#" Value="public bool PersistKeyInCsp { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PersistKeyInCsp" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.DSACryptoServiceProvider.PersistKeyInCsp" />
      <MemberSignature Language="VB.NET" Value="Public Property PersistKeyInCsp As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PersistKeyInCsp { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PersistKeyInCsp : bool with get, set" Usage="System.Security.Cryptography.DSACryptoServiceProvider.PersistKeyInCsp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="95d8e-178">Gets or sets a value indicating whether the key should be persisted in the cryptographic service provider (CSP).</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-178">Gets or sets a value indicating whether the key should be persisted in the cryptographic service provider (CSP).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="95d8e-179">
            <see langword="true" /> se a chave precisar ser persistente no CSP; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-179">
              <see langword="true" /> if the key should be persisted in the CSP; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95d8e-180">Use essa propriedade quando você desejar manter uma chave em um contêiner de chave.</span><span class="sxs-lookup"><span data-stu-id="95d8e-180">Use this property when you want to persist a key in a key container.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry">
          <span data-ttu-id="95d8e-181">permissão Excluir uma chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-181">for permission to delete a key.</span>
          </span>
          <span data-ttu-id="95d8e-182">Ação de segurança: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-182">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="95d8e-183">Enumeração associada: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Delete" /> - ou - permissão Criar uma chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-183">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Delete" />  -or-  for permission to create a key.</span>
          </span>
          <span data-ttu-id="95d8e-184">Ação de segurança: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-184">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="95d8e-185">Enumeração associada: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Create" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-185">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Create" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="PublicOnly">
      <MemberSignature Language="C#" Value="public bool PublicOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PublicOnly" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.DSACryptoServiceProvider.PublicOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PublicOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PublicOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.PublicOnly : bool" Usage="System.Security.Cryptography.DSACryptoServiceProvider.PublicOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="95d8e-186">Gets a value that indicates whether the <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> object contains only a public key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-186">Gets a value that indicates whether the <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> object contains only a public key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="95d8e-187">
            <see langword="true" /> Se o <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> objeto contém apenas uma pública chave; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-187">
              <see langword="true" /> if the <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> object contains only a public key; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95d8e-188">O <xref:System.Security.Cryptography.DSACryptoServiceProvider> classe pode ser inicializada ou com uma chave pública apenas ou com uma pública e privada a chave.</span><span class="sxs-lookup"><span data-stu-id="95d8e-188">The <xref:System.Security.Cryptography.DSACryptoServiceProvider> class can be initialized either with a public key only or with both a public and private key.</span></span>  <span data-ttu-id="95d8e-189">Use o <xref:System.Security.Cryptography.DSACryptoServiceProvider.PublicOnly%2A> propriedade para determinar se a instância atual contém somente uma chave pública ou uma chave pública e privada.</span><span class="sxs-lookup"><span data-stu-id="95d8e-189">Use the <xref:System.Security.Cryptography.DSACryptoServiceProvider.PublicOnly%2A> property to determine whether the current instance contains only a public key or both a public and private key.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureAlgorithm">
      <MemberSignature Language="C#" Value="public override string SignatureAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignatureAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.DSACryptoServiceProvider.SignatureAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SignatureAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SignatureAlgorithm { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SignatureAlgorithm : string" Usage="System.Security.Cryptography.DSACryptoServiceProvider.SignatureAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="95d8e-190">Gets the name of the signature algorithm.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-190">Gets the name of the signature algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="95d8e-191">O nome do algoritmo de assinatura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-191">The name of the signature algorithm.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SignData">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="95d8e-192">Computes the hash value of the specified data and signs it.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-192">Computes the hash value of the specified data and signs it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SignData">
      <MemberSignature Language="C#" Value="public byte[] SignData (byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] SignData(unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.SignData(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SignData (buffer As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ SignData(cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="override this.SignData : byte[] -&gt; byte[]" Usage="dSACryptoServiceProvider.SignData buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="95d8e-193">The input data for which to compute the hash.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-193">The input data for which to compute the hash.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95d8e-194">Computes the hash value of the specified byte array and signs the resulting hash value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-194">Computes the hash value of the specified byte array and signs the resulting hash value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95d8e-195">The <see cref="T:System.Security.Cryptography.DSA" /> signature for the specified data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-195">The <see cref="T:System.Security.Cryptography.DSA" /> signature for the specified data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95d8e-196">Esse método cria uma assinatura digital é verificada usando o <xref:System.Security.Cryptography.DSACryptoServiceProvider.VerifyData%2A> método.</span><span class="sxs-lookup"><span data-stu-id="95d8e-196">This method creates a digital signature that is verified using the <xref:System.Security.Cryptography.DSACryptoServiceProvider.VerifyData%2A> method.</span></span>  
  
 <span data-ttu-id="95d8e-197"><xref:System.Security.Cryptography.DSA> usa o <xref:System.Security.Cryptography.SHA1> algoritmo de hash.</span><span class="sxs-lookup"><span data-stu-id="95d8e-197"><xref:System.Security.Cryptography.DSA> uses the <xref:System.Security.Cryptography.SHA1> hash algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignData">
      <MemberSignature Language="C#" Value="public byte[] SignData (System.IO.Stream inputStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] SignData(class System.IO.Stream inputStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.SignData(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Function SignData (inputStream As Stream) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ SignData(System::IO::Stream ^ inputStream);" />
      <MemberSignature Language="F#" Value="override this.SignData : System.IO.Stream -&gt; byte[]" Usage="dSACryptoServiceProvider.SignData inputStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="inputStream">
          <span data-ttu-id="95d8e-198">The input data for which to compute the hash.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-198">The input data for which to compute the hash.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95d8e-199">Computes the hash value of the specified input stream and signs the resulting hash value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-199">Computes the hash value of the specified input stream and signs the resulting hash value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95d8e-200">The <see cref="T:System.Security.Cryptography.DSA" /> signature for the specified data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-200">The <see cref="T:System.Security.Cryptography.DSA" /> signature for the specified data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95d8e-201"><xref:System.Security.Cryptography.DSA> usa o <xref:System.Security.Cryptography.SHA1> algoritmo de hash.</span><span class="sxs-lookup"><span data-stu-id="95d8e-201"><xref:System.Security.Cryptography.DSA> uses the <xref:System.Security.Cryptography.SHA1> hash algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignData">
      <MemberSignature Language="C#" Value="public byte[] SignData (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] SignData(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SignData (buffer As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ SignData(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.SignData : byte[] * int * int -&gt; byte[]" Usage="dSACryptoServiceProvider.SignData (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="95d8e-202">The input data to sign.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-202">The input data to sign.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="95d8e-203">The offset into the array from which to begin using data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-203">The offset into the array from which to begin using data.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="95d8e-204">The number of bytes in the array to use as data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-204">The number of bytes in the array to use as data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95d8e-205">Signs a byte array from the specified start point to the specified end point.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-205">Signs a byte array from the specified start point to the specified end point.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95d8e-206">The <see cref="T:System.Security.Cryptography.DSA" /> signature for the specified data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-206">The <see cref="T:System.Security.Cryptography.DSA" /> signature for the specified data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95d8e-207">Esse método cria uma assinatura digital é verificada usando o <xref:System.Security.Cryptography.DSACryptoServiceProvider.VerifyData%2A> método.</span><span class="sxs-lookup"><span data-stu-id="95d8e-207">This method creates a digital signature that is verified using the <xref:System.Security.Cryptography.DSACryptoServiceProvider.VerifyData%2A> method.</span></span>  
  
 <span data-ttu-id="95d8e-208"><xref:System.Security.Cryptography.DSA> usa o <xref:System.Security.Cryptography.SHA1> algoritmo de hash.</span><span class="sxs-lookup"><span data-stu-id="95d8e-208"><xref:System.Security.Cryptography.DSA> uses the <xref:System.Security.Cryptography.SHA1> hash algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignHash">
      <MemberSignature Language="C#" Value="public byte[] SignHash (byte[] rgbHash, string str);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] SignHash(unsigned int8[] rgbHash, string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.SignHash(System.Byte[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SignHash (rgbHash As Byte(), str As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ SignHash(cli::array &lt;System::Byte&gt; ^ rgbHash, System::String ^ str);" />
      <MemberSignature Language="F#" Value="member this.SignHash : byte[] * string -&gt; byte[]" Usage="dSACryptoServiceProvider.SignHash (rgbHash, str)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbHash" Type="System.Byte[]" />
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rgbHash">
          <span data-ttu-id="95d8e-209">The hash value of the data to be signed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-209">The hash value of the data to be signed.</span>
          </span>
        </param>
        <param name="str">
          <span data-ttu-id="95d8e-210">The name of the hash algorithm used to create the hash value of the data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-210">The name of the hash algorithm used to create the hash value of the data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95d8e-211">Computes the signature for the specified hash value by encrypting it with the private key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-211">Computes the signature for the specified hash value by encrypting it with the private key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95d8e-212">The <see cref="T:System.Security.Cryptography.DSA" /> signature for the specified hash value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-212">The <see cref="T:System.Security.Cryptography.DSA" /> signature for the specified hash value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95d8e-213">Esse método cria uma assinatura digital é verificada usando o <xref:System.Security.Cryptography.DSACryptoServiceProvider.VerifyHash%2A> método.</span><span class="sxs-lookup"><span data-stu-id="95d8e-213">This method creates a digital signature that is verified using the <xref:System.Security.Cryptography.DSACryptoServiceProvider.VerifyHash%2A> method.</span></span>  
  
 <span data-ttu-id="95d8e-214"><xref:System.Security.Cryptography.DSA> usa o <xref:System.Security.Cryptography.SHA1> algoritmo de hash.</span><span class="sxs-lookup"><span data-stu-id="95d8e-214"><xref:System.Security.Cryptography.DSA> uses the <xref:System.Security.Cryptography.SHA1> hash algorithm.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95d8e-215">The <paramref name="rgbHash" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-215">The <paramref name="rgbHash" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="95d8e-216">The cryptographic service provider (CSP) cannot be acquired.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-216">The cryptographic service provider (CSP) cannot be acquired.</span>
          </span>
          <span data-ttu-id="95d8e-217">-or-  There is no private key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-217">-or-  There is no private key.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection">
          <span data-ttu-id="95d8e-218">permissão assinar um arquivo usando a chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-218">for permission to sign a file using the key.</span>
          </span>
          <span data-ttu-id="95d8e-219">Ação de segurança: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-219">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="95d8e-220">Enumeração associada: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-220">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="UseMachineKeyStore">
      <MemberSignature Language="C#" Value="public static bool UseMachineKeyStore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool UseMachineKeyStore" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.DSACryptoServiceProvider.UseMachineKeyStore" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property UseMachineKeyStore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool UseMachineKeyStore { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseMachineKeyStore : bool with get, set" Usage="System.Security.Cryptography.DSACryptoServiceProvider.UseMachineKeyStore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="95d8e-221">Gets or sets a value indicating whether the key should be persisted in the computer's key store instead of the user profile store.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-221">Gets or sets a value indicating whether the key should be persisted in the computer's key store instead of the user profile store.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="95d8e-222">
            <see langword="true" /> se a chave precisar ser persistente no repositório de chaves do computador; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-222">
              <see langword="true" /> if the key should be persisted in the computer key store; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95d8e-223">Definir essa propriedade como true é equivalente ao passar o <xref:System.Security.Cryptography.DSACryptoServiceProvider.UseMachineKeyStore%2A> sinalizador como um <xref:System.Security.Cryptography.CspParameters> objeto.</span><span class="sxs-lookup"><span data-stu-id="95d8e-223">Setting this property to true is equivalent to passing the <xref:System.Security.Cryptography.DSACryptoServiceProvider.UseMachineKeyStore%2A> flag to a <xref:System.Security.Cryptography.CspParameters> object.</span></span> <span data-ttu-id="95d8e-224">O <xref:System.Security.Cryptography.DSACryptoServiceProvider.UseMachineKeyStore%2A> a propriedade se aplica a todo o código no domínio do aplicativo atual, enquanto o <xref:System.Security.Cryptography.CspParameters> objeto se aplica apenas às classes que referenciá-la explicitamente.</span><span class="sxs-lookup"><span data-stu-id="95d8e-224">The <xref:System.Security.Cryptography.DSACryptoServiceProvider.UseMachineKeyStore%2A> property applies to all code in the current application domain, while the <xref:System.Security.Cryptography.CspParameters> object applies only to classes that explicitly reference it.</span></span> <span data-ttu-id="95d8e-225">Essas configurações são úteis quando representando ou executado sob uma conta cujo perfil de usuário não está carregado.</span><span class="sxs-lookup"><span data-stu-id="95d8e-225">These settings are useful when impersonating or running under an account whose user profile is not loaded.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="VerifyData">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="95d8e-226">Verifies that a digital signature is valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-226">Verifies that a digital signature is valid.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="VerifyData">
      <MemberSignature Language="C#" Value="public bool VerifyData (byte[] rgbData, byte[] rgbSignature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyData(unsigned int8[] rgbData, unsigned int8[] rgbSignature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.VerifyData(System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyData (rgbData As Byte(), rgbSignature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyData(cli::array &lt;System::Byte&gt; ^ rgbData, cli::array &lt;System::Byte&gt; ^ rgbSignature);" />
      <MemberSignature Language="F#" Value="override this.VerifyData : byte[] * byte[] -&gt; bool" Usage="dSACryptoServiceProvider.VerifyData (rgbData, rgbSignature)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbData" Type="System.Byte[]" />
        <Parameter Name="rgbSignature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbData">
          <span data-ttu-id="95d8e-227">The data that was signed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-227">The data that was signed.</span>
          </span>
        </param>
        <param name="rgbSignature">
          <span data-ttu-id="95d8e-228">The signature data to be verified.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-228">The signature data to be verified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95d8e-229">Verifies the specified signature data by comparing it to the signature computed for the specified data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-229">Verifies the specified signature data by comparing it to the signature computed for the specified data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95d8e-230">
            <see langword="true" /> if the signature verifies as valid; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-230">
              <see langword="true" /> if the signature verifies as valid; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95d8e-231">Esse método verifica a <xref:System.Security.Cryptography.DSA> assinatura digital é produzido por <xref:System.Security.Cryptography.DSACryptoServiceProvider.SignData%2A>.</span><span class="sxs-lookup"><span data-stu-id="95d8e-231">This method verifies the <xref:System.Security.Cryptography.DSA> digital signature produced by <xref:System.Security.Cryptography.DSACryptoServiceProvider.SignData%2A>.</span></span>  
  
 <span data-ttu-id="95d8e-232"><xref:System.Security.Cryptography.DSA> usa o <xref:System.Security.Cryptography.SHA1> algoritmo de hash.</span><span class="sxs-lookup"><span data-stu-id="95d8e-232"><xref:System.Security.Cryptography.DSA> uses the <xref:System.Security.Cryptography.SHA1> hash algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyHash">
      <MemberSignature Language="C#" Value="public bool VerifyHash (byte[] rgbHash, string str, byte[] rgbSignature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyHash(unsigned int8[] rgbHash, string str, unsigned int8[] rgbSignature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyHash (rgbHash As Byte(), str As String, rgbSignature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyHash(cli::array &lt;System::Byte&gt; ^ rgbHash, System::String ^ str, cli::array &lt;System::Byte&gt; ^ rgbSignature);" />
      <MemberSignature Language="F#" Value="member this.VerifyHash : byte[] * string * byte[] -&gt; bool" Usage="dSACryptoServiceProvider.VerifyHash (rgbHash, str, rgbSignature)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbHash" Type="System.Byte[]" />
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="rgbSignature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbHash">
          <span data-ttu-id="95d8e-233">The hash value of the data to be signed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-233">The hash value of the data to be signed.</span>
          </span>
        </param>
        <param name="str">
          <span data-ttu-id="95d8e-234">The name of the hash algorithm used to create the hash value of the data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-234">The name of the hash algorithm used to create the hash value of the data.</span>
          </span>
        </param>
        <param name="rgbSignature">
          <span data-ttu-id="95d8e-235">The signature data to be verified.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-235">The signature data to be verified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95d8e-236">Verifies the specified signature data by comparing it to the signature computed for the specified hash value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-236">Verifies the specified signature data by comparing it to the signature computed for the specified hash value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95d8e-237">
            <see langword="true" /> if the signature verifies as valid; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-237">
              <see langword="true" /> if the signature verifies as valid; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95d8e-238">Esse método verifica a <xref:System.Security.Cryptography.DSA> assinatura digital é produzido por <xref:System.Security.Cryptography.DSACryptoServiceProvider.SignHash%2A>.</span><span class="sxs-lookup"><span data-stu-id="95d8e-238">This method verifies the <xref:System.Security.Cryptography.DSA> digital signature produced by <xref:System.Security.Cryptography.DSACryptoServiceProvider.SignHash%2A>.</span></span>  
  
 <span data-ttu-id="95d8e-239">Se o `str` parâmetro é `null`, o algoritmo de hash padrão (SHA1) é usado.</span><span class="sxs-lookup"><span data-stu-id="95d8e-239">If the `str` parameter is `null`, the default hash algorithm (SHA1) is used.</span></span> <span data-ttu-id="95d8e-240">Os algoritmos de hash válido é <xref:System.Security.Cryptography.SHA1>.</span><span class="sxs-lookup"><span data-stu-id="95d8e-240">The valid hash algorithms is <xref:System.Security.Cryptography.SHA1>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="95d8e-241">The <paramref name="rgbHash" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-241">The <paramref name="rgbHash" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="95d8e-242">-or-  The <paramref name="rgbSignature" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-242">-or-  The <paramref name="rgbSignature" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="95d8e-243">The cryptographic service provider (CSP) cannot be acquired.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-243">The cryptographic service provider (CSP) cannot be acquired.</span>
          </span>
          <span data-ttu-id="95d8e-244">-or-  The signature cannot be verified.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-244">-or-  The signature cannot be verified.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="VerifySignature">
      <MemberSignature Language="C#" Value="public override bool VerifySignature (byte[] rgbHash, byte[] rgbSignature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool VerifySignature(unsigned int8[] rgbHash, unsigned int8[] rgbSignature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.VerifySignature(System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function VerifySignature (rgbHash As Byte(), rgbSignature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool VerifySignature(cli::array &lt;System::Byte&gt; ^ rgbHash, cli::array &lt;System::Byte&gt; ^ rgbSignature);" />
      <MemberSignature Language="F#" Value="override this.VerifySignature : byte[] * byte[] -&gt; bool" Usage="dSACryptoServiceProvider.VerifySignature (rgbHash, rgbSignature)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbHash" Type="System.Byte[]" />
        <Parameter Name="rgbSignature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbHash">
          <span data-ttu-id="95d8e-245">The data signed with <c>rgbSignature</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-245">The data signed with <c>rgbSignature</c>.</span>
          </span>
        </param>
        <param name="rgbSignature">
          <span data-ttu-id="95d8e-246">The signature to be verified for <c>rgbData</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-246">The signature to be verified for <c>rgbData</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="95d8e-247">Verifies the <see cref="T:System.Security.Cryptography.DSA" /> signature for the specified data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-247">Verifies the <see cref="T:System.Security.Cryptography.DSA" /> signature for the specified data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="95d8e-248">
            <see langword="true" /> if <paramref name="rgbSignature" /> matches the signature computed using the specified hash algorithm and key on <paramref name="rgbHash" />; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="95d8e-248">
              <see langword="true" /> if <paramref name="rgbSignature" /> matches the signature computed using the specified hash algorithm and key on <paramref name="rgbHash" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>