<Type Name="StrongNameSignatureInformation" FullName="System.Security.Cryptography.StrongNameSignatureInformation">
  <TypeSignature Language="C#" Value="public sealed class StrongNameSignatureInformation" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit StrongNameSignatureInformation extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.StrongNameSignatureInformation" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class StrongNameSignatureInformation" />
  <TypeSignature Language="C++ CLI" Value="public ref class StrongNameSignatureInformation sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="02309-101">Contém as informações de assinatura de nome forte de um manifesto.</span><span class="sxs-lookup"><span data-stu-id="02309-101">Holds the strong name signature information for a manifest.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="HashAlgorithm">
      <MemberSignature Language="C#" Value="public string HashAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HashAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.StrongNameSignatureInformation.HashAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HashAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HashAlgorithm { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="02309-102">Obtém o algoritmo de hash usado para calcular a assinatura de nome forte.</span><span class="sxs-lookup"><span data-stu-id="02309-102">Gets the hash algorithm that is used to calculate the strong name signature.</span></span></summary>
        <value><span data-ttu-id="02309-103">O nome do algoritmo de hash que é usado para calcular a assinatura de nome forte.</span><span class="sxs-lookup"><span data-stu-id="02309-103">The name of the hash algorithm that is used to calculate the strong name signature.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HResult">
      <MemberSignature Language="C#" Value="public int HResult { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HResult" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.StrongNameSignatureInformation.HResult" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HResult As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int HResult { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="02309-104">Obtém o valor HRESULT do código de resultado.</span><span class="sxs-lookup"><span data-stu-id="02309-104">Gets the HRESULT value of the result code.</span></span></summary>
        <value><span data-ttu-id="02309-105">O valor HRESULT do código de resultado.</span><span class="sxs-lookup"><span data-stu-id="02309-105">The HRESULT value of the result code.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public bool IsValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValid" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.StrongNameSignatureInformation.IsValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsValid { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="02309-106">Obtém um valor que indica se a assinatura do nome forte é válida.</span><span class="sxs-lookup"><span data-stu-id="02309-106">Gets a value indicating whether the strong name signature is valid.</span></span></summary>
        <value>
          <span data-ttu-id="02309-107"><see langword="true" /> Se a assinatura de nome forte é válida. Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="02309-107"><see langword="true" /> if the strong name signature is valid; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PublicKey">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.AsymmetricAlgorithm PublicKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.AsymmetricAlgorithm PublicKey" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.StrongNameSignatureInformation.PublicKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PublicKey As AsymmetricAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::AsymmetricAlgorithm ^ PublicKey { System::Security::Cryptography::AsymmetricAlgorithm ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.AsymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="02309-108">Obtém a chave pública usada para verificar a assinatura.</span><span class="sxs-lookup"><span data-stu-id="02309-108">Gets the public key that is used to verify the signature.</span></span></summary>
        <value><span data-ttu-id="02309-109">A chave pública que é usada para verificar a assinatura.</span><span class="sxs-lookup"><span data-stu-id="02309-109">The public key that is used to verify the signature.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02309-110">O único caso retorna `null` quando <xref:System.Security.Cryptography.StrongNameSignatureInformation.IsValid%2A> é `false`.</span><span class="sxs-lookup"><span data-stu-id="02309-110">The only case that returns `null` is when <xref:System.Security.Cryptography.StrongNameSignatureInformation.IsValid%2A> is `false`.</span></span>  <span data-ttu-id="02309-111">Se a assinatura for válida, sempre haverá uma chave.</span><span class="sxs-lookup"><span data-stu-id="02309-111">If the signature is valid, there will always be a key.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerificationResult">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.SignatureVerificationResult VerificationResult { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.SignatureVerificationResult VerificationResult" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.StrongNameSignatureInformation.VerificationResult" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VerificationResult As SignatureVerificationResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::SignatureVerificationResult VerificationResult { System::Security::Cryptography::SignatureVerificationResult get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.SignatureVerificationResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="02309-112">Obtém os resultados da verificação da assinatura de nome forte.</span><span class="sxs-lookup"><span data-stu-id="02309-112">Gets the results of verifying the strong name signature.</span></span></summary>
        <value><span data-ttu-id="02309-113">Os códigos de resultado para verificação de assinatura.</span><span class="sxs-lookup"><span data-stu-id="02309-113">The result codes for signature verification.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02309-114">Essa propriedade e o <xref:System.Security.Cryptography.StrongNameSignatureInformation.HResult%2A> são duas maneiras de determinar se ocorreu um erro durante a verificação.</span><span class="sxs-lookup"><span data-stu-id="02309-114">This property and the <xref:System.Security.Cryptography.StrongNameSignatureInformation.HResult%2A> property are two ways to determine whether an error occurred during verification.</span></span> <span data-ttu-id="02309-115">Essa propriedade lista erros bem conhecidos que podem ocorrer.</span><span class="sxs-lookup"><span data-stu-id="02309-115">This property lists well-known errors that might occur.</span></span> <span data-ttu-id="02309-116">O <xref:System.Security.Cryptography.StrongNameSignatureInformation.HResult%2A> propriedade pode ser verificada se o erro não é coberto pelo <xref:System.Security.Cryptography.SignatureVerificationResult> enumeração.</span><span class="sxs-lookup"><span data-stu-id="02309-116">The <xref:System.Security.Cryptography.StrongNameSignatureInformation.HResult%2A> property can be checked if the error is not covered by the <xref:System.Security.Cryptography.SignatureVerificationResult> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>