<Type Name="CspParameters" FullName="System.Security.Cryptography.CspParameters">
  <Metadata><Meta Name="ms.openlocfilehash" Value="759007ce1dbbb6430d624fbf0203f907bc871d0b" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52226592" /></Metadata><TypeSignature Language="C#" Value="public sealed class CspParameters" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CspParameters extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.CspParameters" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CspParameters" />
  <TypeSignature Language="C++ CLI" Value="public ref class CspParameters sealed" />
  <TypeSignature Language="F#" Value="type CspParameters = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Contém parâmetros que são passados para o CSP (provedor de serviço criptográfico) que executa cálculos criptográficos. Essa classe não pode ser herdada.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Security.Cryptography.CspParameters> classe representa os parâmetros que você pode passar para as classes de criptografia gerenciadas que usam internamente a provedores de serviço criptográfico do Microsoft (CSPs) dos não gerenciados Microsoft CAPI (Cryptography API). Classes com nomes que terminam em "CryptoServiceProvider" são wrappers de código gerenciado para o CSP correspondente.  
  
 Use o <xref:System.Security.Cryptography.CspParameters> classe para fazer o seguinte:  
  
-   Especifique um CSP específico, passando o tipo de provedor para o <xref:System.Security.Cryptography.CspParameters.ProviderType> ou <xref:System.Security.Cryptography.CspParameters.ProviderName> propriedade.  Você também pode especificar um CSP usando uma sobrecarga do construtor.  
  
-   Crie um contêiner de chave onde você pode armazenar chaves criptográficas.  Contêineres de chave fornecem a maneira mais segura para persistir as chaves criptográficas e mantê-las secretas de terceiros mal-intencionados.  Para obter mais informações sobre como criar contêineres de chave, consulte [como: Store as chaves assimétricas em um contêiner de chave](~/docs/standard/security/how-to-store-asymmetric-keys-in-a-key-container.md).  
  
-   Especifique se deseja criar uma chave de assinatura assimétrica ou uma chave de troca assimétrica usando o <xref:System.Security.Cryptography.CspParameters.KeyNumber> propriedade.  
  
   
  
## Examples  
 O exemplo de código a seguir cria um contêiner de chave usando o <xref:System.Security.Cryptography.CspParameters> de classe e salva a chave no contêiner.  
  
 [!code-cpp[capikey#1](~/samples/snippets/cpp/VS_Snippets_CLR/capikey/CPP/capikey.cpp#1)]
 [!code-csharp[capikey#1](~/samples/snippets/csharp/VS_Snippets_CLR/capikey/CS/capikey.cs#1)]
 [!code-vb[capikey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/capikey/VB/capikey.vb#1)]  
  
 O seguinte exemplo de código usa o <xref:System.Security.Cryptography.CspParameters> classe para selecionar um provedor de serviço criptográfico do cartão inteligente.  Ele assina e verifica os dados usando o cartão inteligente.  
  
 [!code-cpp[Cryptography.SmartCardCSP#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.SmartCardCSP/CPP/Cryptography.SmartCardCSP.cpp#1)]
 [!code-csharp[Cryptography.SmartCardCSP#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.SmartCardCSP/CS/example.cs#1)]
 [!code-vb[Cryptography.SmartCardCSP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.SmartCardCSP/VB/example.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/security/cryptographic-services.md">Serviços criptográficos</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Cryptography.CspParameters" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CspParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CspParameters.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CspParameters();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Cryptography.CspParameters" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa forma de <xref:System.Security.Cryptography.CspParameters.%23ctor%2A> inicializa o <xref:System.Security.Cryptography.CspParameters.ProviderType> campo para um valor de `24`, que especifica o provedor PROV_RSA_AES.  Esse provedor padrão é compatível com o <xref:System.Security.Cryptography.Aes> algoritmo.  
  
 Para obter informações sobre outros tipos de provedor, consulte o <xref:System.Security.Cryptography.CspParameters.ProviderType> campo.  
  
   
  
## Examples  
 O exemplo de código a seguir cria um contêiner de chave usando o <xref:System.Security.Cryptography.CspParameters> de classe e salva a chave no contêiner.  
  
 [!code-cpp[capikey#1](~/samples/snippets/cpp/VS_Snippets_CLR/capikey/CPP/capikey.cpp#1)]
 [!code-csharp[capikey#1](~/samples/snippets/csharp/VS_Snippets_CLR/capikey/CS/capikey.cs#1)]
 [!code-vb[capikey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/capikey/VB/capikey.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">Serviços criptográficos</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CspParameters (int dwTypeIn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 dwTypeIn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CspParameters.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dwTypeIn As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CspParameters(int dwTypeIn);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.CspParameters : int -&gt; System.Security.Cryptography.CspParameters" Usage="new System.Security.Cryptography.CspParameters dwTypeIn" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dwTypeIn" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dwTypeIn">Um código de tipo de provedor que especifica o tipo de provedor a ser criado.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Cryptography.CspParameters" /> com o código de tipo de provedor especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Security.Cryptography.CspParameters.%23ctor%2A> construtor para especificar um tipo de provedor, passando um valor numérico que representa esse provedor.  Os valores numéricos que representam os tipos de provedor padrão são definidos no arquivo de cabeçalho Wincrypt:  
  
-   Para especificar um provedor compatível com o <xref:System.Security.Cryptography.RSA> algoritmo, passe um valor de `1` para o `dwTypeIn` parâmetro.  
  
-   Para especificar um provedor compatível com o <xref:System.Security.Cryptography.DSA> algoritmo, passe um valor de `13` para o `dwTypeIn` parâmetro.  
  
 Para obter informações sobre outros valores de tipo de provedor, consulte o <xref:System.Security.Cryptography.CspParameters.ProviderType> campo.  Para obter mais informações sobre os tipos de provedor padrão e seus comportamentos, consulte a documentação do Microsoft CAPI (Cryptography API) na biblioteca MSDN.  
  
   
  
## Examples  
 O exemplo de código a seguir cria um contêiner de chave usando o <xref:System.Security.Cryptography.CspParameters> de classe e salva a chave no contêiner.  
  
 [!code-cpp[capikey#1](~/samples/snippets/cpp/VS_Snippets_CLR/capikey/CPP/capikey.cpp#1)]
 [!code-csharp[capikey#1](~/samples/snippets/csharp/VS_Snippets_CLR/capikey/CS/capikey.cs#1)]
 [!code-vb[capikey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/capikey/VB/capikey.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">Serviços criptográficos</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CspParameters (int dwTypeIn, string strProviderNameIn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 dwTypeIn, string strProviderNameIn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dwTypeIn As Integer, strProviderNameIn As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CspParameters(int dwTypeIn, System::String ^ strProviderNameIn);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.CspParameters : int * string -&gt; System.Security.Cryptography.CspParameters" Usage="new System.Security.Cryptography.CspParameters (dwTypeIn, strProviderNameIn)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dwTypeIn" Type="System.Int32" />
        <Parameter Name="strProviderNameIn" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dwTypeIn">Um código de tipo de provedor que especifica o tipo de provedor a ser criado.</param>
        <param name="strProviderNameIn">Um nome de provedor.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Cryptography.CspParameters" /> com o nome e o código de tipo de provedor especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Security.Cryptography.CspParameters.%23ctor%2A> construtor para especificar um tipo de provedor e nome.  
  
 Especifique um tipo de provedor, passando um valor numérico que representa o tipo de provedor desejado.  Os valores numéricos que representam os tipos de provedor padrão são definidos no arquivo de cabeçalho Wincrypt:  
  
-   Para especificar um provedor compatível com o <xref:System.Security.Cryptography.RSA> algoritmo, passe um valor de `1` para o `dwTypeIn` parâmetro.  
  
-   Para especificar um provedor compatível com o <xref:System.Security.Cryptography.DSA> algoritmo, passe um valor de `13` para o `dwTypeIn` parâmetro.  
  
 Para obter informações sobre outros valores de tipo de provedor, consulte o <xref:System.Security.Cryptography.CspParameters.ProviderType> campo.  Para obter mais informações sobre os tipos de provedor padrão e seus comportamentos, consulte a documentação do Microsoft CAPI (Cryptography API) na biblioteca MSDN.  
  
   
  
## Examples  
 O seguinte exemplo de código usa o <xref:System.Security.Cryptography.CspParameters> classe para selecionar um provedor de serviço criptográfico do cartão inteligente.  Ele assina e verifica os dados usando o cartão inteligente.  
  
 [!code-cpp[Cryptography.SmartCardCSP#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.SmartCardCSP/CPP/Cryptography.SmartCardCSP.cpp#1)]
 [!code-csharp[Cryptography.SmartCardCSP#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.SmartCardCSP/CS/example.cs#1)]
 [!code-vb[Cryptography.SmartCardCSP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.SmartCardCSP/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">Serviços criptográficos</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CspParameters (int dwTypeIn, string strProviderNameIn, string strContainerNameIn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 dwTypeIn, string strProviderNameIn, string strContainerNameIn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dwTypeIn As Integer, strProviderNameIn As String, strContainerNameIn As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CspParameters(int dwTypeIn, System::String ^ strProviderNameIn, System::String ^ strContainerNameIn);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.CspParameters : int * string * string -&gt; System.Security.Cryptography.CspParameters" Usage="new System.Security.Cryptography.CspParameters (dwTypeIn, strProviderNameIn, strContainerNameIn)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dwTypeIn" Type="System.Int32" />
        <Parameter Name="strProviderNameIn" Type="System.String" />
        <Parameter Name="strContainerNameIn" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dwTypeIn">O código de tipo de provedor que especifica o tipo de provedor a ser criado.</param>
        <param name="strProviderNameIn">Um nome de provedor.</param>
        <param name="strContainerNameIn">Um nome de contêiner.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Cryptography.CspParameters" /> com o código do tipo de provedor e nome especificados e o nome do contêiner especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Security.Cryptography.CspParameters.%23ctor%2A> construtor para especificar um tipo de provedor, um nome de provedor e um nome de contêiner.  
  
 Você pode usar o nome do contêiner para recuperar uma chave dentro do contêiner.  
  
 Especifique um tipo de provedor, passando um valor numérico que representa o tipo de provedor desejado.  Os valores numéricos que representam os tipos de provedor padrão são definidos no arquivo de cabeçalho Wincrypt:  
  
-   Para especificar um provedor compatível com o <xref:System.Security.Cryptography.RSA> algoritmo, passe um valor de `1` para o `dwTypeIn` parâmetro.  
  
-   Para especificar um provedor compatível com o <xref:System.Security.Cryptography.DSA> algoritmo, passe um valor de `13` para o `dwTypeIn` parâmetro.  
  
 Para obter informações sobre outros valores de tipo de provedor, consulte o <xref:System.Security.Cryptography.CspParameters.ProviderType> campo.  Para obter mais informações sobre os tipos de provedor padrão e seus comportamentos, consulte a documentação do Microsoft CAPI (Cryptography API) na biblioteca MSDN.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">Serviços criptográficos</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CspParameters (int providerType, string providerName, string keyContainerName, System.Security.AccessControl.CryptoKeySecurity cryptoKeySecurity, IntPtr parentWindowHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 providerType, string providerName, string keyContainerName, class System.Security.AccessControl.CryptoKeySecurity cryptoKeySecurity, native int parentWindowHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String,System.Security.AccessControl.CryptoKeySecurity,System.IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CspParameters(int providerType, System::String ^ providerName, System::String ^ keyContainerName, System::Security::AccessControl::CryptoKeySecurity ^ cryptoKeySecurity, IntPtr parentWindowHandle);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.CspParameters : int * string * string * System.Security.AccessControl.CryptoKeySecurity * nativeint -&gt; System.Security.Cryptography.CspParameters" Usage="new System.Security.Cryptography.CspParameters (providerType, providerName, keyContainerName, cryptoKeySecurity, parentWindowHandle)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerType" Type="System.Int32" />
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="keyContainerName" Type="System.String" />
        <Parameter Name="cryptoKeySecurity" Type="System.Security.AccessControl.CryptoKeySecurity" />
        <Parameter Name="parentWindowHandle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="providerType">O código de tipo de provedor que especifica o tipo de provedor a ser criado.</param>
        <param name="providerName">Um nome de provedor.</param>
        <param name="keyContainerName">Um nome de contêiner.</param>
        <param name="cryptoKeySecurity">Um objeto que representa os direitos de acesso e as regras de auditoria do contêiner.</param>
        <param name="parentWindowHandle">Um identificador da janela pai de uma caixa de diálogo da senha do cartão inteligente.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Cryptography.CspParameters" /> usando um tipo de provedor, um nome de provedor, um nome de contêiner, informações de acesso e um identificador para uma caixa de diálogo de senha de cartão inteligente não gerenciado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode usar o nome do contêiner para recuperar uma chave dentro do contêiner.  
  
 Especifique um tipo de provedor, passando um valor numérico que representa o tipo de provedor desejado.  Os valores numéricos que representam os tipos de provedor padrão são definidos no arquivo de cabeçalho Wincrypt:  
  
-   Para especificar um provedor compatível com o <xref:System.Security.Cryptography.RSA> algoritmo, passe um valor de `1` para o `dwTypeIn` parâmetro.  
  
-   Para especificar um provedor compatível com o <xref:System.Security.Cryptography.DSA> algoritmo, passe um valor de `13` para o `dwTypeIn` parâmetro.  
  
 Para obter informações sobre outros valores de tipo de provedor, consulte o <xref:System.Security.Cryptography.CspParameters.ProviderType> campo.  Para obter mais informações sobre os tipos de provedor padrão e seus comportamentos, consulte a documentação do Microsoft CAPI (Cryptography API) na biblioteca MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CspParameters (int providerType, string providerName, string keyContainerName, System.Security.AccessControl.CryptoKeySecurity cryptoKeySecurity, System.Security.SecureString keyPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 providerType, string providerName, string keyContainerName, class System.Security.AccessControl.CryptoKeySecurity cryptoKeySecurity, class System.Security.SecureString keyPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String,System.Security.AccessControl.CryptoKeySecurity,System.Security.SecureString)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CspParameters(int providerType, System::String ^ providerName, System::String ^ keyContainerName, System::Security::AccessControl::CryptoKeySecurity ^ cryptoKeySecurity, System::Security::SecureString ^ keyPassword);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.CspParameters : int * string * string * System.Security.AccessControl.CryptoKeySecurity * System.Security.SecureString -&gt; System.Security.Cryptography.CspParameters" Usage="new System.Security.Cryptography.CspParameters (providerType, providerName, keyContainerName, cryptoKeySecurity, keyPassword)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerType" Type="System.Int32" />
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="keyContainerName" Type="System.String" />
        <Parameter Name="cryptoKeySecurity" Type="System.Security.AccessControl.CryptoKeySecurity" />
        <Parameter Name="keyPassword" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="providerType">O código de tipo de provedor que especifica o tipo de provedor a ser criado.</param>
        <param name="providerName">Um nome de provedor.</param>
        <param name="keyContainerName">Um nome de contêiner.</param>
        <param name="cryptoKeySecurity">Um objeto que representa os direitos de acesso e as regras de auditoria de um contêiner.</param>
        <param name="keyPassword">Uma senha associada a uma chave de cartão inteligente.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Cryptography.CspParameters" /> usando um tipo de provedor, um nome de provedor, um nome de contêiner, informações de acesso e uma senha associada a uma chave de cartão inteligente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode usar o nome do contêiner para recuperar uma chave dentro do contêiner.  
  
 Especifique um tipo de provedor, passando um valor numérico que representa o tipo de provedor desejado.  Os valores numéricos que representam os tipos de provedor padrão são definidos no arquivo de cabeçalho Wincrypt:  
  
-   Para especificar um provedor compatível com o <xref:System.Security.Cryptography.RSA> algoritmo, passe um valor de `1` para o `dwTypeIn` parâmetro.  
  
-   Para especificar um provedor compatível com o <xref:System.Security.Cryptography.DSA> algoritmo, passe um valor de `13` para o `dwTypeIn` parâmetro.  
  
 Para obter informações sobre outros valores de tipo de provedor, consulte o <xref:System.Security.Cryptography.CspParameters.ProviderType> campo.  Para obter mais informações sobre os tipos de provedor padrão e seus comportamentos, consulte a documentação do Microsoft CAPI (Cryptography API) na biblioteca MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CryptoKeySecurity">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.CryptoKeySecurity CryptoKeySecurity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.AccessControl.CryptoKeySecurity CryptoKeySecurity" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspParameters.CryptoKeySecurity" />
      <MemberSignature Language="VB.NET" Value="Public Property CryptoKeySecurity As CryptoKeySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::CryptoKeySecurity ^ CryptoKeySecurity { System::Security::AccessControl::CryptoKeySecurity ^ get(); void set(System::Security::AccessControl::CryptoKeySecurity ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CryptoKeySecurity : System.Security.AccessControl.CryptoKeySecurity with get, set" Usage="System.Security.Cryptography.CspParameters.CryptoKeySecurity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.CryptoKeySecurity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um objeto <see cref="T:System.Security.AccessControl.CryptoKeySecurity" /> que representa os direitos de acesso e as regras de auditoria de um contêiner.</summary>
        <value>Um objeto <see cref="T:System.Security.AccessControl.CryptoKeySecurity" /> que representa os direitos de acesso e as regras de auditoria de um contêiner.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Security.Cryptography.CspParameters.CryptoKeySecurity%2A> propriedade para especificar um <xref:System.Security.AccessControl.CryptoKeySecurity> listas de objeto que gerencia a criação de controle de acesso discricionário (DACLS) e listas de controle de acesso de sistema (SACL) para um contêiner.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CspProviderFlags Flags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.CspProviderFlags Flags" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspParameters.Flags" />
      <MemberSignature Language="VB.NET" Value="Public Property Flags As CspProviderFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::CspProviderFlags Flags { System::Security::Cryptography::CspProviderFlags get(); void set(System::Security::Cryptography::CspProviderFlags value); };" />
      <MemberSignature Language="F#" Value="member this.Flags : System.Security.Cryptography.CspProviderFlags with get, set" Usage="System.Security.Cryptography.CspParameters.Flags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CspProviderFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa os sinalizadores de <see cref="T:System.Security.Cryptography.CspParameters" /> que modificam o comportamento do CSP (provedor de serviços de criptografia).</summary>
        <value>Um valor de enumeração ou uma combinação bit a bit dos valores de enumeração.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">O valor não é um valor de enumeração válido.</exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">Serviços criptográficos</related>
      </Docs>
    </Member>
    <Member MemberName="KeyContainerName">
      <MemberSignature Language="C#" Value="public string KeyContainerName;" />
      <MemberSignature Language="ILAsm" Value=".field public string KeyContainerName" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CspParameters.KeyContainerName" />
      <MemberSignature Language="VB.NET" Value="Public KeyContainerName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ KeyContainerName;" />
      <MemberSignature Language="F#" Value="val mutable KeyContainerName : string" Usage="System.Security.Cryptography.CspParameters.KeyContainerName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa o nome do contêiner de chave de <see cref="T:System.Security.Cryptography.CspParameters" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Security.Cryptography.CspParameters.KeyContainerName> campo para especificar um nome para seu contêiner de chave.  Você pode usar o nome do contêiner para recuperar a chave persistente dentro do contêiner.  
  
 Para obter mais informações sobre como criar contêineres de chave, consulte [como: Store as chaves assimétricas em um contêiner de chave](~/docs/standard/security/how-to-store-asymmetric-keys-in-a-key-container.md).  
  
   
  
## Examples  
 O exemplo de código a seguir cria um contêiner de chave usando o <xref:System.Security.Cryptography.CspParameters> de classe e salva a chave no contêiner.  
  
 [!code-cpp[capikey#1](~/samples/snippets/cpp/VS_Snippets_CLR/capikey/CPP/capikey.cpp#1)]
 [!code-csharp[capikey#1](~/samples/snippets/csharp/VS_Snippets_CLR/capikey/CS/capikey.cs#1)]
 [!code-vb[capikey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/capikey/VB/capikey.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">Serviços criptográficos</related>
      </Docs>
    </Member>
    <Member MemberName="KeyNumber">
      <MemberSignature Language="C#" Value="public int KeyNumber;" />
      <MemberSignature Language="ILAsm" Value=".field public int32 KeyNumber" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CspParameters.KeyNumber" />
      <MemberSignature Language="VB.NET" Value="Public KeyNumber As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: int KeyNumber;" />
      <MemberSignature Language="F#" Value="val mutable KeyNumber : int" Usage="System.Security.Cryptography.CspParameters.KeyNumber" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Especifica se uma chave assimétrica é criada como uma chave de assinatura ou uma chave de troca.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Security.Cryptography.CspParameters.KeyNumber> campo inicializa o <xref:System.Security.Cryptography.CspKeyContainerInfo.KeyNumber%2A> propriedade quando você inicializa um <xref:System.Security.Cryptography.CspKeyContainerInfo> do objeto com um <xref:System.Security.Cryptography.CspParameters> objeto.  
  
 Uma chave de troca é um par de chaves assimétrico usado para criptografar as chaves de sessão para que eles podem ser com segurança armazenados e trocados com outros usuários.  Você pode usar o <xref:System.Security.Cryptography.KeyNumber.Exchange> valor (`1`) para especificar uma chave de troca.  Esse valor corresponde à `AT_KEYEXCHANGE` valor usado no não gerenciado Microsoft CAPI (API criptográfica).  
  
 Uma chave de assinatura é um par de chaves assimétricas usado para autenticar mensagens ou arquivos assinados digitalmente.  Você pode usar o <xref:System.Security.Cryptography.KeyNumber.Signature> valor (`2`) para especificar uma chave de assinatura.  Esse valor corresponde à `AT_SIGNATURE` valor usado em CAPI.  
  
 Por padrão, o <xref:System.Security.Cryptography.CspParameters.KeyNumber> campo especifica uma chave de troca.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Security.Cryptography.KeyNumber> enumeração para especificar um tipo de chave para um <xref:System.Security.Cryptography.RSACryptoServiceProvider> objeto.  
  
 [!code-cpp[Cryptography.KeyNumber#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.KeyNumber/cpp/sample.cpp#1)]
 [!code-csharp[Cryptography.KeyNumber#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.KeyNumber/CS/sample.cs#1)]
 [!code-vb[Cryptography.KeyNumber#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.KeyNumber/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">Serviços criptográficos</related>
      </Docs>
    </Member>
    <Member MemberName="KeyPassword">
      <MemberSignature Language="C#" Value="public System.Security.SecureString KeyPassword { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.SecureString KeyPassword" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspParameters.KeyPassword" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyPassword As SecureString" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::SecureString ^ KeyPassword { System::Security::SecureString ^ get(); void set(System::Security::SecureString ^ value); };" />
      <MemberSignature Language="F#" Value="member this.KeyPassword : System.Security.SecureString with get, set" Usage="System.Security.Cryptography.CspParameters.KeyPassword" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.SecureString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define uma senha associada a uma chave de cartão inteligente.</summary>
        <value>Uma senha associada a uma chave de cartão inteligente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Security.Cryptography.CspParameters.KeyPassword%2A> propriedade para fornecer uma senha para uma chave de cartão inteligente.  Quando você especifica uma senha usando essa propriedade, uma caixa de diálogo de senha não será apresentada ao usuário.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentWindowHandle">
      <MemberSignature Language="C#" Value="public IntPtr ParentWindowHandle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ParentWindowHandle" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspParameters.ParentWindowHandle" />
      <MemberSignature Language="VB.NET" Value="Public Property ParentWindowHandle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr ParentWindowHandle { IntPtr get(); void set(IntPtr value); };" />
      <MemberSignature Language="F#" Value="member this.ParentWindowHandle : nativeint with get, set" Usage="System.Security.Cryptography.CspParameters.ParentWindowHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um identificador da janela pai não gerenciada de uma caixa de diálogo da senha do cartão inteligente.</summary>
        <value>Um identificador para a janela pai para uma caixa de diálogo de senha do cartão inteligente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Security.Cryptography.CspParameters.ParentWindowHandle%2A> propriedade para especificar um identificador para a janela pai não gerenciada para uma caixa de diálogo de senha do cartão inteligente.  Quando você especifica um identificador usando essa propriedade, uma caixa de diálogo de senha do cartão inteligente será apresentada ao usuário.  
  
 Você pode evitar a apresentação de uma caixa de diálogo de senha do cartão inteligente, explicitamente especificando uma senha usando o <xref:System.Security.Cryptography.CspParameters.KeyPassword%2A> propriedade.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderName">
      <MemberSignature Language="C#" Value="public string ProviderName;" />
      <MemberSignature Language="ILAsm" Value=".field public string ProviderName" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CspParameters.ProviderName" />
      <MemberSignature Language="VB.NET" Value="Public ProviderName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ProviderName;" />
      <MemberSignature Language="F#" Value="val mutable ProviderName : string" Usage="System.Security.Cryptography.CspParameters.ProviderName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa o nome do provedor de <see cref="T:System.Security.Cryptography.CspParameters" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Consulte a documentação de Microsoft CAPI (Cryptography API) na biblioteca do MSDN para obter detalhes sobre nomes de provedor.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">Serviços criptográficos</related>
      </Docs>
    </Member>
    <Member MemberName="ProviderType">
      <MemberSignature Language="C#" Value="public int ProviderType;" />
      <MemberSignature Language="ILAsm" Value=".field public int32 ProviderType" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CspParameters.ProviderType" />
      <MemberSignature Language="VB.NET" Value="Public ProviderType As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: int ProviderType;" />
      <MemberSignature Language="F#" Value="val mutable ProviderType : int" Usage="System.Security.Cryptography.CspParameters.ProviderType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa o código de tipo de provedor de <see cref="T:System.Security.Cryptography.CspParameters" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Security.Cryptography.CspParameters.ProviderType> campo para especificar um tipo de provedor, passando um valor numérico que representa esse provedor.  Os valores numéricos que representam os tipos de provedor padrão são definidos no arquivo de cabeçalho Wincrypt:  
  
-   Para especificar um provedor compatível com o <xref:System.Security.Cryptography.RSA> da classe, passe um valor de `1`.  
  
-   Para especificar um provedor compatível com o <xref:System.Security.Cryptography.DSA> da classe, passe um valor de `13`.  
  
 A tabela a seguir lista os tipos de provedor e seus valores numéricos correspondentes definidas no arquivo de cabeçalho Wincrypt.  
  
|Tipo de provedor|Valor numérico|  
|-------------------|-------------------|  
|`PROV_RSA_FULL`|1|  
|`PROV_RSA_SIG`|2|  
|`PROV_DSS`|3|  
|`PROV_FORTEZZA`|4|  
|`PROV_MS_EXCHANGE`|5|  
|`PROV_SSL`|6|  
|`PROV_RSA_SCHANNEL`|12|  
|`PROV_DSS_DH`|13|  
|`PROV_EC_ECDSA_SIG`|14|  
|`PROV_EC_ECNRA_SIG`|15|  
|`PROV_EC_ECDSA_FULL`|16|  
|`PROV_EC_ECNRA_FULL`|17|  
|`PROV_DH_SCHANNEL`|18|  
|`PROV_SPYRUS_LYNKS`|20|  
|`PROV_RNG`|21|  
|`PROV_INTEL_SEC`|22|  
|`PROV_REPLACE_OWF`|23|  
|`PROV_RSA_AES`|24|  
  
 Para obter mais informações sobre os tipos de provedor padrão e seus comportamentos, consulte a documentação do Microsoft CAPI (Cryptography API) na biblioteca MSDN.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">Serviços criptográficos</related>
      </Docs>
    </Member>
  </Members>
</Type>