<Type Name="Rfc2898DeriveBytes" FullName="System.Security.Cryptography.Rfc2898DeriveBytes">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fe2954dbcd53683e9e6b09c8f6884b68f974a105" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58688274" /></Metadata><TypeSignature Language="C#" Value="public class Rfc2898DeriveBytes : System.Security.Cryptography.DeriveBytes" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Rfc2898DeriveBytes extends System.Security.Cryptography.DeriveBytes" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Rfc2898DeriveBytes" />
  <TypeSignature Language="VB.NET" Value="Public Class Rfc2898DeriveBytes&#xA;Inherits DeriveBytes" />
  <TypeSignature Language="C++ CLI" Value="public ref class Rfc2898DeriveBytes : System::Security::Cryptography::DeriveBytes" />
  <TypeSignature Language="F#" Value="type Rfc2898DeriveBytes = class&#xA;    inherit DeriveBytes" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.DeriveBytes</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e5029-101">Implementa funcionalidade de derivação de chave baseada em senha, PBKDF2, usando um gerador de número pseudoaleatório com base em <see cref="T:System.Security.Cryptography.HMACSHA1" />.</span><span class="sxs-lookup"><span data-stu-id="e5029-101">Implements password-based key derivation functionality, PBKDF2, by using a pseudo-random number generator based on <see cref="T:System.Security.Cryptography.HMACSHA1" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5029-102"><xref:System.Security.Cryptography.Rfc2898DeriveBytes> usa uma senha, um valor de sal e uma contagem de iteração e, em seguida, gera chaves por meio de chamadas para o <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> método.</span><span class="sxs-lookup"><span data-stu-id="e5029-102"><xref:System.Security.Cryptography.Rfc2898DeriveBytes> takes a password, a salt, and an iteration count, and then generates keys through calls to the <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> method.</span></span>  
  
 <span data-ttu-id="e5029-103">RFC 2898 inclui métodos para criar um chave e vetor de inicialização (IV) de uma senha e sal.</span><span class="sxs-lookup"><span data-stu-id="e5029-103">RFC 2898 includes methods for creating a key and initialization vector (IV) from a password and salt.</span></span> <span data-ttu-id="e5029-104">Você pode usar PBKDF2, uma função de derivação de chave baseada em senha, para derivar chaves usando uma função pseudoaleatória que permite que as chaves de tamanho praticamente ilimitado a ser gerado.</span><span class="sxs-lookup"><span data-stu-id="e5029-104">You can use PBKDF2, a password-based key derivation function, to derive keys using a pseudo-random function that allows keys of virtually unlimited length to be generated.</span></span> <span data-ttu-id="e5029-105">O <xref:System.Security.Cryptography.Rfc2898DeriveBytes> classe pode ser usada para gerar uma chave derivada de uma chave de base e outros parâmetros.</span><span class="sxs-lookup"><span data-stu-id="e5029-105">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class can be used to produce a derived key from a base key and other parameters.</span></span> <span data-ttu-id="e5029-106">Em uma função de derivação de chave baseada em senha, a chave de base é uma senha e os outros parâmetros são um valor de sal e uma contagem de iteração.</span><span class="sxs-lookup"><span data-stu-id="e5029-106">In a password-based key derivation function, the base key is a password and the other parameters are a salt value and an iteration count.</span></span>  
  
 <span data-ttu-id="e5029-107">Para obter mais informações sobre PBKDF2, consulte RFC 2898, "PKCS #5: Password-Based Cryptography Specification Version 2.0,"disponível na [para o site da Web de comentários de solicitação](https://go.microsoft.com/fwlink/?LinkID=37119).</span><span class="sxs-lookup"><span data-stu-id="e5029-107">For more information about PBKDF2, see RFC 2898, "PKCS #5: Password-Based Cryptography Specification Version 2.0," available on the [Request for Comments Web site](https://go.microsoft.com/fwlink/?LinkID=37119).</span></span> <span data-ttu-id="e5029-108">Consulte a seção 5.2, "PBKDF2," para obter detalhes completos.</span><span class="sxs-lookup"><span data-stu-id="e5029-108">See section 5.2, "PBKDF2," for complete details.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="e5029-109">Nunca embutir uma senha em seu código-fonte.</span><span class="sxs-lookup"><span data-stu-id="e5029-109">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="e5029-110">Senhas codificadas podem ser recuperadas de um assembly usando o [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), usando um editor hexadecimal ou, simplesmente abrindo o assembly em um editor de texto como Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="e5029-110">Hard-coded passwords can be retrieved from an assembly by using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), by using a hexadecimal editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e5029-111">O seguinte exemplo de código usa o <xref:System.Security.Cryptography.Rfc2898DeriveBytes> chaves de classe para criar dois idênticos para o <xref:System.Security.Cryptography.TripleDES> classe.</span><span class="sxs-lookup"><span data-stu-id="e5029-111">The following code example uses the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class to create two identical keys for the <xref:System.Security.Cryptography.TripleDES> class.</span></span>  <span data-ttu-id="e5029-112">Ele, em seguida, criptografa e descriptografa alguns dados usando as chaves.</span><span class="sxs-lookup"><span data-stu-id="e5029-112">It then encrypts and decrypts some data using the keys.</span></span>  
  
 [!code-cpp[rfc28981#1](~/samples/snippets/cpp/VS_Snippets_CLR/rfc28981/CPP/rfc28981.cpp#1)]
 [!code-csharp[rfc28981#1](~/samples/snippets/csharp/VS_Snippets_CLR/rfc28981/CS/rfc28981.cs#1)]
 [!code-vb[rfc28981#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/rfc28981/vb/rfc28981.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="e5029-113">Serviços criptográficos</span><span class="sxs-lookup"><span data-stu-id="e5029-113">Cryptographic Services</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e5029-114">Inicializa uma nova instância da classe <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" />.</span><span class="sxs-lookup"><span data-stu-id="e5029-114">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (string password, byte[] salt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string password, unsigned int8[] salt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As String, salt As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(System::String ^ password, cli::array &lt;System::Byte&gt; ^ salt);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Rfc2898DeriveBytes : string * byte[] -&gt; System.Security.Cryptography.Rfc2898DeriveBytes" Usage="new System.Security.Cryptography.Rfc2898DeriveBytes (password, salt)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="salt" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="password"><span data-ttu-id="e5029-115">A senha usada para derivar a chave.</span><span class="sxs-lookup"><span data-stu-id="e5029-115">The password used to derive the key.</span></span></param>
        <param name="salt"><span data-ttu-id="e5029-116">O sal da chave usado para derivar a chave.</span><span class="sxs-lookup"><span data-stu-id="e5029-116">The key salt used to derive the key.</span></span></param>
        <summary><span data-ttu-id="e5029-117">Inicializa uma nova instância da classe <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> usando uma senha e sal para derivar a chave.</span><span class="sxs-lookup"><span data-stu-id="e5029-117">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using a password and salt to derive the key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5029-118">O tamanho de salt deve ter 8 bytes ou maiores.</span><span class="sxs-lookup"><span data-stu-id="e5029-118">The salt size must be 8 bytes or larger.</span></span>  
  
 <span data-ttu-id="e5029-119">RFC 2898 inclui métodos para criar um chave e vetor de inicialização (IV) de uma senha e sal.</span><span class="sxs-lookup"><span data-stu-id="e5029-119">RFC 2898 includes methods for creating a key and initialization vector (IV) from a password and salt.</span></span> <span data-ttu-id="e5029-120">Você pode usar PBKDF2, uma função de derivação de chave baseada em senha, para derivar chaves usando uma função pseudoaleatória que permite que as chaves de tamanho praticamente ilimitado a ser gerado.</span><span class="sxs-lookup"><span data-stu-id="e5029-120">You can use PBKDF2, a password-based key derivation function, to derive keys using a pseudo-random function that allows keys of virtually unlimited length to be generated.</span></span> <span data-ttu-id="e5029-121">O <xref:System.Security.Cryptography.Rfc2898DeriveBytes> classe pode ser usada para gerar uma chave derivada de uma chave de base e outros parâmetros.</span><span class="sxs-lookup"><span data-stu-id="e5029-121">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class can be used to produce a derived key from a base key and other parameters.</span></span> <span data-ttu-id="e5029-122">Em uma função de derivação de chave baseada em senha, a chave de base é uma senha e os outros parâmetros são um valor de sal e uma contagem de iteração.</span><span class="sxs-lookup"><span data-stu-id="e5029-122">In a password-based key derivation function, the base key is a password and the other parameters are a salt value and an iteration count.</span></span>  
  
 <span data-ttu-id="e5029-123">Para obter mais informações sobre PBKDF2, consulte RFC 2898, "PKCS #5: Password-Based Cryptography Specification Version 2.0,"disponível na [para o site da Web de comentários de solicitação](https://go.microsoft.com/fwlink/?LinkID=37119).</span><span class="sxs-lookup"><span data-stu-id="e5029-123">For more information about PBKDF2, see RFC 2898, "PKCS #5: Password-Based Cryptography Specification Version 2.0," available on the [Request for Comments Web site](https://go.microsoft.com/fwlink/?LinkID=37119).</span></span> <span data-ttu-id="e5029-124">Consulte a seção 5.2, "PBKDF2," para obter detalhes completos.</span><span class="sxs-lookup"><span data-stu-id="e5029-124">See section 5.2, "PBKDF2," for complete details.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="e5029-125">Nunca embutir uma senha em seu código-fonte.</span><span class="sxs-lookup"><span data-stu-id="e5029-125">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="e5029-126">Senhas codificadas podem ser recuperadas de um assembly usando o [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), usando um editor hexadecimal ou, simplesmente abrindo o assembly em um editor de texto como Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="e5029-126">Hard-coded passwords can be retrieved from an assembly by using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), by using a hexadecimal editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e5029-127">O seguinte exemplo de código usa o <xref:System.Security.Cryptography.Rfc2898DeriveBytes> chaves de classe para criar dois idênticos para o <xref:System.Security.Cryptography.TripleDES> classe.</span><span class="sxs-lookup"><span data-stu-id="e5029-127">The following code example uses the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class to create two identical keys for the <xref:System.Security.Cryptography.TripleDES> class.</span></span>  <span data-ttu-id="e5029-128">Ele, em seguida, criptografa e descriptografa alguns dados usando as chaves.</span><span class="sxs-lookup"><span data-stu-id="e5029-128">It then encrypts and decrypts some data using the keys.</span></span>  
  
 [!code-cpp[rfc28981#1](~/samples/snippets/cpp/VS_Snippets_CLR/rfc28981/CPP/rfc28981.cpp#1)]
 [!code-csharp[rfc28981#1](~/samples/snippets/csharp/VS_Snippets_CLR/rfc28981/CS/rfc28981.cs#1)]
 [!code-vb[rfc28981#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/rfc28981/vb/rfc28981.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e5029-129">O tamanho de sal especificado é menor do que 8 bytes ou a contagem de iterações é menor que 1.</span><span class="sxs-lookup"><span data-stu-id="e5029-129">The specified salt size is smaller than 8 bytes or the iteration count is less than 1.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e5029-130">A senha ou o sal é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e5029-130">The password or salt is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="e5029-131">Serviços criptográficos</span><span class="sxs-lookup"><span data-stu-id="e5029-131">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (string password, int saltSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string password, int32 saltSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As String, saltSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(System::String ^ password, int saltSize);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Rfc2898DeriveBytes : string * int -&gt; System.Security.Cryptography.Rfc2898DeriveBytes" Usage="new System.Security.Cryptography.Rfc2898DeriveBytes (password, saltSize)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="saltSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="password"><span data-ttu-id="e5029-132">A senha usada para derivar a chave.</span><span class="sxs-lookup"><span data-stu-id="e5029-132">The password used to derive the key.</span></span></param>
        <param name="saltSize"><span data-ttu-id="e5029-133">O tamanho do sal aleatório a ser gerado pela classe.</span><span class="sxs-lookup"><span data-stu-id="e5029-133">The size of the random salt that you want the class to generate.</span></span></param>
        <summary><span data-ttu-id="e5029-134">Inicializa uma nova instância da classe <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> usando a senha e o tamanho salt para derivar a chave.</span><span class="sxs-lookup"><span data-stu-id="e5029-134">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using the password and salt size to derive the key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5029-135">O tamanho de salt deve ter 8 bytes ou maiores.</span><span class="sxs-lookup"><span data-stu-id="e5029-135">The salt size must be 8 bytes or larger.</span></span>  
  
 <span data-ttu-id="e5029-136">RFC 2898 inclui métodos para criar um chave e vetor de inicialização (IV) de uma senha e sal.</span><span class="sxs-lookup"><span data-stu-id="e5029-136">RFC 2898 includes methods for creating a key and initialization vector (IV) from a password and salt.</span></span> <span data-ttu-id="e5029-137">Você pode usar PBKDF2, uma função de derivação de chave baseada em senha, para derivar chaves usando uma função pseudoaleatória que permite que as chaves de tamanho praticamente ilimitado a ser gerado.</span><span class="sxs-lookup"><span data-stu-id="e5029-137">You can use PBKDF2, a password-based key derivation function, to derive keys using a pseudo-random function that allows keys of virtually unlimited length to be generated.</span></span> <span data-ttu-id="e5029-138">O <xref:System.Security.Cryptography.Rfc2898DeriveBytes> classe pode ser usada para gerar uma chave derivada de uma chave de base e outros parâmetros.</span><span class="sxs-lookup"><span data-stu-id="e5029-138">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class can be used to produce a derived key from a base key and other parameters.</span></span> <span data-ttu-id="e5029-139">Em uma função de derivação de chave baseada em senha, a chave de base é uma senha e os outros parâmetros são um valor de sal e uma contagem de iteração.</span><span class="sxs-lookup"><span data-stu-id="e5029-139">In a password-based key derivation function, the base key is a password and the other parameters are a salt value and an iteration count.</span></span>  
  
 <span data-ttu-id="e5029-140">Para obter mais informações sobre PBKDF2, consulte RFC 2898, "PKCS #5: Password-Based Cryptography Specification Version 2.0,"disponível na [para o site da Web de comentários de solicitação](https://go.microsoft.com/fwlink/?LinkID=37119).</span><span class="sxs-lookup"><span data-stu-id="e5029-140">For more information about PBKDF2, see RFC 2898, "PKCS #5: Password-Based Cryptography Specification Version 2.0," available on the [Request for Comments Web site](https://go.microsoft.com/fwlink/?LinkID=37119).</span></span> <span data-ttu-id="e5029-141">Consulte a seção 5.2, "PBKDF2," para obter detalhes completos.</span><span class="sxs-lookup"><span data-stu-id="e5029-141">See section 5.2, "PBKDF2," for complete details.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="e5029-142">Nunca embutir uma senha em seu código-fonte.</span><span class="sxs-lookup"><span data-stu-id="e5029-142">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="e5029-143">Senhas codificadas podem ser recuperadas de um assembly usando o [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), usando um editor hexadecimal ou, simplesmente abrindo o assembly em um editor de texto como Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="e5029-143">Hard-coded passwords can be retrieved from an assembly by using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), by using a hexadecimal editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e5029-144">O tamanho de sal especificado é menor do que 8 bytes.</span><span class="sxs-lookup"><span data-stu-id="e5029-144">The specified salt size is smaller than 8 bytes.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e5029-145">A senha ou o sal é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e5029-145">The password or salt is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="e5029-146">Serviços criptográficos</span><span class="sxs-lookup"><span data-stu-id="e5029-146">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (byte[] password, byte[] salt, int iterations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] password, unsigned int8[] salt, int32 iterations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As Byte(), salt As Byte(), iterations As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(cli::array &lt;System::Byte&gt; ^ password, cli::array &lt;System::Byte&gt; ^ salt, int iterations);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Rfc2898DeriveBytes : byte[] * byte[] * int -&gt; System.Security.Cryptography.Rfc2898DeriveBytes" Usage="new System.Security.Cryptography.Rfc2898DeriveBytes (password, salt, iterations)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="password" Type="System.Byte[]" />
        <Parameter Name="salt" Type="System.Byte[]" />
        <Parameter Name="iterations" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="password"><span data-ttu-id="e5029-147">A senha usada para derivar a chave.</span><span class="sxs-lookup"><span data-stu-id="e5029-147">The password used to derive the key.</span></span></param>
        <param name="salt"><span data-ttu-id="e5029-148">O sal da chave usado para derivar a chave.</span><span class="sxs-lookup"><span data-stu-id="e5029-148">The key salt used to derive the key.</span></span></param>
        <param name="iterations"><span data-ttu-id="e5029-149">O número de iterações para a operação.</span><span class="sxs-lookup"><span data-stu-id="e5029-149">The number of iterations for the operation.</span></span></param>
        <summary><span data-ttu-id="e5029-150">Inicializa uma nova instância da classe <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> usando uma senha, um sal e o número de iterações para derivar a chave.</span><span class="sxs-lookup"><span data-stu-id="e5029-150">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using a password, a salt, and number of iterations to derive the key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5029-151">O tamanho de salt deve ter 8 bytes ou maiores e a contagem de iterações deve ser maior que zero.</span><span class="sxs-lookup"><span data-stu-id="e5029-151">The salt size must be 8 bytes or larger and the iteration count must be greater than zero.</span></span> <span data-ttu-id="e5029-152">O número mínimo recomendado de iterações é 1000.</span><span class="sxs-lookup"><span data-stu-id="e5029-152">The minimum recommended number of iterations is 1000.</span></span>  
  
 <span data-ttu-id="e5029-153">RFC 2898 inclui métodos para criar um chave e vetor de inicialização (IV) de uma senha e sal.</span><span class="sxs-lookup"><span data-stu-id="e5029-153">RFC 2898 includes methods for creating a key and initialization vector (IV) from a password and salt.</span></span> <span data-ttu-id="e5029-154">Você pode usar PBKDF2, uma função de derivação de chave baseada em senha, para derivar chaves usando uma função pseudoaleatória que permite que as chaves de tamanho praticamente ilimitado a ser gerado.</span><span class="sxs-lookup"><span data-stu-id="e5029-154">You can use PBKDF2, a password-based key derivation function, to derive keys using a pseudo-random function that allows keys of virtually unlimited length to be generated.</span></span> <span data-ttu-id="e5029-155">O <xref:System.Security.Cryptography.Rfc2898DeriveBytes> classe pode ser usada para gerar uma chave derivada de uma chave de base e outros parâmetros.</span><span class="sxs-lookup"><span data-stu-id="e5029-155">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class can be used to produce a derived key from a base key and other parameters.</span></span> <span data-ttu-id="e5029-156">Em uma função de derivação de chave baseada em senha, a chave de base é uma senha e os outros parâmetros são um valor de sal e uma contagem de iteração.</span><span class="sxs-lookup"><span data-stu-id="e5029-156">In a password-based key derivation function, the base key is a password and the other parameters are a salt value and an iteration count.</span></span>  
  
 <span data-ttu-id="e5029-157">Para obter mais informações sobre PBKDF2, consulte RFC 2898, "PKCS #5: Password-Based Cryptography Specification Version 2.0,"disponível na [para o site da Web de comentários de solicitação](https://go.microsoft.com/fwlink/?LinkID=37119).</span><span class="sxs-lookup"><span data-stu-id="e5029-157">For more information about PBKDF2, see RFC 2898, "PKCS #5: Password-Based Cryptography Specification Version 2.0," available on the [Request for Comments Web site](https://go.microsoft.com/fwlink/?LinkID=37119).</span></span> <span data-ttu-id="e5029-158">Consulte a seção 5.2, "PBKDF2," para obter detalhes completos.</span><span class="sxs-lookup"><span data-stu-id="e5029-158">See section 5.2, "PBKDF2," for complete details.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="e5029-159">Nunca embutir uma senha em seu código-fonte.</span><span class="sxs-lookup"><span data-stu-id="e5029-159">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="e5029-160">Senhas codificadas podem ser recuperadas de um assembly usando o [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), usando um editor hexadecimal ou, simplesmente abrindo o assembly em um editor de texto como Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="e5029-160">Hard-coded passwords can be retrieved from an assembly by using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), by using a hexadecimal editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e5029-161">O tamanho de sal especificado é menor do que 8 bytes ou a contagem de iterações é menor que 1.</span><span class="sxs-lookup"><span data-stu-id="e5029-161">The specified salt size is smaller than 8 bytes or the iteration count is less than 1.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e5029-162">A senha ou o sal é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e5029-162">The password or salt is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (string password, byte[] salt, int iterations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string password, unsigned int8[] salt, int32 iterations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As String, salt As Byte(), iterations As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(System::String ^ password, cli::array &lt;System::Byte&gt; ^ salt, int iterations);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Rfc2898DeriveBytes : string * byte[] * int -&gt; System.Security.Cryptography.Rfc2898DeriveBytes" Usage="new System.Security.Cryptography.Rfc2898DeriveBytes (password, salt, iterations)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="salt" Type="System.Byte[]" />
        <Parameter Name="iterations" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="password"><span data-ttu-id="e5029-163">A senha usada para derivar a chave.</span><span class="sxs-lookup"><span data-stu-id="e5029-163">The password used to derive the key.</span></span></param>
        <param name="salt"><span data-ttu-id="e5029-164">O sal da chave usado para derivar a chave.</span><span class="sxs-lookup"><span data-stu-id="e5029-164">The key salt used to derive the key.</span></span></param>
        <param name="iterations"><span data-ttu-id="e5029-165">O número de iterações para a operação.</span><span class="sxs-lookup"><span data-stu-id="e5029-165">The number of iterations for the operation.</span></span></param>
        <summary><span data-ttu-id="e5029-166">Inicializa uma nova instância da classe <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> usando uma senha, um sal e o número de iterações para derivar a chave.</span><span class="sxs-lookup"><span data-stu-id="e5029-166">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using a password, a salt, and number of iterations to derive the key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5029-167">O tamanho de salt deve ter 8 bytes ou maiores e a contagem de iterações deve ser maior que zero.</span><span class="sxs-lookup"><span data-stu-id="e5029-167">The salt size must be 8 bytes or larger and the iteration count must be greater than zero.</span></span> <span data-ttu-id="e5029-168">O número mínimo recomendado de iterações é 1000.</span><span class="sxs-lookup"><span data-stu-id="e5029-168">The minimum recommended number of iterations is 1000.</span></span>  
  
 <span data-ttu-id="e5029-169">RFC 2898 inclui métodos para criar um chave e vetor de inicialização (IV) de uma senha e sal.</span><span class="sxs-lookup"><span data-stu-id="e5029-169">RFC 2898 includes methods for creating a key and initialization vector (IV) from a password and salt.</span></span> <span data-ttu-id="e5029-170">Você pode usar PBKDF2, uma função de derivação de chave baseada em senha, para derivar chaves usando uma função pseudoaleatória que permite que as chaves de tamanho praticamente ilimitado a ser gerado.</span><span class="sxs-lookup"><span data-stu-id="e5029-170">You can use PBKDF2, a password-based key derivation function, to derive keys using a pseudo-random function that allows keys of virtually unlimited length to be generated.</span></span> <span data-ttu-id="e5029-171">O <xref:System.Security.Cryptography.Rfc2898DeriveBytes> classe pode ser usada para gerar uma chave derivada de uma chave de base e outros parâmetros.</span><span class="sxs-lookup"><span data-stu-id="e5029-171">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class can be used to produce a derived key from a base key and other parameters.</span></span> <span data-ttu-id="e5029-172">Em uma função de derivação de chave baseada em senha, a chave de base é uma senha e os outros parâmetros são um valor de sal e uma contagem de iteração.</span><span class="sxs-lookup"><span data-stu-id="e5029-172">In a password-based key derivation function, the base key is a password and the other parameters are a salt value and an iteration count.</span></span>  
  
 <span data-ttu-id="e5029-173">Para obter mais informações sobre PBKDF2, consulte RFC 2898, "PKCS #5: Password-Based Cryptography Specification Version 2.0,"disponível na [para o site da Web de comentários de solicitação](https://go.microsoft.com/fwlink/?LinkID=37119).</span><span class="sxs-lookup"><span data-stu-id="e5029-173">For more information about PBKDF2, see RFC 2898, "PKCS #5: Password-Based Cryptography Specification Version 2.0," available on the [Request for Comments Web site](https://go.microsoft.com/fwlink/?LinkID=37119).</span></span> <span data-ttu-id="e5029-174">Consulte a seção 5.2, "PBKDF2," para obter detalhes completos.</span><span class="sxs-lookup"><span data-stu-id="e5029-174">See section 5.2, "PBKDF2," for complete details.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="e5029-175">Nunca embutir uma senha em seu código-fonte.</span><span class="sxs-lookup"><span data-stu-id="e5029-175">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="e5029-176">Senhas codificadas podem ser recuperadas de um assembly usando o [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), usando um editor hexadecimal ou, simplesmente abrindo o assembly em um editor de texto como Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="e5029-176">Hard-coded passwords can be retrieved from an assembly by using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), by using a hexadecimal editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e5029-177">O seguinte exemplo de código usa o <xref:System.Security.Cryptography.Rfc2898DeriveBytes> chaves de classe para criar dois idênticos para o <xref:System.Security.Cryptography.TripleDES> classe.</span><span class="sxs-lookup"><span data-stu-id="e5029-177">The following code example uses the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class to create two identical keys for the <xref:System.Security.Cryptography.TripleDES> class.</span></span>  <span data-ttu-id="e5029-178">Ele, em seguida, criptografa e descriptografa alguns dados usando as chaves.</span><span class="sxs-lookup"><span data-stu-id="e5029-178">It then encrypts and decrypts some data using the keys.</span></span>  
  
 [!code-cpp[rfc28981#1](~/samples/snippets/cpp/VS_Snippets_CLR/rfc28981/CPP/rfc28981.cpp#1)]
 [!code-csharp[rfc28981#1](~/samples/snippets/csharp/VS_Snippets_CLR/rfc28981/CS/rfc28981.cs#1)]
 [!code-vb[rfc28981#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/rfc28981/vb/rfc28981.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e5029-179">O tamanho de sal especificado é menor do que 8 bytes ou a contagem de iterações é menor que 1.</span><span class="sxs-lookup"><span data-stu-id="e5029-179">The specified salt size is smaller than 8 bytes or the iteration count is less than 1.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e5029-180">A senha ou o sal é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e5029-180">The password or salt is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="e5029-181">Serviços criptográficos</span><span class="sxs-lookup"><span data-stu-id="e5029-181">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (string password, int saltSize, int iterations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string password, int32 saltSize, int32 iterations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As String, saltSize As Integer, iterations As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(System::String ^ password, int saltSize, int iterations);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Rfc2898DeriveBytes : string * int * int -&gt; System.Security.Cryptography.Rfc2898DeriveBytes" Usage="new System.Security.Cryptography.Rfc2898DeriveBytes (password, saltSize, iterations)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="saltSize" Type="System.Int32" />
        <Parameter Name="iterations" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="password"><span data-ttu-id="e5029-182">A senha usada para derivar a chave.</span><span class="sxs-lookup"><span data-stu-id="e5029-182">The password used to derive the key.</span></span></param>
        <param name="saltSize"><span data-ttu-id="e5029-183">O tamanho do sal aleatório a ser gerado pela classe.</span><span class="sxs-lookup"><span data-stu-id="e5029-183">The size of the random salt that you want the class to generate.</span></span></param>
        <param name="iterations"><span data-ttu-id="e5029-184">O número de iterações para a operação.</span><span class="sxs-lookup"><span data-stu-id="e5029-184">The number of iterations for the operation.</span></span></param>
        <summary><span data-ttu-id="e5029-185">Inicializa uma nova instância da classe <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> usando uma senha, um tamanho salt e o número de iterações para derivar a chave.</span><span class="sxs-lookup"><span data-stu-id="e5029-185">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using a password, a salt size, and number of iterations to derive the key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5029-186">O tamanho de salt deve ter 8 bytes ou maiores e a contagem de iterações deve ser maior que zero.</span><span class="sxs-lookup"><span data-stu-id="e5029-186">The salt size must be 8 bytes or larger and the iteration count must be greater than zero.</span></span> <span data-ttu-id="e5029-187">O número mínimo recomendado de iterações é 1000.</span><span class="sxs-lookup"><span data-stu-id="e5029-187">The minimum recommended number of iterations is 1000.</span></span>  
  
 <span data-ttu-id="e5029-188">RFC 2898 inclui métodos para criar um chave e vetor de inicialização (IV) de uma senha e sal.</span><span class="sxs-lookup"><span data-stu-id="e5029-188">RFC 2898 includes methods for creating a key and initialization vector (IV) from a password and salt.</span></span> <span data-ttu-id="e5029-189">Você pode usar PBKDF2, uma função de derivação de chave baseada em senha, para derivar chaves usando uma função pseudoaleatória que permite que as chaves de tamanho praticamente ilimitado a ser gerado.</span><span class="sxs-lookup"><span data-stu-id="e5029-189">You can use PBKDF2, a password-based key derivation function, to derive keys using a pseudo-random function that allows keys of virtually unlimited length to be generated.</span></span> <span data-ttu-id="e5029-190">O <xref:System.Security.Cryptography.Rfc2898DeriveBytes> classe pode ser usada para gerar uma chave derivada de uma chave de base e outros parâmetros.</span><span class="sxs-lookup"><span data-stu-id="e5029-190">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class can be used to produce a derived key from a base key and other parameters.</span></span> <span data-ttu-id="e5029-191">Em uma função de derivação de chave baseada em senha, a chave de base é uma senha e os outros parâmetros são um valor de sal e uma contagem de iteração.</span><span class="sxs-lookup"><span data-stu-id="e5029-191">In a password-based key derivation function, the base key is a password and the other parameters are a salt value and an iteration count.</span></span>  
  
 <span data-ttu-id="e5029-192">Para obter mais informações sobre PBKDF2, consulte RFC 2898, "PKCS n º 5: Password-Based Cryptography Specification Version 2.0,"disponível na [para o site da Web de comentários de solicitação](https://go.microsoft.com/fwlink/?LinkID=37119).</span><span class="sxs-lookup"><span data-stu-id="e5029-192">For more information on PBKDF2, see RFC 2898,"PKCS #5: Password-Based Cryptography Specification Version 2.0," available on the [Request for Comments Web site](https://go.microsoft.com/fwlink/?LinkID=37119).</span></span> <span data-ttu-id="e5029-193">Consulte a seção 5.2, "PBKDF2," para obter detalhes completos.</span><span class="sxs-lookup"><span data-stu-id="e5029-193">See section 5.2, "PBKDF2," for complete details.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="e5029-194">Nunca embutir uma senha em seu código-fonte.</span><span class="sxs-lookup"><span data-stu-id="e5029-194">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="e5029-195">Senhas codificadas podem ser recuperadas de um assembly usando o [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), usando um editor hexadecimal ou, simplesmente abrindo o assembly em um editor de texto como Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="e5029-195">Hard-coded passwords can be retrieved from an assembly by using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), by using a hexadecimal editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e5029-196">O tamanho de sal especificado é menor do que 8 bytes ou a contagem de iterações é menor que 1.</span><span class="sxs-lookup"><span data-stu-id="e5029-196">The specified salt size is smaller than 8 bytes or the iteration count is less than 1.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e5029-197">A senha ou o sal é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e5029-197">The password or salt is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e5029-198"><paramref name="iterations" /> está fora do intervalo.</span><span class="sxs-lookup"><span data-stu-id="e5029-198"><paramref name="iterations" /> is out of range.</span></span> <span data-ttu-id="e5029-199">Esse parâmetro requer um número não negativo.</span><span class="sxs-lookup"><span data-stu-id="e5029-199">This parameter requires a non-negative number.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="e5029-200">Serviços criptográficos</span><span class="sxs-lookup"><span data-stu-id="e5029-200">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (byte[] password, byte[] salt, int iterations, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] password, unsigned int8[] salt, int32 iterations, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As Byte(), salt As Byte(), iterations As Integer, hashAlgorithm As HashAlgorithmName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(cli::array &lt;System::Byte&gt; ^ password, cli::array &lt;System::Byte&gt; ^ salt, int iterations, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Rfc2898DeriveBytes : byte[] * byte[] * int * System.Security.Cryptography.HashAlgorithmName -&gt; System.Security.Cryptography.Rfc2898DeriveBytes" Usage="new System.Security.Cryptography.Rfc2898DeriveBytes (password, salt, iterations, hashAlgorithm)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="password" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
        <Parameter Name="salt" Type="System.Byte[]" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
        <Parameter Name="iterations" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="password"><span data-ttu-id="e5029-201">A senha a ser usada para derivar a chave.</span><span class="sxs-lookup"><span data-stu-id="e5029-201">The password to use to derive the key.</span></span></param>
        <param name="salt"><span data-ttu-id="e5029-202">O sal da chave a ser usado para derivar a chave.</span><span class="sxs-lookup"><span data-stu-id="e5029-202">The key salt to use to derive the key.</span></span></param>
        <param name="iterations"><span data-ttu-id="e5029-203">O número de iterações para a operação.</span><span class="sxs-lookup"><span data-stu-id="e5029-203">The number of iterations for the operation.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="e5029-204">O algoritmo de hash a ser usado para derivar a chave.</span><span class="sxs-lookup"><span data-stu-id="e5029-204">The hash algorithm to use to derive the key.</span></span></param>
        <summary><span data-ttu-id="e5029-205">Inicializa uma nova instância da classe <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> usando a senha especificada, o sal, o número de iterações e o nome do algoritmo de hash para derivar a chave.</span><span class="sxs-lookup"><span data-stu-id="e5029-205">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using the specified password, salt, number of iterations and the hash algorithm name to derive the key.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e5029-206"><paramref name="saltSize" /> é menor que zero.</span><span class="sxs-lookup"><span data-stu-id="e5029-206"><paramref name="saltSize" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e5029-207">A propriedade <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> de <paramref name="hashAlgorithm" /> é <see langword="null" /> ou <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="e5029-207">The <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> property of <paramref name="hashAlgorithm" /> is either <see langword="null" /> or <see cref="F:System.String.Empty" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="e5029-208">O nome do algoritmo de hash é inválido.</span><span class="sxs-lookup"><span data-stu-id="e5029-208">Hash algorithm name is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (string password, byte[] salt, int iterations, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string password, unsigned int8[] salt, int32 iterations, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As String, salt As Byte(), iterations As Integer, hashAlgorithm As HashAlgorithmName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(System::String ^ password, cli::array &lt;System::Byte&gt; ^ salt, int iterations, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Rfc2898DeriveBytes : string * byte[] * int * System.Security.Cryptography.HashAlgorithmName -&gt; System.Security.Cryptography.Rfc2898DeriveBytes" Usage="new System.Security.Cryptography.Rfc2898DeriveBytes (password, salt, iterations, hashAlgorithm)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="password" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
        <Parameter Name="salt" Type="System.Byte[]" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
        <Parameter Name="iterations" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="password"><span data-ttu-id="e5029-209">A senha a ser usada para derivar a chave.</span><span class="sxs-lookup"><span data-stu-id="e5029-209">The password to use to derive the key.</span></span></param>
        <param name="salt"><span data-ttu-id="e5029-210">O sal da chave a ser usado para derivar a chave.</span><span class="sxs-lookup"><span data-stu-id="e5029-210">The key salt to use to derive the key.</span></span></param>
        <param name="iterations"><span data-ttu-id="e5029-211">O número de iterações para a operação.</span><span class="sxs-lookup"><span data-stu-id="e5029-211">The number of iterations for the operation.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="e5029-212">O algoritmo de hash a ser usado para derivar a chave.</span><span class="sxs-lookup"><span data-stu-id="e5029-212">The hash algorithm to use to derive the key.</span></span></param>
        <summary><span data-ttu-id="e5029-213">Inicializa uma nova instância da classe <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> usando a senha especificada, o sal, o número de iterações e o nome do algoritmo de hash para derivar a chave.</span><span class="sxs-lookup"><span data-stu-id="e5029-213">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using the specified password, salt, number of iterations and the hash algorithm name to derive the key.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e5029-214">A propriedade <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> de <paramref name="hashAlgorithm" /> é <see langword="null" /> ou <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="e5029-214">The <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> property of <paramref name="hashAlgorithm" /> is either <see langword="null" /> or <see cref="F:System.String.Empty" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="e5029-215">O nome do algoritmo de hash é inválido.</span><span class="sxs-lookup"><span data-stu-id="e5029-215">Hash algorithm name is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (string password, int saltSize, int iterations, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string password, int32 saltSize, int32 iterations, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As String, saltSize As Integer, iterations As Integer, hashAlgorithm As HashAlgorithmName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(System::String ^ password, int saltSize, int iterations, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Rfc2898DeriveBytes : string * int * int * System.Security.Cryptography.HashAlgorithmName -&gt; System.Security.Cryptography.Rfc2898DeriveBytes" Usage="new System.Security.Cryptography.Rfc2898DeriveBytes (password, saltSize, iterations, hashAlgorithm)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="password" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
        <Parameter Name="saltSize" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
        <Parameter Name="iterations" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="password"><span data-ttu-id="e5029-216">A senha a ser usada para derivar a chave.</span><span class="sxs-lookup"><span data-stu-id="e5029-216">The password to use to derive the key.</span></span></param>
        <param name="saltSize"><span data-ttu-id="e5029-217">O tamanho do sal aleatório a ser gerado pela classe.</span><span class="sxs-lookup"><span data-stu-id="e5029-217">The size of the random salt that you want the class to generate.</span></span></param>
        <param name="iterations"><span data-ttu-id="e5029-218">O número de iterações para a operação.</span><span class="sxs-lookup"><span data-stu-id="e5029-218">The number of iterations for the operation.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="e5029-219">O algoritmo de hash a ser usado para derivar a chave.</span><span class="sxs-lookup"><span data-stu-id="e5029-219">The hash algorithm to use to derive the key.</span></span></param>
        <summary><span data-ttu-id="e5029-220">Inicializa uma nova instância da classe <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> usando a senha especificada, o número do sal, o número de iterações e o nome do algoritmo de hash para derivar a chave.</span><span class="sxs-lookup"><span data-stu-id="e5029-220">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using the specified password, salt size, number of iterations and the hash algorithm name to derive the key.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e5029-221"><paramref name="saltSize" /> é menor que zero.</span><span class="sxs-lookup"><span data-stu-id="e5029-221"><paramref name="saltSize" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e5029-222">A propriedade <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> de <paramref name="hashAlgorithm" /> é <see langword="null" /> ou <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="e5029-222">The <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> property of <paramref name="hashAlgorithm" /> is either <see langword="null" /> or <see cref="F:System.String.Empty" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="e5029-223">O nome do algoritmo de hash é inválido.</span><span class="sxs-lookup"><span data-stu-id="e5029-223">Hash algorithm name is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CryptDeriveKey">
      <MemberSignature Language="C#" Value="public byte[] CryptDeriveKey (string algname, string alghashname, int keySize, byte[] rgbIV);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] CryptDeriveKey(string algname, string alghashname, int32 keySize, unsigned int8[] rgbIV) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function CryptDeriveKey (algname As String, alghashname As String, keySize As Integer, rgbIV As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ CryptDeriveKey(System::String ^ algname, System::String ^ alghashname, int keySize, cli::array &lt;System::Byte&gt; ^ rgbIV);" />
      <MemberSignature Language="F#" Value="member this.CryptDeriveKey : string * string * int * byte[] -&gt; byte[]" Usage="rfc2898DeriveBytes.CryptDeriveKey (algname, alghashname, keySize, rgbIV)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algname" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="alghashname" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="keySize" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="rgbIV" Type="System.Byte[]" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="algname"><span data-ttu-id="e5029-224">O nome do algoritmo para o qual a chave será derivada.</span><span class="sxs-lookup"><span data-stu-id="e5029-224">The algorithm name for which to derive the key.</span></span></param>
        <param name="alghashname"><span data-ttu-id="e5029-225">O nome do algoritmo de hash a ser usado para derivar a chave.</span><span class="sxs-lookup"><span data-stu-id="e5029-225">The hash algorithm name to use to derive the key.</span></span></param>
        <param name="keySize"><span data-ttu-id="e5029-226">O tamanho da chave, em bits, a ser derivada.</span><span class="sxs-lookup"><span data-stu-id="e5029-226">The size of the key, in bits, to derive.</span></span></param>
        <param name="rgbIV"><span data-ttu-id="e5029-227">O IV (vetor de inicialização) a ser usado para derivar a chave.</span><span class="sxs-lookup"><span data-stu-id="e5029-227">The initialization vector (IV) to use to derive the key.</span></span></param>
        <summary><span data-ttu-id="e5029-228">Deriva uma chave de criptografia do objeto <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" />.</span><span class="sxs-lookup"><span data-stu-id="e5029-228">Derives a cryptographic key from the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> object.</span></span></summary>
        <returns><span data-ttu-id="e5029-229">A chave derivada.</span><span class="sxs-lookup"><span data-stu-id="e5029-229">The derived key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5029-230">Essa função é um wrapper para a função de API de criptografia CryptDeriveKey() e tem como objetivo oferecer interoperabilidade com aplicativos usando a API de criptografia.</span><span class="sxs-lookup"><span data-stu-id="e5029-230">This function is a wrapper for the Crypto API function CryptDeriveKey(), and is intended to offer interoperability with applications using the Crypto API.</span></span>  
  
 <span data-ttu-id="e5029-231">Se o `keySize` parâmetro for definido como bits 0, o tamanho da chave padrão para o algoritmo especificado é usado.</span><span class="sxs-lookup"><span data-stu-id="e5029-231">If the `keySize` parameter is set to 0 bits, the default key size for the specified algorithm is used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="e5029-232">O parâmetro <paramref name="keySize" /> está incorreto.</span><span class="sxs-lookup"><span data-stu-id="e5029-232">The <paramref name="keySize" /> parameter is incorrect.</span></span>  
  
<span data-ttu-id="e5029-233">- ou -</span><span class="sxs-lookup"><span data-stu-id="e5029-233">-or-</span></span> 
<span data-ttu-id="e5029-234">O CSP (provedor de serviços de criptografia) não pode ser adquirido.</span><span class="sxs-lookup"><span data-stu-id="e5029-234">The cryptographic service provider (CSP) cannot be acquired.</span></span>  
  
<span data-ttu-id="e5029-235">- ou -</span><span class="sxs-lookup"><span data-stu-id="e5029-235">-or-</span></span> 
<span data-ttu-id="e5029-236">O parâmetro <paramref name="algname" /> não é um nome de algoritmo válido.</span><span class="sxs-lookup"><span data-stu-id="e5029-236">The <paramref name="algname" /> parameter is not a valid algorithm name.</span></span>  
  
<span data-ttu-id="e5029-237">- ou -</span><span class="sxs-lookup"><span data-stu-id="e5029-237">-or-</span></span> 
<span data-ttu-id="e5029-238">O parâmetro <paramref name="alghashname" /> não é um nome de algoritmo de hash válido.</span><span class="sxs-lookup"><span data-stu-id="e5029-238">The <paramref name="alghashname" /> parameter is not a valid hash algorithm name.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="rfc2898DeriveBytes.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="e5029-239"><see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</span><span class="sxs-lookup"><span data-stu-id="e5029-239"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="e5029-240">Libera os recursos não gerenciados usados pela classe <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> e, opcionalmente, libera os recursos gerenciados.</span><span class="sxs-lookup"><span data-stu-id="e5029-240">Releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5029-241">Este método é chamado pelo método público `Dispose()` e pelo método `Finalize`.</span><span class="sxs-lookup"><span data-stu-id="e5029-241">This method is called by the public `Dispose()` method and the `Finalize` method.</span></span> <span data-ttu-id="e5029-242">`Dispose()` invoca o método `Dispose(Boolean)` protegido com o parâmetro `disposing` definido como `true`.</span><span class="sxs-lookup"><span data-stu-id="e5029-242">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="e5029-243">`Finalize` invoca `Dispose` com `disposing` definido como `false`.</span><span class="sxs-lookup"><span data-stu-id="e5029-243">`Finalize` invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="e5029-244">Quando o `disposing` parâmetro é `true`, esse método libera todos os recursos mantidos por qualquer objeto gerenciado que este <xref:System.Security.Cryptography.Rfc2898DeriveBytes> referências.</span><span class="sxs-lookup"><span data-stu-id="e5029-244">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.Rfc2898DeriveBytes> references.</span></span> <span data-ttu-id="e5029-245">Este método invoca o método `Dispose()` de cada objeto referenciado.</span><span class="sxs-lookup"><span data-stu-id="e5029-245">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="e5029-246">
            <see langword="Dispose" /> pode ser chamado várias vezes por outros objetos.</span><span class="sxs-lookup"><span data-stu-id="e5029-246">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="e5029-247">Ao substituir <see langword="Dispose(Boolean)" />, tenha cuidado para referenciar objetos que tenham sido descartados anteriormente em uma chamada anterior para não <see langword="Dispose" />.</span><span class="sxs-lookup"><span data-stu-id="e5029-247">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="e5029-248">Para obter mais informações sobre como implementar <see langword="Dispose(Boolean)" />, consulte [implementando um método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="e5029-248">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="e5029-249">Para obter mais informações sobre <see langword="Dispose" /> e <see langword="Finalize" />, consulte [limpeza de recursos não gerenciados](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="e5029-249">For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override byte[] GetBytes (int cb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] GetBytes(int32 cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (cb As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ GetBytes(int cb);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : int -&gt; byte[]" Usage="rfc2898DeriveBytes.GetBytes cb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cb" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cb"><span data-ttu-id="e5029-250">O número de bytes de chave pseudoaleatórios a serem gerados.</span><span class="sxs-lookup"><span data-stu-id="e5029-250">The number of pseudo-random key bytes to generate.</span></span></param>
        <summary><span data-ttu-id="e5029-251">Retorna a chave pseudoaleatória para esse objeto.</span><span class="sxs-lookup"><span data-stu-id="e5029-251">Returns the pseudo-random key for this object.</span></span></summary>
        <returns><span data-ttu-id="e5029-252">Uma matriz de bytes preenchida com bytes de chave pseudoaleatórios.</span><span class="sxs-lookup"><span data-stu-id="e5029-252">A byte array filled with pseudo-random key bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5029-253">O <xref:System.Security.Cryptography.Rfc2898DeriveBytes> classe implementa a funcionalidade de PBKDF2, usando um gerador de número pseudoaleatório com base em <xref:System.Security.Cryptography.HMACSHA1>.</span><span class="sxs-lookup"><span data-stu-id="e5029-253">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class implements PBKDF2 functionality by using a pseudorandom number generator based on <xref:System.Security.Cryptography.HMACSHA1>.</span></span> <span data-ttu-id="e5029-254">O <xref:System.Security.Cryptography.Rfc2898DeriveBytes> classe usa uma senha, um valor de sal e uma contagem de iteração e, em seguida, gera chaves por meio de chamadas para o <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> método.</span><span class="sxs-lookup"><span data-stu-id="e5029-254">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class takes a password, a salt, and an iteration count, and then generates keys through calls to the <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> method.</span></span> <span data-ttu-id="e5029-255">Chamadas repetidas para esse método não irá gerar a mesma chave; em vez disso, acrescentando duas chamadas do <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> método com um `cb` valor do parâmetro de `20` é o equivalente a chamar o <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> método uma vez com um `cb` valor do parâmetro de `40`.</span><span class="sxs-lookup"><span data-stu-id="e5029-255">Repeated calls to this method will not generate the same key; instead, appending two calls of the <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> method with a `cb` parameter value of `20` is the equivalent of calling the <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> method once with a `cb` parameter value of `40`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e5029-256">O exemplo a seguir mostra como usar o <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> método para obter a chave para uma instância do <xref:System.Security.Cryptography.Rfc2898DeriveBytes>.</span><span class="sxs-lookup"><span data-stu-id="e5029-256">The following example shows how to use the <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> method to get the key for an instance of <xref:System.Security.Cryptography.Rfc2898DeriveBytes>.</span></span> <span data-ttu-id="e5029-257">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Security.Cryptography.Rfc2898DeriveBytes> classe.</span><span class="sxs-lookup"><span data-stu-id="e5029-257">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class.</span></span>  
  
 [!code-cpp[rfc28981#2](~/samples/snippets/cpp/VS_Snippets_CLR/rfc28981/CPP/rfc28981.cpp#2)]
 [!code-csharp[rfc28981#2](~/samples/snippets/csharp/VS_Snippets_CLR/rfc28981/CS/rfc28981.cs#2)]
 [!code-vb[rfc28981#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/rfc28981/vb/rfc28981.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e5029-258"><paramref name="cb" /> está fora do intervalo.</span><span class="sxs-lookup"><span data-stu-id="e5029-258"><paramref name="cb" /> is out of range.</span></span> <span data-ttu-id="e5029-259">Esse parâmetro requer um número não negativo.</span><span class="sxs-lookup"><span data-stu-id="e5029-259">This parameter requires a non-negative number.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="e5029-260">Serviços criptográficos</span><span class="sxs-lookup"><span data-stu-id="e5029-260">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithm">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.HashAlgorithmName HashAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.HashAlgorithmName HashAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Rfc2898DeriveBytes.HashAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HashAlgorithm As HashAlgorithmName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::HashAlgorithmName HashAlgorithm { System::Security::Cryptography::HashAlgorithmName get(); };" />
      <MemberSignature Language="F#" Value="member this.HashAlgorithm : System.Security.Cryptography.HashAlgorithmName" Usage="System.Security.Cryptography.Rfc2898DeriveBytes.HashAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HashAlgorithmName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IterationCount">
      <MemberSignature Language="C#" Value="public int IterationCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 IterationCount" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount" />
      <MemberSignature Language="VB.NET" Value="Public Property IterationCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int IterationCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.IterationCount : int with get, set" Usage="System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5029-261">Obtém ou define o número de iterações para a operação.</span><span class="sxs-lookup"><span data-stu-id="e5029-261">Gets or sets the number of iterations for the operation.</span></span></summary>
        <value><span data-ttu-id="e5029-262">O número de iterações para a operação.</span><span class="sxs-lookup"><span data-stu-id="e5029-262">The number of iterations for the operation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5029-263">Contagem de iteração é o número de vezes que uma operação é executada.</span><span class="sxs-lookup"><span data-stu-id="e5029-263">Iteration count is the number of times an operation is performed.</span></span> <span data-ttu-id="e5029-264">Para esse método, a contagem deve ser maior que zero.</span><span class="sxs-lookup"><span data-stu-id="e5029-264">For this method, the count should be greater than zero.</span></span> <span data-ttu-id="e5029-265">O número mínimo recomendado de iterações é 1000.</span><span class="sxs-lookup"><span data-stu-id="e5029-265">The minimum recommended number of iterations is 1000.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e5029-266">O exemplo a seguir mostra como usar o <xref:System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount%2A> propriedade para exibir o número de iterações usadas na geração da chave.</span><span class="sxs-lookup"><span data-stu-id="e5029-266">The following example shows how to use the <xref:System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount%2A> property to display the number of iterations used in the generation of the key.</span></span> <span data-ttu-id="e5029-267">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Security.Cryptography.Rfc2898DeriveBytes> classe.</span><span class="sxs-lookup"><span data-stu-id="e5029-267">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class.</span></span>  
  
 [!code-cpp[rfc28981#3](~/samples/snippets/cpp/VS_Snippets_CLR/rfc28981/CPP/rfc28981.cpp#3)]
 [!code-csharp[rfc28981#3](~/samples/snippets/csharp/VS_Snippets_CLR/rfc28981/CS/rfc28981.cs#3)]
 [!code-vb[rfc28981#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/rfc28981/vb/rfc28981.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e5029-268">O número de iterações é menor que 1.</span><span class="sxs-lookup"><span data-stu-id="e5029-268">The number of iterations is less than 1.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="e5029-269">Serviços criptográficos</span><span class="sxs-lookup"><span data-stu-id="e5029-269">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public override void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Reset();" />
      <MemberSignature Language="F#" Value="override this.Reset : unit -&gt; unit" Usage="rfc2898DeriveBytes.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e5029-270">Redefine o estado da operação.</span><span class="sxs-lookup"><span data-stu-id="e5029-270">Resets the state of the operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5029-271">Esse método é chamado automaticamente se a contagem de iteração ou de salt é modificada.</span><span class="sxs-lookup"><span data-stu-id="e5029-271">This method is automatically called if the salt or iteration count is modified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e5029-272">O exemplo a seguir mostra como usar o método <xref:System.Security.Cryptography.Rfc2898DeriveBytes.Reset%2A>.</span><span class="sxs-lookup"><span data-stu-id="e5029-272">The following example shows how to use the <xref:System.Security.Cryptography.Rfc2898DeriveBytes.Reset%2A> method.</span></span> <span data-ttu-id="e5029-273">Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Security.Cryptography.Rfc2898DeriveBytes> classe.</span><span class="sxs-lookup"><span data-stu-id="e5029-273">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class.</span></span>  
  
 [!code-cpp[rfc28981#5](~/samples/snippets/cpp/VS_Snippets_CLR/rfc28981/CPP/rfc28981.cpp#5)]
 [!code-csharp[rfc28981#5](~/samples/snippets/csharp/VS_Snippets_CLR/rfc28981/CS/rfc28981.cs#5)]
 [!code-vb[rfc28981#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/rfc28981/vb/rfc28981.vb#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="e5029-274">Serviços criptográficos</span><span class="sxs-lookup"><span data-stu-id="e5029-274">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Salt">
      <MemberSignature Language="C#" Value="public byte[] Salt { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Salt" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Rfc2898DeriveBytes.Salt" />
      <MemberSignature Language="VB.NET" Value="Public Property Salt As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Salt { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Salt : byte[] with get, set" Usage="System.Security.Cryptography.Rfc2898DeriveBytes.Salt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5029-275">Obtém ou define o valor de sal da chave para a operação.</span><span class="sxs-lookup"><span data-stu-id="e5029-275">Gets or sets the key salt value for the operation.</span></span></summary>
        <value><span data-ttu-id="e5029-276">O valor de sal da chave para a operação.</span><span class="sxs-lookup"><span data-stu-id="e5029-276">The key salt value for the operation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5029-277">Sal, um conjunto aleatório de bytes, é usado para fazer a descriptografia não autorizada de uma mensagem mais difícil.</span><span class="sxs-lookup"><span data-stu-id="e5029-277">Salt, a random set of bytes, is used to make unauthorized decrypting of a message more difficult.</span></span> <span data-ttu-id="e5029-278">Um ataque de dicionário é um ataque em que o invasor tenta descriptografar uma mensagem criptografada, comparando o valor criptografado com valores criptografados anteriormente computados para as chaves mais prováveis.</span><span class="sxs-lookup"><span data-stu-id="e5029-278">A dictionary attack is an attack in which the attacker attempts to decrypt an encrypted message by comparing the encrypted value with previously computed encrypted values for the most likely keys.</span></span> <span data-ttu-id="e5029-279">Esse ataque é feito muito mais difícil por meio da introdução de bytes de sal ou aleatórias, no final da senha antes da derivação de chave.</span><span class="sxs-lookup"><span data-stu-id="e5029-279">This attack is made much more difficult by the introduction of salt, or random bytes, at the end of the password before the key derivation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e5029-280">O tamanho de sal especificado é menor do que 8 bytes.</span><span class="sxs-lookup"><span data-stu-id="e5029-280">The specified salt size is smaller than 8 bytes.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e5029-281">O sal é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e5029-281">The salt is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="e5029-282">Serviços criptográficos</span><span class="sxs-lookup"><span data-stu-id="e5029-282">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>