<Type Name="Choices" FullName="System.Speech.Recognition.Choices">
  <Metadata><Meta Name="ms.openlocfilehash" Value="451bf9dafb2e50595cabe66bb83ee0cb52efc4c5" /><Meta Name="ms.sourcegitcommit" Value="6089a30c0522e6f43256523e82e94b2ccedfb55b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="04/04/2019" /><Meta Name="ms.locfileid" Value="59017012" /></Metadata><TypeSignature Language="C#" Value="public class Choices" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Choices extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.Choices" />
  <TypeSignature Language="VB.NET" Value="Public Class Choices" />
  <TypeSignature Language="C++ CLI" Value="public ref class Choices" />
  <TypeSignature Language="F#" Value="type Choices = class" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{_oneOf.DebugSummary}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="fa649-101">Representa um conjunto de alternativas dentro das restrições de uma gramática de reconhecimento de fala.</span><span class="sxs-lookup"><span data-stu-id="fa649-101">Represents a set of alternatives in the constraints of a speech recognition grammar.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa649-102">Um <xref:System.Speech.Recognition.Choices> objeto representa um componente de uma frase que pode ter um dos vários valores.</span><span class="sxs-lookup"><span data-stu-id="fa649-102">A <xref:System.Speech.Recognition.Choices> object represents a component of a phrase that can have one of several values.</span></span> <span data-ttu-id="fa649-103">Use essa classe durante a criação de uma gramática de reconhecimento de fala de um <xref:System.Speech.Recognition.GrammarBuilder> objeto.</span><span class="sxs-lookup"><span data-stu-id="fa649-103">Use this class when creating a speech recognition grammar from a <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
 <span data-ttu-id="fa649-104">Por exemplo, uma <xref:System.Speech.Recognition.Choices> objeto pode representar o componente *colorChoice* da frase "alterar a cor a ser *colorChoice*", onde os valores aceitáveis para *colorChoice* são "vermelho", ou "verde" ou "blue".</span><span class="sxs-lookup"><span data-stu-id="fa649-104">For example, a <xref:System.Speech.Recognition.Choices> object could represent the component *colorChoice* in the phrase, "Change the color to *colorChoice*", where acceptable values for *colorChoice* are "red", or "green", or "blue".</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fa649-105">Para usar um <xref:System.Speech.Recognition.Choices> objeto como um componente opcional em uma frase, criar o <xref:System.Speech.Recognition.Choices> do objeto e adicioná-lo a um <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.GrammarBuilder%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> do objeto com `minRepeat` e `maxRepeat` definido como 0 e 1, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="fa649-105">To use a <xref:System.Speech.Recognition.Choices> object as an optional component in a phrase, create the <xref:System.Speech.Recognition.Choices> object and add it to a <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.GrammarBuilder%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> object with `minRepeat` and `maxRepeat` set to 0 and 1, respectively.</span></span> <span data-ttu-id="fa649-106">Frases que contém os componentes opcionais podem ser reconhecidos se o componente opcional é falado.</span><span class="sxs-lookup"><span data-stu-id="fa649-106">Phrases containing optional components can be recognized whether or not the optional component is spoken.</span></span>  
  
 <span data-ttu-id="fa649-107">O <xref:System.Speech.Recognition.Choices> classe serve a mesma função que o `one-of` elemento XML definido pelo [especificação de gramática de reconhecimento de fala (SRGS) versão 1.0](https://www.w3.org/TR/speech-grammar/) e é semelhante ao <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> classe no <xref:System.Speech.Recognition.SrgsGrammar> namespace.</span><span class="sxs-lookup"><span data-stu-id="fa649-107">The <xref:System.Speech.Recognition.Choices> class serves the same function as the `one-of` XML element defined by the [Speech Recognition Grammar Specification (SRGS) Version 1.0](https://www.w3.org/TR/speech-grammar/) and is similar to the <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> class in the <xref:System.Speech.Recognition.SrgsGrammar> namespace.</span></span>  
  
 <span data-ttu-id="fa649-108">Para obter mais informações sobre como definir uma gramática de reconhecimento de fala, consulte [reconhecimento de fala](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)) e [criar gramáticas de GrammarBuilder](https://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span><span class="sxs-lookup"><span data-stu-id="fa649-108">For more information about defining a speech recognition grammar, see [Speech Recognition](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)) and [Creating GrammarBuilder Grammars](https://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa649-109">O exemplo a seguir cria uma gramática de reconhecimento de fala a frase, "Definir plano de fundo *colorChoice*", onde *colorChoice* pode ser uma das cores definidas.</span><span class="sxs-lookup"><span data-stu-id="fa649-109">The following example creates a speech recognition grammar for the phrase, "Set background to *colorChoice*", where *colorChoice* can be one of the defined colors.</span></span> <span data-ttu-id="fa649-110">O <xref:System.Speech.Recognition.GrammarBuilder> é usado para definir as restrições da gramática.</span><span class="sxs-lookup"><span data-stu-id="fa649-110">The <xref:System.Speech.Recognition.GrammarBuilder> is used to define the constraints for the grammar.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a Choices object that contains a set of alternative colors.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  colorChoice.Add(new string[] {"cyan", "yellow", "magenta"});  
  
  // Construct the phrase.  
  GrammarBuilder builder = new GrammarBuilder("Set background to");  
  builder.Append(colorChoice);  
  
  // Create a grammar for the phrase.  
  Grammar colorGrammar = new Grammar(builder);  
  colorGrammar.Name = "SetBackground";  
  
  return colorGrammar;  
}  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Recognition.Grammar" />
    <altmember cref="T:System.Speech.Recognition.GrammarBuilder" />
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=15143"><span data-ttu-id="fa649-111">Especificação de gramática de reconhecimento de fala (SRGS)</span><span class="sxs-lookup"><span data-stu-id="fa649-111">Speech Recognition Grammar Specification (SRGS)</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fa649-112">Inicializa uma nova instância da classe <see cref="T:System.Speech.Recognition.Choices" />.</span><span class="sxs-lookup"><span data-stu-id="fa649-112">Initializes a new instance of the <see cref="T:System.Speech.Recognition.Choices" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa649-113">Você pode construir uma <xref:System.Speech.Recognition.Choices> do objeto usando um construtor padrão (que retorna um objeto vazio), de um grupo de <xref:System.String> objetos, ou um de conjunto de <xref:System.Speech.Recognition.GrammarBuilder> objetos.</span><span class="sxs-lookup"><span data-stu-id="fa649-113">You can construct a <xref:System.Speech.Recognition.Choices> object using a default constructor (which returns an empty object), from a group of <xref:System.String> objects, or a from set of <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span>  
  
 <span data-ttu-id="fa649-114">Porque o <xref:System.Speech.Recognition.GrammarBuilder> objeto dá suporte à conversão implícita de <xref:System.Speech.Recognition.SemanticResultValue> e <xref:System.Speech.Recognition.SemanticResultKey>, um <xref:System.Speech.Recognition.Choices> podem ser construídos a partir de uma matriz desses objetos usando uma conversão.</span><span class="sxs-lookup"><span data-stu-id="fa649-114">Because the <xref:System.Speech.Recognition.GrammarBuilder> object supports implicit conversion from <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey>, a <xref:System.Speech.Recognition.Choices> can be constructed from an array of these objects using a cast.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa649-115">O exemplo a seguir usa <xref:System.Speech.Recognition.Choices> objetos para criar duas listas de alternativas.</span><span class="sxs-lookup"><span data-stu-id="fa649-115">The following example uses <xref:System.Speech.Recognition.Choices> objects to create two lists of alternatives.</span></span>  
  
 <span data-ttu-id="fa649-116">A primeira <xref:System.Speech.Recognition.Choices> objeto é construído a partir de uma matriz de <xref:System.String> objetos.</span><span class="sxs-lookup"><span data-stu-id="fa649-116">The first <xref:System.Speech.Recognition.Choices> object is constructed from an array of <xref:System.String> objects.</span></span> <span data-ttu-id="fa649-117">A outra <xref:System.Speech.Recognition.Choices> objeto é construído a partir de uma matriz de <xref:System.Speech.Recognition.GrammarBuilder> objetos que foram convertidos implicitamente por uma conversão.</span><span class="sxs-lookup"><span data-stu-id="fa649-117">The other <xref:System.Speech.Recognition.Choices> object is constructed from an array of <xref:System.Speech.Recognition.GrammarBuilder> objects which have been implicitly converted by a cast.</span></span>  
  
 <span data-ttu-id="fa649-118">O exemplo usa uma <xref:System.Speech.Recognition.GrammarBuilder> objeto para montar uma frase, usando o <xref:System.Speech.Recognition.Choices> duas cadeias de caracteres adicionais, que podem ser usadas para reconhecer fala e de objetos de entrada na forma de "Chamada [contactlList] em [phoneType] telefone", por exemplo "Jane chamada no telefone celular".</span><span class="sxs-lookup"><span data-stu-id="fa649-118">The example uses a <xref:System.Speech.Recognition.GrammarBuilder> object to assemble a phrase, using the <xref:System.Speech.Recognition.Choices> objects and two additional strings, that can be used to recognize speech input in the form of "Call [contactlList] on [phoneType] phone" , for example "Call Jane on cell phone".</span></span>  
  
```csharp
public GrammarBuilder ChoicesConstructor2 ()  
{  
    GrammarBuilder gb = new GrammarBuilder ();  
    Choices phoneType = new Choices (new string[] {"cell", "home", "work"});  
    Choices contactList = new Choices (new GrammarBuilder[] {(GrammarBuilder) "Mark", (GrammarBuilder) "Jane", (GrammarBuilder) "Frank"});  
    gb.Append ("Call");  
    gb.Append (contactList);  
    gb.Append ("on");  
    gb.Append (phoneType);  
    gb.Append ("phone");  
    return gb;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Choices ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Choices.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Choices();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fa649-119">Inicializa uma nova instância da classe <see cref="T:System.Speech.Recognition.Choices" /> que contém um conjunto vazio de alternativas.</span><span class="sxs-lookup"><span data-stu-id="fa649-119">Initializes a new instance of the <see cref="T:System.Speech.Recognition.Choices" /> class that contains an empty set of alternatives.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa649-120">Este construtor retorna um conjunto vazio válido, de alternativas.</span><span class="sxs-lookup"><span data-stu-id="fa649-120">This constructor returns a valid, empty set of alternatives.</span></span> <span data-ttu-id="fa649-121">Você pode adicionar alternativas usando qualquer um do <xref:System.Speech.Recognition.Choices.Add%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="fa649-121">You can add alternatives using any of the <xref:System.Speech.Recognition.Choices.Add%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa649-122">O exemplo a seguir usa <xref:System.Speech.Recognition.Choices> e <xref:System.Speech.Recognition.GrammarBuilder> objetos para criar uma frase que pode ser usada para reconhecer a entrada de fala, como "Chamada Anne em sua célula" e "James chamada em seu telefone de trabalho".</span><span class="sxs-lookup"><span data-stu-id="fa649-122">The following example uses <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects to create a phrase that can be used to recognize speech input such as "Call Anne on her cell" and "Call James on his work phone".</span></span> <span data-ttu-id="fa649-123">O exemplo usa conversões implícitas de <xref:System.Speech.Recognition.Choices> e <xref:System.String> para <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="fa649-123">The example uses implicit casts from <xref:System.Speech.Recognition.Choices> and <xref:System.String> to <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
```csharp  
public Grammar CreatePhonePhrase()  
{  
  
  // Create alternatives for female names and add a phrase.  
  GrammarBuilder females = new Choices(new string[] { "Anne", "Mary" });  
  females.Append("on her");  
  
  // Create alternatives for male names and add a phrase.  
  GrammarBuilder males = new Choices(new string[] { "James", "Sam" });  
  males.Append("on his");  
  
  // Create a Choices object that contains an array of alternative  
  // GrammarBuilder objects.  
  Choices people = new Choices();  
  people.Add(new Choices(new GrammarBuilder[] {females, males}));  
  
  // Create a Choices object that contains a set of alternative phone types.  
  Choices phoneType = new Choices();  
  phoneType.Add(new string[] { "cell", "home", "work" });  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder();  
  gb.Append("call");  
  gb.Append(people);  
  gb.Append(phoneType);  
  gb.Append(new GrammarBuilder("phone"), 0, 1);  
  
  return new Grammar(gb);  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Choices (params System.Speech.Recognition.GrammarBuilder[] alternateChoices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.GrammarBuilder[] alternateChoices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Choices.#ctor(System.Speech.Recognition.GrammarBuilder[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray alternateChoices As GrammarBuilder())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Choices(... cli::array &lt;System::Speech::Recognition::GrammarBuilder ^&gt; ^ alternateChoices);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Choices : System.Speech.Recognition.GrammarBuilder[] -&gt; System.Speech.Recognition.Choices" Usage="new System.Speech.Recognition.Choices alternateChoices" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="alternateChoices" Type="System.Speech.Recognition.GrammarBuilder[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="alternateChoices"><span data-ttu-id="fa649-124">Uma matriz contendo o conjunto de alternativas.</span><span class="sxs-lookup"><span data-stu-id="fa649-124">An array containing the set of alternatives.</span></span></param>
        <summary><span data-ttu-id="fa649-125">Inicializa uma nova instância da <see cref="T:System.Speech.Recognition.Choices" /> classe de uma matriz que contém um ou mais objetos <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="fa649-125">Initializes a new instance of the <see cref="T:System.Speech.Recognition.Choices" /> class from an array containing one or more <see cref="T:System.Speech.Recognition.GrammarBuilder" /> objects.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa649-126">Cada <xref:System.Speech.Recognition.GrammarBuilder> em `alternateChoices` define uma alternativa.</span><span class="sxs-lookup"><span data-stu-id="fa649-126">Each <xref:System.Speech.Recognition.GrammarBuilder> in `alternateChoices` defines one alternative.</span></span> <span data-ttu-id="fa649-127">Se `alternateChoices` é uma matriz vazia, o construtor retorna um conjunto vazio de alternativas.</span><span class="sxs-lookup"><span data-stu-id="fa649-127">If `alternateChoices` is an empty array, the constructor returns an empty set of alternatives.</span></span> <span data-ttu-id="fa649-128">Você pode adicionar alternativas usando qualquer um do <xref:System.Speech.Recognition.Choices.Add%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="fa649-128">You can add alternatives using any of the <xref:System.Speech.Recognition.Choices.Add%2A> methods.</span></span>  
  
 <span data-ttu-id="fa649-129">O construtor gerará um <xref:System.ArgumentNullException> quando `alternateChoices` é `null` ou quando qualquer um dos elementos da matriz são `null`.</span><span class="sxs-lookup"><span data-stu-id="fa649-129">The constructor throws an <xref:System.ArgumentNullException> when `alternateChoices` is `null` or when any of the array elements are `null`.</span></span>  
  
 <span data-ttu-id="fa649-130">Porque o <xref:System.Speech.Recognition.GrammarBuilder> classe oferece suporte para conversão implícita de <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultValue>, e <xref:System.Speech.Recognition.SemanticResultKey> objetos <xref:System.Speech.Recognition.GrammarBuilder> instâncias, corretamente usando conversões, esse construtor pode ser usado para criar um <xref:System.Speech.Recognition.Choices> objeto de uma lista de qualquer combinação desses objetos.</span><span class="sxs-lookup"><span data-stu-id="fa649-130">Because the <xref:System.Speech.Recognition.GrammarBuilder> class provides support for implicit conversion of <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultValue>, and <xref:System.Speech.Recognition.SemanticResultKey> objects to <xref:System.Speech.Recognition.GrammarBuilder> instances, by properly using casts, this constructor can also be used to create a <xref:System.Speech.Recognition.Choices> object from a list of any combination of these objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa649-131">O exemplo a seguir usa `Choices` e <xref:System.Speech.Recognition.GrammarBuilder> objetos para criar um <xref:System.Speech.Recognition.Grammar> frases como "Chamada Anne em sua célula" e "James chamada em seu telefone de trabalho".</span><span class="sxs-lookup"><span data-stu-id="fa649-131">The following example uses `Choices` and <xref:System.Speech.Recognition.GrammarBuilder> objects to create a <xref:System.Speech.Recognition.Grammar> for phrases such as, "Call Anne on her cell" and "Call James on his work phone".</span></span> <span data-ttu-id="fa649-132">O exemplo usa conversões implícitas de `Choices` e <xref:System.String> para <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="fa649-132">The example uses implicit casts from `Choices` and <xref:System.String> to <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
```csharp  
public Grammar CreatePhonePhrase()  
{  
  
  // Create alternatives for female names and add a phrase.  
  GrammarBuilder females = new Choices(new string[] { "Anne", "Mary" });  
  females.Append("on her");  
  
  // Create alternatives for male names and add a phrase.  
  GrammarBuilder males = new Choices(new string[] { "James", "Sam" });  
  males.Append("on his");  
  
  // Create a Choices object that contains an array of alternative  
  // GrammarBuilder objects.  
  Choices people = new Choices();  
  people.Add(new Choices(new GrammarBuilder[] {females, males}));  
  
  // Create a Choices object that contains a set of alternative phone types.  
  Choices phoneType = new Choices();  
  phoneType.Add(new string[] { "cell", "home", "work" });  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder();  
  gb.Append("call");  
  gb.Append(people);  
  gb.Append(phoneType);  
  gb.Append(new GrammarBuilder("phone"), 0, 1);  
  
  return new Grammar(gb);  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Choices (params string[] phrases);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] phrases) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Choices.#ctor(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray phrases As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Choices(... cli::array &lt;System::String ^&gt; ^ phrases);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Choices : string[] -&gt; System.Speech.Recognition.Choices" Usage="new System.Speech.Recognition.Choices phrases" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="phrases" Type="System.String[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="phrases"><span data-ttu-id="fa649-133">Uma matriz contendo o conjunto de alternativas.</span><span class="sxs-lookup"><span data-stu-id="fa649-133">An array containing the set of alternatives.</span></span></param>
        <summary><span data-ttu-id="fa649-134">Inicializa uma nova instância da <see cref="T:System.Speech.Recognition.Choices" /> classe de uma matriz que contém um ou mais objetos <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="fa649-134">Initializes a new instance of the <see cref="T:System.Speech.Recognition.Choices" /> class from an array containing one or more <see cref="T:System.String" /> objects.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa649-135">Cada <xref:System.String> em `phrases` define uma alternativa.</span><span class="sxs-lookup"><span data-stu-id="fa649-135">Each <xref:System.String> in `phrases` defines one alternative.</span></span> <span data-ttu-id="fa649-136">O mecanismo de reconhecimento de fala pode usar qualquer um dos itens na matriz de cadeia de caracteres para corresponder à entrada de fala.</span><span class="sxs-lookup"><span data-stu-id="fa649-136">The speech recognition engine can use any one of the items in the string array to match speech input.</span></span> <span data-ttu-id="fa649-137">Se `phrases` é uma matriz vazia, o construtor retorna um conjunto vazio de alternativas.</span><span class="sxs-lookup"><span data-stu-id="fa649-137">If `phrases` is an empty array, the constructor returns an empty set of alternatives.</span></span> <span data-ttu-id="fa649-138">Você pode adicionar alternativas usando qualquer um do <xref:System.Speech.Recognition.Choices.Add%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="fa649-138">You can add alternatives using any of the <xref:System.Speech.Recognition.Choices.Add%2A> methods.</span></span>  
  
 <span data-ttu-id="fa649-139">O construtor gerará um <xref:System.ArgumentNullException> quando `phrases` é `null` ou qualquer um dos elementos da matriz são `null`.</span><span class="sxs-lookup"><span data-stu-id="fa649-139">The constructor throws an <xref:System.ArgumentNullException> when `phrases` is `null` or any of the array elements are `null`.</span></span> <span data-ttu-id="fa649-140">O construtor gerará um <xref:System.ArgumentException> se qualquer elemento na matriz é uma cadeia de caracteres vazia ("").</span><span class="sxs-lookup"><span data-stu-id="fa649-140">The constructor throws an <xref:System.ArgumentException> if any element in the array is an empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa649-141">O exemplo a seguir usa <xref:System.Speech.Recognition.Choices> e <xref:System.Speech.Recognition.GrammarBuilder> objetos para criar um <xref:System.Speech.Recognition.Grammar> para as frases como "Chamada Anne em sua célula" e "James chamada em seu telefone de trabalho".</span><span class="sxs-lookup"><span data-stu-id="fa649-141">The following example uses <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects to create a <xref:System.Speech.Recognition.Grammar> for the phrases such as, "Call Anne on her cell" and "Call James on his work phone".</span></span> <span data-ttu-id="fa649-142">O exemplo usa conversões implícitas de `Choices` e <xref:System.String> para <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="fa649-142">The example uses implicit casts from `Choices` and <xref:System.String> to <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
```csharp  
public Grammar CreatePhonePhrase()  
{  
  
  // Create alternatives for female names and add a phrase.  
  GrammarBuilder females = new Choices(new string[] { "Anne", "Mary" });  
  females.Append("on her");  
  
  // Create alternatives for male names and add a phrase.  
  GrammarBuilder males = new Choices(new string[] { "James", "Sam" });  
  males.Append("on his");  
  
  // Create a Choices object that contains an array of alternative  
  // GrammarBuilder objects.  
  Choices people = new Choices();  
  people.Add(new Choices(new GrammarBuilder[] {females, males}));  
  
  // Create a Choices object that contains a set of alternative phone types.  
  Choices phoneType = new Choices();  
  phoneType.Add(new string[] { "cell", "home", "work" });  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder();  
  gb.Append("call");  
  gb.Append(people);  
  gb.Append(phoneType);  
  gb.Append(new GrammarBuilder("phone"), 0, 1);  
  
  return new Grammar(gb);  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fa649-143">Adiciona itens ao conjunto de alternativas.</span><span class="sxs-lookup"><span data-stu-id="fa649-143">Adds items to the set of alternatives.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (params System.Speech.Recognition.GrammarBuilder[] alternateChoices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Speech.Recognition.GrammarBuilder[] alternateChoices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Choices.Add(System.Speech.Recognition.GrammarBuilder[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (ParamArray alternateChoices As GrammarBuilder())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(... cli::array &lt;System::Speech::Recognition::GrammarBuilder ^&gt; ^ alternateChoices);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Speech.Recognition.GrammarBuilder[] -&gt; unit" Usage="choices.Add alternateChoices" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alternateChoices" Type="System.Speech.Recognition.GrammarBuilder[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="alternateChoices"><span data-ttu-id="fa649-144">Os objetos <see cref="T:System.Speech.Recognition.GrammarBuilder" /> a serem adicionados a este objeto <see cref="T:System.Speech.Recognition.Choices" />.</span><span class="sxs-lookup"><span data-stu-id="fa649-144">The <see cref="T:System.Speech.Recognition.GrammarBuilder" /> objects to add to this <see cref="T:System.Speech.Recognition.Choices" /> object.</span></span></param>
        <summary><span data-ttu-id="fa649-145">Adiciona uma matriz que contém um ou mais objetos <see cref="T:System.Speech.Recognition.GrammarBuilder" /> ao conjunto de alternativas.</span><span class="sxs-lookup"><span data-stu-id="fa649-145">Adds an array containing one or more <see cref="T:System.Speech.Recognition.GrammarBuilder" /> objects to the set of alternatives.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa649-146">Por causa do suporte para conversão implícita de <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, e <xref:System.Speech.Recognition.SemanticResultValue> objetos <xref:System.Speech.Recognition.GrammarBuilder>, essas três classes podem ser adicionados a um <xref:System.Speech.Recognition.Choices> instância também.</span><span class="sxs-lookup"><span data-stu-id="fa649-146">Because of support for implicit conversion from <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, and <xref:System.Speech.Recognition.SemanticResultValue> objects to <xref:System.Speech.Recognition.GrammarBuilder>, these three classes may be added to a <xref:System.Speech.Recognition.Choices> instance as well.</span></span>  
  
 <span data-ttu-id="fa649-147">Se `alternateChoices` é uma matriz vazia, esse método não atualiza o conjunto de alternativas.</span><span class="sxs-lookup"><span data-stu-id="fa649-147">If `alternateChoices` is an empty array, this method does not update the set of alternatives.</span></span>  
  
 <span data-ttu-id="fa649-148">Os aplicativos podem usar ambos <xref:System.Speech.Recognition.Choices.Add%28System.String%5B%5D%29> e <xref:System.Speech.Recognition.Choices.Add%28System.Speech.Recognition.GrammarBuilder%5B%5D%29> para adicionar alternativas para uma <xref:System.Speech.Recognition.Choices> objeto.</span><span class="sxs-lookup"><span data-stu-id="fa649-148">Applications can use both <xref:System.Speech.Recognition.Choices.Add%28System.String%5B%5D%29> and <xref:System.Speech.Recognition.Choices.Add%28System.Speech.Recognition.GrammarBuilder%5B%5D%29> to add alternatives to a <xref:System.Speech.Recognition.Choices> object.</span></span>  
  
 <span data-ttu-id="fa649-149">Este método lança um <xref:System.ArgumentNullException> quando `alternateChoices` é `null` ou qualquer um dos elementos da matriz são `null`.</span><span class="sxs-lookup"><span data-stu-id="fa649-149">This method throws an <xref:System.ArgumentNullException> when `alternateChoices` is `null` or any of the array elements are `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa649-150">O exemplo a seguir cria uma gramática de reconhecimento de fala para frases como "Chamada Anne em sua célula" e "James chamada em seu telefone de trabalho".</span><span class="sxs-lookup"><span data-stu-id="fa649-150">The following example creates a speech recognition grammar for phrases such as "Call Anne on her cell" and "Call James on his work phone".</span></span> <span data-ttu-id="fa649-151">O exemplo usa ambas as sobrecargas do <xref:System.Speech.Recognition.Choices.Add%2A> método para compilar a gramática.</span><span class="sxs-lookup"><span data-stu-id="fa649-151">The example uses both overloads of the <xref:System.Speech.Recognition.Choices.Add%2A> method to build the grammar.</span></span>  
  
```csharp  
public Grammar CreatePhonePhrase()  
{  
  
  // Create alternatives for female names and add a phrase.  
  GrammarBuilder females = new Choices(new string[] { "Anne", "Mary" });  
  females.Append("on her");  
  
  // Create alternatives for male names and add a phrase.  
  GrammarBuilder males = new Choices(new string[] { "James", "Sam" });  
  males.Append("on his");  
  
  // Create a Choices object that contains an array of alternative  
  // GrammarBuilder objects.  
  Choices people = new Choices();  
  people.Add(new Choices(new GrammarBuilder[] {females, males}));  
  
  // Create a Choices object that contains a set of alternative phone types.  
  Choices phoneType = new Choices();  
  phoneType.Add(new string[] { "cell", "home", "work" });  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder();  
  gb.Append("call");  
  gb.Append(people);  
  gb.Append(phoneType);  
  gb.Append(new GrammarBuilder("phone"), 0, 1);  
  
  return new Grammar(gb);  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (params string[] phrases);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string[] phrases) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Choices.Add(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (ParamArray phrases As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(... cli::array &lt;System::String ^&gt; ^ phrases);" />
      <MemberSignature Language="F#" Value="member this.Add : string[] -&gt; unit" Usage="choices.Add phrases" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrases" Type="System.String[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="phrases"><span data-ttu-id="fa649-152">As cadeias de caracteres a adicionar a este objeto <see cref="T:System.Speech.Recognition.Choices" />.</span><span class="sxs-lookup"><span data-stu-id="fa649-152">The strings to add to this <see cref="T:System.Speech.Recognition.Choices" /> object.</span></span></param>
        <summary><span data-ttu-id="fa649-153">Adiciona uma matriz que contém um ou mais objetos <see cref="T:System.String" /> ao conjunto de alternativas.</span><span class="sxs-lookup"><span data-stu-id="fa649-153">Adds an array containing one or more <see cref="T:System.String" /> objects to the set of alternatives.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa649-154">Os aplicativos podem usar ambos <xref:System.Speech.Recognition.Choices.Add%28System.String%5B%5D%29> e <xref:System.Speech.Recognition.Choices.Add%28System.Speech.Recognition.GrammarBuilder%5B%5D%29> para adicionar alternativas para uma <xref:System.Speech.Recognition.Choices> objeto.</span><span class="sxs-lookup"><span data-stu-id="fa649-154">Applications can use both <xref:System.Speech.Recognition.Choices.Add%28System.String%5B%5D%29> and <xref:System.Speech.Recognition.Choices.Add%28System.Speech.Recognition.GrammarBuilder%5B%5D%29> to add alternatives to a <xref:System.Speech.Recognition.Choices> object.</span></span>  
  
 <span data-ttu-id="fa649-155">Se `phrases` é uma matriz vazia, esse método não atualiza o conjunto de alternativas.</span><span class="sxs-lookup"><span data-stu-id="fa649-155">If `phrases` is an empty array, this method does not update the set of alternates.</span></span>  
  
 <span data-ttu-id="fa649-156">Este método lança um <xref:System.ArgumentNullException> quando `phrases` é `null` ou qualquer um dos elementos da matriz são `null`.</span><span class="sxs-lookup"><span data-stu-id="fa649-156">This method throws an <xref:System.ArgumentNullException> when `phrases` is `null` or any of the array elements are `null`.</span></span> <span data-ttu-id="fa649-157">Este método lança um <xref:System.ArgumentException> se qualquer elemento na matriz é a cadeia de caracteres vazia ("").</span><span class="sxs-lookup"><span data-stu-id="fa649-157">This method throws an <xref:System.ArgumentException> if any element in the array is the empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa649-158">O exemplo a seguir cria uma gramática de reconhecimento de fala para frases semelhantes a "Chamada Anne em sua célula" e "James chamada em seu telefone de trabalho".</span><span class="sxs-lookup"><span data-stu-id="fa649-158">The following example creates a speech recognition grammar for phrases similar to "Call Anne on her cell" and "Call James on his work phone".</span></span> <span data-ttu-id="fa649-159">O exemplo usa ambas as sobrecargas do <xref:System.Speech.Recognition.Choices.Add%2A> método para compilar a gramática.</span><span class="sxs-lookup"><span data-stu-id="fa649-159">The example uses both overloads of the <xref:System.Speech.Recognition.Choices.Add%2A> method to build the grammar.</span></span>  
  
```csharp  
public Grammar CreatePhonePhrase()  
{  
  
  // Create alternatives for female names and add a phrase.  
  GrammarBuilder females = new Choices(new string[] { "Anne", "Mary" });  
  females.Append("on her");  
  
  // Create alternatives for male names and add a phrase.  
  GrammarBuilder males = new Choices(new string[] { "James", "Sam" });  
  males.Append("on his");  
  
  // Create a Choices object that contains an array of alternative  
  // GrammarBuilder objects.  
  Choices people = new Choices();  
  people.Add(new Choices(new GrammarBuilder[] {females, males}));  
  
  // Create a Choices object that contains a set of alternative phone types.  
  Choices phoneType = new Choices();  
  phoneType.Add(new string[] { "cell", "home", "work" });  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder();  
  gb.Append("call");  
  gb.Append(people);  
  gb.Append(phoneType);  
  gb.Append(new GrammarBuilder("phone"), 0, 1);  
  
  return new Grammar(gb);  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName="ToGrammarBuilder">
      <MemberSignature Language="C#" Value="public System.Speech.Recognition.GrammarBuilder ToGrammarBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Recognition.GrammarBuilder ToGrammarBuilder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Choices.ToGrammarBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Function ToGrammarBuilder () As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Recognition::GrammarBuilder ^ ToGrammarBuilder();" />
      <MemberSignature Language="F#" Value="member this.ToGrammarBuilder : unit -&gt; System.Speech.Recognition.GrammarBuilder" Usage="choices.ToGrammarBuilder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fa649-160">Retorna um objeto <see cref="T:System.Speech.Recognition.GrammarBuilder" /> deste objeto <see cref="T:System.Speech.Recognition.Choices" />.</span><span class="sxs-lookup"><span data-stu-id="fa649-160">Returns a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object from this <see cref="T:System.Speech.Recognition.Choices" /> object.</span></span></summary>
        <returns><span data-ttu-id="fa649-161">Um <see cref="T:System.Speech.Recognition.GrammarBuilder" /> que corresponde a este objeto <see cref="T:System.Speech.Recognition.Choices" />.</span><span class="sxs-lookup"><span data-stu-id="fa649-161">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that matches this <see cref="T:System.Speech.Recognition.Choices" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa649-162">O <xref:System.Speech.Recognition.GrammarBuilder> retornado por esse método é equivalente a um retornado por uma das opções a seguir.</span><span class="sxs-lookup"><span data-stu-id="fa649-162">The <xref:System.Speech.Recognition.GrammarBuilder> returned by this method is equivalent to one returned by either of the following.</span></span>  
  
-   <span data-ttu-id="fa649-163">Chamar o <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> construtor com esse objeto como parâmetro.</span><span class="sxs-lookup"><span data-stu-id="fa649-163">Calling the <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> constructor with this object as the parameter.</span></span>  
  
-   <span data-ttu-id="fa649-164">Usar o implícita ou explícita convertido do objeto para um <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="fa649-164">Using the implicit or explicit cast of this object to a <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa649-165">O exemplo a seguir cria uma gramática de reconhecimento de fala para alterar a cor do plano de fundo.</span><span class="sxs-lookup"><span data-stu-id="fa649-165">The following example creates a speech recognition grammar for changing the background color.</span></span>  
  
```csharp  
  
private Grammar CreateColorChoice()  
{  
  
  // Create a Choices object that contains a set of alternative colors.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder();  
  gb.Append(new Choices(new string[] {"Set", "Change"}));  
  gb.Append("background to");  
  gb.Append(colorChoice.ToGrammarBuilder());  
  
  Grammar grammar = new Grammar(gb);  
  grammar.Name = "modify background color";  
  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
  </Members>
</Type>