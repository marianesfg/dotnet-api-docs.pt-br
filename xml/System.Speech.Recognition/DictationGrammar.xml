<Type Name="DictationGrammar" FullName="System.Speech.Recognition.DictationGrammar">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d5c28c7dfec51de61f92b6ce9ce6ae8cdb22688d" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="37756006" /></Metadata><TypeSignature Language="C#" Value="public class DictationGrammar : System.Speech.Recognition.Grammar" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DictationGrammar extends System.Speech.Recognition.Grammar" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.DictationGrammar" />
  <TypeSignature Language="VB.NET" Value="Public Class DictationGrammar&#xA;Inherits Grammar" />
  <TypeSignature Language="C++ CLI" Value="public ref class DictationGrammar : System::Speech::Recognition::Grammar" />
  <TypeSignature Language="F#" Value="type DictationGrammar = class&#xA;    inherit Grammar" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Speech.Recognition.Grammar</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa uma gramática de reconhecimento de fala usada para ditado de texto livre.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa classe fornece aplicativos com um modelo de linguagem predefinido que pode processar a entrada do usuário falado em texto. Esta classe dá suporte ao padrão e personalizadas <xref:System.Speech.Recognition.DictationGrammar> objetos. Para obter informações sobre como selecionar uma gramática de ditado, consulte o <xref:System.Speech.Recognition.DictationGrammar.%23ctor%28System.String%29> construtor.  
  
 Por padrão, o <xref:System.Speech.Recognition.DictationGrammar> modelo de idioma está livre de contexto. Ele não faz uso de palavras específicas ou para identificar e interpretar a entrada de áudio do word. Para adicionar contexto para a gramática de ditado, use o <xref:System.Speech.Recognition.DictationGrammar.SetDictationContext%2A> método.  
  
> [!NOTE]
>  <xref:System.Speech.Recognition.DictationGrammar> objetos não dão suporte a <xref:System.Speech.Recognition.Grammar.Priority%2A> propriedade. <xref:System.Speech.Recognition.DictationGrammar> gera uma <xref:System.NotSupportedException> se <xref:System.Speech.Recognition.Grammar.Priority%2A> está definido.  
  
   
  
## Examples  
 O exemplo a seguir cria três gramáticas de ditado, adiciona-os a um novo <xref:System.Speech.Recognition.SpeechRecognitionEngine> de objeto e retorna o novo objeto. A gramática a primeira é a gramática de ditado padrão. A segunda gramática é a gramática de ditado de ortografia. A gramática a terceira é a gramática de ditado padrão que inclui uma frase de contexto. O <xref:System.Speech.Recognition.DictationGrammar.SetDictationContext%2A> método é usado para associar a frase de contexto com a gramática de ditado depois que ele é carregado para o <xref:System.Speech.Recognition.SpeechRecognitionEngine> objeto.  
  
```csharp  
  
private SpeechRecognitionEngine LoadDictationGrammars()  
{  
  
  // Create a default dictation grammar.  
  DictationGrammar defaultDictationGrammar = new DictationGrammar();  
  defaultDictationGrammar.Name = "default dictation";  
  defaultDictationGrammar.Enabled = true;  
  
  // Create the spelling dictation grammar.  
  DictationGrammar spellingDictationGrammar =  
    new DictationGrammar("grammar:dictation#spelling");  
  spellingDictationGrammar.Name = "spelling dictation";  
  spellingDictationGrammar.Enabled = true;  
  
  // Create the question dictation grammar.  
  DictationGrammar customDictationGrammar =  
    new DictationGrammar("grammar:dictation");  
  customDictationGrammar.Name = "question dictation";  
  customDictationGrammar.Enabled = true;  
  
  // Create a SpeechRecognitionEngine object and add the grammars to it.  
  SpeechRecognitionEngine recoEngine = new SpeechRecognitionEngine();  
  recoEngine.LoadGrammar(defaultDictationGrammar);  
  recoEngine.LoadGrammar(spellingDictationGrammar);  
  recoEngine.LoadGrammar(customDictationGrammar);  
  
  // Add a context to customDictationGrammar.  
  customDictationGrammar.SetDictationContext("How do you", null);  
  
  return recoEngine;  
}  
  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Recognition.Grammar" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Speech.Recognition.DictationGrammar" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DictationGrammar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.DictationGrammar.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DictationGrammar();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Speech.Recognition.DictationGrammar" /> para a gramática de ditado padrão fornecida pela Tecnologia de Fala da Área de Trabalho do Windows.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A gramática de ditado padrão emula práticas de ditado padrão, incluindo a pontuação. Ele não oferece suporte a ortografia de uma palavra.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DictationGrammar (string topic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string topic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.DictationGrammar.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (topic As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DictationGrammar(System::String ^ topic);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.DictationGrammar : string -&gt; System.Speech.Recognition.DictationGrammar" Usage="new System.Speech.Recognition.DictationGrammar topic" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="topic" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="topic">Um URI (identificador de recurso universal) em conformidade com XML que especifica a gramática de ditado, <c>grammar:dictation</c> ou <c>grammar:dictation#spelling</c>.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Speech.Recognition.DictationGrammar" /> com uma gramática de ditado específica.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A plataforma de fala usa uma sintaxe especializada do URI para definir a gramática de ditado personalizado. O valor `grammar:dictation` indica a gramática de ditado padrão. O valor `grammar:dictation#spelling` indica a gramática de ditado de ortografia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDictationContext">
      <MemberSignature Language="C#" Value="public void SetDictationContext (string precedingText, string subsequentText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDictationContext(string precedingText, string subsequentText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.DictationGrammar.SetDictationContext(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDictationContext (precedingText As String, subsequentText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDictationContext(System::String ^ precedingText, System::String ^ subsequentText);" />
      <MemberSignature Language="F#" Value="member this.SetDictationContext : string * string -&gt; unit" Usage="dictationGrammar.SetDictationContext (precedingText, subsequentText)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="precedingText" Type="System.String" />
        <Parameter Name="subsequentText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="precedingText">Texto que indica o início de um contexto de ditado.</param>
        <param name="subsequentText">Texto que indica o final de um contexto de ditado.</param>
        <summary>Adiciona um contexto a uma gramática de ditado que foi carregada por um objeto <see cref="T:System.Speech.Recognition.SpeechRecognizer" /> ou <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Por padrão, a gramática de ditado não faz uso de palavras específicas ou para identificar e interpretar a entrada de áudio do word. Quando um contexto é adicionado a uma gramática de ditado, o mecanismo de reconhecimento usa o `precedingText` e `subsequentText` para identificar quando interpretar a fala como ditado.  
  
> [!NOTE]
>  Uma gramática de ditado deve ser carregada por um <xref:System.Speech.Recognition.SpeechRecognizer> ou <xref:System.Speech.Recognition.SpeechRecognitionEngine> objeto antes de poder usar <xref:System.Speech.Recognition.DictationGrammar.SetDictationContext%2A> para adicionar um contexto.  
  
 A tabela a seguir descreve como o mecanismo de reconhecimento usa dois parâmetros para determinar quando usar a gramática de ditado.  
  
|`precedingText`|`subsequentText`|Descrição|  
|---------------------|----------------------|-----------------|  
|não é `null`|não é `null`|O mecanismo de reconhecimento usa os termos para frases do candidato possível de colchete.|  
|`null`|não é `null`|Usa o mecanismo de reconhecimento de `subsequentText` para concluir a ditado.|  
|não é `null`|`null`|Usa o mecanismo de reconhecimento de `precedingText` para iniciar o ditado.|  
|`null`|`null`|O mecanismo de reconhecimento não usa um contexto ao usar a gramática de ditado.|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Grammar" />
      </Docs>
    </Member>
  </Members>
</Type>