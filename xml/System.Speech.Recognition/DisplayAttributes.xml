<Type Name="DisplayAttributes" FullName="System.Speech.Recognition.DisplayAttributes">
  <Metadata><Meta Name="ms.openlocfilehash" Value="473896553115193630237ce92590426b774536db" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48731523" /></Metadata><TypeSignature Language="C#" Value="public enum DisplayAttributes" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed DisplayAttributes extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.DisplayAttributes" />
  <TypeSignature Language="VB.NET" Value="Public Enum DisplayAttributes" />
  <TypeSignature Language="C++ CLI" Value="public enum class DisplayAttributes" />
  <TypeSignature Language="F#" Value="type DisplayAttributes = " />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Lista as opções que o objeto <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> pode usar para especificar o espaço em branco para a exibição de uma palavra ou uma marca de pontuação.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Windows Desktop Speech retorna frases reconhecidas como coleções de <xref:System.Speech.Recognition.RecognizedWordUnit> ou <xref:System.Speech.Recognition.ReplacementText> objetos. Cada objeto corresponde a uma única palavra ou uma marca de pontuação. O `DisplayAttributes` propriedade de um <xref:System.Speech.Recognition.RecognizedWordUnit> ou <xref:System.Speech.Recognition.ReplacementText> usa um membro do <xref:System.Speech.Recognition.DisplayAttributes> enumeração para descrever como impressão espaçamento é tratada em torno de uma determinada palavra ou uma marca de pontuação.  
  
 Dois ou mais membros a `DisplayAttributes` enumeração pode ser combinada por um bit a bit `OR` para especificar como uma palavra específica deve ser exibida.  
  
> [!NOTE]
>  A formatação que o reconhecedor de fala usa de exibição é específico do idioma.  
  
 Por exemplo, suponha que a frase de entrada para um mecanismo de reconhecimento usando a gramática de sistema padrão fornecida pelo <xref:System.Speech.Recognition.DictationGrammar> é "Ele disse: período de vírgula Hello". Em seguida, o mecanismo de reconhecimento retorna um <xref:System.Speech.Recognition.RecognizedPhrase> que contém cinco <xref:System.Speech.Recognition.RecognizedWordUnit> objetos que contém as seguintes cadeias de caracteres com o seguinte `DisplayAttributes` valores.  
  
|Item|`DisplayAttributes`|  
|----------|-------------------------|  
|Hello|OneTrailingSpace|  
|,|OneTrailingSpace &#124; ConsumeLeadingSpaces|  
|he|OneTrailingSpace|  
|disse:|OneTrailingSpace|  
|.|OneTrailingSpace &#124; ConsumeLeadingSpaces|  
  
 O texto retornado para essa frase reconhecida é impresso como: "Olá, eu disse."  
  
   
  
## Examples  
 O exemplo a seguir usa o <xref:System.Speech.Recognition.RecognizedWordUnit.DisplayAttributes%2A> propriedade de uma lista de <xref:System.Speech.Recognition.RecognizedWordUnit> objetos para formatar as palavras como uma frase.  
  
```csharp  
  
// Use the DisplayAttributes property to format speech as text.   
  
static string GetDisplayText(List<RecognizedWordUnit> words)  
{  
  StringBuilder sb = new StringBuilder();  
  
  // Concatenate the word units together. Use the DisplayAttributes  
  // property of each word unit to add or remove white space around  
  // the word unit.  
  foreach (RecognizedWordUnit word in words)  
  {  
    if ((word.DisplayAttributes  
      & DisplayAttributes.ConsumeLeadingSpaces) != 0))  
    {  
      sb = new StringBuilder(sb.ToString().TrimEnd());  
    }  
  
    sb.Append(word.Text);  
  
    if ((word.DisplayAttributes  
      & DisplayAttributes.OneTrailingSpace) != 0)  
    {  
      sb.Append(" ");  
    }  
    else if ((word.DisplayAttributes  
      & DisplayAttributes.TwoTrailingSpaces) != 0)  
    {  
      sb.Append("  ");  
    }  
  }  
  
  return sb.ToString();  
}  
  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Recognition.RecognizedPhrase" />
    <altmember cref="T:System.Speech.Recognition.RecognitionResult" />
    <altmember cref="T:System.Speech.Recognition.RecognizedWordUnit" />
    <altmember cref="T:System.Speech.Recognition.ReplacementText" />
  </Docs>
  <Members>
    <Member MemberName="ConsumeLeadingSpaces">
      <MemberSignature Language="C#" Value="ConsumeLeadingSpaces" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Recognition.DisplayAttributes ConsumeLeadingSpaces = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Recognition.DisplayAttributes.ConsumeLeadingSpaces" />
      <MemberSignature Language="VB.NET" Value="ConsumeLeadingSpaces" />
      <MemberSignature Language="C++ CLI" Value="ConsumeLeadingSpaces" />
      <MemberSignature Language="F#" Value="ConsumeLeadingSpaces = 16" Usage="System.Speech.Recognition.DisplayAttributes.ConsumeLeadingSpaces" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.DisplayAttributes</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>O item não tem espaços antes dele.</summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Recognition.DisplayAttributes None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Recognition.DisplayAttributes.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberSignature Language="F#" Value="None = 0" Usage="System.Speech.Recognition.DisplayAttributes.None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.DisplayAttributes</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>O item não especifica como o espaço em branco é tratado.</summary>
      </Docs>
    </Member>
    <Member MemberName="OneTrailingSpace">
      <MemberSignature Language="C#" Value="OneTrailingSpace" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Recognition.DisplayAttributes OneTrailingSpace = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Recognition.DisplayAttributes.OneTrailingSpace" />
      <MemberSignature Language="VB.NET" Value="OneTrailingSpace" />
      <MemberSignature Language="C++ CLI" Value="OneTrailingSpace" />
      <MemberSignature Language="F#" Value="OneTrailingSpace = 4" Usage="System.Speech.Recognition.DisplayAttributes.OneTrailingSpace" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.DisplayAttributes</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>O item tem um espaço depois dele.</summary>
      </Docs>
    </Member>
    <Member MemberName="TwoTrailingSpaces">
      <MemberSignature Language="C#" Value="TwoTrailingSpaces" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Recognition.DisplayAttributes TwoTrailingSpaces = int32(8)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Recognition.DisplayAttributes.TwoTrailingSpaces" />
      <MemberSignature Language="VB.NET" Value="TwoTrailingSpaces" />
      <MemberSignature Language="C++ CLI" Value="TwoTrailingSpaces" />
      <MemberSignature Language="F#" Value="TwoTrailingSpaces = 8" Usage="System.Speech.Recognition.DisplayAttributes.TwoTrailingSpaces" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.DisplayAttributes</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>O item tem dois espaços depois dele.</summary>
      </Docs>
    </Member>
    <Member MemberName="ZeroTrailingSpaces">
      <MemberSignature Language="C#" Value="ZeroTrailingSpaces" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Recognition.DisplayAttributes ZeroTrailingSpaces = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Recognition.DisplayAttributes.ZeroTrailingSpaces" />
      <MemberSignature Language="VB.NET" Value="ZeroTrailingSpaces" />
      <MemberSignature Language="C++ CLI" Value="ZeroTrailingSpaces" />
      <MemberSignature Language="F#" Value="ZeroTrailingSpaces = 2" Usage="System.Speech.Recognition.DisplayAttributes.ZeroTrailingSpaces" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.DisplayAttributes</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>O item não tem espaços depois dele.</summary>
      </Docs>
    </Member>
  </Members>
</Type>