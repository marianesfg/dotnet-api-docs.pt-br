<Type Name="SemanticResultValue" FullName="System.Speech.Recognition.SemanticResultValue">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="797a339d2959f7a21f676aab7fd40fbe56982ddf" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SemanticResultValue" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SemanticResultValue extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.SemanticResultValue" />
  <TypeSignature Language="VB.NET" Value="Public Class SemanticResultValue" />
  <TypeSignature Language="C++ CLI" Value="public ref class SemanticResultValue" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{_tag.DebugSummary}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="3ea1b-101">Representa um valor semântico e opcionalmente associa o valor a um componente da gramática de reconhecimento de fala.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3ea1b-101">Represents a semantic value and optionally associates the value with a component of a speech recognition grammar.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ea1b-102">O uso de <xref:System.Speech.Recognition.SemanticResultValue> e <xref:System.Speech.Recognition.SemanticResultKey> objetos, em conjunto com <xref:System.Speech.Recognition.GrammarBuilder> e <xref:System.Speech.Recognition.Choices>, é a maneira mais fácil de criar uma estrutura de semântica para um <xref:System.Speech.Recognition.Grammar>.</span><span class="sxs-lookup"><span data-stu-id="3ea1b-102">Use of <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> objects, in conjunction with <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices>, is the easiest way to design a semantic structure for a <xref:System.Speech.Recognition.Grammar>.</span></span> <span data-ttu-id="3ea1b-103">Semânticas informações para uma frase são acessadas obtendo uma instância do <xref:System.Speech.Recognition.SemanticValue>, por meio de <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> propriedade <xref:System.Speech.Recognition.RecognizedPhrase>.</span><span class="sxs-lookup"><span data-stu-id="3ea1b-103">Semantic information for a phrase is accessed by obtaining an instance of <xref:System.Speech.Recognition.SemanticValue>, through the <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property on <xref:System.Speech.Recognition.RecognizedPhrase>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3ea1b-104">Valores gerenciados por <xref:System.Speech.Recognition.SemanticResultValue> objetos são definidos pelo <xref:System.Object> instâncias passadas para seus construtores.</span><span class="sxs-lookup"><span data-stu-id="3ea1b-104">Values managed by <xref:System.Speech.Recognition.SemanticResultValue> objects are defined by <xref:System.Object> instances passed to their constructors.</span></span> <span data-ttu-id="3ea1b-105">O tipo base deste <xref:System.Object> devem ser `bool`, `int`, `float`, ou `string`.</span><span class="sxs-lookup"><span data-stu-id="3ea1b-105">The underlying type of this <xref:System.Object> must be `bool`, `int`, `float`, or `string`.</span></span> <span data-ttu-id="3ea1b-106">Qualquer outro tipo impedirá que a construção de uma <xref:System.Speech.Recognition.Grammar> instância com o <xref:System.Speech.Recognition.SemanticResultValue>.</span><span class="sxs-lookup"><span data-stu-id="3ea1b-106">Any other type will prevent construction of a <xref:System.Speech.Recognition.Grammar> instance with the <xref:System.Speech.Recognition.SemanticResultValue>.</span></span>  
  
 <span data-ttu-id="3ea1b-107">O uso típico de um <xref:System.Speech.Recognition.SemanticResultValue> instância associa a instância com um componente reconhecível de um <xref:System.Speech.Recognition.Grammar>, como uma expressão, uma regra ou um <xref:System.Speech.Recognition.Choices> objeto.</span><span class="sxs-lookup"><span data-stu-id="3ea1b-107">The typical use of a <xref:System.Speech.Recognition.SemanticResultValue> instance associates the instance with a recognizable component of a <xref:System.Speech.Recognition.Grammar>, such as a phrase, a rule, or a <xref:System.Speech.Recognition.Choices> object.</span></span> <span data-ttu-id="3ea1b-108">Se o componente associado for usado como parte de uma operação de reconhecimento, o <xref:System.Speech.Recognition.SemanticResultValue> é usado para definir um valor na semântica da frase retornada.</span><span class="sxs-lookup"><span data-stu-id="3ea1b-108">If the associated component is used as part of a recognition operation, the <xref:System.Speech.Recognition.SemanticResultValue> is used to define a value in the semantics of the returned phrase.</span></span>  
  
 <span data-ttu-id="3ea1b-109">Há dois métodos básicos para associar um <xref:System.Speech.Recognition.SemanticResultValue> instância com um elemento de gramática, dependendo do construtor usado para criar o <xref:System.Speech.Recognition.SemanticResultValue>.</span><span class="sxs-lookup"><span data-stu-id="3ea1b-109">There are two basic methods for associating a <xref:System.Speech.Recognition.SemanticResultValue> instance with a grammar element, depending on the constructor used to create the <xref:System.Speech.Recognition.SemanticResultValue>.</span></span>  
  
-   <span data-ttu-id="3ea1b-110">Se apenas o valor (especificado por uma instância do <xref:System.Object>) é usado para construir um <xref:System.Speech.Recognition.SemanticResultValue> objeto, o <xref:System.Speech.Recognition.SemanticResultValue> é associado ao componente de gramática anteriores, além um <xref:System.Speech.Recognition.GrammarBuilder> objeto.</span><span class="sxs-lookup"><span data-stu-id="3ea1b-110">If only the value (specified by an instance of <xref:System.Object>) is used to construct a <xref:System.Speech.Recognition.SemanticResultValue> object, the <xref:System.Speech.Recognition.SemanticResultValue> is associated with the grammar component that preceded it, in addition to a <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
     <span data-ttu-id="3ea1b-111">Por exemplo, no fragmento de código abaixo, se um <xref:System.Speech.Recognition.Grammar> construído usando esse <xref:System.Speech.Recognition.GrammarBuilder> instância reconhece a palavra "em segundo plano", um valor de `true` é definido na semântica de frase reconhecida.</span><span class="sxs-lookup"><span data-stu-id="3ea1b-111">For instance, in the code fragment below, if a <xref:System.Speech.Recognition.Grammar> constructed using this <xref:System.Speech.Recognition.GrammarBuilder> instance recognizes the word "background", a value of `true` is set in the recognized phrase semantics.</span></span>  
  
    ```csharp  
    GrammarBuilder backgroundGB=new GrammarBuilder("background");  
    backgroundGB.Append(new SemanticResultValue(true));  
    ```  
  
     <span data-ttu-id="3ea1b-112">Para obter mais informações, consulte a descrição de <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Object%29>.</span><span class="sxs-lookup"><span data-stu-id="3ea1b-112">For more information, see the description of <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Object%29>.</span></span>  
  
-   <span data-ttu-id="3ea1b-113">Se uma expressão de valor de cadeia de caracteres ou específico <xref:System.Speech.Recognition.GrammarBuilder> instância é usado, juntamente com um <xref:System.Object> que especifica um <xref:System.Speech.Recognition.SemanticResultValue> de valor, que o valor é associado automaticamente a expressão de valor de cadeia de caracteres ou o <xref:System.Speech.Recognition.GrammarBuilder> instância.</span><span class="sxs-lookup"><span data-stu-id="3ea1b-113">If a string value phrase or specific <xref:System.Speech.Recognition.GrammarBuilder> instance is used, together with a <xref:System.Object> that specifies a <xref:System.Speech.Recognition.SemanticResultValue> value, that value is automatically associated with the string value phrase or the <xref:System.Speech.Recognition.GrammarBuilder> instance.</span></span>  <span data-ttu-id="3ea1b-114">Se a frase ou <xref:System.Speech.Recognition.GrammarBuilder> objeto é usado no processo de reconhecimento, o valor será atribuído para a semântica da frase reconhecida.</span><span class="sxs-lookup"><span data-stu-id="3ea1b-114">If the phrase or <xref:System.Speech.Recognition.GrammarBuilder> object is used in the process of recognition, the value will be assigned to the semantics of the recognized phrase.</span></span>  
  
     <span data-ttu-id="3ea1b-115">O exemplo a seguir ilustra isso e é funcionalmente equivalente ao exemplo anterior, que é usada nas chamadas explícitas <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> e <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Object%29>.</span><span class="sxs-lookup"><span data-stu-id="3ea1b-115">The following example illustrates this, and is functionally equivalent to the preceding example, which used explicit calls to <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> and <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Object%29>.</span></span> <span data-ttu-id="3ea1b-116">Se a lógica de reconhecimento usa a palavra "em segundo plano", o valor `true` será adicionado para a semântica reconhecida.</span><span class="sxs-lookup"><span data-stu-id="3ea1b-116">If the recognition logic uses the word "background", the value `true` will be added to the recognized semantics.</span></span>  
  
    ```csharp  
    fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("background", true));  
    ```  
  
     <span data-ttu-id="3ea1b-117">Para obter mais informações, consulte a descrição do <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Speech.Recognition.GrammarBuilder%2CSystem.Object%29> e <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.String%2CSystem.Object%29>.</span><span class="sxs-lookup"><span data-stu-id="3ea1b-117">For more information, see the description of <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Speech.Recognition.GrammarBuilder%2CSystem.Object%29> and <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.String%2CSystem.Object%29>.</span></span>  
  
 <span data-ttu-id="3ea1b-118">Para ser usado por um <xref:System.Speech.Recognition.Grammar> no reconhecimento, todos os <xref:System.Speech.Recognition.SemanticResultValue> instâncias devem ser associadas uma da <xref:System.Speech.Recognition.SemanticValue> objetos usados pelo <xref:System.Speech.Recognition.Grammar>.</span><span class="sxs-lookup"><span data-stu-id="3ea1b-118">To be used by a <xref:System.Speech.Recognition.Grammar> in recognition, all <xref:System.Speech.Recognition.SemanticResultValue> instances must be associated with one of the <xref:System.Speech.Recognition.SemanticValue> objects used by that <xref:System.Speech.Recognition.Grammar>.</span></span> <span data-ttu-id="3ea1b-119">Isso é feito pela associação de uma chave semântica com o <xref:System.Speech.Recognition.SemanticResultValue>.</span><span class="sxs-lookup"><span data-stu-id="3ea1b-119">This is done by associating a semantic key with the <xref:System.Speech.Recognition.SemanticResultValue>.</span></span>  
  
 <span data-ttu-id="3ea1b-120">Chaves semânticas explicitamente podem ser anexadas a um <xref:System.Speech.Recognition.SemanticResultValue>usando um <xref:System.Speech.Recognition.SemanticResultKey> objeto.</span><span class="sxs-lookup"><span data-stu-id="3ea1b-120">Semantic keys can be explicitly attached to a <xref:System.Speech.Recognition.SemanticResultValue>, using a <xref:System.Speech.Recognition.SemanticResultKey> object.</span></span>  <span data-ttu-id="3ea1b-121"><xref:System.Speech.Recognition.SemanticResultValue> instâncias não explicitamente anexadas a uma chave associadas à chave raiz padrão do <xref:System.Speech.Recognition.SemanticValue>.</span><span class="sxs-lookup"><span data-stu-id="3ea1b-121"><xref:System.Speech.Recognition.SemanticResultValue> instances not explicitly attached to a key are attached to the root key of the default <xref:System.Speech.Recognition.SemanticValue>.</span></span>  
  
 <span data-ttu-id="3ea1b-122">Após um <xref:System.Speech.Recognition.SemanticResultValue> foi usado para definir o <xref:System.Speech.Recognition.SemanticValue.Value%2A>, se ele é marcado com a chave de raiz padrão ou por qualquer <xref:System.Speech.Recognition.SemanticResultKey>, esse valor não deve ser modificado ou ocorrerá uma exceção durante as operações de reconhecimento.</span><span class="sxs-lookup"><span data-stu-id="3ea1b-122">After a <xref:System.Speech.Recognition.SemanticResultValue> has been used to set the <xref:System.Speech.Recognition.SemanticValue.Value%2A>, whether it is tagged with the default root key or by any particular <xref:System.Speech.Recognition.SemanticResultKey>, that value must not be modified or an exception will occur during recognition operations.</span></span>  
  
 <span data-ttu-id="3ea1b-123">O exemplo a seguir fará com que uma exceção porque ele define e, em seguida, modifica a raiz <xref:System.Speech.Recognition.SemanticValue.Value%2A> de um <xref:System.Speech.Recognition.Grammar>.</span><span class="sxs-lookup"><span data-stu-id="3ea1b-123">The following example will cause an exception because it sets and then modifies the root <xref:System.Speech.Recognition.SemanticValue.Value%2A> of a <xref:System.Speech.Recognition.Grammar>.</span></span>  
  
```csharp  
GrammarBuilder gb=new GrammarBuilder();  
gb.Append(new SemanticResultValue("One"));  
gb.Append(new SemanticResultValue("Two"));  
```  
  
 <span data-ttu-id="3ea1b-124">Por outro lado, o código no exemplo a seguir é permitido.</span><span class="sxs-lookup"><span data-stu-id="3ea1b-124">On the other hand, the code in the following example is permitted.</span></span> <span data-ttu-id="3ea1b-125">Embora ela define várias instâncias do <xref:System.Speech.Recognition.SemanticResultValue>, estão incluídos em um <xref:System.Speech.Recognition.Choices> objeto e será apenas uma constante a ser usado para definir o valor da chave `bgOrfgText`.</span><span class="sxs-lookup"><span data-stu-id="3ea1b-125">Although it defines multiple instances of <xref:System.Speech.Recognition.SemanticResultValue>, they are included in a <xref:System.Speech.Recognition.Choices> object, and only one will ever be used to set the value of the key `bgOrfgText`.</span></span>  
  
```csharp  
Choices fgOrbgChoice = new Choices();  
fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("background"));  
fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("foreground"));  
SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey("BgOrFgText", fgOrbgChoice);  
```  
  
 <span data-ttu-id="3ea1b-126">Para obter mais informações sobre como usar <xref:System.Speech.Recognition.SemanticResultValue> e <xref:System.Speech.Recognition.SemanticResultKey> objetos, consulte [SemanticResultValue de compreensão e objetos SemanticResultKey](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c) e [usando um SemanticResultKey para extrair um SemanticResultValue](http://msdn.microsoft.com/library/198e29b8-845f-4cec-a25e-f55c0eaf46aa) no [guia de programação de fala de sistema para o .NET Framework 4.0](http://msdn.microsoft.com/library/610116c7-3817-40ff-857b-5d41e8511043).</span><span class="sxs-lookup"><span data-stu-id="3ea1b-126">For more information about using <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> objects, see [Understanding SemanticResultValue and SemanticResultKey Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c) and [Using a SemanticResultKey to Extract a SemanticResultValue](http://msdn.microsoft.com/library/198e29b8-845f-4cec-a25e-f55c0eaf46aa) in the [System Speech Programming Guide for .NET Framework 4.0](http://msdn.microsoft.com/library/610116c7-3817-40ff-857b-5d41e8511043).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ea1b-127">O exemplo a seguir retorna um <xref:System.Speech.Recognition.Grammar> que reconhece o comando "definir/alterar/Alter primeiro e segundo plano...</span><span class="sxs-lookup"><span data-stu-id="3ea1b-127">The following example returns a <xref:System.Speech.Recognition.Grammar> that recognizes the command "Set/Change/Alter Foreground/Background …</span></span> <span data-ttu-id="3ea1b-128">[lista de cor] ".</span><span class="sxs-lookup"><span data-stu-id="3ea1b-128">[color list]".</span></span>  <span data-ttu-id="3ea1b-129"><xref:System.Speech.Recognition.SemanticResultValue> e <xref:System.Speech.Recognition.SemanticResultKey> instâncias (em conjunto com <xref:System.Speech.Recognition.Choices> e <xref:System.Speech.Recognition.GrammarBuilder> objetos) são usadas para definir semânticas que podem ser analisadas no reconhecimento.</span><span class="sxs-lookup"><span data-stu-id="3ea1b-129"><xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> instances (in conjunction with <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects) are used to define semantics that can be parsed on recognition.</span></span>  <span data-ttu-id="3ea1b-130">A semântica analisada determinará qual cor foi solicitado e se o primeiro ou segundo plano é a ser modificado.</span><span class="sxs-lookup"><span data-stu-id="3ea1b-130">The parsed semantics will determine which color was requested and whether the foreground or background is to be modified.</span></span>  
  
```  
  
private Grammar FgBgColorGrammar()   
{  
  Grammar grammar = null;  
  
  // Allow the command to begin with set, alter, change.  
  Choices introChoices = new Choices();  
  foreach (string introString in new string[] { "Change", "Set", "Alter" })   
  {  
    GrammarBuilder introGB = new GrammarBuilder(introString);  
    introChoices.Add(new SemanticResultValue(introGB, String.Format("Command: {0}", introString)));  
  }    
  
  GrammarBuilder cmdIntro = new GrammarBuilder(introChoices);  
  
  // Define the arguments for the command to select foreground or background   
  // and to change their color as semantic values.  
  Choices fgOrbgChoice = new Choices();  
  GrammarBuilder backgroundGB=new GrammarBuilder("background");  
  backgroundGB.Append(new SemanticResultValue(true));  
  fgOrbgChoice.Add(backgroundGB);  
  fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("foreground", false));  
  SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey("BgOrFgBool", fgOrbgChoice);  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      
    colorChoice.Add(  
        (GrammarBuilder) (new SemanticResultValue(colorName, (Color.FromName(colorName)).Name)));  
  }  
  
  // Create a GrammarBuilder for CmdArgs to be appended to CmdIntro using  
  // semantic keys.  
  GrammarBuilder cmdArgs = new GrammarBuilder();  
  cmdArgs.Append(new SemanticResultKey("BgOrFgBool", fgOrbgChoice));  
  cmdArgs.AppendWildcard();  
  cmdArgs.Append(new SemanticResultKey("colorStringList", colorChoice));  
  
  GrammarBuilder cmds =   
      GrammarBuilder.Add(  
                       cmdIntro,  
                       new GrammarBuilder(new SemanticResultKey("Cmd Args", cmdArgs)));  
  grammar = new Grammar(cmds);  
  grammar.Name = "Tree [Set,change,alter] [foreground,background] * color";  
  return grammar;  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3ea1b-131">Inicializa uma nova instância da classe <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ea1b-131">Initializes a new instance of the <see cref="T:System.Speech.Recognition.SemanticResultValue" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ea1b-132">O `SemanticResultValue` construtores de suporte à especificação de um <xref:System.Object> instância com um tipo de dados subjacente de `bool`, `int`, `float`, ou `string`.</span><span class="sxs-lookup"><span data-stu-id="3ea1b-132">The `SemanticResultValue` constructors support specifying an <xref:System.Object> instance with an underlying data type of `bool`, `int`, `float`, or `string`.</span></span>  
  
 <span data-ttu-id="3ea1b-133">Um construtor pode criar um `SemanticResultValue` instância em qualquer uma das duas circunstâncias:</span><span class="sxs-lookup"><span data-stu-id="3ea1b-133">A constructor can create a `SemanticResultValue` instance in either of two circumstances:</span></span>  
  
-   <span data-ttu-id="3ea1b-134">O `SemanticResultValue` instância deve ser explicitamente associada com um elemento de gramática ao usar um <xref:System.Speech.Recognition.GrammarBuilder> para construir um <xref:System.Speech.Recognition.Grammar>.</span><span class="sxs-lookup"><span data-stu-id="3ea1b-134">The `SemanticResultValue` instance must be explicitly associated with a grammar element when using a <xref:System.Speech.Recognition.GrammarBuilder> to construct a <xref:System.Speech.Recognition.Grammar>.</span></span>  
  
-   <span data-ttu-id="3ea1b-135">O `SemanticResultValue` já está associado uma expressão de valor de cadeia de caracteres ou um <xref:System.Speech.Recognition.GrammarBuilder> objeto.</span><span class="sxs-lookup"><span data-stu-id="3ea1b-135">The `SemanticResultValue` is already associated with a string value phrase or a <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemanticResultValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultValue.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemanticResultValue(System::Object ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3ea1b-136">O valor gerenciado pelo <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ea1b-136">The value managed by <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span>
          </span>
          <span data-ttu-id="3ea1b-137">Deve ser do tipo <see langword="bool" />, <see langword="int" />, <see langword="float" /> ou <see langword="string" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ea1b-137">Must be of type <see langword="bool" />, <see langword="int" />, <see langword="float" />, or <see langword="string" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3ea1b-138">Inicializa uma nova instância da classe <see cref="T:System.Speech.Recognition.SemanticResultValue" /> e especifica um valor semântico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ea1b-138">Initializes a new instance of the <see cref="T:System.Speech.Recognition.SemanticResultValue" /> class and specifies a semantic value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ea1b-139">Um `SemanticResultValue` retornado por este construtor não está associado um elemento específico de gramática.</span><span class="sxs-lookup"><span data-stu-id="3ea1b-139">A `SemanticResultValue` returned by this constructor is not associated with any particular grammar element.</span></span> <span data-ttu-id="3ea1b-140">A associação deve ser tornada explícita usando a instância de `SemanticResultValue` em conjunto com <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="3ea1b-140">The association must be made explicit by using the instance of `SemanticResultValue` in conjunction with <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="3ea1b-141">Por exemplo, no fragmento de código abaixo, se um <xref:System.Speech.Recognition.Grammar> construído usando esse <xref:System.Speech.Recognition.GrammarBuilder> instância reconhece a palavra "em segundo plano", um valor de `true` é definido na semântica de frase reconhecida.</span><span class="sxs-lookup"><span data-stu-id="3ea1b-141">For instance, in the code fragment below, if a <xref:System.Speech.Recognition.Grammar> constructed using this <xref:System.Speech.Recognition.GrammarBuilder> instance recognizes the word "background", a value of `true` is set in the recognized phrase semantics.</span></span>  
  
```csharp  
GrammarBuilder backgroundGB=new GrammarBuilder("background");  
backgroundGB.Append(new SemanticResultValue(true));  
```  
  
   
  
## Examples  
 <span data-ttu-id="3ea1b-142">O exemplo a seguir retorna um <xref:System.Speech.Recognition.Grammar> que reconhece o comando "definir/alterar/Alter primeiro e segundo plano...</span><span class="sxs-lookup"><span data-stu-id="3ea1b-142">The following example returns a <xref:System.Speech.Recognition.Grammar> that recognizes the command "Set/Change/Alter Foreground/Background …</span></span> <span data-ttu-id="3ea1b-143">[lista de cor] ".</span><span class="sxs-lookup"><span data-stu-id="3ea1b-143">[color list]".</span></span> <span data-ttu-id="3ea1b-144"><xref:System.Speech.Recognition.SemanticResultValue> e <xref:System.Speech.Recognition.SemanticResultKey> instâncias (em conjunto com <xref:System.Speech.Recognition.Choices> e <xref:System.Speech.Recognition.GrammarBuilder> objetos) são usadas para definir semânticas que podem ser analisadas no reconhecimento.</span><span class="sxs-lookup"><span data-stu-id="3ea1b-144"><xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> instances (in conjunction with <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects) are used to define semantics that can be parsed on recognition.</span></span>  <span data-ttu-id="3ea1b-145">A semântica analisada determinará qual cor foi solicitado e se o primeiro ou segundo plano é a ser modificado.</span><span class="sxs-lookup"><span data-stu-id="3ea1b-145">The parsed semantics will determine which color was requested and whether the foreground or background is to be modified.</span></span>  
  
```csharp  
  
private Grammar FgBgColorGrammar()   
{  
  Grammar grammar = null;  
  
  // Allow the command to begin with set, alter, change.  
  Choices introChoices = new Choices();  
  foreach (string introString in new string[] { "Change", "Set", "Alter" })   
  {  
    GrammarBuilder introGB = new GrammarBuilder(introString);  
    introChoices.Add(  
                  new SemanticResultValue(introGB,  
                  String.Format("Command: {0}", introString)));  
  }           
  
  GrammarBuilder cmdIntro = new GrammarBuilder(introChoices);  
  
  // Define the arguments for the command to select foreground or background   
  // and to change their color as semantic values.  
  Choices fgOrbgChoice = new Choices();  
  GrammarBuilder backgroundGB=new GrammarBuilder("background");  
  backgroundGB.Append(new SemanticResultValue(true));  
  fgOrbgChoice.Add(backgroundGB);  
  fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("foreground", false));  
  SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey("BgOrFgBool", fgOrbgChoice);  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      
    colorChoice.Add(  
                 (GrammarBuilder) (new SemanticResultValue(colorName, (Color.FromName(colorName)).Name)));  
  }  
  
  // Create a GrammarBuilder for CmdArgs to be appended to CmdIntro using  
  // semantic keys.  
  GrammarBuilder cmdArgs = new GrammarBuilder();  
  cmdArgs.Append(new SemanticResultKey("BgOrFgBool", fgOrbgChoice));  
  cmdArgs.AppendWildcard();  
  cmdArgs.Append(new SemanticResultKey("colorStringList", colorChoice));  
  
  GrammarBuilder cmds =   
      GrammarBuilder.Add(  
        cmdIntro,   
        new GrammarBuilder(new SemanticResultKey("Cmd Args", cmdArgs)));  
  grammar = new Grammar(cmds);  
  grammar.Name = "Tree [Set,change,alter] [foreground,background] * color";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemanticResultValue (System.Speech.Recognition.GrammarBuilder builder, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.GrammarBuilder builder, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultValue.#ctor(System.Speech.Recognition.GrammarBuilder,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (builder As GrammarBuilder, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemanticResultValue(System::Speech::Recognition::GrammarBuilder ^ builder, System::Object ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="builder">
          <span data-ttu-id="3ea1b-146">Um componente de gramática a ser usado no reconhecimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ea1b-146">A grammar component to be used in recognition.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="3ea1b-147">O valor gerenciado pelo <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ea1b-147">The value managed by <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span>
          </span>
          <span data-ttu-id="3ea1b-148">Deve ser do tipo <see langword="bool" />, <see langword="int" />, <see langword="float" /> ou <see langword="string" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ea1b-148">Must be of type <see langword="bool" />, <see langword="int" />, <see langword="float" />, or <see langword="string" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3ea1b-149">Inicializa uma nova instância da classe <see cref="T:System.Speech.Recognition.SemanticResultValue" /> e associa um valor semântico a um objeto <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ea1b-149">Initializes a new instance of the <see cref="T:System.Speech.Recognition.SemanticResultValue" /> class and associates a semantic value with a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ea1b-150">Se o elemento de gramática especificado por <xref:System.Speech.Recognition.GrammarBuilder> é usada na lógica de reconhecimento, `value` definirá a semântica da saída reconhecida.</span><span class="sxs-lookup"><span data-stu-id="3ea1b-150">If the grammar element specified by <xref:System.Speech.Recognition.GrammarBuilder> is used in the recognition logic, `value` will be set in the semantics of the recognized output.</span></span>  
  
 <span data-ttu-id="3ea1b-151">No fragmento de código abaixo, se a lógica de reconhecimento construído com o <xref:System.Speech.Recognition.GrammarBuilder> instância (`myGb`) usa o <xref:System.Speech.Recognition.Choices> objeto (`myChoice`) identificar de entrada, o valor `true` é adicionado para a semântica reconhecida.</span><span class="sxs-lookup"><span data-stu-id="3ea1b-151">In the code fragment below, if the recognition logic constructed with the <xref:System.Speech.Recognition.GrammarBuilder> instance (`myGb`) uses the <xref:System.Speech.Recognition.Choices> object (`myChoice`) to identify input, the value `true` is added to the recognized semantics.</span></span>  
  
```csharp  
myGb.Append(new SemanticResultValue(myChoice, true);  
```  
  
 <span data-ttu-id="3ea1b-152">Como <xref:System.Speech.Recognition.GrammarBuilder> dá suporte à conversão implícita para <xref:System.Speech.Recognition.Choices>, `SemanticResultValue`, e <xref:System.Speech.Recognition.SemanticResultKey>, esses objetos também pode ser usados por este construtor.</span><span class="sxs-lookup"><span data-stu-id="3ea1b-152">As <xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversion for <xref:System.Speech.Recognition.Choices>,  `SemanticResultValue`, and <xref:System.Speech.Recognition.SemanticResultKey>, this constructor can use those objects as well.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ea1b-153">O exemplo a seguir retorna um <xref:System.Speech.Recognition.Grammar> que reconhece o comando "definir/alterar/Alter primeiro e segundo plano...</span><span class="sxs-lookup"><span data-stu-id="3ea1b-153">The following example returns a <xref:System.Speech.Recognition.Grammar> that recognizes the command "Set/Change/Alter Foreground/Background …</span></span> <span data-ttu-id="3ea1b-154">[lista de cor] ".</span><span class="sxs-lookup"><span data-stu-id="3ea1b-154">[color list]".</span></span> <span data-ttu-id="3ea1b-155"><xref:System.Speech.Recognition.SemanticResultValue> e <xref:System.Speech.Recognition.SemanticResultKey> instâncias (em conjunto com <xref:System.Speech.Recognition.Choices> e <xref:System.Speech.Recognition.GrammarBuilder> objetos) são usadas para definir semânticas que podem ser analisadas no reconhecimento.</span><span class="sxs-lookup"><span data-stu-id="3ea1b-155"><xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> instances (in conjunction with <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects) are used to define semantics that can be parsed on recognition.</span></span>  <span data-ttu-id="3ea1b-156">A semântica analisada determinará qual cor foi solicitado e se o primeiro ou segundo plano é a ser modificado.</span><span class="sxs-lookup"><span data-stu-id="3ea1b-156">The parsed semantics will determine which color was requested and whether the foreground or background is to be modified.</span></span>  
  
```csharp  
  
private Grammar FgBgColorGrammar()   
{  
  Grammar grammar = null;  
  
  // Allow the command to begin with set, alter, change.  
  Choices introChoices = new Choices();  
  foreach (string introString in new string[] { "Change", "Set", "Alter" })   
  {  
    GrammarBuilder introGB = new GrammarBuilder(introString);  
    introChoices.Add(  
                  new SemanticResultValue(introGB,  
                  String.Format("Command: {0}", introString)));  
  }           
  GrammarBuilder cmdIntro = new GrammarBuilder(introChoices);  
  
  // Define the arguments for the command to select foreground or background   
  // and to change their color as semantic values.  
  Choices fgOrbgChoice = new Choices();  
  GrammarBuilder backgroundGB=new GrammarBuilder("background");  
  backgroundGB.Append(new SemanticResultValue(true));  
  fgOrbgChoice.Add(backgroundGB);  
  fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("foreground", false));  
  SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey("BgOrFgBool", fgOrbgChoice);  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      
    colorChoice.Add(  
              (GrammarBuilder) (new SemanticResultValue(colorName, (Color.FromName(colorName)).Name)));  
    }  
  
  // Create a GrammarBuilder for CmdArgs to be appended to CmdIntro using  
  // semantic keys.  
  GrammarBuilder cmdArgs = new GrammarBuilder();  
  cmdArgs.Append(new SemanticResultKey("BgOrFgBool", fgOrbgChoice));  
  cmdArgs.AppendWildcard();  
  cmdArgs.Append(new SemanticResultKey("colorStringList", colorChoice));  
  
  GrammarBuilder cmds =   
      GrammarBuilder.Add(  
                      cmdIntro,  
                      new GrammarBuilder(new SemanticResultKey("Cmd Args", cmdArgs)));  
  grammar = new Grammar(cmds);  
  grammar.Name = "Tree [Set,change,alter] [foreground,background] * color";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemanticResultValue (string phrase, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string phrase, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultValue.#ctor(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (phrase As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemanticResultValue(System::String ^ phrase, System::Object ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="3ea1b-157">Uma frase para ser usada no reconhecimento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ea1b-157">A phrase to be used in recognition.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="3ea1b-158">O valor gerenciado pelo <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ea1b-158">The value managed by <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span>
          </span>
          <span data-ttu-id="3ea1b-159">Deve ser do tipo <see langword="bool" />, <see langword="int" />, <see langword="float" /> ou <see langword="string" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ea1b-159">Must be of type <see langword="bool" />, <see langword="int" />, <see langword="float" />, or <see langword="string" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3ea1b-160">Inicializa uma nova instância da classe <see cref="T:System.Speech.Recognition.SemanticResultValue" /> e associa um valor semântico a um objeto <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ea1b-160">Initializes a new instance of the <see cref="T:System.Speech.Recognition.SemanticResultValue" /> class and associates a semantic value with a <see cref="T:System.String" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ea1b-161">Se a cadeia de caracteres especificado por `phrase` é usada na lógica de reconhecimento, `value` definirá a semântica da saída reconhecida.</span><span class="sxs-lookup"><span data-stu-id="3ea1b-161">If the string specified by `phrase` is used in the recognition logic, `value` will be set in the semantics of the recognized output.</span></span>  
  
 <span data-ttu-id="3ea1b-162">No seguinte fragmento de código, se a lógica de reconhecimento construído com o <xref:System.Speech.Recognition.GrammarBuilder> instância (`myGb`) usa a cadeia de caracteres "minha hipoteca" identificar de entrada, o valor `true` será adicionado para a semântica reconhecida.</span><span class="sxs-lookup"><span data-stu-id="3ea1b-162">In the following code fragment, if the recognition logic constructed with the <xref:System.Speech.Recognition.GrammarBuilder> instance (`myGb`) uses the string "my mortgage" to identify input, the value `true` will be added to the recognized semantics.</span></span>  
  
```csharp  
myGb.Append(new SemanticResultValue("my mortgage", true);  
```  
  
   
  
## Examples  
 <span data-ttu-id="3ea1b-163">O exemplo a seguir retorna um <xref:System.Speech.Recognition.Grammar> que reconhece o comando "definir/alterar/Alter primeiro e segundo plano...</span><span class="sxs-lookup"><span data-stu-id="3ea1b-163">The following example returns a <xref:System.Speech.Recognition.Grammar> that recognizes the command "Set/Change/Alter Foreground/Background …</span></span> <span data-ttu-id="3ea1b-164">[lista de cor] ".</span><span class="sxs-lookup"><span data-stu-id="3ea1b-164">[color list]".</span></span> <span data-ttu-id="3ea1b-165"><xref:System.Speech.Recognition.SemanticResultValue> e <xref:System.Speech.Recognition.SemanticResultKey> instâncias (em conjunto com <xref:System.Speech.Recognition.Choices> e <xref:System.Speech.Recognition.GrammarBuilder> objetos) são usadas para definir semânticas que podem ser analisadas no reconhecimento.</span><span class="sxs-lookup"><span data-stu-id="3ea1b-165"><xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> instances (in conjunction with <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects) are used to define semantics that can be parsed on recognition.</span></span>  <span data-ttu-id="3ea1b-166">A semântica analisada determinará qual cor foi solicitado e se o primeiro ou segundo plano é a ser modificado.</span><span class="sxs-lookup"><span data-stu-id="3ea1b-166">The parsed semantics will determine which color was requested and whether the foreground or background is to be modified.</span></span>  
  
```  
private Grammar FgBgColorGrammar()   
{  
  Grammar grammar = null;  
  
  // Allow command to begin with set, alter, change.  
  Choices introChoices = new Choices();  
  foreach (string introString in new string[] { "Change", "Set", "Alter" })   
  {  
    GrammarBuilder introGB = new GrammarBuilder(introString);  
    introChoices.Add(  
                  new SemanticResultValue(introGB,  
                  String.Format("Command: {0}", introString)));  
  }  
  
  GrammarBuilder cmdIntro = new GrammarBuilder(introChoices);  
  
  // Define the arguments for the command to select foreground or background   
  // and to change their color as semantic values.  
  Choices fgOrbgChoice = new Choices();  
  GrammarBuilder backgroundGB=new GrammarBuilder("background");  
  backgroundGB.Append(new SemanticResultValue(true));  
  fgOrbgChoice.Add(backgroundGB);  
  fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("foreground", false));  
  SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey("BgOrFgBool", fgOrbgChoice);  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      
    colorChoice.Add(  
          (GrammarBuilder) (new SemanticResultValue(colorName, (Color.FromName(colorName)).Name)));  
  }  
  
  // Create a GrammarBuilder for CmdArgs to be appended to CmdIntro using  
  // semantic keys.  
  GrammarBuilder cmdArgs = new GrammarBuilder();  
  cmdArgs.Append(new SemanticResultKey("BgOrFgBool", fgOrbgChoice));  
  cmdArgs.AppendWildcard();  
  cmdArgs.Append(new SemanticResultKey("colorStringList", colorChoice));  
  
  GrammarBuilder cmds =   
      GrammarBuilder.Add(cmdIntro,  
                         new GrammarBuilder(new SemanticResultKey("Cmd Args", cmdArgs)));  
  grammar = new Grammar(cmds);  
  grammar.Name = "Tree [Set,change,alter] [foreground,background] * color";  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToGrammarBuilder">
      <MemberSignature Language="C#" Value="public System.Speech.Recognition.GrammarBuilder ToGrammarBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Recognition.GrammarBuilder ToGrammarBuilder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Function ToGrammarBuilder () As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Recognition::GrammarBuilder ^ ToGrammarBuilder();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3ea1b-167">Retorna uma instância de <see cref="T:System.Speech.Recognition.GrammarBuilder" /> construída com base na instância de <see cref="T:System.Speech.Recognition.SemanticResultValue" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ea1b-167">Returns an instance of <see cref="T:System.Speech.Recognition.GrammarBuilder" /> constructed from the current <see cref="T:System.Speech.Recognition.SemanticResultValue" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3ea1b-168">Retorna uma instância de <see cref="T:System.Speech.Recognition.GrammarBuilder" /> construída com base na instância de <see cref="T:System.Speech.Recognition.SemanticResultValue" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ea1b-168">Returns an instance of <see cref="T:System.Speech.Recognition.GrammarBuilder" /> constructed from the current <see cref="T:System.Speech.Recognition.SemanticResultValue" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ea1b-169">O uso de <xref:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder%2A> é equivalente a usar o <xref:System.Speech.Recognition.GrammarBuilder> construtor que usa um <xref:System.Speech.Recognition.SemanticResultValue> como um argumento (<xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultValue%29>).</span><span class="sxs-lookup"><span data-stu-id="3ea1b-169">The use of <xref:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder%2A> is equivalent to using the <xref:System.Speech.Recognition.GrammarBuilder> constructor that takes a <xref:System.Speech.Recognition.SemanticResultValue> as an argument (<xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultValue%29>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ea1b-170">O exemplo a seguir cria <xref:System.Speech.Recognition.Grammar> objetos que dão suporte a comandos para alterar a cor do plano de fundo.</span><span class="sxs-lookup"><span data-stu-id="3ea1b-170">The following example creates <xref:System.Speech.Recognition.Grammar> objects that support commands to change the background color.</span></span>  
  
 <span data-ttu-id="3ea1b-171">Um <xref:System.Speech.Recognition.Choices> objeto (`colorChoice`) que contém a lista de opções para as cores de plano de fundo é preenchido usando o <xref:System.Speech.Recognition.Choices.Add%28System.Speech.Recognition.GrammarBuilder%5B%5D%29> método com <xref:System.Speech.Recognition.GrammarBuilder> instâncias que são obtidas do <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> método o `SemanticResultValue` objetos criados de cadeias de caracteres de cor.</span><span class="sxs-lookup"><span data-stu-id="3ea1b-171">A <xref:System.Speech.Recognition.Choices> object (`colorChoice`) containing the list of options for background colors is filled using the <xref:System.Speech.Recognition.Choices.Add%28System.Speech.Recognition.GrammarBuilder%5B%5D%29> method with <xref:System.Speech.Recognition.GrammarBuilder> instances that are obtained from the <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> method on the `SemanticResultValue` objects created from color strings.</span></span>  
  
 <span data-ttu-id="3ea1b-172">Um <xref:System.Speech.Recognition.GrammarBuilder> , em seguida, é obtida chamando <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> em uma <xref:System.Speech.Recognition.SemanticResultKey> instância, que será usada para as opções semânticas de chave de `colorChoice` instância.</span><span class="sxs-lookup"><span data-stu-id="3ea1b-172">A <xref:System.Speech.Recognition.GrammarBuilder> is then obtained by calling <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> on a <xref:System.Speech.Recognition.SemanticResultKey> instance, which will be used to key the semantic choices in the `colorChoice` instance.</span></span>  
  
```csharp  
  
private Grammar CreateGrammarBuilderRGBSemantics()   
{  
  
  // Create a set of choices, each a lookup from a color name to RBG.  
  // Choices constructors do not take a SemanticResultValue parameter, so  
  // cast SemanticResultValue to GrammarBuilder.  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      
    SemanticResultValue colorValue =   
        new SemanticResultValue(colorName, Color.FromName(colorName).ToArgb());  
    colorChoice.Add(colorValue.ToGrammarBuilder());  
  }  
  
  SemanticResultKey choiceKey = new SemanticResultKey("rgb", colorChoice);  
  GrammarBuilder choiceBuilder = choiceKey.ToGrammarBuilder();  
  
  // Create two intermediate grammars with an introductory phrase and the  
  // color choice.  
  GrammarBuilder makeBackgroundBuilder = "Make background";  
  makeBackgroundBuilder.Append(choiceBuilder);  
  
  GrammarBuilder configureBackgroundBuilder = new GrammarBuilder("Configure background as");  
  configureBackgroundBuilder.Append((new SemanticResultKey("rgb", colorChoice)).ToGrammarBuilder());  
  
  // Create the final grammar, which recognizes either intermediate grammar.  
  Grammar grammar = new Grammar(new Choices(new GrammarBuilder[] { makeBackgroundBuilder, configureBackgroundBuilder }));  
  grammar.Name = "Set Background Color";  
  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>