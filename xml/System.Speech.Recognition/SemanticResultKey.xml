<Type Name="SemanticResultKey" FullName="System.Speech.Recognition.SemanticResultKey">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="68d8adcbb951b916fb8741f4e20d6c90b9461f90" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30529330" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SemanticResultKey" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SemanticResultKey extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.SemanticResultKey" />
  <TypeSignature Language="VB.NET" Value="Public Class SemanticResultKey" />
  <TypeSignature Language="C++ CLI" Value="public ref class SemanticResultKey" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{_semanticKey.DebugSummary}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="ed3a3-101">Associa uma cadeia de caracteres chave com valores <see cref="T:System.Speech.Recognition.SemanticResultValue" /> para definir objetos <see cref="T:System.Speech.Recognition.SemanticValue" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ed3a3-101">Associates a key string with <see cref="T:System.Speech.Recognition.SemanticResultValue" /> values to define <see cref="T:System.Speech.Recognition.SemanticValue" /> objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed3a3-102">É a unidade básica de expressão de semântica em Speech o <xref:System.Speech.Recognition.SemanticValue>, que é um par chave/valor.</span><span class="sxs-lookup"><span data-stu-id="ed3a3-102">The basic unit of semantic expression in System.Speech is the <xref:System.Speech.Recognition.SemanticValue>, which is a key/value pair.</span></span>  
  
 <span data-ttu-id="ed3a3-103">Usando <xref:System.Speech.Recognition.SemanticResultKey> objetos, você marca <xref:System.Speech.Recognition.SemanticResultValue> instâncias contidas em <xref:System.Speech.Recognition.GrammarBuilder> objetos e cadeias de caracteres de forma que os valores podem ser acessados facilmente de <xref:System.Speech.Recognition.SemanticValue> instâncias no reconhecimento.</span><span class="sxs-lookup"><span data-stu-id="ed3a3-103">Using <xref:System.Speech.Recognition.SemanticResultKey> objects, you tag <xref:System.Speech.Recognition.SemanticResultValue> instances contained in <xref:System.Speech.Recognition.GrammarBuilder> objects and strings so that the values may readily be accessed from <xref:System.Speech.Recognition.SemanticValue> instances on recognition.</span></span>  
  
 <span data-ttu-id="ed3a3-104">Você pode usar <xref:System.Speech.Recognition.SemanticResultValue> e <xref:System.Speech.Recognition.SemanticResultKey> objetos, em conjunto com <xref:System.Speech.Recognition.GrammarBuilder> e <xref:System.Speech.Recognition.Choices> objetos, para definir a estrutura de semântica de uma gramática de reconhecimento de fala.</span><span class="sxs-lookup"><span data-stu-id="ed3a3-104">You can use <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> objects, in conjunction with <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects, to define the semantic structure for a speech recognition grammar.</span></span> <span data-ttu-id="ed3a3-105">Para acessar as informações de semânticas em um resultado de reconhecimento, obtenha uma instância de <xref:System.Speech.Recognition.SemanticValue> por meio de <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> propriedade <xref:System.Speech.Recognition.RecognizedPhrase>.</span><span class="sxs-lookup"><span data-stu-id="ed3a3-105">To access the semantic information in a recognition result, obtain an instance of <xref:System.Speech.Recognition.SemanticValue> through the <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property on <xref:System.Speech.Recognition.RecognizedPhrase>.</span></span>  
  
 <span data-ttu-id="ed3a3-106">Para obter mais informações sobre como usar <xref:System.Speech.Recognition.SemanticResultValue> e <xref:System.Speech.Recognition.SemanticResultKey> objetos, consulte [SemanticResultValue de compreensão e objetos SemanticResultKey](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c) e [usando um SemanticResultKey para extrair um SemanticResultValue](http://msdn.microsoft.com/library/198e29b8-845f-4cec-a25e-f55c0eaf46aa) no [guia de programação de fala de sistema para o .NET Framework 4.0](http://msdn.microsoft.com/library/610116c7-3817-40ff-857b-5d41e8511043).</span><span class="sxs-lookup"><span data-stu-id="ed3a3-106">For more information about using <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> objects, see [Understanding SemanticResultValue and SemanticResultKey Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c) and [Using a SemanticResultKey to Extract a SemanticResultValue](http://msdn.microsoft.com/library/198e29b8-845f-4cec-a25e-f55c0eaf46aa) in the [System Speech Programming Guide for .NET Framework 4.0](http://msdn.microsoft.com/library/610116c7-3817-40ff-857b-5d41e8511043).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed3a3-107">O exemplo a seguir cria um <xref:System.Speech.Recognition.Grammar> para reconhecer a entrada de senha do formulário "minha senha for...", onde a entrada real é correspondida com um caractere curinga.</span><span class="sxs-lookup"><span data-stu-id="ed3a3-107">The following example creates a <xref:System.Speech.Recognition.Grammar> to recognize password input of the form "My password is …", where the actual input is matched with a wildcard.</span></span>  
  
 <span data-ttu-id="ed3a3-108">O caractere curinga é marcado com uma chave semântica e o <xref:System.Speech.Recognition.Grammar.SpeechRecognized> manipulador verifica a presença da marca para verificar que ocorreu uma entrada de senha.</span><span class="sxs-lookup"><span data-stu-id="ed3a3-108">The wildcard is tagged with a semantic key, and the <xref:System.Speech.Recognition.Grammar.SpeechRecognized> handler checks for the presence of this tag to verify that a password input has occurred.</span></span>  
  
```csharp  
private void pwdGrammar()   
{  
  GrammarBuilder pwdBuilder = new GrammarBuilder("My Password is");  
  GrammarBuilder wildcardBuilder = new GrammarBuilder();  
  wildcardBuilder.AppendWildcard();  
  SemanticResultKey wildcardKey= new SemanticResultKey("Password", wildcardBuilder);  
  pwdBuilder+=wildcardKey;  
  Grammar grammar = new Grammar(pwdBuilder);  
  grammar.Name = "Password input";  
  
  grammar.SpeechRecognized += delegate(object sender, SpeechRecognizedEventArgs eventArgs)   
  {  
    SemanticValue semantics = eventArgs.Result.Semantics;  
    RecognitionResult result=eventArgs.Result;  
  
    if (!semantics.ContainsKey("Password"))   
    {  
      SpeechUI.SendTextFeedback(eventArgs.Result, "No Password Provided", false);  
    }  
    else   
    {  
      RecognizedAudio pwdAudio = result.GetAudioForWordRange(result.Words[3], result.Words[result.Words.Count - 1]);  
      MemoryStream pwdMemoryStream = new MemoryStream();  
      pwdAudio.WriteToAudioStream(pwdMemoryStream);  
      if (!IsValidPwd(pwdMemoryStream))   
      {  
        string badPwd = System.IO.Path.GetTempPath() + "BadPwd" + (new Random()).Next().ToString() + ".wav";  
        FileStream waveStream = new FileStream(badPwd, FileMode.Create);  
        pwdAudio.WriteToWaveStream(waveStream);  
        waveStream.Flush();  
        waveStream.Close();  
        SpeechUI.SendTextFeedback(eventArgs.Result, "Invalid Password", false);  
  
      }  
    }  
  };  
  grammar.Enabled = true;  
  _recognizer.LoadGrammar(grammar);  
  UpdateGrammarTree(_grammarTreeView, _recognizer);  
  
}  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Recognition.SemanticValue" />
    <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ed3a3-109">Constrói uma instância de <see cref="T:System.Speech.Recognition.SemanticResultKey" /> e associa a chave com componentes de gramática.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed3a3-109">Constructs an instance of <see cref="T:System.Speech.Recognition.SemanticResultKey" /> and associates the key with grammar components.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed3a3-110">Os construtores de <xref:System.Speech.Recognition.SemanticResultKey> especificar uma marca de texto (a chave semântica) e um conjunto de componentes de gramática para adicionar a uma gramática de reconhecimento de fala.</span><span class="sxs-lookup"><span data-stu-id="ed3a3-110">The constructors for <xref:System.Speech.Recognition.SemanticResultKey> specify a text tag (the semantic key) and a set of grammar components to add to a speech recognition grammar.</span></span>  
  
 <span data-ttu-id="ed3a3-111">A gramática de componentes podem ser especificado como uma matriz de <xref:System.Speech.Recognition.GrammarBuilder> objetos, ou como uma matriz de <xref:System.String> instâncias.</span><span class="sxs-lookup"><span data-stu-id="ed3a3-111">The grammar components can be specified either as an array of <xref:System.Speech.Recognition.GrammarBuilder> objects, or as an array of <xref:System.String> instances.</span></span>  
  
 <span data-ttu-id="ed3a3-112">Se os componentes de gramática são usados no reconhecimento, você poderá acessar retornado <xref:System.Speech.Recognition.SemanticValue> usando a marca de texto fornecida para o construtor de <xref:System.Speech.Recognition.SemanticResultKey> como uma chave semântica.</span><span class="sxs-lookup"><span data-stu-id="ed3a3-112">If the grammar components are used in recognition, you can access the returned <xref:System.Speech.Recognition.SemanticValue> using the text tag provided to the constructor of <xref:System.Speech.Recognition.SemanticResultKey> as a semantic key.</span></span> <span data-ttu-id="ed3a3-113">O <xref:System.Speech.Recognition.SemanticValue.Value%2A> propriedade o <xref:System.Speech.Recognition.SemanticValue> instância será determinada pelos componentes de gramática usados na definição de <xref:System.Speech.Recognition.SemanticResultKey>.</span><span class="sxs-lookup"><span data-stu-id="ed3a3-113">The <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of the <xref:System.Speech.Recognition.SemanticValue> instance will be determined by the grammar components used in the definition of <xref:System.Speech.Recognition.SemanticResultKey>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemanticResultKey (string semanticResultKey, params System.Speech.Recognition.GrammarBuilder[] builders);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string semanticResultKey, class System.Speech.Recognition.GrammarBuilder[] builders) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultKey.#ctor(System.String,System.Speech.Recognition.GrammarBuilder[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (semanticResultKey As String, ParamArray builders As GrammarBuilder())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemanticResultKey(System::String ^ semanticResultKey, ... cli::array &lt;System::Speech::Recognition::GrammarBuilder ^&gt; ^ builders);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="semanticResultKey" Type="System.String" />
        <Parameter Name="builders" Type="System.Speech.Recognition.GrammarBuilder[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="semanticResultKey">
          <span data-ttu-id="ed3a3-114">A marca a ser usada como uma chave semântica para acessar a instância de <see cref="T:System.Speech.Recognition.SemanticValue" /> associada aos objetos <see cref="T:System.Speech.Recognition.GrammarBuilder" /> especificados pelo argumento <c>builders</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed3a3-114">The tag to be used as a semantic key to access the <see cref="T:System.Speech.Recognition.SemanticValue" /> instance associated with the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> objects specified by the <c>builders</c> argument.</span>
          </span>
        </param>
        <param name="builders">
          <span data-ttu-id="ed3a3-115">Uma matriz de componentes de gramática que será associada a um objeto <see cref="T:System.Speech.Recognition.SemanticValue" /> acessível com a marca definida em <c>semanticResultKey</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed3a3-115">An array of grammar components that will be associated with a <see cref="T:System.Speech.Recognition.SemanticValue" /> object accessible with the tag defined in <c>semanticResultKey</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed3a3-116">Atribui uma chave semântica a um ou mais objetos <see cref="T:System.Speech.Recognition.GrammarBuilder" /> usados para criar uma gramática de reconhecimento de fala.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed3a3-116">Assigns a semantic key to one or more <see cref="T:System.Speech.Recognition.GrammarBuilder" /> objects used to create a speech recognition grammar.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed3a3-117">Devido a conversões implícitas, o `builders` argumento dá suporte a <xref:System.Speech.Recognition.SemanticResultValue>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.Choices>, e <xref:System.String> objetos.</span><span class="sxs-lookup"><span data-stu-id="ed3a3-117">Because of implicit conversions, the `builders` argument supports <xref:System.Speech.Recognition.SemanticResultValue>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.Choices>, and <xref:System.String> objects as well.</span></span> <span data-ttu-id="ed3a3-118">Para obter mais informações sobre conversões implícitas, consulte <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A>.</span><span class="sxs-lookup"><span data-stu-id="ed3a3-118">For more information on implicit conversions, see <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A>.</span></span>  
  
 <span data-ttu-id="ed3a3-119">Ao executar uma operação de reconhecimento, o <xref:System.Speech.Recognition.GrammarBuilder> objetos fornecidos no `builders` argumento são tratados como sequencial.</span><span class="sxs-lookup"><span data-stu-id="ed3a3-119">When performing a recognition operation, the <xref:System.Speech.Recognition.GrammarBuilder> objects provided in the `builders` argument are treated as sequential.</span></span> <span data-ttu-id="ed3a3-120">Por exemplo, se o seguinte <xref:System.Speech.Recognition.SemanticResultValue> é usado para construir um <xref:System.Speech.Recognition.Grammar>, entrada para o mecanismo de reconhecimento deve conter as palavras "a raposa marrom" na sequência a ser reconhecido.</span><span class="sxs-lookup"><span data-stu-id="ed3a3-120">For example, if the following <xref:System.Speech.Recognition.SemanticResultValue> is used to construct a <xref:System.Speech.Recognition.Grammar>, input to the recognition engine must contain the words "the quick brown fox" in sequence to be recognized.</span></span>  
  
```csharp  
SemanticResultKey stringTest=new SemanticResultKey(  
    "stringTest", new GrammarBuilder[] {  
    new GrammarBuilder("the"),  
    new GrammarBuilder("quick"),  
    new GrammarBuilder("brown"),  
    new GrammarBuilder("fox")});  
```  
  
 <span data-ttu-id="ed3a3-121">O `semanticResultKey` argumento contém a marca usada para acessar o <xref:System.Speech.Recognition.SemanticValue> que pode ser retornado.</span><span class="sxs-lookup"><span data-stu-id="ed3a3-121">The `semanticResultKey` argument contains the tag used to access the <xref:System.Speech.Recognition.SemanticValue> which might be returned.</span></span>  
  
 <span data-ttu-id="ed3a3-122">O <xref:System.Speech.Recognition.SemanticValue.Value%2A> do <xref:System.Speech.Recognition.SemanticValue> é determinado pelo <xref:System.Speech.Recognition.GrammarBuilder> instâncias fornecidas pelo `builders` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="ed3a3-122">The <xref:System.Speech.Recognition.SemanticValue.Value%2A> of the <xref:System.Speech.Recognition.SemanticValue> is determined by the <xref:System.Speech.Recognition.GrammarBuilder> instances provided by the `builders` parameter.</span></span>  
  
 <span data-ttu-id="ed3a3-123">Se o <xref:System.Speech.Recognition.GrammarBuilder> objetos não conter nenhuma instância de definição de <xref:System.Speech.Recognition.SemanticResultValue>, o valor da <xref:System.Speech.Recognition.SemanticValue> é `null`.</span><span class="sxs-lookup"><span data-stu-id="ed3a3-123">If the <xref:System.Speech.Recognition.GrammarBuilder> objects contain no defining instances of <xref:System.Speech.Recognition.SemanticResultValue>, the value of the <xref:System.Speech.Recognition.SemanticValue> is `null`.</span></span>  
  
 <span data-ttu-id="ed3a3-124">Se o <xref:System.Speech.Recognition.GrammarBuilder> objetos fornecidos no `builders` parâmetro fornecem um sem marcas (não associado a um <xref:System.Speech.Recognition.SemanticResultKey> objeto) <xref:System.Speech.Recognition.SemanticResultValue> instância que é usada pela lógica de reconhecimento, aquela instância do <xref:System.Speech.Recognition.SemanticResultValue> definirá o <xref:System.Speech.Recognition.SemanticValue.Value%2A> propriedade do <xref:System.Speech.Recognition.SemanticValue> que é produzido.</span><span class="sxs-lookup"><span data-stu-id="ed3a3-124">If the <xref:System.Speech.Recognition.GrammarBuilder> objects provided in the `builders` parameter provide an untagged (not associated with a <xref:System.Speech.Recognition.SemanticResultKey> object) <xref:System.Speech.Recognition.SemanticResultValue> instance that is used by the recognition logic, that instance of <xref:System.Speech.Recognition.SemanticResultValue> will define the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of the <xref:System.Speech.Recognition.SemanticValue> that is produced.</span></span>  
  
 <span data-ttu-id="ed3a3-125">Deve haver um e apenas um, sem marcas <xref:System.Speech.Recognition.SemanticResultValue> de instância de <xref:System.Speech.Recognition.GrammarBuilder> objetos especificados pelo `builders` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="ed3a3-125">There should be one, and only one, untagged <xref:System.Speech.Recognition.SemanticResultValue> instance in the <xref:System.Speech.Recognition.GrammarBuilder> objects specified by the `builders` parameter.</span></span> <span data-ttu-id="ed3a3-126">Se várias instâncias sem marcas <xref:System.Speech.Recognition.SemanticResultValue> estão associados a <xref:System.Speech.Recognition.SemanticResultKey>, cada tentará o conjunto de valor da <xref:System.Speech.Recognition.SemanticValue> produzido no resultado de reconhecimento.</span><span class="sxs-lookup"><span data-stu-id="ed3a3-126">If multiple instances of untagged <xref:System.Speech.Recognition.SemanticResultValue> are associated with the <xref:System.Speech.Recognition.SemanticResultKey>, each will attempt to the set the value of the <xref:System.Speech.Recognition.SemanticValue> produced in the recognition result.</span></span> <span data-ttu-id="ed3a3-127">Isso não é permitido e o reconhecedor gerará uma exceção ao tentar usar um <xref:System.Speech.Recognition.Grammar> criado usando como uma <xref:System.Speech.Recognition.SemanticResultKey> instância.</span><span class="sxs-lookup"><span data-stu-id="ed3a3-127">This is not permitted, and the recognizer will generate an exception when it attempts to use a <xref:System.Speech.Recognition.Grammar> created using such a <xref:System.Speech.Recognition.SemanticResultKey> instance.</span></span>  
  
 <span data-ttu-id="ed3a3-128">Instâncias do <xref:System.Speech.Recognition.SemanticResultValue> contidas a <xref:System.Speech.Recognition.GrammarBuilder> objetos especificados pelo `builders` parâmetro e já está associado a outro <xref:System.Speech.Recognition.SemanticResultKey> não têm nenhum efeito no atual <xref:System.Speech.Recognition.SemanticResultKey> instância.</span><span class="sxs-lookup"><span data-stu-id="ed3a3-128">Instances of <xref:System.Speech.Recognition.SemanticResultValue> contained in the <xref:System.Speech.Recognition.GrammarBuilder> objects specified by the `builders` parameter and already associated with another <xref:System.Speech.Recognition.SemanticResultKey> have no effect on the current <xref:System.Speech.Recognition.SemanticResultKey> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed3a3-129">O exemplo a seguir cria um <xref:System.Speech.Recognition.Grammar> para reconhecer a entrada de senha do formulário "minha senha for...", onde a entrada real é correspondida com um caractere curinga.</span><span class="sxs-lookup"><span data-stu-id="ed3a3-129">The following example creates a <xref:System.Speech.Recognition.Grammar> to recognize password input of the form "My password is …", where the actual input is matched with a wildcard.</span></span>  
  
 <span data-ttu-id="ed3a3-130">O caractere curinga é identificado por um <xref:System.Speech.Recognition.SpeechRecognizer> cujo valor da chave é "Password".</span><span class="sxs-lookup"><span data-stu-id="ed3a3-130">The wildcard is tagged by a <xref:System.Speech.Recognition.SpeechRecognizer> whose key value is "Password".</span></span> <span data-ttu-id="ed3a3-131">O <xref:System.Speech.Recognition.Grammar.SpeechRecognized> manipulador verifica a presença da marca, obtém a entrada de áudio da senha e verifica a senha.</span><span class="sxs-lookup"><span data-stu-id="ed3a3-131">The <xref:System.Speech.Recognition.Grammar.SpeechRecognized> handler checks for the presence of this tag, obtains the audio input of the password, and verifies the password.</span></span>  
  
```csharp  
private void pwdGrammar()   
{  
  GrammarBuilder pwdBuilder = new GrammarBuilder("My Password is");  
  GrammarBuilder wildcardBuilder = new GrammarBuilder();  
  wildcardBuilder.AppendWildcard();  
  SemanticResultKey wildcardKey= new SemanticResultKey("Password", wildcardBuilder);  
  pwdBuilder+=wildcardKey;  
  Grammar grammar = new Grammar(pwdBuilder);  
  grammar.Name = "Password input";  
  
  grammar.SpeechRecognized +=   
    delegate(object sender, SpeechRecognizedEventArgs eventArgs)   
    {  
      SemanticValue semantics = eventArgs.Result.Semantics;  
      RecognitionResult result=eventArgs.Result;  
  
      if (!semantics.ContainsKey("Password"))   
      {  
        SpeechUI.SendTextFeedback(eventArgs.Result, "No Password Provided", false);  
      }  
      else   
      {  
        RecognizedAudio pwdAudio = result.GetAudioForWordRange(  
                  result.Words[3],  
                  result.Words[result.Words.Count - 1]);  
                  MemoryStream pwdMemoryStream = new MemoryStream();  
                  pwdAudio.WriteToAudioStream(pwdMemoryStream);  
        if (!IsValidPwd(pwdMemoryStream))   
        {  
          string badPwd = System.IO.Path.GetTempPath() + "BadPwd" + (new Random()).Next().ToString() + ".wav";  
          FileStream waveStream = new FileStream(badPwd, FileMode.Create);    
          pwdAudio.WriteToWaveStream(waveStream);  
          waveStream.Flush();  
          waveStream.Close();  
          SpeechUI.SendTextFeedback(eventArgs.Result, "Invalid Password", false);      
        }  
      }  
    };  
  
  grammar.Enabled = true;  
  _recognizer.LoadGrammar(grammar);  
  UpdateGrammarTree(_grammarTreeView, _recognizer);  
  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemanticResultKey (string semanticResultKey, params string[] phrases);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string semanticResultKey, string[] phrases) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultKey.#ctor(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (semanticResultKey As String, ParamArray phrases As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemanticResultKey(System::String ^ semanticResultKey, ... cli::array &lt;System::String ^&gt; ^ phrases);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="semanticResultKey" Type="System.String" />
        <Parameter Name="phrases" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="semanticResultKey">
          <span data-ttu-id="ed3a3-132">A marca a ser usada para acessar a instância de <see cref="T:System.Speech.Recognition.SemanticValue" /> associada aos objetos <see cref="T:System.String" /> especificados pelo argumento <c>phrases</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed3a3-132">The tag to be used access the <see cref="T:System.Speech.Recognition.SemanticValue" /> instance associated with the <see cref="T:System.String" /> objects specified by the <c>phrases</c> argument.</span>
          </span>
        </param>
        <param name="phrases">
          <span data-ttu-id="ed3a3-133">Um ou mais objetos <see cref="T:System.String" />, cujo texto concatenado será associado a um objeto <see cref="T:System.Speech.Recognition.SemanticValue" /> acessível com a marca definida em <c>semanticResultKey</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed3a3-133">One or more <see cref="T:System.String" /> objects, whose concatenated text will be associated with a <see cref="T:System.Speech.Recognition.SemanticValue" /> object accessible with the tag defined in <c>semanticResultKey</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ed3a3-134">Atribui uma chave semântica a uma ou mais instâncias de <see cref="T:System.String" /> usadas para criar uma gramática de reconhecimento de fala.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed3a3-134">Assigns a semantic key to one or more <see cref="T:System.String" /> instances used to create a speech recognition grammar.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed3a3-135">Ao executar uma operação de reconhecimento, o <xref:System.String> objetos usados no `phrases` parâmetro são tratados como sequencial.</span><span class="sxs-lookup"><span data-stu-id="ed3a3-135">When performing a recognition operation, the <xref:System.String> objects used in the `phrases` parameter are treated as sequential.</span></span> <span data-ttu-id="ed3a3-136">Por exemplo, se o seguinte <xref:System.Speech.Recognition.SemanticResultValue> é usado para construir um <xref:System.Speech.Recognition.Grammar>, entrada para o mecanismo de reconhecimento deve conter as palavras "a raposa marrom" na sequência a ser reconhecido.</span><span class="sxs-lookup"><span data-stu-id="ed3a3-136">For example, if the following <xref:System.Speech.Recognition.SemanticResultValue> is used to construct a <xref:System.Speech.Recognition.Grammar>, input to the recognition engine must contain the words "the quick brown fox" in sequence to be recognized.</span></span>  
  
```csharp  
SemanticResultKey stringTest=new SemanticResultKey("stringTest",   
                                new string[] {  
                                               "the",  
                                               "quick",  
                                               "brown",  
                                               "fox"});  
```  
  
 <span data-ttu-id="ed3a3-137">O `semanticResultKey` argumento determina a chave usada para acessar o <xref:System.Speech.Recognition.SemanticValue> que pode ser retornado.</span><span class="sxs-lookup"><span data-stu-id="ed3a3-137">The `semanticResultKey` argument determines the key used to access the <xref:System.Speech.Recognition.SemanticValue> which might be returned.</span></span>  
  
 <span data-ttu-id="ed3a3-138">Se você construir um <xref:System.Speech.Recognition.Grammar> usando um <xref:System.Speech.Recognition.GrammarBuilder> objeto que contém uma chave semântica com uma matriz de objetos de cadeia de caracteres, o <xref:System.Speech.Recognition.SemanticValue.Value%2A> do <xref:System.Speech.Recognition.SemanticValue> produzido por uma operação de reconhecimento será a cadeia de caracteres usada no reconhecimento.</span><span class="sxs-lookup"><span data-stu-id="ed3a3-138">If you construct a <xref:System.Speech.Recognition.Grammar> using a <xref:System.Speech.Recognition.GrammarBuilder> object that contains a semantic key with an array of string objects,  the <xref:System.Speech.Recognition.SemanticValue.Value%2A> of the <xref:System.Speech.Recognition.SemanticValue> produced by a recognition operation  will be the string used in recognition.</span></span> <span data-ttu-id="ed3a3-139">No exemplo anterior, isso significa que <xref:System.Speech.Recognition.SemanticValue.Value%2A> seria "a raposa marrom".</span><span class="sxs-lookup"><span data-stu-id="ed3a3-139">In the preceding example, this means that <xref:System.Speech.Recognition.SemanticValue.Value%2A> would be "the quick brown fox".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed3a3-140">O exemplo a seguir cria um <xref:System.Speech.Recognition.Grammar> de um <xref:System.Speech.Recognition.GrammarBuilder> objeto que usa um <xref:System.Speech.Recognition.SemanticResultKey>, que é definido por uma matriz de <xref:System.String> objetos.</span><span class="sxs-lookup"><span data-stu-id="ed3a3-140">The following example creates a <xref:System.Speech.Recognition.Grammar> from a <xref:System.Speech.Recognition.GrammarBuilder> object that uses a <xref:System.Speech.Recognition.SemanticResultKey>, which is defined by an array of <xref:System.String> objects.</span></span>  
  
 <span data-ttu-id="ed3a3-141">Um mecanismo de reconhecimento usando o <xref:System.Speech.Recognition.Grammar> criado será reconhecer a frase "cor vermelha zero azul verde".</span><span class="sxs-lookup"><span data-stu-id="ed3a3-141">A recognition engine using the <xref:System.Speech.Recognition.Grammar> created will recognize the phrase "color red green blue zero".</span></span> <span data-ttu-id="ed3a3-142">A semântica do <xref:System.Speech.Recognition.RecognizedPhrase> retornado pelo reconhecimento conterá um <xref:System.Speech.Recognition.SemanticValue> com um <xref:System.Speech.Recognition.SemanticValue.Value%2A> de "vermelho verde azul".</span><span class="sxs-lookup"><span data-stu-id="ed3a3-142">The semantics of the <xref:System.Speech.Recognition.RecognizedPhrase> returned by recognition will contain a <xref:System.Speech.Recognition.SemanticValue> with a <xref:System.Speech.Recognition.SemanticValue.Value%2A> of "red green blue".</span></span> <span data-ttu-id="ed3a3-143">Você pode acessar o <xref:System.Speech.Recognition.SemanticValue> usando a marca "código".</span><span class="sxs-lookup"><span data-stu-id="ed3a3-143">You can access the <xref:System.Speech.Recognition.SemanticValue> using the "code" tag.</span></span>  
  
 <span data-ttu-id="ed3a3-144">Devido a `SemanticResultValue("zero", 5)` anexado ao <xref:System.Speech.Recognition.GrammarBuilder>, raiz <xref:System.Speech.Recognition.SemanticValue> objeto o <xref:System.Speech.Recognition.RecognizedPhrase> terá um valor de 5.</span><span class="sxs-lookup"><span data-stu-id="ed3a3-144">Because of the `SemanticResultValue("zero", 5)` appended to the <xref:System.Speech.Recognition.GrammarBuilder>, the root <xref:System.Speech.Recognition.SemanticValue> object in the <xref:System.Speech.Recognition.RecognizedPhrase> will have a value of 5.</span></span>  
  
```csharp  
private void keyTest()   
{  
  // Say "color red green blue zero"  
  GrammarBuilder gb = new GrammarBuilder("color") +  
                        new SemanticResultKey("code",   
                          (new string[] {"red", "green", "blue"})) +  
                        new SemanticResultValue("zero", 5);  
  Grammar g = new Grammar(gb);  
  g.Name = "keyTest";  
  _recognizer.LoadGrammar(g);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToGrammarBuilder">
      <MemberSignature Language="C#" Value="public System.Speech.Recognition.GrammarBuilder ToGrammarBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Recognition.GrammarBuilder ToGrammarBuilder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Function ToGrammarBuilder () As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Recognition::GrammarBuilder ^ ToGrammarBuilder();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ed3a3-145">Retorna uma instância de <see cref="T:System.Speech.Recognition.GrammarBuilder" /> construída com base na instância de <see cref="T:System.Speech.Recognition.SemanticResultKey" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed3a3-145">Returns an instance of <see cref="T:System.Speech.Recognition.GrammarBuilder" /> constructed from the current <see cref="T:System.Speech.Recognition.SemanticResultKey" /> instance.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed3a3-146">O uso de <xref:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder%2A> é equivalente a usar o <xref:System.Speech.Recognition.GrammarBuilder> construtor que aceite <xref:System.Speech.Recognition.SemanticResultKey> como um argumento (<xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultKey%29>).</span><span class="sxs-lookup"><span data-stu-id="ed3a3-146">The use of <xref:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder%2A> is equivalent to using the <xref:System.Speech.Recognition.GrammarBuilder> constructor which takes <xref:System.Speech.Recognition.SemanticResultKey> as an argument (<xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultKey%29>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed3a3-147">O exemplo a seguir cria um <xref:System.Speech.Recognition.Grammar> objeto que dá suporte a comandos para alterar a cor do plano de fundo.</span><span class="sxs-lookup"><span data-stu-id="ed3a3-147">The following example creates a <xref:System.Speech.Recognition.Grammar> object that supports commands to change the background color.</span></span>  
  
 <span data-ttu-id="ed3a3-148">Um <xref:System.Speech.Recognition.Choices> objeto (`colorChoice`) que contém a lista de opções para as cores de plano de fundo é preenchido usando o <xref:System.Speech.Recognition.Choices.Add%28System.Speech.Recognition.GrammarBuilder%5B%5D%29> método com <xref:System.Speech.Recognition.GrammarBuilder> instâncias.</span><span class="sxs-lookup"><span data-stu-id="ed3a3-148">A <xref:System.Speech.Recognition.Choices> object (`colorChoice`) containing the list of options for background colors is filled using the <xref:System.Speech.Recognition.Choices.Add%28System.Speech.Recognition.GrammarBuilder%5B%5D%29> method with <xref:System.Speech.Recognition.GrammarBuilder> instances.</span></span> <span data-ttu-id="ed3a3-149">O <xref:System.Speech.Recognition.GrammarBuilder> instâncias são obtidas por meio de <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> método no <xref:System.Speech.Recognition.SemanticResultValue> objetos criados a partir de cadeias de caracteres de cor.</span><span class="sxs-lookup"><span data-stu-id="ed3a3-149">The <xref:System.Speech.Recognition.GrammarBuilder> instances are obtained through the <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> method on the <xref:System.Speech.Recognition.SemanticResultValue> objects created from color strings.</span></span>  
  
 <span data-ttu-id="ed3a3-150">Um <xref:System.Speech.Recognition.GrammarBuilder> , em seguida, é obtida chamando <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> em uma <xref:System.Speech.Recognition.SemanticResultKey> instância, que será usada para as opções semânticas de chave `colorChoice`.</span><span class="sxs-lookup"><span data-stu-id="ed3a3-150">A <xref:System.Speech.Recognition.GrammarBuilder> is then obtained by calling <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> on a <xref:System.Speech.Recognition.SemanticResultKey> instance, which will be used to key the semantic choices in `colorChoice`.</span></span>  
  
```csharp  
  
private Grammar CreateGrammarBuilderRGBSemantics()   
{  
  
  // Create a set of choices, each a lookup from a color name to RGB.  
  // Choices constructors do not take SemanticResultValue parameters, so cast   
  // the SemanticResultValue to GrammarBuilder.  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
    SemanticResultValue colorValue=new SemanticResultValue(colorName, Color.FromName(colorName).ToArgb());  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.  
    colorChoice.Add(colorValue.ToGrammarBuilder());      
  }  
  SemanticResultKey choiceKey = new SemanticResultKey("rgb", colorChoice);  
  GrammarBuilder choiceBuilder = choiceKey.ToGrammarBuilder();  
  
  // Create two intermediate grammars with introductory phrase and the color choice.  
  GrammarBuilder makeBackgroundBuilder = "Make background";  
  makeBackgroundBuilder.Append(choiceBuilder);  
  
  GrammarBuilder configureBackgroundBuilder = new GrammarBuilder("Configure background as");  
  configureBackgroundBuilder.Append((new SemanticResultKey("rgb", colorChoice)).ToGrammarBuilder());  
  
  // Create the Grammar object, which recognizes either intermediate grammar.  
  Grammar grammar = new Grammar(new Choices(new GrammarBuilder[] {makeBackgroundBuilder, configureBackgroundBuilder}));  
  grammar.Name = "Make Background /Configure background as";  
  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>