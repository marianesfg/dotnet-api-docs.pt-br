<Type Name="GrammarBuilder" FullName="System.Speech.Recognition.GrammarBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="192371536742150cbc1ede0124c131635288eda1" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55334875" /></Metadata><TypeSignature Language="C#" Value="public class GrammarBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GrammarBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.GrammarBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class GrammarBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class GrammarBuilder" />
  <TypeSignature Language="F#" Value="type GrammarBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{DebugSummary}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2f0c8-101">Fornece um mecanismo para criar programaticamente as restrições para uma gramática de reconhecimento de fala.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-101">Provides a mechanism for programmatically building the constraints for a speech recognition grammar.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0c8-102">Gramáticas de reconhecimento de fala são normalmente criadas no formato XML definido pelos [especificação de gramática de reconhecimento de fala (SRGS) versão 1.0](https://go.microsoft.com/fwlink/?LinkId=201761).</span><span class="sxs-lookup"><span data-stu-id="2f0c8-102">Speech recognition grammars are commonly authored in the XML format defined by the [Speech Recognition Grammar Specification (SRGS) Version 1.0](https://go.microsoft.com/fwlink/?LinkId=201761).</span></span> <span data-ttu-id="2f0c8-103">Se você estiver familiarizado com SRGS, mas deseja gerar as gramáticas programaticamente, você pode usar o <xref:System.Speech.Recognition.SrgsGrammar> namespace, cujos membros intimamente correspondem aos elementos e atributos definidos por SRGS.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-103">If you are familiar with SRGS but want to generate the grammars programmatically, you can use the <xref:System.Speech.Recognition.SrgsGrammar> namespace, whose members correspond closely to the elements and attributes defined by SRGS.</span></span> <span data-ttu-id="2f0c8-104">Se você não estiver familiarizado com SRGS, ou se desejar uma abordagem leve, através de programação para a criação de gramáticas com os quais, você pode fazer com eficiência muitos cenários comuns; Você pode usar o <xref:System.Speech.Recognition.GrammarBuilder> e <xref:System.Speech.Recognition.Choices> classes.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-104">If you are unfamiliar with SRGS, or you want a lightweight, programmatic approach to authoring grammars with which you can efficiently accomplish many common scenarios; you can use the <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> classes.</span></span>  
  
 <span data-ttu-id="2f0c8-105">Use <xref:System.Speech.Recognition.GrammarBuilder> composto de objetos para criar uma árvore hierárquica de <xref:System.Speech.Recognition.Choices> objetos que contêm frases alternativas, intercalados com preâmbulo e frases de pós-amble em cada nó e propagado com os valores semânticos que transmitem o significado de volta para o aplicativo.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-105">Use <xref:System.Speech.Recognition.GrammarBuilder> objects to build a hierarchical tree composed of <xref:System.Speech.Recognition.Choices> objects that contain alternate phrases, interspersed with preamble and post-amble phrases at each node, and seeded with semantic values that convey  meaning back to the application.</span></span>  
  
 <span data-ttu-id="2f0c8-106">Para usar um <xref:System.Speech.Recognition.GrammarBuilder> para criar um <xref:System.Speech.Recognition.Grammar> de objeto, use as etapas a seguir.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-106">To use a <xref:System.Speech.Recognition.GrammarBuilder> to create a <xref:System.Speech.Recognition.Grammar> object, use the following steps.</span></span>  
  
1.  <span data-ttu-id="2f0c8-107">Crie um objeto <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-107">Create a <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
2.  <span data-ttu-id="2f0c8-108">Anexar restrições para o <xref:System.Speech.Recognition.GrammarBuilder>, como <xref:System.String> objetos, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, <xref:System.Speech.Recognition.DictationGrammar>e outros <xref:System.Speech.Recognition.GrammarBuilder> objetos que definem as restrições da gramática.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-108">Append constraints to the <xref:System.Speech.Recognition.GrammarBuilder>, such as <xref:System.String> objects, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, <xref:System.Speech.Recognition.DictationGrammar>, and other <xref:System.Speech.Recognition.GrammarBuilder> objects that define the constraints for the grammar.</span></span>  
  
3.  <span data-ttu-id="2f0c8-109">Use um dos <xref:System.Speech.Recognition.Grammar.%23ctor%2A> construtores para criar um <xref:System.Speech.Recognition.Grammar> objeto de concluído <xref:System.Speech.Recognition.GrammarBuilder> gramática.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-109">Use one of the <xref:System.Speech.Recognition.Grammar.%23ctor%2A> constructors to create a <xref:System.Speech.Recognition.Grammar> object from the completed <xref:System.Speech.Recognition.GrammarBuilder> grammar.</span></span>  
  
 <span data-ttu-id="2f0c8-110">Criação de páginas com <xref:System.Speech.Recognition.GrammarBuilder> é mais adequada para gramáticas que têm uma única regra que contém listas ou talvez a lista de listas.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-110">Authoring with <xref:System.Speech.Recognition.GrammarBuilder> is best suited to grammars that have a single rule containing lists, or perhaps lists of lists.</span></span> <span data-ttu-id="2f0c8-111">Para criar programaticamente gramáticas que têm várias regras, ou que precisam fazer referências de regra interna, use as classes do <xref:System.Speech.Recognition.SrgsGrammar> namespace.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-111">To programmatically build grammars that have multiple rules, or that need to make internal rule references, use the classes of the <xref:System.Speech.Recognition.SrgsGrammar> namespace.</span></span>  
  
 <span data-ttu-id="2f0c8-112">Instâncias do <xref:System.Speech.Recognition.GrammarBuilder> também podem ser obtidas por conversões implícitas de algumas outras classes ou combinando uma <xref:System.Speech.Recognition.GrammarBuilder> com um segundo objeto que contém restrições para uma gramática...</span><span class="sxs-lookup"><span data-stu-id="2f0c8-112">Instances of <xref:System.Speech.Recognition.GrammarBuilder> can also be obtained by implicit conversions from certain other classes or by combining a  <xref:System.Speech.Recognition.GrammarBuilder> with a second object that contains constraints for a grammar..</span></span> <span data-ttu-id="2f0c8-113">Para obter mais informações, consulte o <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> e <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operadores e a <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-113">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators and the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods.</span></span>  
  
 <span data-ttu-id="2f0c8-114">Para adicionar regras a um existente <xref:System.Speech.Recognition.GrammarBuilder>, use o <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>, <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A>, e <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-114">To add rules to an existing <xref:System.Speech.Recognition.GrammarBuilder>, use the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>, <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A>, and <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> methods.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2f0c8-115">O reconhecedor de fala pode lançar uma exceção ao usar uma gramática de reconhecimento de fala que contém elementos semânticos duplicados com o mesmo nome de chave ou vários elementos semânticos que repetidamente poderia modificar o valor do mesmo elemento semântico.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-115">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span> 
  
 <span data-ttu-id="2f0c8-116">Para ajudar na depuração, o <xref:System.Speech.Recognition.GrammarBuilder.DebugShowPhrases%2A> propriedade retorna o status atual do <xref:System.Speech.Recognition.GrammarBuilder> como uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-116">To help with debugging, the <xref:System.Speech.Recognition.GrammarBuilder.DebugShowPhrases%2A> property returns the current status of the <xref:System.Speech.Recognition.GrammarBuilder> as a string.</span></span>  
  
 <span data-ttu-id="2f0c8-117">Para obter mais informações sobre como criar e usar gramáticas de reconhecimento de fala, consulte [reconhecimento de fala](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)) e [criar gramáticas de GrammarBuilder](https://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span><span class="sxs-lookup"><span data-stu-id="2f0c8-117">For more information about building and using speech recognition grammars, see [Speech Recognition](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)) and [Creating GrammarBuilder Grammars](https://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0c8-118">O exemplo a seguir usa <xref:System.Speech.Recognition.GrammarBuilder> e <xref:System.Speech.Recognition.Choices> objetos para construir uma gramática que possa reconhecer a qualquer uma das duas frases, "tornar o plano de fundo *colorChoice*" ou "Definir plano de fundo *colorChoice*".</span><span class="sxs-lookup"><span data-stu-id="2f0c8-118">The following example uses  <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects to construct a grammar that can recognize either of the two phrases, "Make background *colorChoice*" or "Set background to *colorChoice*".</span></span>  
  
 <span data-ttu-id="2f0c8-119">O exemplo usa uma <xref:System.Speech.Recognition.Choices> objeto para criar uma lista de valores aceitáveis para *colorChoice* de uma matriz de <xref:System.String> objetos.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-119">The example uses a <xref:System.Speech.Recognition.Choices> object  to create a list of acceptable values for *colorChoice* from an array of <xref:System.String> objects.</span></span> <span data-ttu-id="2f0c8-120">Um <xref:System.Speech.Recognition.Choices> objeto é análogo ao `one-of` elemento na especificação SRGS e contém um conjunto de frases alternativas, qualquer uma delas pode ser reconhecido quando faladas.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-120">A <xref:System.Speech.Recognition.Choices> object is analogous to the `one-of` element in the SRGS specification, and contains a set of alternate phrases, any of which can be recognized when spoken.</span></span> <span data-ttu-id="2f0c8-121">O exemplo também usa um <xref:System.Speech.Recognition.Choices> objeto para agrupar uma matriz de dois <xref:System.Speech.Recognition.GrammarBuilder> objetos em um par de frases alternativas que a gramática resultante pode reconhecer.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-121">The example also uses a <xref:System.Speech.Recognition.Choices> object to group an array of two <xref:System.Speech.Recognition.GrammarBuilder> objects into a pair of alternative phrases that the resultant grammar can recognize.</span></span> <span data-ttu-id="2f0c8-122">Palavras ou frases alternativas são um componente da maioria das gramáticas e o <xref:System.Speech.Recognition.Choices> objeto fornece essa funcionalidade para gramáticas construído com <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-122">Alternate words or phrases are a component of most grammars, and the <xref:System.Speech.Recognition.Choices> object provides this functionality for grammars constructed with <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="2f0c8-123">O exemplo, por fim, cria um <xref:System.Speech.Recognition.Grammar> do objeto de um <xref:System.Speech.Recognition.GrammarBuilder> construído a partir de um <xref:System.Speech.Recognition.Choices> objeto.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-123">The example finally creates a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.GrammarBuilder> constructed from a <xref:System.Speech.Recognition.Choices> object.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  Grammar grammar = new Grammar((GrammarBuilder)bothChoices);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Recognition.Choices" />
    <altmember cref="T:System.Speech.Recognition.Grammar" />
    <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
    <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2f0c8-124">Inicializa uma nova instância da classe <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-124">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0c8-125">As instâncias dessa classe também podem ser obtidas por conversões implícitas de outras classes ou combinando uma <xref:System.Speech.Recognition.GrammarBuilder> objeto com um segundo objeto a partir de um novo <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-125">Instances of this class can also be obtained by implicit conversions from other classes or by combining a <xref:System.Speech.Recognition.GrammarBuilder> object with a second object to from a new <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="2f0c8-126">Para obter mais informações, consulte o <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> e <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-126">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> methods.</span></span>  
  
 <span data-ttu-id="2f0c8-127">Para adicionar restrições a um existente <xref:System.Speech.Recognition.GrammarBuilder>, use o <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>, <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A>, e <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> métodos e o <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operador.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-127">To add constraints to an existing <xref:System.Speech.Recognition.GrammarBuilder>, use the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>, <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A>, and <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> methods, and the <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operator.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2f0c8-128">O reconhecedor de fala pode lançar uma exceção ao usar uma gramática de reconhecimento de fala que contém elementos semânticos duplicados com o mesmo nome de chave ou vários elementos semânticos que repetidamente poderia modificar o valor do mesmo elemento semântico.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-128">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span>
  
 <span data-ttu-id="2f0c8-129">Para obter mais informações sobre como criar e usar gramáticas de reconhecimento de fala, consulte [reconhecimento de fala](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)) e [criar gramáticas de GrammarBuilder](https://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span><span class="sxs-lookup"><span data-stu-id="2f0c8-129">For more information about building and using speech recognition grammars, see [Speech Recognition](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)) and [Creating GrammarBuilder Grammars](https://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f0c8-130">Inicializa uma nova instância vazia da classe <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-130">Initializes a new, empty instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0c8-131">Para adicionar regras a um existente <xref:System.Speech.Recognition.GrammarBuilder> do objeto, use o <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>, <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A>, e <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> métodos e o <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operador.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-131">To add rules to an existing <xref:System.Speech.Recognition.GrammarBuilder> object, use the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>, <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A>, and <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> methods, and the <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operator.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2f0c8-132">O reconhecedor de fala pode lançar uma exceção ao usar uma gramática de reconhecimento de fala que contém elementos semânticos duplicados com o mesmo nome de chave ou vários elementos semânticos que repetidamente poderia modificar o valor do mesmo elemento semântico.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-132">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="2f0c8-133">O exemplo a seguir usa <xref:System.Speech.Recognition.GrammarBuilder> e <xref:System.Speech.Recognition.Choices> objetos para construir uma gramática que possa reconhecer a qualquer uma das duas frases, "tornar o plano de fundo *colorChoice*" ou "Definir plano de fundo *colorChoice*".</span><span class="sxs-lookup"><span data-stu-id="2f0c8-133">The following example uses  <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects to construct a grammar that can recognize either of the two phrases, "Make background *colorChoice*" or "Set background to *colorChoice*".</span></span>  
  
 <span data-ttu-id="2f0c8-134">O exemplo usa uma <xref:System.Speech.Recognition.Choices> objeto para criar uma lista de valores aceitáveis para *colorChoice* de uma matriz de <xref:System.String> objetos.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-134">The example uses a <xref:System.Speech.Recognition.Choices> object  to create a list of acceptable values for *colorChoice* from an array of <xref:System.String> objects.</span></span> <span data-ttu-id="2f0c8-135">Um <xref:System.Speech.Recognition.Choices> objeto é análogo ao `one-of` elemento na especificação SRGS e contém um conjunto de frases alternativas, qualquer um dos quais pode ser reconhecido quando faladas.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-135">A <xref:System.Speech.Recognition.Choices> object is analogous to the `one-of` element in the SRGS specification, and contains a set of alternate phrases, any one of which can be recognized when spoken.</span></span> <span data-ttu-id="2f0c8-136">O exemplo também usa um <xref:System.Speech.Recognition.Choices> objeto para agrupar uma matriz de dois <xref:System.Speech.Recognition.GrammarBuilder> objetos em um par de frases alternativas que a gramática resultante pode reconhecer.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-136">The example also uses a <xref:System.Speech.Recognition.Choices> object to group an array of two <xref:System.Speech.Recognition.GrammarBuilder> objects into a pair of alternative phrases that the resultant grammar can recognize.</span></span> <span data-ttu-id="2f0c8-137">Palavras ou frases alternativas são um componente da maioria das gramáticas e o <xref:System.Speech.Recognition.Choices> objeto fornece essa funcionalidade para gramáticas construído com <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-137">Alternate words or phrases are a component of most grammars, and the <xref:System.Speech.Recognition.Choices> object provides this functionality for grammars constructed with <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="2f0c8-138">O exemplo, por fim, cria um <xref:System.Speech.Recognition.Grammar> do objeto de um <xref:System.Speech.Recognition.GrammarBuilder> construído a partir de um <xref:System.Speech.Recognition.Choices> objeto.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-138">The example finally creates a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.GrammarBuilder> constructed from a <xref:System.Speech.Recognition.Choices> object.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the Grammar object from the result.  
  GrammarBuilder bothPhrases = new GrammarBuilder();  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  bothPhrases.Append(bothChoices);  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (System.Speech.Recognition.Choices alternateChoices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.Choices alternateChoices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.Choices)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (alternateChoices As Choices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::Speech::Recognition::Choices ^ alternateChoices);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : System.Speech.Recognition.Choices -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder alternateChoices" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="alternateChoices" Type="System.Speech.Recognition.Choices" />
      </Parameters>
      <Docs>
        <param name="alternateChoices"><span data-ttu-id="2f0c8-139">O conjunto de alternativas.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-139">The set of alternatives.</span></span></param>
        <summary><span data-ttu-id="2f0c8-140">Inicializa uma nova instância da classe <see cref="T:System.Speech.Recognition.GrammarBuilder" /> de um conjunto de alternativas.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-140">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from a set of alternatives.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0c8-141">Para obter mais informações sobre a criação de uma gramática de reconhecimento de fala que contém as alternativas, consulte [usando opções para criar uma gramática de GrammarBuilder](https://msdn.microsoft.com/library/5b18db18-a5f6-46a3-aa77-6d3141544efd).</span><span class="sxs-lookup"><span data-stu-id="2f0c8-141">For more information about building a speech recognition grammar that contains alternatives, see [Using Choices to Create a GrammarBuilder Grammar](https://msdn.microsoft.com/library/5b18db18-a5f6-46a3-aa77-6d3141544efd).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0c8-142">O exemplo a seguir usa <xref:System.Speech.Recognition.GrammarBuilder> e <xref:System.Speech.Recognition.Choices> objetos para construir uma gramática que possa reconhecer a qualquer uma das duas frases, "tornar o plano de fundo *colorChoice*" ou "Definir plano de fundo *colorChoice*".</span><span class="sxs-lookup"><span data-stu-id="2f0c8-142">The following example uses  <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects to construct a grammar that can recognize either of the two phrases, "Make background *colorChoice*" or "Set background to *colorChoice*".</span></span>  
  
 <span data-ttu-id="2f0c8-143">O exemplo usa uma <xref:System.Speech.Recognition.Choices> objeto para criar uma lista de valores aceitáveis para *colorChoice* de uma matriz de <xref:System.String> objetos.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-143">The example uses a <xref:System.Speech.Recognition.Choices> object  to create a list of acceptable values for *colorChoice* from an array of <xref:System.String> objects.</span></span> <span data-ttu-id="2f0c8-144">Um <xref:System.Speech.Recognition.Choices> objeto é análogo ao `one-of` elemento na especificação SRGS e contém um conjunto de frases alternativas, qualquer uma delas pode ser reconhecido quando faladas.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-144">A <xref:System.Speech.Recognition.Choices> object is analogous to the `one-of` element in the SRGS specification, and contains a set of alternate phrases, any of which can be recognized when spoken.</span></span> <span data-ttu-id="2f0c8-145">O exemplo também usa um <xref:System.Speech.Recognition.Choices> objeto para agrupar uma matriz de dois <xref:System.Speech.Recognition.GrammarBuilder> objetos em um par de frases alternativas que a gramática resultante pode reconhecer.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-145">The example also uses a <xref:System.Speech.Recognition.Choices> object to group an array of two <xref:System.Speech.Recognition.GrammarBuilder> objects into a pair of alternative phrases that the resultant grammar can recognize.</span></span> <span data-ttu-id="2f0c8-146">Palavras ou frases alternativas são um componente da maioria das gramáticas e o <xref:System.Speech.Recognition.Choices> objeto fornece essa funcionalidade para gramáticas construído com <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-146">Alternate words or phrases are a component of most grammars, and the <xref:System.Speech.Recognition.Choices> object provides this functionality for grammars constructed with <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="2f0c8-147">O exemplo, por fim, cria um <xref:System.Speech.Recognition.Grammar> do objeto de um <xref:System.Speech.Recognition.GrammarBuilder> construído a partir de um <xref:System.Speech.Recognition.Choices> objeto.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-147">The example finally creates a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.GrammarBuilder> constructed from a <xref:System.Speech.Recognition.Choices> object.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  Grammar grammar = new Grammar((GrammarBuilder)bothChoices);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (System.Speech.Recognition.SemanticResultKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.SemanticResultKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.SemanticResultKey)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As SemanticResultKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::Speech::Recognition::SemanticResultKey ^ key);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : System.Speech.Recognition.SemanticResultKey -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder key" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="System.Speech.Recognition.SemanticResultKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="2f0c8-148">A chave semântica.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-148">The semantic key.</span></span></param>
        <summary><span data-ttu-id="2f0c8-149">Inicializa uma nova instância da classe <see cref="T:System.Speech.Recognition.GrammarBuilder" /> de uma chave semântica.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-149">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from a semantic key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0c8-150">Quando você cria um <xref:System.Speech.Recognition.GrammarBuilder> da instância de um <xref:System.Speech.Recognition.SemanticResultValue> do objeto, adicione informações semânticas a gramática que podem ser retornados no resultado do reconhecimento.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-150">When you create a <xref:System.Speech.Recognition.GrammarBuilder> instance from a <xref:System.Speech.Recognition.SemanticResultValue> object, you add semantic information to the grammar that can be returned in the recognition result.</span></span> <span data-ttu-id="2f0c8-151">Você pode acessar as informações semânticas no resultado de reconhecimento usando a <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> propriedade de <xref:System.Speech.Recognition.RecognizedPhrase>, que está disponível no manipulador para o `SpeechRecognized` eventos.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-151">You can access the semantic information in the recognition result using the <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property of <xref:System.Speech.Recognition.RecognizedPhrase>, which is available in the handler for the `SpeechRecognized` event.</span></span> <span data-ttu-id="2f0c8-152">Se o <xref:System.Speech.Recognition.GrammarBuilder> define um <xref:System.Speech.Recognition.SemanticResultKey>, isso pode ser usado para recuperar as informações semânticas em um resultado de reconhecimento que está associado com a chave.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-152">If the <xref:System.Speech.Recognition.GrammarBuilder> defines a <xref:System.Speech.Recognition.SemanticResultKey>, this can be used to retrieve the semantic information in a recognition result that is associated with the key.</span></span> <span data-ttu-id="2f0c8-153">Veja o exemplo de <xref:System.Speech.Recognition.GrammarBuilder.Append%28System.Speech.Recognition.SemanticResultKey%29>e também ver <xref:System.Speech.Recognition.SemanticResultValue> e <xref:System.Speech.Recognition.SemanticResultKey>.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-153">See the example for <xref:System.Speech.Recognition.GrammarBuilder.Append%28System.Speech.Recognition.SemanticResultKey%29>, and also see <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2f0c8-154">Quando você constrói <xref:System.Speech.Recognition.GrammarBuilder> objetos que contêm <xref:System.Speech.Recognition.SemanticResultValue> ou <xref:System.Speech.Recognition.SemanticResultKey> instâncias, verifique se você evitar criar elementos semânticos duplicados com o mesmo nome de chave ou vários elementos semânticos que repetidamente poderia modificar o <xref:System.Speech.Recognition.SemanticValue.Value%2A> propriedade de um <xref:System.Speech.Recognition.SemanticValue> objeto.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-154">When you construct <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="2f0c8-155">O reconhecedor de fala pode lançar uma exceção se encontrar nessas circunstâncias.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-155">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> 
  
   
  
## Examples  
 <span data-ttu-id="2f0c8-156">O exemplo a seguir cria uma gramática de reconhecimento de fala que possa reconhecer as duas frases, "tornar o plano de fundo *colorChoice*" e "Definir plano de fundo *colorChoice*", onde  *colorChoice* é selecionado em um conjunto de cores.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-156">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *colorChoice*" and "Set background to *colorChoice*", where *colorChoice* is selected from a set of colors.</span></span> <span data-ttu-id="2f0c8-157">A gramática permite que um usuário se comunica com nenhum dos vários nomes de cor e retorna informações semânticas sobre o nome da cor reconhecido para o aplicativo.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-157">The grammar lets a user speak any of several color names, and returns semantic information about the recognized color name to the application.</span></span>  
  
 <span data-ttu-id="2f0c8-158">O exemplo usa um único <xref:System.Speech.Recognition.SemanticResultKey> com o qual você pode recuperar o <xref:System.Speech.Recognition.SemanticValue> que está associado com a cor falada pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-158">The example uses a single <xref:System.Speech.Recognition.SemanticResultKey> with which you can retrieve the <xref:System.Speech.Recognition.SemanticValue> that is associated with the color spoken by the user.</span></span> <span data-ttu-id="2f0c8-159">Por exemplo, se a entrada contiver a frase, "Conjunto em segundo plano para vermelho", o resultado do reconhecimento contém o valor de semântico de "#FF0000", que você pode recuperar usando um manipulador para o `SpeechRecognized` eventos.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-159">For example, if the input contains the phrase, "Set background to red", the recognition result contains the semantic value of "#FF0000", which you can retrieve using a handler for the `SpeechRecognized` event.</span></span>  
  
 <span data-ttu-id="2f0c8-160">O exemplo utiliza <xref:System.String>, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, e <xref:System.Speech.Recognition.GrammarBuilder> objetos para criar as restrições que estão contidas no último <xref:System.Speech.Recognition.GrammarBuilder> objeto, `bothPhrases`.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-160">The example uses <xref:System.String>, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, and <xref:System.Speech.Recognition.GrammarBuilder> objects to build the constraints that are all contained in the last <xref:System.Speech.Recognition.GrammarBuilder> object, `bothPhrases`.</span></span> <span data-ttu-id="2f0c8-161">Por fim, o exemplo constrói uma <xref:System.Speech.Recognition.Grammar> objeto do concluído <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-161">Finally, the example constructs a <xref:System.Speech.Recognition.Grammar> object from the completed <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  // Include semantic information about each of the colors.  
  Choices colorChoice = new Choices();  
  
  GrammarBuilder colorBuilder = new GrammarBuilder("red");  
  SemanticResultValue colorValue =  
    new SemanticResultValue(colorBuilder, "#FF0000");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  colorBuilder = new GrammarBuilder("green");  
  colorValue = new SemanticResultValue(colorBuilder, "#00FF00");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  colorBuilder = new GrammarBuilder("blue");  
  colorValue = new SemanticResultValue(colorBuilder, "#0000FF");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices object for the two alternative phrases.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  // Create the semantic key for referencing the color information.  
  SemanticResultKey colorKey =  
    new SemanticResultKey("ColorCode", bothPhrases);  
  bothPhrases = new GrammarBuilder(colorKey);  
  
  // Construct the Grammar object from the GrammarBuilder.  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (System.Speech.Recognition.SemanticResultValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.SemanticResultValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.SemanticResultValue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As SemanticResultValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::Speech::Recognition::SemanticResultValue ^ value);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : System.Speech.Recognition.SemanticResultValue -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Speech.Recognition.SemanticResultValue" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2f0c8-162">O par nome-valor ou o valor semântico.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-162">The semantic value or name/value pair.</span></span></param>
        <summary><span data-ttu-id="2f0c8-163">Inicializa uma nova instância da classe <see cref="T:System.Speech.Recognition.GrammarBuilder" /> de um valor semântico.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-163">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from a semantic value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0c8-164">Quando você cria um <xref:System.Speech.Recognition.GrammarBuilder> da instância de um <xref:System.Speech.Recognition.SemanticResultValue> do objeto, adicione informações semânticas a gramática que podem ser retornados no resultado do reconhecimento.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-164">When you create a <xref:System.Speech.Recognition.GrammarBuilder> instance from a <xref:System.Speech.Recognition.SemanticResultValue> object, you add semantic information to the grammar that can be returned in the recognition result.</span></span> <span data-ttu-id="2f0c8-165">Você pode acessar as informações semânticas no resultado de reconhecimento usando a <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> propriedade de <xref:System.Speech.Recognition.RecognizedPhrase>, que está disponível no manipulador para o `SpeechRecognized` eventos.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-165">You can access the semantic information in the recognition result using the <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property of <xref:System.Speech.Recognition.RecognizedPhrase>, which is available in the handler for the `SpeechRecognized` event.</span></span> <span data-ttu-id="2f0c8-166">Se o <xref:System.Speech.Recognition.GrammarBuilder> define um <xref:System.Speech.Recognition.SemanticResultKey>, isso pode ser usado para recuperar as informações semânticas em um resultado de reconhecimento que está associado com a chave.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-166">If the <xref:System.Speech.Recognition.GrammarBuilder> defines a <xref:System.Speech.Recognition.SemanticResultKey>, this can be used to retrieve the semantic information in a recognition result that is associated with the key.</span></span> <span data-ttu-id="2f0c8-167">Veja o exemplo de <xref:System.Speech.Recognition.GrammarBuilder.Append%28System.Speech.Recognition.SemanticResultKey%29>e também ver <xref:System.Speech.Recognition.SemanticResultValue> e <xref:System.Speech.Recognition.SemanticResultKey>.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-167">See the example for <xref:System.Speech.Recognition.GrammarBuilder.Append%28System.Speech.Recognition.SemanticResultKey%29>, and also see <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2f0c8-168">Quando você constrói <xref:System.Speech.Recognition.GrammarBuilder> objetos que contêm <xref:System.Speech.Recognition.SemanticResultValue> ou <xref:System.Speech.Recognition.SemanticResultKey> instâncias, verifique se você evitar criar elementos semânticos duplicados com o mesmo nome de chave ou vários elementos semânticos que repetidamente poderia modificar o <xref:System.Speech.Recognition.SemanticValue.Value%2A> propriedade de um <xref:System.Speech.Recognition.SemanticValue> objeto.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-168">When you construct <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="2f0c8-169">O reconhecedor de fala pode lançar uma exceção se encontrar nessas circunstâncias.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-169">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> 
  
   
  
## Examples  
 <span data-ttu-id="2f0c8-170">O exemplo a seguir cria uma gramática de reconhecimento de fala que possa reconhecer as duas frases, "tornar o plano de fundo *colorChoice*" e "Definir plano de fundo *colorChoice*", onde  *colorChoice* é selecionado em um conjunto de cores.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-170">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *colorChoice*" and "Set background to *colorChoice*", where *colorChoice* is selected from a set of colors.</span></span> <span data-ttu-id="2f0c8-171">A gramática permite que um usuário se comunica com nenhum dos vários nomes de cor e retorna informações semânticas sobre o nome da cor reconhecido para o aplicativo.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-171">The grammar lets a user speak any of several color names, and returns semantic information about the recognized color name to the application.</span></span>  
  
 <span data-ttu-id="2f0c8-172">O exemplo usa um único <xref:System.Speech.Recognition.SemanticResultKey> com o qual você pode recuperar o <xref:System.Speech.Recognition.SemanticValue> que está associado com a cor falada pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-172">The example uses a single <xref:System.Speech.Recognition.SemanticResultKey> with which you can retrieve the <xref:System.Speech.Recognition.SemanticValue> that is associated with the color spoken by the user.</span></span> <span data-ttu-id="2f0c8-173">Por exemplo, se a entrada contiver a frase, "Conjunto em segundo plano para vermelho", o resultado do reconhecimento contém o valor de semântico de "#FF0000", que você pode recuperar usando um manipulador para o `SpeechRecognized` eventos.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-173">For example, if the input contains the phrase, "Set background to red", the recognition result contains the semantic value of "#FF0000", which you can retrieve using a handler for the `SpeechRecognized` event.</span></span>  
  
 <span data-ttu-id="2f0c8-174">O exemplo utiliza <xref:System.String>, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, e <xref:System.Speech.Recognition.GrammarBuilder> objetos para criar as restrições que estão contidas no último <xref:System.Speech.Recognition.GrammarBuilder> objeto, `bothPhrases`.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-174">The example uses <xref:System.String>, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, and <xref:System.Speech.Recognition.GrammarBuilder> objects to build the constraints that are all contained in the last <xref:System.Speech.Recognition.GrammarBuilder> object, `bothPhrases`.</span></span> <span data-ttu-id="2f0c8-175">Por fim, o exemplo constrói uma <xref:System.Speech.Recognition.Grammar> objeto do concluído <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-175">Finally, the example constructs a <xref:System.Speech.Recognition.Grammar> object from the completed <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  // Include semantic information about each of the colors.  
  Choices colorChoice = new Choices();  
  
  GrammarBuilder colorBuilder = new GrammarBuilder("red");  
  SemanticResultValue colorValue =  
    new SemanticResultValue(colorBuilder, "#FF0000");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  colorBuilder = new GrammarBuilder("green");  
  colorValue = new SemanticResultValue(colorBuilder, "#00FF00");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  colorBuilder = new GrammarBuilder("blue");  
  colorValue = new SemanticResultValue(colorBuilder, "#0000FF");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  // Create the semantic key for referencing the color information.  
  SemanticResultKey colorKey =  
    new SemanticResultKey("ColorCode", bothPhrases);  
  bothPhrases = new GrammarBuilder(colorKey);  
  
  // Construct the grammar from the grammar builder.  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (string phrase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string phrase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (phrase As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::String ^ phrase);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : string -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder phrase" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="phrase"><span data-ttu-id="2f0c8-176">A sequência de palavras.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-176">The sequence of words.</span></span></param>
        <summary><span data-ttu-id="2f0c8-177">Inicializa uma nova instância da classe <see cref="T:System.Speech.Recognition.GrammarBuilder" /> de uma sequência de palavras.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-177">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from a sequence of words.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0c8-178">A frase representa uma frase falada exata que a gramática de reconhecimento de fala pode reconhecer.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-178">The phrase represents an exact spoken phrase that the speech recognition grammar can recognize.</span></span> <span data-ttu-id="2f0c8-179">Para obter mais informações sobre a criação de uma gramática de reconhecimento de fala que contém cadeias de caracteres, consulte [usando cadeias de caracteres para criar uma gramática de GrammarBuilder](https://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span><span class="sxs-lookup"><span data-stu-id="2f0c8-179">For more information about building a speech recognition grammar that contains strings, see [Using Strings to Create a GrammarBuilder Grammar](https://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0c8-180">O exemplo a seguir usa <xref:System.Speech.Recognition.GrammarBuilder> e <xref:System.Speech.Recognition.Choices> objetos para construir uma gramática que possa reconhecer a qualquer uma das duas frases, "tornar o plano de fundo *colorChoice*" ou "Definir plano de fundo *colorChoice*".</span><span class="sxs-lookup"><span data-stu-id="2f0c8-180">The following example uses  <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects to construct a grammar that can recognize either of the two phrases, "Make background *colorChoice*" or "Set background to *colorChoice*".</span></span>  
  
 <span data-ttu-id="2f0c8-181">Depois de criar uma lista de valores aceitáveis para *colorChoice* usando uma <xref:System.Speech.Recognition.Choices> do objeto, o exemplo inicializa duas <xref:System.Speech.Recognition.GrammarBuilder> objetos `makePhrase` e `setPhrase`, usando uma cadeia de caracteres como um argumento.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-181">After creating a list of acceptable values for *colorChoice* using a <xref:System.Speech.Recognition.Choices> object, the example initializes two <xref:System.Speech.Recognition.GrammarBuilder> objects, `makePhrase` and `setPhrase`, using a string as an argument.</span></span>  
  
 <span data-ttu-id="2f0c8-182">O exemplo a, por fim, cria uma <xref:System.Speech.Recognition.Grammar> do objeto de um <xref:System.Speech.Recognition.Choices> objeto convertido em um <xref:System.Speech.Recognition.GrammarBuilder> objeto.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-182">The example finally creates a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.Choices> object cast to a <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the Grammar object from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  Grammar grammar = new Grammar((GrammarBuilder)bothChoices);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (string phrase, System.Speech.Recognition.SubsetMatchingMode subsetMatchingCriteria);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string phrase, valuetype System.Speech.Recognition.SubsetMatchingMode subsetMatchingCriteria) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.String,System.Speech.Recognition.SubsetMatchingMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (phrase As String, subsetMatchingCriteria As SubsetMatchingMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::String ^ phrase, System::Speech::Recognition::SubsetMatchingMode subsetMatchingCriteria);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : string * System.Speech.Recognition.SubsetMatchingMode -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder (phrase, subsetMatchingCriteria)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="subsetMatchingCriteria" Type="System.Speech.Recognition.SubsetMatchingMode" />
      </Parameters>
      <Docs>
        <param name="phrase"><span data-ttu-id="2f0c8-183">A sequência de palavras.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-183">The sequence of words.</span></span></param>
        <param name="subsetMatchingCriteria"><span data-ttu-id="2f0c8-184">O modo correspondente que a gramática de reconhecimento de fala usa para reconhecer a frase.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-184">The matching mode the speech recognition grammar uses to recognize the phrase.</span></span></param>
        <summary><span data-ttu-id="2f0c8-185">Inicializa uma nova instância da classe <see cref="T:System.Speech.Recognition.GrammarBuilder" /> para um subconjunto de uma sequência de palavras.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-185">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class for a subset of a sequence of words.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0c8-186">O `phrase` parâmetro representa a frase que a gramática de reconhecimento de fala pode reconhecer.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-186">The `phrase` parameter represents the phrase that the speech recognition grammar can recognize.</span></span> <span data-ttu-id="2f0c8-187">O `subsetMatchingMode` parâmetro especifica um subconjunto da frase que pode ser falado para alcançar o reconhecimento bem-sucedido da frase inteira.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-187">The `subsetMatchingMode` parameter specifies a subset of the phrase that can be spoken to achieve successful recognition of the entire phrase.</span></span> <span data-ttu-id="2f0c8-188">Você pode usar isso para criar uma gramática com uma lista de entradas que têm nomes longos, sem exigir que os usuários falam um nome inteiro para corresponder a um item.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-188">You can use this to create a grammar with a list of entries that have long names, without requiring users to speak an entire name to match an item.</span></span>  
  
 <span data-ttu-id="2f0c8-189">Para obter mais informações sobre os modos de correspondência, consulte <xref:System.Speech.Recognition.SubsetMatchingMode>.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-189">For more information about the matching modes, see <xref:System.Speech.Recognition.SubsetMatchingMode>.</span></span> <span data-ttu-id="2f0c8-190">Para obter mais informações sobre a criação de uma gramática de reconhecimento de fala que contém cadeias de caracteres, consulte [usando cadeias de caracteres para criar uma gramática de GrammarBuilder](https://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span><span class="sxs-lookup"><span data-stu-id="2f0c8-190">For more information about building a speech recognition grammar that contains strings, see [Using Strings to Create a GrammarBuilder Grammar](https://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0c8-191">O exemplo a seguir cria uma gramática de reconhecimento de fala para cada <xref:System.Speech.Recognition.SubsetMatchingMode> valor e uma gramática para escolher entre as gramáticas de modo correspondente.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-191">The following example creates a speech recognition grammar for each <xref:System.Speech.Recognition.SubsetMatchingMode> value and a grammar for choosing between the matching mode grammars.</span></span> <span data-ttu-id="2f0c8-192">Se o valor de `phrase` é "um dois três quatro cinco seis sete", e em seguida, a gramática de subsequência reconhece a entrada "dois três quatro", mas não a entrada "um três cinco".</span><span class="sxs-lookup"><span data-stu-id="2f0c8-192">If the value of `phrase` is "one two three four five six seven", then the Subsequence grammar recognizes the input "two three four", but not the input "one three five".</span></span> <span data-ttu-id="2f0c8-193">No entanto, a gramática de subconjunto ordenados reconhece ambas essas entradas.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-193">However, the Ordered Subset grammar recognizes both of these inputs.</span></span>  
  
```csharp  
  
private static IEnumerable<Grammar>  
  CreateMatchingModeGrammars(string phrase)  
{  
  List<Grammar> grammars = new List<Grammar>(5);  
  
  Choices modeChoice = new Choices();  
  Type enumType = typeof(SubsetMatchingMode);  
  foreach (SubsetMatchingMode mode in Enum.GetValues(enumType))  
  {  
    string modeName = Enum.GetName(enumType, mode);  
    modeName = BreakAtCaps(modeName);  
  
    GrammarBuilder builder = new GrammarBuilder(phrase, mode);  
    Grammar modeGrammar = new Grammar(builder);  
    modeGrammar.Name = modeName;  
    modeGrammar.Enabled = false;  
    grammars.Add(modeGrammar);  
  
    modeChoice.Add(modeName);  
  }  
  
  Grammar choiceGrammar = new Grammar(modeChoice);  
  choiceGrammar.Name = "choice";  
  grammars.Add(choiceGrammar);  
  
  return grammars;  
}  
  
// Insert spaces preceding each uppercase letter in a string.   
private static string BreakAtCaps(string item)  
{  
  if (item == null || item.Length == 0)  
  {  
    return item;  
  }  
  
  StringBuilder sb = new StringBuilder(item[0].ToString());  
  for (int i = 1; i < item.Length; i++)  
  {  
    char c = item[i];  
    if (char.IsUpper(c))  
    {  
      sb.Append(" ");  
    }  
    sb.Append(c);  
  }  
  
  return sb.ToString();  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.SubsetMatchingMode" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (System.Speech.Recognition.GrammarBuilder builder, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.GrammarBuilder builder, int32 minRepeat, int32 maxRepeat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.GrammarBuilder,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (builder As GrammarBuilder, minRepeat As Integer, maxRepeat As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::Speech::Recognition::GrammarBuilder ^ builder, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : System.Speech.Recognition.GrammarBuilder * int * int -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder (builder, minRepeat, maxRepeat)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="minRepeat" Type="System.Int32" />
        <Parameter Name="maxRepeat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="2f0c8-194">O elemento repetido.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-194">The repeated element.</span></span></param>
        <param name="minRepeat"><span data-ttu-id="2f0c8-195">O número mínimo de vezes que a entrada correspondente ao elemento definido por <paramref name="builder" /> deve ocorrer para constituir uma correspondência.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-195">The minimum number of times that input matching the element defined by <paramref name="builder" /> must occur to constitute a match.</span></span></param>
        <param name="maxRepeat"><span data-ttu-id="2f0c8-196">O número máximo de vezes que a entrada correspondente ao elemento definido por <paramref name="builder" /> pode ocorrer para constituir uma correspondência.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-196">The maximum number of times that input matching the element defined by <paramref name="builder" /> can occur to constitute a match.</span></span></param>
        <summary><span data-ttu-id="2f0c8-197">Inicializa uma nova instância da classe <see cref="T:System.Speech.Recognition.GrammarBuilder" /> de um elemento repetido.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-197">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from a repeated element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0c8-198">Se o valor de `minRepeat` for 0, o novo <xref:System.Speech.Recognition.GrammarBuilder> representa um elemento opcional.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-198">If the value of `minRepeat` is 0, then the new <xref:System.Speech.Recognition.GrammarBuilder> represents an optional element.</span></span>  
  
 <span data-ttu-id="2f0c8-199">O valor de `minRepeat` deve ser maior que ou igual a 0 e menor ou igual ao valor de `maxRepeat`.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-199">The value of `minRepeat` must be greater than or equal to 0 and less than or equal to the value of `maxRepeat`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2f0c8-200">Quando você especifica o número de repetições para <xref:System.Speech.Recognition.GrammarBuilder> objetos que contêm <xref:System.Speech.Recognition.SemanticResultValue> ou <xref:System.Speech.Recognition.SemanticResultKey> instâncias, verifique se você evitar criar elementos semânticos duplicados com o mesmo nome de chave ou vários elementos semânticos que repetidamente poderia modificar o <xref:System.Speech.Recognition.SemanticValue.Value%2A> propriedade de um <xref:System.Speech.Recognition.SemanticValue> objeto.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-200">When you specify repeats for <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="2f0c8-201">O reconhecedor de fala pode lançar uma exceção se encontrar nessas circunstâncias.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-201">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> 
  
   
  
## Examples  
 <span data-ttu-id="2f0c8-202">O exemplo a seguir cria uma gramática de reconhecimento de fala para pedir uma pizza.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-202">The following example creates a speech recognition grammar for ordering a pizza.</span></span> <span data-ttu-id="2f0c8-203">Ele começa com uma frase opcional, abrindo, seguida de um a quatro ingredientes e fecha com a palavra "pizza".</span><span class="sxs-lookup"><span data-stu-id="2f0c8-203">It starts with an optional, opening phrase, followed by one to four toppings, and closes with the word "pizza".</span></span>  
  
```csharp  
  
private static Grammar CreatePizzaGrammar()  
{  
  
  // Create a Choices object from a string array of alternative toppings.  
  Choices toppings = new Choices(new string[] {  
    "cheese", "mushroom", "tomato", "onion",  
    "anchovy", "chicken", "pepperoni"});  
  
  // Create a GrammarBuilder and append the Choices object.  
  GrammarBuilder andToppings = new GrammarBuilder("and", 0, 1);  
  andToppings.Append(toppings);  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder("I would like a", 0, 1);  
  gb.Append(toppings);  
  gb.Append(new GrammarBuilder(andToppings, 0, 3));  
  gb.Append("pizza");  
  
  // Create the Grammar from the GrammarBuilder.  
  Grammar grammar = new Grammar(gb);  
  grammar.Name = "Pizza Order";  
  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (string phrase, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string phrase, int32 minRepeat, int32 maxRepeat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (phrase As String, minRepeat As Integer, maxRepeat As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::String ^ phrase, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : string * int * int -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder (phrase, minRepeat, maxRepeat)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="minRepeat" Type="System.Int32" />
        <Parameter Name="maxRepeat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="phrase"><span data-ttu-id="2f0c8-204">A sequência de palavras repetida.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-204">The repeated sequence of words.</span></span></param>
        <param name="minRepeat"><span data-ttu-id="2f0c8-205">O número mínimo de vezes que a entrada correspondente à frase deve ocorrer para constituir uma correspondência.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-205">The minimum number of times that input matching the phrase must occur to constitute a match.</span></span></param>
        <param name="maxRepeat"><span data-ttu-id="2f0c8-206">O número máximo de vezes que a entrada correspondente à frase pode ocorrer para constituir uma correspondência.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-206">The maximum number of times that input matching the phrase can occur to constitute a match.</span></span></param>
        <summary><span data-ttu-id="2f0c8-207">Inicializa uma nova instância da classe <see cref="T:System.Speech.Recognition.GrammarBuilder" /> da sequência de palavras em uma <see cref="T:System.String" /> e especifica quantas vezes a <see cref="T:System.String" /> pode ser repetida.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-207">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from the sequence of words in a <see cref="T:System.String" /> and specifies how many times the <see cref="T:System.String" /> can be repeated.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0c8-208">Se o valor de `minRepeat` for 0, o novo <xref:System.Speech.Recognition.GrammarBuilder> representa um elemento opcional.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-208">If the value of `minRepeat` is 0, then the new <xref:System.Speech.Recognition.GrammarBuilder> represents an optional element.</span></span>  
  
 <span data-ttu-id="2f0c8-209">O valor de `minRepeat` deve ser maior que ou igual a 0 e menor ou igual ao valor de `maxRepeat`.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-209">The value of `minRepeat` must be greater than or equal to 0 and less than or equal to the value of `maxRepeat`.</span></span> <span data-ttu-id="2f0c8-210">Para obter mais informações sobre a criação de uma gramática de reconhecimento de fala que contém cadeias de caracteres, consulte [usando cadeias de caracteres para criar uma gramática de GrammarBuilder](https://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span><span class="sxs-lookup"><span data-stu-id="2f0c8-210">For more information about building a speech recognition grammar that contains strings, see [Using Strings to Create a GrammarBuilder Grammar](https://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0c8-211">O exemplo a seguir cria uma gramática de reconhecimento de fala para pedir uma pizza.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-211">The following example creates a speech recognition grammar for ordering a pizza.</span></span> <span data-ttu-id="2f0c8-212">Ele começa com uma frase opcional, abrindo, seguida de um a quatro ingredientes e fecha com a palavra "pizza".</span><span class="sxs-lookup"><span data-stu-id="2f0c8-212">It starts with an optional, opening phrase, followed by one to four toppings, and closes with the word "pizza".</span></span>  
  
```csharp  
  
private static Grammar CreatePizzaGrammar()  
{  
  
  // Create a Choices object with alternatives for toppings.  
  Choices toppings = new Choices(new string[] {  
    "cheese", "mushroom", "tomato", "onion",  
    "anchovy", "chicken", "pepperoni"});  
  
  // Create a GrammarBuilder and append the Choices object.  
  GrammarBuilder andToppings = new GrammarBuilder("and", 0, 1);  
  andToppings.Append(toppings);  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder("I would like a", 0, 1);  
  gb.Append(toppings);  
  gb.Append(new GrammarBuilder(andToppings, 0, 3));  
  gb.Append("pizza");  
  
  // Create the Grammar from the GrammarBuilder.  
  Grammar grammar = new Grammar(gb);  
  grammar.Name = "Pizza Order";  
  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2f0c8-213">Cria um novo <see cref="T:System.Speech.Recognition.GrammarBuilder" /> que contém uma sequência de dois elementos de gramática.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-213">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a sequence of two grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0c8-214">Estático <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> métodos fornecem outro mecanismo pelo qual você pode combinar vários tipos para criar a diversidade e flexibilidade em gramáticas criados com <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-214">The static <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods provide another mechanism by which you can combine various types to create diversity and flexibility in grammars built with <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="2f0c8-215">Esses métodos correspondem a um estático <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> métodos, que também são definidos na <xref:System.Speech.Recognition.GrammarBuilder> classe.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-215">These methods correspond to the static <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> methods, which are also defined on the <xref:System.Speech.Recognition.GrammarBuilder> class.</span></span> <span data-ttu-id="2f0c8-216">A ordem dos parâmetros determina a ordem dos elementos na nova <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-216">The order of the parameters determines the order of the elements in the new <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="2f0c8-217">Um <xref:System.Speech.Recognition.GrammarBuilder> também pode ser obtido <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, e [cadeia de caracteres](https://go.microsoft.com/fwlink/?LinkId=159733) objetos.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-217">A <xref:System.Speech.Recognition.GrammarBuilder> can also be obtained from <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, and [String](https://go.microsoft.com/fwlink/?LinkId=159733) objects.</span></span> <span data-ttu-id="2f0c8-218">Para obter mais informações, consulte o <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> e <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operadores.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-218">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2f0c8-219">O reconhecedor de fala pode lançar uma exceção ao usar uma gramática de reconhecimento de fala que contém elementos semânticos duplicados com o mesmo nome de chave ou vários elementos semânticos que repetidamente poderia modificar o valor do mesmo elemento semântico.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-219">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span> 
  
 <span data-ttu-id="2f0c8-220">Para obter mais informações sobre como criar e usar gramáticas de reconhecimento de fala, consulte [reconhecimento de fala](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)) e [criar gramáticas de GrammarBuilder](https://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span><span class="sxs-lookup"><span data-stu-id="2f0c8-220">For more information about building and using speech recognition grammars, see [Speech Recognition](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)) and [Creating GrammarBuilder Grammars](https://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder Add (System.Speech.Recognition.Choices choices, System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Speech.Recognition.GrammarBuilder Add(class System.Speech.Recognition.Choices choices, class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ Add(System::Speech::Recognition::Choices ^ choices, System::Speech::Recognition::GrammarBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="static member Add : System.Speech.Recognition.Choices * System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.Add (choices, builder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="choices" Type="System.Speech.Recognition.Choices" />
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="choices"><span data-ttu-id="2f0c8-221">O primeiro elemento de gramática, que representa um conjunto de alternativas.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-221">The first grammar element, which represents a set of alternatives.</span></span></param>
        <param name="builder"><span data-ttu-id="2f0c8-222">O segundo elemento de gramática.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-222">The second grammar element.</span></span></param>
        <summary><span data-ttu-id="2f0c8-223">Cria um novo <see cref="T:System.Speech.Recognition.GrammarBuilder" /> que contém um objeto <see cref="T:System.Speech.Recognition.Choices" /> seguido por um objeto <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-223">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.Choices" /> object followed by a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span></span></summary>
        <returns><span data-ttu-id="2f0c8-224">Um <see cref="T:System.Speech.Recognition.GrammarBuilder" /> para a sequência do elemento <paramref name="choices" /> seguido pelo elemento <paramref name="builder" />.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-224">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="choices" /> element followed by the <paramref name="builder" /> element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0c8-225"><xref:System.Speech.Recognition.GrammarBuilder> dá suporte a conversões implícitas de classes a seguir:</span><span class="sxs-lookup"><span data-stu-id="2f0c8-225"><xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="2f0c8-226">Esse método aceita os objetos listados acima para o `builder` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-226">This method accepts the objects listed above for the `builder` parameter.</span></span>  
  
 <span data-ttu-id="2f0c8-227">Para obter mais informações, consulte o <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> e <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operadores.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-227">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2f0c8-228">Ao combinar <xref:System.Speech.Recognition.Choices> e <xref:System.Speech.Recognition.GrammarBuilder> objetos que contêm <xref:System.Speech.Recognition.SemanticResultValue> ou <xref:System.Speech.Recognition.SemanticResultKey> instâncias, verifique se você evitar criar elementos semânticos duplicados com o mesmo nome de chave ou vários elementos semânticos que poderia modificar repetidamente o <xref:System.Speech.Recognition.SemanticValue.Value%2A> propriedade de um <xref:System.Speech.Recognition.SemanticValue> objeto.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-228">When you combine <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="2f0c8-229">O reconhecedor de fala pode lançar uma exceção se encontrar nessas circunstâncias.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-229">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="2f0c8-230">Para obter mais informações sobre a criação de uma gramática de reconhecimento de fala que contém informações semânticas, consulte [adicionar semântica a uma gramática de GrammarBuilder](https://msdn.microsoft.com/library/hh361581.aspx).</span><span class="sxs-lookup"><span data-stu-id="2f0c8-230">For more information about building a speech recognition grammar that contains semantic information, see [Add Semantics to a GrammarBuilder Grammar](https://msdn.microsoft.com/library/hh361581.aspx).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder Add (System.Speech.Recognition.GrammarBuilder builder, System.Speech.Recognition.Choices choices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Speech.Recognition.GrammarBuilder Add(class System.Speech.Recognition.GrammarBuilder builder, class System.Speech.Recognition.Choices choices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.Choices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ Add(System::Speech::Recognition::GrammarBuilder ^ builder, System::Speech::Recognition::Choices ^ choices);" />
      <MemberSignature Language="F#" Value="static member Add : System.Speech.Recognition.GrammarBuilder * System.Speech.Recognition.Choices -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.Add (builder, choices)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="choices" Type="System.Speech.Recognition.Choices" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="2f0c8-231">O primeiro elemento de gramática.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-231">The first grammar element.</span></span></param>
        <param name="choices"><span data-ttu-id="2f0c8-232">O segundo elemento de gramática, que representa um conjunto de alternativas.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-232">The second grammar element, which represents a set of alternatives.</span></span></param>
        <summary><span data-ttu-id="2f0c8-233">Cria um novo <see cref="T:System.Speech.Recognition.GrammarBuilder" /> que contém um objeto <see cref="T:System.Speech.Recognition.GrammarBuilder" /> seguido por um objeto <see cref="T:System.Speech.Recognition.Choices" />.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-233">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object followed by a <see cref="T:System.Speech.Recognition.Choices" /> object.</span></span></summary>
        <returns><span data-ttu-id="2f0c8-234">Um <see cref="T:System.Speech.Recognition.GrammarBuilder" /> para a sequência do elemento <paramref name="builder" /> seguido pelo elemento <paramref name="choices" />.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-234">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder" /> element followed by the <paramref name="choices" /> element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0c8-235"><xref:System.Speech.Recognition.GrammarBuilder> dá suporte a conversões implícitas de classes a seguir:</span><span class="sxs-lookup"><span data-stu-id="2f0c8-235"><xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="2f0c8-236">Esse método aceita os objetos listados acima para o `builder` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-236">This method accepts the objects listed above for the `builder` parameter.</span></span>  
  
 <span data-ttu-id="2f0c8-237">Para obter mais informações, consulte o <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> e <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operadores.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-237">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2f0c8-238">Ao combinar <xref:System.Speech.Recognition.Choices> e <xref:System.Speech.Recognition.GrammarBuilder> objetos que contêm <xref:System.Speech.Recognition.SemanticResultValue> ou <xref:System.Speech.Recognition.SemanticResultKey> instâncias com outros elementos de gramática, certifique-se de evitar a criação de elementos semânticos duplicados com o mesmo nome de chave ou vários elementos semânticos que repetidamente poderia modificar o <xref:System.Speech.Recognition.SemanticValue.Value%2A> propriedade de um <xref:System.Speech.Recognition.SemanticValue> objeto.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-238">When you combine <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances with other grammar elements, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="2f0c8-239">O reconhecedor de fala pode lançar uma exceção se encontrar nessas circunstâncias.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-239">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> 
  
   
  
## Examples  
 <span data-ttu-id="2f0c8-240">O exemplo a seguir cria uma gramática de reconhecimento de fala que possa reconhecer as duas frases, "tornar o plano de fundo *cor*" e "Definir plano de fundo *cor*", onde *cor* é selecionado em um conjunto de cores.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-240">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="2f0c8-241">Vários tipos são usados para construir a gramática final, como [cadeia de caracteres](https://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, e <xref:System.Speech.Recognition.GrammarBuilder> objetos.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-241">Various types are used to build the final grammar, such as [String](https://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span> <span data-ttu-id="2f0c8-242">Os operadores de conversão explícita em chamadas para o <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> métodos são opcionais.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-242">The explicit cast operators in the calls to the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods are optional.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    GrammarBuilder.Add((GrammarBuilder)"Make background", colorChoice);  
  GrammarBuilder setPhrase =  
    GrammarBuilder.Add("Set background to", (GrammarBuilder)colorChoice);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder Add (System.Speech.Recognition.GrammarBuilder builder1, System.Speech.Recognition.GrammarBuilder builder2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Speech.Recognition.GrammarBuilder Add(class System.Speech.Recognition.GrammarBuilder builder1, class System.Speech.Recognition.GrammarBuilder builder2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (builder1 As GrammarBuilder, builder2 As GrammarBuilder) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ Add(System::Speech::Recognition::GrammarBuilder ^ builder1, System::Speech::Recognition::GrammarBuilder ^ builder2);" />
      <MemberSignature Language="F#" Value="static member Add : System.Speech.Recognition.GrammarBuilder * System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.Add (builder1, builder2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder1" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="builder2" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="builder1"><span data-ttu-id="2f0c8-243">O primeiro elemento de gramática.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-243">The first grammar element.</span></span></param>
        <param name="builder2"><span data-ttu-id="2f0c8-244">O segundo elemento de gramática.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-244">The second grammar element.</span></span></param>
        <summary><span data-ttu-id="2f0c8-245">Cria um novo <see cref="T:System.Speech.Recognition.GrammarBuilder" /> que contém uma sequência de dois objetos <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-245">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a sequence of two <see cref="T:System.Speech.Recognition.GrammarBuilder" /> objects.</span></span></summary>
        <returns><span data-ttu-id="2f0c8-246">Um <see cref="T:System.Speech.Recognition.GrammarBuilder" /> para a sequência do elemento <paramref name="builder1" /> seguido pelo elemento <paramref name="builder2" />.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-246">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder1" /> element followed by the <paramref name="builder2" /> element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0c8-247"><xref:System.Speech.Recognition.GrammarBuilder> dá suporte a conversões implícitas de classes a seguir:</span><span class="sxs-lookup"><span data-stu-id="2f0c8-247"><xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="2f0c8-248">Esse método aceita os objetos listados acima para o `builder1` ou `builder2` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-248">This method accepts the objects listed above for the `builder1` or `builder2` parameter.</span></span>  
  
 <span data-ttu-id="2f0c8-249">Para obter mais informações, consulte o <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> e <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operadores.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-249">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2f0c8-250">Ao combinar <xref:System.Speech.Recognition.Choices> e <xref:System.Speech.Recognition.GrammarBuilder> objetos que contêm <xref:System.Speech.Recognition.SemanticResultValue> ou <xref:System.Speech.Recognition.SemanticResultKey> instâncias com outros elementos de gramática, certifique-se de evitar a criação de elementos semânticos duplicados com o mesmo nome de chave ou vários elementos semânticos que repetidamente poderia modificar o <xref:System.Speech.Recognition.SemanticValue.Value%2A> propriedade de um <xref:System.Speech.Recognition.SemanticValue> objeto.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-250">When you combine <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances with other grammar elements, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="2f0c8-251">O reconhecedor de fala pode lançar uma exceção se encontrar nessas circunstâncias.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-251">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> 
  
   
  
## Examples  
 <span data-ttu-id="2f0c8-252">O exemplo a seguir cria uma gramática de reconhecimento de fala que possa reconhecer as duas frases, "tornar o plano de fundo *cor*" e "Definir plano de fundo *cor*", onde *cor* é selecionado em um conjunto de cores.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-252">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="2f0c8-253">Vários tipos são usados para construir a gramática final, como [cadeia de caracteres](https://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, e <xref:System.Speech.Recognition.GrammarBuilder> objetos.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-253">Various types are used to build the final grammar, such as [String](https://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span> <span data-ttu-id="2f0c8-254">Os operadores de conversão explícita em chamadas para o <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> métodos são opcionais.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-254">The explicit cast operators in the calls to the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods are optional.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    GrammarBuilder.Add((GrammarBuilder)"Make background", colorChoice);  
  GrammarBuilder setPhrase =  
    GrammarBuilder.Add("Set background to", (GrammarBuilder)colorChoice);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder Add (System.Speech.Recognition.GrammarBuilder builder, string phrase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Speech.Recognition.GrammarBuilder Add(class System.Speech.Recognition.GrammarBuilder builder, string phrase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (builder As GrammarBuilder, phrase As String) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ Add(System::Speech::Recognition::GrammarBuilder ^ builder, System::String ^ phrase);" />
      <MemberSignature Language="F#" Value="static member Add : System.Speech.Recognition.GrammarBuilder * string -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.Add (builder, phrase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="phrase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="2f0c8-255">O primeiro elemento de gramática.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-255">The first grammar element.</span></span></param>
        <param name="phrase"><span data-ttu-id="2f0c8-256">O segundo elemento de gramática, que representa uma sequência de palavras.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-256">The second grammar element, which represents a sequence of words.</span></span></param>
        <summary><span data-ttu-id="2f0c8-257">Cria um novo <see cref="T:System.Speech.Recognition.GrammarBuilder" /> que contém um objeto <see cref="T:System.Speech.Recognition.GrammarBuilder" /> seguido por uma frase.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-257">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object followed by a phrase.</span></span></summary>
        <returns><span data-ttu-id="2f0c8-258">Um <see cref="T:System.Speech.Recognition.GrammarBuilder" /> para a sequência do elemento <paramref name="builder" /> seguido pelo elemento <paramref name="phrase" />.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-258">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder" /> element followed by the <paramref name="phrase" /> element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0c8-259"><xref:System.Speech.Recognition.GrammarBuilder> dá suporte a conversões implícitas de classes a seguir:</span><span class="sxs-lookup"><span data-stu-id="2f0c8-259"><xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="2f0c8-260">Esse método aceita os objetos listados acima para o `builder` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-260">This method accepts the objects listed above for the `builder` parameter.</span></span>  
  
 <span data-ttu-id="2f0c8-261">Para obter mais informações, consulte o <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> e <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operadores.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-261">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0c8-262">O exemplo a seguir cria uma gramática de reconhecimento de fala que possa reconhecer as duas frases, "tornar o plano de fundo *cor*" e "Definir plano de fundo *cor*", onde *cor* é selecionado em um conjunto de cores.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-262">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="2f0c8-263">Vários tipos são usados para construir a gramática final, como [cadeia de caracteres](https://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, e <xref:System.Speech.Recognition.GrammarBuilder> objetos.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-263">Various types are used to build the final grammar, such as [String](https://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span> <span data-ttu-id="2f0c8-264">Os operadores de conversão explícita em chamadas para o <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> métodos são opcionais.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-264">The explicit cast operators in the calls to the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods are optional.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    GrammarBuilder.Add((GrammarBuilder)"Make background", colorChoice);  
  GrammarBuilder setPhrase =  
    GrammarBuilder.Add("Set background to", (GrammarBuilder)colorChoice);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder Add (string phrase, System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Speech.Recognition.GrammarBuilder Add(string phrase, class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Add(System.String,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (phrase As String, builder As GrammarBuilder) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ Add(System::String ^ phrase, System::Speech::Recognition::GrammarBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="static member Add : string * System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.Add (phrase, builder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="phrase"><span data-ttu-id="2f0c8-265">O primeiro elemento de gramática, que representa uma sequência de palavras.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-265">The first grammar element, which represents a sequence of words.</span></span></param>
        <param name="builder"><span data-ttu-id="2f0c8-266">O segundo elemento de gramática.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-266">The second grammar element.</span></span></param>
        <summary><span data-ttu-id="2f0c8-267">Cria um novo <see cref="T:System.Speech.Recognition.GrammarBuilder" /> que contém uma frase seguida por um objeto <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-267">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a phrase followed by a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span></span></summary>
        <returns><span data-ttu-id="2f0c8-268">Um <see cref="T:System.Speech.Recognition.GrammarBuilder" /> para a sequência do elemento <paramref name="phrase" /> seguido pelo elemento <paramref name="builder" />.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-268">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="phrase" /> element followed by the <paramref name="builder" /> element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0c8-269"><xref:System.Speech.Recognition.GrammarBuilder> dá suporte a conversões implícitas de classes a seguir:</span><span class="sxs-lookup"><span data-stu-id="2f0c8-269"><xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="2f0c8-270">Esse método aceita os objetos listados acima para o `builder` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-270">This method accepts the objects listed above for the `builder` parameter.</span></span>  
  
 <span data-ttu-id="2f0c8-271">Para obter mais informações, consulte o <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> e <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operadores.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-271">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0c8-272">O exemplo a seguir cria uma gramática de reconhecimento de fala que possa reconhecer as duas frases, "tornar o plano de fundo *cor*" e "Definir plano de fundo *cor*", onde *cor* é selecionado em um conjunto de cores.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-272">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="2f0c8-273">Vários tipos são usados para construir a gramática final, como [cadeia de caracteres](https://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, e <xref:System.Speech.Recognition.GrammarBuilder> objetos.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-273">Various types are used to build the final grammar, such as [String](https://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span> <span data-ttu-id="2f0c8-274">Os operadores de conversão explícita em chamadas para o <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> métodos são opcionais.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-274">The explicit cast operators in the calls to the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods are optional.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    GrammarBuilder.Add((GrammarBuilder)"Make background", colorChoice);  
  GrammarBuilder setPhrase =  
    GrammarBuilder.Add("Set background to", (GrammarBuilder)colorChoice);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Append">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2f0c8-275">Acrescenta um elemento de gramática à sequência de elementos de gramática atual.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-275">Appends a grammar element to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0c8-276">Usar estes métodos para acrescentar elementos de gramática a um existente <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-276">Use these methods to append grammar elements to an existing <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="2f0c8-277">Quando você cria elementos de gramática, você pode acrescentá-los para o construtor existente progressivamente desenvolver as restrições para uma gramática de reconhecimento de fala.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-277">As you create grammar elements, you can append them to the existing builder to progressively develop the constraints for a speech recognition grammar.</span></span> <span data-ttu-id="2f0c8-278">Cada elemento é adicionado ao final da sequência de elementos da atual.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-278">Each element is added to the end of the current sequence of elements.</span></span>  
  
 <span data-ttu-id="2f0c8-279">Esse método tem sobrecargas para acrescentar <xref:System.Speech.Recognition.GrammarBuilder>, <xref:System.String>, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, e <xref:System.Speech.Recognition.SemanticResultValue> objetos.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-279">This method has overloads for appending <xref:System.Speech.Recognition.GrammarBuilder>, <xref:System.String>, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, and <xref:System.Speech.Recognition.SemanticResultValue> objects.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2f0c8-280">O reconhecedor de fala pode lançar uma exceção ao usar uma gramática de reconhecimento de fala que contém elementos semânticos duplicados com o mesmo nome de chave ou vários elementos semânticos que repetidamente poderia modificar o valor do mesmo elemento semântico.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-280">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span> 
  
 <span data-ttu-id="2f0c8-281">Para obter mais informações sobre como criar e usar gramáticas de reconhecimento de fala, consulte [reconhecimento de fala](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)) e [criar gramáticas de GrammarBuilder](https://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span><span class="sxs-lookup"><span data-stu-id="2f0c8-281">For more information about building and using speech recognition grammars, see [Speech Recognition](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)) and [Creating GrammarBuilder Grammars](https://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Speech.Recognition.Choices alternateChoices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(class System.Speech.Recognition.Choices alternateChoices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (alternateChoices As Choices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Speech::Recognition::Choices ^ alternateChoices);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Speech.Recognition.Choices -&gt; unit" Usage="grammarBuilder.Append alternateChoices" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alternateChoices" Type="System.Speech.Recognition.Choices" />
      </Parameters>
      <Docs>
        <param name="alternateChoices"><span data-ttu-id="2f0c8-282">O conjunto de alternativas a acrescentar.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-282">The set of alternatives to append.</span></span></param>
        <summary><span data-ttu-id="2f0c8-283">Acrescenta um conjunto de alternativas à sequência de elementos de gramática atual.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-283">Appends a set of alternatives to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0c8-284">`alternateChoices` é adicionado ao final da sequência de elementos da atual.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-284">`alternateChoices` is added to the end of the current sequence of elements.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2f0c8-285">Quando você acrescentar <xref:System.Speech.Recognition.Choices> objetos que contêm <xref:System.Speech.Recognition.SemanticResultValue> ou <xref:System.Speech.Recognition.SemanticResultKey> instâncias para um <xref:System.Speech.Recognition.GrammarBuilder> , verifique se você evitar criar elementos semânticos duplicados com o mesmo nome de chave ou vários elementos semânticos que poderia repetidamente modificar a <xref:System.Speech.Recognition.SemanticValue.Value%2A> propriedade de um <xref:System.Speech.Recognition.SemanticValue> objeto.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-285">When you append <xref:System.Speech.Recognition.Choices> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances to a <xref:System.Speech.Recognition.GrammarBuilder> object, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="2f0c8-286">O reconhecedor de fala pode lançar uma exceção se encontrar nessas circunstâncias.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-286">The speech recognizer can throw an exception if it encounters these circumstances.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="2f0c8-287">O exemplo a seguir cria uma gramática de reconhecimento de fala para frases como "Chamada James no trabalho" e "Anne de chamada no celular", onde a palavra "telefone" é opcional.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-287">The following example creates a speech recognition grammar for phrases such as "Call James at work" and "Call Anne on her cell phone", where the word "phone" is optional.</span></span> <span data-ttu-id="2f0c8-288">O exemplo destaca o uso do <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> método.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-288">The example highlights the use of the <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> method.</span></span>  
  
```csharp  
  
public static Grammar CreatePhonePhrase()  
{  
  // Create alternatives for person names, locations, devices, and pronouns.  
  Choices personChoice = new Choices(new string[] {"Anne", "James", "Mary", "Sam"});  
  Choices locationChoice = new Choices(new string[] {"home", "work"});  
  Choices deviceChoice = new Choices(new string[] {"home", "work", "cell"});  
  Choices pronounChoice = new Choices(new string[] {"his", "her"});  
  
  // Create a phrase for the receiving device, which optionally contains the word "phone".  
  GrammarBuilder devicePhrase = new GrammarBuilder(pronounChoice);  
  devicePhrase.Append(deviceChoice);  
  devicePhrase.Append("phone", 0, 1);  
  
  // Create alternatives for phrases specifying a device or a location.  
  GrammarBuilder atLocation = new GrammarBuilder("at");  
  atLocation.Append(locationChoice);  
  
  GrammarBuilder onDevice = new GrammarBuilder("on");  
  onDevice.Append(devicePhrase);  
  
  Choices howChoice = new Choices(new GrammarBuilder[] {atLocation, onDevice});  
  
  // Build the final phrase.  
  GrammarBuilder callWho = new GrammarBuilder("Call");  
  callWho.Append(personChoice);  
  callWho.Append(howChoice);  
  
  // Create the Grammar object.  
  Grammar callGrammar = new Grammar(callWho);  
  callGrammar.Name = "Call Grammar";  
  
  return callGrammar;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (builder As GrammarBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Speech::Recognition::GrammarBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Speech.Recognition.GrammarBuilder -&gt; unit" Usage="grammarBuilder.Append builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="2f0c8-289">O elemento de gramática a acrescentar.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-289">The grammar element to append.</span></span></param>
        <summary><span data-ttu-id="2f0c8-290">Acrescenta um elemento de gramática à sequência de elementos de gramática atual.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-290">Appends a grammar element to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0c8-291">`builder` é adicionado ao final da sequência de elementos de gramática atual.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-291">`builder` is added to the end of the current sequence of grammar elements.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2f0c8-292">Quando você acrescentar <xref:System.Speech.Recognition.GrammarBuilder> objetos que contêm <xref:System.Speech.Recognition.SemanticResultValue> ou <xref:System.Speech.Recognition.SemanticResultKey> instâncias para um <xref:System.Speech.Recognition.GrammarBuilder> , verifique se você evitar criar elementos semânticos duplicados com o mesmo nome de chave ou vários elementos semânticos que poderia repetidamente modificar a <xref:System.Speech.Recognition.SemanticValue.Value%2A> propriedade de um <xref:System.Speech.Recognition.SemanticValue> objeto.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-292">When you append <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances to a <xref:System.Speech.Recognition.GrammarBuilder> object, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="2f0c8-293">O reconhecedor de fala pode lançar uma exceção se encontrar nessas circunstâncias.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-293">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> 
  
   
  
## Examples  
 <span data-ttu-id="2f0c8-294">O exemplo a seguir cria uma gramática de reconhecimento de fala para frases como "Chamada James no trabalho" e "Anne de chamada no celular", onde a palavra "telefone" é opcional.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-294">The following example creates a speech recognition grammar for phrases such as "Call James at work" and "Call Anne on her cell phone", where the word "phone" is optional.</span></span> <span data-ttu-id="2f0c8-295"><xref:System.Speech.Recognition.GrammarBuilder> e <xref:System.Speech.Recognition.Choices> objetos são usados para construir a gramática.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-295"><xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects are used to construct the grammar.</span></span> <span data-ttu-id="2f0c8-296">O exemplo destaca o uso do <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> método.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-296">The example highlights the use of the <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> method.</span></span>  
  
```csharp  
  
public static Grammar CreatePhonePhrase()  
{  
  // Create alternatives for person names, locations, devices, and pronouns.  
  Choices personChoice = new Choices(new string[] {"Anne", "James", "Mary", "Sam"});  
  Choices locationChoice = new Choices(new string[] {"home", "work"});  
  Choices deviceChoice = new Choices(new string[] {"home", "work", "cell"});  
  Choices pronounChoice = new Choices(new string[] {"his", "her"});  
  
  // Create a phrase for the receiving device, which optionally contains the word "phone".  
  GrammarBuilder devicePhrase = new GrammarBuilder(pronounChoice);  
  devicePhrase.Append(deviceChoice);  
  devicePhrase.Append("phone", 0, 1);  
  
  // Create alternatives for phrases specifying a device or a location.  
  GrammarBuilder atLocation = new GrammarBuilder("at");  
  atLocation.Append(locationChoice);  
  
  GrammarBuilder onDevice = new GrammarBuilder("on");  
  onDevice.Append(devicePhrase);  
  
  Choices howChoice = new Choices(new GrammarBuilder[] {atLocation, onDevice});  
  
  // Build the final phrase.  
  GrammarBuilder callWho = new GrammarBuilder("Call");  
  callWho.Append(personChoice);  
  callWho.Append(howChoice);  
  
  // Create the Grammar object.  
  Grammar callGrammar = new Grammar(callWho);  
  callGrammar.Name = "Call Grammar";  
  
  return callGrammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Speech.Recognition.SemanticResultKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(class System.Speech.Recognition.SemanticResultKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.SemanticResultKey)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (key As SemanticResultKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Speech::Recognition::SemanticResultKey ^ key);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Speech.Recognition.SemanticResultKey -&gt; unit" Usage="grammarBuilder.Append key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Speech.Recognition.SemanticResultKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="2f0c8-297">A chave semântica a acrescentar.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-297">The semantic key to append.</span></span></param>
        <summary><span data-ttu-id="2f0c8-298">Acrescenta uma chave semântica à sequência de elementos de gramática atual.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-298">Appends a semantic key to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0c8-299">`key` é adicionado ao final da sequência de elementos da atual.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-299">`key` is added to the end of the current sequence of elements.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2f0c8-300">Quando você acrescentar <xref:System.Speech.Recognition.SemanticResultValue> ou <xref:System.Speech.Recognition.SemanticResultKey> instâncias para um <xref:System.Speech.Recognition.GrammarBuilder> , verifique se você evitar criar elementos semânticos duplicados com o mesmo nome de chave ou vários elementos semânticos que poderia modificar repetidamente o <xref:System.Speech.Recognition.SemanticValue.Value%2A> propriedade de um <xref:System.Speech.Recognition.SemanticValue> objeto.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-300">When you append  <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances to a <xref:System.Speech.Recognition.GrammarBuilder> object, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="2f0c8-301">O reconhecedor de fala pode lançar uma exceção se encontrar nessas circunstâncias.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-301">The speech recognizer can throw an exception if it encounters these circumstances.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="2f0c8-302">O exemplo a seguir é parte de um aplicativo de console para a escolha de cidades de origem e destino para um voo.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-302">The following example is part of a console application for choosing origin and destination cities for a flight.</span></span> <span data-ttu-id="2f0c8-303">O aplicativo reconhece frases como "Eu quero Deslizar Miami para Chicago."</span><span class="sxs-lookup"><span data-stu-id="2f0c8-303">The application recognizes phrases such as "I want to fly from Miami to Chicago."</span></span> <span data-ttu-id="2f0c8-304">O manipulador para o <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized> evento usa o <xref:System.Speech.Recognition.SemanticResultKey> para extrair o código de aeroporto especificado no <xref:System.Speech.Recognition.SemanticResultValue> das cidades de origem e destino.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-304">The handler for the <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized> event uses the <xref:System.Speech.Recognition.SemanticResultKey> to extract the airport code specified in the <xref:System.Speech.Recognition.SemanticResultValue> for the origin and destination cities.</span></span>  
  
```csharp  
using System;  
using System.Speech.Recognition;  
  
namespace SampleRecognition  
{  
  class Program  
  {  
    static void Main(string[] args)  
  
    // Initialize an in-process speech recognition engine.  
    {  
      using (SpeechRecognitionEngine recognizer =  
         new SpeechRecognitionEngine())  
      {  
  
        // Create a Choices object and add  cities and airport codes  
        // using SemanticResultValue objects.  
        Choices cities = new Choices();  
        cities.Add(new SemanticResultValue("Chicago", "ORD"));  
        cities.Add(new SemanticResultValue("Boston", "BOS"));  
        cities.Add(new SemanticResultValue("Miami", "MIA"));  
        cities.Add(new SemanticResultValue("Dallas", "DFW"));  
  
        // Build the phrase and add SemanticResultKeys.  
        GrammarBuilder chooseCities = new GrammarBuilder();  
        chooseCities.Append("I want to fly from");  
        chooseCities.Append(new SemanticResultKey("origin", cities));  
        chooseCities.Append("to");  
        chooseCities.Append(new SemanticResultKey("destination", cities));  
  
        // Build a Grammar object from the GrammarBuilder.  
        Grammar bookFlight = new Grammar(chooseCities);  
        bookFlight.Name = "Book Flight";  
  
        // Add a handler for the LoadGrammarCompleted event.  
        recognizer.LoadGrammarCompleted +=   
          new EventHandler<LoadGrammarCompletedEventArgs>(recognizer_LoadGrammarCompleted);  
  
        // Add a handler for the SpeechRecognized event.  
        recognizer.SpeechRecognized +=   
          new EventHandler<SpeechRecognizedEventArgs>(recognizer_SpeechRecognized);  
  
        // Configure the input to the recognizer.  
        recognizer.SetInputToDefaultAudioDevice();  
  
        // Load the grammar object and start recognition.  
        recognizer.LoadGrammarAsync(bookFlight);  
        recognizer.RecognizeAsync();  
  
        // Keep the console window open.  
        Console.ReadLine();  
      }  
    }  
  
    // Handle the LoadGrammarCompleted event.  
    static void recognizer_LoadGrammarCompleted(object sender, LoadGrammarCompletedEventArgs e)  
    {  
      Console.WriteLine("Grammar loaded: " + e.Grammar.Name);  
      Console.WriteLine();  
    }  
  
    // Handle the SpeechRecognized event.  
    static void recognizer_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  
    {  
      Console.WriteLine("Speech recognized:  " + e.Result.Text);  
      Console.WriteLine();  
      Console.WriteLine("Semantic results:");  
      Console.WriteLine("  The flight origin is " + e.Result.Semantics["origin"].Value);  
      Console.WriteLine("  The flight destination is " + e.Result.Semantics["destination"].Value);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Speech.Recognition.SemanticResultValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(class System.Speech.Recognition.SemanticResultValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.SemanticResultValue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (value As SemanticResultValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Speech::Recognition::SemanticResultValue ^ value);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Speech.Recognition.SemanticResultValue -&gt; unit" Usage="grammarBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Speech.Recognition.SemanticResultValue" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2f0c8-305">O valor semântico a acrescentar.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-305">The semantic value to append.</span></span></param>
        <summary><span data-ttu-id="2f0c8-306">Acrescenta um valor semântico à sequência de elementos de gramática atual.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-306">Appends a semantic value to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0c8-307">`value` é adicionado ao final da sequência de elementos da atual.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-307">`value` is added to the end of the current sequence of elements.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2f0c8-308">Quando você acrescentar <xref:System.Speech.Recognition.SemanticResultValue> ou <xref:System.Speech.Recognition.SemanticResultKey> instâncias para um <xref:System.Speech.Recognition.GrammarBuilder> , verifique se você evitar criar elementos semânticos duplicados com o mesmo nome de chave ou vários elementos semânticos que poderia modificar repetidamente o <xref:System.Speech.Recognition.SemanticValue.Value%2A> propriedade de um <xref:System.Speech.Recognition.SemanticValue> objeto.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-308">When you append  <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances to a <xref:System.Speech.Recognition.GrammarBuilder> object, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="2f0c8-309">O reconhecedor de fala pode lançar uma exceção se encontrar nessas circunstâncias.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-309">The speech recognizer can throw an exception if it encounters these circumstances.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="2f0c8-310">O exemplo a seguir é parte de um aplicativo de console para a escolha de cidades de origem e destino para um voo.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-310">The following example is part of a console application for choosing origin and destination cities for a flight.</span></span> <span data-ttu-id="2f0c8-311">O aplicativo reconhece frases como "Eu quero Deslizar Miami para Chicago."</span><span class="sxs-lookup"><span data-stu-id="2f0c8-311">The application recognizes phrases such as "I want to fly from Miami to Chicago."</span></span> <span data-ttu-id="2f0c8-312">O manipulador para o <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized> evento usa o <xref:System.Speech.Recognition.SemanticResultKey> para extrair o código de aeroporto especificado no <xref:System.Speech.Recognition.SemanticResultValue> das cidades de origem e destino.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-312">The handler for the <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized> event uses the <xref:System.Speech.Recognition.SemanticResultKey> to extract the airport code specified in the <xref:System.Speech.Recognition.SemanticResultValue> for the origin and destination cities.</span></span>  
  
```csharp  
  
using System;  
using System.Speech.Recognition;  
  
namespace SampleRecognition  
{  
  class Program  
  {  
    static void Main(string[] args)  
  
    // Initialize an in-process speech recognition engine.  
    {  
      using (SpeechRecognitionEngine recognizer =  
         new SpeechRecognitionEngine())  
      {  
  
        // Create GrammarBuilder objects and append SemanticResultValue objects   
        // that contain cities and airport codes.  
  
        GrammarBuilder chicago = new GrammarBuilder();  
        chicago.Append(new SemanticResultValue("Chicago", "ORD"));  
  
        GrammarBuilder boston = new GrammarBuilder();  
        boston.Append(new SemanticResultValue("Boston", "BOS"));  
  
        GrammarBuilder miami = new GrammarBuilder();  
        miami.Append(new SemanticResultValue("Miami", "MIA"));  
  
        GrammarBuilder dallas = new GrammarBuilder();  
        dallas.Append(new SemanticResultValue("Dallas", "DFW"));  
  
        // Create a Choices object and add the cities using implicit conversion from   
        // SemanticResultValue to GrammarBuilder.  
        Choices cities = new Choices();  
        cities.Add(new Choices(new GrammarBuilder[] { chicago, boston, miami, dallas }));  
  
        // Build the phrase and add SemanticResultKeys.  
        GrammarBuilder chooseCities = new GrammarBuilder();  
        chooseCities.Append("I want to fly from");  
        chooseCities.Append(new SemanticResultKey("origin", cities));  
        chooseCities.Append("to");  
        chooseCities.Append(new SemanticResultKey("destination", cities));  
  
        // Build a Grammar object from the GrammarBuilder.  
        Grammar bookFlight = new Grammar(chooseCities);  
        bookFlight.Name = "Book Flight";  
  
        // Add a handler for the LoadGrammarCompleted event.  
        recognizer.LoadGrammarCompleted +=   
          new EventHandler<LoadGrammarCompletedEventArgs>(recognizer_LoadGrammarCompleted);  
  
        // Add a handler for the SpeechRecognized event.  
        recognizer.SpeechRecognized +=   
          new EventHandler<SpeechRecognizedEventArgs>(recognizer_SpeechRecognized);  
  
        // Configure the input to the recognizer.  
        recognizer.SetInputToDefaultAudioDevice();  
  
        // Load the grammar object and start recognition.  
        recognizer.LoadGrammarAsync(bookFlight);  
        recognizer.RecognizeAsync();  
  
        // Keep the console window open.  
        Console.ReadLine();  
      }  
    }  
    // Handle the LoadGrammarCompleted event.  
    static void recognizer_LoadGrammarCompleted(object sender, LoadGrammarCompletedEventArgs e)  
    {  
      Console.WriteLine("Grammar loaded: " + e.Grammar.Name);  
      Console.WriteLine();  
    }  
  
    // Handle the SpeechRecognized event.  
    static void recognizer_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  
    {  
      Console.WriteLine("Speech recognized:  " + e.Result.Text);  
      Console.WriteLine();  
      Console.WriteLine("Semantic results:");  
      Console.WriteLine("  The flight origin is " + e.Result.Semantics["origin"].Value);  
      Console.WriteLine("  The flight destination is " + e.Result.Semantics["destination"].Value);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (string phrase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(string phrase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (phrase As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::String ^ phrase);" />
      <MemberSignature Language="F#" Value="member this.Append : string -&gt; unit" Usage="grammarBuilder.Append phrase" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="phrase"><span data-ttu-id="2f0c8-313">A sequência de palavras a ser acrescentada.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-313">The sequence of words to append.</span></span></param>
        <summary><span data-ttu-id="2f0c8-314">Acrescenta uma frase à sequência de elementos de gramática atual.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-314">Appends a phrase to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0c8-315">`phrase` é adicionado ao final da sequência de elementos da atual.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-315">`phrase` is added to the end of the current sequence of elements.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (string phrase, System.Speech.Recognition.SubsetMatchingMode subsetMatchingCriteria);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(string phrase, valuetype System.Speech.Recognition.SubsetMatchingMode subsetMatchingCriteria) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.String,System.Speech.Recognition.SubsetMatchingMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (phrase As String, subsetMatchingCriteria As SubsetMatchingMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::String ^ phrase, System::Speech::Recognition::SubsetMatchingMode subsetMatchingCriteria);" />
      <MemberSignature Language="F#" Value="member this.Append : string * System.Speech.Recognition.SubsetMatchingMode -&gt; unit" Usage="grammarBuilder.Append (phrase, subsetMatchingCriteria)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="subsetMatchingCriteria" Type="System.Speech.Recognition.SubsetMatchingMode" />
      </Parameters>
      <Docs>
        <param name="phrase"><span data-ttu-id="2f0c8-316">A sequência de palavras a ser acrescentada.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-316">The sequence of words to append.</span></span></param>
        <param name="subsetMatchingCriteria"><span data-ttu-id="2f0c8-317">O modo correspondente que a gramática usa para reconhecer a frase.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-317">The matching mode the grammar uses to recognize the phrase.</span></span></param>
        <summary><span data-ttu-id="2f0c8-318">Acrescenta um elemento para um subconjunto de uma frase à sequência de elementos de gramática atual.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-318">Appends an element for a subset of a phrase to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0c8-319">O elemento do subconjunto é adicionado ao final da sequência de elementos da atual.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-319">The subset element is added to the end of the current sequence of elements.</span></span> <span data-ttu-id="2f0c8-320">Para obter mais informações sobre a criação de uma gramática de reconhecimento de fala usando cadeias de caracteres, consulte [usando cadeias de caracteres para criar uma gramática de GrammarBuilder](https://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span><span class="sxs-lookup"><span data-stu-id="2f0c8-320">For more information about building a speech recognition grammar using strings, see [Using Strings to Create a GrammarBuilder Grammar](https://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span></span>  
  
 <span data-ttu-id="2f0c8-321">Para obter informações detalhadas sobre o uso de modos de correspondência de subconjunto, consulte <xref:System.Speech.Recognition.SubsetMatchingMode?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-321">For detailed information on the use of subset matching modes, see <xref:System.Speech.Recognition.SubsetMatchingMode?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0c8-322">O exemplo a seguir cria uma gramática de reconhecimento de fala para cada <xref:System.Speech.Recognition.SubsetMatchingMode> valor.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-322">The following example creates a speech recognition grammar for each <xref:System.Speech.Recognition.SubsetMatchingMode> value.</span></span> <span data-ttu-id="2f0c8-323">Por exemplo, a gramática gerada `OrderedSubset` reconhece as frases "três quatro cinco" e "um três cinco" e a gramática `Subsequence` reconhece a frase "três quatro cinco", mas não a frase "uma três cinco".</span><span class="sxs-lookup"><span data-stu-id="2f0c8-323">For example, the generated grammar `OrderedSubset` recognizes the phrases, "three four five" and "one three five", and the grammar `Subsequence` recognizes the phrase "three four five", but not the phrase, "one three five".</span></span>  
  
```csharp  
  
private Grammar[] CreateSubsetMatchTest()  
{  
  List<Grammar> grammars = new List<Grammar>(4);  
  
  string phrase = "one two three four five six";  
  foreach (SubsetMatchingMode mode in  
    Enum.GetValues(typeof(SubsetMatchingMode)))  
  {  
    GrammarBuilder gb = new GrammarBuilder();  
    gb.Append(phrase, mode);  
  
    Grammar grammar = new Grammar(gb);  
    grammar.Name = mode.ToString();  
    grammars.Add(grammar);  
  }  
  
  return grammars.ToArray();  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Speech.Recognition.GrammarBuilder builder, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(class System.Speech.Recognition.GrammarBuilder builder, int32 minRepeat, int32 maxRepeat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.GrammarBuilder,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (builder As GrammarBuilder, minRepeat As Integer, maxRepeat As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Speech::Recognition::GrammarBuilder ^ builder, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Speech.Recognition.GrammarBuilder * int * int -&gt; unit" Usage="grammarBuilder.Append (builder, minRepeat, maxRepeat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="minRepeat" Type="System.Int32" />
        <Parameter Name="maxRepeat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="2f0c8-324">O elemento de gramática repetido a acrescentar.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-324">The repeated grammar element to append.</span></span></param>
        <param name="minRepeat"><span data-ttu-id="2f0c8-325">O número mínimo de vezes que a entrada correspondente ao elemento definido por <paramref name="builder" /> deve ocorrer para constituir uma correspondência.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-325">The minimum number of times that input matching the element defined by <paramref name="builder" /> must occur to constitute a match.</span></span></param>
        <param name="maxRepeat"><span data-ttu-id="2f0c8-326">O número máximo de vezes que a entrada correspondente ao elemento definido por <paramref name="builder" /> pode ocorrer para constituir uma correspondência.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-326">The maximum number of times that input matching the element defined by <paramref name="builder" /> can occur to constitute a match.</span></span></param>
        <summary><span data-ttu-id="2f0c8-327">Acrescenta um elemento de gramática repetido à sequência de elementos de gramática atual.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-327">Appends a repeated grammar element to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0c8-328">O valor de `minRepeat` deve ser maior que ou igual a 0 e menor ou igual ao valor de `maxRepeat`.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-328">The value of `minRepeat` must be greater than or equal to 0 and less than or equal to the value of `maxRepeat`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2f0c8-329">Quando você acrescentar <xref:System.Speech.Recognition.GrammarBuilder> objetos que contêm <xref:System.Speech.Recognition.SemanticResultValue> ou <xref:System.Speech.Recognition.SemanticResultKey> instâncias para um <xref:System.Speech.Recognition.GrammarBuilder> , verifique se você evitar criar elementos semânticos duplicados com o mesmo nome de chave ou vários elementos semânticos que poderia repetidamente modificar a <xref:System.Speech.Recognition.SemanticValue.Value%2A> propriedade de um <xref:System.Speech.Recognition.SemanticValue> objeto.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-329">When you append <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances to a <xref:System.Speech.Recognition.GrammarBuilder> object, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="2f0c8-330">O reconhecedor de fala pode lançar uma exceção se encontrar nessas circunstâncias.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-330">The speech recognizer can throw an exception if it encounters these circumstances.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="2f0c8-331">O exemplo a seguir cria uma gramática de reconhecimento de fala para frases como "Chamada James no trabalho" e "Anne de chamada no celular", onde a palavra "telefone" é opcional.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-331">The following example creates a speech recognition grammar for phrases such as "Call James at work" and "Call Anne on her cell phone", where the word "phone" is optional.</span></span> <span data-ttu-id="2f0c8-332"><xref:System.Speech.Recognition.GrammarBuilder> e <xref:System.Speech.Recognition.Choices> objetos são usados para construir a gramática.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-332"><xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects are used to construct the grammar.</span></span> <span data-ttu-id="2f0c8-333">O exemplo destaca o uso do <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> método.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-333">The example highlights the use of the <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> method.</span></span>  
  
```csharp  
  
public static Grammar CreatePhonePhrase()  
{  
  // Create alternatives for person names, locations, devices, and pronouns.  
  Choices personChoice = new Choices(new string[] {"Anne", "James", "Mary", "Sam"});  
  Choices locationChoice = new Choices(new string[] {"home", "work"});  
  Choices deviceChoice = new Choices(new string[] {"home", "work", "cell"});  
  Choices pronounChoice = new Choices(new string[] {"his", "her"});  
  
  // Create a phrase for the receiving device, which optionally contains the word "phone".  
  GrammarBuilder devicePhrase = new GrammarBuilder(pronounChoice);  
  devicePhrase.Append(deviceChoice);  
  devicePhrase.Append("phone", 0, 1);  
  
  // Create alternatives for phrases specifying a device or a location.  
  GrammarBuilder atLocation = new GrammarBuilder("at");  
  atLocation.Append(locationChoice);  
  
  GrammarBuilder onDevice = new GrammarBuilder("on");  
  onDevice.Append(devicePhrase);  
  
  Choices howChoice = new Choices(new GrammarBuilder[] {atLocation, onDevice});  
  
  // Build the final phrase.  
  GrammarBuilder callWho = new GrammarBuilder("Call");  
  callWho.Append(personChoice);  
  callWho.Append(howChoice);  
  
  // Create the Grammar object.  
  Grammar callGrammar = new Grammar(callWho);  
  callGrammar.Name = "Call Grammar";  
  
  return callGrammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (string phrase, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(string phrase, int32 minRepeat, int32 maxRepeat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (phrase As String, minRepeat As Integer, maxRepeat As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::String ^ phrase, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="F#" Value="member this.Append : string * int * int -&gt; unit" Usage="grammarBuilder.Append (phrase, minRepeat, maxRepeat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="minRepeat" Type="System.Int32" />
        <Parameter Name="maxRepeat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="phrase"><span data-ttu-id="2f0c8-334">A sequência de palavras repetida a acrescentar.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-334">The repeated sequence of words to append.</span></span></param>
        <param name="minRepeat"><span data-ttu-id="2f0c8-335">O número mínimo de vezes que a entrada correspondente a <paramref name="phrase" /> deve ocorrer para constituir uma correspondência.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-335">The minimum number of times that input matching <paramref name="phrase" /> must occur to constitute a match.</span></span></param>
        <param name="maxRepeat"><span data-ttu-id="2f0c8-336">O número máximo de vezes que a entrada correspondente a <paramref name="phrase" /> pode ocorrer para constituir uma correspondência.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-336">The maximum number of times that input matching <paramref name="phrase" /> can occur to constitute a match.</span></span></param>
        <summary><span data-ttu-id="2f0c8-337">Acrescenta uma frase repetida à sequência de elementos de gramática atual.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-337">Appends a repeated phrase to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0c8-338">O valor de `minRepeat` deve ser maior que ou igual a 0 e menor ou igual ao valor de `maxRepeat`.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-338">The value of `minRepeat` must be greater than or equal to 0 and less than or equal to the value of `maxRepeat`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0c8-339">O exemplo a seguir cria uma gramática de reconhecimento de fala para frases como "Chamada James no trabalho" e "Anne de chamada no celular", onde a palavra "telefone" é opcional.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-339">The following example creates a speech recognition grammar for phrases such as "Call James at work" and "Call Anne on her cell phone", where the word "phone" is optional.</span></span> <span data-ttu-id="2f0c8-340"><xref:System.Speech.Recognition.GrammarBuilder> e <xref:System.Speech.Recognition.Choices> objetos são usados para construir a gramática.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-340"><xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects are used to construct the grammar.</span></span> <span data-ttu-id="2f0c8-341">O exemplo destaca o uso do <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> método.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-341">The example highlights the use of the <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> method.</span></span>  
  
```csharp  
  
public static Grammar CreatePhonePhrase()  
{  
  // Create alternatives for person names, locations, devices, and pronouns.  
  Choices personChoice = new Choices(new string[] {"Anne", "James", "Mary", "Sam"});  
  Choices locationChoice = new Choices(new string[] {"home", "work"});  
  Choices deviceChoice = new Choices(new string[] {"home", "work", "cell"});  
  Choices pronounChoice = new Choices(new string[] {"his", "her"});  
  
  // Create a phrase for the receiving device, which optionally contains the word "phone".  
  GrammarBuilder devicePhrase = new GrammarBuilder(pronounChoice);  
  devicePhrase.Append(deviceChoice);  
  devicePhrase.Append("phone", 0, 1);  
  
  // Create alternatives for phrases specifying a device or a location.  
  GrammarBuilder atLocation = new GrammarBuilder("at");  
  atLocation.Append(locationChoice);  
  
  GrammarBuilder onDevice = new GrammarBuilder("on");  
  onDevice.Append(devicePhrase);  
  
  Choices howChoice = new Choices(new GrammarBuilder[] {atLocation, onDevice});  
  
  // Build the final phrase.  
  GrammarBuilder callWho = new GrammarBuilder("Call");  
  callWho.Append(personChoice);  
  callWho.Append(howChoice);  
  
  // Create the Grammar object.  
  Grammar callGrammar = new Grammar(callWho);  
  callGrammar.Name = "Call Grammar";  
  
  return callGrammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendDictation">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2f0c8-342">Acrescenta uma gramática de ditado à sequência de elementos de gramática atual.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-342">Appends a dictation grammar to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0c8-343">O <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A> métodos permitem que você acrescente uma gramática de ditado como uma regra para um <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-343">The <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A> methods allow you to append a dictation grammar as a rule to a <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="2f0c8-344">Para obter mais informações sobre as gramáticas de ditado, consulte <xref:System.Speech.Recognition.DictationGrammar>.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-344">For more information on dictation grammars, see <xref:System.Speech.Recognition.DictationGrammar>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendDictation">
      <MemberSignature Language="C#" Value="public void AppendDictation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendDictation() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendDictation ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendDictation();" />
      <MemberSignature Language="F#" Value="member this.AppendDictation : unit -&gt; unit" Usage="grammarBuilder.AppendDictation " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f0c8-345">Anexa a gramática de ditado padrão na sequência atual de elementos de gramática.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-345">Appends the default dictation grammar to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0c8-346">Para obter mais informações sobre as gramáticas de ditado, consulte <xref:System.Speech.Recognition.DictationGrammar>.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-346">For more information on dictation grammars, see <xref:System.Speech.Recognition.DictationGrammar>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0c8-347">O exemplo a seguir cria uma gramática de reconhecimento de fala que incorpora o ditado.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-347">The following example creates a speech recognition grammar that incorporates dictation.</span></span>  
  
```csharp  
  
GrammarBuilder builder = new GrammarBuilder();  
builder.Append("begin");  
builder.AppendDictation();  
builder.Append("end");  
Grammar grammarWithDictation = new Grammar(builder);  
grammarWithDictation.Name = "Grammar with Dictation";  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.DictationGrammar" />
      </Docs>
    </Member>
    <Member MemberName="AppendDictation">
      <MemberSignature Language="C#" Value="public void AppendDictation (string category);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendDictation(string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.AppendDictation(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendDictation (category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendDictation(System::String ^ category);" />
      <MemberSignature Language="F#" Value="member this.AppendDictation : string -&gt; unit" Usage="grammarBuilder.AppendDictation category" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="category"><span data-ttu-id="2f0c8-348">A categoria da gramática de ditado a ser acrescentada.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-348">The category of the dictation grammar to append.</span></span></param>
        <summary><span data-ttu-id="2f0c8-349">Acrescenta a gramática de ditado especificada à sequência de elementos de gramática atual.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-349">Appends the specified dictation grammar to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0c8-350">Para usar a gramática de ditado de ortografia, defina `category` para `spelling`.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-350">To use the spelling dictation grammar, set `category` to `spelling`.</span></span>  
  
 <span data-ttu-id="2f0c8-351">Para obter mais informações sobre as gramáticas de ditado, consulte <xref:System.Speech.Recognition.DictationGrammar>.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-351">For more information on dictation grammars, see <xref:System.Speech.Recognition.DictationGrammar>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0c8-352">O exemplo a seguir cria uma gramática de reconhecimento de fala que incorpora as regras de gramática de ditado de ortografia.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-352">The following example creates a speech recognition grammar that incorporates the spelling dictation grammar rules.</span></span>  
  
```csharp  
  
GrammarBuilder builder = new GrammarBuilder();  
builder.Append("begin");  
builder.AppendDictation("spelling");  
builder.Append("end");  
Grammar grammarWithDictation = new Grammar(builder);  
grammarWithDictation.Name = "Grammar with Dictation";  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.DictationGrammar" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendRuleReference">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2f0c8-353">Acrescenta um arquivo de gramática ou uma regra de gramática à sequência de elementos de gramática atual.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-353">Appends a grammar file or a grammar rule to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0c8-354">O <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> métodos podem anexar um arquivo de gramática ou uma regra de gramática de um arquivo.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-354">The <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> methods can append a grammar file or a grammar rule from a file.</span></span> <span data-ttu-id="2f0c8-355">Esses métodos permitem que os aplicativos que usam regras gramaticais previamente implantado ou ficará publicamente disponível.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-355">These methods allow applications to make use of pre-deployed or publicly available grammar rules.</span></span> <span data-ttu-id="2f0c8-356">O aplicativo deve ter acesso de leitura para o local dos arquivos de gramática especificada.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-356">The application must have read access to the location of specified grammar files.</span></span>  
  
 <span data-ttu-id="2f0c8-357">Esses métodos podem ler uma gramática de reconhecimento de fala de formatos a seguir.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-357">These methods can read a speech recognition grammar from the following formats.</span></span>  
  
-   <span data-ttu-id="2f0c8-358">Arquivos de formato XML que estão em conformidade com o W3C [especificação de gramática de reconhecimento de fala (SRGS) versão 1.0](https://go.microsoft.com/fwlink/?LinkId=201761)</span><span class="sxs-lookup"><span data-stu-id="2f0c8-358">XML-format files that conform to the W3C [Speech Recognition Grammar Specification (SRGS) Version 1.0](https://go.microsoft.com/fwlink/?LinkId=201761)</span></span>  
  
-   <span data-ttu-id="2f0c8-359">Arquivos binários que estão em conformidade com o Microsoft Speech reconhecimento de gramática de formato binário (extensão de arquivo. cfg)</span><span class="sxs-lookup"><span data-stu-id="2f0c8-359">Binary files that conform to the Microsoft Speech Recognition Grammar Binary Format (.cfg file extension)</span></span>  
  
 <span data-ttu-id="2f0c8-360">Compilando um formato XML SRGS o arquivo de gramática em um arquivo de gramática binária com a extensão. cfg pode reduzir o tempo consumido por procura uma correspondência, especialmente se exige que a gramática de reconhecimento de um grande número de palavras e frases.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-360">Compiling an XML-format SRGS grammar file to a binary grammar file with the .cfg extension can reduce the time consumed by searches for a match, especially if the grammar requires recognition of a large number of words and phrases.</span></span> <span data-ttu-id="2f0c8-361">Para obter informações sobre compilação gramáticas SRGS para o formato binário do CFG, consulte <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler>.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-361">For information about compiling SRGS grammars to the CFG binary format, see <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendRuleReference">
      <MemberSignature Language="C#" Value="public void AppendRuleReference (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendRuleReference(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendRuleReference (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendRuleReference(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.AppendRuleReference : string -&gt; unit" Usage="grammarBuilder.AppendRuleReference path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="2f0c8-362">O caminho ou URI (Universal Resource Identifier) do arquivo que descreve uma gramática de reconhecimento de fala em um formato com suporte.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-362">The path or Universal Resource Identifier (URI) of the file that describes a speech recognition grammar in a supported format.</span></span></param>
        <summary><span data-ttu-id="2f0c8-363">Acrescenta um arquivo de definição de gramática à sequência de elementos da gramática atual.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-363">Appends a grammar definition file to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0c8-364">O URI fornecido pelo `path` argumento pode ser local ou remoto.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-364">The URI provided by the `path` argument may be local or remote.</span></span> <span data-ttu-id="2f0c8-365">O aplicativo deve ter acesso de leitura para o local dos arquivos de gramática especificada.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-365">The application must have read access to the location of specified grammar files.</span></span>  
  
 <span data-ttu-id="2f0c8-366">Uma representação W3C especificação de gramática de reconhecimento fala (SRGS) pode definir uma regra raiz.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-366">A W3C Speech Recognition Grammar Specification (SRGS) representation can define a root rule.</span></span> <span data-ttu-id="2f0c8-367">Esse método acrescenta a gramática, começando com sua regra de raiz, à sequência de elementos de gramática atual.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-367">This method appends the grammar, beginning with its root rule, to the current sequence of grammar elements.</span></span> <span data-ttu-id="2f0c8-368">Para acrescentar uma regra de gramática específica, use o <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> método.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-368">To append a specific grammar rule, use the <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0c8-369">O exemplo c# a seguir cria uma gramática de reconhecimento de fala que usa a regra denominada `Cities` em um arquivo SRGS local, cities.grxml.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-369">The following C# example creates a speech recognition grammar that uses the rule named `Cities` in a local SRGS file, cities.grxml.</span></span> <span data-ttu-id="2f0c8-370">O conteúdo do arquivo cities.grxml aparece abaixo o exemplo de código c#.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-370">The content of the cities.grxml file appears below the C# code example.</span></span>  
  
```csharp  
  
private static Grammar CreateCitiesGrammar1()  
{  
  GrammarBuilder builder = new GrammarBuilder();  
  builder.AppendRuleReference("file://c:/temp/cities.grxml");  
  
  Grammar citiesGrammar = new Grammar(builder);  
  citiesGrammar.Name = "Cities Grammar 1";  
  return citiesGrammar;  
}  
```  
  
```xml  
  
<?xml version="1.0" encoding="UTF-16" ?>  
<grammar version="1.0" xml:lang="en-US"  
         xmlns="http://www.w3.org/2001/06/grammar"  
         tag-format="semantics/1.0" root="Main">  
  
  <!-- cities.grxml:   
    Defines an SRGS grammar for requesting a flight. This grammar includes  
    a Cities rule that lists the cities that can be used for departures  
    and destinations. -->  
  
  <rule id="Main">  
    <item>  
      I would like to fly from <ruleref uri="#Cities"/>  
      to <ruleref uri="#Cities"/>  
    </item>  
  </rule>  
  
  <rule id="Cities" scope="public">  
    <one-of>  
      <item> Seattle </item>  
      <item> Los Angeles </item>  
      <item> New York </item>  
      <item> Miami </item>  
    </one-of>  
  </rule>  
</grammar>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
      </Docs>
    </Member>
    <Member MemberName="AppendRuleReference">
      <MemberSignature Language="C#" Value="public void AppendRuleReference (string path, string rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendRuleReference(string path, string rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendRuleReference (path As String, rule As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendRuleReference(System::String ^ path, System::String ^ rule);" />
      <MemberSignature Language="F#" Value="member this.AppendRuleReference : string * string -&gt; unit" Usage="grammarBuilder.AppendRuleReference (path, rule)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="rule" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="2f0c8-371">O caminho do arquivo ou URI (Universal Resource Identifier) do arquivo que descreve uma gramática de reconhecimento de fala em um formato compatível.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-371">The file path or Universal Resource Identifier (URI) of the file that describes a speech recognition grammar in a supported format.</span></span></param>
        <param name="rule"><span data-ttu-id="2f0c8-372">O identificador da regra a ser acrescentada, ou então <see langword="null" /> para acrescentar a regra raiz padrão do arquivo de gramática.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-372">The identifier of the rule to append, or <see langword="null" /> to append the default root rule of the grammar file.</span></span></param>
        <summary><span data-ttu-id="2f0c8-373">Acrescenta a regra especificada de um arquivo de definição de gramática à sequência de elementos da gramática atual.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-373">Appends the specified rule of a grammar definition file to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0c8-374">O URI fornecido pelo `path` argumento pode ser local ou remoto.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-374">The URI provided by the `path` argument may be local or remote.</span></span> <span data-ttu-id="2f0c8-375">O aplicativo deve ter acesso de leitura para o local dos arquivos de gramática especificada.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-375">The application must have read access to the location of specified grammar files.</span></span>  
  
 <span data-ttu-id="2f0c8-376">Você pode usar o uso de <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> método para acrescentar um início do arquivo de gramática com sua regra raiz.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-376">You can use the use the <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> method to append a grammar file beginning with its root rule.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0c8-377">O exemplo c# a seguir cria uma gramática de reconhecimento de fala que usa a regra denominada `Cities` em um arquivo SRGS local, cities.grxml.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-377">The following C# example creates a speech recognition grammar that uses the rule named `Cities` in a local SRGS file, cities.grxml.</span></span> <span data-ttu-id="2f0c8-378">O conteúdo do arquivo cities.grxml aparece abaixo o exemplo de código c#.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-378">The content of the cities.grxml file appears below the C# code example.</span></span>  
  
```csharp  
  
private static Grammar CreateCitiesGrammar2()  
{  
  GrammarBuilder builder = new GrammarBuilder();  
  builder.Append("Does");  
  builder.AppendRuleReference(@"c:\temp\cities.grxml", "Cities");  
  builder.Append("have a shuttle");  
  
  Grammar citiesGrammar = new Grammar(builder);  
  citiesGrammar.Name = "Cities Grammar 2";  
  return citiesGrammar;  
}  
```  
  
```xml  
  
<?xml version="1.0" encoding="UTF-8" ?>  
<grammar version="1.0" xml:lang="en-US"  
         xmlns="http://www.w3.org/2001/06/grammar"  
         tag-format="semantics/1.0" root="Main">  
  
  <!-- cities.grxml:   
    Defines an SRGS grammar for requesting a flight. This grammar includes  
    a Cities rule that lists the cities that can be used for departures  
    and destinations. -->  
  
  <rule id="Main">  
    <item>  
      I would like to fly from <ruleref uri="#Cities"/>  
      to <ruleref uri="#Cities"/>  
    </item>  
  </rule>  
  
  <rule id="Cities" scope="public">  
    <one-of>  
      <item> Seattle </item>  
      <item> Los Angeles </item>  
      <item> New York </item>  
      <item> Miami </item>  
    </one-of>  
  </rule>  
</grammar>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
      </Docs>
    </Member>
    <Member MemberName="AppendWildcard">
      <MemberSignature Language="C#" Value="public void AppendWildcard ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendWildcard() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendWildcard ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendWildcard();" />
      <MemberSignature Language="F#" Value="member this.AppendWildcard : unit -&gt; unit" Usage="grammarBuilder.AppendWildcard " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f0c8-379">Acrescenta um elemento da gramática de reconhecimento que corresponde a uma entrada para a sequência atual de elementos da gramática.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-379">Appends a recognition grammar element that matches any input to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0c8-380">O elemento de curinga é adicionado ao final da sequência de elementos da atual.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-380">The wildcard element is added to the end of the current sequence of elements.</span></span>  
  
 <span data-ttu-id="2f0c8-381">Elemento curinga corresponde a todas as palavras faladas.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-381">The wildcard element matches any spoken word.</span></span> <span data-ttu-id="2f0c8-382">Ele não coincide com ruídos de fundo ou silêncio.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-382">It does not match background noise or silence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0c8-383">O exemplo a seguir cria uma gramática que aceita a entrada de senha como um caractere curinga.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-383">The following example creates a grammar that accepts password input as a wildcard.</span></span> <span data-ttu-id="2f0c8-384">O exemplo anexa um <xref:System.Speech.Recognition.Grammar.SpeechRecognized?displayProperty=nameWithType> manipulador de eventos para a gramática que valida a entrada de senha.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-384">The example attaches a <xref:System.Speech.Recognition.Grammar.SpeechRecognized?displayProperty=nameWithType> event handler to the grammar that validates the password input.</span></span>  
  
```csharp  
private Grammar CreatePasswordGrammar()  
{  
  GrammarBuilder wildcardBuilder = new GrammarBuilder();  
  wildcardBuilder.AppendWildcard();  
  SemanticResultKey passwordKey =  
    new SemanticResultKey("Password", wildcardBuilder);  
  
  GrammarBuilder passwordBuilder =  
    new GrammarBuilder("My Password is");  
  passwordBuilder.Append(passwordKey);  
  
  Grammar passwordGrammar = new Grammar(passwordBuilder);  
  passwordGrammar.Name = "Password input";  
  
  passwordGrammar.SpeechRecognized +=  
    new EventHandler<SpeechRecognizedEventArgs>(  
      PasswordInputHandler);  
  
  return passwordGrammar;  
}  
  
// Handle the SpeechRecognized event for the password grammar.  
private void PasswordInputHandler(object sender, SpeechRecognizedEventArgs e)  
{  
  if (e.Result == null) return;  
  
  RecognitionResult result = e.Result;  
  SemanticValue semantics = e.Result.Semantics;  
  
  if (semantics.ContainsKey("Password"))  
  {  
    RecognizedAudio passwordAudio =  
      result.GetAudioForWordRange(  
        result.Words[3], result.Words[result.Words.Count - 1]);  
  
    if (IsValidPassword(passwordAudio))  
    {  
      Console.WriteLine("Password accepted.");  
  
      // Add code to handle a valid password here.  
    }  
    else  
    {  
      Console.WriteLine("Invalid password.");  
  
      // Add code to handle an invalid password here.  
    }  
  }  
}  
  
// Validate the password input.   
private bool IsValidPassword(RecognizedAudio passwordAudio)  
{  
  Console.WriteLine("Validating password.");  
  
  // Add password validation code here.  
  
  return false;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Culture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Culture" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.GrammarBuilder.Culture" />
      <MemberSignature Language="VB.NET" Value="Public Property Culture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ Culture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Culture : System.Globalization.CultureInfo with get, set" Usage="System.Speech.Recognition.GrammarBuilder.Culture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f0c8-385">Obtém ou define a cultura da gramática de reconhecimento de fala.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-385">Gets or sets the culture of the speech recognition grammar.</span></span></summary>
        <value><span data-ttu-id="2f0c8-386">A cultura do <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-386">The culture of the <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span></span> <span data-ttu-id="2f0c8-387">O padrão é a propriedade <see cref="P:System.Threading.Thread.CurrentUICulture" /> do thread de execução.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-387">The default is the executing thread's <see cref="P:System.Threading.Thread.CurrentUICulture" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0c8-388">O <xref:System.Speech.Recognition.Grammar.%23ctor%2A> construtor cria um <xref:System.Speech.Recognition.Grammar> objeto que pode ser usado por um reconhecedor de fala da cultura correspondente.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-388">The <xref:System.Speech.Recognition.Grammar.%23ctor%2A> constructor creates a <xref:System.Speech.Recognition.Grammar> object that can be used by a speech recognizer of the corresponding culture.</span></span> <span data-ttu-id="2f0c8-389">Somente o <xref:System.Speech.Recognition.GrammarBuilder.Culture%2A> propriedade do <xref:System.Speech.Recognition.GrammarBuilder> que é fornecido como o parâmetro para o construtor de gramática é usado para definir a cultura da gramática de reconhecimento de fala resultante.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-389">Only the <xref:System.Speech.Recognition.GrammarBuilder.Culture%2A> property of the <xref:System.Speech.Recognition.GrammarBuilder> that is provided as the parameter to the Grammar constructor is used to set the culture of the resulting speech recognition grammar.</span></span>  
  
 <span data-ttu-id="2f0c8-390">Microsoft Windows e a API de System. Speech aceitam todos os códigos de idioma-país válidos.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-390">Microsoft Windows and the System.Speech API accept all valid language-country codes.</span></span> <span data-ttu-id="2f0c8-391">Para executar o reconhecimento de fala usando o idioma especificado no `Culture` propriedade, um mecanismo de reconhecimento de fala que dá suporte a que o código de idioma-país deve ser instalado.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-391">To perform speech recognition using the language specified in the `Culture` property, a speech recognition engine that supports that language-country code must be installed.</span></span> <span data-ttu-id="2f0c8-392">Os mecanismos de reconhecimento de fala que acompanha o Microsoft Windows 7 funcionam com os seguintes códigos de idioma-país.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-392">The speech recognition engines that shipped with Microsoft Windows 7 work with the following language-country codes.</span></span>  
  
-   <span data-ttu-id="2f0c8-393">en-GB.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-393">en-GB.</span></span> <span data-ttu-id="2f0c8-394">Inglês (Reino Unido)</span><span class="sxs-lookup"><span data-stu-id="2f0c8-394">English (United Kingdom)</span></span>  
  
-   <span data-ttu-id="2f0c8-395">en-US.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-395">en-US.</span></span> <span data-ttu-id="2f0c8-396">Inglês (Estados Unidos)</span><span class="sxs-lookup"><span data-stu-id="2f0c8-396">English (United States)</span></span>  
  
-   <span data-ttu-id="2f0c8-397">de-DE.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-397">de-DE.</span></span> <span data-ttu-id="2f0c8-398">Alemão (Alemanha)</span><span class="sxs-lookup"><span data-stu-id="2f0c8-398">German (Germany)</span></span>  
  
-   <span data-ttu-id="2f0c8-399">es-ES.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-399">es-ES.</span></span> <span data-ttu-id="2f0c8-400">Espanhol (Espanha)</span><span class="sxs-lookup"><span data-stu-id="2f0c8-400">Spanish (Spain)</span></span>  
  
-   <span data-ttu-id="2f0c8-401">fr-FR.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-401">fr-FR.</span></span> <span data-ttu-id="2f0c8-402">Francês (França)</span><span class="sxs-lookup"><span data-stu-id="2f0c8-402">French (France)</span></span>  
  
-   <span data-ttu-id="2f0c8-403">ja-JP.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-403">ja-JP.</span></span> <span data-ttu-id="2f0c8-404">Japonês (Japão)</span><span class="sxs-lookup"><span data-stu-id="2f0c8-404">Japanese (Japan)</span></span>  
  
-   <span data-ttu-id="2f0c8-405">zh-CN.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-405">zh-CN.</span></span> <span data-ttu-id="2f0c8-406">Chinês (China)</span><span class="sxs-lookup"><span data-stu-id="2f0c8-406">Chinese (China)</span></span>  
  
-   <span data-ttu-id="2f0c8-407">zh-TW.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-407">zh-TW.</span></span> <span data-ttu-id="2f0c8-408">Chinese (Taiwan)</span><span class="sxs-lookup"><span data-stu-id="2f0c8-408">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="2f0c8-409">Códigos de idioma de duas letras, como "en", "fr" ou "es" também são permitidas.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-409">Two-letter language codes such as "en", "fr", or "es" are also permitted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f0c8-410">O exemplo a seguir cria uma gramática de reconhecimento de fala para pedir uma pizza com até quatro ingredientes.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-410">The following example creates a speech recognition grammar for ordering a pizza with up to four toppings.</span></span> <span data-ttu-id="2f0c8-411">Especificamente, ele define o <xref:System.Speech.Recognition.GrammarBuilder> cultura do objeto para o inglês (Estados Unidos).</span><span class="sxs-lookup"><span data-stu-id="2f0c8-411">It specifically sets the <xref:System.Speech.Recognition.GrammarBuilder> object's culture to English (United States).</span></span>  
  
```csharp  
  
private static Grammar CreatePizzaGrammar()  
{  
  
  // Create a Choices object with alternatives for toppings.  
  Choices toppings = new Choices(new string[] {  
    "cheese", "mushroom", "tomato", "onion",  
    "anchovy", "chicken", "pepperoni"});  
  
  // Create a GrammarBuilder and append the Choices object.  
  GrammarBuilder andToppings = new GrammarBuilder("and", 0, 1);  
  andToppings.Append(toppings);  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder("I would like a", 0, 1);  
  gb.Append(toppings);  
  gb.Append(new GrammarBuilder(andToppings, 0, 3));  
  gb.Append("pizza");  
  
  // Create the Grammar from the GrammarBuilder.  
  Grammar grammar = new Grammar(gb);  
  grammar.Name = "Pizza Order";  
  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.RecognizerInfo" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
      </Docs>
    </Member>
    <Member MemberName="DebugShowPhrases">
      <MemberSignature Language="C#" Value="public string DebugShowPhrases { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DebugShowPhrases" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.GrammarBuilder.DebugShowPhrases" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DebugShowPhrases As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DebugShowPhrases { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DebugShowPhrases : string" Usage="System.Speech.Recognition.GrammarBuilder.DebugShowPhrases" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f0c8-412">Obtém uma cadeia de caracteres que mostra o conteúdo e a estrutura da gramática contida pelo <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-412">Gets a string that shows the contents and structure of the grammar contained by the <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span></span></summary>
        <value><span data-ttu-id="2f0c8-413">O conteúdo atual e a estrutura do <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-413">The current content and structure of the <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2f0c8-414">O exemplo a seguir cria uma gramática de reconhecimento de fala para pedir uma pizza com até quatro ingredientes.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-414">The following example creates a speech recognition grammar for ordering a pizza with up to four toppings.</span></span> <span data-ttu-id="2f0c8-415">Grava o status do <xref:System.Speech.Recognition.GrammarBuilder> para o console antes de criar a gramática.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-415">It writes the status of the <xref:System.Speech.Recognition.GrammarBuilder> to the console before creating the grammar.</span></span> <span data-ttu-id="2f0c8-416">Esse método gera a seguinte saída:</span><span class="sxs-lookup"><span data-stu-id="2f0c8-416">This method generates the following output:</span></span>  
  
-   `GrammarBuilder status: I would like a [cheese,mushroom,tomato,onion,anchovy,chic ken,pepperoni] and [cheese,mushroom,tomato,onion,anchovy,chicken,pepperoni] pizza`  
  
```csharp  
  
private static Grammar CreatePizzaGrammar()  
{  
  
  // Create a Choices object with alternatives for toppings.  
  Choices toppings = new Choices(new string[] {  
    "cheese", "mushroom", "tomato", "onion",  
    "anchovy", "chicken", "pepperoni"});  
  
  // Create a GrammarBuilder and append the Choices object.  
  GrammarBuilder andToppings = new GrammarBuilder("and", 0, 1);  
  andToppings.Append(toppings);  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder("I would like a", 0, 1);  
  gb.Append(toppings);  
  gb.Append(new GrammarBuilder(andToppings, 0, 3));  
  gb.Append("pizza");  
  
  // Write the contents and structure of the GrammarBuilder to the console.  
  Console.WriteLine("Grammar content and structure: {0}", gb.DebugShowPhrases);  
  
  // Create the Grammar from the GrammarBuilder.  
  Grammar grammar = new Grammar(gb);  
  grammar.Name = "Pizza Order";  
  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361640(v%3doffice.14)"><span data-ttu-id="2f0c8-417">Criar gramáticas usando GrammarBuilder</span><span class="sxs-lookup"><span data-stu-id="2f0c8-417">Create Grammars Using GrammarBuilder</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Addition">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2f0c8-418">Cria um novo <see cref="T:System.Speech.Recognition.GrammarBuilder" /> que corresponde a uma sequência de dois elementos de gramática.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-418">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that corresponds to a sequence of two grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0c8-419">A ordem dos operandos determina a ordem dos elementos na nova <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-419">The order of the operands determines the order of the elements in the new <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2f0c8-420">Cuidado é recomendado ao combinar <xref:System.Speech.Recognition.Choices> ou <xref:System.Speech.Recognition.GrammarBuilder> objetos que contêm <xref:System.Speech.Recognition.SemanticResultValue> ou <xref:System.Speech.Recognition.SemanticResultKey> instâncias com outros elementos de gramática.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-420">Caution is recommended when combining <xref:System.Speech.Recognition.Choices> or <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances with other grammar elements.</span></span> <span data-ttu-id="2f0c8-421">O reconhecedor de fala pode lançar uma exceção ao usar uma gramática de reconhecimento de fala que contém elementos semânticos duplicados com o mesmo nome de chave ou vários elementos semânticos que repetidamente poderia modificar o valor do mesmo elemento semântico.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-421">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span> 
  
 <span data-ttu-id="2f0c8-422">Para obter mais informações sobre como criar e usar gramáticas de reconhecimento de fala, consulte [reconhecimento de fala](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)) e [criar gramáticas de GrammarBuilder](https://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span><span class="sxs-lookup"><span data-stu-id="2f0c8-422">For more information about building and using speech recognition grammars, see [Speech Recognition](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)) and [Creating GrammarBuilder Grammars](https://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder operator + (System.Speech.Recognition.Choices choices, System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Addition(class System.Speech.Recognition.Choices choices, class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ operator +(System::Speech::Recognition::Choices ^ choices, System::Speech::Recognition::GrammarBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Speech.Recognition.Choices * System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.GrammarBuilder" Usage="choices + builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="choices" Type="System.Speech.Recognition.Choices" />
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="choices"><span data-ttu-id="2f0c8-423">O primeiro elemento de gramática, que representa um conjunto de alternativas.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-423">The first grammar element, which represents a set of alternatives.</span></span></param>
        <param name="builder"><span data-ttu-id="2f0c8-424">O segundo elemento de gramática.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-424">The second grammar element.</span></span></param>
        <summary><span data-ttu-id="2f0c8-425">Cria um novo <see cref="T:System.Speech.Recognition.GrammarBuilder" /> que contém um objeto <see cref="T:System.Speech.Recognition.Choices" /> seguido por um objeto <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-425">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.Choices" /> object followed by a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span></span></summary>
        <returns><span data-ttu-id="2f0c8-426">Retorna um <see cref="T:System.Speech.Recognition.GrammarBuilder" /> para a sequência do parâmetro <paramref name="choices" /> seguido pelo parâmetro <paramref name="builder" />.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-426">Returns a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="choices" /> parameter followed by the <paramref name="builder" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0c8-427"><xref:System.Speech.Recognition.GrammarBuilder> dá suporte a conversões de classes a seguir.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-427"><xref:System.Speech.Recognition.GrammarBuilder> supports conversions from the following classes.</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="2f0c8-428">Esse método aceita os objetos listados acima para o `builder` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-428">This method accepts the objects listed above for the `builder` parameter.</span></span> <span data-ttu-id="2f0c8-429">Para obter mais informações, consulte o <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operadores.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-429">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2f0c8-430">Ao combinar <xref:System.Speech.Recognition.Choices> e <xref:System.Speech.Recognition.GrammarBuilder> objetos que contêm <xref:System.Speech.Recognition.SemanticResultValue> ou <xref:System.Speech.Recognition.SemanticResultKey> instâncias, verifique se você evitar criar elementos semânticos duplicados com o mesmo nome de chave ou vários elementos semânticos que poderia modificar repetidamente o <xref:System.Speech.Recognition.SemanticValue.Value%2A> propriedade de um <xref:System.Speech.Recognition.SemanticValue> objeto.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-430">When you combine <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="2f0c8-431">O reconhecedor de fala pode lançar uma exceção se encontrar nessas circunstâncias.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-431">The speech recognizer can throw an exception if it encounters these circumstances.</span></span>
  
 <span data-ttu-id="2f0c8-432">É o método equivalente para esse operador <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.Choices%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="2f0c8-432">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.Choices%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder operator + (System.Speech.Recognition.GrammarBuilder builder, System.Speech.Recognition.Choices choices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Addition(class System.Speech.Recognition.GrammarBuilder builder, class System.Speech.Recognition.Choices choices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.Choices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ operator +(System::Speech::Recognition::GrammarBuilder ^ builder, System::Speech::Recognition::Choices ^ choices);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Speech.Recognition.GrammarBuilder * System.Speech.Recognition.Choices -&gt; System.Speech.Recognition.GrammarBuilder" Usage="builder + choices" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="choices" Type="System.Speech.Recognition.Choices" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="2f0c8-433">O primeiro elemento de gramática.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-433">The first grammar element.</span></span></param>
        <param name="choices"><span data-ttu-id="2f0c8-434">O segundo elemento de gramática, que representa um conjunto de elementos alternativos.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-434">The second grammar element, which represents a set of alternative elements.</span></span></param>
        <summary><span data-ttu-id="2f0c8-435">Cria um novo <see cref="T:System.Speech.Recognition.GrammarBuilder" /> que contém um <see cref="T:System.Speech.Recognition.GrammarBuilder" /> seguido por uma <see cref="T:System.Speech.Recognition.Choices" />.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-435">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> followed by a <see cref="T:System.Speech.Recognition.Choices" />.</span></span></summary>
        <returns><span data-ttu-id="2f0c8-436">Retorna um <see cref="T:System.Speech.Recognition.GrammarBuilder" /> para a sequência do parâmetro <paramref name="builder" /> seguido pelo parâmetro <paramref name="choices" />.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-436">Returns a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder" /> parameter followed by the <paramref name="choices" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0c8-437"><xref:System.Speech.Recognition.GrammarBuilder> dá suporte a conversões de classes a seguir:</span><span class="sxs-lookup"><span data-stu-id="2f0c8-437"><xref:System.Speech.Recognition.GrammarBuilder> supports conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="2f0c8-438">Esse método aceita os objetos listados acima para o `builder` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-438">This method accepts the objects listed above for the `builder` parameter.</span></span> <span data-ttu-id="2f0c8-439">Para obter mais informações, consulte o <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operadores.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-439">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2f0c8-440">Ao combinar <xref:System.Speech.Recognition.Choices> e <xref:System.Speech.Recognition.GrammarBuilder> objetos que contêm <xref:System.Speech.Recognition.SemanticResultValue> ou <xref:System.Speech.Recognition.SemanticResultKey> instâncias, verifique se você evitar criar elementos semânticos duplicados com o mesmo nome de chave ou vários elementos semânticos que poderia modificar repetidamente o <xref:System.Speech.Recognition.SemanticValue.Value%2A> propriedade de um <xref:System.Speech.Recognition.SemanticValue> objeto.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-440">When you combine <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="2f0c8-441">O reconhecedor de fala pode lançar uma exceção se encontrar nessas circunstâncias.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-441">The speech recognizer can throw an exception if it encounters these circumstances.</span></span>
  
 <span data-ttu-id="2f0c8-442">É o método equivalente para esse operador <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.Speech.Recognition.Choices%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="2f0c8-442">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.Speech.Recognition.Choices%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="2f0c8-443">O exemplo a seguir cria uma gramática de reconhecimento de fala que possa reconhecer as duas frases, "tornar o plano de fundo *cor*" e "Definir plano de fundo *cor*", onde *cor* é selecionado em um conjunto de cores.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-443">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="2f0c8-444">Vários tipos são usados para construir a gramática final, como [cadeia de caracteres](https://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, e <xref:System.Speech.Recognition.GrammarBuilder> objetos.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-444">Various types are used to build the final grammar, such as [String](https://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] { "red", "green", "blue" });  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    (GrammarBuilder)"Make background" + colorChoice;  
  GrammarBuilder setPhrase =  
    "Set background to" + (GrammarBuilder)colorChoice;  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] { makePhrase, setPhrase });  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder operator + (System.Speech.Recognition.GrammarBuilder builder1, System.Speech.Recognition.GrammarBuilder builder2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Addition(class System.Speech.Recognition.GrammarBuilder builder1, class System.Speech.Recognition.GrammarBuilder builder2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (builder1 As GrammarBuilder, builder2 As GrammarBuilder) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ operator +(System::Speech::Recognition::GrammarBuilder ^ builder1, System::Speech::Recognition::GrammarBuilder ^ builder2);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Speech.Recognition.GrammarBuilder * System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.GrammarBuilder" Usage="builder1 + builder2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder1" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="builder2" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="builder1"><span data-ttu-id="2f0c8-445">O primeiro elemento de gramática.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-445">The first grammar element.</span></span></param>
        <param name="builder2"><span data-ttu-id="2f0c8-446">O segundo elemento de gramática.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-446">The second grammar element.</span></span></param>
        <summary><span data-ttu-id="2f0c8-447">Cria um novo <see cref="T:System.Speech.Recognition.GrammarBuilder" /> que contém uma sequência de dois objetos <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-447">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a sequence of two <see cref="T:System.Speech.Recognition.GrammarBuilder" /> objects.</span></span></summary>
        <returns><span data-ttu-id="2f0c8-448">Retorna um <see cref="T:System.Speech.Recognition.GrammarBuilder" /> para a sequência do parâmetro <paramref name="builder1" /> seguido pelo parâmetro <paramref name="builder2" />.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-448">Returns a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder1" /> parameter followed by the <paramref name="builder2" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0c8-449"><xref:System.Speech.Recognition.GrammarBuilder> dá suporte a conversões de classes a seguir.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-449"><xref:System.Speech.Recognition.GrammarBuilder> supports conversions from the following classes.</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="2f0c8-450">Esse método aceita os objetos listados acima para o `builder1` e `builder2` parâmetros.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-450">This method accepts the objects listed above for the `builder1` and `builder2` parameters.</span></span> <span data-ttu-id="2f0c8-451">Para obter mais informações, consulte o <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operadores.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-451">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2f0c8-452">Ao combinar <xref:System.Speech.Recognition.GrammarBuilder> objetos que contêm <xref:System.Speech.Recognition.SemanticResultValue> ou <xref:System.Speech.Recognition.SemanticResultKey> instâncias, verifique se você evitar criar elementos semânticos duplicados com o mesmo nome de chave ou vários elementos semânticos que repetidamente poderia modificar o <xref:System.Speech.Recognition.SemanticValue.Value%2A> propriedade de um <xref:System.Speech.Recognition.SemanticValue> objeto.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-452">When you combine <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="2f0c8-453">O reconhecedor de fala pode lançar uma exceção se encontrar nessas circunstâncias.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-453">The speech recognizer can throw an exception if it encounters these circumstances.</span></span>
  
 <span data-ttu-id="2f0c8-454">É o método equivalente para esse operador <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="2f0c8-454">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder operator + (System.Speech.Recognition.GrammarBuilder builder, string phrase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Addition(class System.Speech.Recognition.GrammarBuilder builder, string phrase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (builder As GrammarBuilder, phrase As String) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ operator +(System::Speech::Recognition::GrammarBuilder ^ builder, System::String ^ phrase);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Speech.Recognition.GrammarBuilder * string -&gt; System.Speech.Recognition.GrammarBuilder" Usage="builder + phrase" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="phrase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="2f0c8-455">O primeiro elemento de gramática.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-455">The first grammar element.</span></span></param>
        <param name="phrase"><span data-ttu-id="2f0c8-456">O segundo elemento de gramática, que representa uma sequência de palavras.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-456">The second grammar element, which represents a sequence of words.</span></span></param>
        <summary><span data-ttu-id="2f0c8-457">Cria um novo <see cref="T:System.Speech.Recognition.GrammarBuilder" /> que contém um <see cref="T:System.Speech.Recognition.GrammarBuilder" /> seguido por uma frase.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-457">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> followed by a phrase.</span></span></summary>
        <returns><span data-ttu-id="2f0c8-458">Retorna um <see cref="T:System.Speech.Recognition.GrammarBuilder" /> para a sequência do parâmetro <paramref name="builder" /> seguido pelo parâmetro <paramref name="phrase" />.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-458">Returns a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder" /> parameter followed by the <paramref name="phrase" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0c8-459"><xref:System.Speech.Recognition.GrammarBuilder> dá suporte a conversões de classes a seguir.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-459"><xref:System.Speech.Recognition.GrammarBuilder> supports conversions from the following classes.</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="2f0c8-460">Esse método aceita os objetos listados acima para o `builder` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-460">This method accepts the objects listed above for the `builder` parameter.</span></span> <span data-ttu-id="2f0c8-461">Para obter mais informações, consulte o <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operadores.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-461">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operators.</span></span>  
  
 <span data-ttu-id="2f0c8-462">É o método equivalente para esse operador <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.String%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="2f0c8-462">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.String%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder operator + (string phrase, System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Addition(string phrase, class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.String,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (phrase As String, builder As GrammarBuilder) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ operator +(System::String ^ phrase, System::Speech::Recognition::GrammarBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="static member ( + ) : string * System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.GrammarBuilder" Usage="phrase + builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="phrase"><span data-ttu-id="2f0c8-463">O primeiro elemento de gramática, que representa uma sequência de palavras.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-463">The first grammar element, which represents a sequence of words.</span></span></param>
        <param name="builder"><span data-ttu-id="2f0c8-464">O segundo elemento de gramática.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-464">The second grammar element.</span></span></param>
        <summary><span data-ttu-id="2f0c8-465">Cria um novo <see cref="T:System.Speech.Recognition.GrammarBuilder" /> que contém uma frase seguida por um <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-465">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a phrase followed by a <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span></span></summary>
        <returns><span data-ttu-id="2f0c8-466">Retorna um <see cref="T:System.Speech.Recognition.GrammarBuilder" /> para a sequência do parâmetro <paramref name="phrase" /> seguido pelo parâmetro <paramref name="builder" />.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-466">Returns a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="phrase" /> parameter followed by the <paramref name="builder" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0c8-467"><xref:System.Speech.Recognition.GrammarBuilder> dá suporte a conversões de classes a seguir.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-467"><xref:System.Speech.Recognition.GrammarBuilder> supports conversions from the following classes.</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="2f0c8-468">Esse método aceita os objetos listados acima para o `builder` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-468">This method accepts the objects listed above for the `builder` parameter.</span></span> <span data-ttu-id="2f0c8-469">Para obter mais informações, consulte o <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operadores.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-469">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operators.</span></span>  
  
 <span data-ttu-id="2f0c8-470">É o método equivalente para esse operador <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.String%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="2f0c8-470">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.String%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="2f0c8-471">O exemplo a seguir cria uma gramática de reconhecimento de fala que possa reconhecer as duas frases, "tornar o plano de fundo *cor*" e "Definir plano de fundo *cor*", onde *cor* é selecionado em um conjunto de cores.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-471">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="2f0c8-472">Vários tipos são usados para construir a gramática final, como [cadeia de caracteres](https://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, e <xref:System.Speech.Recognition.GrammarBuilder> objetos.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-472">Various types are used to build the final grammar, such as [String](https://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] { "red", "green", "blue" });  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    (GrammarBuilder)"Make background" + colorChoice;  
  GrammarBuilder setPhrase =  
    "Set background to" + (GrammarBuilder)colorChoice;  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the Grammar object from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] { makePhrase, setPhrase });  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Implicit">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2f0c8-473">Converte outro tipo em um <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-473">Converts another type to a <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0c8-474">Conversão implícita cria uma nova instância da <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-474">Implicit conversion creates a new instance of <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="2f0c8-475">Você pode converter cada uma das seguintes classes para um <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-475">You can cast each of the following classes to a <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="2f0c8-476">Cada um das conversões implícitas é equivalente a chamar o construtor.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-476">Each of the implicit casts is equivalent to calling the constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Speech.Recognition.GrammarBuilder.#ctor" />
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Speech.Recognition.GrammarBuilder (System.Speech.Recognition.Choices choices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Implicit(class System.Speech.Recognition.Choices choices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Speech::Recognition::GrammarBuilder ^(System::Speech::Recognition::Choices ^ choices);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : System.Speech.Recognition.Choices -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.op_Implicit choices" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="choices" Type="System.Speech.Recognition.Choices" />
      </Parameters>
      <Docs>
        <param name="choices"><span data-ttu-id="2f0c8-477">O conjunto de alternativas a converter.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-477">The set of alternatives to convert.</span></span></param>
        <summary><span data-ttu-id="2f0c8-478">Converte um objeto <see cref="T:System.Speech.Recognition.Choices" /> em um objeto <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-478">Converts a <see cref="T:System.Speech.Recognition.Choices" /> object to a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span></span></summary>
        <returns><span data-ttu-id="2f0c8-479">O objeto <see cref="T:System.Speech.Recognition.Choices" /> convertido.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-479">The converted <see cref="T:System.Speech.Recognition.Choices" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0c8-480">Conversão implícita cria uma nova instância da <xref:System.Speech.Recognition.GrammarBuilder>. Esse operador de conversão é equivalente a chamar <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> e especificando `choices` para o `alternateChoices`.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-480">Implicit conversion creates a new instance of <xref:System.Speech.Recognition.GrammarBuilder>.This conversion operator is equivalent to calling <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> and specifying `choices` for the `alternateChoices`.</span></span>  
  
 <span data-ttu-id="2f0c8-481">É o método equivalente para esse operador <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.Choices%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="2f0c8-481">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.Choices%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="2f0c8-482">O exemplo a seguir cria uma gramática de reconhecimento de fala que possa reconhecer uma resposta "Sim" ou "não" pergunta.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-482">The following example creates a speech recognition grammar that can recognize a response to a "yes" or "no" question.</span></span> <span data-ttu-id="2f0c8-483">O operador de conversão implícita é usado na construção de uma <xref:System.Speech.Recognition.SemanticResultValue> do objeto de um <xref:System.Speech.Recognition.Choices> objeto, na construção de uma <xref:System.Speech.Recognition.Choices> objeto de dois <xref:System.Speech.Recognition.SemanticResultValue> objetos e na construção de um <xref:System.Speech.Recognition.Grammar> objeto a partir de um <xref:System.Speech.Recognition.SemanticResultKey> objeto.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-483">The implicit conversion operator is used in the construction of a <xref:System.Speech.Recognition.SemanticResultValue> object from a <xref:System.Speech.Recognition.Choices> object, in the construction of a <xref:System.Speech.Recognition.Choices> object from two <xref:System.Speech.Recognition.SemanticResultValue> objects, and in the construction of a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.SemanticResultKey> object.</span></span>  
  
```csharp  
Choices yesChoices = new Choices(new string[] {"yes", "yup", "yah"});  
SemanticResultValue yesValue =  
  new SemanticResultValue(yesChoices, true);  
  
Choices noChoices = new Choices(new string[] { "no", "nope", "nah" });  
SemanticResultValue noValue =  
  new SemanticResultValue(noChoices, false);  
  
SemanticResultKey yesnoKey =  
  new SemanticResultKey("yesno", new Choices(new GrammarBuilder[] { yesValue, noValue }));  
  
Grammar yesnoGrammar = new Grammar(yesnoKey);  
yesnoGrammar.Name = "yesno";  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Speech.Recognition.GrammarBuilder (System.Speech.Recognition.SemanticResultKey semanticKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Implicit(class System.Speech.Recognition.SemanticResultKey semanticKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.SemanticResultKey)~System.Speech.Recognition.GrammarBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (semanticKey As SemanticResultKey) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Speech::Recognition::GrammarBuilder ^(System::Speech::Recognition::SemanticResultKey ^ semanticKey);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : System.Speech.Recognition.SemanticResultKey -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.op_Implicit semanticKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="semanticKey" Type="System.Speech.Recognition.SemanticResultKey" />
      </Parameters>
      <Docs>
        <param name="semanticKey"><span data-ttu-id="2f0c8-484">A chave semântica a converter.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-484">The semantic key to convert.</span></span></param>
        <summary><span data-ttu-id="2f0c8-485">Converte um objeto <see cref="T:System.Speech.Recognition.SemanticResultKey" /> em um objeto <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-485">Converts a <see cref="T:System.Speech.Recognition.SemanticResultKey" /> object to a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span></span></summary>
        <returns><span data-ttu-id="2f0c8-486">O objeto <see cref="T:System.Speech.Recognition.SemanticResultKey" /> convertido.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-486">The converted <see cref="T:System.Speech.Recognition.SemanticResultKey" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0c8-487">Conversão implícita cria uma nova instância da <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-487">Implicit conversion creates a new instance of <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="2f0c8-488">Esse operador de conversão é equivalente a chamar <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> e especificando `semanticKey` para o `key`.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-488">This conversion operator is equivalent to calling <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> and specifying `semanticKey` for the `key`.</span></span>  
  
 <span data-ttu-id="2f0c8-489">É o método equivalente para esse operador <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultKey%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="2f0c8-489">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultKey%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="2f0c8-490">O exemplo a seguir cria uma gramática de reconhecimento de fala que possa reconhecer uma resposta "Sim" ou "não" pergunta.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-490">The following example creates a speech recognition grammar that can recognize a response to a "yes" or "no" question.</span></span> <span data-ttu-id="2f0c8-491">O operador de conversão implícita é usado na construção de uma <xref:System.Speech.Recognition.SemanticResultValue> do objeto de um <xref:System.Speech.Recognition.Choices> objeto, na construção de uma <xref:System.Speech.Recognition.Choices> objeto de dois <xref:System.Speech.Recognition.SemanticResultValue> objetos e na construção de um <xref:System.Speech.Recognition.Grammar> objeto a partir de um <xref:System.Speech.Recognition.SemanticResultKey> objeto.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-491">The implicit conversion operator is used in the construction of a <xref:System.Speech.Recognition.SemanticResultValue> object from a <xref:System.Speech.Recognition.Choices> object, in the construction of a <xref:System.Speech.Recognition.Choices> object from two <xref:System.Speech.Recognition.SemanticResultValue> objects, and in the construction of a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.SemanticResultKey> object.</span></span>  
  
```csharp  
Choices yesChoices = new Choices(new string[] {"yes", "yup", "yah"});  
SemanticResultValue yesValue =  
  new SemanticResultValue(yesChoices, true);  
  
Choices noChoices = new Choices(new string[] { "no", "nope", "nah" });  
SemanticResultValue noValue =  
  new SemanticResultValue(noChoices, false);  
  
SemanticResultKey yesnoKey =  
  new SemanticResultKey("yesno", new Choices(new GrammarBuilder[] { yesValue, noValue }));  
  
Grammar yesnoGrammar = new Grammar(yesnoKey);  
yesnoGrammar.Name = "yesno";  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Speech.Recognition.GrammarBuilder (System.Speech.Recognition.SemanticResultValue semanticValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Implicit(class System.Speech.Recognition.SemanticResultValue semanticValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.SemanticResultValue)~System.Speech.Recognition.GrammarBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (semanticValue As SemanticResultValue) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Speech::Recognition::GrammarBuilder ^(System::Speech::Recognition::SemanticResultValue ^ semanticValue);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : System.Speech.Recognition.SemanticResultValue -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.op_Implicit semanticValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="semanticValue" Type="System.Speech.Recognition.SemanticResultValue" />
      </Parameters>
      <Docs>
        <param name="semanticValue"><span data-ttu-id="2f0c8-492">O objeto <see cref="T:System.Speech.Recognition.SemanticResultValue" /> a ser convertido.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-492">The <see cref="T:System.Speech.Recognition.SemanticResultValue" /> object to convert.</span></span></param>
        <summary><span data-ttu-id="2f0c8-493">Converte um objeto <see cref="T:System.Speech.Recognition.SemanticResultValue" /> em um objeto <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-493">Converts a <see cref="T:System.Speech.Recognition.SemanticResultValue" /> object to a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span></span></summary>
        <returns><span data-ttu-id="2f0c8-494">O objeto <see cref="T:System.Speech.Recognition.SemanticResultValue" /> convertido.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-494">The converted <see cref="T:System.Speech.Recognition.SemanticResultValue" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0c8-495">Conversão implícita cria uma nova instância da <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-495">Implicit conversion creates a new instance of <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="2f0c8-496">Esse operador de conversão é equivalente a chamar <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> e especificando `semanticValue` para o `value`.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-496">This conversion operator is equivalent to calling <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> and specifying `semanticValue` for the `value`.</span></span>  
  
 <span data-ttu-id="2f0c8-497">É o método equivalente para esse operador <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultValue%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="2f0c8-497">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultValue%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="2f0c8-498">O exemplo a seguir cria uma gramática de reconhecimento de fala que possa reconhecer uma resposta "Sim" ou "não" pergunta.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-498">The following example creates a speech recognition grammar that can recognize a response to a "yes" or "no" question.</span></span> <span data-ttu-id="2f0c8-499">O operador de conversão implícita é usado na construção de uma <xref:System.Speech.Recognition.SemanticResultValue> do objeto de um <xref:System.Speech.Recognition.Choices>objeto, na construção de uma <xref:System.Speech.Recognition.Choices> objeto de dois <xref:System.Speech.Recognition.SemanticResultValue> objetos e na construção de um <xref:System.Speech.Recognition.Grammar> objeto a partir de um <xref:System.Speech.Recognition.SemanticResultKey> objeto.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-499">The implicit conversion operator is used in the construction of a <xref:System.Speech.Recognition.SemanticResultValue> object from a <xref:System.Speech.Recognition.Choices>object, in the construction of a <xref:System.Speech.Recognition.Choices> object from two <xref:System.Speech.Recognition.SemanticResultValue> objects, and in the construction of a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.SemanticResultKey> object.</span></span>  
  
```csharp  
Choices yesChoices = new Choices(new string[] {"yes", "yup", "yah"});  
SemanticResultValue yesValue =  
  new SemanticResultValue(yesChoices, true);  
  
Choices noChoices = new Choices(new string[] { "no", "nope", "nah" });  
SemanticResultValue noValue =  
  new SemanticResultValue(noChoices, false);  
  
SemanticResultKey yesnoKey =  
  new SemanticResultKey("yesno", new Choices(new GrammarBuilder[] { yesValue, noValue }));  
  
Grammar yesnoGrammar = new Grammar(yesnoKey);  
yesnoGrammar.Name = "yesno";  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Speech.Recognition.GrammarBuilder (string phrase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Implicit(string phrase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.String)~System.Speech.Recognition.GrammarBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (phrase As String) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Speech::Recognition::GrammarBuilder ^(System::String ^ phrase);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : string -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.op_Implicit phrase" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="phrase"><span data-ttu-id="2f0c8-500">A cadeia de caracteres a ser convertida.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-500">The string to convert.</span></span></param>
        <summary><span data-ttu-id="2f0c8-501">Converte uma cadeia de caracteres em um objeto <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-501">Converts a string to a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span></span></summary>
        <returns><span data-ttu-id="2f0c8-502">A cadeia de caracteres convertida.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-502">The converted string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f0c8-503">Conversão implícita cria uma nova instância da <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-503">Implicit conversion creates a new instance of <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="2f0c8-504">Esse operador de conversão é equivalente a chamar <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> e especificando o mesmo `phrase`.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-504">This conversion operator is equivalent to calling <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> and specifying the same `phrase`.</span></span>  
  
 <span data-ttu-id="2f0c8-505">É o método equivalente para esse operador <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.String%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="2f0c8-505">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.String%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="2f0c8-506">O exemplo a seguir usa <xref:System.Speech.Recognition.GrammarBuilder> e <xref:System.Speech.Recognition.Choices> objetos para construir uma gramática que possa reconhecer a qualquer uma das duas frases, "tornar o plano de fundo *colorChoice*" ou "Definir plano de fundo *colorChoice*".</span><span class="sxs-lookup"><span data-stu-id="2f0c8-506">The following example uses  <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects to construct a grammar that can recognize either of the two phrases, "Make background *colorChoice*" or "Set background to *colorChoice*".</span></span>  
  
 <span data-ttu-id="2f0c8-507">Depois de criar uma lista de valores aceitáveis para *colorChoice* usando uma <xref:System.Speech.Recognition.Choices> do objeto, o exemplo inicializa duas <xref:System.Speech.Recognition.GrammarBuilder> objetos `makePhrase` e `setPhrase`, usando conversão implícita de cadeia de caracteres objetos.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-507">After creating a list of acceptable values for *colorChoice* using a <xref:System.Speech.Recognition.Choices> object, the example initializes two <xref:System.Speech.Recognition.GrammarBuilder> objects, `makePhrase` and `setPhrase`, using implicit conversion from string objects.</span></span>  
  
 <span data-ttu-id="2f0c8-508">O exemplo a, por fim, cria uma <xref:System.Speech.Recognition.Grammar> do objeto de um <xref:System.Speech.Recognition.Choices> objeto convertido em um <xref:System.Speech.Recognition.GrammarBuilder> objeto.</span><span class="sxs-lookup"><span data-stu-id="2f0c8-508">The example finally creates a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.Choices> object cast to a <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
```csharp  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the Grammar object from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  Grammar grammar = new Grammar((GrammarBuilder)bothChoices);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
      </Docs>
    </Member>
  </Members>
</Type>