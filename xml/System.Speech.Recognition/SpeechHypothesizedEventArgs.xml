<Type Name="SpeechHypothesizedEventArgs" FullName="System.Speech.Recognition.SpeechHypothesizedEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="052cb32d806f648294a254927e51e2a0c9f84f55" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37610408" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SpeechHypothesizedEventArgs : System.Speech.Recognition.RecognitionEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit SpeechHypothesizedEventArgs extends System.Speech.Recognition.RecognitionEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.SpeechHypothesizedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class SpeechHypothesizedEventArgs&#xA;Inherits RecognitionEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class SpeechHypothesizedEventArgs : System::Speech::Recognition::RecognitionEventArgs" />
  <TypeSignature Language="F#" Value="type SpeechHypothesizedEventArgs = class&#xA;    inherit RecognitionEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Speech.Recognition.RecognitionEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="0c32d-101">Retorna uma notificação dos eventos <see cref="E:System.Speech.Recognition.SpeechRecognitionEngine.SpeechHypothesized" /> ou <see cref="E:System.Speech.Recognition.SpeechRecognizer.SpeechHypothesized" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0c32d-101">Returns notification from <see cref="E:System.Speech.Recognition.SpeechRecognitionEngine.SpeechHypothesized" /> or <see cref="E:System.Speech.Recognition.SpeechRecognizer.SpeechHypothesized" /> events.</span>
      </span>
      <span data-ttu-id="0c32d-102">Esta classe dá suporte à infraestrutura do .NET Framework e não se destina a ser usada diretamente do código do aplicativo.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0c32d-102">This class supports the .NET Framework infrastructure and is not intended to be used directly from application code.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c32d-103">Um `SpeechHypothesized` é gerado pela <xref:System.Speech.Recognition.SpeechRecognizer> e <xref:System.Speech.Recognition.SpeechRecognitionEngine> classes.</span><span class="sxs-lookup"><span data-stu-id="0c32d-103">A `SpeechHypothesized` event is raised by the <xref:System.Speech.Recognition.SpeechRecognizer> and <xref:System.Speech.Recognition.SpeechRecognitionEngine> classes.</span></span>  
  
 <span data-ttu-id="0c32d-104">Você pode obter informações detalhadas sobre uma frase reconhecida provisoriamente usando o <xref:System.Speech.Recognition.RecognitionEventArgs.Result%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="0c32d-104">You can obtain detailed information about a tentatively recognized phrase by using the <xref:System.Speech.Recognition.RecognitionEventArgs.Result%2A> property.</span></span>  
  
 <span data-ttu-id="0c32d-105">Inúmeros `SpeechHypothesized` os eventos são gerados como reconhecimento de um mecanismo tenta identificar uma frase de entrada.</span><span class="sxs-lookup"><span data-stu-id="0c32d-105">Numerous `SpeechHypothesized` events are generated as a recognition engine attempts to identify an input phrase.</span></span> <span data-ttu-id="0c32d-106">Normalmente, manipular esses eventos só é útil para depuração.</span><span class="sxs-lookup"><span data-stu-id="0c32d-106">Typically, handling these events is useful only for debugging.</span></span>  
  
 <span data-ttu-id="0c32d-107">`SpeechHypothesizedEventArgs` deriva de <xref:System.Speech.Recognition.RecognitionEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="0c32d-107">`SpeechHypothesizedEventArgs` derives from <xref:System.Speech.Recognition.RecognitionEventArgs>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c32d-108">O exemplo a seguir cria um manipulador para <xref:System.Speech.Recognition.SpeechRecognizer.SpeechHypothesized?displayProperty=nameWithType> ou <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechHypothesized?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="0c32d-108">The example below creates a handler for <xref:System.Speech.Recognition.SpeechRecognizer.SpeechHypothesized?displayProperty=nameWithType> or <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechHypothesized?displayProperty=nameWithType> events.</span></span> <span data-ttu-id="0c32d-109">O manipulador usa uma instância de `SpeechHypothesizedEventArgs` para retornar e exibir informações sobre uma frase reconhecida provisoriamente.</span><span class="sxs-lookup"><span data-stu-id="0c32d-109">The handler uses an instance of `SpeechHypothesizedEventArgs` to return and display information about a tentatively recognized phrase.</span></span>  
  
```  
// Create a handler for the SpeechHypothesized event.  
recognizer.SpeechHypothesized += new EventHandler<SpeechHypothesizedEventArgs>(recognizer_SpeechHypothesized);  
  
// Handle the event and display the hypothesized result.  
void recognizer_SpeechHypothesized (object sender, SpeechHypothesizedEventArgs e)  
  {  
    Console.WriteLine("Hypothesized text: " + e.Result.Text);  
  }  
  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Recognition.RecognitionEventArgs" />
    <altmember cref="T:System.Speech.Recognition.RecognitionResult" />
    <altmember cref="E:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized" />
    <altmember cref="E:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized" />
    <altmember cref="T:System.Speech.Recognition.SpeechRecognizedEventArgs" />
    <altmember cref="E:System.Speech.Recognition.SpeechRecognizer.SpeechHypothesized" />
    <altmember cref="E:System.Speech.Recognition.SpeechRecognitionEngine.SpeechHypothesized" />
    <altmember cref="T:System.Speech.Recognition.SpeechRecognitionRejectedEventArgs" />
    <altmember cref="E:System.Speech.Recognition.SpeechRecognizer.SpeechRecognitionRejected" />
    <altmember cref="E:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognitionRejected" />
  </Docs>
  <Members />
</Type>