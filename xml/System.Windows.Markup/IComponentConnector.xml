<Type Name="IComponentConnector" FullName="System.Windows.Markup.IComponentConnector">
  <Metadata><Meta Name="ms.openlocfilehash" Value="baf99c593a196812664e7cb32cc94bdd0d0201ca" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="64994582" /></Metadata><TypeSignature Language="C#" Value="public interface IComponentConnector" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComponentConnector" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.IComponentConnector" />
  <TypeSignature Language="VB.NET" Value="Public Interface IComponentConnector" />
  <TypeSignature Language="C++ CLI" Value="public interface class IComponentConnector" />
  <TypeSignature Language="F#" Value="type IComponentConnector = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Dá suporte de marcação, compilação e ferramentas para elementos XAML nomeados e para anexar manipuladores de eventos a eles.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa interface é usada internamente pelo <xref:System.Windows.Baml2006.Baml2006Reader>.  
  
 Implementações de <xref:System.Windows.Markup.IComponentConnector.InitializeComponent%2A> são amplamente observável como parte da infra-estrutura fornecida por estruturas ou tecnologias que usam XAML combinados com o aplicativo e modelos de programação. Por exemplo, sempre que você examinar as classes geradas para elementos de raiz XAML no WPF páginas e aplicativos, você verá <xref:System.Windows.Markup.IComponentConnector.InitializeComponent%2A> definido na saída. Esse método também existe no assembly compilado e desempenha um papel no modelo de aplicativo WPF de carregar o conteúdo XAML UI no momento da análise XAML. Para obter mais informações sobre a integração do WPF do `InitializeComponent` conceito, consulte [visão geral do gerenciamento de aplicativo](~/docs/framework/wpf/app-development/application-management-overview.md) ou [Code-Behind e XAML no WPF](~/docs/framework/wpf/advanced/code-behind-and-xaml-in-wpf.md).  
  
 Nas versões anteriores do .NET Framework, essa interface já existe no assembly WindowsBase específicas do WPF. Na [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.IComponentConnector> está no assembly System. XAML. . Para obter mais informações, consulte [tipos migrados do WPF para System. XAML](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).  
  
> [!TIP]
>  Uma falha ao resolver <xref:System.Windows.Markup.IComponentConnector> durante uma tentativa compilação geralmente é um indicador que você não tiver atualizado seu projeto WPF corretamente. Em particular, o projeto não está referenciando o assembly System. XAML para um projeto que tem como alvo [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]. Tente executar o `devenv /upgrade` opção para o projeto ou, caso contrário, ajuste as referências de assembly do projeto para que o System. XAML está na lista de referência.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (int connectionId, object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Connect(int32 connectionId, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.IComponentConnector.Connect(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (connectionId As Integer, target As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(int connectionId, System::Object ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Connect : int * obj -&gt; unit" Usage="iComponentConnector.Connect (connectionId, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionId" Type="System.Int32" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="target" Type="System.Object" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="connectionId">Um token de identificador para distinguir as chamadas.</param>
        <param name="target">O destino a que se conectar eventos e nomes.</param>
        <summary>Anexa eventos e nomes ao conteúdo compilado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.IComponentConnector> é usado internamente pelo <xref:System.Windows.Baml2006.Baml2006Reader>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeComponent">
      <MemberSignature Language="C#" Value="public void InitializeComponent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeComponent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.IComponentConnector.InitializeComponent" />
      <MemberSignature Language="VB.NET" Value="Public Sub InitializeComponent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InitializeComponent();" />
      <MemberSignature Language="F#" Value="abstract member InitializeComponent : unit -&gt; unit" Usage="iComponentConnector.InitializeComponent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Carrega a página compilada de um componente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.IComponentConnector> é usado internamente pelo <xref:System.Windows.Baml2006.Baml2006Reader>.  
  
 Implementações de <xref:System.Windows.Markup.IComponentConnector.InitializeComponent%2A> são amplamente observável como parte da infra-estrutura fornecida por estruturas ou tecnologias que usam XAML combinados com o aplicativo e modelos de programação. Por exemplo, sempre que você examinar as classes geradas para elementos de raiz XAML no WPF páginas e aplicativos, você verá <xref:System.Windows.Markup.IComponentConnector.InitializeComponent%2A> definido na saída. Esse método também existe no assembly compilado e desempenha um papel no modelo de aplicativo WPF de carregar o conteúdo XAML UI no momento da análise XAML. Para obter mais informações sobre a integração do WPF do `InitializeComponent` conceito, consulte [visão geral do gerenciamento de aplicativo](~/docs/framework/wpf/app-development/application-management-overview.md) ou [Code-Behind e XAML no WPF](~/docs/framework/wpf/advanced/code-behind-and-xaml-in-wpf.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>