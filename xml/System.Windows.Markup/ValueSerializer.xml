<Type Name="ValueSerializer" FullName="System.Windows.Markup.ValueSerializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7d0bcead4cb9eb4ed8e1e1bf4db32bff7b856e73" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57936544" /></Metadata><TypeSignature Language="C#" Value="public abstract class ValueSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract ValueSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.ValueSerializer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ValueSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class ValueSerializer abstract" />
  <TypeSignature Language="F#" Value="type ValueSerializer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="f49ac-101">Classe abstrata que define o comportamento de conversão para a serialização de uma representação de objeto.</span><span class="sxs-lookup"><span data-stu-id="f49ac-101">Abstract class that defines conversion behavior for serialization from an object representation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f49ac-102">A cadeia de caracteres de que um conversor de retorna para a serialização deve ser sem perdas e o conversor deve sempre retornar a mesma cadeia de caracteres para um determinado valor.</span><span class="sxs-lookup"><span data-stu-id="f49ac-102">The string a converter returns for serialization must be loss-less and the converter must always return the same string for a particular value.</span></span>  <span data-ttu-id="f49ac-103">Se um conversor de tipo (derivado de <xref:System.ComponentModel.TypeConverter>) não atender a esses requisitos em sua `ConvertTo` implementações para saída de cadeia de caracteres, um personalizado <xref:System.Windows.Markup.ValueSerializer> deve ser declarado.</span><span class="sxs-lookup"><span data-stu-id="f49ac-103">If a type converter (derived from <xref:System.ComponentModel.TypeConverter>) does not meet these requirements in its `ConvertTo` implementations for string output, a custom <xref:System.Windows.Markup.ValueSerializer> must be declared.</span></span> <span data-ttu-id="f49ac-104">Ambos os <xref:System.Windows.Markup.ValueSerializer> deve atender aos requisitos ou um valor nulo <xref:System.Windows.Markup.ValueSerializer> deve ser associado ao tipo.</span><span class="sxs-lookup"><span data-stu-id="f49ac-104">Either the <xref:System.Windows.Markup.ValueSerializer> should meet the requirements, or a null <xref:System.Windows.Markup.ValueSerializer> should be associated with the type.</span></span> <span data-ttu-id="f49ac-105">Um <xref:System.Windows.Markup.ValueSerializer> está associado um tipo aplicando o <xref:System.Windows.Markup.ValueSerializerAttribute> atributo.</span><span class="sxs-lookup"><span data-stu-id="f49ac-105">A <xref:System.Windows.Markup.ValueSerializer> is associated with a type by applying the <xref:System.Windows.Markup.ValueSerializerAttribute> attribute.</span></span>  
  
 <span data-ttu-id="f49ac-106">Um valor nulo <xref:System.Windows.Markup.ValueSerializer> indica o conversor de tipo deve ser ignorado para conversões de converter a cadeia de caracteres do grafo de objetos.</span><span class="sxs-lookup"><span data-stu-id="f49ac-106">A null <xref:System.Windows.Markup.ValueSerializer> indicates the type converter should be ignored for convert-to-string conversions from the object graph.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f49ac-107">Implementação de <xref:System.Windows.Markup.ValueSerializer> deve evitar lançar exceções.</span><span class="sxs-lookup"><span data-stu-id="f49ac-107">Implementation of <xref:System.Windows.Markup.ValueSerializer> should avoid throwing exceptions.</span></span> <span data-ttu-id="f49ac-108">Todas as exceções geradas podem encerrar a serialização.</span><span class="sxs-lookup"><span data-stu-id="f49ac-108">Any exceptions thrown could terminate serialization.</span></span>  
  
 <span data-ttu-id="f49ac-109"><xref:System.Windows.Markup.IValueSerializerContext> para um <xref:System.Windows.Markup.ValueSerializer> e suas APIs é análoga <xref:System.ComponentModel.ITypeDescriptorContext> para um <xref:System.ComponentModel.TypeConverter>.</span><span class="sxs-lookup"><span data-stu-id="f49ac-109"><xref:System.Windows.Markup.IValueSerializerContext> for a <xref:System.Windows.Markup.ValueSerializer> and its APIs is analogous to <xref:System.ComponentModel.ITypeDescriptorContext> for a <xref:System.ComponentModel.TypeConverter>.</span></span> <span data-ttu-id="f49ac-110">Na verdade, <xref:System.Windows.Markup.IValueSerializerContext> herda <xref:System.ComponentModel.ITypeDescriptorContext>.</span><span class="sxs-lookup"><span data-stu-id="f49ac-110">In fact, <xref:System.Windows.Markup.IValueSerializerContext> inherits <xref:System.ComponentModel.ITypeDescriptorContext>.</span></span> <span data-ttu-id="f49ac-111">Quando um <xref:System.Windows.Markup.ValueSerializer> API da classe derivada é chamado, o chamador (geralmente um processo de serializador) passa um contexto que pode fornecer determinados serviços.</span><span class="sxs-lookup"><span data-stu-id="f49ac-111">When a <xref:System.Windows.Markup.ValueSerializer> derived class API is called, the caller (typically a serializer process) passes a context that may provide certain services.</span></span> <span data-ttu-id="f49ac-112">Por causa das diretrizes gerais que um <xref:System.Windows.Markup.ValueSerializer> não deve lançar exceções.</span><span class="sxs-lookup"><span data-stu-id="f49ac-112">Because of the general guidance that a <xref:System.Windows.Markup.ValueSerializer> must not throw exceptions.</span></span> <span data-ttu-id="f49ac-113">Falha ao retornar um serviço específico do contexto também não deve lançar exceções.</span><span class="sxs-lookup"><span data-stu-id="f49ac-113">Failure to return a particular service from the context must also not throw any exceptions.</span></span>  
  
 <span data-ttu-id="f49ac-114">Nas versões anteriores do .NET Framework, essa classe já existe no assembly WindowsBase específicas do WPF.</span><span class="sxs-lookup"><span data-stu-id="f49ac-114">In previous versions of the .NET Framework, this class existed in the WPF-specific assembly WindowsBase.</span></span> <span data-ttu-id="f49ac-115">Na [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.ValueSerializer> está no assembly System. XAML.</span><span class="sxs-lookup"><span data-stu-id="f49ac-115">In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.ValueSerializer> is in the System.Xaml assembly.</span></span> <span data-ttu-id="f49ac-116">Para obter mais informações, consulte [tipos migrados do WPF para System. XAML](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span><span class="sxs-lookup"><span data-stu-id="f49ac-116">For more information, see [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlXmlWriter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ValueSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ValueSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f49ac-117">Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.ValueSerializer" />.</span><span class="sxs-lookup"><span data-stu-id="f49ac-117">Initializes a new instance of the <see cref="T:System.Windows.Markup.ValueSerializer" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f49ac-118">O corpo deste construtor está vazio. o <xref:System.Windows.Markup.ValueSerializer> classe não contém todos os valores que exigem a inicialização.</span><span class="sxs-lookup"><span data-stu-id="f49ac-118">The body of this constructor is empty; the <xref:System.Windows.Markup.ValueSerializer> class does not contain any values that require initialization.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFromString">
      <MemberSignature Language="C#" Value="public virtual bool CanConvertFromString (string value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvertFromString(string value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanConvertFromString (value As String, context As IValueSerializerContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvertFromString(System::String ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertFromString : string * System.Windows.Markup.IValueSerializerContext -&gt; bool&#xA;override this.CanConvertFromString : string * System.Windows.Markup.IValueSerializerContext -&gt; bool" Usage="valueSerializer.CanConvertFromString (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f49ac-119">A cadeia de caracteres a ser avaliada para conversão.</span><span class="sxs-lookup"><span data-stu-id="f49ac-119">The string to evaluate for conversion.</span></span></param>
        <param name="context"><span data-ttu-id="f49ac-120">Informações de contexto que são usadas para conversão.</span><span class="sxs-lookup"><span data-stu-id="f49ac-120">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="f49ac-121">Quando substituído em uma classe derivada, determina se o <see cref="T:System.String" /> especificado pode ser convertido em uma instância do tipo compatível com a implementação de <see cref="T:System.Windows.Markup.ValueSerializer" />.</span><span class="sxs-lookup"><span data-stu-id="f49ac-121">When overridden in a derived class, determines whether the specified <see cref="T:System.String" /> can be converted to an instance of the type that the implementation of <see cref="T:System.Windows.Markup.ValueSerializer" /> supports.</span></span></summary>
        <returns><span data-ttu-id="f49ac-122"><see langword="true" /> se o valor puder ser convertido; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f49ac-122"><see langword="true" /> if the value can be converted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f49ac-123">A implementação base sempre retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="f49ac-123">The base implementation always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertToString">
      <MemberSignature Language="C#" Value="public virtual bool CanConvertToString (object value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvertToString(object value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanConvertToString (value As Object, context As IValueSerializerContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvertToString(System::Object ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertToString : obj * System.Windows.Markup.IValueSerializerContext -&gt; bool&#xA;override this.CanConvertToString : obj * System.Windows.Markup.IValueSerializerContext -&gt; bool" Usage="valueSerializer.CanConvertToString (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f49ac-124">O objeto a ser avaliado para conversão.</span><span class="sxs-lookup"><span data-stu-id="f49ac-124">The object to evaluate for conversion.</span></span></param>
        <param name="context"><span data-ttu-id="f49ac-125">Informações de contexto que são usadas para conversão.</span><span class="sxs-lookup"><span data-stu-id="f49ac-125">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="f49ac-126">Quando substituído em uma classe derivada, determina se o objeto especificado pode ser convertido em um <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="f49ac-126">When overridden in a derived class, determines whether the specified object can be converted into a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="f49ac-127"><see langword="true" /> se o <paramref name="value" /> puder ser convertido em um <see cref="T:System.String" />; caso contrário, <see langword="false." /></span><span class="sxs-lookup"><span data-stu-id="f49ac-127"><see langword="true" /> if the <paramref name="value" /> can be converted into a <see cref="T:System.String" />; otherwise, <see langword="false." /></span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f49ac-128">A implementação base sempre retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="f49ac-128">The base implementation always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public virtual object ConvertFromString (string value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertFromString(string value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertFromString (value As String, context As IValueSerializerContext) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ConvertFromString(System::String ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ConvertFromString : string * System.Windows.Markup.IValueSerializerContext -&gt; obj&#xA;override this.ConvertFromString : string * System.Windows.Markup.IValueSerializerContext -&gt; obj" Usage="valueSerializer.ConvertFromString (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f49ac-129">A cadeia de caracteres a ser convertida.</span><span class="sxs-lookup"><span data-stu-id="f49ac-129">The string to convert.</span></span></param>
        <param name="context"><span data-ttu-id="f49ac-130">Informações de contexto que são usadas para conversão.</span><span class="sxs-lookup"><span data-stu-id="f49ac-130">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="f49ac-131">Quando substituído em uma classe derivada, converte um <see cref="T:System.String" /> em uma instância do tipo compatível com a implementação de <see cref="T:System.Windows.Markup.ValueSerializer" />.</span><span class="sxs-lookup"><span data-stu-id="f49ac-131">When overridden in a derived class, converts a <see cref="T:System.String" /> to an instance of the type that the implementation of <see cref="T:System.Windows.Markup.ValueSerializer" /> supports.</span></span></summary>
        <returns><span data-ttu-id="f49ac-132">Uma nova instância do tipo compatível com a implementação de <see cref="T:System.Windows.Markup.ValueSerializer" /> com base no <paramref name="value" /> fornecido.</span><span class="sxs-lookup"><span data-stu-id="f49ac-132">A new instance of the type that the implementation of <see cref="T:System.Windows.Markup.ValueSerializer" /> supports based on the supplied <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f49ac-133">A implementação base sempre lança uma exceção.</span><span class="sxs-lookup"><span data-stu-id="f49ac-133">The base implementation always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="f49ac-134"><paramref name="value" /> não pode ser convertido.</span><span class="sxs-lookup"><span data-stu-id="f49ac-134"><paramref name="value" /> cannot be converted.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="f49ac-135">Evite lançar exceções de implementações.</span><span class="sxs-lookup"><span data-stu-id="f49ac-135">Avoid throwing exceptions from implementations.</span></span> <span data-ttu-id="f49ac-136">Consulte <see cref="T:System.Windows.Markup.ValueSerializer" />.</span><span class="sxs-lookup"><span data-stu-id="f49ac-136">See <see cref="T:System.Windows.Markup.ValueSerializer" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public virtual string ConvertToString (object value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ConvertToString(object value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertToString (value As Object, context As IValueSerializerContext) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ConvertToString(System::Object ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ConvertToString : obj * System.Windows.Markup.IValueSerializerContext -&gt; string&#xA;override this.ConvertToString : obj * System.Windows.Markup.IValueSerializerContext -&gt; string" Usage="valueSerializer.ConvertToString (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f49ac-137">O objeto a ser convertido em uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="f49ac-137">The object to convert into a string.</span></span></param>
        <param name="context"><span data-ttu-id="f49ac-138">Informações de contexto que são usadas para conversão.</span><span class="sxs-lookup"><span data-stu-id="f49ac-138">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="f49ac-139">Quando substituído em uma classe derivada, converte o objeto especificado em um <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="f49ac-139">When overridden in a derived class, converts the specified object to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="f49ac-140">Uma representação de cadeia de caracteres do objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="f49ac-140">A string representation of the specified object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f49ac-141">A implementação base sempre lança uma exceção.</span><span class="sxs-lookup"><span data-stu-id="f49ac-141">The base implementation always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="f49ac-142"><paramref name="value" /> não pode ser convertido.</span><span class="sxs-lookup"><span data-stu-id="f49ac-142"><paramref name="value" /> cannot be converted.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="f49ac-143">Evite lançar exceções de implementações.</span><span class="sxs-lookup"><span data-stu-id="f49ac-143">Avoid throwing exceptions from implementations.</span></span> <span data-ttu-id="f49ac-144">Consulte <see cref="T:System.Windows.Markup.ValueSerializer" />.</span><span class="sxs-lookup"><span data-stu-id="f49ac-144">See <see cref="T:System.Windows.Markup.ValueSerializer" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetConvertFromException">
      <MemberSignature Language="C#" Value="protected Exception GetConvertFromException (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Exception GetConvertFromException(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetConvertFromException(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetConvertFromException (value As Object) As Exception" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception ^ GetConvertFromException(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.GetConvertFromException : obj -&gt; Exception" Usage="valueSerializer.GetConvertFromException value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f49ac-145">O objeto não pôde ser convertido.</span><span class="sxs-lookup"><span data-stu-id="f49ac-145">The object that could not be converted.</span></span></param>
        <summary><span data-ttu-id="f49ac-146">Retorna uma exceção a ser gerada quando uma conversão não puder ser executada.</span><span class="sxs-lookup"><span data-stu-id="f49ac-146">Returns an exception to throw when a conversion cannot be performed.</span></span></summary>
        <returns><span data-ttu-id="f49ac-147">Um objeto <see cref="T:System.Exception" /> para a exceção a gerar quando uma conversão <see langword="ConvertFrom" /> não pode ser executada.</span><span class="sxs-lookup"><span data-stu-id="f49ac-147">An <see cref="T:System.Exception" /> object for the exception to throw when a <see langword="ConvertFrom" /> conversion cannot be performed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f49ac-148">O valor real `throw` palavra-chave não é invocado por esse método, portanto, o uso típico é `throw GetConvertFromException` (com parâmetros fornecidos).</span><span class="sxs-lookup"><span data-stu-id="f49ac-148">The actual `throw` keyword is not invoked by this method, therefore the typical usage is `throw GetConvertFromException` (with parameters provided).</span></span>  
  
 <span data-ttu-id="f49ac-149">A exceção específica retornado é <xref:System.InvalidOperationException>, com `value` passada na mensagem de exceção.</span><span class="sxs-lookup"><span data-stu-id="f49ac-149">The specific exception returned is <xref:System.InvalidOperationException>, with `value` passed in the exception message.</span></span> <span data-ttu-id="f49ac-150">O padrão para uso é da mesma maneira que os utilitários de exceção no <xref:System.ComponentModel.TypeConverter>.</span><span class="sxs-lookup"><span data-stu-id="f49ac-150">The pattern for usage is the same as for exception utilities in <xref:System.ComponentModel.TypeConverter>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConvertToException">
      <MemberSignature Language="C#" Value="protected Exception GetConvertToException (object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Exception GetConvertToException(object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetConvertToException(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetConvertToException (value As Object, destinationType As Type) As Exception" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception ^ GetConvertToException(System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="member this.GetConvertToException : obj * Type -&gt; Exception" Usage="valueSerializer.GetConvertToException (value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="destinationType" Type="System.Type" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f49ac-151">O objeto não pôde ser convertido.</span><span class="sxs-lookup"><span data-stu-id="f49ac-151">The object that could not be converted.</span></span></param>
        <param name="destinationType"><span data-ttu-id="f49ac-152">Um tipo que representa o tipo no qual a conversão estava tentando converter.</span><span class="sxs-lookup"><span data-stu-id="f49ac-152">A type that represents the type the conversion was trying to convert to.</span></span></param>
        <summary><span data-ttu-id="f49ac-153">Retorna uma exceção a ser gerada quando uma conversão não puder ser executada.</span><span class="sxs-lookup"><span data-stu-id="f49ac-153">Returns an exception to throw when a conversion cannot be performed.</span></span></summary>
        <returns><span data-ttu-id="f49ac-154">Um objeto <see cref="T:System.Exception" /> para a exceção a gerar quando uma conversão <see langword="ConvertTo" /> não pode ser executada.</span><span class="sxs-lookup"><span data-stu-id="f49ac-154">An <see cref="T:System.Exception" /> object for the exception to throw when a <see langword="ConvertTo" /> conversion cannot be performed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f49ac-155">O valor real `throw` palavra-chave não é invocado por esse método, portanto, o uso típico é `throw GetConvertToException` (com `value` parâmetro fornecido).</span><span class="sxs-lookup"><span data-stu-id="f49ac-155">The actual `throw` keyword is not invoked by this method, therefore the typical usage is `throw GetConvertToException` (with `value` parameter provided).</span></span>  
  
 <span data-ttu-id="f49ac-156">A exceção específica retornado é <xref:System.InvalidOperationException>, com `value` passada na mensagem de exceção.</span><span class="sxs-lookup"><span data-stu-id="f49ac-156">The specific exception returned is <xref:System.InvalidOperationException>, with `value` passed in the exception message.</span></span> <span data-ttu-id="f49ac-157">O padrão para uso é da mesma maneira que os utilitários de exceção no <xref:System.ComponentModel.TypeConverter>.</span><span class="sxs-lookup"><span data-stu-id="f49ac-157">The pattern for usage is the same as for exception utilities in <xref:System.ComponentModel.TypeConverter>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSerializerFor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f49ac-158">Obtém o <see cref="T:System.Windows.Markup.ValueSerializer" /> para um objeto.</span><span class="sxs-lookup"><span data-stu-id="f49ac-158">Gets the <see cref="T:System.Windows.Markup.ValueSerializer" /> for an object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSerializerFor">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.ValueSerializer GetSerializerFor (System.ComponentModel.PropertyDescriptor descriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Markup.ValueSerializer GetSerializerFor(class System.ComponentModel.PropertyDescriptor descriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSerializerFor (descriptor As PropertyDescriptor) As ValueSerializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Markup::ValueSerializer ^ GetSerializerFor(System::ComponentModel::PropertyDescriptor ^ descriptor);" />
      <MemberSignature Language="F#" Value="static member GetSerializerFor : System.ComponentModel.PropertyDescriptor -&gt; System.Windows.Markup.ValueSerializer" Usage="System.Windows.Markup.ValueSerializer.GetSerializerFor descriptor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.ValueSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="descriptor" Type="System.ComponentModel.PropertyDescriptor" Index="0" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="descriptor"><span data-ttu-id="f49ac-159">O descritor de propriedade CLR para a propriedade a ser serializada.</span><span class="sxs-lookup"><span data-stu-id="f49ac-159">The CLR property descriptor for the property to be serialized.</span></span></param>
        <summary><span data-ttu-id="f49ac-160">Obtém o <see cref="T:System.Windows.Markup.ValueSerializer" /> declarado para uma propriedade, passando um descritor de propriedade CLR para a propriedade.</span><span class="sxs-lookup"><span data-stu-id="f49ac-160">Gets the <see cref="T:System.Windows.Markup.ValueSerializer" /> declared for a property, by passing a CLR property descriptor for the property.</span></span></summary>
        <returns><span data-ttu-id="f49ac-161">O serializador associado à propriedade especificada.</span><span class="sxs-lookup"><span data-stu-id="f49ac-161">The serializer associated with the specified property.</span></span> <span data-ttu-id="f49ac-162">Pode retornar <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f49ac-162">May return <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f49ac-163">Um <xref:System.Windows.Markup.ValueSerializer> para uma propriedade ou um tipo que é usado como o valor para uma propriedade, é indicado por meio da aplicação de <xref:System.Windows.Markup.ValueSerializerAttribute> atributo na declaração de propriedade ou tipo.</span><span class="sxs-lookup"><span data-stu-id="f49ac-163">A <xref:System.Windows.Markup.ValueSerializer> for a property, or for a type that is used as the value for a property, is indicated by applying the <xref:System.Windows.Markup.ValueSerializerAttribute> attribute on the property or type declaration.</span></span> <span data-ttu-id="f49ac-164">O <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> é um método de utilitário que lê as informações do sistema de tipo CLR e retorna um novo <xref:System.Windows.Markup.ValueSerializer> classe com base no atributo, se encontrado na propriedade ou então, se encontrado no tipo da propriedade.</span><span class="sxs-lookup"><span data-stu-id="f49ac-164">The <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> method is a utility method that reads the CLR type system information and returns a new <xref:System.Windows.Markup.ValueSerializer> class based on the attribute if found on the property, or then if found on the property's type.</span></span> <span data-ttu-id="f49ac-165">`null` pode ser retornado se nenhum serializador tal existe.</span><span class="sxs-lookup"><span data-stu-id="f49ac-165">`null` might be returned if no such serializer exists.</span></span> <span data-ttu-id="f49ac-166">`null` também pode ser retornado se um tipo ou propriedade deliberadamente é atribuída com um valor null <xref:System.Windows.Markup.ValueSerializerAttribute>.</span><span class="sxs-lookup"><span data-stu-id="f49ac-166">`null` might also be returned if a type or property is deliberately attributed with a null-value <xref:System.Windows.Markup.ValueSerializerAttribute>.</span></span>  
  
 <span data-ttu-id="f49ac-167">Outro modo que <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> dá suporte a está retornando interna `TypeConverterValueSerializer` classe, que é um <xref:System.Windows.Markup.ValueSerializer> implementação que encapsula uma <xref:System.ComponentModel.TypeConverter> e converte os `Convert` métodos para `Convert*String` métodos (por exemplo <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType>é chamado com a entrada do <xref:System.String> de tipo e se traduz em <xref:System.Windows.Markup.ValueSerializer.ConvertToString%2A>.</span><span class="sxs-lookup"><span data-stu-id="f49ac-167">Another mode that <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> supports is returning the internal `TypeConverterValueSerializer` class, which is a <xref:System.Windows.Markup.ValueSerializer> implementation that wraps a <xref:System.ComponentModel.TypeConverter> and translates the `Convert` methods to `Convert*String` methods (for instance <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType> is called with input of the <xref:System.String> type, and translates to <xref:System.Windows.Markup.ValueSerializer.ConvertToString%2A>.</span></span> <span data-ttu-id="f49ac-168">Isso é feito apenas em casos em que todos os itens a seguir forem verdadeiras:</span><span class="sxs-lookup"><span data-stu-id="f49ac-168">This is done only in cases where all of the following are true:</span></span>  
  
-   <span data-ttu-id="f49ac-169">Um <xref:System.ComponentModel.TypeConverterAttribute> for encontrado na propriedade relevante ou o tipo da propriedade relevante.</span><span class="sxs-lookup"><span data-stu-id="f49ac-169">A <xref:System.ComponentModel.TypeConverterAttribute> is found on the relevant property, or the relevant property's type.</span></span>  
  
-   <span data-ttu-id="f49ac-170">Indicado <xref:System.ComponentModel.TypeConverter> pode ser criada com êxito.</span><span class="sxs-lookup"><span data-stu-id="f49ac-170">The indicated <xref:System.ComponentModel.TypeConverter> can be successfully constructed.</span></span>  
  
-   <span data-ttu-id="f49ac-171">O <xref:System.ComponentModel.TypeConverter> retorna `true` para <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType>, chamado referenciando o <xref:System.String> tipo.</span><span class="sxs-lookup"><span data-stu-id="f49ac-171">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
-   <span data-ttu-id="f49ac-172">O <xref:System.ComponentModel.TypeConverter> retorna `true` para <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A?displayProperty=nameWithType>, chamado referenciando o <xref:System.String> tipo.</span><span class="sxs-lookup"><span data-stu-id="f49ac-172">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
-   <span data-ttu-id="f49ac-173">O <xref:System.ComponentModel.TypeConverter> retorna `true` para <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A?displayProperty=nameWithType>, chamado referenciando o <xref:System.String> tipo.</span><span class="sxs-lookup"><span data-stu-id="f49ac-173">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f49ac-174">A seguir é casos especiais: <xref:System.DateTime> tipos de retorno de um <xref:System.Windows.Markup.DateTimeValueSerializer>; <xref:System.String> tipos de retorno um serializador interno, porém funcional (`StringValueSerializer`).</span><span class="sxs-lookup"><span data-stu-id="f49ac-174">The following are special cases: <xref:System.DateTime> types return a <xref:System.Windows.Markup.DateTimeValueSerializer>; <xref:System.String> types return an internal but functional serializer (`StringValueSerializer`).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f49ac-175"><paramref name="descriptor" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f49ac-175"><paramref name="descriptor" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSerializerFor">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.ValueSerializer GetSerializerFor (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Markup.ValueSerializer GetSerializerFor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Markup::ValueSerializer ^ GetSerializerFor(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetSerializerFor : Type -&gt; System.Windows.Markup.ValueSerializer" Usage="System.Windows.Markup.ValueSerializer.GetSerializerFor type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.ValueSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="f49ac-176">O tipo para o qual obter <see cref="T:System.Windows.Markup.ValueSerializer" />.</span><span class="sxs-lookup"><span data-stu-id="f49ac-176">The type to get the <see cref="T:System.Windows.Markup.ValueSerializer" /> for.</span></span></param>
        <summary><span data-ttu-id="f49ac-177">Obtém o <see cref="T:System.Windows.Markup.ValueSerializer" /> declarado para o tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="f49ac-177">Gets the <see cref="T:System.Windows.Markup.ValueSerializer" /> declared for the specified type.</span></span></summary>
        <returns><span data-ttu-id="f49ac-178">O serializador associado ao tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="f49ac-178">The serializer associated with the specified type.</span></span> <span data-ttu-id="f49ac-179">Pode retornar <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f49ac-179">May return <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f49ac-180">Um <xref:System.Windows.Markup.ValueSerializer> para um tipo é indicado por meio da aplicação de <xref:System.Windows.Markup.ValueSerializerAttribute> atributo na declaração de tipo.</span><span class="sxs-lookup"><span data-stu-id="f49ac-180">A <xref:System.Windows.Markup.ValueSerializer> for a type is indicated by applying the <xref:System.Windows.Markup.ValueSerializerAttribute> attribute on the type declaration.</span></span> <span data-ttu-id="f49ac-181">O <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> é um método de utilitário que lê as informações do sistema de tipo CLR e retorna um novo <xref:System.Windows.Markup.ValueSerializer> classe com base no atributo, se encontrado na especificado `type`.</span><span class="sxs-lookup"><span data-stu-id="f49ac-181">The <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> method is a utility method that reads the CLR type system information and returns a new <xref:System.Windows.Markup.ValueSerializer> class based on the attribute if found on the specified `type`.</span></span> <span data-ttu-id="f49ac-182">`null` pode ser retornado se nenhum serializador tal existe.</span><span class="sxs-lookup"><span data-stu-id="f49ac-182">`null` might be returned if no such serializer exists.</span></span> <span data-ttu-id="f49ac-183">`null` também pode ser retornado se um tipo deliberadamente é atribuído com um valor null <xref:System.Windows.Markup.ValueSerializerAttribute>.</span><span class="sxs-lookup"><span data-stu-id="f49ac-183">`null` might also be returned if a type is deliberately attributed with a null-value <xref:System.Windows.Markup.ValueSerializerAttribute>.</span></span>  
  
 <span data-ttu-id="f49ac-184">Outro modo que <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> dá suporte a está retornando interna `TypeConverterValueSerializer` classe, que é um <xref:System.Windows.Markup.ValueSerializer> implementação que encapsula uma <xref:System.ComponentModel.TypeConverter> e converte os `Convert` métodos para `Convert*String` métodos (por exemplo <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType>é chamado com a entrada do <xref:System.String> de tipo e se traduz em <xref:System.Windows.Markup.ValueSerializer.ConvertToString%2A>.</span><span class="sxs-lookup"><span data-stu-id="f49ac-184">Another mode that <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> supports is returning the internal `TypeConverterValueSerializer` class, which is a <xref:System.Windows.Markup.ValueSerializer> implementation that wraps a <xref:System.ComponentModel.TypeConverter> and translates the `Convert` methods to `Convert*String` methods (for instance <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType> is called with input of the <xref:System.String> type, and translates to <xref:System.Windows.Markup.ValueSerializer.ConvertToString%2A>.</span></span> <span data-ttu-id="f49ac-185">Isso é feito apenas em casos em que todos os itens a seguir forem verdadeiras:</span><span class="sxs-lookup"><span data-stu-id="f49ac-185">This is done only in cases where all of the following are true:</span></span>  
  
-   <span data-ttu-id="f49ac-186">Um <xref:System.ComponentModel.TypeConverterAttribute> é encontrado no `type`.</span><span class="sxs-lookup"><span data-stu-id="f49ac-186">A <xref:System.ComponentModel.TypeConverterAttribute> is found on `type`.</span></span>  
  
-   <span data-ttu-id="f49ac-187">Indicado <xref:System.ComponentModel.TypeConverter> pode ser criada com êxito.</span><span class="sxs-lookup"><span data-stu-id="f49ac-187">The indicated <xref:System.ComponentModel.TypeConverter> can be successfully constructed.</span></span>  
  
-   <span data-ttu-id="f49ac-188">O <xref:System.ComponentModel.TypeConverter> retorna `true` para <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType>, chamado referenciando o <xref:System.String> tipo.</span><span class="sxs-lookup"><span data-stu-id="f49ac-188">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
-   <span data-ttu-id="f49ac-189">O <xref:System.ComponentModel.TypeConverter> retorna `true` para <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A?displayProperty=nameWithType>, chamado referenciando o <xref:System.String> tipo.</span><span class="sxs-lookup"><span data-stu-id="f49ac-189">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
-   <span data-ttu-id="f49ac-190">O <xref:System.ComponentModel.TypeConverter> retorna `true` para <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A?displayProperty=nameWithType>, chamado referenciando o <xref:System.String> tipo.</span><span class="sxs-lookup"><span data-stu-id="f49ac-190">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f49ac-191">A seguir é casos especiais: <xref:System.DateTime> tipos de retorno de um <xref:System.Windows.Markup.DateTimeValueSerializer>; <xref:System.String> tipos de retorno um serializador interno, porém funcional (`StringValueSerializer`).</span><span class="sxs-lookup"><span data-stu-id="f49ac-191">The following are special cases: <xref:System.DateTime> types return a <xref:System.Windows.Markup.DateTimeValueSerializer>; <xref:System.String> types return an internal but functional serializer (`StringValueSerializer`).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f49ac-192"><paramref name="type" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f49ac-192"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSerializerFor">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.ValueSerializer GetSerializerFor (System.ComponentModel.PropertyDescriptor descriptor, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Markup.ValueSerializer GetSerializerFor(class System.ComponentModel.PropertyDescriptor descriptor, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.ComponentModel.PropertyDescriptor,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSerializerFor (descriptor As PropertyDescriptor, context As IValueSerializerContext) As ValueSerializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Markup::ValueSerializer ^ GetSerializerFor(System::ComponentModel::PropertyDescriptor ^ descriptor, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="static member GetSerializerFor : System.ComponentModel.PropertyDescriptor * System.Windows.Markup.IValueSerializerContext -&gt; System.Windows.Markup.ValueSerializer" Usage="System.Windows.Markup.ValueSerializer.GetSerializerFor (descriptor, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.ValueSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="descriptor" Type="System.ComponentModel.PropertyDescriptor" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="descriptor"><span data-ttu-id="f49ac-193">Descritor da propriedade a ser serializada.</span><span class="sxs-lookup"><span data-stu-id="f49ac-193">Descriptor for the property to be serialized.</span></span></param>
        <param name="context"><span data-ttu-id="f49ac-194">Informações de contexto que são usadas para conversão.</span><span class="sxs-lookup"><span data-stu-id="f49ac-194">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="f49ac-195">Obtém o <see cref="T:System.Windows.Markup.ValueSerializer" /> declarado para a propriedade especificada usando o contexto especificado.</span><span class="sxs-lookup"><span data-stu-id="f49ac-195">Gets the <see cref="T:System.Windows.Markup.ValueSerializer" /> declared for the specified property, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="f49ac-196">O serializador associado à propriedade especificada.</span><span class="sxs-lookup"><span data-stu-id="f49ac-196">The serializer associated with the specified property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f49ac-197">Em vez de depender exclusivamente em atributos informados no sistema de tipos CLR, essa sobrecarga usa o `context` como um serviço e chama a implementação do serviço de <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f49ac-197">Rather than relying purely on attributes reported in the CLR type system, this overload uses the `context` as a service, and calls the service's implementation of <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="f49ac-198">O <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> implementação também geralmente confiarão no `descriptor`, mas pode implementar um comportamento especial para determinados contextos.</span><span class="sxs-lookup"><span data-stu-id="f49ac-198">The <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> implementation would typically also rely on the `descriptor`, but might implement special behavior for certain contexts.</span></span>  
  
 <span data-ttu-id="f49ac-199">Esse método deve ser chamado quando o chamador tiver uma disponível <xref:System.Windows.Markup.IValueSerializerContext> de um serviço.</span><span class="sxs-lookup"><span data-stu-id="f49ac-199">This method should be called when the caller has an available <xref:System.Windows.Markup.IValueSerializerContext> from a service.</span></span>  <span data-ttu-id="f49ac-200">Isso garantirá que o correto <xref:System.Windows.Markup.ValueSerializer> é retornado para o contexto específico.</span><span class="sxs-lookup"><span data-stu-id="f49ac-200">This will ensure that the correct <xref:System.Windows.Markup.ValueSerializer> is returned for the specific context.</span></span>  
  
 <span data-ttu-id="f49ac-201">Se retornar o contexto `null` de seu <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> seu especificado `descriptor`, ou se o contexto em que você especificar for `null`, em seguida, o comportamento é idêntico ao chamar o <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%28System.ComponentModel.PropertyDescriptor%29> sobrecarregar.</span><span class="sxs-lookup"><span data-stu-id="f49ac-201">If the context returns `null` from its <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> for your specified `descriptor`, or if the context you specify is `null`, then behavior is identical to calling the <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%28System.ComponentModel.PropertyDescriptor%29> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f49ac-202"><paramref name="descriptor" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f49ac-202"><paramref name="descriptor" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSerializerFor">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.ValueSerializer GetSerializerFor (Type type, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Markup.ValueSerializer GetSerializerFor(class System.Type type, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.Type,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Markup::ValueSerializer ^ GetSerializerFor(Type ^ type, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="static member GetSerializerFor : Type * System.Windows.Markup.IValueSerializerContext -&gt; System.Windows.Markup.ValueSerializer" Usage="System.Windows.Markup.ValueSerializer.GetSerializerFor (type, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.ValueSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="f49ac-203">O tipo para o qual obter <see cref="T:System.Windows.Markup.ValueSerializer" />.</span><span class="sxs-lookup"><span data-stu-id="f49ac-203">The type to get the <see cref="T:System.Windows.Markup.ValueSerializer" /> for.</span></span></param>
        <param name="context"><span data-ttu-id="f49ac-204">Informações de contexto que são usadas para conversão.</span><span class="sxs-lookup"><span data-stu-id="f49ac-204">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="f49ac-205">Obtém o <see cref="T:System.Windows.Markup.ValueSerializer" /> declarado para o tipo especificado usando o contexto especificado.</span><span class="sxs-lookup"><span data-stu-id="f49ac-205">Gets the <see cref="T:System.Windows.Markup.ValueSerializer" /> declared for the specified type, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="f49ac-206">O serializador associado ao tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="f49ac-206">The serializer associated with the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f49ac-207">Em vez de depender exclusivamente em atributos informados no sistema de tipos CLR, essa sobrecarga usa o `context` como um serviço e chama a implementação do serviço de <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f49ac-207">Rather than relying purely on attributes reported in the CLR type system, this overload uses the `context` as a service, and calls the service's implementation of <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="f49ac-208">O <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> implementação também geralmente confiarão no `type`, mas pode implementar um comportamento especial para determinados contextos.</span><span class="sxs-lookup"><span data-stu-id="f49ac-208">The <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> implementation would typically also rely on the `type`, but might implement special behavior for certain contexts.</span></span>  
  
 <span data-ttu-id="f49ac-209">Esse método deve ser chamado quando o chamador tiver uma disponível <xref:System.Windows.Markup.IValueSerializerContext> de um serviço.</span><span class="sxs-lookup"><span data-stu-id="f49ac-209">This method should be called when the caller has an available <xref:System.Windows.Markup.IValueSerializerContext> from a service.</span></span> <span data-ttu-id="f49ac-210">Isso garantirá que o correto <xref:System.Windows.Markup.ValueSerializer> é retornado para o contexto específico.</span><span class="sxs-lookup"><span data-stu-id="f49ac-210">This will ensure that the correct <xref:System.Windows.Markup.ValueSerializer> is returned for the specific context.</span></span>  
  
 <span data-ttu-id="f49ac-211">Se retornar o contexto `null` de seu <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> seu especificado `type`, ou se o contexto em que você especificar for `null`, em seguida, o comportamento é idêntico ao chamar o <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%28System.Type%29> sobrecarregar.</span><span class="sxs-lookup"><span data-stu-id="f49ac-211">If the context returns `null` from its <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> for your specified `type`, or if the context you specify is `null`, then behavior is identical to calling the <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%28System.Type%29> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f49ac-212"><paramref name="type" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f49ac-212"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TypeReferences">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Type&gt; TypeReferences (object value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; TypeReferences(object value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.TypeReferences(System.Object,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TypeReferences (value As Object, context As IValueSerializerContext) As IEnumerable(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ TypeReferences(System::Object ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member TypeReferences : obj * System.Windows.Markup.IValueSerializerContext -&gt; seq&lt;Type&gt;&#xA;override this.TypeReferences : obj * System.Windows.Markup.IValueSerializerContext -&gt; seq&lt;Type&gt;" Usage="valueSerializer.TypeReferences (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f49ac-213">O valor que está sendo serializado.</span><span class="sxs-lookup"><span data-stu-id="f49ac-213">The value being serialized.</span></span></param>
        <param name="context"><span data-ttu-id="f49ac-214">Informações de contexto que são usadas para conversão.</span><span class="sxs-lookup"><span data-stu-id="f49ac-214">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="f49ac-215">Obtém uma enumeração dos tipos referenciados pelo <see cref="T:System.Windows.Markup.ValueSerializer" />.</span><span class="sxs-lookup"><span data-stu-id="f49ac-215">Gets an enumeration of the types referenced by the <see cref="T:System.Windows.Markup.ValueSerializer" />.</span></span></summary>
        <returns><span data-ttu-id="f49ac-216">Os tipos de convertidos por este serializador.</span><span class="sxs-lookup"><span data-stu-id="f49ac-216">The types converted by this serializer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f49ac-217">Todos os tipos um <xref:System.Windows.Markup.ValueSerializer> converte deve ser incluídos na enumeração retornada.</span><span class="sxs-lookup"><span data-stu-id="f49ac-217">Any types a <xref:System.Windows.Markup.ValueSerializer> converts should be included in the returned enumeration.</span></span>  <span data-ttu-id="f49ac-218">Isso permite que um serializador garantir que um serializador eliminação tem informações suficientes sobre os tipos converte este serializador.</span><span class="sxs-lookup"><span data-stu-id="f49ac-218">This allows a serializer to ensure a de-serializer has enough information about the types this serializer converts.</span></span>  
  
 <span data-ttu-id="f49ac-219">Substituir esse método é um cenário avançado.</span><span class="sxs-lookup"><span data-stu-id="f49ac-219">Overriding this method is an advanced scenario.</span></span> <span data-ttu-id="f49ac-220">Substituindo é necessária somente se você estiver implementando um sistema onde relacionamentos sistema de propriedade ownertype do tipo CLR disponíveis para um contexto de esquema XAML não relatam informações suficientes.</span><span class="sxs-lookup"><span data-stu-id="f49ac-220">Overriding should only be necessary if you are implementing a system where CLR type system ownertype-property relationships available to a XAML schema context do not report enough information.</span></span>  
  
## <a name="wpf-usage-notes"></a><span data-ttu-id="f49ac-221">Notas de uso do WPF</span><span class="sxs-lookup"><span data-stu-id="f49ac-221">WPF Usage Notes</span></span>  
 <span data-ttu-id="f49ac-222">O [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] sistema de propriedade implementa um serializador de valor interno que substitui <xref:System.Windows.Markup.ValueSerializer.TypeReferences%2A> porque uma propriedade de dependência tem um conceito que ele pode ter adicionado os proprietários.</span><span class="sxs-lookup"><span data-stu-id="f49ac-222">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] property system implements an internal value serializer that overrides <xref:System.Windows.Markup.ValueSerializer.TypeReferences%2A> because a dependency property has a concept that it can have added owners.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="f49ac-223">expressões também têm tratamento interno especial.</span><span class="sxs-lookup"><span data-stu-id="f49ac-223">expressions also have special internal handling.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>