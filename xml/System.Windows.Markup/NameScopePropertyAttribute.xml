<Type Name="NameScopePropertyAttribute" FullName="System.Windows.Markup.NameScopePropertyAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ad93a9b8727d84dae0cbbbc8ab9c593ef045fdc0" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53510188" /></Metadata><TypeSignature Language="C#" Value="public sealed class NameScopePropertyAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit NameScopePropertyAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.NameScopePropertyAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class NameScopePropertyAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class NameScopePropertyAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type NameScopePropertyAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=false, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Especifica uma propriedade da classe associada que fornece o valor do namescope XAML.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Em um modelo de objeto típico / combinação de modelo de aplicativo em que o XAML é usado, as classes que são usados como um namescope XAML são as classes que geralmente são usados como elementos raiz, ou que dão suporte a uma metáfora de página. Essas classes implementam geralmente <xref:System.Windows.Markup.INameScope> e o namescope XAML é criado correspondente à raiz pelo comportamento típico do processamento de XAML no contexto do modelo de programação de uma estrutura e modelo de aplicativo.  
  
 Se <xref:System.Windows.Markup.NameScopePropertyAttribute> é usado, o valor da propriedade namescope XAML deve ser um objeto que implementa <xref:System.Windows.Markup.INameScope> e mantém o namescope XAML real e seu comportamento.  
  
 Há duas formas para este atributo: nome da propriedade apenas, ou o tipo e a propriedade. A segunda forma deve ser usada apenas para casos em que a propriedade que contém o escopo do nome XAML é um membro anexável. A técnica de membro anexada tem a vantagem que as classes de serviço podem implementar um conceito de namescope XAML que pode dar suporte a vários tipos de objeto diferente. Esses tipos de objeto, em seguida, é preciso estar explicitamente relacionados de herança de classe.  
  
 Nas versões anteriores do .NET Framework, essa classe já existe no assembly WindowsBase específicas do WPF. Na [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.NameScopePropertyAttribute> está no assembly System. XAML. Para obter mais informações, consulte [tipos migrados do WPF para System. XAML](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).  
  
## <a name="wpf-usage-notes"></a>Notas de uso do WPF  
 No WPF, esse atributo é aplicado a apenas um único tipo <xref:System.Windows.DependencyObject>. Nesse caso, a propriedade atribuída é a classe de serviço <xref:System.Windows.NameScope> e seu <xref:System.Windows.NameScope.NameScope%2A?displayProperty=nameWithType> propriedade anexada.  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/5dfb299a-b6e2-41b8-8694-e6ac987547f1">Atributos CLR relacionados a XAML para tipos personalizados e bibliotecas</related>
    <related type="Article" href="https://msdn.microsoft.com/library/c2667cbd-2f46-4a7f-9dfc-53696e35e8e4">Definindo tipos personalizados para uso com serviços XAML do .NET Framework</related>
    <related type="Article" href="https://msdn.microsoft.com/library/0e11f386-808c-4eae-9ba6-029ad7ba2211">Documentação conceitual de serviços XAML do NET</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.NameScopePropertyAttribute" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NameScopePropertyAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.NameScopePropertyAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NameScopePropertyAttribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Windows.Markup.NameScopePropertyAttribute : string -&gt; System.Windows.Markup.NameScopePropertyAttribute" Usage="new System.Windows.Markup.NameScopePropertyAttribute name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">O nome da propriedade no tipo atribuído que fornece o namescope XAML.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.NameScopePropertyAttribute" /> com o nome especificado.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NameScopePropertyAttribute (string name, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.NameScopePropertyAttribute.#ctor(System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NameScopePropertyAttribute(System::String ^ name, Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Windows.Markup.NameScopePropertyAttribute : string * Type -&gt; System.Windows.Markup.NameScopePropertyAttribute" Usage="new System.Windows.Markup.NameScopePropertyAttribute (name, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="name">O nome do membro anexável que fornece o escopo do nome XAML.</param>
        <param name="type">O tipo de proprietário do membro anexável que fornece o escopo do nome XAML.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.NameScopePropertyAttribute" /> com o nome e tipo especificados.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.NameScopePropertyAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Windows.Markup.NameScopePropertyAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o nome da propriedade que fornece o namescope XAML.</summary>
        <value>Um valor de cadeia de caracteres que é o nome da propriedade que fornece o namescope XAML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O significado dos <xref:System.Windows.Markup.NameScopePropertyAttribute.Name%2A> depende se <xref:System.Windows.Markup.NameScopePropertyAttribute.Type%2A> está definido. Se <xref:System.Windows.Markup.NameScopePropertyAttribute.Type%2A> for nulo, em seguida, <xref:System.Windows.Markup.NameScopePropertyAttribute.Name%2A> faz referência a uma propriedade no tipo que está sendo atribuído. Se <xref:System.Windows.Markup.NameScopePropertyAttribute.Type%2A> contiver um valor, então <xref:System.Windows.Markup.NameScopePropertyAttribute.Name%2A> faz referência a uma propriedade em indicado <xref:System.Windows.Markup.NameScopePropertyAttribute.Type%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.NameScopePropertyAttribute.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : Type" Usage="System.Windows.Markup.NameScopePropertyAttribute.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o tipo de proprietário da propriedade anexada que fornece o suporte de namescope XAML.</summary>
        <value>Um <see cref="T:System.Type" /> valor que é o tipo de proprietário da propriedade anexada que fornece o suporte de namescope XAML, ou <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa propriedade só é relevante se a propriedade de implementação de namescope XAML é um membro anexável, nesse caso, isso é o tipo de proprietário do membro anexável. Caso contrário, esse valor pode ser nulo. Se você precisar de lógica com base em reflexão geral que relata uma propriedade de namescope da definição de tipo em todos os casos, você pode substituir o tipo no qual o atributo é aplicado sempre que você encontrar `null` para essa propriedade.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>