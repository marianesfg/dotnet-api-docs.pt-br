<Type Name="IReceiveMarkupExtension" FullName="System.Windows.Markup.IReceiveMarkupExtension">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0d590f413cad5fd1e1bf753c645edf4ec35b2826" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30655390" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IReceiveMarkupExtension" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IReceiveMarkupExtension" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.IReceiveMarkupExtension" />
  <TypeSignature Language="VB.NET" Value="Public Interface IReceiveMarkupExtension" />
  <TypeSignature Language="C++ CLI" Value="public interface class IReceiveMarkupExtension" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("IReceiveMarkupExtension has been deprecated. This interface is no longer in use.")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fornece um mecanismo pelo qual tipos podem declarar que estão aptos a receber uma expressão (ou outra classe) de uma extensão de marcação, em que a saída é um tipo de propriedade diferente da propriedade de destino. Não use para implementações do .NET Framework 4.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Em [!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)], <xref:System.Windows.Markup.IReceiveMarkupExtension> foi uma técnica específica do WPF para permitir que tipos de inserir um caminho de código diferente sempre que qualquer um de seus membros XAML acessível onde definir como extensões de marcação durante a análise de XAML. Em [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], essa interface está obsoleta e será substituído por uma implementação de serviços XAML do .NET Framework para como extensões de marcação podem receber serviços ou tipos podem invocar a lógica de setter específico de extensão de marcação.  
  
 Para [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] implementações, se tipos de executar um processamento especial ao definir propriedades por extensão de marcação em vez de por outros meios, tipos devem ser definidos com <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute> atributos aplicados. O atributo especifica um retorno de chamada, que normalmente é definido como um membro privado do tipo.  
  
 Em implementações de infraestrutura de classes do WPF, mais casos onde <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute> é aplicado a referência um `ReceiveMarkupExtension` método implementado anteriormente nesta interface, mas agora em vez disso, usar o contexto usando o retorno de chamada.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Markup.XamlSetMarkupExtensionAttribute" />
    <altmember cref="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs" />
  </Docs>
  <Members>
    <Member MemberName="ReceiveMarkupExtension">
      <MemberSignature Language="C#" Value="public void ReceiveMarkupExtension (string property, System.Windows.Markup.MarkupExtension markupExtension, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReceiveMarkupExtension(string property, class System.Windows.Markup.MarkupExtension markupExtension, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.IReceiveMarkupExtension.ReceiveMarkupExtension(System.String,System.Windows.Markup.MarkupExtension,System.IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReceiveMarkupExtension(System::String ^ property, System::Windows::Markup::MarkupExtension ^ markupExtension, IServiceProvider ^ serviceProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.String" />
        <Parameter Name="markupExtension" Type="System.Windows.Markup.MarkupExtension" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="property">O nome da propriedade de destino.</param>
        <param name="markupExtension">A instância da extensão de marcação dos dados de entrada.</param>
        <param name="serviceProvider">Pode fornecer serviços adicionais que devem ser executados durante o processamento de dados de extensão de marcação para um valor da propriedade.</param>
        <summary>Fornece a manipulação para extensões de marcação que fornecem valores de propriedade. Não use para implementações do [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]; consulte <see cref="T:System.Windows.Markup.IReceiveMarkupExtension" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>