<Type Name="UsableDuringInitializationAttribute" FullName="System.Windows.Markup.UsableDuringInitializationAttribute">
  <TypeSignature Language="C#" Value="public sealed class UsableDuringInitializationAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit UsableDuringInitializationAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.UsableDuringInitializationAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class UsableDuringInitializationAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class UsableDuringInitializationAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=false, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a96fd-101">Indica se este tipo é criado de cima para baixo durante a criação do gráfico de objeto XAML.</span><span class="sxs-lookup"><span data-stu-id="a96fd-101">Indicates whether this type is built top-down during XAML object graph creation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a96fd-102">De cima para baixo é uma metáfora que aproxima o comportamento do processador de XAML ao criar o gráfico de objeto.</span><span class="sxs-lookup"><span data-stu-id="a96fd-102">Top-down is a metaphor that approximates XAML processor behavior when creating the object graph.</span></span> <span data-ttu-id="a96fd-103">Quando criado de cima para baixo, uma classe é instanciada, anexados para o pai, e, em seguida, configurou suas propriedades.</span><span class="sxs-lookup"><span data-stu-id="a96fd-103">When built top-down, a class is instantiated, attached to the parent, and then has its properties set.</span></span> <span data-ttu-id="a96fd-104">Construção de cima para baixo evita invocar os manipuladores de propriedade alterada várias vezes.</span><span class="sxs-lookup"><span data-stu-id="a96fd-104">Top-down construction avoids invoking property-changed handlers multiple times.</span></span> <span data-ttu-id="a96fd-105">Esse tratamento se propagará o gráfico do objeto e, portanto, eliminando as várias chamadas de manipulador fornece uma otimização de desempenho da inicialização do gráfico do objeto.</span><span class="sxs-lookup"><span data-stu-id="a96fd-105">Such handling will ripple up the object graph and therefore eliminating the multiple handler calls provides a performance optimization for startup of the object graph.</span></span>  
  
 <span data-ttu-id="a96fd-106">Nas versões anteriores do .NET Framework, essa classe existia no assembly específicos de WPF WindowsBase.</span><span class="sxs-lookup"><span data-stu-id="a96fd-106">In previous versions of the .NET Framework, this class existed in the WPF-specific assembly WindowsBase.</span></span> <span data-ttu-id="a96fd-107">Em [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.UsableDuringInitializationAttribute> está no assembly System. XAML.</span><span class="sxs-lookup"><span data-stu-id="a96fd-107">In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.UsableDuringInitializationAttribute> is in the System.Xaml assembly.</span></span> <span data-ttu-id="a96fd-108">Para obter mais informações, consulte [tipos migrados do WPF para System. XAML](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span><span class="sxs-lookup"><span data-stu-id="a96fd-108">For more information, see [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span></span>  
  
## <a name="wpf-usage-notes"></a><span data-ttu-id="a96fd-109">Notas de uso do WPF</span><span class="sxs-lookup"><span data-stu-id="a96fd-109">WPF Usage Notes</span></span>  
 <span data-ttu-id="a96fd-110">Em WPF XAML para [!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)] e [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)], construção de cima para baixo foi interna do XAML processamento para determinadas classes.</span><span class="sxs-lookup"><span data-stu-id="a96fd-110">In WPF XAML for [!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)] and [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)], top-down construction was built in to the XAML processing for certain classes.</span></span> <span data-ttu-id="a96fd-111">O <xref:System.Windows.Markup.UsableDuringInitializationAttribute> atributo formaliza reporting do comportamento de cima para baixo em [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)].</span><span class="sxs-lookup"><span data-stu-id="a96fd-111">The <xref:System.Windows.Markup.UsableDuringInitializationAttribute> attribute formalizes the reporting of the top-down behavior in [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)].</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.FrameworkElement" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UsableDuringInitializationAttribute (bool usable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool usable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.UsableDuringInitializationAttribute.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (usable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UsableDuringInitializationAttribute(bool usable);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="usable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="usable"><span data-ttu-id="a96fd-112">Define se a classe associada pode ser usada durante a inicialização.</span><span class="sxs-lookup"><span data-stu-id="a96fd-112">Defines whether the associated class is usable during initialization.</span></span></param>
        <summary><span data-ttu-id="a96fd-113">Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.UsableDuringInitializationAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="a96fd-113">Initializes a new instance of the <see cref="T:System.Windows.Markup.UsableDuringInitializationAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a96fd-114">Herda esse atributo.</span><span class="sxs-lookup"><span data-stu-id="a96fd-114">This attribute inherits.</span></span> <span data-ttu-id="a96fd-115">Para o aplicativo inicial seria aplicada normalmente como `[UsableDuringInitialization(true)]`, mas, em seguida, você pode definir `[UsableDuringInitialization(false)]` em uma classe derivada para alterar a classe derivada de relatórios do comportamento.</span><span class="sxs-lookup"><span data-stu-id="a96fd-115">For the initial application you would typically apply as `[UsableDuringInitialization(true)]`, but you could then set `[UsableDuringInitialization(false)]` on a derived class to change the derived class reporting of the behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Usable">
      <MemberSignature Language="C#" Value="public bool Usable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Usable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.UsableDuringInitializationAttribute.Usable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Usable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Usable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a96fd-116">Obtém um valor que indica se a classe associada pode ser usada durante a inicialização.</span><span class="sxs-lookup"><span data-stu-id="a96fd-116">Gets a value that indicates whether the associated class is usable during initialization.</span></span></summary>
        <value>
          <span data-ttu-id="a96fd-117"><see langword="true" /> Se a classe associada é útil durante a inicialização; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a96fd-117"><see langword="true" /> if the associated class is usable during initialization; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>