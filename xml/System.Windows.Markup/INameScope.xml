<Type Name="INameScope" FullName="System.Windows.Markup.INameScope">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ac045db164c4d2d4320bd924bd6f858a4e66c0aa" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52239072" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface INameScope" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract INameScope" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.INameScope" />
  <TypeSignature Language="VB.NET" Value="Public Interface INameScope" />
  <TypeSignature Language="C++ CLI" Value="public interface class INameScope" />
  <TypeSignature Language="F#" Value="type INameScope = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="a27cc-101">Define um contrato de como nomes de elementos devem ser acessados dentro de um determinado namescope XAML e como impor exclusividade dos nomes dentro desse namescope XAML.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a27cc-101">Defines a contract for how names of elements should be accessed within a particular XAML namescope, and how to enforce uniqueness of names within that XAML namescope.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a27cc-102">Essa interface é implementada por classes que têm elementos filho que se destinam a ser reutilizado por meio do modelo ou adiar a metáfora.</span><span class="sxs-lookup"><span data-stu-id="a27cc-102">This interface is implemented by classes that have child elements that are intended to be reused through the template or defer metaphor.</span></span> <span data-ttu-id="a27cc-103">Modelos, fábricas e construções semelhantes devem ter exclusivos namescopes XAML que são separadas de um grafo de objeto principal e raiz XAML.</span><span class="sxs-lookup"><span data-stu-id="a27cc-103">Templates, factories and similar constructs must have unique XAML namescopes that are separate from a main object graph and root XAML.</span></span> <span data-ttu-id="a27cc-104">O princípio aqui é que não deve haver nenhum colisões de nome quando objetos criados a partir desses elementos filhos são introduzidos no grafo de objeto do aplicativo, e para que operações DOM e técnicas de referência XAML que contam com o identificador de nome podem contar com nome exclusividade em cada namescope XAML.</span><span class="sxs-lookup"><span data-stu-id="a27cc-104">The principle here is that there should be no name collisions when objects created from those child elements are introduced to an application's object graph, and so that DOM operations and XAML reference techniques that rely on the name identifier can rely on name uniqueness in each XAML namescope.</span></span>  
  
 <span data-ttu-id="a27cc-105">Nas versões anteriores do .NET Framework, essa interface já existe no assembly WindowsBase específicas do WPF.</span><span class="sxs-lookup"><span data-stu-id="a27cc-105">In previous versions of the .NET Framework, this interface existed in the WPF-specific assembly WindowsBase.</span></span> <span data-ttu-id="a27cc-106">Na [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.INameScope> está no assembly System. XAML.</span><span class="sxs-lookup"><span data-stu-id="a27cc-106">In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.INameScope> is in the System.Xaml assembly.</span></span> <span data-ttu-id="a27cc-107">Para obter mais informações, consulte [tipos migrados do WPF para System. XAML](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span><span class="sxs-lookup"><span data-stu-id="a27cc-107">For more information, see [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span></span>  
  
## <a name="wpf-usage-notes"></a><span data-ttu-id="a27cc-108">Notas de uso do WPF</span><span class="sxs-lookup"><span data-stu-id="a27cc-108">WPF Usage Notes</span></span>  
 <span data-ttu-id="a27cc-109">Essa interface é implementada pela classe WPF <xref:System.Windows.NameScope>.</span><span class="sxs-lookup"><span data-stu-id="a27cc-109">This interface is implemented by the WPF class <xref:System.Windows.NameScope>.</span></span> <span data-ttu-id="a27cc-110">A maioria das operações de namescope XAML no [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] operar usando <xref:System.Windows.NameScope> instâncias, mas informações ocasionalmente é comunicado internamente usando <xref:System.Windows.Markup.INameScope> referências.</span><span class="sxs-lookup"><span data-stu-id="a27cc-110">Most XAML namescope operations in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] operate by using <xref:System.Windows.NameScope> instances, but information is occasionally communicated internally by using <xref:System.Windows.Markup.INameScope> references.</span></span>  
  
 <span data-ttu-id="a27cc-111">São exemplos de classes do WPF que usam uma fábrica ou adiar a metáfora combinada com a representação de XAML <xref:System.Windows.Style> e <xref:System.Windows.FrameworkTemplate>.</span><span class="sxs-lookup"><span data-stu-id="a27cc-111">Examples of WPF classes that use a factory or defer metaphor combined with XAML representation are <xref:System.Windows.Style> and <xref:System.Windows.FrameworkTemplate>.</span></span> <span data-ttu-id="a27cc-112">Essas implementações normalmente se baseiam nas versões explícitas dos métodos disponíveis na interface de <xref:System.Windows.NameScope> classe.</span><span class="sxs-lookup"><span data-stu-id="a27cc-112">These implementations usually rely on the explicit versions of the interface methods available from the <xref:System.Windows.NameScope> class.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.NameScope" />
    <altmember cref="T:System.Windows.Markup.INameScopeDictionary" />
    <related type="Article" href="https://msdn.microsoft.com/library/b7e61222-e8cf-48d2-acd0-6df3b7685d48">
      <span data-ttu-id="a27cc-113">Atributo X:Name</span>
      <span class="sxs-lookup">
        <span data-stu-id="a27cc-113">x:Name Attribute</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName="FindName">
      <MemberSignature Language="C#" Value="public object FindName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FindName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.INameScope.FindName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindName (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ FindName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member FindName : string -&gt; obj" Usage="iNameScope.FindName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="a27cc-114">O identificador de nome para o objeto que está sendo solicitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a27cc-114">The name identifier for the object being requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a27cc-115">Retorna um objeto que tem o nome de identificação fornecido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a27cc-115">Returns an object that has the provided identifying name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a27cc-116">O objeto, se encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a27cc-116">The object, if found.</span>
          </span>
          <span data-ttu-id="a27cc-117">Retornará <see langword="null" /> se nenhum objeto com esse nome tiver sido encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a27cc-117">Returns <see langword="null" /> if no object of that name was found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a27cc-118">Cadeias de caracteres de nome válido na marcação XAML devem corresponder aos requisitos documentados em [gramática XamlName](~/docs/framework/xaml-services/xamlname-grammar.md).</span><span class="sxs-lookup"><span data-stu-id="a27cc-118">Valid name strings in XAML markup must match the requirements documented in [XamlName Grammar](~/docs/framework/xaml-services/xamlname-grammar.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.NameScope" />
        <related type="Article" href="https://msdn.microsoft.com/library/b7e61222-e8cf-48d2-acd0-6df3b7685d48">
          <span data-ttu-id="a27cc-119">Atributo X:Name</span>
          <span class="sxs-lookup">
            <span data-stu-id="a27cc-119">x:Name Attribute</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="RegisterName">
      <MemberSignature Language="C#" Value="public void RegisterName (string name, object scopedElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterName(string name, object scopedElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.INameScope.RegisterName(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterName (name As String, scopedElement As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterName(System::String ^ name, System::Object ^ scopedElement);" />
      <MemberSignature Language="F#" Value="abstract member RegisterName : string * obj -&gt; unit" Usage="iNameScope.RegisterName (name, scopedElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="scopedElement" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="a27cc-120">O nome para registrar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a27cc-120">The name to register.</span>
          </span>
        </param>
        <param name="scopedElement">
          <span data-ttu-id="a27cc-121">O elemento específico ao qual o <paramref name="name" /> fornecido se refere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a27cc-121">The specific element that the provided <paramref name="name" /> refers to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a27cc-122">Registra o nome fornecido para o namescope XAML atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a27cc-122">Registers the provided name into the current XAML namescope.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a27cc-123">Não são permitidos nomes duplicados em um namescope XAML.</span><span class="sxs-lookup"><span data-stu-id="a27cc-123">Duplicate names in a XAML namescope are not permitted.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="a27cc-124">Não é possível fazer nomes duplicados para ser registrado.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a27cc-124">Do not permit duplicate names to be registered.</span>
            </span>
            <span data-ttu-id="a27cc-125">Se a entrada <paramref name="name" /> já está atribuído a um elemento existente na representação de coleção interna de namescope de XAML (mesmo se ele é o mesmo que <paramref name="scopedElement" />), lançar uma exceção.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a27cc-125">If the input <paramref name="name" /> is already assigned to an existing element in the internal collection representation of the XAML namescope (even if it is the same as <paramref name="scopedElement" />), throw an exception.</span>
            </span>
            <span data-ttu-id="a27cc-126">Também considere a possibilidade de gerar uma exceção se o nome fornecido não corresponde ao [gramática XamlName](~/docs/framework/xaml-services/xamlname-grammar.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="a27cc-126">Also consider throwing an exception if the provided name does not conform to [XamlName Grammar](~/docs/framework/xaml-services/xamlname-grammar.md).</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.Windows.NameScope" />
      </Docs>
    </Member>
    <Member MemberName="UnregisterName">
      <MemberSignature Language="C#" Value="public void UnregisterName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.INameScope.UnregisterName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnregisterName (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnregisterName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member UnregisterName : string -&gt; unit" Usage="iNameScope.UnregisterName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="a27cc-127">O nome para cancelar o registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a27cc-127">The name to unregister.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a27cc-128">Cancela o registro do nome fornecido para o namescope XAML atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a27cc-128">Unregisters the provided name from the current XAML namescope.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="a27cc-129">Se o nome de entrada não existir, lança uma exceção.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a27cc-129">If the input name does not exist, throw an exception.</span>
            </span>
            <span data-ttu-id="a27cc-130">Você deve remover o nome e o elemento registrado anteriormente, que ele se refere a partir da representação de coleção de namescope de XAML, para que o mesmo nome poderia potencialmente ser registrado novamente no futuro.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a27cc-130">You should remove the name and the previously registered element it refers to from the collection representation of the XAML namescope, so that the same name could potentially be registered again in the future.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.Windows.NameScope" />
      </Docs>
    </Member>
  </Members>
</Type>