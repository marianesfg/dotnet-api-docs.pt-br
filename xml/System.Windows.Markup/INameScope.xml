<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="INameScope.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5387741b6254120f3bedc817966a2f93b51df1d15.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">387741b6254120f3bedc817966a2f93b51df1d15</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Markup.INameScope">
          <source>Defines a contract for how names of elements should be accessed within a particular XAML namescope, and how to enforce uniqueness of names within that XAML namescope.</source>
          <target state="translated">Define um contrato de como nomes de elementos devem ser acessados dentro de um determinado namescope XAML e como impor exclusividade dos nomes dentro desse namescope XAML.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.INameScope">
          <source>This interface is implemented by classes that have child elements that are intended to be reused through the template or defer metaphor.</source>
          <target state="translated">Essa interface é implementada por classes que têm elementos filho que devem ser reutilizado por meio do modelo ou adiar metáfora.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.INameScope">
          <source>Templates, factories and similar constructs must have unique XAML namescopes that are separate from a main object graph and root XAML.</source>
          <target state="translated">Modelos, fábricas e construções semelhantes devem ter exclusivo namescopes XAML que são separados de um gráfico de objeto principal e raiz XAML.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.INameScope">
          <source>The principle here is that there should be no name collisions when objects created from those child elements are introduced to an application's object graph, and so that DOM operations and XAML reference techniques that rely on the name identifier can rely on name uniqueness in each XAML namescope.</source>
          <target state="translated">O princípio aqui é que não deve haver nenhum conflitos de nome quando objetos criados a partir desses elementos filho são introduzidos no gráfico de objeto do aplicativo e para que as operações de DOM e técnicas de referência XAML que contam com o identificador de nome podem contar com exclusividade de nome em cada namescope XAML.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.INameScope">
          <source>In previous versions of the .NET Framework, this interface existed in the WPF-specific assembly WindowsBase.</source>
          <target state="translated">Nas versões anteriores do .NET Framework, essa interface existia no assembly específicos de WPF WindowsBase.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.INameScope">
          <source>In <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Windows.Markup.INameScope&gt;</ph> is in the System.Xaml assembly.</source>
          <target state="translated">Em <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Windows.Markup.INameScope&gt;</ph> está no assembly System. XAML.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.INameScope">
          <source>For more information, see <bpt id="p1">[</bpt>Types Migrated from WPF to System.Xaml<ept id="p1">](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tipos migrados do WPF para System. XAML<ept id="p1">](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)</ept>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.INameScope">
          <source>WPF Usage Notes</source>
          <target state="translated">Notas de uso do WPF</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.INameScope">
          <source>This interface is implemented by the WPF class <ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph>.</source>
          <target state="translated">Essa interface é implementada pela classe WPF <ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.INameScope">
          <source>Most XAML namescope operations in <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> operate by using <ph id="ph2">&lt;xref:System.Windows.NameScope&gt;</ph> instances, but information is occasionally communicated internally by using <ph id="ph3">&lt;xref:System.Windows.Markup.INameScope&gt;</ph> references.</source>
          <target state="translated">A maioria das operações de namescope XAML em <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> operar usando <ph id="ph2">&lt;xref:System.Windows.NameScope&gt;</ph> instâncias, mas as informações às vezes são comunicadas internamente usando <ph id="ph3">&lt;xref:System.Windows.Markup.INameScope&gt;</ph> referências.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.INameScope">
          <source>Examples of WPF classes that use a factory or defer metaphor combined with XAML representation are <ph id="ph1">&lt;xref:System.Windows.Style&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.FrameworkTemplate&gt;</ph>.</source>
          <target state="translated">Exemplos de classes do WPF que usam uma fábrica ou adiar metáfora combinada com a representação de XAML são <ph id="ph1">&lt;xref:System.Windows.Style&gt;</ph> e <ph id="ph2">&lt;xref:System.Windows.FrameworkTemplate&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.INameScope">
          <source>These implementations usually rely on the explicit versions of the interface methods available from the <ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> class.</source>
          <target state="translated">Essas implementações normalmente se baseiam nas versões explícitas dos métodos disponíveis na interface de <ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.INameScope.FindName(System.String)">
          <source>The name identifier for the object being requested.</source>
          <target state="translated">O identificador de nome para o objeto que está sendo solicitado.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.INameScope.FindName(System.String)">
          <source>Returns an object that has the provided identifying name.</source>
          <target state="translated">Retorna um objeto que tem o nome de identificação fornecido.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.INameScope.FindName(System.String)">
          <source>The object, if found.</source>
          <target state="translated">O objeto, se encontrado.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.INameScope.FindName(System.String)">
          <source>Returns <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no object of that name was found.</source>
          <target state="translated">Retornará <ph id="ph1">&lt;see langword="null" /&gt;</ph> se nenhum objeto com esse nome tiver sido encontrado.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.INameScope.FindName(System.String)">
          <source>Valid name strings in XAML markup must match the requirements documented in <bpt id="p1">[</bpt>XamlName Grammar<ept id="p1">](~/docs/framework/xaml-services/xamlname-grammar.md)</ept>.</source>
          <target state="translated">Cadeias de caracteres de nome válido na marcação XAML devem corresponder aos requisitos documentados na <bpt id="p1">[</bpt>gramática XamlName<ept id="p1">](~/docs/framework/xaml-services/xamlname-grammar.md)</ept>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.INameScope.RegisterName(System.String,System.Object)">
          <source>The name to register.</source>
          <target state="translated">O nome para registrar.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.INameScope.RegisterName(System.String,System.Object)">
          <source>The specific element that the provided <bpt id="p1">&lt;c&gt;</bpt>name<ept id="p1">&lt;/c&gt;</ept> refers to.</source>
          <target state="translated">O elemento específico ao qual o <bpt id="p1">&lt;c&gt;</bpt>nome<ept id="p1">&lt;/c&gt;</ept> fornecido se refere.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.INameScope.RegisterName(System.String,System.Object)">
          <source>Registers the provided name into the current XAML namescope.</source>
          <target state="translated">Registra o nome fornecido para o namescope XAML atual.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.INameScope.RegisterName(System.String,System.Object)">
          <source>Duplicate names in a XAML namescope are not permitted.</source>
          <target state="translated">Não são permitidos nomes duplicados em um namescope XAML.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.INameScope.RegisterName(System.String,System.Object)">
          <source>Do not permit duplicate names to be registered.</source>
          <target state="translated">Não permitir nomes duplicados para ser registrado.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.INameScope.RegisterName(System.String,System.Object)">
          <source>If the input <ph id="ph1">&lt;paramref name="name" /&gt;</ph> is already assigned to an existing element in the internal collection representation of the XAML namescope (even if it is the same as <ph id="ph2">&lt;paramref name="scopedElement" /&gt;</ph>), throw an exception.</source>
          <target state="translated">Se a entrada <ph id="ph1">&lt;paramref name="name" /&gt;</ph> já está atribuído a um elemento existente na representação interna de coleta de namescope a XAML (mesmo se ele é o mesmo que <ph id="ph2">&lt;paramref name="scopedElement" /&gt;</ph>), lançar uma exceção.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.INameScope.RegisterName(System.String,System.Object)">
          <source>Also consider throwing an exception if the provided name does not conform to <bpt id="p1">[</bpt>XamlName Grammar<ept id="p1">](~/docs/framework/xaml-services/xamlname-grammar.md)</ept>.</source>
          <target state="translated">Também considere a possibilidade de gerar uma exceção se o nome fornecido não corresponde à <bpt id="p1">[</bpt>gramática XamlName<ept id="p1">](~/docs/framework/xaml-services/xamlname-grammar.md)</ept>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.INameScope.UnregisterName(System.String)">
          <source>The name to unregister.</source>
          <target state="translated">O nome para cancelar o registro.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.INameScope.UnregisterName(System.String)">
          <source>Unregisters the provided name from the current XAML namescope.</source>
          <target state="translated">Cancela o registro do nome fornecido para o namescope XAML atual.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.INameScope.UnregisterName(System.String)">
          <source>If the input name does not exist, throw an exception.</source>
          <target state="translated">Se o nome de entrada não existir, lance uma exceção.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.INameScope.UnregisterName(System.String)">
          <source>You should remove the name and the previously registered element it refers to from the collection representation of the XAML namescope, so that the same name could potentially be registered again in the future.</source>
          <target state="translated">Você deve remover o nome e o elemento registrado anteriormente se refere a partir da representação de coleção de namescope XAML, para que o mesmo nome potencialmente pôde ser registrado novamente no futuro.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>