<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AmbientAttribute.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac555dd6cc03b82733e7cc9502b48929ccdfcd92546.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">55dd6cc03b82733e7cc9502b48929ccdfcd92546</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>Specifies that a property or type should be treated as ambient.</source>
          <target state="translated">Especifica que uma propriedade ou tipo deve ser tratado como ambiente.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>The ambient concept relates to how XAML processors determine type owners of members.</source>
          <target state="translated">O conceito de ambiente está relacionado a como os processadores XAML determinam os proprietários do tipo dos membros.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>An ambient property is a property where the value is expected to be available in the parser context when creating an object graph, but where typical type-member lookup is suspended for purposes of the immediate XAML node set being created.</source>
          <target state="translated">Uma propriedade de ambiente é uma propriedade em que o valor deve estar disponível no contexto do analisador ao criar um gráfico de objeto, mas em que a pesquisa de membro de tipo típico é suspenso para fins do nó XAML imediato conjunto que está sendo criado.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>There are two main scenarios for the ambient concept:</source>
          <target state="translated">Há dois cenários principais para o conceito de ambiente:</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>Some other property of the same object influences and qualifies how that object-property lookup should work.</source>
          <target state="translated">Outra propriedade do mesmo objeto influencia e qualifica como essa pesquisa de propriedade do objeto deve funcionar.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>The property represents a larger deferral mechanism and the ambient capabilities for looking up a member value extend to all objects contained within the current object.</source>
          <target state="translated">A propriedade representa um mecanismo de adiamento maior e estendem os recursos de ambiente para pesquisar um valor do membro a todos os objetos contidos no objeto atual.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>This attribute can be applied to specific properties that have expected containers that enable an ambient property lookup behavior, or can be applied to a class to enable the ambient property behavior in all cases of that value type for a property.</source>
          <target state="translated">Esse atributo pode ser aplicado a propriedades específicas que têm esperado contêineres que permitem que um comportamento de pesquisa de propriedade de ambiente, ou pode ser aplicado a uma classe para habilitar o comportamento de propriedade de ambiente em todos os casos desse tipo de valor para uma propriedade.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source><ph id="ph1">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> can also be applied to a CLR method, to support attributing a XAML attachable property as ambient.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> também pode ser aplicado a um método CLR, para dar suporte a atribuição de uma propriedade anexável XAML como o ambiente.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>This is potentially necessary because in a CLR implementation a XAML attached property is implemented/represented to reflection as an accessor pattern with <ph id="ph1">`get`</ph> and <ph id="ph2">`set`</ph> methods.</source>
          <target state="translated">Isso é necessário potencialmente porque uma implementação de CLR XAML propriedade anexada é implementado/representado para reflexão como um padrão de acessador com <ph id="ph1">`get`</ph> e <ph id="ph2">`set`</ph> métodos.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>No actual CLR property to attribute exists, so restricting usage for <ph id="ph1">&lt;xref:System.AttributeTargets&gt;</ph> to <ph id="ph2">`Property`</ph> would not have enabled specifying an attachable member as ambient.</source>
          <target state="translated">Nenhuma propriedade CLR real ao atributo existe, para restringir o uso de <ph id="ph1">&lt;xref:System.AttributeTargets&gt;</ph> para <ph id="ph2">`Property`</ph> não habilitará especificando um anexável como o ambiente.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>For an attachable member that you want to report as ambient, attribute the <ph id="ph1">`get`</ph> accessor.</source>
          <target state="translated">Para um membro anexável que você deseja relatar como ambiente, o atributo de <ph id="ph1">`get`</ph> acessador.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>You should not attempt to attribute methods that are not specifically support methods of attachable members.</source>
          <target state="translated">Você não deve tentar métodos de atributo que não sejam especificamente suporte a métodos de membros anexáveis.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>In previous versions of the .NET Framework, this class existed in the WPF-specific assembly WindowsBase.</source>
          <target state="translated">Nas versões anteriores do .NET Framework, essa classe existia no assembly específicos de WPF WindowsBase.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>In <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> is in the System.Xaml assembly.</source>
          <target state="translated">Em <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> está no assembly System. XAML.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>For more information, see <bpt id="p1">[</bpt>Types Migrated from WPF to System.Xaml<ept id="p1">](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tipos migrados do WPF para System. XAML<ept id="p1">](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)</ept>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>Ambient types (types where <ph id="ph1">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> is applied at type level) can be used for certain XAML processing situations where the type of a property needs to be resolved out of order.</source>
          <target state="translated">Tipos de ambiente (tipos onde <ph id="ph1">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> é aplicada no nível do tipo) pode ser usado para determinadas situações de processamento de XAML onde o tipo de uma propriedade deve ser resolvido fora de ordem.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>Object Writer Scenarios</source>
          <target state="translated">Cenários de gravador de objeto</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>If you are defining a XAML object writer, and you encounter a property, method or type where <ph id="ph1">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> is applied, you typically must access a service to determine the intended ambient property lookup behavior that is needed for writing out objects.</source>
          <target state="translated">Se você está definindo um gravador de objeto XAML, e você encontrar uma propriedade, método ou tipo onde <ph id="ph1">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> é aplicado, você normalmente deve acessar um serviço para determinar o comportamento de pesquisa de propriedade de ambiente pretendido que é necessário para gravar os objetos.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Xaml.IAmbientProvider&gt;</ph>.</source>
          <target state="translated">Para obter mais informações, consulte <ph id="ph1">&lt;xref:System.Xaml.IAmbientProvider&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>Value Converters</source>
          <target state="translated">Conversores de valor</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>Type converters or markup extensions might need to know the ambient information in order to process properties that represent indirect type mappings, such as properties that specify members or types by string names with or without qualification.</source>
          <target state="translated">Conversores de tipo ou extensões de marcação talvez precise saber as informações de ambiente para processar as propriedades que representam os mapeamentos de tipo indireta, como as propriedades que especificam tipos ou membros por nomes de cadeia de caracteres com ou sem qualificação.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>In this scenario, <ph id="ph1">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> is not intended to be used directly for value converter code logic.</source>
          <target state="translated">Nesse cenário, <ph id="ph1">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> não se destina a ser usado diretamente para a lógica de código do conversor de valor.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>Rather, the value converter should rely on the XAML writer processing behavior, which will pass <ph id="ph1">&lt;xref:System.Xaml.IAmbientProvider&gt;</ph> in its service contexts to your value converter methods when called.</source>
          <target state="translated">Em vez disso, o conversor de valor deve confiar no comportamento de processamento do gravador de XAML, que passará <ph id="ph1">&lt;xref:System.Xaml.IAmbientProvider&gt;</ph> em seus contextos de serviço para seus métodos de conversor de valor quando chamado.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>WPF Scenarios for AmbientAttribute</source>
          <target state="translated">Cenários do WPF para AmbientAttribute</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>A property of a <ph id="ph1">&lt;xref:System.Windows.Style&gt;</ph> (<ph id="ph2">&lt;xref:System.Windows.Style.TargetType%2A&gt;</ph>) can qualify the necessary property name lookups that are needed to find the backing references for property names in <ph id="ph3">&lt;xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType&gt;</ph> values.</source>
          <target state="translated">Uma propriedade de um <ph id="ph1">&lt;xref:System.Windows.Style&gt;</ph> (<ph id="ph2">&lt;xref:System.Windows.Style.TargetType%2A&gt;</ph>) pode qualificar as pesquisas de nome de propriedade necessários que são necessárias para localizar as referências de backup para nomes de propriedade no <ph id="ph3">&lt;xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType&gt;</ph> valores.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>All content within a <ph id="ph1">`Resources`</ph> property (items of a <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary&gt;</ph>) as well as template content, should be able to access other peers as values.</source>
          <target state="translated">Todo o conteúdo dentro de um <ph id="ph1">`Resources`</ph> propriedade (itens de um <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary&gt;</ph>), bem como o conteúdo do modelo, deve ser capaz de acessar outros pares de valores.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>Declaring the entire <ph id="ph1">`Resources`</ph> property as ambient invokes logic that enables this in the WPF XAML parser.</source>
          <target state="translated">Declarando todo o <ph id="ph1">`Resources`</ph> a propriedade como o ambiente chama lógica que permite que isso no analisador de WPF XAML.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>See <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> for an example of a scenario for setting <ph id="ph2">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> at type level.</source>
          <target state="translated">Consulte <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> para obter um exemplo de um cenário de configuração <ph id="ph2">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> no nível do tipo.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.AmbientAttribute.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Markup.AmbientAttribute" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Windows.Markup.AmbientAttribute" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>