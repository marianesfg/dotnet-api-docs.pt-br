<Type Name="TypeExtension" FullName="System.Windows.Markup.TypeExtension">
  <Metadata><Meta Name="ms.openlocfilehash" Value="36ee2e7a4c95367eacb294aaec77b74f9e584f18" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57949505" /></Metadata><TypeSignature Language="C#" Value="public class TypeExtension : System.Windows.Markup.MarkupExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TypeExtension extends System.Windows.Markup.MarkupExtension" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.TypeExtension" />
  <TypeSignature Language="VB.NET" Value="Public Class TypeExtension&#xA;Inherits MarkupExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeExtension : System::Windows::Markup::MarkupExtension" />
  <TypeSignature Language="F#" Value="type TypeExtension = class&#xA;    inherit MarkupExtension" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Markup.MarkupExtension</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.8;netcore-3.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Markup.TypeExtensionConverter))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("PresentationFramework, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.8;netcore-3.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Windows.Markup.MarkupExtensionReturnType(typeof(System.Type))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Implementa uma extensão de marcação que retorna um <see cref="T:System.Type" /> baseado em uma entrada de cadeia de caracteres.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] informações de uso, consulte [extensão de marcação X:Type](~/docs/framework/xaml-services/x-type-markup-extension.md).  
  
> [!NOTE]
>  O `{x:Type}` funcionalidade é geralmente para invocação de código do usuário da marcação. Para o código que está implementando o suporte a XAML, serviços de resolução de tipo vêm <xref:System.Windows.Markup.IXamlTypeResolver> e estão relacionados à implementação de atuando contexto de esquema XAML. Não tente fazer referência a <xref:System.Windows.Markup.TypeExtension.ProvideValue%2A> como um substituto para um <xref:System.Windows.Markup.IXamlTypeResolver> provedor de serviços; o contexto transmitido no pode não ser válido para uma resolução de tipo e as tentativas de chamar sem serviços válidos falharão.  
  
## <a name="wpf-usage-notes"></a>Notas de uso do WPF  
 Referências de tipo são usadas para as áreas de recurso de estilo, modelo e associação de dados em [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], quando esses recursos são referenciados pelo XAML.  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/e0e0ce6f-e873-49c7-8ad7-8b840eb353ec">Extensão de marcação x:Type</related>
    <related type="Article" href="https://msdn.microsoft.com/library/db07a952-05ce-4aa4-b6f9-aac7397d0326">Conversores de tipo ou extensões de marcação para XAML</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.TypeExtension" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeExtension ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.TypeExtension.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeExtension();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.TypeExtension" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeExtension (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.TypeExtension.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeExtension(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="new System.Windows.Markup.TypeExtension : string -&gt; System.Windows.Markup.TypeExtension" Usage="new System.Windows.Markup.TypeExtension typeName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="typeName">Uma cadeia de caracteres que identifica o tipo ao qual fazer uma referência. Essa cadeia de caracteres usa o formato <c>prefix:className</c>. <c>prefixo</c> é o prefixo de mapeamento de um namespace XAML e só é necessário para fazer referência a tipos que não estão mapeados no namespace XAML padrão.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.TypeExtension" />, inicializando o valor <see cref="P:System.Windows.Markup.TypeExtension.TypeName" /> com base na cadeia de caracteres <paramref name="typeName" /> fornecida.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse valor não é avaliado quando você defini-lo no construtor. Se o valor não for `null`, o valor será aceito inicialmente. A análise real e avaliação do valor é adiada até o <xref:System.Windows.Markup.TypeExtension.ProvideValue%2A> é chamado nessa extensão, quando o XAML é analisado e com o Active Directory de contextos de serviço disponíveis. No momento o `typeName` deve ser resolvido como um tipo em um contexto de esquema XAML e esse tipo é retornado.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Tentativa de especificar <paramref name="typeName" /> como <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeExtension (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.TypeExtension.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeExtension(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Windows.Markup.TypeExtension : Type -&gt; System.Windows.Markup.TypeExtension" Usage="new System.Windows.Markup.TypeExtension type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="type">O tipo a ser representado por esse <see cref="T:System.Windows.Markup.TypeExtension" />.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.TypeExtension" />, declarando o tipo diretamente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse é um método auxiliar para usos de código de tempo de execução de <xref:System.Windows.Markup.TypeExtension> e não faz parte do padrão de implementação normal para uma extensão de marcação.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="type" /> é <see langword="null" /></exception>
      </Docs>
    </Member>
    <Member MemberName="ProvideValue">
      <MemberSignature Language="C#" Value="public override object ProvideValue (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ProvideValue(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.TypeExtension.ProvideValue(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ProvideValue (serviceProvider As IServiceProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ProvideValue(IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="override this.ProvideValue : IServiceProvider -&gt; obj" Usage="typeExtension.ProvideValue serviceProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" Index="0" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">Objeto que pode fornecer serviços para a extensão de marcação. Espera-se que o provedor forneça um serviço para o <see cref="T:System.Windows.Markup.IXamlTypeResolver" />.</param>
        <summary>Retorna um objeto que deve ser definido na propriedade em que essa extensão é aplicada. Para <see cref="T:System.Windows.Markup.TypeExtension" />, esse é o valor <see cref="T:System.Type" />, conforme avaliada para o nome de tipo solicitado.</summary>
        <returns>O <see cref="T:System.Type" /> a ser definido na propriedade em que a extensão é aplicada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode passar `null` para `serviceProvider`, mas somente se essa <xref:System.Windows.Markup.TypeExtension> instância foi estabelecida com um tipo verdadeiro inicial no construtor em vez de um `typeName`. Caso contrário, essa implementação de extensão de marcação se baseia em serviços com base no passado `serviceProvider`. Ele não deve ser `null`. O `serviceProvider` deve fornecer um serviço para <xref:System.Windows.Markup.IXamlTypeResolver>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">O valor <paramref name="member" /> para a extensão é <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Alguma parte da cadeia de caracteres <paramref name="typeName" /> não foi analisada corretamente.  
  
- ou - 
 <paramref name="serviceProvider" /> não forneceu um serviço para <see cref="T:System.Windows.Markup.IXamlTypeResolver" />  
  
- ou - 
 O valor <paramref name="typeName" /> não foi resolvido para um tipo.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="serviceProvider" /> é <see langword="null" /></exception>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.TypeExtension.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Type : Type with get, set" Usage="System.Windows.Markup.TypeExtension.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.8;netcore-3.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.8;netcore-3.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Windows.Markup.ConstructorArgument("type")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define informações de tipo dessa extensão.</summary>
        <value>O tipo estabelecido. Para fins de tempo de execução, isso pode ser <see langword="null" /> para obter acesso, mas não pode ser definido como <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A menos que essa instância foi deliberadamente instanciada com o <xref:System.Windows.Markup.TypeExtension.%23ctor%28System.Type%29> construtor de assinatura, esse valor será `null`. Essa propriedade não serão redefinidas quando <xref:System.Windows.Markup.TypeExtension.ProvideValue%2A> é chamado. Se você quiser que o verdadeiro tipo representado sempre deve chamar <xref:System.Windows.Markup.TypeExtension.ProvideValue%2A> em vez de verificar essa propriedade.  
  
 Esta propriedade é configurável por regras comuns sobre o uso de extensão de marcação. No entanto, se você estiver definindo com um <xref:System.Type>, em seguida, a finalidade desta extensão de marcação é irrelevante, porque o mesmo <xref:System.Type> é retornado de um <xref:System.Windows.Markup.TypeExtension.ProvideValue%2A> chamar.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Tentativa de definir como <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.TypeExtension.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TypeName : string with get, set" Usage="System.Windows.Markup.TypeExtension.TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.8;netcore-3.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o nome do tipo representado por essa extensão de marcação.</summary>
        <value>Uma cadeia de caracteres que identifica o tipo. Essa cadeia de caracteres usa o formato *prefixo*<c>:</c>*className*. (*prefixo* é o prefixo de mapeamento para um namespace de XML e só é necessário para fazer referência a tipos que não são mapeados para o namespace XML padrão para o WPF ([!INCLUDE[TLA#tla_wpfxmlnsv1](~/includes/tlasharptla-wpfxmlnsv1-md.md)]).</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Tentativa de definir como <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>