<Type Name="MarkupExtension" FullName="System.Windows.Markup.MarkupExtension">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9ca66d6767b24c82ce7eed1a97d822b87a0fe9c3" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37560035" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MarkupExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MarkupExtension extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.MarkupExtension" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MarkupExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class MarkupExtension abstract" />
  <TypeSignature Language="F#" Value="type MarkupExtension = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="04a7a-101">Fornece uma classe base para as implementações de extensão de marcação XAML que podem ter o suporte pelos serviços XAML do .NET Framework e outros leitores e gravadores de XAML.</span>
      <span class="sxs-lookup">
        <span data-stu-id="04a7a-101">Provides a base class for XAML markup extension implementations that can be supported by .NET Framework XAML Services and other XAML readers and XAML writers.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04a7a-102">Extensões de marcação retornam objetos para os chamadores, com base na entrada de valores de atributo de cadeia de caracteres ou elementos de marcação no XAML.</span><span class="sxs-lookup"><span data-stu-id="04a7a-102">Markup extensions return objects to callers, based on the input of string attribute values or markup elements in XAML.</span></span> <span data-ttu-id="04a7a-103">Extensões de marcação retornam objetos em uma forma mais sofisticada do que conversores de tipo sozinho podem realizar.</span><span class="sxs-lookup"><span data-stu-id="04a7a-103">Markup extensions return objects in a more sophisticated way than type converters alone can accomplish.</span></span> <span data-ttu-id="04a7a-104">Um gravador de objeto XAML invoca um conversor de tipo como um tipo ou membro tem uma implementação de conversor de tipo associada a ele.</span><span class="sxs-lookup"><span data-stu-id="04a7a-104">A XAML object writer invokes a type converter because a type or member has a type converter implementation associated with it.</span></span> <span data-ttu-id="04a7a-105">Do CLR quadro de referência, isso significa que é um tipo ou membro <xref:System.ComponentModel.TypeConverterAttribute> atribuído.</span><span class="sxs-lookup"><span data-stu-id="04a7a-105">From the CLR frame of reference, this means that a type or member is <xref:System.ComponentModel.TypeConverterAttribute> attributed.</span></span> <span data-ttu-id="04a7a-106">Da perspectiva do sistema de tipo XAML, isso significa que um tipo XAML ou um membro XAML tem um valor para o seu `TypeConverter` propriedade.</span><span class="sxs-lookup"><span data-stu-id="04a7a-106">From the XAML type system perspective, this means that a XAML type or a XAML member has a value for its `TypeConverter` property.</span></span> <span data-ttu-id="04a7a-107">A invocação de um conversor de tipo está vinculada à definição de tipo ou propriedade e sempre é invocada pelo XAML de processamento para esses casos.</span><span class="sxs-lookup"><span data-stu-id="04a7a-107">The invocation of a type converter is tied to the type or property definition, and is always invoked by XAML processing for these cases.</span></span> <span data-ttu-id="04a7a-108">Em contraste, uma extensão de marcação é mais sob o controle do código de usuário e a marcação produzido pelo usuário e pode ser aplicada sempre que um cenário de aplicativo exige isso.</span><span class="sxs-lookup"><span data-stu-id="04a7a-108">In contrast, a markup extension is more under the control of user code and user-produced markup, and can be applied whenever an application scenario demands it.</span></span> <span data-ttu-id="04a7a-109">Uma extensão de marcação pode ser invocada e pode ser usada para definir valores de membro de tipo diferente, desde que o tipo de retorno da extensão de marcação é atribuível a esse valor.</span><span class="sxs-lookup"><span data-stu-id="04a7a-109">A markup extension can be invoked and can be used for setting different type-member values, so long as the markup extension's return type is assignable to that value.</span></span>  
  
 <span data-ttu-id="04a7a-110">Para obter informações sobre como criar uma extensão de marcação personalizada, consulte <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A>.</span><span class="sxs-lookup"><span data-stu-id="04a7a-110">For information on creating a custom markup extension, see <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A>.</span></span> <span data-ttu-id="04a7a-111">Para obter mais informações sobre extensões de marcação em geral, consulte [extensões de marcação para visão geral de XAML](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md).</span><span class="sxs-lookup"><span data-stu-id="04a7a-111">For more information on markup extensions in general, see [Markup Extensions for XAML Overview](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md).</span></span> <span data-ttu-id="04a7a-112">Se você estiver compilando no WPF usando ou criando extensões de marcação para XAML, outras informações relevantes podem ser encontradas no tópico [extensões de marcação e XAML WPF](~/docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md).</span><span class="sxs-lookup"><span data-stu-id="04a7a-112">If you are building on WPF and using or creating markup extensions for XAML, other relevant information can be found in the topic [Markup Extensions and WPF XAML](~/docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md).</span></span>  
  
 <span data-ttu-id="04a7a-113">O <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> método de cada implementação de extensão de marcação pode usar um <xref:System.IServiceProvider> em tempo de execução que pode fornecer contexto.</span><span class="sxs-lookup"><span data-stu-id="04a7a-113">The <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> method of each markup extension implementation can use an <xref:System.IServiceProvider> at run time that can provide context.</span></span> <span data-ttu-id="04a7a-114">Isso <xref:System.IServiceProvider> , em seguida, é consultado para serviços específicos que passam informações, como <xref:System.Windows.Markup.IProvideValueTarget> ou <xref:System.Windows.Markup.IXamlTypeResolver>.</span><span class="sxs-lookup"><span data-stu-id="04a7a-114">This  <xref:System.IServiceProvider> is then queried for specific services that pass information, such as <xref:System.Windows.Markup.IProvideValueTarget> or <xref:System.Windows.Markup.IXamlTypeResolver>.</span></span> <span data-ttu-id="04a7a-115">Para obter mais informações sobre contextos de serviço para uma extensão de marcação, consulte [contextos de serviço disponíveis para conversores de tipo e extensões de marcação](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).</span><span class="sxs-lookup"><span data-stu-id="04a7a-115">For more information on service contexts for a markup extension, see [Service Contexts Available to Type Converters and Markup Extensions](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).</span></span>  
  
 <span data-ttu-id="04a7a-116">As classes derivadas devem ser atribuídas com <xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute> para informar os consumidores do tipo de retorno mais específico disponível a partir da extensão de marcação <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> implementação.</span><span class="sxs-lookup"><span data-stu-id="04a7a-116">Derived classes should be attributed with <xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute> to inform consumers of the most specific return type available from the markup extension's <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> implementation.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MarkupExtension ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.MarkupExtension.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MarkupExtension();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="04a7a-117">Inicializa uma nova instância de uma classe derivada de <see cref="T:System.Windows.Markup.MarkupExtension" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04a7a-117">Initializes a new instance of a class derived from <see cref="T:System.Windows.Markup.MarkupExtension" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04a7a-118">O <xref:System.Windows.Markup.MarkupExtension> classe abstrata não mantenha quaisquer valores particulares que exigem a inicialização.</span><span class="sxs-lookup"><span data-stu-id="04a7a-118">The <xref:System.Windows.Markup.MarkupExtension> abstract class does not hold any private values that require initialization.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="04a7a-119">
            <para>Uma extensão de marcação funcional deve definir seu próprio construtor padrão público. Além disso, a extensão de marcação deve implementar construtores que são apropriados para recursos de pretendido da extensão e uso de marcação. Para obter mais informações, consulte [extensões de marcação para XAML Overview](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="04a7a-119">
              <para>A functional markup extension should define its own public default constructor. Additionally, the markup extension should implement constructors that are appropriate for the extension's intended capabilities and markup usage. For more information, see [Markup Extensions for XAML Overview](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ProvideValue">
      <MemberSignature Language="C#" Value="public abstract object ProvideValue (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ProvideValue(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ProvideValue (serviceProvider As IServiceProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ ProvideValue(IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="abstract member ProvideValue : IServiceProvider -&gt; obj" Usage="markupExtension.ProvideValue serviceProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">
          <span data-ttu-id="04a7a-120">Um auxiliar de provedor de serviço que pode fornecer serviços para a extensão de marcação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04a7a-120">A service provider helper that can provide services for the markup extension.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="04a7a-121">Quando implementada em uma classe derivada, retorna um objeto que é fornecido como o valor da propriedade de destino para esta extensão de marcação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04a7a-121">When implemented in a derived class, returns an object that is provided as the value of the target property for this markup extension.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="04a7a-122">O valor do objeto para definir na propriedade na qual a extensão é aplicada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04a7a-122">The object value to set on the property where the extension is applied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04a7a-123">Quando um processador XAML processa um valor de nó e o membro de tipo que é uma extensão de marcação, ele invoca o <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> método da extensão de marcação e grava o resultado no fluxo de serialização ou grafo de objeto.</span><span class="sxs-lookup"><span data-stu-id="04a7a-123">When a XAML processor processes a type node and member value that is a markup extension, it invokes the <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> method of that markup extension and writes the result into the object graph or serialization stream.</span></span> <span data-ttu-id="04a7a-124">O gravador de objeto XAML passa o contexto de serviço para cada tal implementação por meio de `serviceProvider` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="04a7a-124">The XAML object writer passes service context to each such implementation through the `serviceProvider` parameter.</span></span>  
  
 <span data-ttu-id="04a7a-125">Consulte a seção "Observações para implementadores" para obter mais informações sobre como implementar <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> em uma extensão de marcação personalizada.</span><span class="sxs-lookup"><span data-stu-id="04a7a-125">See "Notes to Implementers" section for more information on how to implement <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> in a custom markup extension.</span></span>  
  
## <a name="wpf-usage-notes"></a><span data-ttu-id="04a7a-126">Notas de uso do WPF</span><span class="sxs-lookup"><span data-stu-id="04a7a-126">WPF Usage Notes</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="04a7a-127">Classes do WPF com interações específicas com operações de conjunto de marcação não devem depender <xref:System.Windows.Markup.IReceiveMarkupExtension> para um [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] implementação.</span><span class="sxs-lookup"><span data-stu-id="04a7a-127">WPF classes that have specific interactions with markup set operations should not rely on <xref:System.Windows.Markup.IReceiveMarkupExtension> for a [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] implementation.</span></span> <span data-ttu-id="04a7a-128">Use <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute>-atribuído retornos de chamada em vez disso.</span><span class="sxs-lookup"><span data-stu-id="04a7a-128">Use <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute>-attributed callbacks instead.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="04a7a-129">
            <para>Serviços comuns retornados pelo provedor de serviços padrão que é normalmente disponíveis para um personalizado ou existente <see cref="T:System.Windows.Markup.MarkupExtension" /> implementação incluem os principais serviços a seguir.  - <see cref="T:System.Windows.Markup.IProvideValueTarget" /> relata a referência de objeto e um identificador de propriedade do contexto em que a extensão de marcação é usada - <see cref="T:System.Windows.Markup.IXamlTypeResolver" /> expõe um serviço que é comparável o objeto XAML geral escrevendo o comportamento que pode fornecer um <see cref="T:System.Type" /> com base em um XAML nome do tipo. O nome pode incluir opcionalmente um prefixo para um namespace XAML mapeado.  - <see cref="T:System.Xaml.IXamlSchemaContextProvider" /> expõe o contexto de esquema XAML ativo diretamente. De informado <see cref="T:System.Xaml.XamlSchemaContext" />, você pode obter o XAML esquema informações de contexto, como assemblies são mapeados para o suporte de tipo, o prefixo preferencial em assemblies, lista de cada <see cref="T:System.Xaml.XamlType" /> em um assembly e assim por diante.  -Outros serviços disponíveis para cenários de extensão de marcação mais especializados incluem:- <see cref="T:System.Windows.Markup.IUriContext" />   
  
    -    <see cref="T:System.Xaml.IAmbientProvider" />   
  
    -    <see cref="T:System.Xaml.IDestinationTypeProvider" />   
  
    -    <see cref="T:System.Xaml.IRootObjectProvider" />   
  
    -    <see cref="T:System.Xaml.IXamlNameResolver" />   
  
    -    <see cref="T:System.Xaml.IXamlNamespaceResolver" /> Potencialmente, implementações <see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" /> pode ignorar o <paramref name="serviceProvider" /> parâmetro. Isso é viável para alguns cenários básicos, em que nenhum contexto em todos os é necessário para retornar um valor.  Em uma utilização típica, os serviços de XAML do .NET Framework e o XAML implementado objeto gravadores fornecerá um provedor de serviços para todos os métodos de conversor de valor sejam chamados durante o XAML de processamento. No entanto, para robustez, você deve fornecer caminhos de código para valores nulos para o provedor de serviços e para qualquer serviço solicitado. Valores nulos podem ocorrer se sua extensão de marcação é aplicada em uma circunstância em que o suporte de serviço típico fornecido por uma infra-estrutura de processador XAML não está disponível.  Para obter mais informações sobre os serviços disponíveis do contexto do provedor de serviço XAML e como usá-los, consulte [Conversores de tipo e extensões de marcação para XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md).  Implementações que exigem um determinado serviço esteja disponível para produzir um útil <see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" /> resultado devem gerar exceções se esse serviço não estiver disponível. É a recomendada exceção a gerar <see cref="T:System.InvalidOperationException" />.  A implementação também pode gerar exceções se um dos argumentos que a extensão de marcação personalizada precisa para fornecer um valor for nulo, é inválido para o seu tipo de dados ou não contém um valor que a extensão de marcação é capaz de processamento. É a recomendada exceção a gerar <see cref="T:System.InvalidOperationException" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="04a7a-129">
              <para>Common services returned by the default service provider that is typically available to a custom or existing <see cref="T:System.Windows.Markup.MarkupExtension" /> implementation include the following primary services.  -   <see cref="T:System.Windows.Markup.IProvideValueTarget" /> reports the object reference and a property identifier from the context where the markup extension is used  -   <see cref="T:System.Windows.Markup.IXamlTypeResolver" /> exposes a service that parallels the general XAML object writing behavior that can provide a <see cref="T:System.Type" /> based on a XAML type name. The name can optionally include a prefix for a mapped XAML namespace.  -   <see cref="T:System.Xaml.IXamlSchemaContextProvider" /> exposes the active XAML schema context directly. From the reported <see cref="T:System.Xaml.XamlSchemaContext" />, you can obtain XAML schema context information such as how assemblies are mapped for type support, preferred prefix in assemblies, lists of each <see cref="T:System.Xaml.XamlType" /> in an assembly, and so on.  -   Other services available for more specialized markup extension scenarios include:  -   <see cref="T:System.Windows.Markup.IUriContext" />  
  
    -   <see cref="T:System.Xaml.IAmbientProvider" />  
  
    -   <see cref="T:System.Xaml.IDestinationTypeProvider" />  
  
    -   <see cref="T:System.Xaml.IRootObjectProvider" />  
  
    -   <see cref="T:System.Xaml.IXamlNameResolver" />  
  
    -   <see cref="T:System.Xaml.IXamlNamespaceResolver" />  Potentially, implementations of <see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" /> can ignore the <paramref name="serviceProvider" /> parameter. This is viable for some basic scenarios, where no context at all is required for returning a value.  In typical usage, the .NET Framework XAML Services and the implemented XAML object writers will provide a service provider to all value converter methods that are invoked during XAML processing. However, for robustness, you should provide code paths for null values both for the service provider itself and for any requested service. Null values might occur if your markup extension is applied in a circumstance where the typical service support provided by a XAML processor infrastructure is not available.  For more information on available services from the XAML service provider context and how to use them, see [Type Converters and Markup Extensions for XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md).  Implementations that require a certain service to be available in order to produce a useful <see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" /> result are expected to throw exceptions if that service is not available. The recommended exception to throw is <see cref="T:System.InvalidOperationException" />.  The implementation may also throw exceptions if one of the arguments that the custom markup extension needs in order to provide a value is null, is invalid for its data type, or does not contain a value that the markup extension is capable of processing. The recommended exception to throw is <see cref="T:System.InvalidOperationException" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Windows.Markup.IProvideValueTarget" />
        <altmember cref="T:System.Windows.Markup.IXamlTypeResolver" />
      </Docs>
    </Member>
  </Members>
</Type>