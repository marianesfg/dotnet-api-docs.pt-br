<Type Name="XamlReader" FullName="System.Windows.Markup.XamlReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cb6251512dd75740e1b01a33ceb7e3470f3a68d1" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlReader extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.XamlReader" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlReader" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="27a4d-101">Lê a entrada XAML e cria um grafo de objeto, usando o leitor XAML do WPF padrão e um gravador de objeto XAML associado.</span>
      <span class="sxs-lookup">
        <span data-stu-id="27a4d-101">Reads XAML input and creates an object graph, using the WPF default XAML reader and an associated XAML object writer.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27a4d-102">Síncronos <xref:System.Windows.Markup.XamlReader.Load%2A> métodos são estáticos, mas o assíncrona <xref:System.Windows.Markup.XamlReader.LoadAsync%2A> métodos não são estáticos e requer uma instância do <xref:System.Windows.Markup.XamlReader> classe a ser usada.</span><span class="sxs-lookup"><span data-stu-id="27a4d-102">The synchronous <xref:System.Windows.Markup.XamlReader.Load%2A> methods are static, but the asynchronous <xref:System.Windows.Markup.XamlReader.LoadAsync%2A> methods are not static and require an instance of the <xref:System.Windows.Markup.XamlReader> class to use.</span></span>  
  
 <span data-ttu-id="27a4d-103">A saída de `Load` métodos é um único objeto, que representa o objeto raiz de uma árvore de objeto criado ou um gráfico de objeto.</span><span class="sxs-lookup"><span data-stu-id="27a4d-103">The output of the `Load` methods is a single object, which represents the root object of a created object tree or object graph.</span></span> <span data-ttu-id="27a4d-104">Objetos gráficos que são criados por <xref:System.Windows.Markup.XamlReader> normalmente são adicionados à árvore de objetos existentes de um aplicativo do WPF no tempo de execução.</span><span class="sxs-lookup"><span data-stu-id="27a4d-104">Object graphs that are created by <xref:System.Windows.Markup.XamlReader> are typically added to the existing object tree of a WPF application at run time.</span></span> <span data-ttu-id="27a4d-105">Caso contrário, o novo gráfico de objeto é considerado desconectado para fins do modelo de aplicativo do WPF.</span><span class="sxs-lookup"><span data-stu-id="27a4d-105">Otherwise the new object graph is considered disconnected for purposes of the WPF application model.</span></span> <span data-ttu-id="27a4d-106">Isso significa que ele não renderizar e não pode ser acessados usar as técnicas de árvore de objeto como aplicada à árvore de objeto principal do aplicativo do WPF (por exemplo, as APIs <xref:System.Windows.FrameworkElement.FindName%2A>, <xref:System.Windows.LogicalTreeHelper>, <xref:System.Windows.Media.VisualTreeHelper>).</span><span class="sxs-lookup"><span data-stu-id="27a4d-106">This means that it does not render, and cannot be accessed using any of the object tree techniques as applied to the WPF application's main object tree (for example, the APIs <xref:System.Windows.FrameworkElement.FindName%2A>, <xref:System.Windows.LogicalTreeHelper>, <xref:System.Windows.Media.VisualTreeHelper>).</span></span> <span data-ttu-id="27a4d-107">Para obter mais informações sobre os conceitos de árvore de objeto, consulte [árvores no WPF](~/docs/framework/wpf/advanced/trees-in-wpf.md).</span><span class="sxs-lookup"><span data-stu-id="27a4d-107">For more information on object tree concepts, see [Trees in WPF](~/docs/framework/wpf/advanced/trees-in-wpf.md).</span></span>  
  
 <span data-ttu-id="27a4d-108"><xref:System.Windows.Markup.XamlReader> suporta os seguintes cenários principais:</span><span class="sxs-lookup"><span data-stu-id="27a4d-108"><xref:System.Windows.Markup.XamlReader> supports the following primary scenarios:</span></span>  
  
-   <span data-ttu-id="27a4d-109">**Fábrica de clonagem/objeto**: sem mecanismos adicionais, um tipo de referência geralmente não pode ser incluído em mais de uma posição em uma árvore de objetos do WPF.</span><span class="sxs-lookup"><span data-stu-id="27a4d-109">**Cloning/object factory**: Without additional mechanisms, a reference type generally cannot be included in more than one position in a WPF object tree.</span></span> <span data-ttu-id="27a4d-110">(Exemplos de mecanismos adicionais que oferecem suporte para o compartilhamento ou reutilizar em WPF objetos baseados em <xref:System.Windows.Freezable>, ou suporte para objetos normalmente podem ser compartilhados como <xref:System.Windows.Media.Brush> que são referenciados como um item de um <xref:System.Windows.ResourceDictionary>.) Uma forma para clonar um objeto que já está no árvore de objetos é serializar o objeto usando <xref:System.Windows.Markup.XamlWriter.Save%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="27a4d-110">(Examples of additional mechanisms that offer support for sharing or re-use in WPF include objects that are based on <xref:System.Windows.Freezable>, or support for commonly shareable objects such as <xref:System.Windows.Media.Brush> that are referenced as an item from a <xref:System.Windows.ResourceDictionary>.) One way to clone an object that is already in the object tree is to serialize the object using <xref:System.Windows.Markup.XamlWriter.Save%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="27a4d-111">Em seguida, a cadeia de caracteres serializada é usada como entrada para uma chamada para <xref:System.Windows.Markup.XamlReader.Load%2A>, com um fluxo ou <xref:System.Xml.XmlReader> como um intermediário.</span><span class="sxs-lookup"><span data-stu-id="27a4d-111">You then use the serialized string as input for a call to <xref:System.Windows.Markup.XamlReader.Load%2A>, with a stream or <xref:System.Xml.XmlReader> as an intermediary.</span></span>  
  
-   <span data-ttu-id="27a4d-112">**Construindo objetos com base nas informações de just-in-time**: frequentemente, há outras maneiras de ter entrada de associação tardia ou fornecido pelo usuário a alterar o estado de objetos existentes.</span><span class="sxs-lookup"><span data-stu-id="27a4d-112">**Constructing objects based on just-in-time information**: There are often other ways to have late-binding or user-supplied input change the state of existing objects.</span></span> <span data-ttu-id="27a4d-113">Por exemplo você pode usar o mesmo valor para definir mais de uma propriedade ou usar associação de dados.</span><span class="sxs-lookup"><span data-stu-id="27a4d-113">For example you could use the same value to set more than one property, or use data binding.</span></span> <span data-ttu-id="27a4d-114">Mas se você tiver um cenário em que até mesmo o tipo de objeto para criar só está determinável em tempo de execução ou a interação do usuário, criando esse tipo de objeto, criando uma cadeia de caracteres para <xref:System.Windows.Markup.XamlReader.Load%2A> entrada geralmente é uma técnica útil.</span><span class="sxs-lookup"><span data-stu-id="27a4d-114">But if you have a scenario where even the type of object to create is only determinable at run time or with user interaction, then creating such an object by building up a string for <xref:System.Windows.Markup.XamlReader.Load%2A> input is often a useful technique.</span></span>  
  
-   <span data-ttu-id="27a4d-115">**Usando técnicas de recurso existente**: O <xref:System.IO.Stream> tipo é usado frequentemente em outras estruturas ou tecnologias para a transferência de dados ou objetos além dos limites do aplicativo ou em situações semelhantes.</span><span class="sxs-lookup"><span data-stu-id="27a4d-115">**Using existing resource techniques**: The <xref:System.IO.Stream> type is used frequently in other frameworks or technologies for transferring data or objects across application boundaries or for similar situations.</span></span> <span data-ttu-id="27a4d-116">Você pode usar o <xref:System.IO.Stream> técnicas para armazenar ou obter dados formatados em XAML que você poderá usar para criar um objeto como parte do seu aplicativo.</span><span class="sxs-lookup"><span data-stu-id="27a4d-116">You can then use the <xref:System.IO.Stream> techniques to store or obtain XAML-formatted data that you eventually use to create an object as part of your application.</span></span>  
  
-   <span data-ttu-id="27a4d-117">**Documentos fixos:** seu aplicativo pode carregar documentos XPS de local ou baixados para inclusão em uma árvore de objetos de aplicativo do WPF e a interface do usuário.</span><span class="sxs-lookup"><span data-stu-id="27a4d-117">**Fixed documents:** Your application might load local or downloaded XPS documents for inclusion in a WPF application object tree and UI.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="27a4d-118">Às vezes, esta documentação descreve um gráfico de objeto, em vez de uma árvore de objetos.</span><span class="sxs-lookup"><span data-stu-id="27a4d-118">This documentation sometimes describes an object graph, as opposed to an object tree.</span></span> <span data-ttu-id="27a4d-119">Uma relação pai-filho estrita não sempre existem nas relações de objeto de tempo de execução de um aplicativo do WPF de tempo de execução, portanto, um gráfico de objeto é uma terminologia mais amplamente aplicável.</span><span class="sxs-lookup"><span data-stu-id="27a4d-119">A strict parent-child relationship does not always exist in the run time object relationships of a run time WPF application, so an object graph is a more widely applicable terminology.</span></span> <span data-ttu-id="27a4d-120">No entanto, como WPF também inclui conceituação passando árvore diferente duas APIs (<xref:System.Windows.LogicalTreeHelper>, <xref:System.Windows.Media.VisualTreeHelper>) a metáfora de árvore ainda se aplica adequado para a maioria dos casos reais no WPF.</span><span class="sxs-lookup"><span data-stu-id="27a4d-120">However, because WPF also includes two different tree conceptualization APIs (<xref:System.Windows.LogicalTreeHelper>, <xref:System.Windows.Media.VisualTreeHelper>) the tree metaphor still applies adequately to most real-world cases in WPF.</span></span> <span data-ttu-id="27a4d-121">Da perspectiva de linguagem XAML no entanto, o gráfico de objeto é geralmente a melhor maneira de pensar sobre como os objetos são criados fora do XAML, como a linguagem XAML em si não especifica necessariamente metodologias de classe auxiliar que trazem as relações mais em uma estrutura de árvore novamente.</span><span class="sxs-lookup"><span data-stu-id="27a4d-121">From the XAML language perspective however, the object graph is often the best way to think about how objects are created out of XAML, because the XAML language itself does not necessarily specify helper class methodologies that bring the relationships more into a tree structure again.</span></span>  
  
## <a name="code-access-security-loose-xaml-and-xamlreader"></a><span data-ttu-id="27a4d-122">Segurança de acesso do código XAML livre e XamlReader</span><span class="sxs-lookup"><span data-stu-id="27a4d-122">Code Access Security, Loose XAML, and XamlReader</span></span>  
 <span data-ttu-id="27a4d-123">XAML é uma linguagem de marcação que representa diretamente a instanciação e execução de objetos.</span><span class="sxs-lookup"><span data-stu-id="27a4d-123">XAML is a markup language that directly represents object instantiation and execution.</span></span> <span data-ttu-id="27a4d-124">Portanto, elementos criados em XAML têm a mesma capacidade que o código gerado equivalente no que se refere a interagir com recursos de sistema (acesso a rede e E/S do sistema de arquivos, por exemplo).</span><span class="sxs-lookup"><span data-stu-id="27a4d-124">Therefore, elements created in XAML have the same ability to interact with system resources (network access, file system IO, for example) as the equivalent generated code does.</span></span>  
  
 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="27a4d-125"> oferece suporte a [!INCLUDE[TLA2#tla_net](~/includes/tla2sharptla-net-md.md)] estrutura de segurança [!INCLUDE[TLA#tla_cas](~/includes/tlasharptla-cas-md.md)].</span><span class="sxs-lookup"><span data-stu-id="27a4d-125"> supports the [!INCLUDE[TLA2#tla_net](~/includes/tla2sharptla-net-md.md)] security framework [!INCLUDE[TLA#tla_cas](~/includes/tlasharptla-cas-md.md)].</span></span> <span data-ttu-id="27a4d-126">Isso significa que conteúdo do [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] em execução na zona da Internet tem permissões de execução reduzidas.</span><span class="sxs-lookup"><span data-stu-id="27a4d-126">This means that [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] content running in the internet zone has reduced execution permissions.</span></span> <span data-ttu-id="27a4d-127">"XAML avulso" (páginas de XAML não compilado interpretado na hora do carregamento por um visualizador XAML) e [!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)] geralmente são executados nesta zona da Internet e usam o mesmo conjunto de permissões.</span><span class="sxs-lookup"><span data-stu-id="27a4d-127">"Loose XAML" (pages of noncompiled XAML interpreted at load time by a XAML viewer) and [!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)] are usually run in this internet zone and use the same permission set.</span></span>  <span data-ttu-id="27a4d-128">No entanto, o XAML carregado em um aplicativo totalmente confiável tem o mesmo acesso aos recursos de sistema que o aplicativo host.</span><span class="sxs-lookup"><span data-stu-id="27a4d-128">However, XAML loaded in to a fully trusted application has the same access to the system resources as the hosting application does.</span></span> <span data-ttu-id="27a4d-129">Para obter mais informações, consulte [Segurança parcialmente confiável do WPF](~/docs/framework/wpf/wpf-partial-trust-security.md).</span><span class="sxs-lookup"><span data-stu-id="27a4d-129">For more information, see [WPF Partial Trust Security](~/docs/framework/wpf/wpf-partial-trust-security.md).</span></span>  
  
 <span data-ttu-id="27a4d-130">As implicações dessas instruções para <xref:System.Windows.Markup.XamlReader> é que o design do aplicativo deve fazer as decisões de confiança sobre o XAML decidir carregar.</span><span class="sxs-lookup"><span data-stu-id="27a4d-130">The implications of these statements for <xref:System.Windows.Markup.XamlReader> is that your application design must make trust decisions about the XAML you decide to load.</span></span> <span data-ttu-id="27a4d-131">Se você estiver carregando XAML que não é confiável, considere implementar seu próprio técnica no modo seguro para como carregar o gráfico de objeto resultante.</span><span class="sxs-lookup"><span data-stu-id="27a4d-131">If you are loading XAML that is not trusted, consider implementing your own sandboxing technique for how you load the resulting object graph.</span></span>  
  
 <span data-ttu-id="27a4d-132"><xref:System.Windows.Markup.XamlReader> também pode ser chamado por código parcialmente confiável.</span><span class="sxs-lookup"><span data-stu-id="27a4d-132"><xref:System.Windows.Markup.XamlReader> can also be called by partial trust code.</span></span> <span data-ttu-id="27a4d-133">Nesse caso, a zona de segurança é aplicada para a segurança de acesso do código.</span><span class="sxs-lookup"><span data-stu-id="27a4d-133">In this case, Internet security zone is applied for code access security.</span></span> <span data-ttu-id="27a4d-134">Se qualquer coisa no XAML carregado é inválida na zona de segurança da Internet, é gerada uma exceção de análise XAML.</span><span class="sxs-lookup"><span data-stu-id="27a4d-134">If anything in the loaded XAML is invalid under Internet security zone, a XAML parse exception is thrown.</span></span> <span data-ttu-id="27a4d-135">Em outros casos que são de confiança parcial no nível da plataforma, e XBAP onde <xref:System.Windows.Markup.XamlReader> faz parte da execução, você deve obter o mesmo comportamento de exceção como com chamadas explícitas de confiança parcial.</span><span class="sxs-lookup"><span data-stu-id="27a4d-135">Under XBAP and other cases that are partial trust at the platform level, where <xref:System.Windows.Markup.XamlReader> is part of the execution, you get the same exception behavior as with explicit partial trust calls.</span></span>  
  
## <a name="wpf-xaml-xaml-readerswriters-and-xaml-language-versioning"></a><span data-ttu-id="27a4d-136">WPF XAML, leitores XAML/gravadores e controle de versão de linguagem XAML</span><span class="sxs-lookup"><span data-stu-id="27a4d-136">WPF XAML, XAML Readers/Writers, and XAML Language Versioning</span></span>  
 [!INCLUDE[xaml2009](~/includes/xaml2009-md.md)]<span data-ttu-id="27a4d-137"> inclui recursos de linguagem, como e.</span><span class="sxs-lookup"><span data-stu-id="27a4d-137"> includes language features such as  and .</span></span> <span data-ttu-id="27a4d-138">Você pode usar assinaturas de `Load` ou `Parse` para carregar o XAML que usa esses recursos.</span><span class="sxs-lookup"><span data-stu-id="27a4d-138">You can use signatures of `Load` or `Parse` to load XAML that uses these features.</span></span> <span data-ttu-id="27a4d-139">No entanto, esses recursos de idioma não há suporte para XAML que deve ser compilada com marcação (como o XAML para o **página** ação em um aplicativo do WPF ou qualquer XAML que envolve a tarefa de compilação de marcação nas ações de compilação de compilação).</span><span class="sxs-lookup"><span data-stu-id="27a4d-139">However, those language features are not supported for XAML that needs to be markup compiled (such as XAML for the **Page** build action in a WPF application, or any XAML that involves the markup compile task in the build actions).</span></span>  
  
 <span data-ttu-id="27a4d-140">Tipos WPF e a tecnologia WPF em geral oferecem suporte a conceitos que dependem do acesso aos recursos internos do WPF.</span><span class="sxs-lookup"><span data-stu-id="27a4d-140">WPF types and the WPF technology in general support concepts that rely on access to WPF internals.</span></span> <span data-ttu-id="27a4d-141">Por exemplo, como o WPF implementa propriedades de dependência depende de técnicas internas para pesquisa de membro de tipo eficiente.</span><span class="sxs-lookup"><span data-stu-id="27a4d-141">For instance, how WPF implements dependency properties relies on internal techniques for efficient type-member lookup.</span></span> <span data-ttu-id="27a4d-142">Acesso a esses recursos internos é habilitado por XAML lendo e gravando APIs fornecidas no <xref:System.Windows.Markup.XamlWriter> e <xref:System.Windows.Markup.XamlReader> do <xref:System.Windows.Markup> namespace e assembly PresentationFramework.</span><span class="sxs-lookup"><span data-stu-id="27a4d-142">Access to these internals is enabled by the XAML reading and writing APIs provided in <xref:System.Windows.Markup.XamlWriter> and <xref:System.Windows.Markup.XamlReader> from the <xref:System.Windows.Markup> namespace and PresentationFramework assembly.</span></span> <span data-ttu-id="27a4d-143">No entanto, os leitores XAML de nível inferior e autores de XAML do assembly System. XAML (classes com base em <xref:System.Xaml.XamlReader?displayProperty=nameWithType>, <xref:System.Xaml.XamlWriter?displayProperty=nameWithType>) não tem acesso para a parte interna do WPF.</span><span class="sxs-lookup"><span data-stu-id="27a4d-143">However, the lower-level XAML readers and XAML writers from the System.Xaml assembly (classes based on <xref:System.Xaml.XamlReader?displayProperty=nameWithType>, <xref:System.Xaml.XamlWriter?displayProperty=nameWithType>) do not have access to the WPF internals.</span></span> <span data-ttu-id="27a4d-144">Não há nenhuma dependência de System. XAML para qualquer conjunto específico de WPF.</span><span class="sxs-lookup"><span data-stu-id="27a4d-144">There is no dependency from System.Xaml to any WPF-specific assembly.</span></span> <span data-ttu-id="27a4d-145">Sem acesso a itens internos WPF, gravadores e leitores de System. XAML não é possível carregar corretamente ou salvar WPF todos os tipos ou tipos com base nos tipos WPF.</span><span class="sxs-lookup"><span data-stu-id="27a4d-145">Without access to the WPF internals, System.Xaml readers and writers cannot correctly load or save all WPF types, or types based on WPF types.</span></span> <span data-ttu-id="27a4d-146">Em particular, o System. XAML leitores e gravadores não entende conceitos como a propriedade de dependência do WPF fazendo o armazenamento de propriedades ou todas as especificações de como o WPF usa estilos, dicionários de recursos e modelos.</span><span class="sxs-lookup"><span data-stu-id="27a4d-146">In particular, the System.Xaml readers and writers do not understand concepts such as the WPF dependency property backing property store, or all the specifics of how WPF uses styles, resource dictionaries and templates.</span></span> <span data-ttu-id="27a4d-147">Portanto, você pode escolher fazer:</span><span class="sxs-lookup"><span data-stu-id="27a4d-147">Therefore you have a choice to make:</span></span>  
  
-   <span data-ttu-id="27a4d-148">Se você estiver carregando tipos WPF e/ou você estiver usando o XAML em forma BAML de qualquer forma, use os leitores PresentationFramework XAML e autores de XAML.</span><span class="sxs-lookup"><span data-stu-id="27a4d-148">If you are loading WPF types, and/or you are using XAML in BAML form in any way, use the PresentationFramework XAML readers and XAML writers.</span></span>  
  
-   <span data-ttu-id="27a4d-149">Se você não depender de qualquer tipo WPF ou o formulário BAML de XAML e não estiver usando o leitor XAML ou a implementação de gravador XAML outra tecnologia específica por razões que são específicos para a essa estrutura, use os leitores de System XAML e gravadores XAML.</span><span class="sxs-lookup"><span data-stu-id="27a4d-149">If you are not relying on any WPF types or the BAML form of XAML, and are not using another specific technology's XAML reader or XAML writer implementation for reasons that are specific to that framework, use the System.Xaml XAML readers and XAML writers.</span></span>  
  
## <a name="systemxaml-backing-implementation-in-net-4"></a><span data-ttu-id="27a4d-150">System. XAML fazendo implementação no .NET 4</span><span class="sxs-lookup"><span data-stu-id="27a4d-150">System.Xaml Backing Implementation in .NET 4</span></span>  
 <span data-ttu-id="27a4d-151"><xref:System.Windows.Markup.XamlReader> é a superfície de API que pode ser chamada para o analisador XAML de nível de framework do WPF.</span><span class="sxs-lookup"><span data-stu-id="27a4d-151"><xref:System.Windows.Markup.XamlReader> is the callable API surface for the WPF framework-level XAML parser.</span></span> <span data-ttu-id="27a4d-152">O analisador XAML subjacente mesmo também executa o XAML do tempo de execução, carregando e analisando o destino para aplicativos do WPF [!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)] e [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)].</span><span class="sxs-lookup"><span data-stu-id="27a4d-152">The same underlying XAML parser also performs the run-time XAML loading and parsing for WPF applications that target [!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)] and [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)].</span></span>  
  
 <span data-ttu-id="27a4d-153">Se estiver direcionando [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], a API externa é o mesmo, mas partes da implementação baseiam-se no [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] implementação geral do XAML no assembly System. XAML, o que melhora a muitos aspectos técnicos e relatórios de análise de XAML.</span><span class="sxs-lookup"><span data-stu-id="27a4d-153">If you are targeting [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the external API is the same, but parts of the implementation are built on the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] general XAML implementation in the System.Xaml assembly, which improves many of the technical and reporting aspects of parsing XAML.</span></span> <span data-ttu-id="27a4d-154">Direcionamento [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] necessariamente tipos definidos de infere incluindo System. XAML como uma referência e os detalhes de implementação, como as exceções relatadas podem vir de System. XAML.</span><span class="sxs-lookup"><span data-stu-id="27a4d-154">Targeting [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] necessarily entails including System.Xaml as a reference, and details of implementation such as the exceptions reported may come from System.Xaml defined types.</span></span>  
  
## Examples  
 <span data-ttu-id="27a4d-155">O exemplo a seguir converte um <xref:System.Windows.Controls.Button> em uma cadeia de caracteres usando o <xref:System.Windows.Markup.XamlWriter> classe.</span><span class="sxs-lookup"><span data-stu-id="27a4d-155">The following example converts a <xref:System.Windows.Controls.Button> into a string using the <xref:System.Windows.Markup.XamlWriter> class.</span></span>  <span data-ttu-id="27a4d-156">A cadeia de caracteres, em seguida, é carregada de volta em um <xref:System.Windows.Controls.Button> usando estático <xref:System.Windows.Markup.XamlReader.Load%2A> método sobre o <xref:System.Windows.Markup.XamlReader> classe.</span><span class="sxs-lookup"><span data-stu-id="27a4d-156">The string is then loaded back into a <xref:System.Windows.Controls.Button> using the static <xref:System.Windows.Markup.XamlReader.Load%2A> method on the <xref:System.Windows.Markup.XamlReader> class.</span></span>  
  
 [!code-csharp[xamlreaderwritersnippets#XamlReaderLoadXmlReader](~/samples/snippets/csharp/VS_Snippets_Wpf/XamlReaderWriterSnippets/CSharp/Window1.xaml.cs#xamlreaderloadxmlreader)]
 [!code-vb[xamlreaderwritersnippets#XamlReaderLoadXmlReader](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XamlReaderWriterSnippets/visualbasic/window1.xaml.vb#xamlreaderloadxmlreader)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Markup.XamlWriter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlReader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlReader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="27a4d-157">Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.XamlReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a4d-157">Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlReader" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelAsync">
      <MemberSignature Language="C#" Value="public void CancelAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlReader.CancelAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="27a4d-158">Anulará a operação de carregamento assíncrona atual, se houver uma operação de carregamento assíncrona pendente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a4d-158">Aborts the current asynchronous load operation, if there is an asynchronous load operation pending.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27a4d-159"><xref:System.Windows.Markup.XamlReader.CancelAsync%2A> é uma operação assíncrona; Portanto, alguns carregamento pode ocorrer antes que a operação é anulada.</span><span class="sxs-lookup"><span data-stu-id="27a4d-159"><xref:System.Windows.Markup.XamlReader.CancelAsync%2A> is an asynchronous operation; therefore, some loading may occur before the operation is aborted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWpfSchemaContext">
      <MemberSignature Language="C#" Value="public static System.Xaml.XamlSchemaContext GetWpfSchemaContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xaml.XamlSchemaContext GetWpfSchemaContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlReader.GetWpfSchemaContext" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetWpfSchemaContext () As XamlSchemaContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xaml::XamlSchemaContext ^ GetWpfSchemaContext();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlSchemaContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="27a4d-160">Retorna um objeto <see cref="T:System.Xaml.XamlSchemaContext" /> que representa as configurações de contexto de esquema do WPF para um <see cref="T:System.Windows.Markup.XamlReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a4d-160">Returns a <see cref="T:System.Xaml.XamlSchemaContext" /> object that represents the WPF schema context settings for a <see cref="T:System.Windows.Markup.XamlReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27a4d-161">Um objeto <see cref="T:System.Xaml.XamlSchemaContext" /> que representa as configurações de contexto de esquema do WPF para um <see cref="T:System.Windows.Markup.XamlReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a4d-161">A <see cref="T:System.Xaml.XamlSchemaContext" /> object that represents the WPF schema context settings for a <see cref="T:System.Windows.Markup.XamlReader" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="27a4d-162">Lê a entrada XAML e retorna a raiz da árvore de objetos correspondentes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a4d-162">Reads XAML input and returns the root of the corresponding object tree.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlReader.Load(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Load(System::IO::Stream ^ stream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="27a4d-163">O XAML a ser carregado, na forma de fluxo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a4d-163">The XAML to load, in stream form.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27a4d-164">Lê a entrada XAML no <see cref="T:System.IO.Stream" /> especificado e retorna um <see cref="T:System.Object" /> que é a raiz da árvore de objetos correspondente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a4d-164">Reads the XAML input in the specified <see cref="T:System.IO.Stream" /> and returns an <see cref="T:System.Object" /> that is the root of the corresponding object tree.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27a4d-165">O objeto na raiz da árvore de objetos criada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a4d-165">The object at the root of the created object tree.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="27a4d-166">O exemplo a seguir salva um <xref:System.Windows.Controls.Button> em uma <xref:System.IO.MemoryStream> usando o <xref:System.Windows.Markup.XamlWriter> classe.</span><span class="sxs-lookup"><span data-stu-id="27a4d-166">The following example saves a <xref:System.Windows.Controls.Button> into a <xref:System.IO.MemoryStream> using the <xref:System.Windows.Markup.XamlWriter> class.</span></span> <span data-ttu-id="27a4d-167">O fluxo, em seguida, é carregado para um <xref:System.Windows.Controls.Button> usando estático <xref:System.Windows.Markup.XamlReader.Load%2A> método no <xref:System.Windows.Markup.XamlReader> classe.</span><span class="sxs-lookup"><span data-stu-id="27a4d-167">The stream is then loaded back into a <xref:System.Windows.Controls.Button> using the static <xref:System.Windows.Markup.XamlReader.Load%2A> method on the <xref:System.Windows.Markup.XamlReader> class.</span></span>  
  
 [!code-csharp[XamlReaderWriterSnippets#XamlReaderLoadXmlReader](~/samples/snippets/csharp/VS_Snippets_Wpf/XamlReaderWriterSnippets/CSharp/Window1.xaml.cs#xamlreaderloadxmlreader)]
 [!code-vb[XamlReaderWriterSnippets#XamlReaderLoadXmlReader](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XamlReaderWriterSnippets/visualbasic/window1.xaml.vb#xamlreaderloadxmlreader)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="27a4d-168">
            <paramref name="stream" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a4d-168">
              <paramref name="stream" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Markup.XamlWriter" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (System.Xaml.XamlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(class System.Xaml.XamlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlReader.Load(System.Xaml.XamlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (reader As XamlReader) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Load(System::Xaml::XamlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xaml.XamlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="27a4d-169">Um objeto <see cref="T:System.Xaml.XamlReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a4d-169">A <see cref="T:System.Xaml.XamlReader" /> object.</span>
          </span>
          <span data-ttu-id="27a4d-170">Este deve ser inicializado com o XAML de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a4d-170">This is expected to be initialized with input XAML.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27a4d-171">Lê a entrada de XAML através de um <see cref="T:System.Xaml.XamlReader" /> fornecido e retorna um objeto que é a raiz da árvore de objetos correspondente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a4d-171">Reads the XAML input through a provided <see cref="T:System.Xaml.XamlReader" /> and returns an object that is the root of the corresponding object tree.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27a4d-172">O objeto que é a raiz da árvore de objetos criada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a4d-172">The object that is the root of the created object tree.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27a4d-173">A entrada <xref:System.Xaml.XamlReader> pode ser <xref:System.Windows.Baml2006.Baml2006Reader>.</span><span class="sxs-lookup"><span data-stu-id="27a4d-173">The input <xref:System.Xaml.XamlReader> can be <xref:System.Windows.Baml2006.Baml2006Reader>.</span></span> <span data-ttu-id="27a4d-174">Isso é como você pode carregar BAML em tempo de execução, ou para fins de ferramenta de localização.</span><span class="sxs-lookup"><span data-stu-id="27a4d-174">This is how you can load BAML at run time, or for localization tool purposes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="27a4d-175">
            <paramref name="reader" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a4d-175">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlReader.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (reader As XmlReader) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Load(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="27a4d-176">O <see cref="T:System.Xml.XmlReader" /> que já carregou a entrada XAML a ser carregada no formato XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a4d-176">The <see cref="T:System.Xml.XmlReader" /> that has already loaded the XAML input to load in XML form.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27a4d-177">Lê a entrada do XAML no <see cref="T:System.Xml.XmlReader" /> especificado e retorna um objeto que é a raiz da árvore de objetos correspondente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a4d-177">Reads the XAML input in the specified <see cref="T:System.Xml.XmlReader" /> and returns an object that is the root of the corresponding object tree.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27a4d-178">O objeto que é a raiz da árvore de objetos criada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a4d-178">The object that is the root of the created object tree.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="27a4d-179">O exemplo a seguir converte um <xref:System.Windows.Controls.Button> em uma cadeia de caracteres usando o <xref:System.Windows.Markup.XamlWriter> classe.</span><span class="sxs-lookup"><span data-stu-id="27a4d-179">The following example converts a <xref:System.Windows.Controls.Button> into a string using the <xref:System.Windows.Markup.XamlWriter> class.</span></span>  <span data-ttu-id="27a4d-180">A cadeia de caracteres, em seguida, é carregada de volta em um <xref:System.Windows.Controls.Button> usando estático <xref:System.Windows.Markup.XamlReader.Load%2A> método sobre o <xref:System.Windows.Markup.XamlReader> classe.</span><span class="sxs-lookup"><span data-stu-id="27a4d-180">The string is then loaded back into a <xref:System.Windows.Controls.Button> using the static <xref:System.Windows.Markup.XamlReader.Load%2A> method on the <xref:System.Windows.Markup.XamlReader> class.</span></span>  
  
 [!code-csharp[XamlReaderWriterSnippets#XamlReaderLoadXmlReader](~/samples/snippets/csharp/VS_Snippets_Wpf/XamlReaderWriterSnippets/CSharp/Window1.xaml.cs#xamlreaderloadxmlreader)]
 [!code-vb[XamlReaderWriterSnippets#XamlReaderLoadXmlReader](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XamlReaderWriterSnippets/visualbasic/window1.xaml.vb#xamlreaderloadxmlreader)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="27a4d-181">
            <paramref name="reader" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a4d-181">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Markup.XamlWriter" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (System.IO.Stream stream, System.Windows.Markup.ParserContext parserContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(class System.IO.Stream stream, class System.Windows.Markup.ParserContext parserContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlReader.Load(System.IO.Stream,System.Windows.Markup.ParserContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Load(System::IO::Stream ^ stream, System::Windows::Markup::ParserContext ^ parserContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="parserContext" Type="System.Windows.Markup.ParserContext" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="27a4d-182">O fluxo que contém a entrada XAML a ser carregada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a4d-182">The stream that contains the XAML input to load.</span>
          </span>
        </param>
        <param name="parserContext">
          <span data-ttu-id="27a4d-183">Informações de contexto usadas pelo analisador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a4d-183">Context information used by the parser.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27a4d-184">Lê a entrada do XAML no <see cref="T:System.IO.Stream" /> especificado e retorna um objeto que é a raiz da árvore de objetos correspondente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a4d-184">Reads the XAML input in the specified <see cref="T:System.IO.Stream" /> and returns an object that is the root of the corresponding object tree.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27a4d-185">O objeto que é a raiz da árvore de objetos criada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a4d-185">The object that is the root of the created object tree.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="27a4d-186">
            <paramref name="stream" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a4d-186">
              <paramref name="stream" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="27a4d-187">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a4d-187">-or-</span>
          </span>
          <span data-ttu-id="27a4d-188">
            <paramref name="parserContext" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a4d-188">
              <paramref name="parserContext" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Markup.XamlWriter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadAsync">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="27a4d-189">Lê a marcação XAML e retorna um objeto que corresponde à raiz da marcação especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a4d-189">Reads XAML markup and returns an object that corresponds to the root of the specified markup.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadAsync">
      <MemberSignature Language="C#" Value="public object LoadAsync (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object LoadAsync(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlReader.LoadAsync(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ LoadAsync(System::IO::Stream ^ stream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="27a4d-190">O fluxo que contém a entrada XAML a ser carregada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a4d-190">The stream containing the XAML input to load.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27a4d-191">Lê a entrada XAML no <see cref="T:System.IO.Stream" /> especificado e retorna a raiz da árvore de objetos correspondente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a4d-191">Reads the XAML input in the specified <see cref="T:System.IO.Stream" /> and returns the root of the corresponding object tree.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27a4d-192">O objeto que é a raiz da árvore de objetos criada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a4d-192">The object that is the root of the created object tree.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27a4d-193">Uma operação assíncrona de carregamento XAML inicialmente retornará um objeto que é exclusivamente o objeto raiz.</span><span class="sxs-lookup"><span data-stu-id="27a4d-193">An asynchronous XAML load operation will initially return an object that is purely the root object.</span></span> <span data-ttu-id="27a4d-194">De forma assíncrona, análise de XAML, em seguida, continua e quaisquer objetos filho são preenchidos na raiz do.</span><span class="sxs-lookup"><span data-stu-id="27a4d-194">Asynchronously, XAML parsing then continues, and any child objects are filled in under the root.</span></span> <span data-ttu-id="27a4d-195">Isso está em contraste com o XAML WPF típico processamento comportamento e sua interação com os conceitos do WPF do tempo de vida do objeto.</span><span class="sxs-lookup"><span data-stu-id="27a4d-195">This is in contrast to the typical WPF XAML processing behavior and its interaction with WPF concepts of object lifetime.</span></span> <span data-ttu-id="27a4d-196">Na interação típica (não assíncronas), todas as propriedades de um objeto, incluindo todas as coleções filho são preenchidas antes de retornar um elemento e relatá-las como carregado.</span><span class="sxs-lookup"><span data-stu-id="27a4d-196">In the typical (non-async) interaction, all properties of an object including all child collections are filled before returning an element and reporting it as loaded.</span></span> <span data-ttu-id="27a4d-197">Esse comportamento é igual a uma metodologia de baixo para cima para criar a árvore de onde o objeto raiz é o último objeto se torne disponível.</span><span class="sxs-lookup"><span data-stu-id="27a4d-197">That behavior equates to a bottom-up methodology for creating the tree where the root object is the last object to become available.</span></span>  
  
 <span data-ttu-id="27a4d-198">Você normalmente atribua o objeto retornado para um local na árvore de objetos do aplicativo WPF, com o conhecimento de conteúdo pode ainda ser preencher e pode fazer com que as atualizações de layout incrementais se todo o conteúdo é exposto como parte da interface do usuário.</span><span class="sxs-lookup"><span data-stu-id="27a4d-198">You typically would assign the returned object to some location in your WPF application's object tree, with the knowledge that content might still be filling in and might cause incremental layout updates if the entire content is exposed as part of the UI.</span></span> <span data-ttu-id="27a4d-199">Por isso é típico para isolar ou virtualização de todos os objetos carregados de forma assíncrona do XAML e usar lógica específica do aplicativo ou o estado do aplicativo a ser notificado quando <xref:System.Windows.Markup.XamlReader.LoadCompleted> é tratado.</span><span class="sxs-lookup"><span data-stu-id="27a4d-199">For this reason it is typical to isolate or virtualize any asynchronously loaded objects from XAML, and to use application-specific logic or application state to notify when <xref:System.Windows.Markup.XamlReader.LoadCompleted> is handled.</span></span>  
  
 <span data-ttu-id="27a4d-200">Para que <xref:System.Windows.Markup.XamlReader.LoadAsync%2A> para carregar o XAML de forma assíncrona de entrada, o elemento raiz no XAML de entrada deve conter o atributo e o valor `x:SynchronousMode="Async"`.</span><span class="sxs-lookup"><span data-stu-id="27a4d-200">In order for <xref:System.Windows.Markup.XamlReader.LoadAsync%2A> to load XAML input asynchronously, the root element in the XAML input must contain the attribute and value `x:SynchronousMode="Async"`.</span></span> <span data-ttu-id="27a4d-201">O valor é tratado como maiusculas e minúsculas.</span><span class="sxs-lookup"><span data-stu-id="27a4d-201">The value is treated as case sensitive.</span></span> <span data-ttu-id="27a4d-202">Se a raiz de entrada de XAML não contém `x:SynchronousMode="Async"`, nenhuma exceção é lançada e a chamada é processada como uma carga síncrona (consulte <xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%29>).</span><span class="sxs-lookup"><span data-stu-id="27a4d-202">If the XAML input root does not contain `x:SynchronousMode="Async"`, no exception is thrown, and the call is processed as a synchronous load (see <xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%29>).</span></span>  
  
 <span data-ttu-id="27a4d-203">Apenas uma operação de carregamento assíncrono por instância do <xref:System.Windows.Markup.XamlReader> classe pode ser executada por vez.</span><span class="sxs-lookup"><span data-stu-id="27a4d-203">Only one asynchronous load operation per instance of the <xref:System.Windows.Markup.XamlReader> class can be performed at a time.</span></span>  <span data-ttu-id="27a4d-204">Se mais de uma operação assíncrona é tentada na mesma instância do <xref:System.Windows.Markup.XamlReader> classe um <xref:System.InvalidOperationException> é gerada.</span><span class="sxs-lookup"><span data-stu-id="27a4d-204">If more than one asynchronous operation is attempted on the same instance of the <xref:System.Windows.Markup.XamlReader> class an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="27a4d-205">
            <paramref name="stream" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a4d-205">
              <paramref name="stream" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="27a4d-206">Várias operações de carregamento estão pendentes simultaneamente com o mesmo <see cref="T:System.Windows.Markup.XamlReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a4d-206">Multiple load operations are pending concurrently with the same <see cref="T:System.Windows.Markup.XamlReader" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Markup.XamlWriter" />
      </Docs>
    </Member>
    <Member MemberName="LoadAsync">
      <MemberSignature Language="C#" Value="public object LoadAsync (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object LoadAsync(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlReader.LoadAsync(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadAsync (reader As XmlReader) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ LoadAsync(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="27a4d-207">Um <see cref="T:System.Xml.XmlReader" /> existente que já carregou/leu a entrada XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a4d-207">An existing  <see cref="T:System.Xml.XmlReader" /> that has already loaded/read the XAML input.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27a4d-208">Lê a entrada XAML no <see cref="T:System.Xml.XmlReader" /> especificado e retorna a raiz da árvore de objetos correspondente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a4d-208">Reads the XAML input in the specified <see cref="T:System.Xml.XmlReader" /> and returns the root of the corresponding object tree.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27a4d-209">A raiz da árvore de objetos criada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a4d-209">The root of the created object tree.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27a4d-210">Uma operação assíncrona de carregamento XAML inicialmente retornará um objeto que é exclusivamente o objeto raiz.</span><span class="sxs-lookup"><span data-stu-id="27a4d-210">An asynchronous XAML load operation will initially return an object that is purely the root object.</span></span> <span data-ttu-id="27a4d-211">De forma assíncrona, análise de XAML, em seguida, continua e quaisquer objetos filho são preenchidos na raiz do.</span><span class="sxs-lookup"><span data-stu-id="27a4d-211">Asynchronously, XAML parsing then continues, and any child objects are filled in under the root.</span></span> <span data-ttu-id="27a4d-212">Isso está em contraste com o XAML WPF típico processamento comportamento e sua interação com os conceitos do WPF do tempo de vida do objeto.</span><span class="sxs-lookup"><span data-stu-id="27a4d-212">This is in contrast to the typical WPF XAML processing behavior and its interaction with WPF concepts of object lifetime.</span></span> <span data-ttu-id="27a4d-213">Na interação típica (não assíncronas), todas as propriedades de um objeto, incluindo todas as coleções filho são preenchidas antes de retornar um elemento e relatá-las como carregado.</span><span class="sxs-lookup"><span data-stu-id="27a4d-213">In the typical (non-async) interaction, all properties of an object including all child collections are filled before returning an element and reporting it as loaded.</span></span> <span data-ttu-id="27a4d-214">Esse comportamento é igual a uma metodologia de baixo para cima para criar a árvore de onde o objeto raiz é o último objeto se torne disponível.</span><span class="sxs-lookup"><span data-stu-id="27a4d-214">That behavior equates to a bottom-up methodology for creating the tree where the root object is the last object to become available.</span></span>  
  
 <span data-ttu-id="27a4d-215">Você normalmente atribui o objeto retornado de <xref:System.Windows.Markup.XamlReader.LoadAsync%2A> para um local na árvore de objetos do aplicativo, o conhecimento que o conteúdo pode ainda ser preencher e pode fazer com que as atualizações de layout incrementais se todo o conteúdo é exposto como parte da interface do usuário.</span><span class="sxs-lookup"><span data-stu-id="27a4d-215">You typically would assign the returned object from <xref:System.Windows.Markup.XamlReader.LoadAsync%2A> to some location in your application's object tree, with the knowledge that content might still be filling in and might cause incremental layout updates if the entire content is exposed as part of the UI.</span></span> <span data-ttu-id="27a4d-216">Por isso é típico para isolar ou virtualização de todos os objetos carregados de forma assíncrona do XAML e usar lógica específica do aplicativo ou o estado do aplicativo a ser notificado quando <xref:System.Windows.Markup.XamlReader.LoadCompleted> é tratado.</span><span class="sxs-lookup"><span data-stu-id="27a4d-216">For this reason it is typical to isolate or virtualize any asynchronously loaded objects from XAML, and to use application-specific logic or application state to notify when <xref:System.Windows.Markup.XamlReader.LoadCompleted> is handled.</span></span>  
  
 <span data-ttu-id="27a4d-217">Para que <xref:System.Windows.Markup.XamlReader.LoadAsync%2A> para carregar o XAML de forma assíncrona de entrada, o elemento raiz na marcação XAML deve conter o atributo e o valor `x:SynchronousMode="Async"`.</span><span class="sxs-lookup"><span data-stu-id="27a4d-217">In order for <xref:System.Windows.Markup.XamlReader.LoadAsync%2A> to load XAML input asynchronously, the root element in the XAML markup must contain the attribute and value `x:SynchronousMode="Async"`.</span></span> <span data-ttu-id="27a4d-218">O valor é tratado como maiusculas e minúsculas.</span><span class="sxs-lookup"><span data-stu-id="27a4d-218">The value is treated as case sensitive.</span></span> <span data-ttu-id="27a4d-219">Se a raiz de marcação XAML não contém `x:SynchronousMode="Async"`, nenhuma exceção é lançada e a chamada é processada em vez disso, como uma carga síncrona (consulte <xref:System.Windows.Markup.XamlReader.Load%28System.Xml.XmlReader%29>).</span><span class="sxs-lookup"><span data-stu-id="27a4d-219">If the XAML markup root does not contain `x:SynchronousMode="Async"`, no exception is thrown, and the call is instead processed as a synchronous load (see <xref:System.Windows.Markup.XamlReader.Load%28System.Xml.XmlReader%29>).</span></span>  
  
 <span data-ttu-id="27a4d-220">Apenas uma operação de carregamento assíncrono por instância do <xref:System.Windows.Markup.XamlReader> classe pode ser executada por vez.</span><span class="sxs-lookup"><span data-stu-id="27a4d-220">Only one asynchronous load operation per instance of the <xref:System.Windows.Markup.XamlReader> class can be performed at a time.</span></span>  <span data-ttu-id="27a4d-221">Se mais de uma operação assíncrona é tentada na mesma instância do <xref:System.Windows.Markup.XamlReader> classe um <xref:System.InvalidOperationException> é gerada.</span><span class="sxs-lookup"><span data-stu-id="27a4d-221">If more than one asynchronous operation is attempted on the same instance of the <xref:System.Windows.Markup.XamlReader> class an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="27a4d-222">
            <paramref name="reader" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a4d-222">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="27a4d-223">Várias operações de carregamento são executadas simultaneamente com o mesmo <see cref="T:System.Windows.Markup.XamlReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a4d-223">Multiple load operations are performed concurrently with the same <see cref="T:System.Windows.Markup.XamlReader" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Markup.XamlWriter" />
      </Docs>
    </Member>
    <Member MemberName="LoadAsync">
      <MemberSignature Language="C#" Value="public object LoadAsync (System.IO.Stream stream, System.Windows.Markup.ParserContext parserContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object LoadAsync(class System.IO.Stream stream, class System.Windows.Markup.ParserContext parserContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlReader.LoadAsync(System.IO.Stream,System.Windows.Markup.ParserContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ LoadAsync(System::IO::Stream ^ stream, System::Windows::Markup::ParserContext ^ parserContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="parserContext" Type="System.Windows.Markup.ParserContext" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="27a4d-224">Um fluxo que contém a entrada XAML a ser carregada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a4d-224">A stream containing the XAML input to load.</span>
          </span>
        </param>
        <param name="parserContext">
          <span data-ttu-id="27a4d-225">Informações de contexto usadas pelo analisador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a4d-225">Context information used by the parser.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27a4d-226">Lê a entrada XAML no <see cref="T:System.IO.Stream" /> especificado e retorna a raiz da árvore de objetos correspondente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a4d-226">Reads the XAML input in the specified <see cref="T:System.IO.Stream" /> and returns the root of the corresponding object tree.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27a4d-227">A raiz da árvore de objetos criada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a4d-227">The root of the created object tree.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27a4d-228">Uma operação assíncrona de carregamento XAML inicialmente retornará um objeto que é exclusivamente o objeto raiz.</span><span class="sxs-lookup"><span data-stu-id="27a4d-228">An asynchronous XAML load operation will initially return an object that is purely the root object.</span></span> <span data-ttu-id="27a4d-229">De forma assíncrona, análise de XAML, em seguida, continua e quaisquer objetos filho são preenchidos na raiz do.</span><span class="sxs-lookup"><span data-stu-id="27a4d-229">Asynchronously, XAML parsing then continues, and any child objects are filled in under the root.</span></span> <span data-ttu-id="27a4d-230">Isso está em contraste com o XAML WPF típico processamento comportamento e sua interação com os conceitos do WPF do tempo de vida do objeto.</span><span class="sxs-lookup"><span data-stu-id="27a4d-230">This is in contrast to the typical WPF XAML processing behavior and its interaction with WPF concepts of object lifetime.</span></span> <span data-ttu-id="27a4d-231">Na interação típica (não assíncronas), todas as propriedades de um objeto, incluindo todas as coleções filho são preenchidas antes de retornar um elemento e relatá-las como carregado.</span><span class="sxs-lookup"><span data-stu-id="27a4d-231">In the typical (non-async) interaction, all properties of an object including all child collections are filled before returning an element and reporting it as loaded.</span></span> <span data-ttu-id="27a4d-232">Esse comportamento é igual a uma metodologia de baixo para cima para criar a árvore de onde o objeto raiz é o último objeto se torne disponível.</span><span class="sxs-lookup"><span data-stu-id="27a4d-232">That behavior equates to a bottom-up methodology for creating the tree where the root object is the last object to become available.</span></span>  
  
 <span data-ttu-id="27a4d-233">Você normalmente atribua o objeto retornado para um local na árvore de objetos do aplicativo, com o conhecimento de conteúdo pode ainda ser preencher e pode fazer com que as atualizações de layout incrementais se todo o conteúdo é exposto como parte da interface do usuário.</span><span class="sxs-lookup"><span data-stu-id="27a4d-233">You typically would assign the returned object to some location in your application's object tree, with the knowledge that content might still be filling in and might cause incremental layout updates if the entire content is exposed as part of the UI.</span></span> <span data-ttu-id="27a4d-234">Por isso é típico para isolar ou virtualização de todos os objetos carregados de forma assíncrona do XAML e usar lógica específica do aplicativo ou o estado do aplicativo a ser notificado quando <xref:System.Windows.Markup.XamlReader.LoadCompleted> é tratado.</span><span class="sxs-lookup"><span data-stu-id="27a4d-234">For this reason it is typical to isolate or virtualize any asynchronously loaded objects from XAML, and to use application-specific logic or application state to notify when <xref:System.Windows.Markup.XamlReader.LoadCompleted> is handled.</span></span>  
  
 <span data-ttu-id="27a4d-235">Para que <xref:System.Windows.Markup.XamlReader.LoadAsync%2A> para carregar marcação de forma assíncrona, o elemento raiz na marcação XAML deve conter o atributo e o valor `x:SynchronousMode="Async"`.</span><span class="sxs-lookup"><span data-stu-id="27a4d-235">In order for <xref:System.Windows.Markup.XamlReader.LoadAsync%2A> to load markup asynchronously, the root element in the XAML markup must contain the attribute and value `x:SynchronousMode="Async"`.</span></span> <span data-ttu-id="27a4d-236">O valor é tratado como maiusculas e minúsculas.</span><span class="sxs-lookup"><span data-stu-id="27a4d-236">The value is treated as case sensitive.</span></span> <span data-ttu-id="27a4d-237">Se a raiz de marcação XAML não contém `x:SynchronousMode="Async"`, nenhuma exceção é lançada e a chamada é processada como uma carga síncrona (consulte <xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%2CSystem.Windows.Markup.ParserContext%29>).</span><span class="sxs-lookup"><span data-stu-id="27a4d-237">If the XAML markup root does not contain `x:SynchronousMode="Async"`, no exception is thrown, and the call is processed as a synchronous load (see <xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%2CSystem.Windows.Markup.ParserContext%29>).</span></span>  
  
 <span data-ttu-id="27a4d-238">Apenas uma operação de carregamento assíncrono por instância do <xref:System.Windows.Markup.XamlReader> classe pode ser executada por vez.</span><span class="sxs-lookup"><span data-stu-id="27a4d-238">Only one asynchronous load operation per instance of the <xref:System.Windows.Markup.XamlReader> class can be performed at a time.</span></span>  <span data-ttu-id="27a4d-239">Se mais de uma operação assíncrona é tentada na mesma instância do <xref:System.Windows.Markup.XamlReader> classe um <xref:System.InvalidOperationException> é gerada.</span><span class="sxs-lookup"><span data-stu-id="27a4d-239">If more than one asynchronous operation is attempted on the same instance of the <xref:System.Windows.Markup.XamlReader> class an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="27a4d-240">
            <paramref name="stream" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a4d-240">
              <paramref name="stream" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="27a4d-241">Várias operações de carregamento são executadas simultaneamente com o mesmo <see cref="T:System.Windows.Markup.XamlReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a4d-241">Multiple load operations are performed concurrently with the same <see cref="T:System.Windows.Markup.XamlReader" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Markup.XamlWriter" />
      </Docs>
    </Member>
    <Member MemberName="LoadCompleted">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.AsyncCompletedEventHandler LoadCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.AsyncCompletedEventHandler LoadCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Markup.XamlReader.LoadCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Event LoadCompleted As AsyncCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::AsyncCompletedEventHandler ^ LoadCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AsyncCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="27a4d-242">Ocorre quando uma operação de carregamento assíncrona é concluída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a4d-242">Occurs when an asynchronous load operation completes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27a4d-243"><xref:System.Windows.Markup.XamlReader.LoadCompleted> também é gerado quando anula uma operação de carregamento assíncrono.</span><span class="sxs-lookup"><span data-stu-id="27a4d-243"><xref:System.Windows.Markup.XamlReader.LoadCompleted> is also raised when an asynchronous load operation aborts.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.AsyncCompletedEventHandler" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="27a4d-244">Lê a marcação na cadeia de caracteres de texto especificada e retorna um objeto que corresponde à raiz da marcação especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a4d-244">Reads the markup in the specified text string and returns an object that corresponds to the root of the specified markup.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static object Parse (string xamlText);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Parse(string xamlText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlReader.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (xamlText As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Parse(System::String ^ xamlText);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xamlText">
          <span data-ttu-id="27a4d-245">O XAML de entrada, como uma cadeia de texto simples.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a4d-245">The input XAML, as a single text string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27a4d-246">Lê a entrada XAML na cadeia de texto especificada e retorna um objeto que corresponde à raiz da marcação especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a4d-246">Reads the XAML input in the specified text string and returns an object that corresponds to the root of the specified markup.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27a4d-247">A raiz da árvore de objetos criada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a4d-247">The root of the created object tree.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27a4d-248">As chamadas de implementação <xref:System.Windows.Markup.XamlReader.Load%2A> internamente após a criação de um fluxo de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="27a4d-248">The implementation calls <xref:System.Windows.Markup.XamlReader.Load%2A> internally after creating a stream from the string.</span></span> <span data-ttu-id="27a4d-249">Consulte <xref:System.Windows.Markup.XamlReader.Load%2A> para obter informações adicionais, como possíveis exceções.</span><span class="sxs-lookup"><span data-stu-id="27a4d-249">See <xref:System.Windows.Markup.XamlReader.Load%2A> for additional information such as possible exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static object Parse (string xamlText, System.Windows.Markup.ParserContext parserContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Parse(string xamlText, class System.Windows.Markup.ParserContext parserContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlReader.Parse(System.String,System.Windows.Markup.ParserContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Parse(System::String ^ xamlText, System::Windows::Markup::ParserContext ^ parserContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlText" Type="System.String" />
        <Parameter Name="parserContext" Type="System.Windows.Markup.ParserContext" />
      </Parameters>
      <Docs>
        <param name="xamlText">
          <span data-ttu-id="27a4d-250">O XAML de entrada, como uma cadeia de texto simples.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a4d-250">The input XAML, as a single text string.</span>
          </span>
        </param>
        <param name="parserContext">
          <span data-ttu-id="27a4d-251">Informações de contexto usadas pelo analisador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a4d-251">Context information used by the parser.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27a4d-252">Lê a marcação XAML na cadeia de texto especificada (usando um <see cref="T:System.Windows.Markup.ParserContext" /> especificado) e retorna um objeto que corresponde à raiz da marcação especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a4d-252">Reads the XAML markup in the specified text string (using a specified <see cref="T:System.Windows.Markup.ParserContext" />) and returns an object that corresponds to the root of the specified markup.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27a4d-253">A raiz da árvore de objetos criada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27a4d-253">The root of the created object tree.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27a4d-254">As chamadas de implementação <xref:System.Windows.Markup.XamlReader.Load%2A> internamente após a criação de um fluxo de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="27a4d-254">The implementation calls <xref:System.Windows.Markup.XamlReader.Load%2A> internally after creating a stream from the string.</span></span> <span data-ttu-id="27a4d-255">Consulte <xref:System.Windows.Markup.XamlReader.Load%2A> para obter informações adicionais, como possíveis exceções.</span><span class="sxs-lookup"><span data-stu-id="27a4d-255">See <xref:System.Windows.Markup.XamlReader.Load%2A> for additional information such as possible exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>