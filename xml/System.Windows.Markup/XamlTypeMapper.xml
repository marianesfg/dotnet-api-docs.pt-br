<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XamlTypeMapper.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a3d3958120fe26b80e126a09c20e3314d4c834d3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a3d3958120fe26b80e126a09c20e3314d4c834d3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Markup.XamlTypeMapper">
          <source>Maps a XAML element name to the appropriate CLR <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> in assemblies.</source>
          <target state="translated">Mapeia um nome de elemento XAML para o <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> do CLR apropriado em assemblies.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.XamlTypeMapper">
          <source><ph id="ph1">&lt;xref:System.Windows.Markup.XamlTypeMapper&gt;</ph> is part of an advanced WPF scenario that supplies alternate context for <ph id="ph2">&lt;xref:System.Windows.Markup.XamlReader&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Markup.XamlWriter&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Markup.XamlTypeMapper&gt;</ph> faz parte de um cenário avançado do WPF que fornece um contexto alternativo para <ph id="ph2">&lt;xref:System.Windows.Markup.XamlReader&gt;</ph> e <ph id="ph3">&lt;xref:System.Windows.Markup.XamlWriter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.XamlTypeMapper">
          <source>For <ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> WPF applications, you should consider overriding <ph id="ph2">&lt;xref:System.Xaml.XamlSchemaContext&gt;</ph> for this scenario, rather than attempting to use <ph id="ph3">&lt;xref:System.Windows.Markup.XamlTypeMapper&gt;</ph>.</source>
          <target state="translated">Para <ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> aplicativos WPF, considere substituir <ph id="ph2">&lt;xref:System.Xaml.XamlSchemaContext&gt;</ph> para este cenário, em vez de tentar usar <ph id="ph3">&lt;xref:System.Windows.Markup.XamlTypeMapper&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.XamlTypeMapper">
          <source><ph id="ph1">&lt;xref:System.Windows.Markup.XamlTypeMapper&gt;</ph> can be used to provide the XAML parser with custom mapping information through a more direct technique than the application of <ph id="ph2">&lt;xref:System.Windows.Markup.XmlnsDefinitionAttribute&gt;</ph> values on the assembly code.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Markup.XamlTypeMapper&gt;</ph> pode ser usado para fornecer o analisador XAML com informações de mapeamento personalizado por meio de uma técnica mais direta que o aplicativo de <ph id="ph2">&lt;xref:System.Windows.Markup.XmlnsDefinitionAttribute&gt;</ph> valores no código do assembly.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.XamlTypeMapper">
          <source>This might be useful for consolidation of all CLR namespaces in an assembly, or for referencing types that are XAML-ready in an existing assembly without having to recompile it just to add <ph id="ph1">&lt;xref:System.Windows.Markup.XmlnsDefinitionAttribute&gt;</ph> attributing.</source>
          <target state="translated">Isso pode ser útil para a consolidação de todos os namespaces CLR em um assembly, ou para fazer referência a tipos que estão prontos para o XAML em um assembly existente sem precisar recompilar-apenas para adicionar <ph id="ph1">&lt;xref:System.Windows.Markup.XmlnsDefinitionAttribute&gt;</ph> atribuição.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.XamlTypeMapper">
          <source>You typically create a <ph id="ph1">&lt;xref:System.Windows.Markup.XamlTypeMapper&gt;</ph> instance in order to specify the <ph id="ph2">&lt;xref:System.Windows.Markup.ParserContext.XamlTypeMapper%2A&gt;</ph> property value for a <ph id="ph3">&lt;xref:System.Windows.Markup.ParserContext&gt;</ph>.</source>
          <target state="translated">Você normalmente cria um <ph id="ph1">&lt;xref:System.Windows.Markup.XamlTypeMapper&gt;</ph> instância para especificar o <ph id="ph2">&lt;xref:System.Windows.Markup.ParserContext.XamlTypeMapper%2A&gt;</ph> valor de propriedade para um <ph id="ph3">&lt;xref:System.Windows.Markup.ParserContext&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.XamlTypeMapper">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Markup.ParserContext&gt;</ph> in turn can be used as the context for a <ph id="ph2">&lt;xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%2CSystem.Windows.Markup.ParserContext%29?displayProperty=nameWithType&gt;</ph> call.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Windows.Markup.ParserContext&gt;</ph> por sua vez, pode ser usado como o contexto para um <ph id="ph2">&lt;xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%2CSystem.Windows.Markup.ParserContext%29?displayProperty=nameWithType&gt;</ph> chamar.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.XamlTypeMapper">
          <source>Default Mapper</source>
          <target state="translated">Mapeador de padrão</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.XamlTypeMapper">
          <source>You can obtain a default mapper using the <ph id="ph1">&lt;xref:System.Windows.Markup.XamlTypeMapper.DefaultMapper%2A&gt;</ph> static property.</source>
          <target state="translated">Você pode obter um mapeador padrão usando o <ph id="ph1">&lt;xref:System.Windows.Markup.XamlTypeMapper.DefaultMapper%2A&gt;</ph> propriedade estática.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.XamlTypeMapper">
          <source>The default mapper only works on a default assembly list.</source>
          <target state="translated">O mapeador de padrão só funciona em uma lista de assembly padrão.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.XamlTypeMapper">
          <source>No specific information about assemblies (as is specified in <ph id="ph1">&lt;xref:System.Windows.Markup.XamlTypeMapper&gt;</ph> constructors) is used.</source>
          <target state="translated">Não há informações específicas sobre assemblies (conforme especificado no <ph id="ph1">&lt;xref:System.Windows.Markup.XamlTypeMapper&gt;</ph> construtores) é usado.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="T:System.Windows.Markup.XamlTypeMapper">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Markup.XamlTypeMapper" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Windows.Markup.XamlTypeMapper" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.#ctor(System.String[])">
          <source>The array of assembly names the <ph id="ph1">&lt;see cref="T:System.Windows.Markup.XamlTypeMapper" /&gt;</ph> should use.</source>
          <target state="translated">A matriz de nomes de assembly que o <ph id="ph1">&lt;see cref="T:System.Windows.Markup.XamlTypeMapper" /&gt;</ph> deve usar.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.#ctor(System.String[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Markup.XamlTypeMapper" /&gt;</ph> class by specifying an array of assembly names that the <ph id="ph2">&lt;see cref="T:System.Windows.Markup.XamlTypeMapper" /&gt;</ph> should use.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Windows.Markup.XamlTypeMapper" /&gt;</ph> especificando uma matriz de nomes de assembly que o <ph id="ph2">&lt;see cref="T:System.Windows.Markup.XamlTypeMapper" /&gt;</ph> deve usar.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.#ctor(System.String[])">
          <source><ph id="ph1">&lt;paramref name="assemblyNames" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="assemblyNames" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.#ctor(System.String[],System.Windows.Markup.NamespaceMapEntry[])">
          <source>The array of assembly names the <ph id="ph1">&lt;see cref="T:System.Windows.Markup.XamlTypeMapper" /&gt;</ph> should use.</source>
          <target state="translated">A matriz de nomes de assembly que o <ph id="ph1">&lt;see cref="T:System.Windows.Markup.XamlTypeMapper" /&gt;</ph> deve usar.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.#ctor(System.String[],System.Windows.Markup.NamespaceMapEntry[])">
          <source>The array of namespace maps the <ph id="ph1">&lt;see cref="T:System.Windows.Markup.XamlTypeMapper" /&gt;</ph> should use.</source>
          <target state="translated">A matriz de mapas de namespace que o <ph id="ph1">&lt;see cref="T:System.Windows.Markup.XamlTypeMapper" /&gt;</ph> deve usar.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.#ctor(System.String[],System.Windows.Markup.NamespaceMapEntry[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Markup.XamlTypeMapper" /&gt;</ph> class, using the specified array of assembly names and the specified namespace maps.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Windows.Markup.XamlTypeMapper" /&gt;</ph> usando a matriz especificada de nomes de assembly e os mapas de namespace especificados.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.#ctor(System.String[],System.Windows.Markup.NamespaceMapEntry[])">
          <source><ph id="ph1">&lt;paramref name="assemblyNames" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="assemblyNames" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(System.String,System.String,System.String)">
          <source>The prefix for the XML namespace..</source>
          <target state="translated">O prefixo para o namespace de XML.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(System.String,System.String,System.String)">
          <source>The CLR  namespace that contains the types to map.</source>
          <target state="translated">O namespace CLR que contém os tipos a mapear.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(System.String,System.String,System.String)">
          <source>The assembly that contains the CLR  namespace.</source>
          <target state="translated">O assembly que contém o namespace CLR.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(System.String,System.String,System.String)">
          <source>Defines a mapping between an XML namespace and CLR namespaces in assemblies, and adds these to the <ph id="ph1">&lt;see cref="T:System.Windows.Markup.XamlTypeMapper" /&gt;</ph> information.</source>
          <target state="translated">Define um mapeamento entre um namespace de XML e namespaces CLR em assemblies e adiciona-os às informações de <ph id="ph1">&lt;see cref="T:System.Windows.Markup.XamlTypeMapper" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(System.String,System.String,System.String)">
          <source><ph id="ph1">&lt;xref:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction%2A&gt;</ph> is a programmatic way to add a mapping.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction%2A&gt;</ph> é uma maneira de adicionar um mapeamento.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(System.String,System.String,System.String)">
          <source>For example, the different parts of the following XAML mapping instruction correspond to the parameters of the <ph id="ph1">&lt;xref:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction%2A&gt;</ph>:</source>
          <target state="translated">Por exemplo, as diferentes partes de instrução de mapeamento de XAML a seguir correspondem aos parâmetros do <ph id="ph1">&lt;xref:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction%2A&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(System.String,System.String,System.String)">
          <source>The <ph id="ph1">`xmlNamespace`</ph> is <ph id="ph2">`SDK`</ph>, the <ph id="ph3">`clrNamespace`</ph> is <ph id="ph4">`Samples`</ph>, and the <ph id="ph5">`assemblyName`</ph> is <ph id="ph6">`SDKSamples`</ph>.</source>
          <target state="translated">O <ph id="ph1">`xmlNamespace`</ph> é <ph id="ph2">`SDK`</ph>, o <ph id="ph3">`clrNamespace`</ph> é <ph id="ph4">`Samples`</ph>e o <ph id="ph5">`assemblyName`</ph> é <ph id="ph6">`SDKSamples`</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(System.String,System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="xmlNamespace" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="xmlNamespace" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(System.String,System.String,System.String)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(System.String,System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="clrNamespace" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="clrNamespace" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(System.String,System.String,System.String)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(System.String,System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.AllowInternalType(System.Type)">
          <source>The type to access.</source>
          <target state="translated">O tipo a acessar.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.AllowInternalType(System.Type)">
          <source>Requests permission for a <ph id="ph1">&lt;see cref="T:System.Windows.Markup.XamlTypeMapper" /&gt;</ph> derived type that is called under full trust to access a specific internal type.</source>
          <target state="translated">Solicita permissão para um tipo derivado de <ph id="ph1">&lt;see cref="T:System.Windows.Markup.XamlTypeMapper" /&gt;</ph> que é chamado em confiança total para acessar um tipo interno específico.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.AllowInternalType(System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the internal type can be accessed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o tipo interno puder ser acessado; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.XamlTypeMapper.AllowInternalType(System.Type)">
          <source>If not overridden by a subclass, <ph id="ph1">&lt;xref:System.Windows.Markup.XamlTypeMapper.AllowInternalType%2A&gt;</ph> always returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Se não for substituída por uma subclasse <ph id="ph1">&lt;xref:System.Windows.Markup.XamlTypeMapper.AllowInternalType%2A&gt;</ph> sempre retorna <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.XamlTypeMapper.AllowInternalType(System.Type)">
          <source>When overridden by a subclass, the behavior should be that <ph id="ph1">&lt;xref:System.Windows.Markup.XamlTypeMapper.AllowInternalType%2A&gt;</ph> should return <ph id="ph2">`true`</ph> if the internal type can be accessed; otherwise, <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Quando substituído por uma subclasse, o comportamento deve ser <ph id="ph1">&lt;xref:System.Windows.Markup.XamlTypeMapper.AllowInternalType%2A&gt;</ph> deve retornar <ph id="ph2">`true`</ph> se o tipo interno pode ser acessado; caso contrário, <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.Windows.Markup.XamlTypeMapper.DefaultMapper">
          <source>Gets an instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Markup.XamlTypeMapper" /&gt;</ph> to use if one has not been specified.</source>
          <target state="translated">Obtém uma instância do <ph id="ph1">&lt;see cref="T:System.Windows.Markup.XamlTypeMapper" /&gt;</ph> a ser usada se uma não tiver sido especificada.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.XamlTypeMapper.DefaultMapper">
          <source>The default type mapper.</source>
          <target state="translated">O mapeador de tipo padrão.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.XamlTypeMapper.DefaultMapper">
          <source>The default mapper only works on a default assembly list.</source>
          <target state="translated">O mapeador de padrão só funciona em uma lista de assembly padrão.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.XamlTypeMapper.DefaultMapper">
          <source>No specific information about assemblies (as is specified in <ph id="ph1">&lt;xref:System.Windows.Markup.XamlTypeMapper&gt;</ph> constructors) is used.</source>
          <target state="translated">Não há informações específicas sobre assemblies (conforme especificado no <ph id="ph1">&lt;xref:System.Windows.Markup.XamlTypeMapper&gt;</ph> construtores) é usado.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.XamlTypeMapper.DefaultMapper">
          <source>In the current implementation the default assembly list is: <ph id="ph1">`WindowsBase`</ph>, <ph id="ph2">`PresentationCore`</ph>, <ph id="ph3">`PresentationFramework`</ph>.</source>
          <target state="translated">Na implementação atual é a lista de assemblies padrão: <ph id="ph1">`WindowsBase`</ph>, <ph id="ph2">`PresentationCore`</ph>, <ph id="ph3">`PresentationFramework`</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.XamlTypeMapper.DefaultMapper">
          <source>Using the default mapper does not mean that you cannot use custom assemblies/types in XAML at all.</source>
          <target state="translated">Usando o mapeador de padrão não significa que você não pode usar tipos/assemblies personalizados em XAML em todos os.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.XamlTypeMapper.DefaultMapper">
          <source>It only means that if you do use custom types/assemblies, you must then use the conventional XAML technique of creating the mappings as <ph id="ph1">`xmlns`</ph> attributes in each XAML page where the types/assemblies are referenced, as opposed to a type mapper API.</source>
          <target state="translated">Isso significa apenas que, se você usar tipos/assemblies personalizados, você deve, em seguida, usar a técnica XAML convencional de criação de mapeamentos de <ph id="ph1">`xmlns`</ph> atributos em cada página do XAML onde os tipos/assemblies são referenciados, em vez de um API de mapeador de tipo.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.XamlTypeMapper.DefaultMapper">
          <source>For more information, see <bpt id="p1">[</bpt>XAML Namespaces and Namespace Mapping for WPF XAML<ept id="p1">](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>Namespaces XAML e o mapeamento de Namespace para WPF XAML<ept id="p1">](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md)</ept>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.GetType(System.String,System.String)">
          <source>The specified XML namespace prefix.</source>
          <target state="translated">O prefixo de namespace de XML especificado.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.GetType(System.String,System.String)">
          <source>The "local" name of the XAML element to obtain the mapped <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> for.</source>
          <target state="translated">O nome "local" do elemento XAML para o qual obter o <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> mapeado.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.GetType(System.String,System.String)">
          <source>Local in this context means as mapped versus the provided <bpt id="p1">&lt;c&gt;</bpt>xmlNamespace<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Local neste contexto significa conforme mapeado versus o <bpt id="p1">&lt;c&gt;</bpt>xmlNamespace<ept id="p1">&lt;/c&gt;</ept> fornecido.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.GetType(System.String,System.String)">
          <source>Gets the CLR <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that a given XAML element is mapped to, using the specified XML namespace prefix and element name.</source>
          <target state="translated">Obtém o CLR <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> para o qual um determinado elemento XAML é mapeado, usando o prefixo de namespace de XML e o nome de elemento especificados.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.GetType(System.String,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> for the object, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no mapping could be resolved.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> para o objeto ou <ph id="ph2">&lt;see langword="null" /&gt;</ph>, se nenhum mapeamento puder ser resolvido.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.XamlTypeMapper.GetType(System.String,System.String)">
          <source>If a type cannot be found that maps to the provided information, <ph id="ph1">`null`</ph> is returned.</source>
          <target state="translated">Se não for encontrado um tipo que mapeia para as informações fornecidas, <ph id="ph1">`null`</ph> será retornado.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.XamlTypeMapper.GetType(System.String,System.String)">
          <source>Do not include the prefix as part of <ph id="ph1">`localName`</ph>.</source>
          <target state="translated">Não incluir o prefixo como parte do <ph id="ph1">`localName`</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.XamlTypeMapper.GetType(System.String,System.String)">
          <source>For any prefixed XAML element information, separate it into <ph id="ph1">`xmlNamespace`</ph> and <ph id="ph2">`localName`</ph> components for this API call.</source>
          <target state="translated">Para qualquer prefixo informações de elementos XAML, separá-lo em <ph id="ph1">`xmlNamespace`</ph> e <ph id="ph2">`localName`</ph> componentes para a chamada de API.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.GetType(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="xmlNamespace" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="xmlNamespace" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.GetType(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.GetType(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="localName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="localName" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(System.String,System.String)">
          <source>The short name of the assembly without an extension or path specified (equivalent to <ph id="ph1">&lt;see cref="P:System.Reflection.AssemblyName.Name" /&gt;</ph>).</source>
          <target state="translated">O nome curto do assembly sem uma extensão ou caminho especificado (equivalente a <ph id="ph1">&lt;see cref="P:System.Reflection.AssemblyName.Name" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(System.String,System.String)">
          <source>The file path of the assembly.</source>
          <target state="translated">O caminho do arquivo do assembly.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(System.String,System.String)">
          <source>The assembly path must be a full file path containing a file extension.</source>
          <target state="translated">O caminho do assembly deve ser um caminho completo contendo uma extensão de arquivo.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(System.String,System.String)">
          <source>Specifies the path to use when loading an assembly.</source>
          <target state="translated">Especifica o caminho a ser usado ao carregar um assembly.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="assemblyPath" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="assemblyPath" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> é <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="assemblyPath" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="assemblyPath" /&gt;</ph> é <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="assemblyPath" /&gt;</ph> is not a full file path containing a file extension.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="assemblyPath" /&gt;</ph> não é um caminho completo do arquivo contendo uma extensão de arquivo.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>