<Type Name="XamlTypeMapper" FullName="System.Windows.Markup.XamlTypeMapper">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9aeb2fb9cd6a9f79252bf2bd4d685108279328cc" /><Meta Name="ms.sourcegitcommit" Value="9e3550fb2088d4faf2043f0acb29da4555519937" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="12/12/2018" /><Meta Name="ms.locfileid" Value="53294805" /></Metadata><TypeSignature Language="C#" Value="public class XamlTypeMapper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlTypeMapper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.XamlTypeMapper" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlTypeMapper" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlTypeMapper" />
  <TypeSignature Language="F#" Value="type XamlTypeMapper = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Mapeia um nome de elemento XAML para o <see cref="T:System.Type" /> do CLR apropriado em assemblies.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.XamlTypeMapper> faz parte de um cenário avançado do WPF que fornece contexto alternativo para <xref:System.Windows.Markup.XamlReader> e <xref:System.Windows.Markup.XamlWriter>. Para [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] aplicativos WPF, considere substituir <xref:System.Xaml.XamlSchemaContext> para esse cenário, em vez de tentar usar <xref:System.Windows.Markup.XamlTypeMapper>.  
  
 <xref:System.Windows.Markup.XamlTypeMapper> pode ser usado para fornecer o analisador XAML com informações de mapeamento personalizado por meio de uma técnica mais direta que o aplicativo de <xref:System.Windows.Markup.XmlnsDefinitionAttribute> valores no código do assembly. Isso pode ser útil para a consolidação de todos os namespaces CLR em um assembly, ou para fazer referência a tipos que estão prontos para o XAML em um assembly existente sem a necessidade de recompilá-lo apenas para adicionar <xref:System.Windows.Markup.XmlnsDefinitionAttribute> atribuição.  
  
 Normalmente, você cria um <xref:System.Windows.Markup.XamlTypeMapper> instância para especificar o <xref:System.Windows.Markup.ParserContext.XamlTypeMapper%2A> valor da propriedade para um <xref:System.Windows.Markup.ParserContext>. O <xref:System.Windows.Markup.ParserContext> por sua vez, pode ser usado como o contexto para um <xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%2CSystem.Windows.Markup.ParserContext%29?displayProperty=nameWithType> chamar.  
  
## <a name="default-mapper"></a>Mapeador de padrão  
 Você pode obter um mapeador padrão usando o <xref:System.Windows.Markup.XamlTypeMapper.DefaultMapper%2A> propriedade estática. O mapeador padrão só funciona em uma lista de assembly padrão. Não há informações específicas sobre assemblies (conforme especificado na <xref:System.Windows.Markup.XamlTypeMapper> construtores) é usado.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Markup.NamespaceMapEntry" />
    <altmember cref="T:System.Windows.Markup.ParserContext" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.XamlTypeMapper" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlTypeMapper (string[] assemblyNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] assemblyNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.#ctor(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assemblyNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlTypeMapper(cli::array &lt;System::String ^&gt; ^ assemblyNames);" />
      <MemberSignature Language="F#" Value="new System.Windows.Markup.XamlTypeMapper : string[] -&gt; System.Windows.Markup.XamlTypeMapper" Usage="new System.Windows.Markup.XamlTypeMapper assemblyNames" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assemblyNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="assemblyNames">A matriz de nomes de assembly que o <see cref="T:System.Windows.Markup.XamlTypeMapper" /> deve usar.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.XamlTypeMapper" /> especificando uma matriz de nomes de assembly que o <see cref="T:System.Windows.Markup.XamlTypeMapper" /> deve usar.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="assemblyNames" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlTypeMapper (string[] assemblyNames, System.Windows.Markup.NamespaceMapEntry[] namespaceMaps);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] assemblyNames, class System.Windows.Markup.NamespaceMapEntry[] namespaceMaps) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.#ctor(System.String[],System.Windows.Markup.NamespaceMapEntry[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assemblyNames As String(), namespaceMaps As NamespaceMapEntry())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlTypeMapper(cli::array &lt;System::String ^&gt; ^ assemblyNames, cli::array &lt;System::Windows::Markup::NamespaceMapEntry ^&gt; ^ namespaceMaps);" />
      <MemberSignature Language="F#" Value="new System.Windows.Markup.XamlTypeMapper : string[] * System.Windows.Markup.NamespaceMapEntry[] -&gt; System.Windows.Markup.XamlTypeMapper" Usage="new System.Windows.Markup.XamlTypeMapper (assemblyNames, namespaceMaps)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assemblyNames" Type="System.String[]" />
        <Parameter Name="namespaceMaps" Type="System.Windows.Markup.NamespaceMapEntry[]" />
      </Parameters>
      <Docs>
        <param name="assemblyNames">A matriz de nomes de assembly que o <see cref="T:System.Windows.Markup.XamlTypeMapper" /> deve usar.</param>
        <param name="namespaceMaps">A matriz de mapas de namespace que o <see cref="T:System.Windows.Markup.XamlTypeMapper" /> deve usar.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Markup.XamlTypeMapper" /> usando a matriz especificada de nomes de assembly e os mapas de namespace especificados.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="assemblyNames" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddMappingProcessingInstruction">
      <MemberSignature Language="C#" Value="public void AddMappingProcessingInstruction (string xmlNamespace, string clrNamespace, string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddMappingProcessingInstruction(string xmlNamespace, string clrNamespace, string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddMappingProcessingInstruction (xmlNamespace As String, clrNamespace As String, assemblyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddMappingProcessingInstruction(System::String ^ xmlNamespace, System::String ^ clrNamespace, System::String ^ assemblyName);" />
      <MemberSignature Language="F#" Value="member this.AddMappingProcessingInstruction : string * string * string -&gt; unit" Usage="xamlTypeMapper.AddMappingProcessingInstruction (xmlNamespace, clrNamespace, assemblyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlNamespace" Type="System.String" />
        <Parameter Name="clrNamespace" Type="System.String" />
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlNamespace">O prefixo para o namespace de XML.</param>
        <param name="clrNamespace">O namespace CLR que contém os tipos a mapear.</param>
        <param name="assemblyName">O assembly que contém o namespace CLR.</param>
        <summary>Define um mapeamento entre um namespace de XML e namespaces CLR em assemblies e adiciona-os às informações de <see cref="T:System.Windows.Markup.XamlTypeMapper" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction%2A> é uma maneira programática para adicionar um mapeamento.  Por exemplo, as diferentes partes da instrução de mapeamento de XAML a seguir correspondem aos parâmetros da <xref:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction%2A>:  
  
```  
<Window xmlns:SDK="clr-namespace:Samples;assembly=SDKSamples">  
...  
```  
  
 O `xmlNamespace` está `SDK`, o `clrNamespace` é `Samples`e o `assemblyName` é `SDKSamples`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="xmlNamespace" /> é <see langword="null" />  
  
- ou - 
 <paramref name="clrNamespace" /> é <see langword="null" />  
  
- ou - 
 <paramref name="assemblyName" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AllowInternalType">
      <MemberSignature Language="C#" Value="protected virtual bool AllowInternalType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool AllowInternalType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.AllowInternalType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool AllowInternalType(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member AllowInternalType : Type -&gt; bool&#xA;override this.AllowInternalType : Type -&gt; bool" Usage="xamlTypeMapper.AllowInternalType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">O tipo a acessar.</param>
        <summary>Solicita permissão para um tipo derivado de <see cref="T:System.Windows.Markup.XamlTypeMapper" /> que é chamado em confiança total para acessar um tipo interno específico.</summary>
        <returns><see langword="true" /> se o tipo interno puder ser acessado; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se não for substituído por uma subclasse <xref:System.Windows.Markup.XamlTypeMapper.AllowInternalType%2A> sempre retorna `false`.  
  
 Quando substituído por uma subclasse, o comportamento deve ser <xref:System.Windows.Markup.XamlTypeMapper.AllowInternalType%2A> deve retornar `true` se o tipo interno puder ser acessado; caso contrário, `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultMapper">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.XamlTypeMapper DefaultMapper { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Markup.XamlTypeMapper DefaultMapper" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.XamlTypeMapper.DefaultMapper" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultMapper As XamlTypeMapper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Markup::XamlTypeMapper ^ DefaultMapper { System::Windows::Markup::XamlTypeMapper ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultMapper : System.Windows.Markup.XamlTypeMapper" Usage="System.Windows.Markup.XamlTypeMapper.DefaultMapper" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.XamlTypeMapper</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma instância do <see cref="T:System.Windows.Markup.XamlTypeMapper" /> a ser usada se uma não tiver sido especificada.</summary>
        <value>O mapeador de tipo padrão.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O mapeador padrão só funciona em uma lista de assembly padrão. Não há informações específicas sobre assemblies (conforme especificado na <xref:System.Windows.Markup.XamlTypeMapper> construtores) é usado. Na implementação atual é a lista de assemblies padrão: `WindowsBase`, `PresentationCore`, `PresentationFramework`.  
  
 Usando o mapeador de padrão não significa que você não pode usar tipos/assemblies personalizados em XAML em todos os. Isso significa apenas que, se você usar tipos/assemblies personalizados, você deve, em seguida, usar a técnica XAML convencional de criar os mapeamentos como `xmlns` atributos em cada página do XAML em que os tipos/assemblies são referenciados, em vez de um API de mapeador de tipo. Para obter mais informações, consulte [Namespaces XAML e mapeamento de Namespace para XAML WPF](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType (string xmlNamespace, string localName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetType(string xmlNamespace, string localName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.GetType(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType (xmlNamespace As String, localName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType(System::String ^ xmlNamespace, System::String ^ localName);" />
      <MemberSignature Language="F#" Value="override this.GetType : string * string -&gt; Type" Usage="xamlTypeMapper.GetType (xmlNamespace, localName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlNamespace" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlNamespace">O prefixo de namespace de XML especificado.</param>
        <param name="localName">O nome "local" do elemento XAML para o qual obter o <see cref="T:System.Type" /> mapeado. Local neste contexto significa conforme mapeado versus o <paramref name="xmlNamespace" /> fornecido.</param>
        <summary>Obtém o CLR <see cref="T:System.Type" /> para o qual um determinado elemento XAML é mapeado, usando o prefixo de namespace de XML e o nome de elemento especificados.</summary>
        <returns>O <see cref="T:System.Type" /> para o objeto ou <see langword="null" />, se nenhum mapeamento puder ser resolvido.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se não for encontrado um tipo que mapeia para as informações fornecidas, `null` será retornado.  
  
 Não incluir o prefixo como parte do `localName`. Para qualquer prefixo informações sobre o elemento XAML, separe-o na `xmlNamespace` e `localName` componentes para essa chamada à API.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="xmlNamespace" /> é <see langword="null" />  
  
- ou - 
 <paramref name="localName" /> é <see langword="null" />.</exception>
        <altmember cref="T:System.Windows.Markup.IXamlTypeResolver" />
      </Docs>
    </Member>
    <Member MemberName="SetAssemblyPath">
      <MemberSignature Language="C#" Value="public void SetAssemblyPath (string assemblyName, string assemblyPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAssemblyPath(string assemblyName, string assemblyPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAssemblyPath (assemblyName As String, assemblyPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAssemblyPath(System::String ^ assemblyName, System::String ^ assemblyPath);" />
      <MemberSignature Language="F#" Value="member this.SetAssemblyPath : string * string -&gt; unit" Usage="xamlTypeMapper.SetAssemblyPath (assemblyName, assemblyPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="assemblyPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName">O nome curto do assembly sem uma extensão ou caminho especificado (equivalente a <see cref="P:System.Reflection.AssemblyName.Name" />).</param>
        <param name="assemblyPath">O caminho do arquivo do assembly. O caminho do assembly deve ser um caminho completo contendo uma extensão de arquivo.</param>
        <summary>Especifica o caminho a ser usado ao carregar um assembly.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="assemblyName" /> é <see langword="null" />  
  
- ou - 
 <paramref name="assemblyPath" /> é <see langword="null" />.</exception>
        <exception cref="T:System.Windows.Markup.XamlParseException"><paramref name="assemblyName" /> é <see cref="F:System.String.Empty" />  
  
- ou - 
 <paramref name="assemblyPath" /> é <see cref="F:System.String.Empty" />  
  
- ou - 
 <paramref name="assemblyPath" /> não é um caminho completo do arquivo contendo uma extensão de arquivo.</exception>
      </Docs>
    </Member>
  </Members>
</Type>