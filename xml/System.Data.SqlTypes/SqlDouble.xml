<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SqlDouble.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5672d7bdd849e1f40d66addbb299b99f92e44d460.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">672d7bdd849e1f40d66addbb299b99f92e44d460</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.SqlTypes.SqlDouble">
          <source>Represents a floating-point number within the range of -1.79E +308 through 1.79E +308 to be stored in or retrieved from a database.</source>
          <target state="translated">Representa um número de ponto flutuante no intervalo de -1,79E +308 a 1,79E +308 a ser armazenado ou recuperado de um banco de dados.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.#ctor(System.Double)">
          <source>A double whose value will be used for the new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</source>
          <target state="translated">Um valor duplo cujo valor será usado para o novo <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.#ctor(System.Double)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure using the supplied double parameter to set the new <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure's <ph id="ph3">&lt;see cref="P:System.Data.SqlTypes.SqlDouble.Value" /&gt;</ph> property.</source>
          <target state="translated">Inicializa uma nova instância da estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> usando o parâmetro duplo fornecido para definir a propriedade <ph id="ph3">&lt;see cref="P:System.Data.SqlTypes.SqlDouble.Value" /&gt;</ph> da nova estrutura <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.Add(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.Add(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.Add(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>The addition operator computes the sum of the two <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> operands.</source>
          <target state="translated">O operador de adição calcula a soma dos dois operandos <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.Add(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>The sum of the two <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> operands.</source>
          <target state="translated">A soma de dois operandos <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="T:System.Data.SqlTypes.SqlDouble">
          <source>Compares this <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> instance to the supplied object and returns an indication of their relative values.</source>
          <target state="translated">Compara essa instância <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> com um objeto especificado e retorna uma indicação de seus valores relativos.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Data.SqlTypes.SqlDouble)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> to be compared.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> a ser comparado.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Data.SqlTypes.SqlDouble)">
          <source>Compares this <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> instance to the supplied <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> and returns an indication of their relative values.</source>
          <target state="translated">Compara esta instância <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> com o <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> fornecido e retorna uma indicação de seus valores relativos.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Data.SqlTypes.SqlDouble)">
          <source>A signed number that indicates the relative values of the instance and the object.</source>
          <target state="translated">Um número com sinal que indica os valores relativos da instância e do objeto.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Data.SqlTypes.SqlDouble)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Valor retornado</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Data.SqlTypes.SqlDouble)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Condition</source>
          <target state="translated">Condição <ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph></target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Data.SqlTypes.SqlDouble)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Menor que zero</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Data.SqlTypes.SqlDouble)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is less than the object.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Esta instância é menor que o objeto.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Data.SqlTypes.SqlDouble)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Data.SqlTypes.SqlDouble)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is the same as the object.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Esta instância é igual ao objeto.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Data.SqlTypes.SqlDouble)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Maior que zero</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Data.SqlTypes.SqlDouble)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is greater than the object</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Esta instância é maior que o objeto</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Data.SqlTypes.SqlDouble)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Data.SqlTypes.SqlDouble)">
          <source>The object is a null reference (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic)</source>
          <target state="translated">O objeto é uma referência nula (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> no Visual Basic)</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to compare.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> de comparação.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Object)">
          <source>Compares this <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> instance to the supplied <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> and returns an indication of their relative values.</source>
          <target state="translated">Compara esta instância <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> com o <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> fornecido e retorna uma indicação de seus valores relativos.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Object)">
          <source>A signed number that indicates the relative values of the instance and the object.</source>
          <target state="translated">Um número com sinal que indica os valores relativos da instância e do objeto.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Valor retornado</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Condition</source>
          <target state="translated">Condição <ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph></target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Menor que zero</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is less than the object.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Esta instância é menor que o objeto.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is the same as the object.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Esta instância é igual ao objeto.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Maior que zero</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is greater than the object</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Esta instância é maior que o objeto</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Object)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Object)">
          <source>The object is a null reference (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated">O objeto é uma referência nula (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> no Visual Basic).</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.Divide(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.Divide(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.Divide(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>The division operator divides the first <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> operand by the second.</source>
          <target state="translated">O operador de divisão divide o primeiro operando <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> pelo segundo.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.Divide(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure that contains the results of the division operation.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> que contém os resultados da operação de divisão.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlDouble.Divide(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlDouble.Divide%28System.Data.SqlTypes.SqlDouble%2CSystem.Data.SqlTypes.SqlDouble%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">O método equivalente para esse operador é <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlDouble.Divide%28System.Data.SqlTypes.SqlDouble%2CSystem.Data.SqlTypes.SqlDouble%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="T:System.Data.SqlTypes.SqlDouble">
          <source>Returns a value that indicates whether an instance of <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> and the supplied object parameter represent the same value.</source>
          <target state="translated">Retorna um valor que indica se uma instância de <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> e o parâmetro de objeto fornecido representam o mesmo valor.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.Equals(System.Object)">
          <source>The object to be compared.</source>
          <target state="translated">O objeto a ser comparado.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.Equals(System.Object)">
          <source>Compares the supplied object parameter to the <ph id="ph1">&lt;see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /&gt;</ph> property of the <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> object.</source>
          <target state="translated">Compara o parâmetro de objeto fornecido com a propriedade <ph id="ph1">&lt;see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /&gt;</ph> do objeto <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the two values are equal.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se os dois valores forem iguais.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.Equals(System.Object)">
          <source>Otherwise, <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Caso contrário, <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.Equals(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.Equals(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.Equals(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>Performs a logical comparison on two instances of <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> to determine whether they are equal.</source>
          <target state="translated">Executa uma comparação lógica em duas instâncias de <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> para determinar se elas são iguais.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.Equals(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the two values are equal.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se os dois valores forem iguais.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.Equals(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>Otherwise, <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Caso contrário, <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.GetHashCode">
          <source>Returns the hash code for this <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structre.</source>
          <target state="translated">Retorna o código hash desta estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.GetHashCode">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">Um código de hash do inteiro assinado de 32 bits.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
          <source>Returns the XML Schema definition language (XSD) of the specified <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">Retorna a XSD (linguagem de definição de esquema XML) do <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
          <source>A <ph id="ph1">&lt;see langword="string" /&gt;</ph> value that indicates the XSD of the specified <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">Um valor de <ph id="ph1">&lt;see langword="string" /&gt;</ph> que indica o XSD do <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>Compares two instances of <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> to determine whether the first is greater than the second.</source>
          <target state="translated">Compara duas instâncias de <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> para determinar se a primeira é maior que a segunda.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> that is <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph> if the first instance is greater than the second instance.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> que será <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph> se a primeira instância for maior do que a segunda instância.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>Otherwise, <ph id="ph1">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph>.</source>
          <target state="translated">Caso contrário, <ph id="ph1">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>If either instance of <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> is null, the <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph> of the <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> will be <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>.</source>
          <target state="translated">Se uma das instâncias de <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> for nula, o <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph> do <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> será <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>Compares two instances of <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> to determine whether the first is greater than or equal to the second.</source>
          <target state="translated">Compara duas instâncias de <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> para determinar se a primeira é maior ou igual à segunda.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> that is <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph> if the first instance is greater than or equal to the second instance.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> que será <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph> se a primeira instância for maior ou igual à segunda instância.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>Otherwise, <ph id="ph1">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph>.</source>
          <target state="translated">Caso contrário, <ph id="ph1">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>If either instance of <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> is null, the <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph> of the <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> will be <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>.</source>
          <target state="translated">Se uma das instâncias de <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> for nula, o <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph> do <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> será <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="P:System.Data.SqlTypes.SqlDouble.IsNull">
          <source>Returns a Boolean value that indicates whether this <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> instance is null.</source>
          <target state="translated">Retorna um valor booliano que indica se esta instância <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> é nula.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlTypes.SqlDouble.IsNull">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlDouble.Value" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlDouble.Value" /&gt;</ph> é nulo.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlTypes.SqlDouble.IsNull">
          <source>Otherwise, <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Caso contrário, <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlTypes.SqlDouble.IsNull">
          <source>For more information, see <bpt id="p1">[</bpt>Handling Null Values<ept id="p1">](~/docs/framework/data/adonet/sql/handling-null-values.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratar valores nulos<ept id="p1">](~/docs/framework/data/adonet/sql/handling-null-values.md)</ept>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>Compares two instances of <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> to determine whether the first is less than the second.</source>
          <target state="translated">Compara duas instâncias de <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> para determinar se a primeira é menor que a segunda.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> that is <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph> if the first instance is less than the second instance.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> que será <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph> se a primeira instância for menor que a segunda instância.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>Otherwise, <ph id="ph1">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph>.</source>
          <target state="translated">Caso contrário, <ph id="ph1">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>If either instance of <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> is null, the <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph> of the <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> will be <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>.</source>
          <target state="translated">Se uma das instâncias de <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> for nula, o <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph> do <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> será <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>Compares two instances of <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> to determine whether the first is less than or equal to the second.</source>
          <target state="translated">Compara duas instâncias de <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> para determinar se a primeira é menor ou igual à segunda.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> that is <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph> if the first instance is less than or equal to the second instance.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> que será <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph> se a primeira instância for menor ou igual à segunda instância.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>Otherwise, <ph id="ph1">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph>.</source>
          <target state="translated">Caso contrário, <ph id="ph1">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>If either instance of <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> is null, the <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph> of the <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> will be <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>.</source>
          <target state="translated">Se uma das instâncias de <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> for nula, o <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph> do <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> será <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="F:System.Data.SqlTypes.SqlDouble.MaxValue">
          <source>A constant representing the maximum value for a <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure.</source>
          <target state="translated">Uma constante que representa o valor máximo de uma estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.SqlTypes.SqlDouble.MaxValue">
          <source>This value is 1.79E+308</source>
          <target state="translated">Esse valor é 1, 79E + 308</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="F:System.Data.SqlTypes.SqlDouble.MinValue">
          <source>A constant representing the minimum possible value of <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</source>
          <target state="translated">Uma constante que representa o valor mínimo possível do <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.SqlTypes.SqlDouble.MinValue">
          <source>This value is -1.79E+308</source>
          <target state="translated">Esse valor é - 1, 79E + 308</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.Multiply(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.Multiply(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.Multiply(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>The multiplication operator computes the product of the two <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> operands.</source>
          <target state="translated">O operador de multiplicação calcula o produto dos dois operandos <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.Multiply(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>The product of the two <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> operands.</source>
          <target state="translated">O produto dos dois operandos <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlDouble.Multiply(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlDouble.Multiply%28System.Data.SqlTypes.SqlDouble%2CSystem.Data.SqlTypes.SqlDouble%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">O método equivalente para esse operador é <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlDouble.Multiply%28System.Data.SqlTypes.SqlDouble%2CSystem.Data.SqlTypes.SqlDouble%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.NotEquals(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.NotEquals(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.NotEquals(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>Compares two instances of <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> to determine whether they are notequal.</source>
          <target state="translated">Compara duas instâncias de <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> para determinar se elas são diferentes.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.NotEquals(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> that is <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph> if the two instances are not equal or <ph id="ph3">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph> if the two instances are equal.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> que será <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph> se as duas instâncias não forem iguais ou <ph id="ph3">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph> se as duas instâncias forem iguais.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.NotEquals(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>If either instance of <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> is null, the <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph> of the <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> will be <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>.</source>
          <target state="translated">Se uma das instâncias de <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> for nula, o <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph> do <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> será <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="F:System.Data.SqlTypes.SqlDouble.Null">
          <source>Represents a <ph id="ph1">&lt;see cref="T:System.DBNull" /&gt;</ph> that can be assigned to this instance of the <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure.</source>
          <target state="translated">Representa um <ph id="ph1">&lt;see cref="T:System.DBNull" /&gt;</ph> que pode ser atribuído a essa instância da estrutura <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.SqlTypes.SqlDouble.Null">
          <source><ph id="ph1">`Null`</ph> functions as a constant for the <ph id="ph2">&lt;xref:System.Data.SqlTypes.SqlDouble&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">`Null`</ph> funciona como uma constante para o <ph id="ph2">&lt;xref:System.Data.SqlTypes.SqlDouble&gt;</ph> estrutura.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.SqlTypes.SqlDouble.Null">
          <source>For more information, see <bpt id="p1">[</bpt>Handling Null Values<ept id="p1">](~/docs/framework/data/adonet/sql/handling-null-values.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>tratar valores nulos<ept id="p1">](~/docs/framework/data/adonet/sql/handling-null-values.md)</ept>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Addition(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Addition(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Addition(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>The addition operator computes the sum of the two <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> operands.</source>
          <target state="translated">O operador de adição calcula a soma dos dois operandos <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Addition(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>The sum of the two <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> operands.</source>
          <target state="translated">A soma de dois operandos <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlDouble.op_Addition(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlDouble.Add%28System.Data.SqlTypes.SqlDouble%2CSystem.Data.SqlTypes.SqlDouble%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">O método equivalente para esse operador é <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlDouble.Add%28System.Data.SqlTypes.SqlDouble%2CSystem.Data.SqlTypes.SqlDouble%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Division(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Division(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Division(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>The division operator divides the first <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> operand by the second.</source>
          <target state="translated">O operador de divisão divide o primeiro operando <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> pelo segundo.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Division(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure that contains the results of the division operation.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> que contém os resultados da operação de divisão.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlDouble.op_Division(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlDouble.Divide%28System.Data.SqlTypes.SqlDouble%2CSystem.Data.SqlTypes.SqlDouble%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">O método equivalente para esse operador é <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlDouble.Divide%28System.Data.SqlTypes.SqlDouble%2CSystem.Data.SqlTypes.SqlDouble%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Equality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Equality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Equality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>Performs a logical comparison on two instances of <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> to determine whether they are equal.</source>
          <target state="translated">Executa uma comparação lógica em duas instâncias de <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> para determinar se elas são iguais.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Equality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the two values are equal.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se os dois valores forem iguais.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Equality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>Otherwise, <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Caso contrário, <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlDouble.op_Equality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlDouble.Equals%28System.Data.SqlTypes.SqlDouble%2CSystem.Data.SqlTypes.SqlDouble%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">O método equivalente para esse operador é <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlDouble.Equals%28System.Data.SqlTypes.SqlDouble%2CSystem.Data.SqlTypes.SqlDouble%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="T:System.Data.SqlTypes.SqlDouble">
          <source>Converts to and from a <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</source>
          <target state="translated">Converte em e de um <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlDouble">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> to be converted.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> a ser convertido.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlDouble">
          <source>Converts the supplied <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> parameter to <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</source>
          <target state="translated">Converte o parâmetro <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> fornecido em <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlDouble">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure whose <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlDouble.Value" /&gt;</ph> is either 0 or 1, depending on the <ph id="ph3">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /&gt;</ph> property of the <ph id="ph4">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> parameter.</source>
          <target state="translated">Uma nova estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> cujo <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlDouble.Value" /&gt;</ph> é 0 ou 1, dependendo da propriedade <ph id="ph3">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /&gt;</ph> do parâmetro <ph id="ph4">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlDouble">
          <source>If the <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>, the <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure will be <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlDouble.Null" /&gt;</ph>.</source>
          <target state="translated">Se o <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> for <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>, a estrutura <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> será <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlDouble.Null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlDouble">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlBoolean.ToSqlDouble?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">O método equivalente para esse operador é <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlBoolean.ToSqlDouble?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Double">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Double">
          <source>Converts the supplied <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure to double.</source>
          <target state="translated">Converte a estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> fornecida em um duplo.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Double">
          <source>A double equivalent to the specified <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure's value.</source>
          <target state="translated">Um duplo equivalente ao valor da estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> especificada.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDouble">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> object.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDouble">
          <source>Converts the supplied <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> parameter to <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</source>
          <target state="translated">Converte o parâmetro <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> fornecido em <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDouble">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> whose <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlDouble.Value" /&gt;</ph> is equal to the value of the number represented by the <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>.</source>
          <target state="translated">Um novo <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> cujo <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlDouble.Value" /&gt;</ph> é igual ao valor do número representado pelo <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDouble">
          <source>If the <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlString.Null" /&gt;</ph>, the <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure will be <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlDouble.Null" /&gt;</ph>.</source>
          <target state="translated">Se o <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> for <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlString.Null" /&gt;</ph>, a estrutura <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> será <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlDouble.Null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDouble">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlString.ToSqlDouble?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">O método equivalente para esse operador é <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlString.ToSqlDouble?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>Compares two instances of <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> to determine whether the first is greater than the second.</source>
          <target state="translated">Compara duas instâncias de <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> para determinar se a primeira é maior que a segunda.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> that is <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph> if the first instance is greater than the second instance.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> que será <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph> se a primeira instância for maior do que a segunda instância.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>Otherwise, <ph id="ph1">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph>.</source>
          <target state="translated">Caso contrário, <ph id="ph1">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>If either instance of <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> is null, the <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph> of the <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> will be <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>.</source>
          <target state="translated">Se uma das instâncias de <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> for nula, o <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph> do <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> será <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlDouble.op_GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlDouble.GreaterThan%28System.Data.SqlTypes.SqlDouble%2CSystem.Data.SqlTypes.SqlDouble%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">O método equivalente para esse operador é <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlDouble.GreaterThan%28System.Data.SqlTypes.SqlDouble%2CSystem.Data.SqlTypes.SqlDouble%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>Compares two instances of <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> to determine whether the first is greater than or equal to the second.</source>
          <target state="translated">Compara duas instâncias de <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> para determinar se a primeira é maior ou igual à segunda.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> that is <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph> if the first instance is greater than or equal to the second instance.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> que será <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph> se a primeira instância for maior ou igual à segunda instância.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>Otherwise, <ph id="ph1">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph>.</source>
          <target state="translated">Caso contrário, <ph id="ph1">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>If either instance of <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> is null, the <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph> of the <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> will be <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>.</source>
          <target state="translated">Se uma das instâncias de <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> for nula, o <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph> do <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> será <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlDouble.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlDouble.GreaterThanOrEqual%28System.Data.SqlTypes.SqlDouble%2CSystem.Data.SqlTypes.SqlDouble%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">O método equivalente para esse operador é <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlDouble.GreaterThanOrEqual%28System.Data.SqlTypes.SqlDouble%2CSystem.Data.SqlTypes.SqlDouble%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="T:System.Data.SqlTypes.SqlDouble">
          <source>Converts to a T:System.Data.SqlTypes.SqlDouble structure.</source>
          <target state="translated">Converte em uma estrutura T:System.Data.SqlTypes.SqlDouble.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlDouble">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlDouble">
          <source>Converts the supplied <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlByte" /&gt;</ph> parameter to <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</source>
          <target state="translated">Converte o parâmetro <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlByte" /&gt;</ph> fornecido em <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlDouble">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure whose <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlDouble.Value" /&gt;</ph> is equal to the <ph id="ph3">&lt;see cref="P:System.Data.SqlTypes.SqlByte.Value" /&gt;</ph> of the <ph id="ph4">&lt;see cref="T:System.Data.SqlTypes.SqlByte" /&gt;</ph> parameter.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> cujo <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlDouble.Value" /&gt;</ph> é igual ao <ph id="ph3">&lt;see cref="P:System.Data.SqlTypes.SqlByte.Value" /&gt;</ph> do parâmetro <ph id="ph4">&lt;see cref="T:System.Data.SqlTypes.SqlByte" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlDouble">
          <source>If the <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlByte" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlByte.Null" /&gt;</ph>, the <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure will be <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlDouble.Null" /&gt;</ph>.</source>
          <target state="translated">Se o <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlByte" /&gt;</ph> for <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlByte.Null" /&gt;</ph>, a estrutura <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> será <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlDouble.Null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlDouble">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlByte.ToSqlDouble?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">O método equivalente para esse operador é <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlByte.ToSqlDouble?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlDouble">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDecimal" /&gt;</ph> structure.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDecimal" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlDouble">
          <source>Converts the supplied <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDecimal" /&gt;</ph> parameter to <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</source>
          <target state="translated">Converte o parâmetro <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDecimal" /&gt;</ph> fornecido em <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlDouble">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure whose <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlDouble.Value" /&gt;</ph> is equal to the <ph id="ph3">&lt;see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /&gt;</ph> of the <ph id="ph4">&lt;see cref="T:System.Data.SqlTypes.SqlDecimal" /&gt;</ph> parameter.</source>
          <target state="translated">Uma nova estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> cujo <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlDouble.Value" /&gt;</ph> é igual ao <ph id="ph3">&lt;see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /&gt;</ph> do parâmetro <ph id="ph4">&lt;see cref="T:System.Data.SqlTypes.SqlDecimal" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlDouble">
          <source>If the <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDecimal" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlDecimal.Null" /&gt;</ph>, the <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure will be <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlDouble.Null" /&gt;</ph>.</source>
          <target state="translated">Se o <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDecimal" /&gt;</ph> for <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlDecimal.Null" /&gt;</ph>, a estrutura <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> será <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlDouble.Null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlDouble">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlDecimal.ToSqlDouble?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">O método equivalente para esse operador é <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlDecimal.ToSqlDouble?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlDouble">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt16" /&gt;</ph> structure.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt16" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlDouble">
          <source>Converts the supplied <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt16" /&gt;</ph> parameter to <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</source>
          <target state="translated">Converte o parâmetro <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt16" /&gt;</ph> fornecido em <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlDouble">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure whose <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlDouble.Value" /&gt;</ph> is equal to the <ph id="ph3">&lt;see cref="P:System.Data.SqlTypes.SqlInt16.Value" /&gt;</ph> of the <ph id="ph4">&lt;see cref="T:System.Data.SqlTypes.SqlInt16" /&gt;</ph> parameter.</source>
          <target state="translated">Uma nova estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> cujo <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlDouble.Value" /&gt;</ph> é igual ao <ph id="ph3">&lt;see cref="P:System.Data.SqlTypes.SqlInt16.Value" /&gt;</ph> do parâmetro <ph id="ph4">&lt;see cref="T:System.Data.SqlTypes.SqlInt16" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlDouble">
          <source>If the <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt16" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlInt16.Null" /&gt;</ph>, the <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure will be <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlDouble.Null" /&gt;</ph>.</source>
          <target state="translated">Se o <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt16" /&gt;</ph> for <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlInt16.Null" /&gt;</ph>, a estrutura <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> será <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlDouble.Null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlDouble">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlInt16.ToSqlDouble?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">O método equivalente para esse operador é <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlInt16.ToSqlDouble?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlDouble">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt32" /&gt;</ph> structure.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt32" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlDouble">
          <source>Converts the supplied <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt32" /&gt;</ph> parameter to <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</source>
          <target state="translated">Converte o parâmetro <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt32" /&gt;</ph> fornecido em <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlDouble">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> whose <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlDouble.Value" /&gt;</ph> is equal to the <ph id="ph3">&lt;see cref="P:System.Data.SqlTypes.SqlInt32.Value" /&gt;</ph> of the <ph id="ph4">&lt;see cref="T:System.Data.SqlTypes.SqlInt32" /&gt;</ph> parameter.</source>
          <target state="translated">Um novo <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> cujo <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlDouble.Value" /&gt;</ph> é igual ao <ph id="ph3">&lt;see cref="P:System.Data.SqlTypes.SqlInt32.Value" /&gt;</ph> do parâmetro <ph id="ph4">&lt;see cref="T:System.Data.SqlTypes.SqlInt32" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlDouble">
          <source>If the <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt32" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlInt32.Null" /&gt;</ph>, the <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure will be <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlDouble.Null" /&gt;</ph>.</source>
          <target state="translated">Se o <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt32" /&gt;</ph> for <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlInt32.Null" /&gt;</ph>, a estrutura <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> será <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlDouble.Null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlDouble">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlInt32.ToSqlDouble?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">O método equivalente para esse operador é <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlInt32.ToSqlDouble?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlDouble">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlDouble">
          <source>Converts the supplied <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> parameter to <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</source>
          <target state="translated">Converte o parâmetro <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> fornecido em <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlDouble">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> whose <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlDouble.Value" /&gt;</ph> is equal to the <ph id="ph3">&lt;see cref="P:System.Data.SqlTypes.SqlInt64.Value" /&gt;</ph> of the <ph id="ph4">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> parameter.</source>
          <target state="translated">Um novo <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> cujo <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlDouble.Value" /&gt;</ph> é igual ao <ph id="ph3">&lt;see cref="P:System.Data.SqlTypes.SqlInt64.Value" /&gt;</ph> do parâmetro <ph id="ph4">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlDouble">
          <source>If the <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlInt64.Null" /&gt;</ph>, the <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure will be <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlDouble.Null" /&gt;</ph>.</source>
          <target state="translated">Se o <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> for <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlInt64.Null" /&gt;</ph>, a estrutura <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> será <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlDouble.Null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlDouble">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlInt64.ToSqlDouble?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">O método equivalente para esse operador é <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlInt64.ToSqlDouble?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlDouble">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlMoney" /&gt;</ph> structure.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlMoney" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlDouble">
          <source>Converts the supplied <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlMoney" /&gt;</ph> parameter to <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</source>
          <target state="translated">Converte o parâmetro <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlMoney" /&gt;</ph> fornecido em <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlDouble">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> whose <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlDouble.Value" /&gt;</ph> is equal to the <ph id="ph3">&lt;see cref="P:System.Data.SqlTypes.SqlMoney.Value" /&gt;</ph> of the <ph id="ph4">&lt;see cref="T:System.Data.SqlTypes.SqlMoney" /&gt;</ph> parameter.</source>
          <target state="translated">Um novo <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> cujo <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlDouble.Value" /&gt;</ph> é igual ao <ph id="ph3">&lt;see cref="P:System.Data.SqlTypes.SqlMoney.Value" /&gt;</ph> do parâmetro <ph id="ph4">&lt;see cref="T:System.Data.SqlTypes.SqlMoney" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlDouble">
          <source>If the <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlMoney" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlMoney.Null" /&gt;</ph>, the <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure will be <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlDouble.Null" /&gt;</ph>.</source>
          <target state="translated">Se o <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlMoney" /&gt;</ph> for <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlMoney.Null" /&gt;</ph>, a estrutura <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> será <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlDouble.Null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlDouble">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlMoney.ToSqlDouble?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">O método equivalente para esse operador é <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlMoney.ToSqlDouble?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlDouble">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlSingle" /&gt;</ph> structure.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlSingle" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlDouble">
          <source>Converts the supplied <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlSingle" /&gt;</ph> parameter to <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</source>
          <target state="translated">Converte o parâmetro <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlSingle" /&gt;</ph> fornecido em <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlDouble">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure whose <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlDouble.Value" /&gt;</ph> is equal to the <ph id="ph3">&lt;see cref="P:System.Data.SqlTypes.SqlSingle.Value" /&gt;</ph> of the <ph id="ph4">&lt;see cref="T:System.Data.SqlTypes.SqlSingle" /&gt;</ph> parameter.</source>
          <target state="translated">Uma nova estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> cujo <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlDouble.Value" /&gt;</ph> é igual ao <ph id="ph3">&lt;see cref="P:System.Data.SqlTypes.SqlSingle.Value" /&gt;</ph> do parâmetro <ph id="ph4">&lt;see cref="T:System.Data.SqlTypes.SqlSingle" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlDouble">
          <source>If the <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlSingle" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlSingle.Null" /&gt;</ph>, the <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure will be <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlDouble.Null" /&gt;</ph>.</source>
          <target state="translated">Se o <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlSingle" /&gt;</ph> for <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlSingle.Null" /&gt;</ph>, a estrutura <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> será <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlDouble.Null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlDouble">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlSingle.ToSqlDouble?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">O método equivalente para esse operador é <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlSingle.ToSqlDouble?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Double)~System.Data.SqlTypes.SqlDouble">
          <source>The double value to convert.</source>
          <target state="translated">O valor duplo a ser convertido.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Double)~System.Data.SqlTypes.SqlDouble">
          <source>Converts the supplied double value to a <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</source>
          <target state="translated">Converte o valor duplo fornecido em um <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Double)~System.Data.SqlTypes.SqlDouble">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> with the same value as the specified double parameter.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> com o mesmo valor que o parâmetro duplo especificado.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Inequality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Inequality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Inequality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>Compares two instances of <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> to determine whether they are not equal.</source>
          <target state="translated">Compara duas instâncias de <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> para determinar se elas são diferentes.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Inequality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> that is <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph> if the two instances are not equal or <ph id="ph3">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph> if the two instances are equal.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> que será <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph> se as duas instâncias não forem iguais ou <ph id="ph3">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph> se as duas instâncias forem iguais.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Inequality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>If either instance of <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> is null, the <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph> of the <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> will be <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>.</source>
          <target state="translated">Se uma das instâncias de <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> for nula, o <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph> do <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> será <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlDouble.op_Inequality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlDouble.NotEquals%28System.Data.SqlTypes.SqlDouble%2CSystem.Data.SqlTypes.SqlDouble%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">O método equivalente para esse operador é <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlDouble.NotEquals%28System.Data.SqlTypes.SqlDouble%2CSystem.Data.SqlTypes.SqlDouble%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>Compares two instances of <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> to determine whether the first is less than the second.</source>
          <target state="translated">Compara duas instâncias de <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> para determinar se a primeira é menor que a segunda.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> that is <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph> if the first instance is less than the second instance.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> que será <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph> se a primeira instância for menor que a segunda instância.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>Otherwise, <ph id="ph1">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph>.</source>
          <target state="translated">Caso contrário, <ph id="ph1">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>If either instance of <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> is null, the <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph> of the <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> will be <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>.</source>
          <target state="translated">Se uma das instâncias de <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> for nula, o <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph> do <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> será <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlDouble.op_LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlDouble.LessThan%28System.Data.SqlTypes.SqlDouble%2CSystem.Data.SqlTypes.SqlDouble%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">O método equivalente para esse operador é <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlDouble.LessThan%28System.Data.SqlTypes.SqlDouble%2CSystem.Data.SqlTypes.SqlDouble%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>Compares two instances of <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> to determine whether the first is less than or equal to the second.</source>
          <target state="translated">Compara duas instâncias de <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> para determinar se a primeira é menor ou igual à segunda.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> that is <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph> if the first instance is less than or equal to the second instance.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> que será <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph> se a primeira instância for menor ou igual à segunda instância.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>Otherwise, <ph id="ph1">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph>.</source>
          <target state="translated">Caso contrário, <ph id="ph1">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>If either instance of <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> is null, the <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph> of the <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> will be <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>.</source>
          <target state="translated">Se uma das instâncias de <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> for nula, o <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph> do <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> será <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlDouble.op_LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlDouble.LessThanOrEqual%28System.Data.SqlTypes.SqlDouble%2CSystem.Data.SqlTypes.SqlDouble%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">O método equivalente para esse operador é <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlDouble.LessThanOrEqual%28System.Data.SqlTypes.SqlDouble%2CSystem.Data.SqlTypes.SqlDouble%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Multiply(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Multiply(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Multiply(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>The multiplication operator computes the product of the two <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> operands.</source>
          <target state="translated">O operador de multiplicação calcula o produto dos dois operandos <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Multiply(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>The product of the two <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> operands.</source>
          <target state="translated">O produto dos dois operandos <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlDouble.op_Multiply(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlDouble.Multiply%28System.Data.SqlTypes.SqlDouble%2CSystem.Data.SqlTypes.SqlDouble%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">O método equivalente para esse operador é <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlDouble.Multiply%28System.Data.SqlTypes.SqlDouble%2CSystem.Data.SqlTypes.SqlDouble%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Subtraction(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Subtraction(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Subtraction(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>The subtraction operator the second <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> operand from the first.</source>
          <target state="translated">O operador de subtração o segundo operando <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> do primeiro.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_Subtraction(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>The results of the subtraction operation.</source>
          <target state="translated">Os resultados da operação de subtração.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlDouble.op_Subtraction(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlDouble.Subtract%28System.Data.SqlTypes.SqlDouble%2CSystem.Data.SqlTypes.SqlDouble%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">O método equivalente para esse operador é <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlDouble.Subtract%28System.Data.SqlTypes.SqlDouble%2CSystem.Data.SqlTypes.SqlDouble%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_UnaryNegation(System.Data.SqlTypes.SqlDouble)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_UnaryNegation(System.Data.SqlTypes.SqlDouble)">
          <source>Returns the negated value of the specified <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure.</source>
          <target state="translated">Retorna o valor negado da estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> especificada.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.op_UnaryNegation(System.Data.SqlTypes.SqlDouble)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure that contains the negated value.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> que contém o valor negado.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.Parse(System.String)">
          <source>The <ph id="ph1">&lt;see langword="String" /&gt;</ph> to be parsed.</source>
          <target state="translated">A <ph id="ph1">&lt;see langword="String" /&gt;</ph> a ser analisada.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.Parse(System.String)">
          <source>Converts the <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> representation of a number to its double-precision floating point number equivalent.</source>
          <target state="translated">Converte a representação da <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> de um número no equivalente do número de ponto flutuante de precisão dupla.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.Parse(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> that contains the value represented by the <ph id="ph2">&lt;see langword="String" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> que contém o valor representado pelo <ph id="ph2">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.Subtract(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.Subtract(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.Subtract(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>The subtraction operator the second <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> operand from the first.</source>
          <target state="translated">O operador de subtração o segundo operando <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> do primeiro.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.Subtract(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
          <source>The results of the subtraction operation.</source>
          <target state="translated">Os resultados da operação de subtração.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#GetSchema">
          <source>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#GetSchema">
          <source>An XML schema consumed by .NET Framework.</source>
          <target state="translated">Um esquema XML consumido pelo .NET Framework.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
          <source>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
          <source>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.ToSqlBoolean">
          <source>Converts this <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure to <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph>.</source>
          <target state="translated">Converte esta estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> em <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.ToSqlBoolean">
          <source>A <ph id="ph1">&lt;see langword="SqlBoolean" /&gt;</ph> structure whose <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph> will be <ph id="ph3">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph> if the <ph id="ph4">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure's <ph id="ph5">&lt;see cref="P:System.Data.SqlTypes.SqlDouble.Value" /&gt;</ph> is non-zero, <ph id="ph6">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph> if the <ph id="ph7">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> is zero and <ph id="ph8">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph> if the <ph id="ph9">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure is <ph id="ph10">&lt;see cref="F:System.Data.SqlTypes.SqlDouble.Null" /&gt;</ph>.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see langword="SqlBoolean" /&gt;</ph> cujo <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph> será <ph id="ph3">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph> se o <ph id="ph5">&lt;see cref="P:System.Data.SqlTypes.SqlDouble.Value" /&gt;</ph> da estrutura <ph id="ph4">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> for diferente de zero, <ph id="ph6">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph> se o <ph id="ph7">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> for zero e <ph id="ph8">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph> se a estrutura <ph id="ph9">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> for <ph id="ph10">&lt;see cref="F:System.Data.SqlTypes.SqlDouble.Null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.ToSqlByte">
          <source>Converts this <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure to <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlByte" /&gt;</ph>.</source>
          <target state="translated">Converte esta estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> em <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlByte" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.ToSqlByte">
          <source>A <ph id="ph1">&lt;see langword="SqlByte" /&gt;</ph> structure whose <ph id="ph2">&lt;see langword="Value" /&gt;</ph> equals the <ph id="ph3">&lt;see langword="Value" /&gt;</ph> of this <ph id="ph4">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see langword="SqlByte" /&gt;</ph> cujo <ph id="ph2">&lt;see langword="Value" /&gt;</ph> é igual ao <ph id="ph3">&lt;see langword="Value" /&gt;</ph> desta estrutura <ph id="ph4">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.ToSqlDecimal">
          <source>Converts this <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure to <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlDecimal" /&gt;</ph>.</source>
          <target state="translated">Converte esta estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> em <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlDecimal" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.ToSqlDecimal">
          <source>A new <ph id="ph1">&lt;see langword="SqlDecimal" /&gt;</ph> structure whose converted value equals the rounded value of this <ph id="ph2">&lt;see langword="SqlDouble" /&gt;</ph>.</source>
          <target state="translated">Uma nova estrutura <ph id="ph1">&lt;see langword="SqlDecimal" /&gt;</ph> cujo valor convertido é igual ao valor arredondado deste <ph id="ph2">&lt;see langword="SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.ToSqlInt16">
          <source>Converts this <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure to <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt16" /&gt;</ph>.</source>
          <target state="translated">Converte esta estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> em <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt16" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.ToSqlInt16">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt16" /&gt;</ph> structure whose <ph id="ph2">&lt;see langword="Value" /&gt;</ph> equals the integer part of the <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure's value.</source>
          <target state="translated">Uma nova estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt16" /&gt;</ph> cujo <ph id="ph2">&lt;see langword="Value" /&gt;</ph> é igual à parte inteira do valor da estrutura <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.ToSqlInt32">
          <source>Converts this <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure to <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt32" /&gt;</ph>.</source>
          <target state="translated">Converte esta estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> em <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt32" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.ToSqlInt32">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt32" /&gt;</ph> structure whose <ph id="ph2">&lt;see langword="Value" /&gt;</ph> equals the integer part of the <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure's value.</source>
          <target state="translated">Uma nova estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt32" /&gt;</ph> cujo <ph id="ph2">&lt;see langword="Value" /&gt;</ph> é igual à parte inteira do valor da estrutura <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.ToSqlInt64">
          <source>Converts this <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure to <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>.</source>
          <target state="translated">Converte esta estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> em <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.ToSqlInt64">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure whose <ph id="ph2">&lt;see langword="Value" /&gt;</ph> equals the integer part of the <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure's value.</source>
          <target state="translated">Uma nova estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> cujo <ph id="ph2">&lt;see langword="Value" /&gt;</ph> é igual à parte inteira do valor da estrutura <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.ToSqlMoney">
          <source>Converts this <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure to <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlMoney" /&gt;</ph>.</source>
          <target state="translated">Converte esta estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> em <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlMoney" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.ToSqlMoney">
          <source>A new <ph id="ph1">&lt;see langword="SqlMoney" /&gt;</ph> structure whose <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlMoney.Value" /&gt;</ph> is equal to the value of this <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</source>
          <target state="translated">Uma nova estrutura <ph id="ph1">&lt;see langword="SqlMoney" /&gt;</ph> cujo <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlMoney.Value" /&gt;</ph> é igual ao valor deste <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.ToSqlSingle">
          <source>Converts this <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure to <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlSingle" /&gt;</ph>.</source>
          <target state="translated">Converte esta estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> em <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlSingle" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.ToSqlSingle">
          <source>A new <ph id="ph1">&lt;see langword="SqlSingle" /&gt;</ph> structure whose <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlSingle.Value" /&gt;</ph> is equal to the <ph id="ph3">&lt;see cref="P:System.Data.SqlTypes.SqlDouble.Value" /&gt;</ph> of this <ph id="ph4">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</source>
          <target state="translated">Uma nova estrutura <ph id="ph1">&lt;see langword="SqlSingle" /&gt;</ph> cujo <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlSingle.Value" /&gt;</ph> é igual ao <ph id="ph3">&lt;see cref="P:System.Data.SqlTypes.SqlDouble.Value" /&gt;</ph> deste <ph id="ph4">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.ToSqlString">
          <source>Converts this <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure to <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>.</source>
          <target state="translated">Converte esta estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> em <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.ToSqlString">
          <source>A <ph id="ph1">&lt;see langword="SqlString" /&gt;</ph> representing the <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlDouble.Value" /&gt;</ph> of this <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</source>
          <target state="translated">Uma <ph id="ph1">&lt;see langword="SqlString" /&gt;</ph> que representa o <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlDouble.Value" /&gt;</ph> deste <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.ToString">
          <source>Converts this <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure to a string.</source>
          <target state="translated">Converte esta estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> em uma cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlDouble.ToString">
          <source>A string representing the <ph id="ph1">&lt;see cref="P:System.Data.SqlTypes.SqlDouble.Value" /&gt;</ph> of this <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</source>
          <target state="translated">Uma cadeia de caracteres que representa o <ph id="ph1">&lt;see cref="P:System.Data.SqlTypes.SqlDouble.Value" /&gt;</ph> deste <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="P:System.Data.SqlTypes.SqlDouble.Value">
          <source>Gets the value of the <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure.</source>
          <target state="translated">Obtém o valor da estrutura <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="P:System.Data.SqlTypes.SqlDouble.Value">
          <source>This property is read-only.</source>
          <target state="translated">Esta propriedade é somente para leitura.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlTypes.SqlDouble.Value">
          <source>The value of the <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure.</source>
          <target state="translated">O valor de <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> estrutura.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="F:System.Data.SqlTypes.SqlDouble.Zero">
          <source>Represents a zero value that can be assigned to the <ph id="ph1">&lt;see cref="P:System.Data.SqlTypes.SqlDouble.Value" /&gt;</ph> property of an instance of the <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure.</source>
          <target state="translated">Representa um valor zero que pode ser atribuído à propriedade <ph id="ph1">&lt;see cref="P:System.Data.SqlTypes.SqlDouble.Value" /&gt;</ph> de uma instância da estrutura <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.SqlTypes.SqlDouble.Zero">
          <source>The <ph id="ph1">`Zero`</ph> field is a constant for the <ph id="ph2">&lt;xref:System.Data.SqlTypes.SqlDouble&gt;</ph> structure.</source>
          <target state="translated">O <ph id="ph1">`Zero`</ph> campo é uma constante para o <ph id="ph2">&lt;xref:System.Data.SqlTypes.SqlDouble&gt;</ph> estrutura.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>