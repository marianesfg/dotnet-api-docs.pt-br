<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DBConcurrencyException.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-567ae5a" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7c5b04be-ac4f-4958-bcde-0afae05845523f46815dfffc12b40be7f8658173e67a63098570.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3f46815dfffc12b40be7f8658173e67a63098570</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3507e865a3613c00760f25ad1045aaa11bae4dd8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/23/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.DBConcurrencyException">
          <source>The exception that is thrown by the <ph id="ph1">&lt;see cref="T:System.Data.Common.DataAdapter" /&gt;</ph> during an insert, update, or delete operation if the number of rows affected equals zero.</source>
          <target state="translated">A exceção lançada pelo <ph id="ph1">&lt;see cref="T:System.Data.Common.DataAdapter" /&gt;</ph> durante uma operação de inserção, atualização ou exclusão se o número de linhas afetadas é igual a zero.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DBConcurrencyException">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> examines the number of rows affected by the execution of each insert, update, or delete operation, and throws this exception if the number equals zero.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> examina o número de linhas afetadas pela execução de cada inserção, atualização ou operação de exclusão e lança esta exceção se o número for igual a zero.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DBConcurrencyException">
          <source>This exception is generally caused by a concurrency violation.</source>
          <target state="translated">Essa exceção geralmente é causada por uma violação de concorrência.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:System.Data.DBConcurrencyException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DBConcurrencyException.#ctor">
          <source>The default constructor initializes any fields to their default values.</source>
          <target state="translated">O construtor padrão inicializa quaisquer campos para seus valores padrão.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.#ctor(System.String)">
          <source>The text string describing the details of the exception.</source>
          <target state="translated">A cadeia de caracteres de texto que descreve os detalhes da exceção.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception)">
          <source>The text string describing the details of the exception.</source>
          <target state="translated">A cadeia de caracteres de texto que descreve os detalhes da exceção.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception)">
          <source>A reference to an inner exception.</source>
          <target state="translated">Uma referência a uma exceção interna.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception)">
          <source>You can create a new exception that catches an earlier exception.</source>
          <target state="translated">Você pode criar uma nova exceção que captura uma exceção anterior.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception)">
          <source>The code that handles the second exception can use the additional information from the earlier exception, also called an inner exception, to examine the cause of the initial error.</source>
          <target state="translated">O código que manipula a segunda exceção pode usar as informações adicionais da exceção anterior, também chamada de uma exceção interna, para examinar a causa do erro inicial.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception,System.Data.DataRow[])">
          <source>The error message that explains the reason for this exception.</source>
          <target state="translated">A mensagem de erro que explica a razão desta exceção.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception,System.Data.DataRow[])">
          <source>The exception that is the cause of the current exception, or a null reference (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic) if no inner exception is specified.</source>
          <target state="translated">A exceção que é a causa da exceção atual ou uma referência nula (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> no Visual Basic) se nenhuma exceção interna é especificada.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception,System.Data.DataRow[])">
          <source>An array containing the <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects whose update failure generated this exception.</source>
          <target state="translated">Uma matriz que contém os objetos <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> cuja falha de atualização gerou essa exceção.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception,System.Data.DataRow[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="T:System.Data.DBConcurrencyException">
          <source>Copies the <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects whose update failure generated this exception to the specified array.</source>
          <target state="translated">Copia os objetos <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> cuja falha de atualização gerou essa exceção, para a matriz especificada.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[])">
          <source>The one-dimensional array of <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects to copy the <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects into.</source>
          <target state="translated">A matriz unidimensional de objetos <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> na qual copiar os objetos <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[])">
          <source>Copies the <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects whose update failure generated this exception, to the specified array of <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects.</source>
          <target state="translated">Copia os objetos <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> cuja falha de atualização gerou essa exceção, para a matriz de objetos <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> especificada.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[])">
          <source>When performing batch updates with the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> set to <ph id="ph3">`true`</ph>, this exception is thrown if all row updates fail.</source>
          <target state="translated">Ao executar atualizações em lotes com o <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph> propriedade o <ph id="ph2">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> definida como <ph id="ph3">`true`</ph>, essa exceção é gerada se todas as falhas de atualizações de linha.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[])">
          <source>In this case, this <ph id="ph1">&lt;xref:System.Data.DBConcurrencyException&gt;</ph> contains <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> objects for all rows whose update failed, rather than just the one <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> object in <ph id="ph4">&lt;xref:System.Data.DBConcurrencyException.Row%2A&gt;</ph>, and the affected <ph id="ph5">&lt;xref:System.Data.DataRow&gt;</ph> objects can be retrieved by calling <ph id="ph6">&lt;xref:System.Data.DBConcurrencyException.CopyToRows%2A&gt;</ph>.</source>
          <target state="translated">Nesse caso, isso <ph id="ph1">&lt;xref:System.Data.DBConcurrencyException&gt;</ph> contém <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> objetos para todas as linhas cuja atualização falha, em vez de apenas um <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> objeto <ph id="ph4">&lt;xref:System.Data.DBConcurrencyException.Row%2A&gt;</ph>e o afetados <ph id="ph5">&lt;xref:System.Data.DataRow&gt;</ph> objetos podem ser recuperados chamando <ph id="ph6">&lt;xref:System.Data.DBConcurrencyException.CopyToRows%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[],System.Int32)">
          <source>The one-dimensional array of <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects to copy the <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects into.</source>
          <target state="translated">A matriz unidimensional de objetos <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> na qual copiar os objetos <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[],System.Int32)">
          <source>The destination array index to start copying into.</source>
          <target state="translated">O índice de matriz de destino no qual a cópia é iniciada.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[],System.Int32)">
          <source>Copies the <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects whose update failure generated this exception, to the specified array of <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects, starting at the specified destination array index.</source>
          <target state="translated">Copia os objetos <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> cuja falha de atualização gerou essa exceção, para a matriz de objetos <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> especificada, começando no índice da matriz de destino especificado.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[],System.Int32)">
          <source>When performing batch updates with the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> set to <ph id="ph3">`true`</ph>, this exception is thrown if all row updates fail.</source>
          <target state="translated">Ao executar atualizações em lotes com o <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph> propriedade o <ph id="ph2">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> definida como <ph id="ph3">`true`</ph>, essa exceção é gerada se todas as falhas de atualizações de linha.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[],System.Int32)">
          <source>In this case, this <ph id="ph1">&lt;xref:System.Data.DBConcurrencyException&gt;</ph> contains <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> objects for all rows whose update failed, rather than just the one <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> object in <ph id="ph4">&lt;xref:System.Data.DBConcurrencyException.Row%2A&gt;</ph>, and the affected <ph id="ph5">&lt;xref:System.Data.DataRow&gt;</ph> objects can be retrieved by calling <ph id="ph6">&lt;xref:System.Data.DBConcurrencyException.CopyToRows%2A&gt;</ph>.</source>
          <target state="translated">Nesse caso, isso <ph id="ph1">&lt;xref:System.Data.DBConcurrencyException&gt;</ph> contém <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> objetos para todas as linhas cuja atualização falha, em vez de apenas um <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> objeto <ph id="ph4">&lt;xref:System.Data.DBConcurrencyException.Row%2A&gt;</ph>e o afetados <ph id="ph5">&lt;xref:System.Data.DataRow&gt;</ph> objetos podem ser recuperados chamando <ph id="ph6">&lt;xref:System.Data.DBConcurrencyException.CopyToRows%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> that holds the serialized data associated with the <ph id="ph2">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> que contém os dados serializados associados a <ph id="ph2">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> that contains the source and destination of the serialized stream associated with the <ph id="ph2">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> que contém a origem e o destino do fluxo serializado associado a <ph id="ph2">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Populates the aprcified serialization information object with the data needed to serialize the <ph id="ph1">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph>.</source>
          <target state="translated">Popula o objeto de informações de serialização especificado com os dados necessários para serializar o <ph id="ph1">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;paramref name="info" /&gt;</ph> parameter is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated">O parâmetro <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> é uma referência nula (<ph id="ph1">&lt;paramref name="info" /&gt;</ph> no Visual Basic).</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.Data.DBConcurrencyException.Row">
          <source>Gets or sets the value of the <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> that generated the <ph id="ph2">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph>.</source>
          <target state="translated">Obtém ou define o valor de <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> que gerou o <ph id="ph2">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DBConcurrencyException.Row">
          <source>The value of the <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">O valor de <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DBConcurrencyException.Row">
          <source>Use <ph id="ph1">&lt;xref:System.Data.DBConcurrencyException.Row%2A&gt;</ph> to retrieve the value of the <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> row that generated the <ph id="ph3">&lt;xref:System.Data.DBConcurrencyException&gt;</ph>.</source>
          <target state="translated">Use <ph id="ph1">&lt;xref:System.Data.DBConcurrencyException.Row%2A&gt;</ph> para recuperar o valor da <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> de linha que gerou o <ph id="ph3">&lt;xref:System.Data.DBConcurrencyException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DBConcurrencyException.Row">
          <source>Setting the value of the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> has no effect.</source>
          <target state="translated">Definir o valor da <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> não tem nenhum efeito.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DBConcurrencyException.Row">
          <source>When performing batch updates with the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> set to <ph id="ph3">`true`</ph>, this exception is thrown if all row updates fail.</source>
          <target state="translated">Ao executar atualizações em lotes com o <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph> propriedade o <ph id="ph2">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> definida como <ph id="ph3">`true`</ph>, essa exceção é gerada se todas as falhas de atualizações de linha.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DBConcurrencyException.Row">
          <source>In this case, this <ph id="ph1">&lt;xref:System.Data.DBConcurrencyException&gt;</ph> contains <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> objects for all rows whose update failed, rather than just the one <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> object in <ph id="ph4">&lt;xref:System.Data.DBConcurrencyException.Row%2A&gt;</ph>, and the affected <ph id="ph5">&lt;xref:System.Data.DataRow&gt;</ph> objects can be retrieved by calling <ph id="ph6">&lt;xref:System.Data.DBConcurrencyException.CopyToRows%2A&gt;</ph>.</source>
          <target state="translated">Nesse caso, isso <ph id="ph1">&lt;xref:System.Data.DBConcurrencyException&gt;</ph> contém <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> objetos para todas as linhas cuja atualização falha, em vez de apenas um <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> objeto <ph id="ph4">&lt;xref:System.Data.DBConcurrencyException.Row%2A&gt;</ph>e o afetados <ph id="ph5">&lt;xref:System.Data.DataRow&gt;</ph> objetos podem ser recuperados chamando <ph id="ph6">&lt;xref:System.Data.DBConcurrencyException.CopyToRows%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DBConcurrencyException.Row">
          <source>Serialization support does not exist for <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> objects.</source>
          <target state="translated">Não existe suporte de serialização para <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DBConcurrencyException.Row">
          <source>Therefore, if you serialize a <ph id="ph1">&lt;xref:System.Data.DBConcurrencyException&gt;</ph> object, the value of the <ph id="ph2">&lt;xref:System.Data.DBConcurrencyException.Row%2A&gt;</ph> property in the serialized version of the object is set to a null value.</source>
          <target state="translated">Portanto, se você serializar um <ph id="ph1">&lt;xref:System.Data.DBConcurrencyException&gt;</ph> , e o valor do objeto de <ph id="ph2">&lt;xref:System.Data.DBConcurrencyException.Row%2A&gt;</ph> propriedade na versão do objeto serializado é definida como um valor nulo.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.Data.DBConcurrencyException.RowCount">
          <source>Gets the number of rows whose update failed, generating this exception.</source>
          <target state="translated">Obtém o número de linhas cuja atualização falhou, gerando essa exceção.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DBConcurrencyException.RowCount">
          <source>An integer containing a count of the number of rows whose update failed.</source>
          <target state="translated">Um inteiro que contém a contagem do número de linhas cuja atualização falha.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>