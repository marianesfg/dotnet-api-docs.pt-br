<Type Name="IDataRecord" FullName="System.Data.IDataRecord">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c661174a64fdbd60caea6e9f797e3dacafd6299d" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52192689" /></Metadata><TypeSignature Language="C#" Value="public interface IDataRecord" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataRecord" />
  <TypeSignature Language="DocId" Value="T:System.Data.IDataRecord" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataRecord" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataRecord" />
  <TypeSignature Language="F#" Value="type IDataRecord = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="0eeb7-101">Fornece acesso aos valores de coluna em cada linha para um <see langword="DataReader" /> e é implementado por provedores de dados .NET Framework que acessam bancos de dados relacionais.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-101">Provides access to the column values within each row for a <see langword="DataReader" />, and is implemented by .NET Framework data providers that access relational databases.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eeb7-102">O <xref:System.Data.IDataReader> e <xref:System.Data.IDataRecord> interfaces permitem que uma classe herdada implementar um `DataReader` classe.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-102">The <xref:System.Data.IDataReader> and <xref:System.Data.IDataRecord> interfaces enable an inheriting class to implement a `DataReader` class.</span></span> <span data-ttu-id="0eeb7-103">Isso fornece uma maneira de ler um ou mais fluxos somente encaminhar de conjuntos de resultados.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-103">This provides a way of reading one or more forward-only streams of result sets.</span></span> <span data-ttu-id="0eeb7-104">Para obter mais informações sobre `DataReader` classes, consulte [recuperando dados usando um DataReader](~/docs/framework/data/adonet/retrieving-data-using-a-datareader.md).</span><span class="sxs-lookup"><span data-stu-id="0eeb7-104">For more information about `DataReader` classes, see [Retrieving Data Using a DataReader](~/docs/framework/data/adonet/retrieving-data-using-a-datareader.md).</span></span>  
  
 <span data-ttu-id="0eeb7-105">Um aplicativo não cria uma instância das <xref:System.Data.IDataRecord> interface diretamente, mas cria uma instância de uma classe que herda <xref:System.Data.IDataRecord>.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-105">An application does not create an instance of the <xref:System.Data.IDataRecord> interface directly, but creates an instance of a class that inherits <xref:System.Data.IDataRecord>.</span></span> <span data-ttu-id="0eeb7-106">Normalmente, você faz isso por meio da obtenção uma `DataReader` por meio de `ExecuteReader` método da `Command` objeto.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-106">Typically, you do this by obtaining a `DataReader` through the `ExecuteReader` method of the `Command` object.</span></span>  
  
 <span data-ttu-id="0eeb7-107">As classes que herdam <xref:System.Data.IDataRecord> deve implementar os membros herdados de todas as e normalmente define membros adicionais para adicionar a funcionalidade específica do provedor.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-107">Classes that inherit <xref:System.Data.IDataRecord> must implement all inherited members, and typically define additional members to add provider-specific functionality.</span></span>  
  
 <span data-ttu-id="0eeb7-108">Provedores de implementar um `DataReader` são necessárias para expor dados em tipos common language runtime (CLR).</span><span class="sxs-lookup"><span data-stu-id="0eeb7-108">Providers implementing a `DataReader` are required to expose data in common language runtime (CLR) types.</span></span> <span data-ttu-id="0eeb7-109">Coerção de tipo está definida para alguns tipos não são incluídos no CLR.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-109">Type coercion is defined for some types not included in the CLR.</span></span> <span data-ttu-id="0eeb7-110">Esses valores podem ser acessados como tipos alternativos que estão em conformidade com os tipos CLR.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-110">These values may be accessed as alternative types that comply with CLR types.</span></span> <span data-ttu-id="0eeb7-111">Por exemplo, a tabela a seguir lista sugeridos mapeamentos de tipos de dados OLE DB para tipos CLR, com tipos alternativos entre parênteses.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-111">As an example, the following table lists suggested mappings from OLE DB data types to CLR types, with alternative types in parentheses.</span></span>  
  
|<span data-ttu-id="0eeb7-112">Tipo de OLE DB</span><span class="sxs-lookup"><span data-stu-id="0eeb7-112">OLE DB type</span></span>|<span data-ttu-id="0eeb7-113">Tipo CLR</span><span class="sxs-lookup"><span data-stu-id="0eeb7-113">CLR type</span></span>|  
|-----------------|--------------|  
|<span data-ttu-id="0eeb7-114">DBTYPE_BOOL</span><span class="sxs-lookup"><span data-stu-id="0eeb7-114">DBTYPE_BOOL</span></span>|<span data-ttu-id="0eeb7-115">Int16</span><span class="sxs-lookup"><span data-stu-id="0eeb7-115">Int16</span></span>|  
|<span data-ttu-id="0eeb7-116">DBTYPE_BSTR</span><span class="sxs-lookup"><span data-stu-id="0eeb7-116">DBTYPE_BSTR</span></span>|<span data-ttu-id="0eeb7-117">cadeia de caracteres</span><span class="sxs-lookup"><span data-stu-id="0eeb7-117">string</span></span>|  
|<span data-ttu-id="0eeb7-118">DBTYPE_BYTES</span><span class="sxs-lookup"><span data-stu-id="0eeb7-118">DBTYPE_BYTES</span></span>|<span data-ttu-id="0eeb7-119">byte[]</span><span class="sxs-lookup"><span data-stu-id="0eeb7-119">byte[]</span></span>|  
|<span data-ttu-id="0eeb7-120">DBTYPE_CY</span><span class="sxs-lookup"><span data-stu-id="0eeb7-120">DBTYPE_CY</span></span>|<span data-ttu-id="0eeb7-121">Decimal</span><span class="sxs-lookup"><span data-stu-id="0eeb7-121">Decimal</span></span>|  
|<span data-ttu-id="0eeb7-122">DBTYPE_DATE</span><span class="sxs-lookup"><span data-stu-id="0eeb7-122">DBTYPE_DATE</span></span>|<span data-ttu-id="0eeb7-123">DateTime</span><span class="sxs-lookup"><span data-stu-id="0eeb7-123">DateTime</span></span>|  
|<span data-ttu-id="0eeb7-124">DBTYPE_DBDATE</span><span class="sxs-lookup"><span data-stu-id="0eeb7-124">DBTYPE_DBDATE</span></span>|<span data-ttu-id="0eeb7-125">DateTime</span><span class="sxs-lookup"><span data-stu-id="0eeb7-125">DateTime</span></span>|  
|<span data-ttu-id="0eeb7-126">DBTYPE_DBTIME</span><span class="sxs-lookup"><span data-stu-id="0eeb7-126">DBTYPE_DBTIME</span></span>|<span data-ttu-id="0eeb7-127">DateTime</span><span class="sxs-lookup"><span data-stu-id="0eeb7-127">DateTime</span></span>|  
|<span data-ttu-id="0eeb7-128">DBTYPE_DBTIMESTAMP</span><span class="sxs-lookup"><span data-stu-id="0eeb7-128">DBTYPE_DBTIMESTAMP</span></span>|<span data-ttu-id="0eeb7-129">DateTime</span><span class="sxs-lookup"><span data-stu-id="0eeb7-129">DateTime</span></span>|  
|<span data-ttu-id="0eeb7-130">DBTYPE_DECIMAL</span><span class="sxs-lookup"><span data-stu-id="0eeb7-130">DBTYPE_DECIMAL</span></span>|<span data-ttu-id="0eeb7-131">Decimal</span><span class="sxs-lookup"><span data-stu-id="0eeb7-131">Decimal</span></span>|  
|<span data-ttu-id="0eeb7-132">DBTYPE_EMPTY</span><span class="sxs-lookup"><span data-stu-id="0eeb7-132">DBTYPE_EMPTY</span></span>|<span data-ttu-id="0eeb7-133">nulo</span><span class="sxs-lookup"><span data-stu-id="0eeb7-133">null</span></span>|  
|<span data-ttu-id="0eeb7-134">DBTYPE_ERROR</span><span class="sxs-lookup"><span data-stu-id="0eeb7-134">DBTYPE_ERROR</span></span>|<span data-ttu-id="0eeb7-135">ExternalException</span><span class="sxs-lookup"><span data-stu-id="0eeb7-135">ExternalException</span></span>|  
|<span data-ttu-id="0eeb7-136">DBTYPE_FILETIME</span><span class="sxs-lookup"><span data-stu-id="0eeb7-136">DBTYPE_FILETIME</span></span>|<span data-ttu-id="0eeb7-137">DateTime</span><span class="sxs-lookup"><span data-stu-id="0eeb7-137">DateTime</span></span>|  
|<span data-ttu-id="0eeb7-138">DBTYPE_GUID</span><span class="sxs-lookup"><span data-stu-id="0eeb7-138">DBTYPE_GUID</span></span>|<span data-ttu-id="0eeb7-139">Guid</span><span class="sxs-lookup"><span data-stu-id="0eeb7-139">Guid</span></span>|  
|<span data-ttu-id="0eeb7-140">DBTYPE_HCHAPTER</span><span class="sxs-lookup"><span data-stu-id="0eeb7-140">DBTYPE_HCHAPTER</span></span>|<span data-ttu-id="0eeb7-141">sem suporte</span><span class="sxs-lookup"><span data-stu-id="0eeb7-141">not supported</span></span>|  
|<span data-ttu-id="0eeb7-142">DBTYPE_I1</span><span class="sxs-lookup"><span data-stu-id="0eeb7-142">DBTYPE_I1</span></span>|<span data-ttu-id="0eeb7-143">SByte</span><span class="sxs-lookup"><span data-stu-id="0eeb7-143">SByte</span></span>|  
|<span data-ttu-id="0eeb7-144">DBTYPE_I2</span><span class="sxs-lookup"><span data-stu-id="0eeb7-144">DBTYPE_I2</span></span>|<span data-ttu-id="0eeb7-145">Int16</span><span class="sxs-lookup"><span data-stu-id="0eeb7-145">Int16</span></span>|  
|<span data-ttu-id="0eeb7-146">DBTYPE_I4</span><span class="sxs-lookup"><span data-stu-id="0eeb7-146">DBTYPE_I4</span></span>|<span data-ttu-id="0eeb7-147">Int32</span><span class="sxs-lookup"><span data-stu-id="0eeb7-147">Int32</span></span>|  
|<span data-ttu-id="0eeb7-148">DBTYPE_I8</span><span class="sxs-lookup"><span data-stu-id="0eeb7-148">DBTYPE_I8</span></span>|<span data-ttu-id="0eeb7-149">Int64</span><span class="sxs-lookup"><span data-stu-id="0eeb7-149">Int64</span></span>|  
|<span data-ttu-id="0eeb7-150">DBTYPE_IDISPATCH</span><span class="sxs-lookup"><span data-stu-id="0eeb7-150">DBTYPE_IDISPATCH</span></span>|<span data-ttu-id="0eeb7-151">objeto</span><span class="sxs-lookup"><span data-stu-id="0eeb7-151">object</span></span>|  
|<span data-ttu-id="0eeb7-152">DBTYPE_IUNKNOWN</span><span class="sxs-lookup"><span data-stu-id="0eeb7-152">DBTYPE_IUNKNOWN</span></span>|<span data-ttu-id="0eeb7-153">objeto</span><span class="sxs-lookup"><span data-stu-id="0eeb7-153">object</span></span>|  
|<span data-ttu-id="0eeb7-154">DBTYPE_NULL</span><span class="sxs-lookup"><span data-stu-id="0eeb7-154">DBTYPE_NULL</span></span>|<span data-ttu-id="0eeb7-155">DBNull.Value</span><span class="sxs-lookup"><span data-stu-id="0eeb7-155">DBNull.Value</span></span>|  
|<span data-ttu-id="0eeb7-156">DBTYPE_NUMERIC</span><span class="sxs-lookup"><span data-stu-id="0eeb7-156">DBTYPE_NUMERIC</span></span>|<span data-ttu-id="0eeb7-157">Decimal</span><span class="sxs-lookup"><span data-stu-id="0eeb7-157">Decimal</span></span>|  
|<span data-ttu-id="0eeb7-158">DBTYPE_PROPVARIANT</span><span class="sxs-lookup"><span data-stu-id="0eeb7-158">DBTYPE_PROPVARIANT</span></span>|<span data-ttu-id="0eeb7-159">objeto</span><span class="sxs-lookup"><span data-stu-id="0eeb7-159">object</span></span>|  
|<span data-ttu-id="0eeb7-160">DBTYPE_R4</span><span class="sxs-lookup"><span data-stu-id="0eeb7-160">DBTYPE_R4</span></span>|<span data-ttu-id="0eeb7-161">Simples</span><span class="sxs-lookup"><span data-stu-id="0eeb7-161">Single</span></span>|  
|<span data-ttu-id="0eeb7-162">DBTYPE_R8</span><span class="sxs-lookup"><span data-stu-id="0eeb7-162">DBTYPE_R8</span></span>|<span data-ttu-id="0eeb7-163">Duplo</span><span class="sxs-lookup"><span data-stu-id="0eeb7-163">Double</span></span>|  
|<span data-ttu-id="0eeb7-164">DBTYPE_STR</span><span class="sxs-lookup"><span data-stu-id="0eeb7-164">DBTYPE_STR</span></span>|<span data-ttu-id="0eeb7-165">cadeia de caracteres</span><span class="sxs-lookup"><span data-stu-id="0eeb7-165">string</span></span>|  
|<span data-ttu-id="0eeb7-166">DBTYPE_UDT</span><span class="sxs-lookup"><span data-stu-id="0eeb7-166">DBTYPE_UDT</span></span>|<span data-ttu-id="0eeb7-167">sem suporte</span><span class="sxs-lookup"><span data-stu-id="0eeb7-167">not supported</span></span>|  
|<span data-ttu-id="0eeb7-168">DBTYPE_UI1</span><span class="sxs-lookup"><span data-stu-id="0eeb7-168">DBTYPE_UI1</span></span>|<span data-ttu-id="0eeb7-169">byte (Int16)</span><span class="sxs-lookup"><span data-stu-id="0eeb7-169">byte (Int16)</span></span>|  
|<span data-ttu-id="0eeb7-170">DBTYPE_UI2</span><span class="sxs-lookup"><span data-stu-id="0eeb7-170">DBTYPE_UI2</span></span>|<span data-ttu-id="0eeb7-171">UInt16 (Int32)</span><span class="sxs-lookup"><span data-stu-id="0eeb7-171">UInt16 (Int32)</span></span>|  
|<span data-ttu-id="0eeb7-172">DBTYPE_UI4</span><span class="sxs-lookup"><span data-stu-id="0eeb7-172">DBTYPE_UI4</span></span>|<span data-ttu-id="0eeb7-173">UInt32 (Int64)</span><span class="sxs-lookup"><span data-stu-id="0eeb7-173">UInt32 (Int64)</span></span>|  
|<span data-ttu-id="0eeb7-174">DBTYPE_UI8</span><span class="sxs-lookup"><span data-stu-id="0eeb7-174">DBTYPE_UI8</span></span>|<span data-ttu-id="0eeb7-175">UInt64 (Decimal)</span><span class="sxs-lookup"><span data-stu-id="0eeb7-175">UInt64 (Decimal)</span></span>|  
|<span data-ttu-id="0eeb7-176">DBTYPE_VARIANT</span><span class="sxs-lookup"><span data-stu-id="0eeb7-176">DBTYPE_VARIANT</span></span>|<span data-ttu-id="0eeb7-177">objeto</span><span class="sxs-lookup"><span data-stu-id="0eeb7-177">object</span></span>|  
|<span data-ttu-id="0eeb7-178">DBTYPE_VARNUMERIC</span><span class="sxs-lookup"><span data-stu-id="0eeb7-178">DBTYPE_VARNUMERIC</span></span>|<span data-ttu-id="0eeb7-179">sem suporte</span><span class="sxs-lookup"><span data-stu-id="0eeb7-179">not supported</span></span>|  
|<span data-ttu-id="0eeb7-180">DBTYPE_WSTR</span><span class="sxs-lookup"><span data-stu-id="0eeb7-180">DBTYPE_WSTR</span></span>|<span data-ttu-id="0eeb7-181">cadeia de caracteres</span><span class="sxs-lookup"><span data-stu-id="0eeb7-181">string</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="0eeb7-182">O exemplo a seguir cria instâncias de classes derivadas, <xref:System.Data.SqlClient.SqlConnection>, <xref:System.Data.SqlClient.SqlCommand>, e <xref:System.Data.SqlClient.SqlDataReader>.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-182">The following example creates instances of the derived classes, <xref:System.Data.SqlClient.SqlConnection>, <xref:System.Data.SqlClient.SqlCommand>, and <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="0eeb7-183">O exemplo lê os dados, gravá-los no console do.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-183">The example reads through the data, writing it out to the console.</span></span> <span data-ttu-id="0eeb7-184">Por fim, o exemplo fecha o <xref:System.Data.SqlClient.SqlDataReader>e, em seguida, o <xref:System.Data.SqlClient.SqlConnection>.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-184">Finally, the example closes the <xref:System.Data.SqlClient.SqlDataReader>, and then the <xref:System.Data.SqlClient.SqlConnection>.</span></span>  
  
 [!code-csharp[Classic WebData SqlDataReader.Read Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Read Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataReader.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Read Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="FieldCount">
      <MemberSignature Language="C#" Value="public int FieldCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FieldCount" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataRecord.FieldCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FieldCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FieldCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FieldCount : int" Usage="System.Data.IDataRecord.FieldCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0eeb7-185">Obtém o número de colunas na linha atual.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-185">Gets the number of columns in the current row.</span></span></summary>
        <value><span data-ttu-id="0eeb7-186">Quando não estiver posicionado em um conjunto de registros válido, 0. Caso contrário, o número de colunas no registro atual.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-186">When not positioned in a valid recordset, 0; otherwise, the number of columns in the current record.</span></span> <span data-ttu-id="0eeb7-187">O padrão é -1.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-187">The default is -1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eeb7-188">Depois de executar uma consulta que não retorna linhas (por exemplo, usando o <xref:System.Data.IDbCommand.ExecuteNonQuery%2A> método), <xref:System.Data.IDataRecord.FieldCount%2A> retornará -1.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-188">After executing a query that does not return rows (for example, using the <xref:System.Data.IDbCommand.ExecuteNonQuery%2A> method), <xref:System.Data.IDataRecord.FieldCount%2A> returns -1.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="C#" Value="public bool GetBoolean (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetBoolean(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataRecord.GetBoolean(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBoolean (i As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetBoolean(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetBoolean : int -&gt; bool" Usage="iDataRecord.GetBoolean i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="0eeb7-189">O ordinal da coluna baseado em zero.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-189">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="0eeb7-190">Obtém o valor da coluna especificada como um booliano.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-190">Gets the value of the specified column as a Boolean.</span></span></summary>
        <returns><span data-ttu-id="0eeb7-191">O valor da coluna.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-191">The value of the column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eeb7-192">Nenhuma conversão é realizada.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-192">No conversions are performed.</span></span> <span data-ttu-id="0eeb7-193">Portanto, os dados recuperados já devem ser um booliano; Caso contrário, uma exceção será gerada.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-193">Therefore, the data retrieved must already be a Boolean; otherwise an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="0eeb7-194">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-194">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetByte">
      <MemberSignature Language="C#" Value="public byte GetByte (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8 GetByte(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataRecord.GetByte(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetByte (i As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Byte GetByte(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetByte : int -&gt; byte" Usage="iDataRecord.GetByte i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="0eeb7-195">O ordinal da coluna baseado em zero.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-195">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="0eeb7-196">Obtém o valor de inteiro sem sinal de 8 bits da coluna especificada.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-196">Gets the 8-bit unsigned integer value of the specified column.</span></span></summary>
        <returns><span data-ttu-id="0eeb7-197">O valor de inteiro sem sinal de 8 bits da coluna especificada.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-197">The 8-bit unsigned integer value of the specified column.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="0eeb7-198">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-198">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public long GetBytes (int i, long fieldOffset, byte[] buffer, int bufferoffset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 GetBytes(int32 i, int64 fieldOffset, unsigned int8[] buffer, int32 bufferoffset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBytes (i As Integer, fieldOffset As Long, buffer As Byte(), bufferoffset As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long GetBytes(int i, long fieldOffset, cli::array &lt;System::Byte&gt; ^ buffer, int bufferoffset, int length);" />
      <MemberSignature Language="F#" Value="abstract member GetBytes : int * int64 * byte[] * int * int -&gt; int64" Usage="iDataRecord.GetBytes (i, fieldOffset, buffer, bufferoffset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="fieldOffset" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="bufferoffset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="0eeb7-199">O ordinal da coluna baseado em zero.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-199">The zero-based column ordinal.</span></span></param>
        <param name="fieldOffset"><span data-ttu-id="0eeb7-200">O índice no campo no qual será iniciada a operação de leitura.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-200">The index within the field from which to start the read operation.</span></span></param>
        <param name="buffer"><span data-ttu-id="0eeb7-201">O buffer no qual o fluxo de bytes deve ser lido.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-201">The buffer into which to read the stream of bytes.</span></span></param>
        <param name="bufferoffset"><span data-ttu-id="0eeb7-202">O índice para o <paramref name="buffer" /> para iniciar a operação de leitura.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-202">The index for <paramref name="buffer" /> to start the read operation.</span></span></param>
        <param name="length"><span data-ttu-id="0eeb7-203">O número de bytes a serem lidos.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-203">The number of bytes to read.</span></span></param>
        <summary><span data-ttu-id="0eeb7-204">Lê um fluxo de bytes do deslocamento de coluna especificado no buffer como uma matriz, iniciando no deslocamento de buffer especificado.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-204">Reads a stream of bytes from the specified column offset into the buffer as an array, starting at the given buffer offset.</span></span></summary>
        <returns><span data-ttu-id="0eeb7-205">O número real de bytes lidos.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-205">The actual number of bytes read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eeb7-206"><xref:System.Data.IDataRecord.GetBytes%2A> Retorna o número de bytes disponíveis no campo.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-206"><xref:System.Data.IDataRecord.GetBytes%2A> returns the number of available bytes in the field.</span></span> <span data-ttu-id="0eeb7-207">Com frequência, esse é o comprimento exato do campo.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-207">Frequently this is the exact length of the field.</span></span> <span data-ttu-id="0eeb7-208">No entanto, o número retornado pode ser menor que o comprimento real do campo se `GetBytes` já foi usado para obter os bytes do campo.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-208">However, the number returned may be less than the true length of the field if `GetBytes` has already been used to obtain bytes from the field.</span></span>  
  
 <span data-ttu-id="0eeb7-209">Se você passar um buffer que está `null`, <xref:System.Data.IDataRecord.GetBytes%2A> retorna o comprimento da linha em bytes.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-209">If you pass a buffer that is `null`, <xref:System.Data.IDataRecord.GetBytes%2A> returns the length of the row in bytes.</span></span>  
  
 <span data-ttu-id="0eeb7-210">Nenhuma conversão é realizada; Portanto, os dados recuperados já devem ser uma matriz de bytes.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-210">No conversions are performed; therefore the data retrieved must already be a byte array.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="0eeb7-211">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-211">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetChar">
      <MemberSignature Language="C#" Value="public char GetChar (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char GetChar(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataRecord.GetChar(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChar (i As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; char GetChar(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetChar : int -&gt; char" Usage="iDataRecord.GetChar i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="0eeb7-212">O ordinal da coluna baseado em zero.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-212">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="0eeb7-213">Obtém o valor do caractere da coluna especificada.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-213">Gets the character value of the specified column.</span></span></summary>
        <returns><span data-ttu-id="0eeb7-214">O valor do caractere da coluna especificada.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-214">The character value of the specified column.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="0eeb7-215">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-215">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public long GetChars (int i, long fieldoffset, char[] buffer, int bufferoffset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 GetChars(int32 i, int64 fieldoffset, char[] buffer, int32 bufferoffset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChars (i As Integer, fieldoffset As Long, buffer As Char(), bufferoffset As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long GetChars(int i, long fieldoffset, cli::array &lt;char&gt; ^ buffer, int bufferoffset, int length);" />
      <MemberSignature Language="F#" Value="abstract member GetChars : int * int64 * char[] * int * int -&gt; int64" Usage="iDataRecord.GetChars (i, fieldoffset, buffer, bufferoffset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="fieldoffset" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="bufferoffset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="0eeb7-216">O ordinal da coluna baseado em zero.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-216">The zero-based column ordinal.</span></span></param>
        <param name="fieldoffset"><span data-ttu-id="0eeb7-217">O índice dentro da linha da qual iniciar a operação de leitura.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-217">The index within the row from which to start the read operation.</span></span></param>
        <param name="buffer"><span data-ttu-id="0eeb7-218">O buffer no qual o fluxo de bytes deve ser lido.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-218">The buffer into which to read the stream of bytes.</span></span></param>
        <param name="bufferoffset"><span data-ttu-id="0eeb7-219">O índice para o <paramref name="buffer" /> para iniciar a operação de leitura.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-219">The index for <paramref name="buffer" /> to start the read operation.</span></span></param>
        <param name="length"><span data-ttu-id="0eeb7-220">O número de bytes a serem lidos.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-220">The number of bytes to read.</span></span></param>
        <summary><span data-ttu-id="0eeb7-221">Lê um fluxo de caracteres do deslocamento de coluna especificado no buffer como uma matriz iniciada no deslocamento de buffer fornecido.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-221">Reads a stream of characters from the specified column offset into the buffer as an array, starting at the given buffer offset.</span></span></summary>
        <returns><span data-ttu-id="0eeb7-222">O número real de caracteres lidos.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-222">The actual number of characters read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eeb7-223"><xref:System.Data.IDataRecord.GetChars%2A> Retorna o número de caracteres disponíveis no campo.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-223"><xref:System.Data.IDataRecord.GetChars%2A> returns the number of available characters in the field.</span></span> <span data-ttu-id="0eeb7-224">Com frequência, esse é o comprimento exato do campo.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-224">Frequently this is the exact length of the field.</span></span> <span data-ttu-id="0eeb7-225">No entanto, o número retornado pode ser menor que o comprimento exato do campo se `GetChars` já foi usado para obter caracteres do campo.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-225">However, the number returned may be less than the exact length of the field if `GetChars` has already been used to obtain characters from the field.</span></span>  
  
 <span data-ttu-id="0eeb7-226">Se você passar um buffer que está `null`, `GetChars` retorna o comprimento do campo em caracteres.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-226">If you pass a buffer that is `null`, `GetChars` returns the length of the field in characters.</span></span>  
  
 <span data-ttu-id="0eeb7-227">Nenhuma conversão é realizada; Portanto, os dados recuperados já devem ser uma matriz de caracteres.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-227">No conversions are performed; therefore the data retrieved must already be a character array.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="0eeb7-228">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-228">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public System.Data.IDataReader GetData (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.IDataReader GetData(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataRecord.GetData(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (i As Integer) As IDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::IDataReader ^ GetData(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetData : int -&gt; System.Data.IDataReader" Usage="iDataRecord.GetData i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="0eeb7-229">O índice do campo a ser localizado.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-229">The index of the field to find.</span></span></param>
        <summary><span data-ttu-id="0eeb7-230">Retorna um <see cref="T:System.Data.IDataReader" /> para o ordinal da coluna especificada.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-230">Returns an <see cref="T:System.Data.IDataReader" /> for the specified column ordinal.</span></span></summary>
        <returns><span data-ttu-id="0eeb7-231">O <see cref="T:System.Data.IDataReader" /> para o ordinal da coluna especificada.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-231">The <see cref="T:System.Data.IDataReader" /> for the specified column ordinal.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="0eeb7-232">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-232">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataTypeName">
      <MemberSignature Language="C#" Value="public string GetDataTypeName (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetDataTypeName(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataRecord.GetDataTypeName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDataTypeName (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetDataTypeName(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetDataTypeName : int -&gt; string" Usage="iDataRecord.GetDataTypeName i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="0eeb7-233">O índice do campo a ser localizado.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-233">The index of the field to find.</span></span></param>
        <summary><span data-ttu-id="0eeb7-234">Obtém as informações de tipo de dados do campo especificado.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-234">Gets the data type information for the specified field.</span></span></summary>
        <returns><span data-ttu-id="0eeb7-235">As informações de tipo de dados do campo especificado.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-235">The data type information for the specified field.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eeb7-236">As informações de tipo de dados podem diferir das informações de tipo retornadas por `GetFieldType`, especialmente em que os tipos de dados subjacentes não são mapeados um a um para os tipos de tempo de execução com suporte pela linguagem.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-236">The data type information can differ from the type information returned by `GetFieldType`, especially where the underlying data types do not map one for one to the runtime types supported by the language.</span></span> <span data-ttu-id="0eeb7-237">(por exemplo, `DataTypeName` pode ser "integer", enquanto `Type.Name` pode ser "Int32".)</span><span class="sxs-lookup"><span data-stu-id="0eeb7-237">(for example, `DataTypeName` may be "integer", while `Type.Name` may be "Int32".)</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="0eeb7-238">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-238">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetDateTime">
      <MemberSignature Language="C#" Value="public DateTime GetDateTime (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime GetDateTime(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataRecord.GetDateTime(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDateTime (i As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime GetDateTime(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetDateTime : int -&gt; DateTime" Usage="iDataRecord.GetDateTime i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="0eeb7-239">O índice do campo a ser localizado.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-239">The index of the field to find.</span></span></param>
        <summary><span data-ttu-id="0eeb7-240">Obtém o valor de dados de data e hora do campo especificado.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-240">Gets the date and time data value of the specified field.</span></span></summary>
        <returns><span data-ttu-id="0eeb7-241">O valor de dados de data e hora do campo especificado.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-241">The date and time data value of the specified field.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="0eeb7-242">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-242">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetDecimal">
      <MemberSignature Language="C#" Value="public decimal GetDecimal (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Decimal GetDecimal(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataRecord.GetDecimal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDecimal (i As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Decimal GetDecimal(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetDecimal : int -&gt; decimal" Usage="iDataRecord.GetDecimal i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="0eeb7-243">O índice do campo a ser localizado.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-243">The index of the field to find.</span></span></param>
        <summary><span data-ttu-id="0eeb7-244">Obtém o valor numérico de posição fixa do campo especificado.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-244">Gets the fixed-position numeric value of the specified field.</span></span></summary>
        <returns><span data-ttu-id="0eeb7-245">O valor numérico de posição fixa do campo especificado.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-245">The fixed-position numeric value of the specified field.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="0eeb7-246">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-246">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="C#" Value="public double GetDouble (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 GetDouble(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataRecord.GetDouble(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDouble (i As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GetDouble(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetDouble : int -&gt; double" Usage="iDataRecord.GetDouble i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="0eeb7-247">O índice do campo a ser localizado.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-247">The index of the field to find.</span></span></param>
        <summary><span data-ttu-id="0eeb7-248">Obtém o número de ponto flutuante de precisão dupla do campo especificado.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-248">Gets the double-precision floating point number of the specified field.</span></span></summary>
        <returns><span data-ttu-id="0eeb7-249">O número de ponto flutuante de precisão dupla do campo especificado.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-249">The double-precision floating point number of the specified field.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="0eeb7-250">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-250">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetFieldType">
      <MemberSignature Language="C#" Value="public Type GetFieldType (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetFieldType(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataRecord.GetFieldType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFieldType (i As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetFieldType(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetFieldType : int -&gt; Type" Usage="iDataRecord.GetFieldType i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="0eeb7-251">O índice do campo a ser localizado.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-251">The index of the field to find.</span></span></param>
        <summary><span data-ttu-id="0eeb7-252">Obtém as informações <see cref="T:System.Type" /> que correspondem ao tipo de <see cref="T:System.Object" /> que seria retornado de <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)" />.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-252">Gets the <see cref="T:System.Type" /> information corresponding to the type of <see cref="T:System.Object" /> that would be returned from <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)" />.</span></span></summary>
        <returns><span data-ttu-id="0eeb7-253">As informações <see cref="T:System.Type" /> que correspondem ao tipo de <see cref="T:System.Object" /> que seria retornado de <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)" />.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-253">The <see cref="T:System.Type" /> information corresponding to the type of <see cref="T:System.Object" /> that would be returned from <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eeb7-254">Essas informações podem ser usadas para aumentar o desempenho indicando o acessador fortemente tipadas para chamar.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-254">This information can be used to increase performance by indicating the strongly-typed accessor to call.</span></span> <span data-ttu-id="0eeb7-255">(por exemplo, usando `GetInt32` é aproximadamente dez vezes mais rápidos que usar `GetValue`.)</span><span class="sxs-lookup"><span data-stu-id="0eeb7-255">(for example, using `GetInt32` is roughly ten times faster than using `GetValue`.)</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="0eeb7-256">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-256">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetFloat">
      <MemberSignature Language="C#" Value="public float GetFloat (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 GetFloat(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataRecord.GetFloat(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFloat (i As Integer) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; float GetFloat(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetFloat : int -&gt; single" Usage="iDataRecord.GetFloat i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="0eeb7-257">O índice do campo a ser localizado.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-257">The index of the field to find.</span></span></param>
        <summary><span data-ttu-id="0eeb7-258">Obtém o número de ponto flutuante de precisão simples do campo especificado.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-258">Gets the single-precision floating point number of the specified field.</span></span></summary>
        <returns><span data-ttu-id="0eeb7-259">O número de ponto flutuante de precisão simples do campo especificado.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-259">The single-precision floating point number of the specified field.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="0eeb7-260">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-260">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetGuid">
      <MemberSignature Language="C#" Value="public Guid GetGuid (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Guid GetGuid(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataRecord.GetGuid(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGuid (i As Integer) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Guid GetGuid(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetGuid : int -&gt; Guid" Usage="iDataRecord.GetGuid i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="0eeb7-261">O índice do campo a ser localizado.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-261">The index of the field to find.</span></span></param>
        <summary><span data-ttu-id="0eeb7-262">Retorna o valor de GUID do campo especificado.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-262">Returns the GUID value of the specified field.</span></span></summary>
        <returns><span data-ttu-id="0eeb7-263">O valor de GUID do campo especificado.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-263">The GUID value of the specified field.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="0eeb7-264">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-264">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt16">
      <MemberSignature Language="C#" Value="public short GetInt16 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int16 GetInt16(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataRecord.GetInt16(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInt16 (i As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; short GetInt16(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetInt16 : int -&gt; int16" Usage="iDataRecord.GetInt16 i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="0eeb7-265">O índice do campo a ser localizado.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-265">The index of the field to find.</span></span></param>
        <summary><span data-ttu-id="0eeb7-266">Obtém o valor inteiro com sinal de 16 bits do campo especificado.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-266">Gets the 16-bit signed integer value of the specified field.</span></span></summary>
        <returns><span data-ttu-id="0eeb7-267">O valor inteiro com sinal de 16 bits do campo especificado.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-267">The 16-bit signed integer value of the specified field.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="0eeb7-268">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-268">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt32">
      <MemberSignature Language="C#" Value="public int GetInt32 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetInt32(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataRecord.GetInt32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInt32 (i As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetInt32(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetInt32 : int -&gt; int" Usage="iDataRecord.GetInt32 i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="0eeb7-269">O índice do campo a ser localizado.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-269">The index of the field to find.</span></span></param>
        <summary><span data-ttu-id="0eeb7-270">Obtém o valor inteiro com sinal de 32 bits do campo especificado.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-270">Gets the 32-bit signed integer value of the specified field.</span></span></summary>
        <returns><span data-ttu-id="0eeb7-271">O valor inteiro com sinal de 32 bits do campo especificado.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-271">The 32-bit signed integer value of the specified field.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="0eeb7-272">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-272">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt64">
      <MemberSignature Language="C#" Value="public long GetInt64 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 GetInt64(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataRecord.GetInt64(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInt64 (i As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long GetInt64(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetInt64 : int -&gt; int64" Usage="iDataRecord.GetInt64 i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="0eeb7-273">O índice do campo a ser localizado.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-273">The index of the field to find.</span></span></param>
        <summary><span data-ttu-id="0eeb7-274">Obtém o valor inteiro com sinal de 64 bits do campo especificado.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-274">Gets the 64-bit signed integer value of the specified field.</span></span></summary>
        <returns><span data-ttu-id="0eeb7-275">O valor inteiro com sinal de 64 bits do campo especificado.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-275">The 64-bit signed integer value of the specified field.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="0eeb7-276">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-276">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public string GetName (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetName(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataRecord.GetName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetName (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetName(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetName : int -&gt; string" Usage="iDataRecord.GetName i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="0eeb7-277">O índice do campo a ser localizado.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-277">The index of the field to find.</span></span></param>
        <summary><span data-ttu-id="0eeb7-278">Obtém o nome do campo a ser localizado.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-278">Gets the name for the field to find.</span></span></summary>
        <returns><span data-ttu-id="0eeb7-279">O nome do campo ou a cadeia de caracteres vazia (""), se não houver valor a ser retornado.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-279">The name of the field or the empty string (""), if there is no value to return.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="0eeb7-280">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-280">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetOrdinal">
      <MemberSignature Language="C#" Value="public int GetOrdinal (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetOrdinal(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataRecord.GetOrdinal(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrdinal (name As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetOrdinal(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetOrdinal : string -&gt; int" Usage="iDataRecord.GetOrdinal name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="0eeb7-281">O nome do campo a ser localizado.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-281">The name of the field to find.</span></span></param>
        <summary><span data-ttu-id="0eeb7-282">Retorna o índice do campo nomeado.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-282">Return the index of the named field.</span></span></summary>
        <returns><span data-ttu-id="0eeb7-283">O índice do campo nomeado.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-283">The index of the named field.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eeb7-284">`GetOrdinal` executa uma pesquisa diferencia maiusculas de minúsculas primeiro.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-284">`GetOrdinal` performs a case-sensitive lookup first.</span></span> <span data-ttu-id="0eeb7-285">Se ele falhar, uma segunda pesquisa diferencia maiusculas de minúsculas será feita.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-285">If it fails, a second case-insensitive search is made.</span></span> <span data-ttu-id="0eeb7-286">`GetOrdinal` não distingue largura de kana.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-286">`GetOrdinal` is kana-width insensitive.</span></span> <span data-ttu-id="0eeb7-287">Se o índice do campo nomeado não for encontrado, um `IndexOutOfRangeException` é gerada.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-287">If the index of the named field is not found, an `IndexOutOfRangeException` is thrown.</span></span>  
  
 <span data-ttu-id="0eeb7-288">Como pesquisas baseadas em ordinais são mais eficientes do que pesquisas por nome, é ineficiente chamar `GetOrdinal` dentro de um loop.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-288">Because ordinal-based lookups are more efficient than named lookups, it is inefficient to call `GetOrdinal` within a loop.</span></span> <span data-ttu-id="0eeb7-289">Economize tempo chamando `GetOrdinal` uma vez e atribuindo os resultados para uma variável de inteiro para uso dentro do loop.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-289">Save time by calling `GetOrdinal` one time and assigning the results to an integer variable for use within the loop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0eeb7-290">O exemplo a seguir demonstra como usar o herdadas <xref:System.Data.Odbc.OdbcDataReader.GetOrdinal%2A> método.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-290">The following example demonstrates how to use the inherited <xref:System.Data.Odbc.OdbcDataReader.GetOrdinal%2A> method.</span></span>  
  
 [!code-csharp[Classic WebData OdbcDataReader.GetOrdinal#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcDataReader.GetOrdinal/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcDataReader.GetOrdinal#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcDataReader.GetOrdinal/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public string GetString (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetString(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataRecord.GetString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetString (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetString(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetString : int -&gt; string" Usage="iDataRecord.GetString i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="0eeb7-291">O índice do campo a ser localizado.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-291">The index of the field to find.</span></span></param>
        <summary><span data-ttu-id="0eeb7-292">Obtém o valor de cadeia de caracteres do campo especificado.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-292">Gets the string value of the specified field.</span></span></summary>
        <returns><span data-ttu-id="0eeb7-293">O valor de cadeia de caracteres do campo especificado.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-293">The string value of the specified field.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="0eeb7-294">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-294">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetValue(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataRecord.GetValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (i As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetValue : int -&gt; obj" Usage="iDataRecord.GetValue i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="0eeb7-295">O índice do campo a ser localizado.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-295">The index of the field to find.</span></span></param>
        <summary><span data-ttu-id="0eeb7-296">Retorne o valor do campo especificado.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-296">Return the value of the specified field.</span></span></summary>
        <returns><span data-ttu-id="0eeb7-297">O <see cref="T:System.Object" /> que conterá o valor do campo após o retorno.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-297">The <see cref="T:System.Object" /> which will contain the field value upon return.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="0eeb7-298">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-298">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public int GetValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataRecord.GetValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="abstract member GetValues : obj[] -&gt; int" Usage="iDataRecord.GetValues values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values"><span data-ttu-id="0eeb7-299">Uma matriz de <see cref="T:System.Object" /> na qual os campos de atributo serão copiados.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-299">An array of <see cref="T:System.Object" /> to copy the attribute fields into.</span></span></param>
        <summary><span data-ttu-id="0eeb7-300">Popula uma matriz de objetos com os valores da coluna do registro atual.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-300">Populates an array of objects with the column values of the current record.</span></span></summary>
        <returns><span data-ttu-id="0eeb7-301">O número de instâncias de <see cref="T:System.Object" /> na matriz.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-301">The number of instances of <see cref="T:System.Object" /> in the array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eeb7-302">Para a maioria dos aplicativos, o <xref:System.Data.IDataRecord.GetValues%2A> método fornece um meio eficaz para recuperar todas as colunas, em vez de recuperar cada coluna individualmente.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-302">For most applications, the <xref:System.Data.IDataRecord.GetValues%2A> method provides an efficient means for retrieving all columns, instead of retrieving each column individually.</span></span>  
  
 <span data-ttu-id="0eeb7-303">Você pode passar um <xref:System.Object> matriz que contém menos do que o número de colunas que estão contidos na linha resultante.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-303">You can pass an <xref:System.Object> array that contains fewer than the number of columns that are contained in the resulting row.</span></span> <span data-ttu-id="0eeb7-304">Somente a quantidade de dados a <xref:System.Object> matriz mantém é copiado para a matriz.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-304">Only the amount of data the <xref:System.Object> array holds is copied to the array.</span></span> <span data-ttu-id="0eeb7-305">Você também pode passar um <xref:System.Object> matriz cujo tamanho é maior que o número de colunas que estão contidos na linha resultante.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-305">You can also pass an <xref:System.Object> array whose length is more than the number of columns that are contained in the resulting row.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDBNull">
      <MemberSignature Language="C#" Value="public bool IsDBNull (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDBNull(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataRecord.IsDBNull(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDBNull (i As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsDBNull(int i);" />
      <MemberSignature Language="F#" Value="abstract member IsDBNull : int -&gt; bool" Usage="iDataRecord.IsDBNull i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="0eeb7-306">O índice do campo a ser localizado.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-306">The index of the field to find.</span></span></param>
        <summary><span data-ttu-id="0eeb7-307">Retorna se o campo especificado está definido como nulo.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-307">Return whether the specified field is set to null.</span></span></summary>
        <returns><span data-ttu-id="0eeb7-308"><see langword="true" /> se o campo especificado é definido como nulo; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-308"><see langword="true" /> if the specified field is set to null; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eeb7-309">Chame esse método para verificar se há valores de coluna nulos antes de chamar os métodos get tipado (por exemplo, <xref:System.Data.SqlClient.SqlDataReader.GetByte%2A>, <xref:System.Data.SqlClient.SqlDataReader.GetChar%2A>e assim por diante) para evitar gerar um erro.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-309">Call this method to see if there are null column values before calling the typed get methods (for example, <xref:System.Data.SqlClient.SqlDataReader.GetByte%2A>, <xref:System.Data.SqlClient.SqlDataReader.GetChar%2A>, and so on) to avoid raising an error.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="0eeb7-310">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-310">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0eeb7-311">Obtém a coluna especificada.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-311">Gets the specified column.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int i] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataRecord.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(i As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int] { System::Object ^ get(int i); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj" Usage="System.Data.IDataRecord.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="0eeb7-312">O índice baseado em zero da coluna a obter.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-312">The zero-based index of the column to get.</span></span></param>
        <summary><span data-ttu-id="0eeb7-313">Obtém a coluna localizada no índice especificado.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-313">Gets the column located at the specified index.</span></span></summary>
        <value><span data-ttu-id="0eeb7-314">A coluna localizado no índice especificado como um <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-314">The column located at the specified index as an <see cref="T:System.Object" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="0eeb7-315">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-315">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataRecord.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ name); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj" Usage="System.Data.IDataRecord.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="0eeb7-316">O nome da coluna a ser encontrado.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-316">The name of the column to find.</span></span></param>
        <summary><span data-ttu-id="0eeb7-317">Obtém a coluna com o nome especificado.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-317">Gets the column with the specified name.</span></span></summary>
        <value><span data-ttu-id="0eeb7-318">A coluna com o nome especificado como um <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-318">The column with the specified name as an <see cref="T:System.Object" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eeb7-319">Uma pesquisa diferencia maiusculas de minúsculas é realizada pela primeira vez.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-319">A case-sensitive lookup is performed first.</span></span> <span data-ttu-id="0eeb7-320">Se ele falhar, uma segunda pesquisa diferencia maiusculas de minúsculas será feita.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-320">If it fails, a second case-insensitive search is made.</span></span>  
  
 <span data-ttu-id="0eeb7-321">Esse método não distingue largura kana.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-321">This method is kana-width insensitive.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="0eeb7-322">Nenhuma coluna com o nome especificado foi encontrada.</span><span class="sxs-lookup"><span data-stu-id="0eeb7-322">No column with the specified name was found.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>