<Type Name="IsolationLevel" FullName="System.Data.IsolationLevel">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fd1598b6f019ec4266a4507137cb374b09d7767b" />
    <Meta Name="ms.sourcegitcommit" Value="df6cf590aa3087f6c7c202712eee781c6a3c8f96" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="05/07/2018" />
    <Meta Name="ms.locfileid" Value="33679386" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum IsolationLevel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed IsolationLevel extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Data.IsolationLevel" />
  <TypeSignature Language="VB.NET" Value="Public Enum IsolationLevel" />
  <TypeSignature Language="C++ CLI" Value="public enum class IsolationLevel" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
      <span data-ttu-id="b7127-101">Especifica o comportamento de bloqueio de transação para a conexão.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b7127-101">Specifies the transaction locking behavior for the connection.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7127-102">O <xref:System.Data.IsolationLevel> valores são usados por um provedor de dados .NET Framework ao executar uma transação.</span><span class="sxs-lookup"><span data-stu-id="b7127-102">The <xref:System.Data.IsolationLevel> values are used by a .NET Framework data provider when performing a transaction.</span></span>  
  
 <span data-ttu-id="b7127-103">O <xref:System.Data.IsolationLevel> permanece em vigor até que explicitamente alterados, mas pode ser alterada a qualquer momento.</span><span class="sxs-lookup"><span data-stu-id="b7127-103">The <xref:System.Data.IsolationLevel> remains in effect until explicitly changed, but it can be changed at any time.</span></span> <span data-ttu-id="b7127-104">O novo valor é usado em tempo de execução, não o tempo de análise.</span><span class="sxs-lookup"><span data-stu-id="b7127-104">The new value is used at execution time, not parse time.</span></span> <span data-ttu-id="b7127-105">Se alterado durante uma transação, o comportamento esperado do servidor é aplicar o novo nível de bloqueio para todas as instruções restantes.</span><span class="sxs-lookup"><span data-stu-id="b7127-105">If changed during a transaction, the expected behavior of the server is to apply the new locking level to all statements remaining.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7127-106">Este aplicativo demonstra como usar <xref:System.Data.IsolationLevel> em <xref:System.Data.Common.DbTransaction>.</span><span class="sxs-lookup"><span data-stu-id="b7127-106">This application demonstrates how to use <xref:System.Data.IsolationLevel> in <xref:System.Data.Common.DbTransaction>.</span></span> <span data-ttu-id="b7127-107">O exemplo demonstra que um dos seguintes comportamentos são permitidos em diferentes níveis de isolamento:</span><span class="sxs-lookup"><span data-stu-id="b7127-107">The sample will demonstrate which of the following behaviors are allowed in the different isolation levels:</span></span>  
  
-   <span data-ttu-id="b7127-108">Leituras sujas.</span><span class="sxs-lookup"><span data-stu-id="b7127-108">Dirty reads.</span></span>  
  
-   <span data-ttu-id="b7127-109">Leituras não repetíveis.</span><span class="sxs-lookup"><span data-stu-id="b7127-109">Non-repeatable reads.</span></span>  
  
-   <span data-ttu-id="b7127-110">Fantasmas.</span><span class="sxs-lookup"><span data-stu-id="b7127-110">Phantoms.</span></span>  
  
 <span data-ttu-id="b7127-111">Este aplicativo será executado nos seguintes níveis de isolamento:</span><span class="sxs-lookup"><span data-stu-id="b7127-111">This application will execute in the following isolation levels:</span></span>  
  
-   <span data-ttu-id="b7127-112">ReadUncommitted</span><span class="sxs-lookup"><span data-stu-id="b7127-112">ReadUncommitted</span></span>  
  
-   <span data-ttu-id="b7127-113">ReadCommitted</span><span class="sxs-lookup"><span data-stu-id="b7127-113">ReadCommitted</span></span>  
  
-   <span data-ttu-id="b7127-114">RepeatableRead</span><span class="sxs-lookup"><span data-stu-id="b7127-114">RepeatableRead</span></span>  
  
-   <span data-ttu-id="b7127-115">Serializável</span><span class="sxs-lookup"><span data-stu-id="b7127-115">Serializable</span></span>  
  
-   <span data-ttu-id="b7127-116">Instantâneo</span><span class="sxs-lookup"><span data-stu-id="b7127-116">Snapshot</span></span>  
  
 <span data-ttu-id="b7127-117">A classe PhantomReadThreads demonstra se a transação específica permite que o comportamento de leitura fantasma.</span><span class="sxs-lookup"><span data-stu-id="b7127-117">The PhantomReadThreads class demonstrates if the specific transaction allows the Phantom Read behavior.</span></span> <span data-ttu-id="b7127-118">Se a transação permite que o comportamento, os threads funcionará na seguinte ordem:</span><span class="sxs-lookup"><span data-stu-id="b7127-118">If the transaction allows the behavior, the threads will operate in the following order:</span></span>  
  
-   <span data-ttu-id="b7127-119">No primeiro segmento, selecione a products(All).</span><span class="sxs-lookup"><span data-stu-id="b7127-119">In first thread, select the products(All).</span></span>  
  
-   <span data-ttu-id="b7127-120">O thread de segundo, inserir um novo produto.</span><span class="sxs-lookup"><span data-stu-id="b7127-120">In the second thread, insert a new product.</span></span>  
  
-   <span data-ttu-id="b7127-121">Confirme a transação no segundo thread.</span><span class="sxs-lookup"><span data-stu-id="b7127-121">Commit the transaction in second thread.</span></span>  
  
-   <span data-ttu-id="b7127-122">Selecione os produtos novamente.</span><span class="sxs-lookup"><span data-stu-id="b7127-122">Select the products again.</span></span>  
  
-   <span data-ttu-id="b7127-123">Confirme a transação no primeiro thread.</span><span class="sxs-lookup"><span data-stu-id="b7127-123">Commit the transaction in first thread.</span></span>  
  
 <span data-ttu-id="b7127-124">Se a transação permite que o comportamento, as duas operações Select obterá os resultados diferentes.</span><span class="sxs-lookup"><span data-stu-id="b7127-124">If the transaction allows the behavior, the two Select operations will get the different results.</span></span>  
  
 <span data-ttu-id="b7127-125">A classe NonrepeatableReadThreads demonstra se a transação específica permite que o comportamento de leitura não repetível.</span><span class="sxs-lookup"><span data-stu-id="b7127-125">The NonrepeatableReadThreads class demonstrates if the specific transaction allows the Nonrepeatable Read behavior.</span></span> <span data-ttu-id="b7127-126">Se a transação permite que o comportamento, os threads funcionará na seguinte ordem:</span><span class="sxs-lookup"><span data-stu-id="b7127-126">If the transaction allows the behavior, the threads will operate in the following order:</span></span>  
  
-   <span data-ttu-id="b7127-127">No primeiro segmento, selecione a product(ProductId=1).</span><span class="sxs-lookup"><span data-stu-id="b7127-127">In first thread, select the product(ProductId=1).</span></span>  
  
-   <span data-ttu-id="b7127-128">No thread de segundo, atualize a quantidade value(ProductId=1).</span><span class="sxs-lookup"><span data-stu-id="b7127-128">In the second thread, update the Quantity value(ProductId=1).</span></span>  
  
-   <span data-ttu-id="b7127-129">Confirme a transação no segundo thread.</span><span class="sxs-lookup"><span data-stu-id="b7127-129">Commit the transaction in second thread.</span></span>  
  
-   <span data-ttu-id="b7127-130">Selecione o produto novamente.</span><span class="sxs-lookup"><span data-stu-id="b7127-130">Select the product again.</span></span>  
  
-   <span data-ttu-id="b7127-131">Confirme a transação no primeiro thread.</span><span class="sxs-lookup"><span data-stu-id="b7127-131">Commit the transaction in first thread.</span></span>  
  
 <span data-ttu-id="b7127-132">Se a transação permite que o comportamento, as duas operações Select obterá os resultados diferentes.</span><span class="sxs-lookup"><span data-stu-id="b7127-132">If the transaction allows the behavior, the two Select operations will get the different results.</span></span>  
  
 <span data-ttu-id="b7127-133">A classe ExchangeValuesThreads demonstra a diferença entre as transações Serializable e Snapshot.</span><span class="sxs-lookup"><span data-stu-id="b7127-133">The ExchangeValuesThreads class demonstrates the difference between the Serializable and Snapshot transaction.</span></span> <span data-ttu-id="b7127-134">Para a transação serializável, threads opera na seguinte ordem:</span><span class="sxs-lookup"><span data-stu-id="b7127-134">For the Serializable transaction, threads will operate in the following order:</span></span>  
  
-   <span data-ttu-id="b7127-135">No primeiro segmento, obtenha o preço do product(ProductId=2) e armazenamento na variável.</span><span class="sxs-lookup"><span data-stu-id="b7127-135">In first thread, get the Price of product(ProductId=2) and store in the variable.</span></span>  
  
-   <span data-ttu-id="b7127-136">No primeiro segmento, atualize o preço de product(ProductId=1) com o preço de product(ProductId=2).</span><span class="sxs-lookup"><span data-stu-id="b7127-136">In first thread, update the Price of product(ProductId=1) with the price of product(ProductId=2).</span></span>  
  
-   <span data-ttu-id="b7127-137">Confirme a transação no primeiro thread.</span><span class="sxs-lookup"><span data-stu-id="b7127-137">Commit the transaction in first thread.</span></span>  
  
-   <span data-ttu-id="b7127-138">No segundo thread, obter o preço do product(ProductId=1) e armazenamento na variável.</span><span class="sxs-lookup"><span data-stu-id="b7127-138">In second thread, get the Price of product(ProductId=1) and store in the variable.</span></span>  
  
-   <span data-ttu-id="b7127-139">No thread de segundo, atualize o preço de product(ProductId=2) com o preço de product(ProductId=1).</span><span class="sxs-lookup"><span data-stu-id="b7127-139">In second thread, update the Price of product(ProductId=2) with the price of product(ProductId=1).</span></span>  
  
-   <span data-ttu-id="b7127-140">Confirme a transação no segundo thread.</span><span class="sxs-lookup"><span data-stu-id="b7127-140">Commit the transaction in second thread.</span></span>  
  
 <span data-ttu-id="b7127-141">Agora, os valores do preço (ProductId = 1 e ProductId = 2) são o mesmo como o preço de Product(ProductId=2) original.</span><span class="sxs-lookup"><span data-stu-id="b7127-141">Now the values of the Price(ProductId=1 and ProductId=2) are as same as the original Price of Product(ProductId=2).</span></span>  
  
 <span data-ttu-id="b7127-142">Para a transação de instantâneo, threads opera na seguinte ordem:</span><span class="sxs-lookup"><span data-stu-id="b7127-142">For the Snapshot transaction, threads will operate in the following order:</span></span>  
  
-   <span data-ttu-id="b7127-143">No primeiro segmento, obter o preço de armazenamento e de product(ProductId=2) na variável;</span><span class="sxs-lookup"><span data-stu-id="b7127-143">In first thread, get the Price of product(ProductId=2) and store in the variable;</span></span>  
  
-   <span data-ttu-id="b7127-144">No primeiro segmento, atualize o preço de product(ProductId=1) com o preço de product(ProductId=2).</span><span class="sxs-lookup"><span data-stu-id="b7127-144">In first thread, update the Price of product(ProductId=1) with the price of product(ProductId=2).</span></span>  
  
-   <span data-ttu-id="b7127-145">No thread de segundo, obtém o preço de product(ProductId=1) do instantâneo e armazena na variável.</span><span class="sxs-lookup"><span data-stu-id="b7127-145">In second thread, get the Price of product(ProductId=1) from the snapshot and store in the variable.</span></span>  
  
-   <span data-ttu-id="b7127-146">No thread de segundo, atualize o preço de product(ProductId=2) com o preço de product(ProductId=1).</span><span class="sxs-lookup"><span data-stu-id="b7127-146">In second thread, update the Price of product(ProductId=2) with the price of product(ProductId=1).</span></span>  
  
-   <span data-ttu-id="b7127-147">Confirme a transação no segundo thread.</span><span class="sxs-lookup"><span data-stu-id="b7127-147">Commit the transaction in second thread.</span></span>  
  
-   <span data-ttu-id="b7127-148">Confirme a transação no primeiro thread.</span><span class="sxs-lookup"><span data-stu-id="b7127-148">Commit the transaction in first thread.</span></span>  
  
 <span data-ttu-id="b7127-149">Agora o preço de produtos do exchange (ProductId = 1 e ProductId = 2).</span><span class="sxs-lookup"><span data-stu-id="b7127-149">Now exchange the Price of products(ProductId=1 and ProductId=2).</span></span>  
  
 <span data-ttu-id="b7127-150">A classe DirtyReadThreads demonstra se a transação específica permite que o comportamento de leitura suja.</span><span class="sxs-lookup"><span data-stu-id="b7127-150">The DirtyReadThreads class demonstrates if the specific transaction allows the Dirty Read behavior.</span></span> <span data-ttu-id="b7127-151">Se a transação permite que o comportamento, os threads funcionará na seguinte ordem:</span><span class="sxs-lookup"><span data-stu-id="b7127-151">If the transaction allows the behavior, the threads will operate in the following order:</span></span>  
  
-   <span data-ttu-id="b7127-152">No primeiro segmento, iniciar uma transação e adicione a quantidade value(ProductId=1).</span><span class="sxs-lookup"><span data-stu-id="b7127-152">In first thread, begin a transaction and add the Quantity value(ProductId=1).</span></span>  
  
-   <span data-ttu-id="b7127-153">No thread de segundo, ler o valor de quantidade e adicione o valor novamente.</span><span class="sxs-lookup"><span data-stu-id="b7127-153">In the second thread, read the Quantity value and add the value again.</span></span>  
  
-   <span data-ttu-id="b7127-154">Confirme a transação no segundo thread.</span><span class="sxs-lookup"><span data-stu-id="b7127-154">Commit the transaction in second thread.</span></span>  
  
-   <span data-ttu-id="b7127-155">Reverta a transação no primeiro segmento.</span><span class="sxs-lookup"><span data-stu-id="b7127-155">Roll back the transaction in first thread.</span></span>  
  
 <span data-ttu-id="b7127-156">Se a transação permite que o comportamento, o valor de quantidade será adicionado duas vezes.</span><span class="sxs-lookup"><span data-stu-id="b7127-156">If the transaction allows the behavior, the Quantity value will be added twice.</span></span>  
  
 <span data-ttu-id="b7127-157">Projetos c# e Visual Basic com este exemplo de código podem ser encontrados em [exemplos de código do desenvolvedor](https://code.msdn.microsoft.com/site/search?query=How%20to%20use%20IsolationLevel%20Enumeration%20in%20DbTransaction&f%5B0%5D.Value=How%20to%20use%20IsolationLevel%20Enumeration%20in%20DbTransaction&f%5B0%5D.Type=SearchText&ac=4).</span><span class="sxs-lookup"><span data-stu-id="b7127-157">C# and Visual Basic projects with this code sample can be found on [Developer Code Samples](https://code.msdn.microsoft.com/site/search?query=How%20to%20use%20IsolationLevel%20Enumeration%20in%20DbTransaction&f%5B0%5D.Value=How%20to%20use%20IsolationLevel%20Enumeration%20in%20DbTransaction&f%5B0%5D.Type=SearchText&ac=4).</span></span>  
  
 [!code-csharp[system_data_IsolationLevel#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/system_data_isolationlevel/cs/source.cs#1)]
 [!code-vb[system_data_IsolationLevel#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/system_data_isolationlevel/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Chaos">
      <MemberSignature Language="C#" Value="Chaos" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.IsolationLevel Chaos = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Data.IsolationLevel.Chaos" />
      <MemberSignature Language="VB.NET" Value="Chaos" />
      <MemberSignature Language="C++ CLI" Value="Chaos" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="b7127-158">As alterações pendentes de transações com maior isolamento não podem ser substituídas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7127-158">The pending changes from more highly isolated transactions cannot be overwritten.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ReadCommitted">
      <MemberSignature Language="C#" Value="ReadCommitted" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.IsolationLevel ReadCommitted = int32(4096)" />
      <MemberSignature Language="DocId" Value="F:System.Data.IsolationLevel.ReadCommitted" />
      <MemberSignature Language="VB.NET" Value="ReadCommitted" />
      <MemberSignature Language="C++ CLI" Value="ReadCommitted" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <MemberValue>4096</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="b7127-159">Bloqueios compartilhados são mantidos durante a leitura dos dados para impedir leituras sujas, mas os dados podem ser alterados antes do término da transação, resultando em leituras não repetíveis ou em dados fantasmas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7127-159">Shared locks are held while the data is being read to avoid dirty reads, but the data can be changed before the end of the transaction, resulting in non-repeatable reads or phantom data.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ReadUncommitted">
      <MemberSignature Language="C#" Value="ReadUncommitted" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.IsolationLevel ReadUncommitted = int32(256)" />
      <MemberSignature Language="DocId" Value="F:System.Data.IsolationLevel.ReadUncommitted" />
      <MemberSignature Language="VB.NET" Value="ReadUncommitted" />
      <MemberSignature Language="C++ CLI" Value="ReadUncommitted" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <MemberValue>256</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="b7127-160">Uma leitura suja é possível, o que significa que nenhum bloqueio compartilhado é emitido e nenhum bloqueio exclusivo é respeitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7127-160">A dirty read is possible, meaning that no shared locks are issued and no exclusive locks are honored.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="RepeatableRead">
      <MemberSignature Language="C#" Value="RepeatableRead" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.IsolationLevel RepeatableRead = int32(65536)" />
      <MemberSignature Language="DocId" Value="F:System.Data.IsolationLevel.RepeatableRead" />
      <MemberSignature Language="VB.NET" Value="RepeatableRead" />
      <MemberSignature Language="C++ CLI" Value="RepeatableRead" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <MemberValue>65536</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="b7127-161">Os bloqueios são colocados em todos os dados usados em uma consulta, impedindo que outros usuários atualizem os dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7127-161">Locks are placed on all data that is used in a query, preventing other users from updating the data.</span>
          </span>
          <span data-ttu-id="b7127-162">Evita leituras não repetíveis, mas linhas fantasma ainda são possíveis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7127-162">Prevents non-repeatable reads but phantom rows are still possible.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Serializable">
      <MemberSignature Language="C#" Value="Serializable" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.IsolationLevel Serializable = int32(1048576)" />
      <MemberSignature Language="DocId" Value="F:System.Data.IsolationLevel.Serializable" />
      <MemberSignature Language="VB.NET" Value="Serializable" />
      <MemberSignature Language="C++ CLI" Value="Serializable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <MemberValue>1048576</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="b7127-163">Um bloqueio de intervalos é colocado no <see cref="T:System.Data.DataSet" />, impedindo que outros usuários atualizem ou insiram linhas no conjunto de dados até que a transação seja concluída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7127-163">A range lock is placed on the <see cref="T:System.Data.DataSet" />, preventing other users from updating or inserting rows into the dataset until the transaction is complete.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Snapshot">
      <MemberSignature Language="C#" Value="Snapshot" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.IsolationLevel Snapshot = int32(16777216)" />
      <MemberSignature Language="DocId" Value="F:System.Data.IsolationLevel.Snapshot" />
      <MemberSignature Language="VB.NET" Value="Snapshot" />
      <MemberSignature Language="C++ CLI" Value="Snapshot" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <MemberValue>16777216</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="b7127-164">Reduz o bloqueio armazenando uma versão dos dados que um aplicativo pode ler enquanto outro está modificando os mesmos dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7127-164">Reduces blocking by storing a version of data that one application can read while another is modifying the same data.</span>
          </span>
          <span data-ttu-id="b7127-165">Indica que em uma transação não é possível ver as alterações feitas em outras transações, mesmo que a consulta seja repetida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7127-165">Indicates that from one transaction you cannot see changes made in other transactions, even if you requery.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Unspecified">
      <MemberSignature Language="C#" Value="Unspecified" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.IsolationLevel Unspecified = int32(-1)" />
      <MemberSignature Language="DocId" Value="F:System.Data.IsolationLevel.Unspecified" />
      <MemberSignature Language="VB.NET" Value="Unspecified" />
      <MemberSignature Language="C++ CLI" Value="Unspecified" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="b7127-166">Um nível de isolamento diferente daquele especificado está sendo usado, mas não é possível determinar o nível.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7127-166">A different isolation level than the one specified is being used, but the level cannot be determined.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7127-167">Ao usar <xref:System.Data.Odbc.OdbcTransaction>, se você não definir <xref:System.Data.IsolationLevel> ou definir <xref:System.Data.IsolationLevel> para `Unspecified`, executa a transação de acordo com o nível de isolamento que é determinado pelo driver que está sendo usado.</span><span class="sxs-lookup"><span data-stu-id="b7127-167">When using <xref:System.Data.Odbc.OdbcTransaction>, if you do not set <xref:System.Data.IsolationLevel> or you set <xref:System.Data.IsolationLevel> to `Unspecified`, the transaction executes according to the isolation level that is determined by the driver that is being used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>