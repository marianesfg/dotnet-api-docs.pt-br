<Type Name="IsolationLevel" FullName="System.Data.IsolationLevel">
  <Metadata><Meta Name="ms.openlocfilehash" Value="002b53aa0e59ff3b4a6ec0dc2ab31502cff9e3f0" /><Meta Name="ms.sourcegitcommit" Value="9a6da88bd5455e8274257ca7ad259b42f1de114f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="05/22/2019" /><Meta Name="ms.locfileid" Value="66006772" /></Metadata><TypeSignature Language="C#" Value="public enum IsolationLevel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed IsolationLevel extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Data.IsolationLevel" />
  <TypeSignature Language="VB.NET" Value="Public Enum IsolationLevel" />
  <TypeSignature Language="C++ CLI" Value="public enum class IsolationLevel" />
  <TypeSignature Language="F#" Value="type IsolationLevel = " />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="51f62-101">Especifica o comportamento de bloqueio de transação para a conexão.</span><span class="sxs-lookup"><span data-stu-id="51f62-101">Specifies the transaction locking behavior for the connection.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="51f62-102">O `IsolationLevel` valores são usados por um provedor de dados .NET quando a execução de uma transação.</span><span class="sxs-lookup"><span data-stu-id="51f62-102">The `IsolationLevel` values are used by a .NET data provider when performing a transaction.</span></span>

<span data-ttu-id="51f62-103">O `IsolationLevel` permanece em vigor até que explicitamente alterados, mas ele pode ser alterado a qualquer momento.</span><span class="sxs-lookup"><span data-stu-id="51f62-103">The `IsolationLevel` remains in effect until explicitly changed, but it can be changed at any time.</span></span> <span data-ttu-id="51f62-104">O novo valor é usado em tempo de execução, não o tempo de análise.</span><span class="sxs-lookup"><span data-stu-id="51f62-104">The new value is used at execution time, not parse time.</span></span> <span data-ttu-id="51f62-105">Se alterado durante uma transação, o comportamento esperado do servidor é aplicar o novo nível de bloqueio para todas as instruções restantes.</span><span class="sxs-lookup"><span data-stu-id="51f62-105">If changed during a transaction, the expected behavior of the server is to apply the new locking level to all statements remaining.</span></span>  
  
<span data-ttu-id="51f62-106">Ao usar <xref:System.Data.Odbc.OdbcTransaction>, se você não definir <xref:System.Data.Odbc.OdbcTransaction.IsolationLevel?displayProperty=nameWithType> ou defina-a como `Unspecified`, a transação será executado de acordo com o nível de isolamento, determinado pelo driver em uso.</span><span class="sxs-lookup"><span data-stu-id="51f62-106">When using <xref:System.Data.Odbc.OdbcTransaction>, if you do not set <xref:System.Data.Odbc.OdbcTransaction.IsolationLevel?displayProperty=nameWithType> or you set it to `Unspecified`, the transaction executes according to the isolation level determined by the driver in use.</span></span>  

## Examples  
 <span data-ttu-id="51f62-107">Este aplicativo demonstra como usar <xref:System.Data.IsolationLevel> em <xref:System.Data.Common.DbTransaction>.</span><span class="sxs-lookup"><span data-stu-id="51f62-107">This application demonstrates how to use <xref:System.Data.IsolationLevel> in <xref:System.Data.Common.DbTransaction>.</span></span> <span data-ttu-id="51f62-108">O exemplo demonstra que um dos seguintes comportamentos são permitidos em diferentes níveis de isolamento:</span><span class="sxs-lookup"><span data-stu-id="51f62-108">The sample will demonstrate which of the following behaviors are allowed in the different isolation levels:</span></span>  
  
-   <span data-ttu-id="51f62-109">Leituras sujas.</span><span class="sxs-lookup"><span data-stu-id="51f62-109">Dirty reads.</span></span>  
  
-   <span data-ttu-id="51f62-110">Leituras não repetíveis.</span><span class="sxs-lookup"><span data-stu-id="51f62-110">Non-repeatable reads.</span></span>  
  
-   <span data-ttu-id="51f62-111">Fantasmas.</span><span class="sxs-lookup"><span data-stu-id="51f62-111">Phantoms.</span></span>  
  
 <span data-ttu-id="51f62-112">Este aplicativo será executado nos seguintes níveis de isolamento:</span><span class="sxs-lookup"><span data-stu-id="51f62-112">This application will execute in the following isolation levels:</span></span>  
  
-   <span data-ttu-id="51f62-113">ReadUncommitted</span><span class="sxs-lookup"><span data-stu-id="51f62-113">ReadUncommitted</span></span>  
  
-   <span data-ttu-id="51f62-114">ReadCommitted</span><span class="sxs-lookup"><span data-stu-id="51f62-114">ReadCommitted</span></span>  
  
-   <span data-ttu-id="51f62-115">RepeatableRead</span><span class="sxs-lookup"><span data-stu-id="51f62-115">RepeatableRead</span></span>  
  
-   <span data-ttu-id="51f62-116">Serializável</span><span class="sxs-lookup"><span data-stu-id="51f62-116">Serializable</span></span>  
  
-   <span data-ttu-id="51f62-117">Instantâneo</span><span class="sxs-lookup"><span data-stu-id="51f62-117">Snapshot</span></span>  
  
 <span data-ttu-id="51f62-118">A classe PhantomReadThreads demonstra se a transação específica permite que o comportamento de leitura fantasma.</span><span class="sxs-lookup"><span data-stu-id="51f62-118">The PhantomReadThreads class demonstrates if the specific transaction allows the Phantom Read behavior.</span></span> <span data-ttu-id="51f62-119">Se a transação permite que o comportamento, os threads operará na seguinte ordem:</span><span class="sxs-lookup"><span data-stu-id="51f62-119">If the transaction allows the behavior, the threads will operate in the following order:</span></span>  
  
-   <span data-ttu-id="51f62-120">No primeiro thread, selecione o products(All).</span><span class="sxs-lookup"><span data-stu-id="51f62-120">In first thread, select the products(All).</span></span>  
  
-   <span data-ttu-id="51f62-121">No segundo thread, inserir um novo produto.</span><span class="sxs-lookup"><span data-stu-id="51f62-121">In the second thread, insert a new product.</span></span>  
  
-   <span data-ttu-id="51f62-122">Confirme a transação no segundo thread.</span><span class="sxs-lookup"><span data-stu-id="51f62-122">Commit the transaction in second thread.</span></span>  
  
-   <span data-ttu-id="51f62-123">Selecione os produtos novamente.</span><span class="sxs-lookup"><span data-stu-id="51f62-123">Select the products again.</span></span>  
  
-   <span data-ttu-id="51f62-124">Confirme a transação no primeiro thread.</span><span class="sxs-lookup"><span data-stu-id="51f62-124">Commit the transaction in first thread.</span></span>  
  
 <span data-ttu-id="51f62-125">Se a transação permite que o comportamento, as duas operações Select obterá os resultados diferentes.</span><span class="sxs-lookup"><span data-stu-id="51f62-125">If the transaction allows the behavior, the two Select operations will get the different results.</span></span>  
  
 <span data-ttu-id="51f62-126">A classe NonrepeatableReadThreads demonstra se a transação específica permite que o comportamento de leitura não repetível.</span><span class="sxs-lookup"><span data-stu-id="51f62-126">The NonrepeatableReadThreads class demonstrates if the specific transaction allows the Nonrepeatable Read behavior.</span></span> <span data-ttu-id="51f62-127">Se a transação permite que o comportamento, os threads operará na seguinte ordem:</span><span class="sxs-lookup"><span data-stu-id="51f62-127">If the transaction allows the behavior, the threads will operate in the following order:</span></span>  
  
-   <span data-ttu-id="51f62-128">No primeiro thread, selecione o product(ProductId=1).</span><span class="sxs-lookup"><span data-stu-id="51f62-128">In first thread, select the product(ProductId=1).</span></span>  
  
-   <span data-ttu-id="51f62-129">No segundo thread, atualize a quantidade value(ProductId=1).</span><span class="sxs-lookup"><span data-stu-id="51f62-129">In the second thread, update the Quantity value(ProductId=1).</span></span>  
  
-   <span data-ttu-id="51f62-130">Confirme a transação no segundo thread.</span><span class="sxs-lookup"><span data-stu-id="51f62-130">Commit the transaction in second thread.</span></span>  
  
-   <span data-ttu-id="51f62-131">Selecione o produto novamente.</span><span class="sxs-lookup"><span data-stu-id="51f62-131">Select the product again.</span></span>  
  
-   <span data-ttu-id="51f62-132">Confirme a transação no primeiro thread.</span><span class="sxs-lookup"><span data-stu-id="51f62-132">Commit the transaction in first thread.</span></span>  
  
 <span data-ttu-id="51f62-133">Se a transação permite que o comportamento, as duas operações Select obterá os resultados diferentes.</span><span class="sxs-lookup"><span data-stu-id="51f62-133">If the transaction allows the behavior, the two Select operations will get the different results.</span></span>  
  
 <span data-ttu-id="51f62-134">A classe ExchangeValuesThreads demonstra a diferença entre as transações Serializable e Snapshot.</span><span class="sxs-lookup"><span data-stu-id="51f62-134">The ExchangeValuesThreads class demonstrates the difference between the Serializable and Snapshot transaction.</span></span> <span data-ttu-id="51f62-135">Para a transação serializável, threads operará na seguinte ordem:</span><span class="sxs-lookup"><span data-stu-id="51f62-135">For the Serializable transaction, threads will operate in the following order:</span></span>  
  
-   <span data-ttu-id="51f62-136">No primeiro thread, obter o preço do product(ProductId=2) e armazenamento na variável.</span><span class="sxs-lookup"><span data-stu-id="51f62-136">In first thread, get the Price of product(ProductId=2) and store in the variable.</span></span>  
  
-   <span data-ttu-id="51f62-137">No primeiro thread, atualize o preço do product(ProductId=1) com o preço de product(ProductId=2).</span><span class="sxs-lookup"><span data-stu-id="51f62-137">In first thread, update the Price of product(ProductId=1) with the price of product(ProductId=2).</span></span>  
  
-   <span data-ttu-id="51f62-138">Confirme a transação no primeiro thread.</span><span class="sxs-lookup"><span data-stu-id="51f62-138">Commit the transaction in first thread.</span></span>  
  
-   <span data-ttu-id="51f62-139">No segundo thread, obter o preço do product(ProductId=1) e armazenamento na variável.</span><span class="sxs-lookup"><span data-stu-id="51f62-139">In second thread, get the Price of product(ProductId=1) and store in the variable.</span></span>  
  
-   <span data-ttu-id="51f62-140">No segundo thread, atualize o preço do product(ProductId=2) com o preço de product(ProductId=1).</span><span class="sxs-lookup"><span data-stu-id="51f62-140">In second thread, update the Price of product(ProductId=2) with the price of product(ProductId=1).</span></span>  
  
-   <span data-ttu-id="51f62-141">Confirme a transação no segundo thread.</span><span class="sxs-lookup"><span data-stu-id="51f62-141">Commit the transaction in second thread.</span></span>  
  
 <span data-ttu-id="51f62-142">Agora, os valores do preço (ProductId = 1 e ProductId = 2) são os mesmos o preço de Product(ProductId=2) original.</span><span class="sxs-lookup"><span data-stu-id="51f62-142">Now the values of the Price(ProductId=1 and ProductId=2) are as same as the original Price of Product(ProductId=2).</span></span>  
  
 <span data-ttu-id="51f62-143">Para a transação de instantâneo, threads operará na seguinte ordem:</span><span class="sxs-lookup"><span data-stu-id="51f62-143">For the Snapshot transaction, threads will operate in the following order:</span></span>  
  
-   <span data-ttu-id="51f62-144">No primeiro thread, obter o preço do product(ProductId=2) e armazenamento na variável;</span><span class="sxs-lookup"><span data-stu-id="51f62-144">In first thread, get the Price of product(ProductId=2) and store in the variable;</span></span>  
  
-   <span data-ttu-id="51f62-145">No primeiro thread, atualize o preço do product(ProductId=1) com o preço de product(ProductId=2).</span><span class="sxs-lookup"><span data-stu-id="51f62-145">In first thread, update the Price of product(ProductId=1) with the price of product(ProductId=2).</span></span>  
  
-   <span data-ttu-id="51f62-146">No segundo thread, obtenha o preço de product(ProductId=1) do instantâneo e armazene na variável.</span><span class="sxs-lookup"><span data-stu-id="51f62-146">In second thread, get the Price of product(ProductId=1) from the snapshot and store in the variable.</span></span>  
  
-   <span data-ttu-id="51f62-147">No segundo thread, atualize o preço do product(ProductId=2) com o preço de product(ProductId=1).</span><span class="sxs-lookup"><span data-stu-id="51f62-147">In second thread, update the Price of product(ProductId=2) with the price of product(ProductId=1).</span></span>  
  
-   <span data-ttu-id="51f62-148">Confirme a transação no segundo thread.</span><span class="sxs-lookup"><span data-stu-id="51f62-148">Commit the transaction in second thread.</span></span>  
  
-   <span data-ttu-id="51f62-149">Confirme a transação no primeiro thread.</span><span class="sxs-lookup"><span data-stu-id="51f62-149">Commit the transaction in first thread.</span></span>  
  
 <span data-ttu-id="51f62-150">Agora o preço de produtos do exchange (ProductId = 1 e ProductId = 2).</span><span class="sxs-lookup"><span data-stu-id="51f62-150">Now exchange the Price of products(ProductId=1 and ProductId=2).</span></span>  
  
 <span data-ttu-id="51f62-151">A classe DirtyReadThreads demonstra se a transação específica permite que o comportamento de leitura suja.</span><span class="sxs-lookup"><span data-stu-id="51f62-151">The DirtyReadThreads class demonstrates if the specific transaction allows the Dirty Read behavior.</span></span> <span data-ttu-id="51f62-152">Se a transação permite que o comportamento, os threads operará na seguinte ordem:</span><span class="sxs-lookup"><span data-stu-id="51f62-152">If the transaction allows the behavior, the threads will operate in the following order:</span></span>  
  
-   <span data-ttu-id="51f62-153">No primeiro thread, iniciar uma transação e adicione o value(ProductId=1) quantidade.</span><span class="sxs-lookup"><span data-stu-id="51f62-153">In first thread, begin a transaction and add the Quantity value(ProductId=1).</span></span>  
  
-   <span data-ttu-id="51f62-154">No segundo thread, ler o valor de quantidade e adicione o valor novamente.</span><span class="sxs-lookup"><span data-stu-id="51f62-154">In the second thread, read the Quantity value and add the value again.</span></span>  
  
-   <span data-ttu-id="51f62-155">Confirme a transação no segundo thread.</span><span class="sxs-lookup"><span data-stu-id="51f62-155">Commit the transaction in second thread.</span></span>  
  
-   <span data-ttu-id="51f62-156">Reverta a transação no primeiro thread.</span><span class="sxs-lookup"><span data-stu-id="51f62-156">Roll back the transaction in first thread.</span></span>  
  
 <span data-ttu-id="51f62-157">Se a transação permite que o comportamento, o valor de quantidade será adicionado duas vezes.</span><span class="sxs-lookup"><span data-stu-id="51f62-157">If the transaction allows the behavior, the Quantity value will be added twice.</span></span>  
  
 <span data-ttu-id="51f62-158">Projetos c# e Visual Basic com este exemplo de código podem ser encontrados no [exemplos de código do desenvolvedor](https://code.msdn.microsoft.com/site/search?query=How%20to%20use%20IsolationLevel%20Enumeration%20in%20DbTransaction&f%5B0%5D.Value=How%20to%20use%20IsolationLevel%20Enumeration%20in%20DbTransaction&f%5B0%5D.Type=SearchText&ac=4).</span><span class="sxs-lookup"><span data-stu-id="51f62-158">C# and Visual Basic projects with this code sample can be found on [Developer Code Samples](https://code.msdn.microsoft.com/site/search?query=How%20to%20use%20IsolationLevel%20Enumeration%20in%20DbTransaction&f%5B0%5D.Value=How%20to%20use%20IsolationLevel%20Enumeration%20in%20DbTransaction&f%5B0%5D.Type=SearchText&ac=4).</span></span>  
  
 [!code-csharp[system_data_IsolationLevel#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/system_data_isolationlevel/cs/source.cs#1)]
 [!code-vb[system_data_IsolationLevel#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/system_data_isolationlevel/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Chaos">
      <MemberSignature Language="C#" Value="Chaos" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.IsolationLevel Chaos = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Data.IsolationLevel.Chaos" />
      <MemberSignature Language="VB.NET" Value="Chaos" />
      <MemberSignature Language="C++ CLI" Value="Chaos" />
      <MemberSignature Language="F#" Value="Chaos = 16" Usage="System.Data.IsolationLevel.Chaos" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary><span data-ttu-id="51f62-159">As alterações pendentes de transações com maior isolamento não podem ser substituídas.</span><span class="sxs-lookup"><span data-stu-id="51f62-159">The pending changes from more highly isolated transactions cannot be overwritten.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ReadCommitted">
      <MemberSignature Language="C#" Value="ReadCommitted" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.IsolationLevel ReadCommitted = int32(4096)" />
      <MemberSignature Language="DocId" Value="F:System.Data.IsolationLevel.ReadCommitted" />
      <MemberSignature Language="VB.NET" Value="ReadCommitted" />
      <MemberSignature Language="C++ CLI" Value="ReadCommitted" />
      <MemberSignature Language="F#" Value="ReadCommitted = 4096" Usage="System.Data.IsolationLevel.ReadCommitted" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <MemberValue>4096</MemberValue>
      <Docs>
        <summary><span data-ttu-id="51f62-160">Bloqueios compartilhados são mantidos durante a leitura dos dados para impedir leituras sujas, mas os dados podem ser alterados antes do término da transação, resultando em leituras não repetíveis ou em dados fantasmas.</span><span class="sxs-lookup"><span data-stu-id="51f62-160">Shared locks are held while the data is being read to avoid dirty reads, but the data can be changed before the end of the transaction, resulting in non-repeatable reads or phantom data.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ReadUncommitted">
      <MemberSignature Language="C#" Value="ReadUncommitted" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.IsolationLevel ReadUncommitted = int32(256)" />
      <MemberSignature Language="DocId" Value="F:System.Data.IsolationLevel.ReadUncommitted" />
      <MemberSignature Language="VB.NET" Value="ReadUncommitted" />
      <MemberSignature Language="C++ CLI" Value="ReadUncommitted" />
      <MemberSignature Language="F#" Value="ReadUncommitted = 256" Usage="System.Data.IsolationLevel.ReadUncommitted" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <MemberValue>256</MemberValue>
      <Docs>
        <summary><span data-ttu-id="51f62-161">Uma leitura suja é possível, o que significa que nenhum bloqueio compartilhado é emitido e nenhum bloqueio exclusivo é respeitado.</span><span class="sxs-lookup"><span data-stu-id="51f62-161">A dirty read is possible, meaning that no shared locks are issued and no exclusive locks are honored.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="RepeatableRead">
      <MemberSignature Language="C#" Value="RepeatableRead" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.IsolationLevel RepeatableRead = int32(65536)" />
      <MemberSignature Language="DocId" Value="F:System.Data.IsolationLevel.RepeatableRead" />
      <MemberSignature Language="VB.NET" Value="RepeatableRead" />
      <MemberSignature Language="C++ CLI" Value="RepeatableRead" />
      <MemberSignature Language="F#" Value="RepeatableRead = 65536" Usage="System.Data.IsolationLevel.RepeatableRead" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <MemberValue>65536</MemberValue>
      <Docs>
        <summary><span data-ttu-id="51f62-162">Os bloqueios são colocados em todos os dados usados em uma consulta, impedindo que outros usuários atualizem os dados.</span><span class="sxs-lookup"><span data-stu-id="51f62-162">Locks are placed on all data that is used in a query, preventing other users from updating the data.</span></span> <span data-ttu-id="51f62-163">Evita leituras não repetíveis, mas linhas fantasma ainda são possíveis.</span><span class="sxs-lookup"><span data-stu-id="51f62-163">Prevents non-repeatable reads but phantom rows are still possible.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Serializable">
      <MemberSignature Language="C#" Value="Serializable" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.IsolationLevel Serializable = int32(1048576)" />
      <MemberSignature Language="DocId" Value="F:System.Data.IsolationLevel.Serializable" />
      <MemberSignature Language="VB.NET" Value="Serializable" />
      <MemberSignature Language="C++ CLI" Value="Serializable" />
      <MemberSignature Language="F#" Value="Serializable = 1048576" Usage="System.Data.IsolationLevel.Serializable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <MemberValue>1048576</MemberValue>
      <Docs>
        <summary><span data-ttu-id="51f62-164">Um bloqueio de intervalos é colocado no <see cref="T:System.Data.DataSet" />, impedindo que outros usuários atualizem ou insiram linhas no conjunto de dados até que a transação seja concluída.</span><span class="sxs-lookup"><span data-stu-id="51f62-164">A range lock is placed on the <see cref="T:System.Data.DataSet" />, preventing other users from updating or inserting rows into the dataset until the transaction is complete.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Snapshot">
      <MemberSignature Language="C#" Value="Snapshot" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.IsolationLevel Snapshot = int32(16777216)" />
      <MemberSignature Language="DocId" Value="F:System.Data.IsolationLevel.Snapshot" />
      <MemberSignature Language="VB.NET" Value="Snapshot" />
      <MemberSignature Language="C++ CLI" Value="Snapshot" />
      <MemberSignature Language="F#" Value="Snapshot = 16777216" Usage="System.Data.IsolationLevel.Snapshot" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <MemberValue>16777216</MemberValue>
      <Docs>
        <summary><span data-ttu-id="51f62-165">Reduz o bloqueio armazenando uma versão dos dados que um aplicativo pode ler enquanto outro está modificando os mesmos dados.</span><span class="sxs-lookup"><span data-stu-id="51f62-165">Reduces blocking by storing a version of data that one application can read while another is modifying the same data.</span></span> <span data-ttu-id="51f62-166">Indica que em uma transação não é possível ver as alterações feitas em outras transações, mesmo que a consulta seja repetida.</span><span class="sxs-lookup"><span data-stu-id="51f62-166">Indicates that from one transaction you cannot see changes made in other transactions, even if you requery.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Unspecified">
      <MemberSignature Language="C#" Value="Unspecified" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.IsolationLevel Unspecified = int32(-1)" />
      <MemberSignature Language="DocId" Value="F:System.Data.IsolationLevel.Unspecified" />
      <MemberSignature Language="VB.NET" Value="Unspecified" />
      <MemberSignature Language="C++ CLI" Value="Unspecified" />
      <MemberSignature Language="F#" Value="Unspecified = -1" Usage="System.Data.IsolationLevel.Unspecified" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="51f62-167">Um nível de isolamento diferente daquele especificado está sendo usado, mas não é possível determinar o nível.</span><span class="sxs-lookup"><span data-stu-id="51f62-167">A different isolation level than the one specified is being used, but the level cannot be determined.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
