<Type Name="DataColumn" FullName="System.Data.DataColumn">
  <TypeSignature Language="C#" Value="public class DataColumn : System.ComponentModel.MarshalByValueComponent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataColumn extends System.ComponentModel.MarshalByValueComponent" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataColumn" />
  <TypeSignature Language="VB.NET" Value="Public Class DataColumn&#xA;Inherits MarshalByValueComponent" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataColumn : System::ComponentModel::MarshalByValueComponent" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.MarshalByValueComponent</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("ColumnName")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignTimeVisible(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataColumnEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e1294-101">Representa o esquema de uma coluna em um <see cref="T:System.Data.DataTable" />.</span><span class="sxs-lookup"><span data-stu-id="e1294-101">Represents the schema of a column in a <see cref="T:System.Data.DataTable" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1294-102">O <xref:System.Data.DataColumn> é o principal bloco de construção para criar o esquema de um <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="e1294-102">The <xref:System.Data.DataColumn> is the fundamental building block for creating the schema of a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="e1294-103">Crie o esquema adicionando um ou mais <xref:System.Data.DataColumn> objetos para o <xref:System.Data.DataColumnCollection>.</span><span class="sxs-lookup"><span data-stu-id="e1294-103">You build the schema by adding one or more <xref:System.Data.DataColumn> objects to the <xref:System.Data.DataColumnCollection>.</span></span> <span data-ttu-id="e1294-104">Para obter mais informações, consulte [adicionando colunas a uma DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-columns-to-a-datatable.md).</span><span class="sxs-lookup"><span data-stu-id="e1294-104">For more information, see [Adding Columns to a DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-columns-to-a-datatable.md).</span></span>  
  
 <span data-ttu-id="e1294-105">Cada <xref:System.Data.DataColumn> tem um <xref:System.Data.DataColumn.DataType%2A> propriedade que determina o tipo de dados a <xref:System.Data.DataColumn> contém.</span><span class="sxs-lookup"><span data-stu-id="e1294-105">Each <xref:System.Data.DataColumn> has a <xref:System.Data.DataColumn.DataType%2A> property that determines the kind of data the <xref:System.Data.DataColumn> contains.</span></span> <span data-ttu-id="e1294-106">Por exemplo, você pode restringir o tipo de dados inteiros, cadeias de caracteres ou decimais.</span><span class="sxs-lookup"><span data-stu-id="e1294-106">For example, you can restrict the data type to integers, or strings, or decimals.</span></span> <span data-ttu-id="e1294-107">Porque os dados contidos pelo <xref:System.Data.DataTable> normalmente é mesclado à fonte de dados original, você deve corresponder os tipos de dados da fonte de dados.</span><span class="sxs-lookup"><span data-stu-id="e1294-107">Because data that is contained by the <xref:System.Data.DataTable> is typically merged back into its original data source, you must match the data types to those in the data source.</span></span> <span data-ttu-id="e1294-108">Para obter mais informações, consulte [mapeamentos de tipo de dados no ADO.NET](~/docs/framework/data/adonet/data-type-mappings-in-ado-net.md).</span><span class="sxs-lookup"><span data-stu-id="e1294-108">For more information, see [Data Type Mappings in ADO.NET](~/docs/framework/data/adonet/data-type-mappings-in-ado-net.md).</span></span>  
  
 <span data-ttu-id="e1294-109">Propriedades como <xref:System.Data.DataColumn.AllowDBNull%2A>, <xref:System.Data.DataColumn.Unique%2A>, e <xref:System.Data.DataColumn.ReadOnly%2A> colocar restrições sobre a entrada e a atualização de dados, ajudando a garantir a integridade de dados.</span><span class="sxs-lookup"><span data-stu-id="e1294-109">Properties such as <xref:System.Data.DataColumn.AllowDBNull%2A>, <xref:System.Data.DataColumn.Unique%2A>, and <xref:System.Data.DataColumn.ReadOnly%2A> put restrictions on the entry and updating of data, thereby helping to guarantee data integrity.</span></span> <span data-ttu-id="e1294-110">Você também pode usar o <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, e <xref:System.Data.DataColumn.AutoIncrementStep%2A> propriedades para controlar a geração automática de dados.</span><span class="sxs-lookup"><span data-stu-id="e1294-110">You can also use the <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, and <xref:System.Data.DataColumn.AutoIncrementStep%2A> properties to control automatic data generation.</span></span> <span data-ttu-id="e1294-111">Para obter mais informações sobre <xref:System.Data.DataColumn.AutoIncrement%2A> colunas, consulte [criar colunas de incremento automático](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-autoincrement-columns.md).</span><span class="sxs-lookup"><span data-stu-id="e1294-111">For more information about <xref:System.Data.DataColumn.AutoIncrement%2A> columns, see [Creating AutoIncrement Columns](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-autoincrement-columns.md).</span></span> <span data-ttu-id="e1294-112">Para obter mais informações, consulte [definindo chaves primárias](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span><span class="sxs-lookup"><span data-stu-id="e1294-112">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
 <span data-ttu-id="e1294-113">Você também pode garantir que os valores em uma <xref:System.Data.DataColumn> são exclusivos, criando um <xref:System.Data.UniqueConstraint> e adicioná-lo para o <xref:System.Data.ConstraintCollection> do <xref:System.Data.DataTable> ao qual o <xref:System.Data.DataColumn> pertence.</span><span class="sxs-lookup"><span data-stu-id="e1294-113">You can also make sure that values in a <xref:System.Data.DataColumn> are unique by creating a <xref:System.Data.UniqueConstraint> and adding it to the <xref:System.Data.ConstraintCollection> of the <xref:System.Data.DataTable> to which the <xref:System.Data.DataColumn> belongs.</span></span> <span data-ttu-id="e1294-114">Para obter mais informações, consulte [restrições de DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/datatable-constraints.md).</span><span class="sxs-lookup"><span data-stu-id="e1294-114">For more information, see [DataTable Constraints](~/docs/framework/data/adonet/dataset-datatable-dataview/datatable-constraints.md).</span></span>  
  
 <span data-ttu-id="e1294-115">Para criar uma relação entre <xref:System.Data.DataColumn> objetos, criar um <xref:System.Data.DataRelation> de objeto e adicioná-lo para o <xref:System.Data.DataRelationCollection> de um <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="e1294-115">To create a relation between <xref:System.Data.DataColumn> objects, create a <xref:System.Data.DataRelation> object and add it to the <xref:System.Data.DataRelationCollection> of a <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="e1294-116">Você pode usar o <xref:System.Data.DataColumn.Expression%2A> propriedade o <xref:System.Data.DataColumn> de objeto para calcular os valores em uma coluna, ou criar uma coluna de agregação.</span><span class="sxs-lookup"><span data-stu-id="e1294-116">You can use the <xref:System.Data.DataColumn.Expression%2A> property of the <xref:System.Data.DataColumn> object to calculate the values in a column, or create an aggregate column.</span></span> <span data-ttu-id="e1294-117">Para obter mais informações, consulte [criar colunas de expressão](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-expression-columns.md).</span><span class="sxs-lookup"><span data-stu-id="e1294-117">For more information, see [Creating Expression Columns](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-expression-columns.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1294-118">O exemplo a seguir cria um <xref:System.Data.DataTable> com vários <xref:System.Data.DataColumn> objetos.</span><span class="sxs-lookup"><span data-stu-id="e1294-118">The following example creates a <xref:System.Data.DataTable> with several <xref:System.Data.DataColumn> objects.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="e1294-119">Este tipo é seguro para operações de leitura e multithread.</span><span class="sxs-lookup"><span data-stu-id="e1294-119">This type is safe for multithreaded read operations.</span></span> <span data-ttu-id="e1294-120">Você deve sincronizar todas as operações de gravação.</span><span class="sxs-lookup"><span data-stu-id="e1294-120">You must synchronize any write operations.</span></span></threadsafe>
    <altmember cref="M:System.Data.DataColumnCollection.Add(System.Data.DataColumn)" />
    <altmember cref="T:System.Data.DataColumnCollection" />
    <altmember cref="P:System.Data.DataTable.Constraints" />
    <altmember cref="T:System.Data.ConstraintCollection" />
    <altmember cref="T:System.Windows.Forms.DataGrid" />
    <altmember cref="T:System.Data.DataRow" />
    <altmember cref="T:System.Data.DataTable" />
    <altmember cref="T:System.Data.DataSet" />
    <altmember cref="M:System.Data.DataTable.NewRow" />
    <altmember cref="T:System.Data.DataRowCollection" />
    <altmember cref="T:System.Data.UniqueConstraint" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e1294-121">Inicializa uma nova instância da classe <see cref="T:System.Data.DataColumn" />.</span><span class="sxs-lookup"><span data-stu-id="e1294-121">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e1294-122">Inicializa uma nova instância de uma classe <see cref="T:System.Data.DataColumn" /> como uma cadeia de caracteres de tipo.</span><span class="sxs-lookup"><span data-stu-id="e1294-122">Initializes a new instance of a <see cref="T:System.Data.DataColumn" /> class as type string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1294-123">Quando criado, um <xref:System.Data.DataColumn> objeto não possui padrão <xref:System.Data.DataColumn.ColumnName%2A> ou <xref:System.Data.DataColumn.Caption%2A>.</span><span class="sxs-lookup"><span data-stu-id="e1294-123">When created, a <xref:System.Data.DataColumn> object has no default <xref:System.Data.DataColumn.ColumnName%2A> or <xref:System.Data.DataColumn.Caption%2A>.</span></span> <span data-ttu-id="e1294-124">Quando você adiciona-o para um <xref:System.Data.DataColumnCollection>, será gerado um nome padrão ("Coluna1", "Coluna2" e assim por diante) se não tiver sido atribuído um nome para o <xref:System.Data.DataColumn.ColumnName%2A>.</span><span class="sxs-lookup"><span data-stu-id="e1294-124">When you add it to a <xref:System.Data.DataColumnCollection>, a default name ("Column1", "Column2", and so on) will be generated if a name has not been assigned to the <xref:System.Data.DataColumn.ColumnName%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1294-125">O exemplo a seguir cria um novo <xref:System.Data.DataColumn>, define várias propriedades e o adiciona a uma <xref:System.Data.DataColumnCollection> para o <xref:System.Data.DataTable> objeto.</span><span class="sxs-lookup"><span data-stu-id="e1294-125">The following example creates a new <xref:System.Data.DataColumn>, sets various properties, and adds it to a <xref:System.Data.DataColumnCollection> for the <xref:System.Data.DataTable> object.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn (string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (columnName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn(System::String ^ columnName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName"><span data-ttu-id="e1294-126">Uma cadeia de caracteres que representa o nome da coluna a ser criada.</span><span class="sxs-lookup"><span data-stu-id="e1294-126">A string that represents the name of the column to be created.</span></span> <span data-ttu-id="e1294-127">Se for definida como <see langword="null" /> ou uma cadeia de caracteres vazia (""), um nome padrão será especificado quando adicionado à coleção de colunas.</span><span class="sxs-lookup"><span data-stu-id="e1294-127">If set to <see langword="null" /> or an empty string (""), a default name will be specified when added to the columns collection.</span></span></param>
        <summary><span data-ttu-id="e1294-128">Inicializa uma nova instância da classe <see cref="T:System.Data.DataColumn" />, como cadeia de caracteres de tipo, usando o nome de coluna especificado.</span><span class="sxs-lookup"><span data-stu-id="e1294-128">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class, as type string, using the specified column name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1294-129">Por padrão, o nome específico para uma coluna se torna o <xref:System.Data.DataColumn.Caption%2A> o valor da propriedade.</span><span class="sxs-lookup"><span data-stu-id="e1294-129">By default, the name specific to a column becomes the <xref:System.Data.DataColumn.Caption%2A> property value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1294-130">O exemplo a seguir cria um novo <xref:System.Data.DataColumn> com um <xref:System.Data.DataColumn.ColumnName%2A>.</span><span class="sxs-lookup"><span data-stu-id="e1294-130">The following example creates a new <xref:System.Data.DataColumn> with a specified <xref:System.Data.DataColumn.ColumnName%2A>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn (string columnName, Type dataType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string columnName, class System.Type dataType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (columnName As String, dataType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn(System::String ^ columnName, Type ^ dataType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="dataType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="columnName"><span data-ttu-id="e1294-131">Uma cadeia de caracteres que representa o nome da coluna a ser criada.</span><span class="sxs-lookup"><span data-stu-id="e1294-131">A string that represents the name of the column to be created.</span></span> <span data-ttu-id="e1294-132">Se for definida como <see langword="null" /> ou uma cadeia de caracteres vazia (""), um nome padrão será especificado quando adicionado à coleção de colunas.</span><span class="sxs-lookup"><span data-stu-id="e1294-132">If set to <see langword="null" /> or an empty string (""), a default name will be specified when added to the columns collection.</span></span></param>
        <param name="dataType"><span data-ttu-id="e1294-133">Um <see cref="P:System.Data.DataColumn.DataType" /> com suporte.</span><span class="sxs-lookup"><span data-stu-id="e1294-133">A supported <see cref="P:System.Data.DataColumn.DataType" />.</span></span></param>
        <summary><span data-ttu-id="e1294-134">Inicializa uma nova instância da classe <see cref="T:System.Data.DataColumn" /> usando a o nome da coluna e o tipo de dados especificados.</span><span class="sxs-lookup"><span data-stu-id="e1294-134">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class using the specified column name and data type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e1294-135">O exemplo a seguir cria um novo <xref:System.Data.DataColumn> com determinado <xref:System.Data.DataColumn.ColumnName%2A> e <xref:System.Data.DataColumn.DataType%2A>.</span><span class="sxs-lookup"><span data-stu-id="e1294-135">The following example creates a new <xref:System.Data.DataColumn> with a specified <xref:System.Data.DataColumn.ColumnName%2A> and <xref:System.Data.DataColumn.DataType%2A>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e1294-136">Nenhum <paramref name="dataType" /> foi especificado.</span><span class="sxs-lookup"><span data-stu-id="e1294-136">No <paramref name="dataType" /> was specified.</span></span></exception>
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn (string columnName, Type dataType, string expr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string columnName, class System.Type dataType, string expr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (columnName As String, dataType As Type, expr As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn(System::String ^ columnName, Type ^ dataType, System::String ^ expr);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="dataType" Type="System.Type" />
        <Parameter Name="expr" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName"><span data-ttu-id="e1294-137">Uma cadeia de caracteres que representa o nome da coluna a ser criada.</span><span class="sxs-lookup"><span data-stu-id="e1294-137">A string that represents the name of the column to be created.</span></span> <span data-ttu-id="e1294-138">Se for definida como <see langword="null" /> ou uma cadeia de caracteres vazia (""), um nome padrão será especificado quando adicionado à coleção de colunas.</span><span class="sxs-lookup"><span data-stu-id="e1294-138">If set to <see langword="null" /> or an empty string (""), a default name will be specified when added to the columns collection.</span></span></param>
        <param name="dataType"><span data-ttu-id="e1294-139">Um <see cref="P:System.Data.DataColumn.DataType" /> com suporte.</span><span class="sxs-lookup"><span data-stu-id="e1294-139">A supported <see cref="P:System.Data.DataColumn.DataType" />.</span></span></param>
        <param name="expr"><span data-ttu-id="e1294-140">A expressão usada para criar esta coluna.</span><span class="sxs-lookup"><span data-stu-id="e1294-140">The expression used to create this column.</span></span> <span data-ttu-id="e1294-141">Para obter mais informações, consulte a propriedade <see cref="P:System.Data.DataColumn.Expression" />.</span><span class="sxs-lookup"><span data-stu-id="e1294-141">For more information, see the <see cref="P:System.Data.DataColumn.Expression" /> property.</span></span></param>
        <summary><span data-ttu-id="e1294-142">Inicializa uma nova instância da classe <see cref="T:System.Data.DataColumn" /> usando o nome do parâmetro, o tipo de dados e a expressão especificados.</span><span class="sxs-lookup"><span data-stu-id="e1294-142">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class using the specified name, data type, and expression.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e1294-143">O exemplo a seguir cria uma coluna computada.</span><span class="sxs-lookup"><span data-stu-id="e1294-143">The following example creates a computed column.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e1294-144">Nenhum <paramref name="dataType" /> foi especificado.</span><span class="sxs-lookup"><span data-stu-id="e1294-144">No <paramref name="dataType" /> was specified.</span></span></exception>
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn (string columnName, Type dataType, string expr, System.Data.MappingType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string columnName, class System.Type dataType, string expr, valuetype System.Data.MappingType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String,System.Data.MappingType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn(System::String ^ columnName, Type ^ dataType, System::String ^ expr, System::Data::MappingType type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="dataType" Type="System.Type" />
        <Parameter Name="expr" Type="System.String" />
        <Parameter Name="type" Type="System.Data.MappingType" />
      </Parameters>
      <Docs>
        <param name="columnName"><span data-ttu-id="e1294-145">Uma cadeia de caracteres que representa o nome da coluna a ser criada.</span><span class="sxs-lookup"><span data-stu-id="e1294-145">A string that represents the name of the column to be created.</span></span> <span data-ttu-id="e1294-146">Se for definida como <see langword="null" /> ou uma cadeia de caracteres vazia (""), um nome padrão será especificado quando adicionado à coleção de colunas.</span><span class="sxs-lookup"><span data-stu-id="e1294-146">If set to <see langword="null" /> or an empty string (""), a default name will be specified when added to the columns collection.</span></span></param>
        <param name="dataType"><span data-ttu-id="e1294-147">Um <see cref="P:System.Data.DataColumn.DataType" /> com suporte.</span><span class="sxs-lookup"><span data-stu-id="e1294-147">A supported <see cref="P:System.Data.DataColumn.DataType" />.</span></span></param>
        <param name="expr"><span data-ttu-id="e1294-148">A expressão usada para criar esta coluna.</span><span class="sxs-lookup"><span data-stu-id="e1294-148">The expression used to create this column.</span></span> <span data-ttu-id="e1294-149">Para obter mais informações, consulte a propriedade <see cref="P:System.Data.DataColumn.Expression" />.</span><span class="sxs-lookup"><span data-stu-id="e1294-149">For more information, see the <see cref="P:System.Data.DataColumn.Expression" /> property.</span></span></param>
        <param name="type"><span data-ttu-id="e1294-150">Um dos valores de <see cref="T:System.Data.MappingType" />.</span><span class="sxs-lookup"><span data-stu-id="e1294-150">One of the <see cref="T:System.Data.MappingType" /> values.</span></span></param>
        <summary><span data-ttu-id="e1294-151">Inicializa uma nova instância da classe <see cref="T:System.Data.DataColumn" /> usando o nome especificado, o tipo de dados, a expressão e o valor que determina se a coluna é um atributo.</span><span class="sxs-lookup"><span data-stu-id="e1294-151">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class using the specified name, data type, expression, and value that determines whether the column is an attribute.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1294-152">O `type` conjuntos de argumento de <xref:System.Data.DataColumn.ColumnMapping%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="e1294-152">The `type` argument sets the <xref:System.Data.DataColumn.ColumnMapping%2A> property.</span></span> <span data-ttu-id="e1294-153">Especifica a propriedade como um <xref:System.Data.DataColumn> é mapeado quando um <xref:System.Data.DataSet> é transformado em um documento XML.</span><span class="sxs-lookup"><span data-stu-id="e1294-153">The property specifies how a <xref:System.Data.DataColumn> is mapped when a <xref:System.Data.DataSet> is transformed into an XML document.</span></span> <span data-ttu-id="e1294-154">Por exemplo, se a coluna é denominada "fName", e o valor que ele contém é "Bob", e `type` é definido como `MappingType.Attribute`, o elemento XML deve ser o seguinte:</span><span class="sxs-lookup"><span data-stu-id="e1294-154">For example, if the column is named "fName," and the value it contains is "Bob," and `type` is set to `MappingType.Attribute`, the XML element would be as follows:</span></span>  
  
 <span data-ttu-id="e1294-155">\<FName nome = 'Bob' / ></span><span class="sxs-lookup"><span data-stu-id="e1294-155">\<Name fName = 'Bob'/></span></span>  
  
 <span data-ttu-id="e1294-156">Para obter mais informações sobre como as colunas são mapeadas para elementos ou atributos, consulte o <xref:System.Data.DataColumn.ColumnMapping%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="e1294-156">For more information about how columns are mapped to elements or attributes, see the <xref:System.Data.DataColumn.ColumnMapping%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1294-157">O exemplo a seguir constrói uma coluna computada.</span><span class="sxs-lookup"><span data-stu-id="e1294-157">The following example constructs a computed column.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn4 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn4 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e1294-158">Nenhum <paramref name="dataType" /> foi especificado.</span><span class="sxs-lookup"><span data-stu-id="e1294-158">No <paramref name="dataType" /> was specified.</span></span></exception>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.ColumnMapping" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
      </Docs>
    </Member>
    <Member MemberName="AllowDBNull">
      <MemberSignature Language="C#" Value="public bool AllowDBNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDBNull" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.AllowDBNull" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowDBNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowDBNull { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1294-159">Obtém ou define um valor que indica se valores nulos são permitidos nesta coluna para linhas que pertencem à tabela.</span><span class="sxs-lookup"><span data-stu-id="e1294-159">Gets or sets a value that indicates whether null values are allowed in this column for rows that belong to the table.</span></span></summary>
        <value>
          <span data-ttu-id="e1294-160"><see langword="true" /> se os valores nulos são permitidos; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e1294-160"><see langword="true" /> if null values values are allowed; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e1294-161">O padrão é <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="e1294-161">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e1294-162">O exemplo a seguir cria um novo <xref:System.Data.DataColumn> e define seu <xref:System.Data.DataColumn.AllowDBNull%2A> propriedade `true`.</span><span class="sxs-lookup"><span data-stu-id="e1294-162">The following example creates a new <xref:System.Data.DataColumn> and sets its <xref:System.Data.DataColumn.AllowDBNull%2A> property to `true`.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.AllowDBNull Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.AllowDBNull Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.AllowDBNull Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.AllowDBNull Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.Unique" />
      </Docs>
    </Member>
    <Member MemberName="AutoIncrement">
      <MemberSignature Language="C#" Value="public bool AutoIncrement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoIncrement" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.AutoIncrement" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoIncrement As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoIncrement { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1294-163">Obtém ou define um valor que indica se a coluna incrementa automaticamente o valor da coluna para novas linhas adicionadas à tabela.</span><span class="sxs-lookup"><span data-stu-id="e1294-163">Gets or sets a value that indicates whether the column automatically increments the value of the column for new rows added to the table.</span></span></summary>
        <value>
          <span data-ttu-id="e1294-164"><see langword="true" /> se o valor da coluna for incrementado automaticamente; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e1294-164"><see langword="true" /> if the value of the column increments automatically; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e1294-165">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e1294-165">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1294-166">Se o tipo desta coluna não é Int16, Int32 ou Int64 quando essa propriedade for definida, o <xref:System.Data.DataColumn.DataType%2A> propriedade é forçada a Int32.</span><span class="sxs-lookup"><span data-stu-id="e1294-166">If the type of this column is not Int16, Int32, or Int64 when this property is set, the <xref:System.Data.DataColumn.DataType%2A> property is coerced to Int32.</span></span> <span data-ttu-id="e1294-167">Uma exceção será gerada se essa é uma coluna computada.</span><span class="sxs-lookup"><span data-stu-id="e1294-167">An exception is generated if this is a computed column.</span></span> <span data-ttu-id="e1294-168">O <xref:System.Data.DataColumn.Expression%2A> está definida.</span><span class="sxs-lookup"><span data-stu-id="e1294-168">The <xref:System.Data.DataColumn.Expression%2A> property is set.</span></span> <span data-ttu-id="e1294-169">O valor incrementado é usado somente se o valor da linha desta coluna, quando adicionado à coleção de colunas, é igual ao valor padrão.</span><span class="sxs-lookup"><span data-stu-id="e1294-169">The incremented value is used only if the row's value for this column, when added to the columns collection, is equal to the default value.</span></span>  
  
 <span data-ttu-id="e1294-170">Você pode criar uma nova linha usando o <xref:System.Data.DataRow.ItemArray%2A> propriedade o <xref:System.Data.DataRow> classe e passar uma matriz de valores.</span><span class="sxs-lookup"><span data-stu-id="e1294-170">You can create a new row using the <xref:System.Data.DataRow.ItemArray%2A> property of the <xref:System.Data.DataRow> class and passing in an array of values.</span></span> <span data-ttu-id="e1294-171">Este é um problema potencial para uma coluna com seus <xref:System.Data.DataColumn.AutoIncrement%2A> definida como `true`, porque seu valor é gerado automaticamente.</span><span class="sxs-lookup"><span data-stu-id="e1294-171">This is a potential problem for a column with its <xref:System.Data.DataColumn.AutoIncrement%2A> set to `true`, because its value is generated automatically.</span></span> <span data-ttu-id="e1294-172">Para usar o <xref:System.Data.DataRow.ItemArray%2A> propriedade, local `null` na posição da coluna na matriz.</span><span class="sxs-lookup"><span data-stu-id="e1294-172">To use the <xref:System.Data.DataRow.ItemArray%2A> property, place `null` in the column's position in the array.</span></span> <span data-ttu-id="e1294-173">Para obter mais informações, consulte o <xref:System.Data.DataRow.ItemArray%2A> propriedade o <xref:System.Data.DataRow> classe.</span><span class="sxs-lookup"><span data-stu-id="e1294-173">For more information, see the <xref:System.Data.DataRow.ItemArray%2A> property of the <xref:System.Data.DataRow> class.</span></span>  
  
 <span data-ttu-id="e1294-174">Se o tipo da coluna for <xref:System.Data.SqlTypes.SqlInt16> ou <xref:System.Data.SqlTypes.SqlInt32>, <xref:System.Data.DataColumn.AutoIncrement%2A> não funcionará.</span><span class="sxs-lookup"><span data-stu-id="e1294-174">If the type of the column is <xref:System.Data.SqlTypes.SqlInt16> or <xref:System.Data.SqlTypes.SqlInt32>, <xref:System.Data.DataColumn.AutoIncrement%2A> will not work.</span></span> <span data-ttu-id="e1294-175">Use Int16 ou Int32.</span><span class="sxs-lookup"><span data-stu-id="e1294-175">Use Int16 or Int32 instead.</span></span>  
  
 <span data-ttu-id="e1294-176">Se o tipo da coluna for <xref:System.Data.SqlTypes.SqlInt64> ou <xref:System.Data.SqlTypes.SqlDecimal>, <xref:System.Data.DataColumn.AutoIncrement%2A> funcionará apenas parcialmente.</span><span class="sxs-lookup"><span data-stu-id="e1294-176">If the type of the column is <xref:System.Data.SqlTypes.SqlInt64> or <xref:System.Data.SqlTypes.SqlDecimal>, <xref:System.Data.DataColumn.AutoIncrement%2A> will only partially work.</span></span> <span data-ttu-id="e1294-177">Use Int64 ou decimais.</span><span class="sxs-lookup"><span data-stu-id="e1294-177">Use Int64 or Decimal instead.</span></span>  
  
 <span data-ttu-id="e1294-178">Quando o <xref:System.Data.DataColumn.AutoIncrementStep%2A> valor é adicionado ao valor atual, a verificação de estouro é suprimida.</span><span class="sxs-lookup"><span data-stu-id="e1294-178">When the <xref:System.Data.DataColumn.AutoIncrementStep%2A> value is added to the current value, the overflow check is suppressed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1294-179">O exemplo a seguir define o <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, e <xref:System.Data.DataColumn.AutoIncrementStep%2A> propriedades.</span><span class="sxs-lookup"><span data-stu-id="e1294-179">The following example sets the <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, and <xref:System.Data.DataColumn.AutoIncrementStep%2A> properties.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e1294-180">A coluna é uma coluna computada.</span><span class="sxs-lookup"><span data-stu-id="e1294-180">The column is a computed column.</span></span></exception>
        <altmember cref="P:System.Data.DataColumn.AutoIncrementSeed" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrementStep" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <altmember cref="P:System.Data.DataRow.ItemArray" />
        <altmember cref="M:System.Data.DataTable.NewRow" />
      </Docs>
    </Member>
    <Member MemberName="AutoIncrementSeed">
      <MemberSignature Language="C#" Value="public long AutoIncrementSeed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 AutoIncrementSeed" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.AutoIncrementSeed" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoIncrementSeed As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long AutoIncrementSeed { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1294-181">Obtém ou define o valor inicial de uma coluna que tem a propriedade <see cref="P:System.Data.DataColumn.AutoIncrement" /> definida como <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="e1294-181">Gets or sets the starting value for a column that has its <see cref="P:System.Data.DataColumn.AutoIncrement" /> property set to <see langword="true" />.</span></span> <span data-ttu-id="e1294-182">O padrão é 0.</span><span class="sxs-lookup"><span data-stu-id="e1294-182">The default is 0.</span></span></summary>
        <value><span data-ttu-id="e1294-183">O valor inicial para o recurso <see cref="P:System.Data.DataColumn.AutoIncrement" />.</span><span class="sxs-lookup"><span data-stu-id="e1294-183">The starting value for the <see cref="P:System.Data.DataColumn.AutoIncrement" /> feature.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e1294-184">O exemplo a seguir define o <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, e <xref:System.Data.DataColumn.AutoIncrementStep%2A> propriedades.</span><span class="sxs-lookup"><span data-stu-id="e1294-184">The following example sets the <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, and <xref:System.Data.DataColumn.AutoIncrementStep%2A> properties.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrementStep" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <altmember cref="P:System.Data.DataRow.ItemArray" />
      </Docs>
    </Member>
    <Member MemberName="AutoIncrementStep">
      <MemberSignature Language="C#" Value="public long AutoIncrementStep { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 AutoIncrementStep" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.AutoIncrementStep" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoIncrementStep As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long AutoIncrementStep { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1294-185">Obtém ou define o incremento usado por uma coluna com sua propriedade <see cref="P:System.Data.DataColumn.AutoIncrement" /> definida como <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="e1294-185">Gets or sets the increment used by a column with its <see cref="P:System.Data.DataColumn.AutoIncrement" /> property set to <see langword="true" />.</span></span></summary>
        <value><span data-ttu-id="e1294-186">O número pelo qual o valor da coluna é incrementado automaticamente.</span><span class="sxs-lookup"><span data-stu-id="e1294-186">The number by which the value of the column is automatically incremented.</span></span> <span data-ttu-id="e1294-187">O padrão é 1.</span><span class="sxs-lookup"><span data-stu-id="e1294-187">The default is 1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e1294-188">O exemplo a seguir define o <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, e <xref:System.Data.DataColumn.AutoIncrementStep%2A> propriedades.</span><span class="sxs-lookup"><span data-stu-id="e1294-188">The following example sets the <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, and <xref:System.Data.DataColumn.AutoIncrementStep%2A> properties.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e1294-189">O valor definido é zero.</span><span class="sxs-lookup"><span data-stu-id="e1294-189">The value set is zero.</span></span></exception>
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrementSeed" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <altmember cref="P:System.Data.DataRow.ItemArray" />
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public string Caption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Caption" />
      <MemberSignature Language="VB.NET" Value="Public Property Caption As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Caption { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1294-190">Obtém ou define a legenda da coluna.</span><span class="sxs-lookup"><span data-stu-id="e1294-190">Gets or sets the caption for the column.</span></span></summary>
        <value><span data-ttu-id="e1294-191">A legenda da coluna.</span><span class="sxs-lookup"><span data-stu-id="e1294-191">The caption of the column.</span></span> <span data-ttu-id="e1294-192">Se não for definido, retornará o valor <see cref="P:System.Data.DataColumn.ColumnName" />.</span><span class="sxs-lookup"><span data-stu-id="e1294-192">If not set, returns the <see cref="P:System.Data.DataColumn.ColumnName" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1294-193">Você pode usar o <xref:System.Data.DataColumn.Caption%2A> propriedade para exibir um nome descritivo ou amigável para um <xref:System.Data.DataColumn>.</span><span class="sxs-lookup"><span data-stu-id="e1294-193">You can use the <xref:System.Data.DataColumn.Caption%2A> property to display a descriptive or friendly name for a <xref:System.Data.DataColumn>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1294-194">O exemplo a seguir cria um novo <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="e1294-194">The following example creates a new <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="e1294-195">Em seguida, adiciona três <xref:System.Data.DataColumn> objetos para um <xref:System.Data.DataColumnCollection> e define o <xref:System.Data.DataColumn.Caption%2A> propriedade para cada <xref:System.Data.DataColumn>.</span><span class="sxs-lookup"><span data-stu-id="e1294-195">It then adds three <xref:System.Data.DataColumn> objects to a <xref:System.Data.DataColumnCollection> and sets the <xref:System.Data.DataColumn.Caption%2A> property for each <xref:System.Data.DataColumn>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Caption Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Caption Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Caption Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Caption Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
      </Docs>
    </Member>
    <Member MemberName="CheckNotAllowNull">
      <MemberSignature Language="C#" Value="protected internal void CheckNotAllowNull ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void CheckNotAllowNull() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.CheckNotAllowNull" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub CheckNotAllowNull ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void CheckNotAllowNull();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e1294-196">Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</span><span class="sxs-lookup"><span data-stu-id="e1294-196">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckUnique">
      <MemberSignature Language="C#" Value="protected void CheckUnique ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CheckUnique() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.CheckUnique" />
      <MemberSignature Language="VB.NET" Value="Protected Sub CheckUnique ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void CheckUnique();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e1294-197">Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</span><span class="sxs-lookup"><span data-stu-id="e1294-197">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnMapping">
      <MemberSignature Language="C#" Value="public virtual System.Data.MappingType ColumnMapping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.MappingType ColumnMapping" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.ColumnMapping" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ColumnMapping As MappingType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::MappingType ColumnMapping { System::Data::MappingType get(); void set(System::Data::MappingType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.MappingType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1294-198">Obtém ou define o <see cref="T:System.Data.MappingType" /> da coluna.</span><span class="sxs-lookup"><span data-stu-id="e1294-198">Gets or sets the <see cref="T:System.Data.MappingType" /> of the column.</span></span></summary>
        <value><span data-ttu-id="e1294-199">Um dos valores de <see cref="T:System.Data.MappingType" />.</span><span class="sxs-lookup"><span data-stu-id="e1294-199">One of the <see cref="T:System.Data.MappingType" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1294-200">O <xref:System.Data.DataColumn.ColumnMapping%2A> propriedade determina como um <xref:System.Data.DataColumn> é mapeado quando um <xref:System.Data.DataSet> é salvo como um documento XML usando o <xref:System.Data.DataSet.WriteXml%2A> método.</span><span class="sxs-lookup"><span data-stu-id="e1294-200">The <xref:System.Data.DataColumn.ColumnMapping%2A> property determines how a <xref:System.Data.DataColumn> is mapped when a <xref:System.Data.DataSet> is saved as an XML document using the <xref:System.Data.DataSet.WriteXml%2A> method.</span></span>  
  
 <span data-ttu-id="e1294-201">Por exemplo, se um <xref:System.Data.DataColumn> chamado "customerID" e seu <xref:System.Data.DataColumn.ColumnMapping%2A> está definida como `MappingType.Element`, o valor da coluna irá gerar o XML a seguir:</span><span class="sxs-lookup"><span data-stu-id="e1294-201">For example, if a <xref:System.Data.DataColumn> is named "customerID," and its <xref:System.Data.DataColumn.ColumnMapping%2A> property is set to `MappingType.Element`, the column value will produce the following XML:</span></span>  
  
```  
<Customers>  
 <customerID>ALFKI</customerID>  
......  
 </Customers>  
 <Orders>  
 <OrderID>12345</OrderID>  
 <customerID>ALFKI</customerID>  
......  
 </Orders>  
```  
  
 <span data-ttu-id="e1294-202">No entanto, se a mesma coluna é mapeada para `MappingType.Attribute`, o XML a seguir é produzido:</span><span class="sxs-lookup"><span data-stu-id="e1294-202">However, if the same column is mapped to `MappingType.Attribute`, the following XML is produced:</span></span>  
  
```  
<Customers customerID="ALFKI"........more attributes.....>  
 <Order orderID="1234"....more attributes..../>  
 <Order orderID="1234"....more attributes..../>  
...... More orders for this customer  
 </Customers>  
```  
  
 <span data-ttu-id="e1294-203">Use o <xref:System.Data.DataColumn.%23ctor%2A> construtor que contém o `type` argumento para especificar como o <xref:System.Data.DataColumn> é mapeado quando seu <xref:System.Data.DataSet> é transformado em um documento XML.</span><span class="sxs-lookup"><span data-stu-id="e1294-203">Use the <xref:System.Data.DataColumn.%23ctor%2A> constructor that contains the `type` argument to specificy how the <xref:System.Data.DataColumn> is mapped when its <xref:System.Data.DataSet> is transformed to an XML document.</span></span>  
  
 <span data-ttu-id="e1294-204">O <xref:System.Data.DataColumn.ColumnMapping%2A> propriedade corresponde ao argumento de construtor `type`.</span><span class="sxs-lookup"><span data-stu-id="e1294-204">The <xref:System.Data.DataColumn.ColumnMapping%2A> property corresponds to the constructor argument `type`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1294-205">O exemplo a seguir define o <xref:System.Data.DataColumn.ColumnMapping%2A> a propriedade tipo da nova <xref:System.Data.DataColumn>.</span><span class="sxs-lookup"><span data-stu-id="e1294-205">The following example sets the <xref:System.Data.DataColumn.ColumnMapping%2A> type property of new <xref:System.Data.DataColumn>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ColumnMapping Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ColumnMapping Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ColumnMapping Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ColumnMapping Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnName">
      <MemberSignature Language="C#" Value="public string ColumnName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ColumnName" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.ColumnName" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ColumnName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1294-206">Obtém ou define o nome da coluna no <see cref="T:System.Data.DataColumnCollection" />.</span><span class="sxs-lookup"><span data-stu-id="e1294-206">Gets or sets the name of the column in the <see cref="T:System.Data.DataColumnCollection" />.</span></span></summary>
        <value><span data-ttu-id="e1294-207">O nome da coluna.</span><span class="sxs-lookup"><span data-stu-id="e1294-207">The name of the column.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1294-208">Quando um <xref:System.Data.DataColumn> é criado, ele não tem <xref:System.Data.DataColumn.ColumnName%2A> valor.</span><span class="sxs-lookup"><span data-stu-id="e1294-208">When a <xref:System.Data.DataColumn> is created, it has no <xref:System.Data.DataColumn.ColumnName%2A> value.</span></span> <span data-ttu-id="e1294-209">No entanto, quando o <xref:System.Data.DataColumn> é adicionado a um <xref:System.Data.DataColumnCollection> para um <xref:System.Data.DataTable> do objeto, ele recebe um nome padrão ("Coluna1", "Coluna2" e assim por diante).</span><span class="sxs-lookup"><span data-stu-id="e1294-209">However, when the <xref:System.Data.DataColumn> is added to a <xref:System.Data.DataColumnCollection> for a <xref:System.Data.DataTable> object, it is given a default name ("Column1", "Column2", and so on).</span></span>  
  
 <span data-ttu-id="e1294-210">Por padrão, o <xref:System.Data.DataColumn.Caption%2A> valor é definido como o <xref:System.Data.DataColumn.ColumnName%2A> valor.</span><span class="sxs-lookup"><span data-stu-id="e1294-210">By default, the <xref:System.Data.DataColumn.Caption%2A> value is set to the <xref:System.Data.DataColumn.ColumnName%2A> value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1294-211">Os exemplos a seguir obtém o <xref:System.Data.DataColumn.ColumnName%2A> para cada coluna em todas as tabelas em um <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="e1294-211">The following examples gets the <xref:System.Data.DataColumn.ColumnName%2A> for every column in every table in a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="e1294-212">O exemplo também mostra como criar um <xref:System.Data.DataColumn> com um novo <xref:System.Data.DataColumn.ColumnName%2A>.</span><span class="sxs-lookup"><span data-stu-id="e1294-212">The example also shows how to create a <xref:System.Data.DataColumn> with a new <xref:System.Data.DataColumn.ColumnName%2A>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ColumnName Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ColumnName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ColumnName Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ColumnName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e1294-213">A propriedade é definida como <see langword="null" /> ou com uma cadeia de caracteres vazia e a coluna pertence a uma coleção.</span><span class="sxs-lookup"><span data-stu-id="e1294-213">The property is set to <see langword="null" /> or an empty string and the column belongs to a collection.</span></span></exception>
        <exception cref="T:System.Data.DuplicateNameException"><span data-ttu-id="e1294-214">Uma coluna com o mesmo nome já existe na coleção.</span><span class="sxs-lookup"><span data-stu-id="e1294-214">A column with the same name already exists in the collection.</span></span> <span data-ttu-id="e1294-215">A comparação de nomes não diferencia maiúsculas de minúsculas.</span><span class="sxs-lookup"><span data-stu-id="e1294-215">The name comparison is not case sensitive.</span></span></exception>
        <altmember cref="P:System.Data.DataColumn.Caption" />
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public Type DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DataType" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ DataType { Type ^ get(); void set(Type ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Data.ColumnTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1294-216">Obtém ou define o tipo dos dados armazenados na coluna.</span><span class="sxs-lookup"><span data-stu-id="e1294-216">Gets or sets the type of data stored in the column.</span></span></summary>
        <value><span data-ttu-id="e1294-217">Um objeto <see cref="T:System.Type" /> que representa o tipo de dados da coluna.</span><span class="sxs-lookup"><span data-stu-id="e1294-217">A <see cref="T:System.Type" /> object that represents the column data type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1294-218">Definindo o <xref:System.Data.DataColumn.DataType%2A> valor é muito importante para garantir a criação correta e atualização de dados em uma fonte de dados.</span><span class="sxs-lookup"><span data-stu-id="e1294-218">Setting the <xref:System.Data.DataColumn.DataType%2A> value is very important to guaranteeing the correct creation and updating of data in a data source.</span></span>  
  
 <span data-ttu-id="e1294-219">O <xref:System.Data.DataColumn.DataType%2A> propriedade suporta os seguintes tipos de dados base do .NET Framework:</span><span class="sxs-lookup"><span data-stu-id="e1294-219">The <xref:System.Data.DataColumn.DataType%2A> property supports the following base .NET Framework data types:</span></span>  
  
-   <xref:System.Boolean>  
  
-   <xref:System.Byte>  
  
-   <xref:System.Char>  
  
-   <xref:System.DateTime>  
  
-   <xref:System.Decimal>  
  
-   <xref:System.Double>  
  
-   <xref:System.Guid>  
  
-   <xref:System.Int16>  
  
-   <xref:System.Int32>  
  
-   <xref:System.Int64>  
  
-   <xref:System.SByte>  
  
-   <xref:System.Single>  
  
-   <xref:System.String>  
  
-   <xref:System.TimeSpan>  
  
-   <xref:System.UInt16>  
  
-   <xref:System.UInt32>  
  
-   <xref:System.UInt64>  
  
 <span data-ttu-id="e1294-220">Assim como o seguinte tipo de matriz:</span><span class="sxs-lookup"><span data-stu-id="e1294-220">as well as the following array type:</span></span>  
  
-   `Byte[]`  
  
 <span data-ttu-id="e1294-221">Uma exceção é gerada quando a alteração dessa propriedade após a coluna começou a armazenar os dados.</span><span class="sxs-lookup"><span data-stu-id="e1294-221">An exception is generated when changing this property after the column has begun storing data.</span></span>  
  
 <span data-ttu-id="e1294-222">Se <xref:System.Data.DataColumn.AutoIncrement%2A> é definido como `true` antes de definir o <xref:System.Data.DataColumn.DataType%2A> propriedade e você tenta definir o tipo de qualquer coisa, exceto um tipo inteiro, uma exceção será gerada.</span><span class="sxs-lookup"><span data-stu-id="e1294-222">If <xref:System.Data.DataColumn.AutoIncrement%2A> is set to `true` before setting the <xref:System.Data.DataColumn.DataType%2A> property, and you try to set the type to anything except an integer type, an exception is generated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e1294-223">Uma coluna de tipo de dados `Byte[]` requer tratamento especial em certos casos, porque, ao contrário dos tipos de dados base do .NET Framework, é um tipo de dados de referência.</span><span class="sxs-lookup"><span data-stu-id="e1294-223">A column of data type `Byte[]` requires special treatment in certain cases since, unlike the base .NET Framework data types, it is a reference data type.</span></span> <span data-ttu-id="e1294-224">Se uma coluna de tipo de dados `Byte[]` é usado como um <xref:System.Data.DataTable.PrimaryKey%2A>, ou como um <xref:System.Data.DataView.Sort%2A> ou <xref:System.Data.DataView.RowFilter%2A> chave para um <xref:System.Data.DataView>, qualquer alteração no valor de coluna deve envolver atribuindo o `Byte[]` valor de coluna para um separadamente instanciado `Byte[]` objeto.</span><span class="sxs-lookup"><span data-stu-id="e1294-224">If a column of data type `Byte[]` is used as a <xref:System.Data.DataTable.PrimaryKey%2A>, or as a <xref:System.Data.DataView.Sort%2A> or <xref:System.Data.DataView.RowFilter%2A> key for a <xref:System.Data.DataView>, any change to the column value must involve assigning the `Byte[]` column value to a separately instantiated `Byte[]` object.</span></span> <span data-ttu-id="e1294-225">Essa atribuição é necessária para disparar a atualização dos índices internos usado por classificação, filtragem e operações de chave primárias.</span><span class="sxs-lookup"><span data-stu-id="e1294-225">This assignment is required to trigger the update of the internal indexes used by sorting, filtering, and primary key operations.</span></span> <span data-ttu-id="e1294-226">Isso é ilustrado pelo exemplo a seguir:</span><span class="sxs-lookup"><span data-stu-id="e1294-226">This is illustrated by the following example:</span></span>  
  
```  
byte[] columnValue = (byte[])myDataTable.Rows[0][0];  
byte[] newValue = (byte[])columnValue.Clone();  
newValue[1] = 2;  
myDataTable.Rows[0][0] = newValue;  
```  
  
> [!NOTE]
>  <span data-ttu-id="e1294-227">Embora seja possível definir uma coluna como tipo de dados diferente de tipos de dados base do .NET Framework e `Byte[]`, essa coluna será tratada como um tipo definido pelo usuário, sujeito às seguintes restrições de uso.</span><span class="sxs-lookup"><span data-stu-id="e1294-227">Although it is possible to define a column as data type other than the base .NET Framework data types and `Byte[]`, such a column will be treated as a user-defined type, subject to the following usage restrictions.</span></span> <span data-ttu-id="e1294-228">(Para obter mais informações sobre tipos definidos pelo usuário, consulte [criando e tipos de Using User-Defined](http://msdn.microsoft.com/library/ec0266d2-7e5b-47e4-938a-85ac9d04fa40).)</span><span class="sxs-lookup"><span data-stu-id="e1294-228">(For more information on user-defined types, see [Creating and Using User-Defined Types](http://msdn.microsoft.com/library/ec0266d2-7e5b-47e4-938a-85ac9d04fa40).)</span></span>  
  
-   <span data-ttu-id="e1294-229">A coluna não pode ser parte de um <xref:System.Data.DataView.RowFilter%2A> ou <xref:System.Data.DataTable.Select%2A> expressão.</span><span class="sxs-lookup"><span data-stu-id="e1294-229">The column cannot be part of a <xref:System.Data.DataView.RowFilter%2A> or <xref:System.Data.DataTable.Select%2A> expression.</span></span>  
  
-   <span data-ttu-id="e1294-230">Se a coluna é usada como um <xref:System.Data.DataTable.PrimaryKey%2A>, ou como um <xref:System.Data.DataView.Sort%2A> ou para um <xref:System.Data.DataView>, ele deve ser tratado como um campo imutável; os dados da coluna não devem ser alterados depois que ele foi adicionado à tabela.</span><span class="sxs-lookup"><span data-stu-id="e1294-230">If the column is used as a <xref:System.Data.DataTable.PrimaryKey%2A>, or as a <xref:System.Data.DataView.Sort%2A> or for a <xref:System.Data.DataView>, it must be treated as an immutable field; the column data must not be changed once it has been added to the table.</span></span>  
  
-   <span data-ttu-id="e1294-231">Seu <xref:System.Data.DataColumn.ColumnMapping%2A> só pode ser definida como `MappingType.Element`.</span><span class="sxs-lookup"><span data-stu-id="e1294-231">Its <xref:System.Data.DataColumn.ColumnMapping%2A> can be only set to `MappingType.Element`.</span></span>  
  
-   <span data-ttu-id="e1294-232">A classe que implementa o tipo de dados da coluna deve ser deve ser marcadas com o <xref:System.SerializableAttribute>, e se necessário implementar o <xref:System.Runtime.Serialization.ISerializable> ou <xref:System.Xml.Serialization.IXmlSerializable> interface.</span><span class="sxs-lookup"><span data-stu-id="e1294-232">The class that implements the column’s data type must be must be marked with the <xref:System.SerializableAttribute>, and if necessary implement the <xref:System.Runtime.Serialization.ISerializable> or <xref:System.Xml.Serialization.IXmlSerializable> interface.</span></span>  
  
-   <span data-ttu-id="e1294-233">Suporte para controle de alterações é limitado.</span><span class="sxs-lookup"><span data-stu-id="e1294-233">Support for change tracking is limited.</span></span> <span data-ttu-id="e1294-234">Para utilizar o <xref:System.Data.DataTable> mecanismo de controle de alterações da classe, a classe que implementa o tipo de dados da coluna ou deve implementar o <xref:System.ComponentModel.IChangeTracking> interface ou assuma a responsabilidade de informando o <xref:System.Data.DataRow> quando o valor da coluna tiver sido modificado, ou chamando <xref:System.Data.DataRow.SetModified%2A> na linha ou atribuindo o objeto de valor de coluna para um objeto de valor de coluna instanciado separadamente.</span><span class="sxs-lookup"><span data-stu-id="e1294-234">To utilize the <xref:System.Data.DataTable> class’s change tracking mechanism, the class that implements the column’s data type must either implement the <xref:System.ComponentModel.IChangeTracking> interface, or take over the responsibility for informing the <xref:System.Data.DataRow> when the column value has been modified, either by calling <xref:System.Data.DataRow.SetModified%2A> on the row or by assigning the column value object to a separately instantiated column value object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1294-235">O exemplo a seguir adiciona colunas de vários tipos de dados para um <xref:System.Data.DataTable>e, em seguida, adiciona uma linha à tabela.</span><span class="sxs-lookup"><span data-stu-id="e1294-235">The following example adds columns of several data types to a <xref:System.Data.DataTable>, and then adds one row to the table.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataType Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataType Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataType Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e1294-236">A coluna já tem dados armazenados.</span><span class="sxs-lookup"><span data-stu-id="e1294-236">The column already has data stored.</span></span></exception>
        <altmember cref="T:System.Type" />
        <altmember cref="M:System.Type.GetType" />
      </Docs>
    </Member>
    <Member MemberName="DateTimeMode">
      <MemberSignature Language="C#" Value="public System.Data.DataSetDateTime DateTimeMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DataSetDateTime DateTimeMode" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.DateTimeMode" />
      <MemberSignature Language="VB.NET" Value="Public Property DateTimeMode As DataSetDateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataSetDateTime DateTimeMode { System::Data::DataSetDateTime get(); void set(System::Data::DataSetDateTime value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataSetDateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1294-237">Obtém ou define o <see langword="DateTimeMode" /> da coluna.</span><span class="sxs-lookup"><span data-stu-id="e1294-237">Gets or sets the <see langword="DateTimeMode" /> for the column.</span></span></summary>
        <value><span data-ttu-id="e1294-238">O <see cref="T:System.Data.DataSetDateTime" /> da coluna especificada.</span><span class="sxs-lookup"><span data-stu-id="e1294-238">The <see cref="T:System.Data.DataSetDateTime" /> for the specified column.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1294-239">O <xref:System.Data.DataColumn.DateTimeMode%2A> não pode ser modificado depois de linhas são adicionadas a um <xref:System.Data.DataColumn>, com exceção de modificação de <xref:System.Data.DataSetDateTime.Unspecified> e <xref:System.Data.DataSetDateTime.UnspecifiedLocal> ou vice-versa.</span><span class="sxs-lookup"><span data-stu-id="e1294-239">The <xref:System.Data.DataColumn.DateTimeMode%2A> cannot be modified after rows are added to a <xref:System.Data.DataColumn>, except for modifying from <xref:System.Data.DataSetDateTime.Unspecified> and <xref:System.Data.DataSetDateTime.UnspecifiedLocal> or vice-versa.</span></span> <span data-ttu-id="e1294-240">A modificação de `UnspecifiedLocal` para `Unspecified` e vice-versa vice-versa é permitida, pois a diferença entre essas duas opções é somente durante a serialização e não afeta o armazenamento.</span><span class="sxs-lookup"><span data-stu-id="e1294-240">The modification from `UnspecifiedLocal` to `Unspecified` and vice-versa is allowed as the difference between these two options is only during serialization and does not affect the storage.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultValue">
      <MemberSignature Language="C#" Value="public object DefaultValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultValue" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.DefaultValue" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DefaultValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Data.DefaultValueTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1294-241">Obtém ou define o valor padrão para a coluna ao criar novas linhas.</span><span class="sxs-lookup"><span data-stu-id="e1294-241">Gets or sets the default value for the column when you are creating new rows.</span></span></summary>
        <value><span data-ttu-id="e1294-242">Um valor apropriado para <see cref="P:System.Data.DataColumn.DataType" /> da coluna.</span><span class="sxs-lookup"><span data-stu-id="e1294-242">A value appropriate to the column's <see cref="P:System.Data.DataColumn.DataType" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1294-243">Um valor padrão é o valor que é automaticamente atribuído à coluna quando uma <xref:System.Data.DataRow> é criado (por exemplo, a data e hora em que o <xref:System.Data.DataRow> foi criado.</span><span class="sxs-lookup"><span data-stu-id="e1294-243">A default value is the value that is automatically assigned to the column when a <xref:System.Data.DataRow> is created (for example, the date and time when the <xref:System.Data.DataRow> was created.</span></span>  
  
 <span data-ttu-id="e1294-244">Quando <xref:System.Data.DataColumn.AutoIncrement%2A> é definido como true, não pode haver nenhum valor padrão.</span><span class="sxs-lookup"><span data-stu-id="e1294-244">When <xref:System.Data.DataColumn.AutoIncrement%2A> is set to true, there can be no default value.</span></span>  
  
 <span data-ttu-id="e1294-245">Você pode criar uma nova linha usando o <xref:System.Data.DataRow.ItemArray%2A> propriedade o <xref:System.Data.DataRow> classe e transmitindo uma matriz de valores.</span><span class="sxs-lookup"><span data-stu-id="e1294-245">You can create a new row using the <xref:System.Data.DataRow.ItemArray%2A> property of the <xref:System.Data.DataRow> class and passing the method an array of values.</span></span> <span data-ttu-id="e1294-246">Isso é um problema potencial para uma coluna com um valor padrão como seu valor é gerado automaticamente.</span><span class="sxs-lookup"><span data-stu-id="e1294-246">This is a potential problem for a column with a default value because its value is generated automatically.</span></span> <span data-ttu-id="e1294-247">Para usar o <xref:System.Data.DataRow.ItemArray%2A> propriedade com esse tipo de coluna, coloque `null` na posição da coluna na matriz.</span><span class="sxs-lookup"><span data-stu-id="e1294-247">To use the <xref:System.Data.DataRow.ItemArray%2A> property with such a column, place `null` in the column's position in the array.</span></span> <span data-ttu-id="e1294-248">Para obter mais informações, consulte a propriedade <xref:System.Data.DataRow.ItemArray%2A>.</span><span class="sxs-lookup"><span data-stu-id="e1294-248">For more information, see the <xref:System.Data.DataRow.ItemArray%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1294-249">O exemplo a seguir cria várias <xref:System.Data.DataColumn> valores para cada coluna de padrão de objetos que têm diferentes tipos de dados e define apropriado.</span><span class="sxs-lookup"><span data-stu-id="e1294-249">The following example creates several <xref:System.Data.DataColumn> objects that have different data types, and sets appropriate default values to each column.</span></span>  
  
 [!code-vb[Classic WebData DataColumn.DefaultValue Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DefaultValue Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="e1294-250">Quando você estiver adicionando uma linha, o valor padrão não será uma instância do tipo de dados da coluna.</span><span class="sxs-lookup"><span data-stu-id="e1294-250">When you are adding a row, the default value is not an instance of the column's data type.</span></span></exception>
        <altmember cref="P:System.Data.DataColumn.DataType" />
        <altmember cref="P:System.Data.DataRow.ItemArray" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
        <altmember cref="T:System.Data.UniqueConstraint" />
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public string Expression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Expression" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Expression" />
      <MemberSignature Language="VB.NET" Value="Public Property Expression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Expression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1294-251">Obtém ou define a expressão usada para filtrar linhas, calcular os valores em uma coluna ou criar uma coluna de agregação.</span><span class="sxs-lookup"><span data-stu-id="e1294-251">Gets or sets the expression used to filter rows, calculate the values in a column, or create an aggregate column.</span></span></summary>
        <value><span data-ttu-id="e1294-252">Uma expressão para calcular o valor de uma coluna, ou criar uma coluna agregada.</span><span class="sxs-lookup"><span data-stu-id="e1294-252">An expression to calculate the value of a column, or create an aggregate column.</span></span> <span data-ttu-id="e1294-253">O tipo de retorno de uma expressão é determinado pelo <see cref="P:System.Data.DataColumn.DataType" /> da coluna.</span><span class="sxs-lookup"><span data-stu-id="e1294-253">The return type of an expression is determined by the <see cref="P:System.Data.DataColumn.DataType" /> of the column.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1294-254">Um uso de <xref:System.Data.DataColumn.Expression%2A> é de propriedade criar colunas calculadas.</span><span class="sxs-lookup"><span data-stu-id="e1294-254">One use of the <xref:System.Data.DataColumn.Expression%2A> property is to create calculated columns.</span></span> <span data-ttu-id="e1294-255">Por exemplo, para calcular um valor de imposto, o preço unitário é multiplicado por uma taxa de imposto de uma região específica.</span><span class="sxs-lookup"><span data-stu-id="e1294-255">For example, to calculate a tax value, the unit price is multiplied by a tax rate of a specific region.</span></span> <span data-ttu-id="e1294-256">Como as taxas de impostos variam de região para região, seria impossível colocar uma taxa de imposto único em uma coluna; em vez disso, o valor é calculado usando o <xref:System.Data.DataColumn.Expression%2A> propriedade, conforme mostrado no código do Visual Basic na seção a seguir:</span><span class="sxs-lookup"><span data-stu-id="e1294-256">Because tax rates vary from region to region, it would be impossible to put a single tax rate in a column; instead, the value is calculated using the <xref:System.Data.DataColumn.Expression%2A> property, as shown in the Visual Basic code in the following section:</span></span>  
  
 <span data-ttu-id="e1294-257">DataSet1.Tables("Products").Columns("tax").Expression = "UnitPrice \* 0.086"</span><span class="sxs-lookup"><span data-stu-id="e1294-257">DataSet1.Tables("Products").Columns("tax").Expression = "UnitPrice \* 0.086"</span></span>  
  
 <span data-ttu-id="e1294-258">Um segundo uso é criar uma coluna de agregação.</span><span class="sxs-lookup"><span data-stu-id="e1294-258">A second use is to create an aggregate column.</span></span> <span data-ttu-id="e1294-259">Executa uma agregação como um valor calculado, uma operação com base em todo o conjunto de linhas no <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="e1294-259">Similar to a calculated value, an aggregate performs an operation based on the complete set of rows in the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="e1294-260">É um exemplo simples contar o número de linhas retornadas no conjunto.</span><span class="sxs-lookup"><span data-stu-id="e1294-260">A simple example is to count the number of rows returned in the set.</span></span> <span data-ttu-id="e1294-261">Esse é o método que você usaria para contar o número de transações concluídas por um vendedor específico, como mostra este código do Visual Basic:</span><span class="sxs-lookup"><span data-stu-id="e1294-261">This is the method you would use to count the number of transactions completed by a particular salesperson, as shown in this Visual Basic code:</span></span>  
  
```  
DataSet1.Tables("Orders").Columns("OrderCount").Expression = "Count(OrderID)"  
```  
  
## <a name="expression-syntax"></a><span data-ttu-id="e1294-262">Sintaxe de expressão</span><span class="sxs-lookup"><span data-stu-id="e1294-262">Expression Syntax</span></span>  
 <span data-ttu-id="e1294-263">Quando você cria uma expressão, use o <xref:System.Data.DataColumn.ColumnName%2A> propriedade para se referir a colunas.</span><span class="sxs-lookup"><span data-stu-id="e1294-263">When you create an expression, use the <xref:System.Data.DataColumn.ColumnName%2A> property to refer to columns.</span></span> <span data-ttu-id="e1294-264">Por exemplo, se o <xref:System.Data.DataColumn.ColumnName%2A> para uma coluna é "UnitPrice" e outro "Quantity", a expressão seria a seguinte:</span><span class="sxs-lookup"><span data-stu-id="e1294-264">For example, if the <xref:System.Data.DataColumn.ColumnName%2A> for one column is "UnitPrice", and another "Quantity", the expression would be as follows:</span></span>  
  
 <span data-ttu-id="e1294-265">"UnitPrice \* Quantity"</span><span class="sxs-lookup"><span data-stu-id="e1294-265">"UnitPrice \* Quantity"</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e1294-266">Se uma coluna é usada em uma expressão, em seguida, a expressão deve ter uma dependência nessa coluna.</span><span class="sxs-lookup"><span data-stu-id="e1294-266">If a column is used in an expression, then the expression is said to have a dependency on that column.</span></span> <span data-ttu-id="e1294-267">Se uma coluna dependente for renomeada ou removida, nenhuma exceção é lançada.</span><span class="sxs-lookup"><span data-stu-id="e1294-267">If a dependent column is renamed or removed, no exception is thrown.</span></span> <span data-ttu-id="e1294-268">Uma exceção será lançada quando a coluna de expressão dividido agora é acessada.</span><span class="sxs-lookup"><span data-stu-id="e1294-268">An exception will be thrown when the now-broken expression column is accessed.</span></span>  
  
 <span data-ttu-id="e1294-269">Quando você cria uma expressão para um filtro, inclua cadeias de caracteres com aspas simples:</span><span class="sxs-lookup"><span data-stu-id="e1294-269">When you create an expression for a filter, enclose strings with single quotation marks:</span></span>  
  
 <span data-ttu-id="e1294-270">"LastName = 'Jones'"</span><span class="sxs-lookup"><span data-stu-id="e1294-270">"LastName = 'Jones'"</span></span>  
  
 <span data-ttu-id="e1294-271">Se um nome de coluna contiver caracteres não alfanuméricos ou começa com um dígito ou (case-insensitively) corresponde a qualquer uma das seguintes palavras reservadas, ele requer tratamento especial, conforme descrito nos parágrafos a seguir.</span><span class="sxs-lookup"><span data-stu-id="e1294-271">If a column name contains any non-alphanumeric characters or starts with a digit or matches (case-insensitively) any of the following reserved words, it requires special handling, as described in the following paragraphs.</span></span>  
  
 <span data-ttu-id="e1294-272">And</span><span class="sxs-lookup"><span data-stu-id="e1294-272">And</span></span>  
  
 <span data-ttu-id="e1294-273">Entre</span><span class="sxs-lookup"><span data-stu-id="e1294-273">Between</span></span>  
  
 <span data-ttu-id="e1294-274">Filho</span><span class="sxs-lookup"><span data-stu-id="e1294-274">Child</span></span>  
  
 <span data-ttu-id="e1294-275">False</span><span class="sxs-lookup"><span data-stu-id="e1294-275">False</span></span>  
  
 <span data-ttu-id="e1294-276">No</span><span class="sxs-lookup"><span data-stu-id="e1294-276">In</span></span>  
  
 <span data-ttu-id="e1294-277">É</span><span class="sxs-lookup"><span data-stu-id="e1294-277">Is</span></span>  
  
 <span data-ttu-id="e1294-278">Like</span><span class="sxs-lookup"><span data-stu-id="e1294-278">Like</span></span>  
  
 <span data-ttu-id="e1294-279">Not</span><span class="sxs-lookup"><span data-stu-id="e1294-279">Not</span></span>  
  
 <span data-ttu-id="e1294-280">Nulo</span><span class="sxs-lookup"><span data-stu-id="e1294-280">Null</span></span>  
  
 <span data-ttu-id="e1294-281">Ou</span><span class="sxs-lookup"><span data-stu-id="e1294-281">Or</span></span>  
  
 <span data-ttu-id="e1294-282">Pai</span><span class="sxs-lookup"><span data-stu-id="e1294-282">Parent</span></span>  
  
 <span data-ttu-id="e1294-283">verdadeiro</span><span class="sxs-lookup"><span data-stu-id="e1294-283">True</span></span>  
  
 <span data-ttu-id="e1294-284">Se um nome de coluna satisfizer uma das condições acima, ela deverá ser envolvida em qualquer um dos colchetes ou "'" aspas (acento grave).</span><span class="sxs-lookup"><span data-stu-id="e1294-284">If a column name satisfies one of the above conditions, it must be wrapped in either square brackets or the "\`" (grave accent) quotes.</span></span> <span data-ttu-id="e1294-285">Por exemplo, para usar uma coluna chamada "Coluna #" em uma expressão, você escreve ou "[coluna #]":</span><span class="sxs-lookup"><span data-stu-id="e1294-285">For example, to use a column named "Column#" in an expression, you would write either "[Column#]":</span></span>  
  
 <span data-ttu-id="e1294-286">Total \* coluna [#]</span><span class="sxs-lookup"><span data-stu-id="e1294-286">Total \* [Column#]</span></span>  
  
 <span data-ttu-id="e1294-287">ou "\`coluna #'":</span><span class="sxs-lookup"><span data-stu-id="e1294-287">or "\`Column#`":</span></span>  
  
 <span data-ttu-id="e1294-288">Total \* \`coluna #'</span><span class="sxs-lookup"><span data-stu-id="e1294-288">Total \* \`Column#\`</span></span>  
  
 <span data-ttu-id="e1294-289">Se o nome da coluna é colocado entre colchetes e qualquer ']' e '\\' caracteres (mas não os outros caracteres) em que ele devem ser de escape, precedendo-los com a barra invertida ("\\") caracteres.</span><span class="sxs-lookup"><span data-stu-id="e1294-289">If the column name is enclosed in square brackets then any ']' and '\\' characters (but not any other characters) in it must be escaped by prepending them with the backslash ("\\") character.</span></span> <span data-ttu-id="e1294-290">Se o nome da coluna é colocado entre caracteres de acento grave, em seguida, ele não deve conter nenhum caractere de acento grave.</span><span class="sxs-lookup"><span data-stu-id="e1294-290">If the column name is enclosed in grave accent characters then it must not contain any grave accent characters in it.</span></span> <span data-ttu-id="e1294-291">Por exemplo, uma coluna denominada "[coluna]\\" seria:</span><span class="sxs-lookup"><span data-stu-id="e1294-291">For example, a column named "Column[]\\" would be written:</span></span>  
  
 <span data-ttu-id="e1294-292">Total \* [coluna [\\]\\\\]</span><span class="sxs-lookup"><span data-stu-id="e1294-292">Total \* [Column[\\]\\\\]</span></span>  
  
 <span data-ttu-id="e1294-293">ou</span><span class="sxs-lookup"><span data-stu-id="e1294-293">or</span></span>  
  
 <span data-ttu-id="e1294-294">Total \* \`[coluna]\\`</span><span class="sxs-lookup"><span data-stu-id="e1294-294">Total \* \`Column[]\\`</span></span>  
  
## <a name="user-defined-values"></a><span data-ttu-id="e1294-295">Valores definidos pelo usuário</span><span class="sxs-lookup"><span data-stu-id="e1294-295">User-Defined Values</span></span>  
 <span data-ttu-id="e1294-296">Valores definidos pelo usuário podem ser usados em expressões a serem comparados com valores de coluna.</span><span class="sxs-lookup"><span data-stu-id="e1294-296">User-defined values may be used within expressions to be compared with column values.</span></span> <span data-ttu-id="e1294-297">Valores de cadeia de caracteres devem estar entre aspas simples (e tem cada caractere de aspas em um valor de cadeia de caracteres de escape, precedendo-lo com outro caractere de aspas).</span><span class="sxs-lookup"><span data-stu-id="e1294-297">String values should be enclosed within single quotation marks (and each single quotation character in a string value has to be escaped by prepending it with another single quotation character).</span></span> <span data-ttu-id="e1294-298">Valores de data devem ser incluídos dentro de sinais sustenido (#) ou aspas simples (') com base no provedor de dados.</span><span class="sxs-lookup"><span data-stu-id="e1294-298">Date values should be enclosed within pound signs (#) or single quotes (') based on the data provider.</span></span> <span data-ttu-id="e1294-299">Casas decimais e notação científica são permitidos para valores numéricos.</span><span class="sxs-lookup"><span data-stu-id="e1294-299">Decimals and scientific notation are permissible for numeric values.</span></span> <span data-ttu-id="e1294-300">Por exemplo:</span><span class="sxs-lookup"><span data-stu-id="e1294-300">For example:</span></span>  
  
 <span data-ttu-id="e1294-301">"FirstName = 'John'"</span><span class="sxs-lookup"><span data-stu-id="e1294-301">"FirstName = 'John'"</span></span>  
  
 <span data-ttu-id="e1294-302">"Preço < = 50,00"</span><span class="sxs-lookup"><span data-stu-id="e1294-302">"Price <= 50.00"</span></span>  
  
 <span data-ttu-id="e1294-303">"Data de nascimento < # #1/31/82"</span><span class="sxs-lookup"><span data-stu-id="e1294-303">"Birthdate < #1/31/82#"</span></span>  
  
 <span data-ttu-id="e1294-304">Para colunas que contêm valores de enumeração, converter o valor para um tipo de dados inteiro.</span><span class="sxs-lookup"><span data-stu-id="e1294-304">For columns that contain enumeration values, cast the value to an integer data type.</span></span> <span data-ttu-id="e1294-305">Por exemplo:</span><span class="sxs-lookup"><span data-stu-id="e1294-305">For example:</span></span>  
  
 <span data-ttu-id="e1294-306">"EnumColumn = 5"</span><span class="sxs-lookup"><span data-stu-id="e1294-306">"EnumColumn = 5"</span></span>  
  
## <a name="parsing-literal-expressions"></a><span data-ttu-id="e1294-307">Analisando expressões literais</span><span class="sxs-lookup"><span data-stu-id="e1294-307">Parsing Literal Expressions</span></span>  
 <span data-ttu-id="e1294-308">Todas as expressões literais devem ser expressos na localidade invariável de cultura.</span><span class="sxs-lookup"><span data-stu-id="e1294-308">All literal expressions must be expressed in the invariant culture locale.</span></span> <span data-ttu-id="e1294-309">Quando `DataSet` analisa e converte expressões literais, ele sempre usa a cultura invariável, não a cultura atual.</span><span class="sxs-lookup"><span data-stu-id="e1294-309">When `DataSet` parses and converts literal expressions, it always uses the invariant culture, not the current culture.</span></span>  
  
 <span data-ttu-id="e1294-310">Literais de cadeia de caracteres são identificados quando há aspas ao redor do valor.</span><span class="sxs-lookup"><span data-stu-id="e1294-310">String literals are identified when there are single quotes surrounding the value.</span></span> <span data-ttu-id="e1294-311">Por exemplo:</span><span class="sxs-lookup"><span data-stu-id="e1294-311">For example:</span></span>  
  
 <span data-ttu-id="e1294-312">'John'</span><span class="sxs-lookup"><span data-stu-id="e1294-312">'John'</span></span>  
  
 <span data-ttu-id="e1294-313">`Boolean` literais são true e false; eles não estão entre aspas em expressões.</span><span class="sxs-lookup"><span data-stu-id="e1294-313">`Boolean` literals are true and false; they are not quoted in expressions.</span></span>  
  
 <span data-ttu-id="e1294-314">`Integer` literais [+-]? [0-9] + são tratados como `System.Int32`, `System.Int64` ou `System.Double`.</span><span class="sxs-lookup"><span data-stu-id="e1294-314">`Integer` literals [+-]?[0-9]+ are treated as `System.Int32`, `System.Int64` or `System.Double`.</span></span> <span data-ttu-id="e1294-315">`System.Double` pode perder precisão dependendo de como o número é.</span><span class="sxs-lookup"><span data-stu-id="e1294-315">`System.Double` can lose precision depending on how large the number is.</span></span> <span data-ttu-id="e1294-316">Por exemplo, se o número no literal é 2147483650, `DataSet` primeiro tentará analisar o número como um `Int32`.</span><span class="sxs-lookup"><span data-stu-id="e1294-316">For example, if the number in the literal is 2147483650, `DataSet` will first attempt to parse the number as an `Int32`.</span></span> <span data-ttu-id="e1294-317">Isso não terá êxito porque o número é muito grande.</span><span class="sxs-lookup"><span data-stu-id="e1294-317">This will not succeed because the number is too large.</span></span> <span data-ttu-id="e1294-318">Nesse caso `DataSet` analisará o número como um `Int64`, que terá êxito.</span><span class="sxs-lookup"><span data-stu-id="e1294-318">In this case `DataSet` will parse the number as an `Int64`, which will succeed.</span></span> <span data-ttu-id="e1294-319">Se o literal era um número maior do que o valor máximo de Int64, `DataSet` analisa a literal usando `Double`.</span><span class="sxs-lookup"><span data-stu-id="e1294-319">If the literal was a number larger than the maximum value of an Int64, `DataSet` will parse the literal using `Double`.</span></span>  
  
 <span data-ttu-id="e1294-320">Literais reais usando a notação científica, como 4.42372E-30, são analisados usando `System.Double`.</span><span class="sxs-lookup"><span data-stu-id="e1294-320">Real literals using scientific notation, such as 4.42372E-30, are parsed using `System.Double`.</span></span>  
  
 <span data-ttu-id="e1294-321">Literais reais sem notação científica, mas com um ponto decimal, são tratados como `System.Decimal`.</span><span class="sxs-lookup"><span data-stu-id="e1294-321">Real literals without scientific notation, but with a decimal point, are treated as `System.Decimal`.</span></span> <span data-ttu-id="e1294-322">Se o número exceder os valores máximo ou mínimos com suporte `System.Decimal`, em seguida, ela é analisada como um `System.Double`.</span><span class="sxs-lookup"><span data-stu-id="e1294-322">If the number exceeds the maximum or minimum values supported by `System.Decimal`, then it is parsed as a `System.Double`.</span></span> <span data-ttu-id="e1294-323">Por exemplo:</span><span class="sxs-lookup"><span data-stu-id="e1294-323">For example:</span></span>  
  
 <span data-ttu-id="e1294-324">142526.144524 será convertido em um `Decimal`.</span><span class="sxs-lookup"><span data-stu-id="e1294-324">142526.144524 will be converted to a `Decimal`.</span></span>  
  
 <span data-ttu-id="e1294-325">345262.78036719560925667 será tratado como um `Double`.</span><span class="sxs-lookup"><span data-stu-id="e1294-325">345262.78036719560925667 will be treated as a `Double`.</span></span>  
  
## <a name="operators"></a><span data-ttu-id="e1294-326">Operadores</span><span class="sxs-lookup"><span data-stu-id="e1294-326">Operators</span></span>  
 <span data-ttu-id="e1294-327">Concatenação é permitida usando booliano AND, OR e não a operadores.</span><span class="sxs-lookup"><span data-stu-id="e1294-327">Concatenation is allowed using Boolean AND, OR, and NOT operators.</span></span> <span data-ttu-id="e1294-328">Você pode usar parênteses para agrupar cláusulas e forçar a precedência.</span><span class="sxs-lookup"><span data-stu-id="e1294-328">You can use parentheses to group clauses and force precedence.</span></span> <span data-ttu-id="e1294-329">O operador AND tem precedência sobre outros operadores.</span><span class="sxs-lookup"><span data-stu-id="e1294-329">The AND operator has precedence over other operators.</span></span> <span data-ttu-id="e1294-330">Por exemplo:</span><span class="sxs-lookup"><span data-stu-id="e1294-330">For example:</span></span>  
  
 <span data-ttu-id="e1294-331">(LastName = 'Smith' ou LastName = 'Jones') E o nome = 'John'</span><span class="sxs-lookup"><span data-stu-id="e1294-331">(LastName = 'Smith' OR LastName = 'Jones') AND FirstName = 'John'</span></span>  
  
 <span data-ttu-id="e1294-332">Quando você cria expressões de comparação, os operadores a seguir são permitidos:</span><span class="sxs-lookup"><span data-stu-id="e1294-332">When you create comparison expressions, the following operators are allowed:</span></span>  
  
 \<  
  
 >  
  
 \<=  
  
 >=  
  
 <>  
  
 =  
  
 <span data-ttu-id="e1294-333">IN</span><span class="sxs-lookup"><span data-stu-id="e1294-333">IN</span></span>  
  
 <span data-ttu-id="e1294-334">COMO</span><span class="sxs-lookup"><span data-stu-id="e1294-334">LIKE</span></span>  
  
 <span data-ttu-id="e1294-335">Também há suporte para os seguintes operadores aritméticos em expressões:</span><span class="sxs-lookup"><span data-stu-id="e1294-335">The following arithmetic operators are also supported in expressions:</span></span>  
  
 <span data-ttu-id="e1294-336">\+ (adição)</span><span class="sxs-lookup"><span data-stu-id="e1294-336">\+ (addition)</span></span>  
  
 <span data-ttu-id="e1294-337">\- (subtração)</span><span class="sxs-lookup"><span data-stu-id="e1294-337">\- (subtraction)</span></span>  
  
 <span data-ttu-id="e1294-338">\* (multiplicação)</span><span class="sxs-lookup"><span data-stu-id="e1294-338">\* (multiplication)</span></span>  
  
 <span data-ttu-id="e1294-339">/ (divisão)</span><span class="sxs-lookup"><span data-stu-id="e1294-339">/ (division)</span></span>  
  
 <span data-ttu-id="e1294-340">% (módulo)</span><span class="sxs-lookup"><span data-stu-id="e1294-340">% (modulus)</span></span>  
  
## <a name="string-operators"></a><span data-ttu-id="e1294-341">Operadores da cadeia de caracteres</span><span class="sxs-lookup"><span data-stu-id="e1294-341">String Operators</span></span>  
 <span data-ttu-id="e1294-342">Para concatenar uma cadeia de caracteres, use o caractere +.</span><span class="sxs-lookup"><span data-stu-id="e1294-342">To concatenate a string, use the + character.</span></span> <span data-ttu-id="e1294-343">O valor da <xref:System.Data.DataSet.CaseSensitive%2A> propriedade o <xref:System.Data.DataSet> classe determina se as comparações de cadeia de caracteres diferenciam maiusculas de minúsculas.</span><span class="sxs-lookup"><span data-stu-id="e1294-343">The value of the <xref:System.Data.DataSet.CaseSensitive%2A> property of the <xref:System.Data.DataSet> class determines whether string comparisons are case-sensitive.</span></span> <span data-ttu-id="e1294-344">No entanto, você pode substituir esse valor com o <xref:System.Data.DataTable.CaseSensitive%2A> propriedade o <xref:System.Data.DataTable> classe.</span><span class="sxs-lookup"><span data-stu-id="e1294-344">However, you can override that value with the <xref:System.Data.DataTable.CaseSensitive%2A> property of the <xref:System.Data.DataTable> class.</span></span>  
  
## <a name="wildcard-characters"></a><span data-ttu-id="e1294-345">Caracteres curinga</span><span class="sxs-lookup"><span data-stu-id="e1294-345">Wildcard Characters</span></span>  
 <span data-ttu-id="e1294-346">Tanto o \* e % pode ser usado de maneira intercambiável para caracteres curinga em uma comparação LIKE.</span><span class="sxs-lookup"><span data-stu-id="e1294-346">Both the \* and % can be used interchangeably for wildcard characters in a LIKE comparison.</span></span> <span data-ttu-id="e1294-347">Se a cadeia de caracteres em uma cláusula LIKE contiver um \* ou %, esses caracteres devem ser colocados entre colchetes ([]).</span><span class="sxs-lookup"><span data-stu-id="e1294-347">If the string in a LIKE clause contains a \* or %, those characters should be enclosed in brackets ([]).</span></span> <span data-ttu-id="e1294-348">Se for um colchete na cláusula, cada caractere de colchete deve ser colocado entre colchetes (por exemplo, [[] ou []]).</span><span class="sxs-lookup"><span data-stu-id="e1294-348">If a bracket is in the clause, each bracket character should be enclosed in brackets (for example [[] or []]).</span></span> <span data-ttu-id="e1294-349">Um caractere curinga é permitido no início e término de um padrão, ou no final de um padrão ou no início de um padrão.</span><span class="sxs-lookup"><span data-stu-id="e1294-349">A wildcard is allowed at the start and end of a pattern, or at the end of a pattern, or at the start of a pattern.</span></span> <span data-ttu-id="e1294-350">Por exemplo:</span><span class="sxs-lookup"><span data-stu-id="e1294-350">For example:</span></span>  
  
 <span data-ttu-id="e1294-351">"Como o nome do item ' * produto\*'"</span><span class="sxs-lookup"><span data-stu-id="e1294-351">"ItemName LIKE '*product\*'"</span></span>  
  
 <span data-ttu-id="e1294-352">"Como o nome do item ' \* produto '"</span><span class="sxs-lookup"><span data-stu-id="e1294-352">"ItemName LIKE '\*product'"</span></span>  
  
 <span data-ttu-id="e1294-353">"ItemName como" 'produto \*'</span><span class="sxs-lookup"><span data-stu-id="e1294-353">"ItemName LIKE 'product\*'"</span></span>  
  
 <span data-ttu-id="e1294-354">Caracteres curinga não são permitidos no meio de uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="e1294-354">Wildcard characters are not allowed in the middle of a string.</span></span> <span data-ttu-id="e1294-355">Por exemplo, ' te \* xt' não é permitido.</span><span class="sxs-lookup"><span data-stu-id="e1294-355">For example, 'te\*xt' is not allowed.</span></span>  
  
## <a name="parentchild-relation-referencing"></a><span data-ttu-id="e1294-356">Referência da relação pai/filho</span><span class="sxs-lookup"><span data-stu-id="e1294-356">Parent/Child Relation Referencing</span></span>  
 <span data-ttu-id="e1294-357">Uma tabela pai pode ser referenciada em uma expressão, acrescentando o nome da coluna com `Parent`.</span><span class="sxs-lookup"><span data-stu-id="e1294-357">A parent table may be referenced in an expression by prepending the column name with `Parent`.</span></span> <span data-ttu-id="e1294-358">Por exemplo, o `Parent.Price` faz referência a coluna da tabela pai denominada `Price`.</span><span class="sxs-lookup"><span data-stu-id="e1294-358">For example, the `Parent.Price` references the parent table's column named `Price`.</span></span>  
  
 <span data-ttu-id="e1294-359">Quando um filho tem mais de uma linha pai, use Parent(RelationName). ColumnName.</span><span class="sxs-lookup"><span data-stu-id="e1294-359">When a child has more than one parent row, use Parent(RelationName).ColumnName.</span></span> <span data-ttu-id="e1294-360">Por exemplo, o Parent(RelationName). Preço faz referência a coluna da tabela pai denominada preço por meio do parceiro.</span><span class="sxs-lookup"><span data-stu-id="e1294-360">For example, the Parent(RelationName).Price references the parent table’s column named Price via the relation.</span></span>  
  
 <span data-ttu-id="e1294-361">Uma coluna em uma tabela filho pode ser referenciada em uma expressão, acrescentando o nome da coluna com `Child`.</span><span class="sxs-lookup"><span data-stu-id="e1294-361">A column in a child table may be referenced in an expression by prepending the column name with `Child`.</span></span> <span data-ttu-id="e1294-362">No entanto, como relações filho podem retornar várias linhas, você deve incluir a referência à coluna filho em uma função de agregação.</span><span class="sxs-lookup"><span data-stu-id="e1294-362">However, because child relationships may return multiple rows, you must include the reference to the child column in an aggregate function.</span></span> <span data-ttu-id="e1294-363">Por exemplo, `Sum(Child.Price)` retorna a soma da coluna nomeada `Price` na tabela filho.</span><span class="sxs-lookup"><span data-stu-id="e1294-363">For example, `Sum(Child.Price)` would return the sum of the column named `Price` in the child table.</span></span>  
  
 <span data-ttu-id="e1294-364">Se uma tabela tiver mais de um filho, a sintaxe é: `Child(RelationName)`.</span><span class="sxs-lookup"><span data-stu-id="e1294-364">If a table has more than one child, the syntax is: `Child(RelationName)`.</span></span> <span data-ttu-id="e1294-365">Por exemplo, se uma tabela tiver duas tabelas filho denominadas `Customers` e `Orders`e o <xref:System.Data.DataRelation> objeto é nomeado `Customers2Orders`, a referência deve ser o seguinte:</span><span class="sxs-lookup"><span data-stu-id="e1294-365">For example, if a table has two child tables named `Customers` and `Orders`, and the <xref:System.Data.DataRelation> object is named `Customers2Orders`, the reference would be as follows:</span></span>  
  
 <span data-ttu-id="e1294-366">Avg(child(Customers2Orders). Quantidade)</span><span class="sxs-lookup"><span data-stu-id="e1294-366">Avg(Child(Customers2Orders).Quantity)</span></span>  
  
## <a name="aggregates"></a><span data-ttu-id="e1294-367">Agregações</span><span class="sxs-lookup"><span data-stu-id="e1294-367">Aggregates</span></span>  
 <span data-ttu-id="e1294-368">Há suporte para os seguintes tipos de agregação:</span><span class="sxs-lookup"><span data-stu-id="e1294-368">The following aggregate types are supported:</span></span>  
  
 <span data-ttu-id="e1294-369">SUM (soma)</span><span class="sxs-lookup"><span data-stu-id="e1294-369">Sum (Sum)</span></span>  
  
 <span data-ttu-id="e1294-370">Média (média)</span><span class="sxs-lookup"><span data-stu-id="e1294-370">Avg (Average)</span></span>  
  
 <span data-ttu-id="e1294-371">Min (mínimo)</span><span class="sxs-lookup"><span data-stu-id="e1294-371">Min (Minimum)</span></span>  
  
 <span data-ttu-id="e1294-372">Max (máximo)</span><span class="sxs-lookup"><span data-stu-id="e1294-372">Max (Maximum)</span></span>  
  
 <span data-ttu-id="e1294-373">Contagem (contagem)</span><span class="sxs-lookup"><span data-stu-id="e1294-373">Count (Count)</span></span>  
  
 <span data-ttu-id="e1294-374">StDev (desvio padrão estatístico)</span><span class="sxs-lookup"><span data-stu-id="e1294-374">StDev (Statistical standard deviation)</span></span>  
  
 <span data-ttu-id="e1294-375">Var (variância estatística).</span><span class="sxs-lookup"><span data-stu-id="e1294-375">Var (Statistical variance).</span></span>  
  
 <span data-ttu-id="e1294-376">Agregações normalmente são executadas ao longo de relações.</span><span class="sxs-lookup"><span data-stu-id="e1294-376">Aggregates are ordinarily performed along relationships.</span></span> <span data-ttu-id="e1294-377">Crie uma expressão de agregação usando uma das funções listadas anteriormente e uma coluna de tabela filho conforme detalhado na pai/filho de relação de referência que foi discutido anteriormente.</span><span class="sxs-lookup"><span data-stu-id="e1294-377">Create an aggregate expression by using one of the functions listed earlier and a child table column as detailed in Parent/Child Relation Referencing that was discussed earlier.</span></span> <span data-ttu-id="e1294-378">Por exemplo:</span><span class="sxs-lookup"><span data-stu-id="e1294-378">For example:</span></span>  
  
 <span data-ttu-id="e1294-379">Avg(child.Price)</span><span class="sxs-lookup"><span data-stu-id="e1294-379">Avg(Child.Price)</span></span>  
  
 <span data-ttu-id="e1294-380">Avg(child(Orders2Details). Preço)</span><span class="sxs-lookup"><span data-stu-id="e1294-380">Avg(Child(Orders2Details).Price)</span></span>  
  
 <span data-ttu-id="e1294-381">Uma agregação também pode ser executada em uma única tabela.</span><span class="sxs-lookup"><span data-stu-id="e1294-381">An aggregate can also be performed on a single table.</span></span> <span data-ttu-id="e1294-382">Por exemplo, para criar um resumo dos valores em uma coluna chamada "Price":</span><span class="sxs-lookup"><span data-stu-id="e1294-382">For example, to create a summary of figures in a column named "Price":</span></span>  
  
 <span data-ttu-id="e1294-383">Sum(Price)</span><span class="sxs-lookup"><span data-stu-id="e1294-383">Sum(Price)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e1294-384">Se você usar uma única tabela para criar uma agregação, não haveria nenhuma funcionalidade Agrupar por.</span><span class="sxs-lookup"><span data-stu-id="e1294-384">If you use a single table to create an aggregate, there would be no group-by functionality.</span></span> <span data-ttu-id="e1294-385">Em vez disso, todas as linhas exibirá o mesmo valor na coluna.</span><span class="sxs-lookup"><span data-stu-id="e1294-385">Instead, all rows would display the same value in the column.</span></span>  
  
 <span data-ttu-id="e1294-386">Se uma tabela não tem linhas, as funções de agregação retornará `null`.</span><span class="sxs-lookup"><span data-stu-id="e1294-386">If a table has no rows, the aggregate functions will return `null`.</span></span>  
  
 <span data-ttu-id="e1294-387">Tipos de dados sempre podem ser determinados examinando o <xref:System.Data.DataColumn.DataType%2A> propriedade de uma coluna.</span><span class="sxs-lookup"><span data-stu-id="e1294-387">Data types can always be determined by examining the <xref:System.Data.DataColumn.DataType%2A> property of a column.</span></span> <span data-ttu-id="e1294-388">Você também pode converter tipos de dados usando a função Convert, mostrada na seção a seguir.</span><span class="sxs-lookup"><span data-stu-id="e1294-388">You can also convert data types using the Convert function, shown in the following section.</span></span>  
  
 <span data-ttu-id="e1294-389">Uma agregação só pode ser aplicada a uma única coluna e outras expressões não podem ser usados dentro de agregação.</span><span class="sxs-lookup"><span data-stu-id="e1294-389">An aggregate can only be applied to a single column and no other expressions can be used inside the aggregate.</span></span>  
  
## <a name="functions"></a><span data-ttu-id="e1294-390">Funções</span><span class="sxs-lookup"><span data-stu-id="e1294-390">Functions</span></span>  
 <span data-ttu-id="e1294-391">Também há suporte para as seguintes funções:</span><span class="sxs-lookup"><span data-stu-id="e1294-391">The following functions are also supported:</span></span>  
  
 `CONVERT`  
  
|||  
|-|-|  
|<span data-ttu-id="e1294-392">Descrição</span><span class="sxs-lookup"><span data-stu-id="e1294-392">Description</span></span>|<span data-ttu-id="e1294-393">Converte a expressão específica para um tipo especificado do Framework .NET.</span><span class="sxs-lookup"><span data-stu-id="e1294-393">Converts particular expression to a specified .NET Framework Type.</span></span>|  
|<span data-ttu-id="e1294-394">Sintaxe</span><span class="sxs-lookup"><span data-stu-id="e1294-394">Syntax</span></span>|<span data-ttu-id="e1294-395">Convert(`expression`, `type`)</span><span class="sxs-lookup"><span data-stu-id="e1294-395">Convert(`expression`, `type`)</span></span>|  
|<span data-ttu-id="e1294-396">Arguments</span><span class="sxs-lookup"><span data-stu-id="e1294-396">Arguments</span></span>|<span data-ttu-id="e1294-397">`expression` -- A expressão a ser convertida.</span><span class="sxs-lookup"><span data-stu-id="e1294-397">`expression` -- The expression to convert.</span></span><br /><br /> <span data-ttu-id="e1294-398">`type` -- O tipo do .NET Framework para o qual o valor será convertido.</span><span class="sxs-lookup"><span data-stu-id="e1294-398">`type` -- The .NET Framework type to which the value will be converted.</span></span>|  
  
 <span data-ttu-id="e1294-399">Example: myDataColumn.Expression="Convert(total, 'System.Int32')"</span><span class="sxs-lookup"><span data-stu-id="e1294-399">Example: myDataColumn.Expression="Convert(total, 'System.Int32')"</span></span>  
  
 <span data-ttu-id="e1294-400">Todas as conversões são válidas com as seguintes exceções: `Boolean` pode ser forçado para e de `Byte`, `SByte`, `Int16`, `Int32`, `Int64`, `UInt16`, `UInt32`, `UInt64`, `String` e em si só.</span><span class="sxs-lookup"><span data-stu-id="e1294-400">All conversions are valid with the following exceptions: `Boolean` can be coerced to and from `Byte`, `SByte`, `Int16`, `Int32`, `Int64`, `UInt16`, `UInt32`, `UInt64`, `String` and itself only.</span></span> <span data-ttu-id="e1294-401">`Char` pode ser forçado para e de `Int32`, `UInt32`, `String`e em si só.</span><span class="sxs-lookup"><span data-stu-id="e1294-401">`Char` can be coerced to and from `Int32`, `UInt32`, `String`, and itself only.</span></span> <span data-ttu-id="e1294-402">`DateTime` pode ser forçado para e de `String` e em si só.</span><span class="sxs-lookup"><span data-stu-id="e1294-402">`DateTime` can be coerced to and from `String` and itself only.</span></span> <span data-ttu-id="e1294-403">`TimeSpan` pode ser forçado para e de `String` e em si só.</span><span class="sxs-lookup"><span data-stu-id="e1294-403">`TimeSpan` can be coerced to and from `String` and itself only.</span></span>  
  
 `LEN`  
  
|||  
|-|-|  
|<span data-ttu-id="e1294-404">Descrição</span><span class="sxs-lookup"><span data-stu-id="e1294-404">Description</span></span>|<span data-ttu-id="e1294-405">Obtém o comprimento de uma cadeia de caracteres</span><span class="sxs-lookup"><span data-stu-id="e1294-405">Gets the length of a string</span></span>|  
|<span data-ttu-id="e1294-406">Sintaxe</span><span class="sxs-lookup"><span data-stu-id="e1294-406">Syntax</span></span>|<span data-ttu-id="e1294-407">LEN(`expression`)</span><span class="sxs-lookup"><span data-stu-id="e1294-407">LEN(`expression`)</span></span>|  
|<span data-ttu-id="e1294-408">Arguments</span><span class="sxs-lookup"><span data-stu-id="e1294-408">Arguments</span></span>|<span data-ttu-id="e1294-409">`expression` -- A cadeia de caracteres a ser avaliada.</span><span class="sxs-lookup"><span data-stu-id="e1294-409">`expression` -- The string to be evaluated.</span></span>|  
  
 <span data-ttu-id="e1294-410">Example: myDataColumn.Expression="Len(ItemName)"</span><span class="sxs-lookup"><span data-stu-id="e1294-410">Example: myDataColumn.Expression="Len(ItemName)"</span></span>  
  
 `ISNULL`  
  
|||  
|-|-|  
|<span data-ttu-id="e1294-411">Descrição</span><span class="sxs-lookup"><span data-stu-id="e1294-411">Description</span></span>|<span data-ttu-id="e1294-412">Verifica uma expressão e retorna a expressão marcada ou um valor de substituição.</span><span class="sxs-lookup"><span data-stu-id="e1294-412">Checks an expression and either returns the checked expression or a replacement value.</span></span>|  
|<span data-ttu-id="e1294-413">Sintaxe</span><span class="sxs-lookup"><span data-stu-id="e1294-413">Syntax</span></span>|<span data-ttu-id="e1294-414">ISNULL(`expression`, `replacementvalue`)</span><span class="sxs-lookup"><span data-stu-id="e1294-414">ISNULL(`expression`, `replacementvalue`)</span></span>|  
|<span data-ttu-id="e1294-415">Arguments</span><span class="sxs-lookup"><span data-stu-id="e1294-415">Arguments</span></span>|<span data-ttu-id="e1294-416">`expression` -- A expressão para verificar.</span><span class="sxs-lookup"><span data-stu-id="e1294-416">`expression` -- The expression to check.</span></span><br /><br /> <span data-ttu-id="e1294-417">`replacementvalue` -- Se a expressão é `null`, `replacementvalue` será retornado.</span><span class="sxs-lookup"><span data-stu-id="e1294-417">`replacementvalue` -- If expression is `null`, `replacementvalue` is returned.</span></span>|  
  
 <span data-ttu-id="e1294-418">Example: myDataColumn.Expression="IsNull(price, -1)"</span><span class="sxs-lookup"><span data-stu-id="e1294-418">Example: myDataColumn.Expression="IsNull(price, -1)"</span></span>  
  
 `IIF`  
  
|||  
|-|-|  
|<span data-ttu-id="e1294-419">Descrição</span><span class="sxs-lookup"><span data-stu-id="e1294-419">Description</span></span>|<span data-ttu-id="e1294-420">Obtém um de dois valores, dependendo do resultado de uma expressão lógica.</span><span class="sxs-lookup"><span data-stu-id="e1294-420">Gets one of two values depending on the result of a logical expression.</span></span>|  
|<span data-ttu-id="e1294-421">Sintaxe</span><span class="sxs-lookup"><span data-stu-id="e1294-421">Syntax</span></span>|<span data-ttu-id="e1294-422">IIF(`expr`, `truepart`, `falsepart`)</span><span class="sxs-lookup"><span data-stu-id="e1294-422">IIF(`expr`, `truepart`, `falsepart`)</span></span>|  
|<span data-ttu-id="e1294-423">Arguments</span><span class="sxs-lookup"><span data-stu-id="e1294-423">Arguments</span></span>|<span data-ttu-id="e1294-424">`expr` -- A expressão a ser avaliada.</span><span class="sxs-lookup"><span data-stu-id="e1294-424">`expr` -- The expression to evaluate.</span></span><br /><br /> <span data-ttu-id="e1294-425">`truepart` – O valor a ser retornado se a expressão for verdadeira.</span><span class="sxs-lookup"><span data-stu-id="e1294-425">`truepart` -- The value to return if the expression is true.</span></span><br /><br /> <span data-ttu-id="e1294-426">`falsepart` -- O valor a ser retornado se a expressão for falsa.</span><span class="sxs-lookup"><span data-stu-id="e1294-426">`falsepart` -- The value to return if the expression is false.</span></span>|  
  
 <span data-ttu-id="e1294-427">Exemplo: myDataColumn.Expression = "IIF (total > 1000 'cara', 'Prezado')</span><span class="sxs-lookup"><span data-stu-id="e1294-427">Example: myDataColumn.Expression = "IIF(total>1000, 'expensive', 'dear')</span></span>  
  
 `TRIM`  
  
|||  
|-|-|  
|<span data-ttu-id="e1294-428">Descrição</span><span class="sxs-lookup"><span data-stu-id="e1294-428">Description</span></span>|<span data-ttu-id="e1294-429">Remove todos os esquerda e à direita em branco caracteres \r, \n, \t, ' '</span><span class="sxs-lookup"><span data-stu-id="e1294-429">Removes all leading and trailing blank characters like \r, \n, \t, ' '</span></span>|  
|<span data-ttu-id="e1294-430">Sintaxe</span><span class="sxs-lookup"><span data-stu-id="e1294-430">Syntax</span></span>|<span data-ttu-id="e1294-431">TRIM(`expression`)</span><span class="sxs-lookup"><span data-stu-id="e1294-431">TRIM(`expression`)</span></span>|  
|<span data-ttu-id="e1294-432">Arguments</span><span class="sxs-lookup"><span data-stu-id="e1294-432">Arguments</span></span>|<span data-ttu-id="e1294-433">`expression` -- A expressão para cortar.</span><span class="sxs-lookup"><span data-stu-id="e1294-433">`expression` -- The expression to trim.</span></span>|  
  
 `SUBSTRING`  
  
|||  
|-|-|  
|<span data-ttu-id="e1294-434">Descrição</span><span class="sxs-lookup"><span data-stu-id="e1294-434">Description</span></span>|<span data-ttu-id="e1294-435">Obtém uma subcadeia de caracteres de um comprimento especificado, começando em um ponto especificado na cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="e1294-435">Gets a sub-string of a specified length, starting at a specified point in the string.</span></span>|  
|<span data-ttu-id="e1294-436">Sintaxe</span><span class="sxs-lookup"><span data-stu-id="e1294-436">Syntax</span></span>|<span data-ttu-id="e1294-437">SUBSTRING(`expression`, `start`, `length`)</span><span class="sxs-lookup"><span data-stu-id="e1294-437">SUBSTRING(`expression`, `start`, `length`)</span></span>|  
|<span data-ttu-id="e1294-438">Arguments</span><span class="sxs-lookup"><span data-stu-id="e1294-438">Arguments</span></span>|<span data-ttu-id="e1294-439">`expression` -- A cadeia de caracteres de origem para a subcadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="e1294-439">`expression` -- The source string for the substring.</span></span><br /><br /> <span data-ttu-id="e1294-440">`start` -Inteiro que especifica onde a subcadeia de caracteres começa.</span><span class="sxs-lookup"><span data-stu-id="e1294-440">`start` -- Integer that specifies where the substring starts.</span></span><br /><br /> <span data-ttu-id="e1294-441">`length` -Inteiro que especifica o comprimento da subcadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="e1294-441">`length` -- Integer that specifies the length of the substring.</span></span>|  
  
 <span data-ttu-id="e1294-442">Exemplo: myDataColumn.Expression = "SUBSTRING (telefone, 7, 8)"</span><span class="sxs-lookup"><span data-stu-id="e1294-442">Example: myDataColumn.Expression = "SUBSTRING(phone, 7, 8)"</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e1294-443">Você pode redefinir o <xref:System.Data.DataColumn.Expression%2A> propriedade atribuindo um valor nulo ou cadeia de caracteres vazia.</span><span class="sxs-lookup"><span data-stu-id="e1294-443">You can reset the <xref:System.Data.DataColumn.Expression%2A> property by assigning it a null value or empty string.</span></span> <span data-ttu-id="e1294-444">Se um valor padrão é definido na coluna de expressão, todas as linhas previamente preenchidas recebem o valor padrão após a <xref:System.Data.DataColumn.Expression%2A> propriedade será redefinida.</span><span class="sxs-lookup"><span data-stu-id="e1294-444">If a default value is set on the expression column, all previously filled rows are assigned the default value after the <xref:System.Data.DataColumn.Expression%2A> property is reset.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1294-445">O exemplo a seguir cria três colunas em um <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="e1294-445">The following example creates three columns in a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="e1294-446">As segunda e terceira colunas contêm expressões; a segunda calcula o imposto usando uma taxa de imposto de variável, e a terceira adiciona o resultado do cálculo para o valor da primeira coluna.</span><span class="sxs-lookup"><span data-stu-id="e1294-446">The second and third columns contain expressions; the second calculates tax using a variable tax rate, and the third adds the result of the calculation to the value of the first column.</span></span> <span data-ttu-id="e1294-447">A tabela resultante é exibida em um <xref:System.Windows.Forms.DataGrid> controle.</span><span class="sxs-lookup"><span data-stu-id="e1294-447">The resulting table is displayed in a <xref:System.Windows.Forms.DataGrid> control.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Expression Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Expression Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Expression Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Expression Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e1294-448">A propriedade <see cref="P:System.Data.DataColumn.AutoIncrement" /> ou <see cref="P:System.Data.DataColumn.Unique" /> é definida como <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="e1294-448">The <see cref="P:System.Data.DataColumn.AutoIncrement" /> or <see cref="P:System.Data.DataColumn.Unique" /> property is set to <see langword="true" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="e1294-449">Quando você usa a função CONVERT, a expressão é avaliada como uma cadeia de caracteres, mas a cadeia de caracteres não contém uma representação que pode ser convertida para o parâmetro de tipo.</span><span class="sxs-lookup"><span data-stu-id="e1294-449">When you are using the CONVERT function, the expression evaluates to a string, but the string does not contain a representation that can be converted to the type parameter.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="e1294-450">Quando você usa a função CONVERT, a conversão solicitada não é possível.</span><span class="sxs-lookup"><span data-stu-id="e1294-450">When you are using the CONVERT function, the requested cast is not possible.</span></span> <span data-ttu-id="e1294-451">Consulte a função Conversão na seção a seguir para obter informações detalhadas sobre as possíveis conversões.</span><span class="sxs-lookup"><span data-stu-id="e1294-451">See the Conversion function in the following section for detailed information about possible casts.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e1294-452">Quando você usa a função SUBSTRING, o argumento de início está fora do intervalo.</span><span class="sxs-lookup"><span data-stu-id="e1294-452">When you use the SUBSTRING function, the start argument is out of range.</span></span>  
  
 <span data-ttu-id="e1294-453">-Ou-</span><span class="sxs-lookup"><span data-stu-id="e1294-453">-Or-</span></span>  
  
 <span data-ttu-id="e1294-454">Quando você usa a função SUBSTRING, o argumento de tamanho está fora do intervalo.</span><span class="sxs-lookup"><span data-stu-id="e1294-454">When you use the SUBSTRING function, the length argument is out of range.</span></span></exception>
        <exception cref="T:System.Exception"><span data-ttu-id="e1294-455">Quando você usa a função LEN ou TRIM, a expressão não é avaliada como uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="e1294-455">When you use the LEN function or the TRIM function, the expression does not evaluate to a string.</span></span> <span data-ttu-id="e1294-456">Isso inclui as expressões avaliadas como <see cref="T:System.Char" />.</span><span class="sxs-lookup"><span data-stu-id="e1294-456">This includes expressions that evaluate to <see cref="T:System.Char" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ExtendedProperties">
      <MemberSignature Language="C#" Value="public System.Data.PropertyCollection ExtendedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.PropertyCollection ExtendedProperties" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.ExtendedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExtendedProperties As PropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::PropertyCollection ^ ExtendedProperties { System::Data::PropertyCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.PropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1294-457">Obtém a coleção de informações de usuário personalizadas associadas a um <see cref="T:System.Data.DataColumn" />.</span><span class="sxs-lookup"><span data-stu-id="e1294-457">Gets the collection of custom user information associated with a <see cref="T:System.Data.DataColumn" />.</span></span></summary>
        <value><span data-ttu-id="e1294-458">Um <see cref="T:System.Data.PropertyCollection" /> das informações personalizadas.</span><span class="sxs-lookup"><span data-stu-id="e1294-458">A <see cref="T:System.Data.PropertyCollection" /> of custom information.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1294-459">O <xref:System.Data.DataColumn.ExtendedProperties%2A> propriedade permite que você armazene informações personalizadas com o objeto.</span><span class="sxs-lookup"><span data-stu-id="e1294-459">The <xref:System.Data.DataColumn.ExtendedProperties%2A> property lets you store custom information with the object.</span></span> <span data-ttu-id="e1294-460">Por exemplo, você pode armazenar um tempo quando os dados devem ser atualizados.</span><span class="sxs-lookup"><span data-stu-id="e1294-460">For example, you may store a time when the data should be refreshed.</span></span>  
  
 <span data-ttu-id="e1294-461">Propriedades estendidas devem ser do tipo <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="e1294-461">Extended properties must be of type <xref:System.String>.</span></span> <span data-ttu-id="e1294-462">Propriedades que não são do tipo <xref:System.String> não são mantidos quando o <xref:System.Data.DataColumn> é gravada como XML.</span><span class="sxs-lookup"><span data-stu-id="e1294-462">Properties that are not of type <xref:System.String> are not persisted when the <xref:System.Data.DataColumn> is written as XML.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1294-463">O exemplo a seguir adiciona uma propriedade personalizada para o <xref:System.Data.PropertyCollection> retornado pelo <xref:System.Data.DataColumn.ExtendedProperties%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="e1294-463">The following example adds a custom property to the <xref:System.Data.PropertyCollection> returned by the <xref:System.Data.DataColumn.ExtendedProperties%2A> property.</span></span> <span data-ttu-id="e1294-464">O segundo exemplo recupera a propriedade personalizada.</span><span class="sxs-lookup"><span data-stu-id="e1294-464">The second example retrieves the custom property.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ExtendedProperties Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ExtendedProperties Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ExtendedProperties Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ExtendedProperties Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.PropertyCollection" />
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public int MaxLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.MaxLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLength { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1294-465">Obtém ou define o tamanho máximo de uma coluna de texto.</span><span class="sxs-lookup"><span data-stu-id="e1294-465">Gets or sets the maximum length of a text column.</span></span></summary>
        <value><span data-ttu-id="e1294-466">O tamanho máximo da coluna em caracteres.</span><span class="sxs-lookup"><span data-stu-id="e1294-466">The maximum length of the column in characters.</span></span> <span data-ttu-id="e1294-467">Se a coluna não tiver nenhum tamanho máximo, o valor será -1 (padrão).</span><span class="sxs-lookup"><span data-stu-id="e1294-467">If the column has no maximum length, the value is –1 (default).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1294-468">O <xref:System.Data.DataColumn.MaxLength%2A> propriedade é ignorada para colunas de texto não.</span><span class="sxs-lookup"><span data-stu-id="e1294-468">The <xref:System.Data.DataColumn.MaxLength%2A> property is ignored for non-text columns.</span></span> <span data-ttu-id="e1294-469">Um <xref:System.ArgumentException> exceção é gerada se você atribuir <xref:System.Data.DataColumn.MaxLength%2A> para uma coluna de cadeia de caracteres não.</span><span class="sxs-lookup"><span data-stu-id="e1294-469">A <xref:System.ArgumentException> exception is raised if you assign <xref:System.Data.DataColumn.MaxLength%2A> to a non-string column.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1294-470">Obtém ou define o namespace do <see cref="T:System.Data.DataColumn" />.</span><span class="sxs-lookup"><span data-stu-id="e1294-470">Gets or sets the namespace of the <see cref="T:System.Data.DataColumn" />.</span></span></summary>
        <value><span data-ttu-id="e1294-471">O namespace do <see cref="T:System.Data.DataColumn" />.</span><span class="sxs-lookup"><span data-stu-id="e1294-471">The namespace of the <see cref="T:System.Data.DataColumn" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1294-472">O <xref:System.Data.DataColumn.Namespace%2A> propriedade é usada ao ler e gravar um XML de documentos em um <xref:System.Data.DataTable> no <xref:System.Data.DataSet> usando o <xref:System.Data.DataSet.ReadXml%2A>, <xref:System.Data.DataSet.WriteXml%2A>, <xref:System.Data.DataSet.ReadXmlSchema%2A>, ou <xref:System.Data.DataSet.WriteXmlSchema%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="e1294-472">The <xref:System.Data.DataColumn.Namespace%2A> property is used when reading and writing an XML document into a <xref:System.Data.DataTable> in the <xref:System.Data.DataSet> using the <xref:System.Data.DataSet.ReadXml%2A>, <xref:System.Data.DataSet.WriteXml%2A>, <xref:System.Data.DataSet.ReadXmlSchema%2A>, or <xref:System.Data.DataSet.WriteXmlSchema%2A> methods.</span></span>  
  
 <span data-ttu-id="e1294-473">O namespace de um documento XML é usado para definir o escopo de atributos e elementos ao ler no XML um <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="e1294-473">The namespace of an XML document is used to scope XML attributes and elements when read into a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="e1294-474">Por exemplo, um <xref:System.Data.DataSet> contém um esquema de leitura de um documento com o namespace "myCompany", e é feita uma tentativa de ler dados (com o <xref:System.Data.DataSet.ReadXml%2A> método) de um documento que tem o namespace "theirCompany".</span><span class="sxs-lookup"><span data-stu-id="e1294-474">For example, a <xref:System.Data.DataSet> contains a schema read from a document that has the namespace "myCompany," and an attempt is made to read data (with the <xref:System.Data.DataSet.ReadXml%2A> method) from a document that has the namespace "theirCompany."</span></span> <span data-ttu-id="e1294-475">Todos os dados que não correspondem ao esquema existente serão ignorados.</span><span class="sxs-lookup"><span data-stu-id="e1294-475">Any data that does not correspond to the existing schema will be ignored.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e1294-476">O namespace já tem dados.</span><span class="sxs-lookup"><span data-stu-id="e1294-476">The namespace already has data.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanging (System.ComponentModel.PropertyChangedEventArgs pcevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanging(class System.ComponentModel.PropertyChangedEventArgs pcevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyChanging (pcevent As PropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyChanging(System::ComponentModel::PropertyChangedEventArgs ^ pcevent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcevent" Type="System.ComponentModel.PropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="pcevent"><span data-ttu-id="e1294-477">Referência de parâmetro.</span><span class="sxs-lookup"><span data-stu-id="e1294-477">Parameter reference.</span></span></param>
        <summary><span data-ttu-id="e1294-478">Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</span><span class="sxs-lookup"><span data-stu-id="e1294-478">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ordinal">
      <MemberSignature Language="C#" Value="public int Ordinal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Ordinal" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Ordinal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Ordinal As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Ordinal { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1294-479">Obtém a posição (de base zero) da coluna na coleção <see cref="T:System.Data.DataColumnCollection" />.</span><span class="sxs-lookup"><span data-stu-id="e1294-479">Gets the (zero-based) position of the column in the <see cref="T:System.Data.DataColumnCollection" /> collection.</span></span></summary>
        <value><span data-ttu-id="e1294-480">A posição da coluna.</span><span class="sxs-lookup"><span data-stu-id="e1294-480">The position of the column.</span></span> <span data-ttu-id="e1294-481">Obterá -1 se a coluna não for membro de uma coleção.</span><span class="sxs-lookup"><span data-stu-id="e1294-481">Gets -1 if the column is not a member of a collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e1294-482">O exemplo a seguir retorna o tipo de dados, ordinal e nome de coluna de uma coluna.</span><span class="sxs-lookup"><span data-stu-id="e1294-482">The following example returns the column name, ordinal, and data type of a column.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Ordinal Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Ordinal Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Ordinal Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Ordinal Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public string Prefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Prefix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1294-483">Obtém ou define um prefixo XML que cria o alias do namespace do <see cref="T:System.Data.DataTable" />.</span><span class="sxs-lookup"><span data-stu-id="e1294-483">Gets or sets an XML prefix that aliases the namespace of the <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <value><span data-ttu-id="e1294-484">O prefixo XML para o namespace <see cref="T:System.Data.DataTable" />.</span><span class="sxs-lookup"><span data-stu-id="e1294-484">The XML prefix for the <see cref="T:System.Data.DataTable" /> namespace.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1294-485">O <xref:System.Data.DataTable.Prefix%2A> é usado em um documento XML para identificar elementos que pertencem ao namespace para um <xref:System.Data.DataSet> objeto (conforme definido pelo <xref:System.Data.DataSet.Namespace%2A> propriedade).</span><span class="sxs-lookup"><span data-stu-id="e1294-485">The <xref:System.Data.DataTable.Prefix%2A> is used throughout an XML document to identify elements which belong to the namespace for a <xref:System.Data.DataSet> object (as set by the <xref:System.Data.DataSet.Namespace%2A> property).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaisePropertyChanging">
      <MemberSignature Language="C#" Value="protected internal void RaisePropertyChanging (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void RaisePropertyChanging(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.RaisePropertyChanging(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub RaisePropertyChanging (name As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void RaisePropertyChanging(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e1294-486">Referência de parâmetro.</span><span class="sxs-lookup"><span data-stu-id="e1294-486">Parameter reference.</span></span></param>
        <summary><span data-ttu-id="e1294-487">Esse membro oferece suporte à infraestrutura .NET Framework e não se destina à utilização diretamente no seu código.</span><span class="sxs-lookup"><span data-stu-id="e1294-487">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1294-488">Obtém ou define um valor que indica se a coluna permite alterações assim que uma linha tiver sido adicionada à tabela.</span><span class="sxs-lookup"><span data-stu-id="e1294-488">Gets or sets a value that indicates whether the column allows for changes as soon as a row has been added to the table.</span></span></summary>
        <value>
          <span data-ttu-id="e1294-489"><see langword="true" /> se a coluna for somente leitura; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e1294-489"><see langword="true" /> if the column is read only; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e1294-490">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e1294-490">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e1294-491">O exemplo a seguir cria um <xref:System.Data.DataColumn> e define seu <xref:System.Data.DataColumn.ReadOnly%2A> propriedade `true`.</span><span class="sxs-lookup"><span data-stu-id="e1294-491">The following example creates a <xref:System.Data.DataColumn> and sets its <xref:System.Data.DataColumn.ReadOnly%2A> property `true`.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ReadOnly Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ReadOnly Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ReadOnly Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ReadOnly Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e1294-492">A propriedade é definida como <see langword="false" /> em uma coluna computada.</span><span class="sxs-lookup"><span data-stu-id="e1294-492">The property is set to <see langword="false" /> on a computed column.</span></span></exception>
        <altmember cref="P:System.Data.DataColumn.Unique" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
      </Docs>
    </Member>
    <Member MemberName="SetOrdinal">
      <MemberSignature Language="C#" Value="public void SetOrdinal (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOrdinal(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.SetOrdinal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOrdinal (ordinal As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOrdinal(int ordinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="e1294-493">O ordinal especificado.</span><span class="sxs-lookup"><span data-stu-id="e1294-493">The specified ordinal.</span></span></param>
        <summary><span data-ttu-id="e1294-494">Altera o ordinal ou a posição do <see cref="T:System.Data.DataColumn" /> para o ordinal ou a posição especificada.</span><span class="sxs-lookup"><span data-stu-id="e1294-494">Changes the ordinal or position of the <see cref="T:System.Data.DataColumn" /> to the specified ordinal or position.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1294-495">Altera o ordinal ou a posição do <xref:System.Data.DataColumn> para o ordinal ou a posição especificada.</span><span class="sxs-lookup"><span data-stu-id="e1294-495">Changes the ordinal or position of the <xref:System.Data.DataColumn> to the specified ordinal or position.</span></span> <span data-ttu-id="e1294-496">Se ordinal é menor que 0 ou maior que o número existente de colunas – 1 (maior que o número ordinal da última coluna), em seguida, inválido <xref:System.ArgumentException> é gerada.</span><span class="sxs-lookup"><span data-stu-id="e1294-496">If ordinal is less than 0 or greater than the existing number of columns – 1 (greater than the ordinal of the last column) then an Invalid <xref:System.ArgumentException> is thrown.</span></span>  
  
 <span data-ttu-id="e1294-497">Quando você altera o ordinal da coluna, a coluna é movida para a nova posição na coleção de colunas.</span><span class="sxs-lookup"><span data-stu-id="e1294-497">When you change a column’s ordinal, the column is moved to the new position in the collection of columns.</span></span> <span data-ttu-id="e1294-498">As colunas entre o ordinal anterior e novo serão renumeradas para ajustar o ordinal de uma coluna nova.</span><span class="sxs-lookup"><span data-stu-id="e1294-498">Any columns between the previous and new ordinal will be renumbered, to adjust for a column's new ordinal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="public System.Data.DataTable Table { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataTable Table" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Table" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Table As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataTable ^ Table { System::Data::DataTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1294-499">Obtém o <see cref="T:System.Data.DataTable" /> ao qual a coluna pertence.</span><span class="sxs-lookup"><span data-stu-id="e1294-499">Gets the <see cref="T:System.Data.DataTable" /> to which the column belongs to.</span></span></summary>
        <value><span data-ttu-id="e1294-500">O <see cref="T:System.Data.DataTable" /> ao qual o <see cref="T:System.Data.DataColumn" /> pertence.</span><span class="sxs-lookup"><span data-stu-id="e1294-500">The <see cref="T:System.Data.DataTable" /> that the <see cref="T:System.Data.DataColumn" /> belongs to.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e1294-501">O exemplo a seguir retorna a tabela pai de um <xref:System.Data.DataColumn> por meio de seu <xref:System.Data.DataColumn.Table%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="e1294-501">The following example returns the parent table of a <xref:System.Data.DataColumn> through its <xref:System.Data.DataColumn.Table%2A> property.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Table Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Table Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Table Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Table Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataTable" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e1294-502">Obtém o <see cref="P:System.Data.DataColumn.Expression" /> da coluna, se houver.</span><span class="sxs-lookup"><span data-stu-id="e1294-502">Gets the <see cref="P:System.Data.DataColumn.Expression" /> of the column, if one exists.</span></span></summary>
        <returns><span data-ttu-id="e1294-503">O valor <see cref="P:System.Data.DataColumn.Expression" />, se a propriedade estiver definida; caso contrário, a propriedade <see cref="P:System.Data.DataColumn.ColumnName" />.</span><span class="sxs-lookup"><span data-stu-id="e1294-503">The <see cref="P:System.Data.DataColumn.Expression" /> value, if the property is set; otherwise, the <see cref="P:System.Data.DataColumn.ColumnName" /> property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e1294-504">O exemplo a seguir usa o <xref:System.Data.DataColumn.ToString%2A> propriedade para retornar a cadeia de caracteres padrão de cada membro de uma coleção de <xref:System.Data.DataColumn> objetos.</span><span class="sxs-lookup"><span data-stu-id="e1294-504">The following example uses the <xref:System.Data.DataColumn.ToString%2A> property to return the default string of each member of a collection of <xref:System.Data.DataColumn> objects.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ToString Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ToString Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ToString Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ToString Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
      </Docs>
    </Member>
    <Member MemberName="Unique">
      <MemberSignature Language="C#" Value="public bool Unique { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Unique" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Unique" />
      <MemberSignature Language="VB.NET" Value="Public Property Unique As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Unique { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1294-505">Obtém ou define um valor que indica se os valores em cada linha da coluna devem ser exclusivos.</span><span class="sxs-lookup"><span data-stu-id="e1294-505">Gets or sets a value that indicates whether the values in each row of the column must be unique.</span></span></summary>
        <value>
          <span data-ttu-id="e1294-506"><see langword="true" /> se o valor deve ser exclusivo; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e1294-506"><see langword="true" /> if the value must be unique; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e1294-507">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e1294-507">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1294-508">Assim que essa propriedade é alterada de false para true, uma restrição exclusiva será criada nessa coluna para certificar-se de que os valores sejam exclusivos.</span><span class="sxs-lookup"><span data-stu-id="e1294-508">As soon as this property is changed from false to true, a unique constraint will be created on this column to make sure that values are unique.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1294-509">O exemplo a seguir cria novos <xref:System.Data.DataColumn>, define suas propriedades e o adiciona à coleção de colunas da tabela.</span><span class="sxs-lookup"><span data-stu-id="e1294-509">The following example creates new <xref:System.Data.DataColumn>, sets its properties, and adds it to a table's columns collection.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Unique Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Unique Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Unique Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Unique Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e1294-510">A coluna é uma coluna calculada.</span><span class="sxs-lookup"><span data-stu-id="e1294-510">The column is a calculated column.</span></span></exception>
        <altmember cref="P:System.Data.DataColumn.AllowDBNull" />
        <altmember cref="T:System.Data.UniqueConstraint" />
        <altmember cref="P:System.Data.DataTable.Constraints" />
      </Docs>
    </Member>
  </Members>
</Type>