<Type Name="EnumerableRowCollectionExtensions" FullName="System.Data.EnumerableRowCollectionExtensions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="26bd4855fa1d181009015565070f25b89e8879ad" />
    <Meta Name="ms.sourcegitcommit" Value="1b899505ed6d42225f2b3c9150bfdc080d0d1f9b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/28/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class EnumerableRowCollectionExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit EnumerableRowCollectionExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.EnumerableRowCollectionExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module EnumerableRowCollectionExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class EnumerableRowCollectionExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="41a1b-101">Contém os métodos de extensão para as classes de coleção de linha de dados.</span>
      <span class="sxs-lookup">
        <span data-stu-id="41a1b-101">Contains the extension methods for the data row collection classes.</span>
      </span>
      <span data-ttu-id="41a1b-102">Essa API dá suporte à infraestrutura do .NET Framework e não deve ser usada diretamente no código.</span>
      <span class="sxs-lookup">
        <span data-stu-id="41a1b-102">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41a1b-103">O <xref:System.Data.EnumerableRowCollectionExtensions> classe contém métodos de extensão estático que definem o <xref:System.Data.EnumerableRowCollectionExtensions.Cast%2A> método e operações de consulta padrão para o <xref:System.Data.EnumerableRowCollection%601> e <xref:System.Data.OrderedEnumerableRowCollection%601> classes.</span><span class="sxs-lookup"><span data-stu-id="41a1b-103">The <xref:System.Data.EnumerableRowCollectionExtensions> class contains static extension methods that define the <xref:System.Data.EnumerableRowCollectionExtensions.Cast%2A> method and standard query operations for the <xref:System.Data.EnumerableRowCollection%601> and <xref:System.Data.OrderedEnumerableRowCollection%601> classes.</span></span>  
  
 <span data-ttu-id="41a1b-104">Esta classe não pode ser herdada e não pode ser instanciado.</span><span class="sxs-lookup"><span data-stu-id="41a1b-104">This class cannot be inherited and cannot be instantiated.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Data.EnumerableRowCollection`1" />
    <altmember cref="T:System.Data.OrderedEnumerableRowCollection`1" />
  </Docs>
  <Members>
    <Member MemberName="Cast&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.EnumerableRowCollection&lt;TResult&gt; Cast&lt;TResult&gt; (this System.Data.EnumerableRowCollection source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.EnumerableRowCollection`1&lt;!!TResult&gt; Cast&lt;TResult&gt;(class System.Data.EnumerableRowCollection source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Cast(Of TResult) (source As EnumerableRowCollection) As EnumerableRowCollection(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::EnumerableRowCollection&lt;TResult&gt; ^ Cast(System::Data::EnumerableRowCollection ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EnumerableRowCollection&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="41a1b-105">O tipo para converter os elementos de origem para.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-105">The type to convert the elements of source to.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="41a1b-106">O <see cref="T:System.Data.EnumerableRowCollection" /> que contém os elementos a serem convertidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-106">The <see cref="T:System.Data.EnumerableRowCollection" /> that contains the elements to be converted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41a1b-107">Converte os elementos de um <see cref="T:System.Data.EnumerableRowCollection" /> para o tipo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-107">Converts the elements of an <see cref="T:System.Data.EnumerableRowCollection" /> to the specified type.</span>
          </span>
          <span data-ttu-id="41a1b-108">Essa API dá suporte à infraestrutura do .NET Framework e não deve ser usada diretamente no código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-108">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41a1b-109">Um <see cref="T:System.Data.EnumerableRowCollection" /> que contém cada elemento da sequência de origem convertido para o tipo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-109">An <see cref="T:System.Data.EnumerableRowCollection" /> that contains each element of the source sequence converted to the specified type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41a1b-110">Esse método é implementado usando a execução adiada.</span><span class="sxs-lookup"><span data-stu-id="41a1b-110">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="41a1b-111">O imediata valor de retorno é um objeto que armazena todas as informações necessárias para executar a ação.</span><span class="sxs-lookup"><span data-stu-id="41a1b-111">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="41a1b-112">A consulta representada por esse método não é executada até que o objeto é enumerado ou chamando seu `GetEnumerator` método diretamente ou usando `foreach` no Visual c# ou `For Each` no Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="41a1b-112">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41a1b-113">
            <paramref name="source" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-113">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="41a1b-114">Um elemento na sequência não pode ser convertido para o tipo <paramref name="TResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-114">An element in the sequence cannot be cast to type <paramref name="TResult" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Data.EnumerableRowCollection" />
        <altmember cref="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OrderBy&lt;TRow,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="41a1b-115">Classifica as linhas de uma <see cref="T:System.Data.EnumerableRowCollection" /> em ordem crescente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-115">Sorts the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in ascending order.</span>
          </span>
          <span data-ttu-id="41a1b-116">Essa API dá suporte à infraestrutura do .NET Framework e não deve ser usada diretamente no código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-116">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OrderBy&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; OrderBy&lt;TRow,TKey&gt; (this System.Data.EnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; OrderBy&lt;TRow, TKey&gt;(class System.Data.EnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderBy(Of TRow, TKey) (source As EnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ OrderBy(System::Data::EnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow">
          <span data-ttu-id="41a1b-117">O tipo dos elementos de linha no <c>fonte</c>, normalmente <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-117">The type of the row elements in <c>source</c>, typically <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="41a1b-118">O tipo de chave retornada pelo <c>keySelector</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-118">The type of the key returned by <c>keySelector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="41a1b-119">Uma <see cref="T:System.Data.EnumerableRowCollection" /> contendo os elementos <see cref="T:System.Data.DataRow" /> a serem ordenados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-119">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="41a1b-120">Uma função para extrair uma chave de um elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-120">A function to extract a key from an element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41a1b-121">Classifica as linhas de uma <see cref="T:System.Data.EnumerableRowCollection" /> em ordem crescente de acordo com a chave especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-121">Sorts the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in ascending order according to the specified key.</span>
          </span>
          <span data-ttu-id="41a1b-122">Essa API dá suporte à infraestrutura do .NET Framework e não deve ser usada diretamente no código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-122">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41a1b-123">Uma <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> cujos elementos são classificados pela chave especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-123">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41a1b-124">Esse método é implementado usando a execução adiada.</span><span class="sxs-lookup"><span data-stu-id="41a1b-124">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="41a1b-125">O imediata valor de retorno é um objeto que armazena todas as informações necessárias para executar a ação.</span><span class="sxs-lookup"><span data-stu-id="41a1b-125">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="41a1b-126">A consulta representada por esse método não é executada até que o objeto é enumerado ou chamando seu `GetEnumerator` método diretamente ou usando `foreach` no Visual c# ou `For Each` no Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="41a1b-126">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.ThenBy" />
        <altmember cref="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      </Docs>
    </Member>
    <Member MemberName="OrderBy&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; OrderBy&lt;TRow,TKey&gt; (this System.Data.EnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; OrderBy&lt;TRow, TKey&gt;(class System.Data.EnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderBy(Of TRow, TKey) (source As EnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey), comparer As IComparer(Of TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ OrderBy(System::Data::EnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow">
          <span data-ttu-id="41a1b-127">O tipo dos elementos de linha no <c>fonte</c>, normalmente <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-127">The type of the row elements in <c>source</c>, typically <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="41a1b-128">O tipo de chave retornada pelo <c>keySelector</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-128">The type of the key returned by <c>keySelector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="41a1b-129">Uma <see cref="T:System.Data.EnumerableRowCollection" /> contendo os elementos <see cref="T:System.Data.DataRow" /> a serem ordenados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-129">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="41a1b-130">Uma função para extrair uma chave de um elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-130">A function to extract a key from an element.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="41a1b-131">Um <see cref="T:System.Collections.Generic.IComparer`1" /> para comparar chaves.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-131">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41a1b-132">Classifica as linhas de uma <see cref="T:System.Data.EnumerableRowCollection" /> em ordem crescente de acordo com a chave e o comparador especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-132">Sorts the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in ascending order according to the specified key and comparer.</span>
          </span>
          <span data-ttu-id="41a1b-133">Essa API dá suporte à infraestrutura do .NET Framework e não deve ser usada diretamente no código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-133">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41a1b-134">Uma <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> cujos elementos são classificados pela chave e o comparador especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-134">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key and comparer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41a1b-135">Esse método é implementado usando a execução adiada.</span><span class="sxs-lookup"><span data-stu-id="41a1b-135">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="41a1b-136">O imediata valor de retorno é um objeto que armazena todas as informações necessárias para executar a ação.</span><span class="sxs-lookup"><span data-stu-id="41a1b-136">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="41a1b-137">A consulta representada por esse método não é executada até que o objeto é enumerado ou chamando seu `GetEnumerator` método diretamente ou usando `foreach` no Visual c# ou `For Each` no Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="41a1b-137">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.ThenBy" />
        <altmember cref="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OrderByDescending&lt;TRow,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="41a1b-138">Classifica as linhas de uma <see cref="T:System.Data.EnumerableRowCollection" /> em ordem decrescente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-138">Sorts the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in descending order.</span>
          </span>
          <span data-ttu-id="41a1b-139">Essa API dá suporte à infraestrutura do .NET Framework e não deve ser usada diretamente no código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-139">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OrderByDescending&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; OrderByDescending&lt;TRow,TKey&gt; (this System.Data.EnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; OrderByDescending&lt;TRow, TKey&gt;(class System.Data.EnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderByDescending(Of TRow, TKey) (source As EnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ OrderByDescending(System::Data::EnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow">
          <span data-ttu-id="41a1b-140">O tipo dos elementos de linha no <c>fonte</c>, normalmente <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-140">The type of the row elements in <c>source</c>, typically <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="41a1b-141">O tipo de chave retornada pelo <c>keySelector</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-141">The type of the key returned by <c>keySelector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="41a1b-142">Uma <see cref="T:System.Data.EnumerableRowCollection" /> contendo os elementos <see cref="T:System.Data.DataRow" /> a serem ordenados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-142">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="41a1b-143">Uma função para extrair uma chave de um elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-143">A function to extract a key from an element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41a1b-144">Classifica as linhas de uma <see cref="T:System.Data.EnumerableRowCollection" /> em ordem decrescente de acordo com a chave especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-144">Sorts the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in descending order according to the specified key.</span>
          </span>
          <span data-ttu-id="41a1b-145">Essa API dá suporte à infraestrutura do .NET Framework e não deve ser usada diretamente no código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-145">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41a1b-146">Uma <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> cujos elementos são classificados pela chave especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-146">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41a1b-147">Esse método é implementado usando a execução adiada.</span><span class="sxs-lookup"><span data-stu-id="41a1b-147">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="41a1b-148">O imediata valor de retorno é um objeto que armazena todas as informações necessárias para executar a ação.</span><span class="sxs-lookup"><span data-stu-id="41a1b-148">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="41a1b-149">A consulta representada por esse método não é executada até que o objeto é enumerado ou chamando seu `GetEnumerator` método diretamente ou usando `foreach` no Visual c# ou `For Each` no Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="41a1b-149">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.ThenByDescending" />
        <altmember cref="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
      </Docs>
    </Member>
    <Member MemberName="OrderByDescending&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; OrderByDescending&lt;TRow,TKey&gt; (this System.Data.EnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; OrderByDescending&lt;TRow, TKey&gt;(class System.Data.EnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderByDescending(Of TRow, TKey) (source As EnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey), comparer As IComparer(Of TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ OrderByDescending(System::Data::EnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow">
          <span data-ttu-id="41a1b-150">O tipo dos elementos de linha no <c>fonte</c>, normalmente <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-150">The type of the row elements in <c>source</c>, typically <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="41a1b-151">O tipo de chave retornada pelo <c>keySelector</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-151">The type of the key returned by <c>keySelector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="41a1b-152">Uma <see cref="T:System.Data.EnumerableRowCollection" /> contendo os elementos <see cref="T:System.Data.DataRow" /> a serem ordenados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-152">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="41a1b-153">Uma função para extrair uma chave de um elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-153">A function to extract a key from an element.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="41a1b-154">Um <see cref="T:System.Collections.Generic.IComparer`1" /> para comparar chaves.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-154">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41a1b-155">Classifica as linhas de uma <see cref="T:System.Data.EnumerableRowCollection" /> em ordem decrescente de acordo com a chave e o comparador especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-155">Sorts the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in descending order according to the specified key and comparer.</span>
          </span>
          <span data-ttu-id="41a1b-156">Essa API dá suporte à infraestrutura do .NET Framework e não deve ser usada diretamente no código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-156">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41a1b-157">Uma <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> cujos elementos são classificados pela chave e o comparador especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-157">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key and comparer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41a1b-158">Esse método é implementado usando a execução adiada.</span><span class="sxs-lookup"><span data-stu-id="41a1b-158">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="41a1b-159">O imediata valor de retorno é um objeto que armazena todas as informações necessárias para executar a ação.</span><span class="sxs-lookup"><span data-stu-id="41a1b-159">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="41a1b-160">A consulta representada por esse método não é executada até que o objeto é enumerado ou chamando seu `GetEnumerator` método diretamente ou usando `foreach` no Visual c# ou `For Each` no Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="41a1b-160">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.ThenByDescending" />
        <altmember cref="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      </Docs>
    </Member>
    <Member MemberName="Select&lt;TRow,S&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.EnumerableRowCollection&lt;S&gt; Select&lt;TRow,S&gt; (this System.Data.EnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,S&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.EnumerableRowCollection`1&lt;!!S&gt; Select&lt;TRow, S&gt;(class System.Data.EnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!S&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Select(Of TRow, S) (source As EnumerableRowCollection(Of TRow), selector As Func(Of TRow, S)) As EnumerableRowCollection(Of S)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename S&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::EnumerableRowCollection&lt;S&gt; ^ Select(System::Data::EnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, S&gt; ^ selector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EnumerableRowCollection&lt;S&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="S" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TRow,S&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow">
          <span data-ttu-id="41a1b-161">O tipo dos elementos de linha no <c>fonte</c>, normalmente <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-161">The type of the row elements in <c>source</c>, typically <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </typeparam>
        <typeparam name="S">
          <span data-ttu-id="41a1b-162">O tipo que <c>TRow</c> será transformado em.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-162">The type that <c>TRow</c> will be transformed into.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="41a1b-163">Uma <see cref="T:System.Data.EnumerableRowCollection`1" /> que contém os elementos <see cref="T:System.Data.DataRow" /> para os quais invocar uma função de transformação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-163">An <see cref="T:System.Data.EnumerableRowCollection`1" /> containing the <see cref="T:System.Data.DataRow" /> elements to invoke a transform function upon.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="41a1b-164">Uma função de transformação a ser aplicada a cada elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-164">A transform function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41a1b-165">Projeta cada elemento de uma <see cref="T:System.Data.EnumerableRowCollection`1" /> em um novo formulário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-165">Projects each element of an <see cref="T:System.Data.EnumerableRowCollection`1" /> into a new form.</span>
          </span>
          <span data-ttu-id="41a1b-166">Essa API dá suporte à infraestrutura do .NET Framework e não deve ser usada diretamente no código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-166">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41a1b-167">Um <see cref="T:System.Data.EnumerableRowCollection`1" /> cujos elementos são o resultado da invocação da função de transformação em cada elemento de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-167">An <see cref="T:System.Data.EnumerableRowCollection`1" /> whose elements are the result of invoking the transform function on each element of <paramref name="source" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41a1b-168">Esse método é implementado usando a execução adiada.</span><span class="sxs-lookup"><span data-stu-id="41a1b-168">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="41a1b-169">O imediata valor de retorno é um objeto que armazena todas as informações necessárias para executar a ação.</span><span class="sxs-lookup"><span data-stu-id="41a1b-169">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="41a1b-170">A consulta representada por esse método não é executada até que o objeto é enumerado ou chamando seu `GetEnumerator` método diretamente ou usando `foreach` no Visual c# ou `For Each` no Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="41a1b-170">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 <span data-ttu-id="41a1b-171">Esse método de projeção requer que a função de transformação, `selector`, para produzir um valor para cada valor na sequência de origem, `source`.</span><span class="sxs-lookup"><span data-stu-id="41a1b-171">This projection method requires the transform function, `selector`, to produce one value for each value in the source sequence, `source`.</span></span> <span data-ttu-id="41a1b-172">Se `selector` retorna um valor que é uma coleção, é até o consumidor para atravessar as subsequências manualmente.</span><span class="sxs-lookup"><span data-stu-id="41a1b-172">If `selector` returns a value that is itself a collection, it is up to the consumer to traverse the subsequences manually.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ThenBy&lt;TRow,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="41a1b-173">Realiza uma classificação secundária das linhas de uma <see cref="T:System.Data.EnumerableRowCollection" /> em ordem crescente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-173">Performs a secondary ordering of the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in ascending order.</span>
          </span>
          <span data-ttu-id="41a1b-174">Essa API dá suporte à infraestrutura do .NET Framework e não deve ser usada diretamente no código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-174">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ThenBy&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; ThenBy&lt;TRow,TKey&gt; (this System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; ThenBy&lt;TRow, TKey&gt;(class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenBy(Of TRow, TKey) (source As OrderedEnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ ThenBy(System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow">
          <span data-ttu-id="41a1b-175">O tipo dos elementos de linha no <c>fonte</c>, normalmente <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-175">The type of the row elements in <c>source</c>, typically <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="41a1b-176">O tipo de chave retornada pelo <c>keySelector</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-176">The type of the key returned by <c>keySelector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="41a1b-177">Uma <see cref="T:System.Data.EnumerableRowCollection" /> contendo os elementos <see cref="T:System.Data.DataRow" /> a serem ordenados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-177">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="41a1b-178">Uma função para extrair uma chave de um elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-178">A function to extract a key from an element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41a1b-179">Realiza uma classificação secundária das linhas de uma <see cref="T:System.Data.EnumerableRowCollection" /> em ordem crescente de acordo com a chave especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-179">Performs a secondary ordering of the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in ascending order according to the specified key.</span>
          </span>
          <span data-ttu-id="41a1b-180">Essa API dá suporte à infraestrutura do .NET Framework e não deve ser usada diretamente no código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-180">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41a1b-181">Uma <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> cujos elementos são classificados pela chave especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-181">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41a1b-182">O uso de um <xref:System.Data.EnumerableRowCollectionExtensions.ThenBy%2A> operação exige uma existente primário classificação operação usando <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>.</span><span class="sxs-lookup"><span data-stu-id="41a1b-182">The use of a <xref:System.Data.EnumerableRowCollectionExtensions.ThenBy%2A> operation requires an existing primary sorting operation using <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>.</span></span>  
  
 <span data-ttu-id="41a1b-183">Esse método é implementado usando a execução adiada.</span><span class="sxs-lookup"><span data-stu-id="41a1b-183">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="41a1b-184">O imediata valor de retorno é um objeto que armazena todas as informações necessárias para executar a ação.</span><span class="sxs-lookup"><span data-stu-id="41a1b-184">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="41a1b-185">A consulta representada por esse método não é executada até que o objeto é enumerado ou chamando seu `GetEnumerator` método diretamente ou usando `foreach` no Visual c# ou `For Each` no Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="41a1b-185">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.OrderBy" />
        <altmember cref="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})" />
      </Docs>
    </Member>
    <Member MemberName="ThenBy&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; ThenBy&lt;TRow,TKey&gt; (this System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; ThenBy&lt;TRow, TKey&gt;(class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenBy(Of TRow, TKey) (source As OrderedEnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey), comparer As IComparer(Of TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ ThenBy(System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow">
          <span data-ttu-id="41a1b-186">O tipo dos elementos de linha no <c>fonte</c>, normalmente <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-186">The type of the row elements in <c>source</c>, typically <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="41a1b-187">O tipo de chave retornada pelo <c>keySelector</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-187">The type of the key returned by <c>keySelector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="41a1b-188">Uma <see cref="T:System.Data.EnumerableRowCollection" /> contendo os elementos <see cref="T:System.Data.DataRow" /> a serem ordenados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-188">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="41a1b-189">Uma função para extrair uma chave de um elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-189">A function to extract a key from an element.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="41a1b-190">Um <see cref="T:System.Collections.Generic.IComparer`1" /> para comparar chaves.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-190">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41a1b-191">Realiza uma classificação secundária das linhas de uma <see cref="T:System.Data.EnumerableRowCollection" /> em ordem crescente de acordo com a chave e o comparador especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-191">Performs a secondary ordering of the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in ascending order according to the specified key and comparer.</span>
          </span>
          <span data-ttu-id="41a1b-192">Essa API dá suporte à infraestrutura do .NET Framework e não deve ser usada diretamente no código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-192">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41a1b-193">Uma <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> cujos elementos são classificados pela chave e o comparador especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-193">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key and comparer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41a1b-194">O uso de um <xref:System.Data.EnumerableRowCollectionExtensions.ThenBy%2A> operação exige uma existente primário classificação operação usando <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>.</span><span class="sxs-lookup"><span data-stu-id="41a1b-194">The use of a <xref:System.Data.EnumerableRowCollectionExtensions.ThenBy%2A> operation requires an existing primary sorting operation using <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>.</span></span>  
  
 <span data-ttu-id="41a1b-195">Esse método é implementado usando a execução adiada.</span><span class="sxs-lookup"><span data-stu-id="41a1b-195">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="41a1b-196">O imediata valor de retorno é um objeto que armazena todas as informações necessárias para executar a ação.</span><span class="sxs-lookup"><span data-stu-id="41a1b-196">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="41a1b-197">A consulta representada por esse método não é executada até que o objeto é enumerado ou chamando seu `GetEnumerator` método diretamente ou usando `foreach` no Visual c# ou `For Each` no Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="41a1b-197">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.OrderBy" />
        <altmember cref="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ThenByDescending&lt;TRow,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="41a1b-198">Realiza uma classificação secundária das linhas de uma <see cref="T:System.Data.EnumerableRowCollection" /> em ordem decrescente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-198">Performs a secondary ordering of the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in descending order.</span>
          </span>
          <span data-ttu-id="41a1b-199">Essa API dá suporte à infraestrutura do .NET Framework e não deve ser usada diretamente no código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-199">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ThenByDescending&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; ThenByDescending&lt;TRow,TKey&gt; (this System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; ThenByDescending&lt;TRow, TKey&gt;(class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenByDescending(Of TRow, TKey) (source As OrderedEnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ ThenByDescending(System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow">
          <span data-ttu-id="41a1b-200">O tipo dos elementos de linha no <c>fonte</c>, normalmente <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-200">The type of the row elements in <c>source</c>, typically <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="41a1b-201">O tipo de chave retornada pelo <c>keySelector</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-201">The type of the key returned by <c>keySelector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="41a1b-202">Uma <see cref="T:System.Data.EnumerableRowCollection" /> contendo os elementos <see cref="T:System.Data.DataRow" /> a serem ordenados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-202">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="41a1b-203">Uma função para extrair uma chave de um elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-203">A function to extract a key from an element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41a1b-204">Realiza uma classificação secundária das linhas de uma <see cref="T:System.Data.EnumerableRowCollection" /> em ordem decrescente de acordo com a chave especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-204">Performs a secondary ordering of the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in descending order according to the specified key.</span>
          </span>
          <span data-ttu-id="41a1b-205">Essa API dá suporte à infraestrutura do .NET Framework e não deve ser usada diretamente no código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-205">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41a1b-206">Uma <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> cujos elementos são classificados pela chave especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-206">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41a1b-207">O uso de um <xref:System.Data.EnumerableRowCollectionExtensions.ThenByDescending%2A> operação exige uma existente primário classificação operação usando <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>.</span><span class="sxs-lookup"><span data-stu-id="41a1b-207">The use of a <xref:System.Data.EnumerableRowCollectionExtensions.ThenByDescending%2A> operation requires an existing primary sorting operation using <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>.</span></span>  
  
 <span data-ttu-id="41a1b-208">Esse método é implementado usando a execução adiada.</span><span class="sxs-lookup"><span data-stu-id="41a1b-208">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="41a1b-209">O imediata valor de retorno é um objeto que armazena todas as informações necessárias para executar a ação.</span><span class="sxs-lookup"><span data-stu-id="41a1b-209">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="41a1b-210">A consulta representada por esse método não é executada até que o objeto é enumerado ou chamando seu `GetEnumerator` método diretamente ou usando `foreach` no Visual c# ou `For Each` no Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="41a1b-210">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.OrderByDescending" />
        <altmember cref="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})" />
      </Docs>
    </Member>
    <Member MemberName="ThenByDescending&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; ThenByDescending&lt;TRow,TKey&gt; (this System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; ThenByDescending&lt;TRow, TKey&gt;(class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenByDescending(Of TRow, TKey) (source As OrderedEnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey), comparer As IComparer(Of TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ ThenByDescending(System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow">
          <span data-ttu-id="41a1b-211">O tipo dos elementos de linha no <c>fonte</c>, normalmente <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-211">The type of the row elements in <c>source</c>, typically <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="41a1b-212">O tipo de chave retornada pelo <c>keySelector</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-212">The type of the key returned by <c>keySelector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="41a1b-213">Uma <see cref="T:System.Data.EnumerableRowCollection" /> contendo os elementos <see cref="T:System.Data.DataRow" /> a serem ordenados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-213">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="41a1b-214">Uma função para extrair uma chave de um elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-214">A function to extract a key from an element.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="41a1b-215">Um <see cref="T:System.Collections.Generic.IComparer`1" /> para comparar chaves.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-215">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41a1b-216">Realiza uma classificação secundária das linhas de uma <see cref="T:System.Data.EnumerableRowCollection" /> em ordem decrescente de acordo com a chave e o comparador especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-216">Performs a secondary ordering of the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in descending order according to the specified key and comparer.</span>
          </span>
          <span data-ttu-id="41a1b-217">Essa API dá suporte à infraestrutura do .NET Framework e não deve ser usada diretamente no código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-217">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41a1b-218">Uma <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> cujos elementos são classificados pela chave e o comparador especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-218">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key and comparer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41a1b-219">O uso de um <xref:System.Data.EnumerableRowCollectionExtensions.ThenByDescending%2A> operação exige uma existente primário classificação operação usando <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>.</span><span class="sxs-lookup"><span data-stu-id="41a1b-219">The use of a <xref:System.Data.EnumerableRowCollectionExtensions.ThenByDescending%2A> operation requires an existing primary sorting operation using <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>.</span></span>  
  
 <span data-ttu-id="41a1b-220">Esse método é implementado usando a execução adiada.</span><span class="sxs-lookup"><span data-stu-id="41a1b-220">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="41a1b-221">O imediata valor de retorno é um objeto que armazena todas as informações necessárias para executar a ação.</span><span class="sxs-lookup"><span data-stu-id="41a1b-221">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="41a1b-222">A consulta representada por esse método não é executada até que o objeto é enumerado ou chamando seu `GetEnumerator` método diretamente ou usando `foreach` no Visual c# ou `For Each` no Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="41a1b-222">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.OrderByDescending" />
        <altmember cref="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      </Docs>
    </Member>
    <Member MemberName="Where&lt;TRow&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.EnumerableRowCollection&lt;TRow&gt; Where&lt;TRow&gt; (this System.Data.EnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.EnumerableRowCollection`1&lt;!!TRow&gt; Where&lt;TRow&gt;(class System.Data.EnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Where(Of TRow) (source As EnumerableRowCollection(Of TRow), predicate As Func(Of TRow, Boolean)) As EnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::EnumerableRowCollection&lt;TRow&gt; ^ Where(System::Data::EnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, bool&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;TRow,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow">
          <span data-ttu-id="41a1b-223">O tipo dos elementos de linha no <c>fonte</c>, normalmente <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-223">The type of the row elements in <c>source</c>, typically <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="41a1b-224">Uma <see cref="T:System.Data.EnumerableRowCollection" /> contendo os elementos <see cref="T:System.Data.DataRow" /> a filtrar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-224">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to filter.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="41a1b-225">Uma função para testar cada elemento em relação a uma condição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-225">A function to test each element for a condition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41a1b-226">Filtra uma sequência de linhas com base no predicado especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-226">Filters a sequence of rows based on the specified predicate.</span>
          </span>
          <span data-ttu-id="41a1b-227">Essa API dá suporte à infraestrutura do .NET Framework e não deve ser usada diretamente no código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-227">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41a1b-228">Um <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> que contém linhas da sequência de entrada que atendem à condição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a1b-228">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> that contains rows from the input sequence that satisfy the condition.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41a1b-229">Esse método é implementado usando a execução adiada.</span><span class="sxs-lookup"><span data-stu-id="41a1b-229">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="41a1b-230">O imediata valor de retorno é um objeto que armazena todas as informações necessárias para executar a ação.</span><span class="sxs-lookup"><span data-stu-id="41a1b-230">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="41a1b-231">A consulta representada por esse método não é executada até que o objeto é enumerado ou chamando seu `GetEnumerator` método diretamente ou usando `foreach` no Visual c# ou `For Each` no Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="41a1b-231">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
      </Docs>
    </Member>
  </Members>
</Type>