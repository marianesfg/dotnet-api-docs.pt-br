<Type Name="EntityKey" FullName="System.Data.EntityKey">
  <Metadata><Meta Name="ms.openlocfilehash" Value="57d2602577864e93f9c5733f9b15b555c902ffb2" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55306683" /></Metadata><TypeSignature Language="C#" Value="public sealed class EntityKey : IEquatable&lt;System.Data.EntityKey&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit EntityKey extends System.Object implements class System.IEquatable`1&lt;class System.Data.EntityKey&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Data.EntityKey" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EntityKey&#xA;Implements IEquatable(Of EntityKey)" />
  <TypeSignature Language="C++ CLI" Value="public ref class EntityKey sealed : IEquatable&lt;System::Data::EntityKey ^&gt;" />
  <TypeSignature Language="F#" Value="type EntityKey = class&#xA;    interface IEquatable&lt;EntityKey&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Data.EntityKey&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{ConcatKeyValue()}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.Serialization.DataContract(IsReference=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="49402-101">Fornece uma referência durável a um objeto que é uma instância de um tipo de entidade.</span><span class="sxs-lookup"><span data-stu-id="49402-101">Provides a durable reference to an object that is an instance of an entity type.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49402-102">O <xref:System.Data.EntityKey> objetos são imutáveis; ou seja, depois que eles são criados eles não podem ser modificados.</span><span class="sxs-lookup"><span data-stu-id="49402-102">The <xref:System.Data.EntityKey> objects are immutable; that is, after they are constructed they cannot be modified.</span></span>  
  
 <span data-ttu-id="49402-103">Para obter mais informações, consulte [trabalhando com chaves de entidade](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/dd283139(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="49402-103">For more information, see [Working with Entity Keys](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/dd283139(v=vs.100)).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49402-104">Estes exemplos se baseiam os [modelo de vendas AdventureWorks](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="49402-104">These examples are based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="49402-105">Os exemplos mostram como criar e usar um <xref:System.Data.EntityKey>.</span><span class="sxs-lookup"><span data-stu-id="49402-105">The examples show you how to create and use an <xref:System.Data.EntityKey>.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#EntityKeyClass_TryGetObjectByKey](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#entitykeyclass_trygetobjectbykey)]
 [!code-vb[DP ObjectServices Concepts#EntityKeyClass_TryGetObjectByKey](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#entitykeyclass_trygetobjectbykey)]  
  
 [!code-csharp[DP ObjectServices Concepts#AddObjectUsingKey](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#addobjectusingkey)]
 [!code-vb[DP ObjectServices Concepts#AddObjectUsingKey](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#addobjectusingkey)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="49402-106">Inicializa uma nova instância da classe <see cref="T:System.Data.EntityKey" />.</span><span class="sxs-lookup"><span data-stu-id="49402-106">Initializes a new instance of the <see cref="T:System.Data.EntityKey" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityKey();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="49402-107">Inicializa uma nova instância da classe <see cref="T:System.Data.EntityKey" />.</span><span class="sxs-lookup"><span data-stu-id="49402-107">Initializes a new instance of the <see cref="T:System.Data.EntityKey" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityKey (string qualifiedEntitySetName, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt; entityKeyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string qualifiedEntitySetName, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; entityKeyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (qualifiedEntitySetName As String, entityKeyValues As IEnumerable(Of KeyValuePair(Of String, Object)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityKey(System::String ^ qualifiedEntitySetName, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ entityKeyValues);" />
      <MemberSignature Language="F#" Value="new System.Data.EntityKey : string * seq&lt;System.Collections.Generic.KeyValuePair&lt;string, obj&gt;&gt; -&gt; System.Data.EntityKey" Usage="new System.Data.EntityKey (qualifiedEntitySetName, entityKeyValues)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="qualifiedEntitySetName" Type="System.String" />
        <Parameter Name="entityKeyValues" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="qualifiedEntitySetName"><span data-ttu-id="49402-108">Um <see cref="T:System.String" /> que é um nome de conjunto de entidades qualificado pelo nome do contêiner de entidade.</span><span class="sxs-lookup"><span data-stu-id="49402-108">A <see cref="T:System.String" /> that is the entity set name qualified by the entity container name.</span></span></param>
        <param name="entityKeyValues"><span data-ttu-id="49402-109">Uma coleção <see cref="T:System.Collections.Generic.KeyValuePair" /> genérica.</span><span class="sxs-lookup"><span data-stu-id="49402-109">A generic <see cref="T:System.Collections.Generic.KeyValuePair" /> collection.</span></span>  
  
<span data-ttu-id="49402-110">Cada par chave-valor tem um nome de propriedade como a chave e o valor dessa propriedade como o valor.</span><span class="sxs-lookup"><span data-stu-id="49402-110">Each key/value pair has a property name as the key and the value of that property as the value.</span></span> <span data-ttu-id="49402-111">Deve haver um par para cada propriedade que faz parte do <see cref="T:System.Data.EntityKey" />.</span><span class="sxs-lookup"><span data-stu-id="49402-111">There should be one pair for each property that is part of the <see cref="T:System.Data.EntityKey" />.</span></span> <span data-ttu-id="49402-112">A ordem dos pares chave-valor não é importante, mas cada propriedade de chave deve ser incluída.</span><span class="sxs-lookup"><span data-stu-id="49402-112">The order of the key/value pairs is not important, but each key property should be included.</span></span> <span data-ttu-id="49402-113">Os nomes de propriedade são nomes simples que não são qualificados com um nome de tipo de entidade ou o nome do esquema.</span><span class="sxs-lookup"><span data-stu-id="49402-113">The property names are simple names that are not qualified with an entity type name or the schema name.</span></span></param>
        <summary><span data-ttu-id="49402-114">Inicializa uma nova instância da classe <see cref="T:System.Data.EntityKey" /> com um nome de conjunto de entidades e uma coleção <see cref="T:System.Collections.Generic.KeyValuePair" /> genérica.</span><span class="sxs-lookup"><span data-stu-id="49402-114">Initializes a new instance of the <see cref="T:System.Data.EntityKey" /> class with an entity set name and a generic <see cref="T:System.Collections.Generic.KeyValuePair" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="49402-115">Este exemplo se baseia a [modelo de vendas AdventureWorks](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="49402-115">This example is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="49402-116">O exemplo mostra como criar e usar um <xref:System.Data.EntityKey>.</span><span class="sxs-lookup"><span data-stu-id="49402-116">The example shows you how to create and use an <xref:System.Data.EntityKey>.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#AddObjectUsingKey](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#addobjectusingkey)]
 [!code-vb[DP ObjectServices Concepts#AddObjectUsingKey](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#addobjectusingkey)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityKey (string qualifiedEntitySetName, System.Collections.Generic.IEnumerable&lt;System.Data.EntityKeyMember&gt; entityKeyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string qualifiedEntitySetName, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.EntityKeyMember&gt; entityKeyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Data.EntityKeyMember})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (qualifiedEntitySetName As String, entityKeyValues As IEnumerable(Of EntityKeyMember))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityKey(System::String ^ qualifiedEntitySetName, System::Collections::Generic::IEnumerable&lt;System::Data::EntityKeyMember ^&gt; ^ entityKeyValues);" />
      <MemberSignature Language="F#" Value="new System.Data.EntityKey : string * seq&lt;System.Data.EntityKeyMember&gt; -&gt; System.Data.EntityKey" Usage="new System.Data.EntityKey (qualifiedEntitySetName, entityKeyValues)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="qualifiedEntitySetName" Type="System.String" />
        <Parameter Name="entityKeyValues" Type="System.Collections.Generic.IEnumerable&lt;System.Data.EntityKeyMember&gt;" />
      </Parameters>
      <Docs>
        <param name="qualifiedEntitySetName"><span data-ttu-id="49402-117">Um <see cref="T:System.String" /> que é um nome de conjunto de entidades qualificado pelo nome do contêiner de entidade.</span><span class="sxs-lookup"><span data-stu-id="49402-117">A <see cref="T:System.String" /> that is the entity set name qualified by the entity container name.</span></span></param>
        <param name="entityKeyValues"><span data-ttu-id="49402-118">Uma coleção <see cref="T:System.Collections.Generic.IEnumerable`1" /> de objetos <see cref="T:System.Data.EntityKeyMember" /> com o qual inicializar a chave.</span><span class="sxs-lookup"><span data-stu-id="49402-118">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of <see cref="T:System.Data.EntityKeyMember" /> objects with which to initialize the key.</span></span></param>
        <summary><span data-ttu-id="49402-119">Inicializa uma nova instância da classe <see cref="T:System.Data.EntityKey" /> com um nome de conjunto de entidades e uma coleção <see cref="T:System.Collections.Generic.IEnumerable`1" /> de objetos <see cref="T:System.Data.EntityKeyMember" />.</span><span class="sxs-lookup"><span data-stu-id="49402-119">Initializes a new instance of the <see cref="T:System.Data.EntityKey" /> class with an entity set name and an <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of <see cref="T:System.Data.EntityKeyMember" /> objects.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityKey (string qualifiedEntitySetName, string keyName, object keyValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string qualifiedEntitySetName, string keyName, object keyValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.#ctor(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (qualifiedEntitySetName As String, keyName As String, keyValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityKey(System::String ^ qualifiedEntitySetName, System::String ^ keyName, System::Object ^ keyValue);" />
      <MemberSignature Language="F#" Value="new System.Data.EntityKey : string * string * obj -&gt; System.Data.EntityKey" Usage="new System.Data.EntityKey (qualifiedEntitySetName, keyName, keyValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="qualifiedEntitySetName" Type="System.String" />
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="keyValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="qualifiedEntitySetName"><span data-ttu-id="49402-120">Um <see cref="T:System.String" /> que é um nome de conjunto de entidades qualificado pelo nome do contêiner de entidade.</span><span class="sxs-lookup"><span data-stu-id="49402-120">A <see cref="T:System.String" /> that is the entity set name qualified by the entity container name.</span></span></param>
        <param name="keyName"><span data-ttu-id="49402-121">Uma <see cref="T:System.String" /> que é o nome da chave.</span><span class="sxs-lookup"><span data-stu-id="49402-121">A <see cref="T:System.String" /> that is the name of the key.</span></span></param>
        <param name="keyValue"><span data-ttu-id="49402-122">Um <see cref="T:System.Object" /> que é o valor da chave.</span><span class="sxs-lookup"><span data-stu-id="49402-122">An <see cref="T:System.Object" /> that is the key value.</span></span></param>
        <summary><span data-ttu-id="49402-123">Inicializa uma nova instância da classe <see cref="T:System.Data.EntityKey" /> com um nome de conjunto de entidades e um par de chave de entidade específico.</span><span class="sxs-lookup"><span data-stu-id="49402-123">Initializes a new instance of the <see cref="T:System.Data.EntityKey" /> class with an entity set name and specific entity key pair.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="49402-124">Este exemplo se baseia a [modelo de vendas AdventureWorks](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="49402-124">This example is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="49402-125">O exemplo mostra como criar e usar um <xref:System.Data.EntityKey>.</span><span class="sxs-lookup"><span data-stu-id="49402-125">The example shows you how to create and use an <xref:System.Data.EntityKey>.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#AddObjectUsingKey](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#addobjectusingkey)]
 [!code-vb[DP ObjectServices Concepts#AddObjectUsingKey](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#addobjectusingkey)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityContainerName">
      <MemberSignature Language="C#" Value="public string EntityContainerName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EntityContainerName" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityKey.EntityContainerName" />
      <MemberSignature Language="VB.NET" Value="Public Property EntityContainerName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EntityContainerName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EntityContainerName : string with get, set" Usage="System.Data.EntityKey.EntityContainerName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.Serialization.DataMember</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="49402-126">Obtém ou define o nome do contêiner de entidade.</span><span class="sxs-lookup"><span data-stu-id="49402-126">Gets or sets the name of the entity container.</span></span></summary>
        <value><span data-ttu-id="49402-127">Um <see cref="T:System.String" /> valor que é o nome do contêiner de entidade para a entidade à qual o <see cref="T:System.Data.EntityKey" /> pertence.</span><span class="sxs-lookup"><span data-stu-id="49402-127">A <see cref="T:System.String" /> value that is the name of the entity container for the entity to which the <see cref="T:System.Data.EntityKey" /> belongs.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityKeyValues">
      <MemberSignature Language="C#" Value="public System.Data.EntityKeyMember[] EntityKeyValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.EntityKeyMember[] EntityKeyValues" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityKey.EntityKeyValues" />
      <MemberSignature Language="VB.NET" Value="Public Property EntityKeyValues As EntityKeyMember()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Data::EntityKeyMember ^&gt; ^ EntityKeyValues { cli::array &lt;System::Data::EntityKeyMember ^&gt; ^ get(); void set(cli::array &lt;System::Data::EntityKeyMember ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EntityKeyValues : System.Data.EntityKeyMember[] with get, set" Usage="System.Data.EntityKey.EntityKeyValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.Serialization.DataMember</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.EntityKeyMember[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="49402-128">Obtém ou define os valores de chave associados a essa <see cref="T:System.Data.EntityKey" />.</span><span class="sxs-lookup"><span data-stu-id="49402-128">Gets or sets the key values associated with this <see cref="T:System.Data.EntityKey" />.</span></span></summary>
        <value><span data-ttu-id="49402-129">Um <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> dos valores de chave para este <see cref="T:System.Data.EntityKey" />.</span><span class="sxs-lookup"><span data-stu-id="49402-129">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of key values for this <see cref="T:System.Data.EntityKey" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49402-130">O <xref:System.Data.EntityKey> classe contém uma cópia dos valores que compõem a chave lógica que é especificada para esse tipo de entidade.</span><span class="sxs-lookup"><span data-stu-id="49402-130">The <xref:System.Data.EntityKey> class contains a copy of the values that make up the logical key that is specified for this type of entity.</span></span>  
  
 <span data-ttu-id="49402-131">Os membros do <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> cada um tem um nome de propriedade e um valor em um <xref:System.Collections.Generic.KeyValuePair%602>, em que a chave é o nome da propriedade e o valor é o valor real da propriedade no objeto.</span><span class="sxs-lookup"><span data-stu-id="49402-131">The members of the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> each have a property name and a value in a <xref:System.Collections.Generic.KeyValuePair%602>, where the key is the property name and the value is the actual value of that property on the object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityNotValidKey">
      <MemberSignature Language="C#" Value="public static readonly System.Data.EntityKey EntityNotValidKey;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Data.EntityKey EntityNotValidKey" />
      <MemberSignature Language="DocId" Value="F:System.Data.EntityKey.EntityNotValidKey" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EntityNotValidKey As EntityKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Data::EntityKey ^ EntityNotValidKey;" />
      <MemberSignature Language="F#" Value=" staticval mutable EntityNotValidKey : System.Data.EntityKey" Usage="System.Data.EntityKey.EntityNotValidKey" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EntityKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="49402-132">Um simples <see cref="T:System.Data.EntityKey" /> que identifica uma entidade resultante de uma operação [TREAT](~/docs/framework/data/adonet/ef/language-reference/treat-entity-sql.md) com falha.</span><span class="sxs-lookup"><span data-stu-id="49402-132">A simple <see cref="T:System.Data.EntityKey" /> identifying an entity that resulted from a failed [TREAT](~/docs/framework/data/adonet/ef/language-reference/treat-entity-sql.md) operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49402-133">Há várias maneiras de obter uma entidade inválida.</span><span class="sxs-lookup"><span data-stu-id="49402-133">There are various ways to get an invalid entity.</span></span> <span data-ttu-id="49402-134">O cenário mais comum é quando um [!INCLUDE[esql](~/includes/esql-md.md)] consulta usa o [tratar](~/docs/framework/data/adonet/ef/language-reference/treat-entity-sql.md) operador para interpretar uma instância de um tipo polimórfico como um tipo específico e a instância em questão não coincide.</span><span class="sxs-lookup"><span data-stu-id="49402-134">The most common scenario is when an [!INCLUDE[esql](~/includes/esql-md.md)] query uses the [TREAT](~/docs/framework/data/adonet/ef/language-reference/treat-entity-sql.md) operator to interpret an instance of a polymorphic type as a particular type, and the instance in question does not match.</span></span> <span data-ttu-id="49402-135">([Tratar](~/docs/framework/data/adonet/ef/language-reference/treat-entity-sql.md) é semelhante a c# `as` operador).</span><span class="sxs-lookup"><span data-stu-id="49402-135">([TREAT](~/docs/framework/data/adonet/ef/language-reference/treat-entity-sql.md) is similar to the C# `as` operator).</span></span> <span data-ttu-id="49402-136">Nesse caso, a consulta retorna uma entidade que não é válida, e a chave de entidade da entidade resultante é definida como <xref:System.Data.EntityKey.EntityNotValidKey>.</span><span class="sxs-lookup"><span data-stu-id="49402-136">In this case, the query returns an entity that is not valid, and the entity key of the resulting entity is set to <xref:System.Data.EntityKey.EntityNotValidKey>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EntitySetName">
      <MemberSignature Language="C#" Value="public string EntitySetName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EntitySetName" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityKey.EntitySetName" />
      <MemberSignature Language="VB.NET" Value="Public Property EntitySetName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EntitySetName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EntitySetName : string with get, set" Usage="System.Data.EntityKey.EntitySetName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.Serialization.DataMember</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="49402-137">Obtém ou define o nome do conjunto de entidades.</span><span class="sxs-lookup"><span data-stu-id="49402-137">Gets or sets the name of the entity set.</span></span></summary>
        <value><span data-ttu-id="49402-138">Um <see cref="T:System.String" /> valor que é o nome da entidade é definido para a entidade à qual o <see cref="T:System.Data.EntityKey" /> pertence.</span><span class="sxs-lookup"><span data-stu-id="49402-138">A <see cref="T:System.String" /> value that is the name of the entity set for the entity to which the <see cref="T:System.Data.EntityKey" /> belongs.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="49402-139">Retorna um valor que indica se essa instância é igual a um objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="49402-139">Returns a value that indicates whether this instance is equal to a specified object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Data.EntityKey other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Data.EntityKey other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.Equals(System.Data.EntityKey)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As EntityKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Data::EntityKey ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Data.EntityKey -&gt; bool" Usage="entityKey.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Data.EntityKey" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="49402-140">Um objeto <see cref="T:System.Data.EntityKey" /> a ser comparado com essa instância.</span><span class="sxs-lookup"><span data-stu-id="49402-140">An <see cref="T:System.Data.EntityKey" /> object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="49402-141">Retorna um valor que indica se essa instância é igual a um <see cref="T:System.Data.EntityKey" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="49402-141">Returns a value that indicates whether this instance is equal to a specified <see cref="T:System.Data.EntityKey" />.</span></span></summary>
        <returns><span data-ttu-id="49402-142"><see langword="true" /> se essa instância e <paramref name="other" /> tiverem valores iguais, caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="49402-142"><see langword="true" /> if this instance and <paramref name="other" /> have equal values; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49402-143">Chaves temporárias têm semântica de comparação diferentes que chaves permanentes:</span><span class="sxs-lookup"><span data-stu-id="49402-143">Temporary keys have different comparison semantics than permanent keys:</span></span>  
  
-   <span data-ttu-id="49402-144">Chaves temporárias usam igualdade de referência.</span><span class="sxs-lookup"><span data-stu-id="49402-144">Temporary keys use reference equality.</span></span> <span data-ttu-id="49402-145">Ou seja, duas referências aos exatos que mesmo temporário <xref:System.Data.EntityKey> instância são iguais, mas nenhum outro <xref:System.Data.EntityKey> instâncias são iguais.</span><span class="sxs-lookup"><span data-stu-id="49402-145">That is, two references to the exact same temporary <xref:System.Data.EntityKey> instance are equal but no other <xref:System.Data.EntityKey> instances are equal.</span></span>  
  
-   <span data-ttu-id="49402-146">Chaves permanentes determinam a igualdade com base nos valores das propriedades de chave independentes e o <xref:System.Data.Metadata.Edm.EntitySet>.</span><span class="sxs-lookup"><span data-stu-id="49402-146">Permanent keys determine equality based on the values of the contained key properties and the <xref:System.Data.Metadata.Edm.EntitySet>.</span></span> <span data-ttu-id="49402-147">Ou seja, você pode ter dois separado <xref:System.Data.EntityKey> instâncias são iguais se seus conjuntos de entidades são os mesmos e seus valores de chave são iguais.</span><span class="sxs-lookup"><span data-stu-id="49402-147">That is, you can have two separate <xref:System.Data.EntityKey> instances that are equal if their entity sets are the same and their key values are equal.</span></span>  
  
 <span data-ttu-id="49402-148">Além disso, há chaves temporárias <xref:System.Data.Metadata.Edm.EntitySet> ou valores de chave, mas chaves permanentes.</span><span class="sxs-lookup"><span data-stu-id="49402-148">In addition, temporary keys have no <xref:System.Data.Metadata.Edm.EntitySet> or key values, but permanent keys do.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="entityKey.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="49402-149">Um <see cref="T:System.Object" /> a ser comparado com essa instância.</span><span class="sxs-lookup"><span data-stu-id="49402-149">An <see cref="T:System.Object" /> to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="49402-150">Retorna um valor que indica se essa instância é igual a um objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="49402-150">Returns a value that indicates whether this instance is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="49402-151"><see langword="true" /> se essa instância e <paramref name="obj" /> tiverem valores iguais, caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="49402-151"><see langword="true" /> if this instance and <paramref name="obj" /> have equal values; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49402-152">Chaves temporárias têm semântica de comparação diferentes que chaves permanentes:</span><span class="sxs-lookup"><span data-stu-id="49402-152">Temporary keys have different comparison semantics than permanent keys:</span></span>  
  
-   <span data-ttu-id="49402-153">Chaves temporárias usam igualdade de referência.</span><span class="sxs-lookup"><span data-stu-id="49402-153">Temporary keys use reference equality.</span></span> <span data-ttu-id="49402-154">Ou seja, duas referências aos exatos que mesmo temporário <xref:System.Data.EntityKey> instância são iguais, mas nenhum outro <xref:System.Data.EntityKey> instâncias são iguais.</span><span class="sxs-lookup"><span data-stu-id="49402-154">That is, two references to the exact same temporary <xref:System.Data.EntityKey> instance are equal but no other <xref:System.Data.EntityKey> instances are equal.</span></span>  
  
-   <span data-ttu-id="49402-155">Chaves permanentes determinam a igualdade com base nos valores das propriedades de chave independentes e o <xref:System.Data.Metadata.Edm.EntitySet>.</span><span class="sxs-lookup"><span data-stu-id="49402-155">Permanent keys determine equality based on the values of the contained key properties and the <xref:System.Data.Metadata.Edm.EntitySet>.</span></span> <span data-ttu-id="49402-156">Ou seja, você pode ter dois separado <xref:System.Data.EntityKey> instâncias são iguais se suas <xref:System.Data.Metadata.Edm.EntitySet> objetos forem os mesmos e seus valores de chave são iguais.</span><span class="sxs-lookup"><span data-stu-id="49402-156">That is, you can have two separate <xref:System.Data.EntityKey> instances that are equal if their <xref:System.Data.Metadata.Edm.EntitySet> objects are the same and their key values are equal.</span></span>  
  
 <span data-ttu-id="49402-157">Além disso, há chaves temporárias <xref:System.Data.Metadata.Edm.EntitySet> ou valores de chave, mas chaves permanentes.</span><span class="sxs-lookup"><span data-stu-id="49402-157">In addition, temporary keys have no <xref:System.Data.Metadata.Edm.EntitySet> or key values, but permanent keys do.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEntitySet">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EntitySet GetEntitySet (System.Data.Metadata.Edm.MetadataWorkspace metadataWorkspace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.EntitySet GetEntitySet(class System.Data.Metadata.Edm.MetadataWorkspace metadataWorkspace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.GetEntitySet(System.Data.Metadata.Edm.MetadataWorkspace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::EntitySet ^ GetEntitySet(System::Data::Metadata::Edm::MetadataWorkspace ^ metadataWorkspace);" />
      <MemberSignature Language="F#" Value="member this.GetEntitySet : System.Data.Metadata.Edm.MetadataWorkspace -&gt; System.Data.Metadata.Edm.EntitySet" Usage="entityKey.GetEntitySet metadataWorkspace" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EntitySet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataWorkspace" Type="System.Data.Metadata.Edm.MetadataWorkspace" />
      </Parameters>
      <Docs>
        <param name="metadataWorkspace"><span data-ttu-id="49402-158">O workspace de metadados que contém a entidade.</span><span class="sxs-lookup"><span data-stu-id="49402-158">The metadata workspace that contains the entity.</span></span></param>
        <summary><span data-ttu-id="49402-159">Obtém a conjunto de entidades para essa chave de entidade do workspace de metadados fornecido.</span><span class="sxs-lookup"><span data-stu-id="49402-159">Gets the entity set for this entity key from the given metadata workspace.</span></span></summary>
        <returns><span data-ttu-id="49402-160">O <see cref="T:System.Data.Metadata.Edm.EntitySet" /> para a chave de entidade.</span><span class="sxs-lookup"><span data-stu-id="49402-160">The <see cref="T:System.Data.Metadata.Edm.EntitySet" /> for the entity key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49402-161">O conjunto de entidades é acessado com base no nome do contêiner de entidade e o nome da chave do conjunto de entidades.</span><span class="sxs-lookup"><span data-stu-id="49402-161">The entity set is accessed based on the entity container name and entity set name of the key.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="49402-162">O conjunto de entidades não pôde ser localizado no workspace de metadados especificado.</span><span class="sxs-lookup"><span data-stu-id="49402-162">The entity set could not be located in the specified metadata workspace.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="entityKey.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="49402-163">Serve como uma função de hash para o objeto <see cref="T:System.Data.EntityKey" /> atual.</span><span class="sxs-lookup"><span data-stu-id="49402-163">Serves as a hash function for the current <see cref="T:System.Data.EntityKey" /> object.</span></span> <span data-ttu-id="49402-164"><see cref="M:System.Data.EntityKey.GetHashCode" /> é adequado para algoritmos de hash e estruturas de dados como uma tabela de hash.</span><span class="sxs-lookup"><span data-stu-id="49402-164"><see cref="M:System.Data.EntityKey.GetHashCode" /> is suitable for hashing algorithms and data structures such as a hash table.</span></span></summary>
        <returns><span data-ttu-id="49402-165">Um código hash do <see cref="T:System.Data.EntityKey" /> atual.</span><span class="sxs-lookup"><span data-stu-id="49402-165">A hash code for the current <see cref="T:System.Data.EntityKey" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTemporary">
      <MemberSignature Language="C#" Value="public bool IsTemporary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTemporary" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityKey.IsTemporary" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsTemporary As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTemporary { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsTemporary : bool" Usage="System.Data.EntityKey.IsTemporary" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="49402-166">Obtém um valor que indica se o <see cref="T:System.Data.EntityKey" /> é temporário.</span><span class="sxs-lookup"><span data-stu-id="49402-166">Gets a value that indicates whether the <see cref="T:System.Data.EntityKey" /> is temporary.</span></span></summary>
        <value><span data-ttu-id="49402-167"><see langword="true" /> Se o <see cref="T:System.Data.EntityKey" /> temporário; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="49402-167"><see langword="true" /> if the <see cref="T:System.Data.EntityKey" /> is temporary; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49402-168">Quando uma nova entidade é criada, o [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)] define a chave temporária e define o <xref:System.Data.EntityKey.IsTemporary%2A> propriedade `true`.</span><span class="sxs-lookup"><span data-stu-id="49402-168">When a new entity is created, the [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)] defines temporary key and sets the <xref:System.Data.EntityKey.IsTemporary%2A> property to `true`.</span></span> <span data-ttu-id="49402-169">Quando você chama o <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> método, o [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)] atribui uma chave permanente e define o <xref:System.Data.EntityKey.IsTemporary%2A> propriedade `false`.</span><span class="sxs-lookup"><span data-stu-id="49402-169">When you call the <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> method, the [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)] assigns a permanent key and sets the <xref:System.Data.EntityKey.IsTemporary%2A> property to `false`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="49402-170">Chaves temporárias são criadas automaticamente pela estrutura; eles não podem ser construídos diretamente por um usuário.</span><span class="sxs-lookup"><span data-stu-id="49402-170">Temporary keys are constructed automatically by the framework; they cannot be constructed directly by a user.</span></span>  
  
 <span data-ttu-id="49402-171">Chaves temporárias têm semântica de comparação diferentes que chaves permanentes:</span><span class="sxs-lookup"><span data-stu-id="49402-171">Temporary keys have different comparison semantics than permanent keys:</span></span>  
  
-   <span data-ttu-id="49402-172">Chaves temporárias usam igualdade de referência.</span><span class="sxs-lookup"><span data-stu-id="49402-172">Temporary keys use reference equality.</span></span> <span data-ttu-id="49402-173">Ou seja, duas referências aos exatos que mesmo temporário <xref:System.Data.EntityKey> instância são iguais, mas nenhum outro <xref:System.Data.EntityKey> instâncias são iguais.</span><span class="sxs-lookup"><span data-stu-id="49402-173">That is, two references to the exact same temporary <xref:System.Data.EntityKey> instance are equal but no other <xref:System.Data.EntityKey> instances are equal.</span></span>  
  
-   <span data-ttu-id="49402-174">Chaves permanentes determinam a igualdade com base nos valores das propriedades de chave independentes e o <xref:System.Data.Metadata.Edm.EntitySet>.</span><span class="sxs-lookup"><span data-stu-id="49402-174">Permanent keys determine equality based on the values of the contained key properties and the <xref:System.Data.Metadata.Edm.EntitySet>.</span></span> <span data-ttu-id="49402-175">Ou seja, você pode ter dois separado <xref:System.Data.EntityKey> instâncias são iguais se seus conjuntos de entidades são os mesmos e seus valores de chave são iguais.</span><span class="sxs-lookup"><span data-stu-id="49402-175">That is, you can have two separate <xref:System.Data.EntityKey> instances that are equal if their entity sets are the same and their key values are equal.</span></span>  
  
 <span data-ttu-id="49402-176">Além disso, há chaves temporárias <xref:System.Data.Metadata.Edm.EntitySet> ou valores de chave, mas chaves permanentes.</span><span class="sxs-lookup"><span data-stu-id="49402-176">In addition, temporary keys have no <xref:System.Data.Metadata.Edm.EntitySet> or key values, but permanent keys do.</span></span>  
  
 <span data-ttu-id="49402-177">Quando o <xref:System.Data.Objects.ObjectStateEntry.AcceptChanges%2A> método é chamado em uma entidade <xref:System.Data.Objects.ObjectStateEntry> e as transições de entidade do <xref:System.Data.EntityState.Added> estado <xref:System.Data.EntityState.Unchanged> estado, o [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)] automaticamente calcula uma nova chave permanente para a entidade e sincroniza todos os temporários referências de chave.</span><span class="sxs-lookup"><span data-stu-id="49402-177">When the <xref:System.Data.Objects.ObjectStateEntry.AcceptChanges%2A> method is called on an entity's <xref:System.Data.Objects.ObjectStateEntry> and the entity transitions from the <xref:System.Data.EntityState.Added> state to <xref:System.Data.EntityState.Unchanged> state, the [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)] automatically computes a new permanent key for the entity and synchronizes all temporary key references.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoEntitySetKey">
      <MemberSignature Language="C#" Value="public static readonly System.Data.EntityKey NoEntitySetKey;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Data.EntityKey NoEntitySetKey" />
      <MemberSignature Language="DocId" Value="F:System.Data.EntityKey.NoEntitySetKey" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NoEntitySetKey As EntityKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Data::EntityKey ^ NoEntitySetKey;" />
      <MemberSignature Language="F#" Value=" staticval mutable NoEntitySetKey : System.Data.EntityKey" Usage="System.Data.EntityKey.NoEntitySetKey" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EntityKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="49402-178">Um singleton <see cref="T:System.Data.EntityKey" /> pelo qual uma entidade somente leitura é identificada.</span><span class="sxs-lookup"><span data-stu-id="49402-178">A singleton <see cref="T:System.Data.EntityKey" /> by which a read-only entity is identified.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49402-179">Uma entidade somente leitura identifica uma entidade que é válida em todos os aspectos, exceto que ele não está associado um conjunto de entidades reais.</span><span class="sxs-lookup"><span data-stu-id="49402-179">A read-only entity identifies an entity that is valid in every way, except that it is not associated with an actual entity set.</span></span> <span data-ttu-id="49402-180">Isso pode ocorrer como parte do resultado de uma [!INCLUDE[esql](~/includes/esql-md.md)] consulta que constrói e retorna uma instância de entidade especificada dentro do texto da consulta (em vez de uma entidade que foi recuperada de uma tabela de banco de dados).</span><span class="sxs-lookup"><span data-stu-id="49402-180">This can occur as part of the result of an [!INCLUDE[esql](~/includes/esql-md.md)] query that constructs and returns an entity instance specified within the text of the query (as opposed to an entity that was retrieved from a database table).</span></span> <span data-ttu-id="49402-181">Uma entidade que não tem uma entidade definida não pode ser mantida no banco de dados até que ele é associado um conjunto de entidades.</span><span class="sxs-lookup"><span data-stu-id="49402-181">An entity that does not have an entity set cannot be persisted to the database until it is associated with some entity set.</span></span> <span data-ttu-id="49402-182">Portanto, o materializer objeto tratará esse tipo de entidade como se o <xref:System.Data.Objects.MergeOption.NoTracking> opção de mesclagem foi especificada, independentemente da opção de mesclagem real que foi especificada.</span><span class="sxs-lookup"><span data-stu-id="49402-182">Therefore, the object materializer will treat this kind of entity as if the <xref:System.Data.Objects.MergeOption.NoTracking> merge option was specified, regardless of the actual merge option that was specified.</span></span> <span data-ttu-id="49402-183">Um objeto de entidade será criado, mas sua identidade não será resolvida e ele não será adicionado ao Gerenciador de estado como parte do processo de materialização.</span><span class="sxs-lookup"><span data-stu-id="49402-183">An entity object will be created, but its identity will not be resolved and it will not be added to the state manager as part of the materialization process.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDeserialized">
      <MemberSignature Language="C#" Value="public void OnDeserialized (System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnDeserialized(valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.OnDeserialized(System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnDeserialized (context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnDeserialized(System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="member this.OnDeserialized : System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="entityKey.OnDeserialized context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Serialization.OnDeserialized</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="49402-184">Descreve a origem e o destino de um determinado fluxo serializado e fornece um contexto adicional definido pelo chamador.</span><span class="sxs-lookup"><span data-stu-id="49402-184">Describes the source and destination of a given serialized stream and provides an additional caller-defined context.</span></span></param>
        <summary><span data-ttu-id="49402-185">Método auxiliar que é usado para desserializar um <see cref="T:System.Data.EntityKey" />.</span><span class="sxs-lookup"><span data-stu-id="49402-185">Helper method that is used to deserialize an <see cref="T:System.Data.EntityKey" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49402-186"><xref:System.Data.EntityKey.OnDeserialized%2A> é usado pelos serviços de objeto ao desserializar um <xref:System.Data.EntityKey>.</span><span class="sxs-lookup"><span data-stu-id="49402-186"><xref:System.Data.EntityKey.OnDeserialized%2A> is used by Object Services when deserializing an <xref:System.Data.EntityKey>.</span></span> <span data-ttu-id="49402-187">Para obter mais informações, consulte [serializar objetos](https://msdn.microsoft.com/library/06c77f9b-5b2e-4c78-b3e3-8c148ba0ea99).</span><span class="sxs-lookup"><span data-stu-id="49402-187">For more information, see [Serializing Objects](https://msdn.microsoft.com/library/06c77f9b-5b2e-4c78-b3e3-8c148ba0ea99).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDeserializing">
      <MemberSignature Language="C#" Value="public void OnDeserializing (System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnDeserializing(valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.OnDeserializing(System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnDeserializing (context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnDeserializing(System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="member this.OnDeserializing : System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="entityKey.OnDeserializing context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Serialization.OnDeserializing</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="49402-188">Descreve a origem e o destino de um determinado fluxo serializado e fornece um contexto adicional definido pelo chamador.</span><span class="sxs-lookup"><span data-stu-id="49402-188">Describes the source and destination of a given serialized stream, and provides an additional caller-defined context.</span></span></param>
        <summary><span data-ttu-id="49402-189">Método auxiliar que é usado para desserializar um <see cref="T:System.Data.EntityKey" />.</span><span class="sxs-lookup"><span data-stu-id="49402-189">Helper method that is used to deserialize an <see cref="T:System.Data.EntityKey" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49402-190"><xref:System.Data.EntityKey.OnDeserializing%2A> é usado pelos serviços de objeto ao desserializar um <xref:System.Data.EntityKey>.</span><span class="sxs-lookup"><span data-stu-id="49402-190"><xref:System.Data.EntityKey.OnDeserializing%2A> is used by Object Services when deserializing an <xref:System.Data.EntityKey>.</span></span> <span data-ttu-id="49402-191">Para obter mais informações, consulte [serializar objetos](https://msdn.microsoft.com/library/06c77f9b-5b2e-4c78-b3e3-8c148ba0ea99).</span><span class="sxs-lookup"><span data-stu-id="49402-191">For more information, see [Serializing Objects](https://msdn.microsoft.com/library/06c77f9b-5b2e-4c78-b3e3-8c148ba0ea99).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Data.EntityKey key1, System.Data.EntityKey key2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Data.EntityKey key1, class System.Data.EntityKey key2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.op_Equality(System.Data.EntityKey,System.Data.EntityKey)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (key1 As EntityKey, key2 As EntityKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Data::EntityKey ^ key1, System::Data::EntityKey ^ key2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Data.EntityKey * System.Data.EntityKey -&gt; bool" Usage="key1 = key2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key1" Type="System.Data.EntityKey" />
        <Parameter Name="key2" Type="System.Data.EntityKey" />
      </Parameters>
      <Docs>
        <param name="key1"><span data-ttu-id="49402-192">Um <see cref="T:System.Data.EntityKey" /> para comparar.</span><span class="sxs-lookup"><span data-stu-id="49402-192">A <see cref="T:System.Data.EntityKey" /> to compare.</span></span></param>
        <param name="key2"><span data-ttu-id="49402-193">Um <see cref="T:System.Data.EntityKey" /> para comparar.</span><span class="sxs-lookup"><span data-stu-id="49402-193">A <see cref="T:System.Data.EntityKey" /> to compare.</span></span></param>
        <summary><span data-ttu-id="49402-194">Compara dois objetos <see cref="T:System.Data.EntityKey" />.</span><span class="sxs-lookup"><span data-stu-id="49402-194">Compares two <see cref="T:System.Data.EntityKey" /> objects.</span></span></summary>
        <returns><span data-ttu-id="49402-195"><see langword="true" /> se os valores <paramref name="key1" /> e <paramref name="key2" /> forem iguais, caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="49402-195"><see langword="true" /> if the <paramref name="key1" /> and <paramref name="key2" /> values are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49402-196">Chaves temporárias têm semântica de comparação diferentes que chaves permanentes:</span><span class="sxs-lookup"><span data-stu-id="49402-196">Temporary keys have different comparison semantics than permanent keys:</span></span>  
  
-   <span data-ttu-id="49402-197">Chaves temporárias usam igualdade de referência.</span><span class="sxs-lookup"><span data-stu-id="49402-197">Temporary keys use reference equality.</span></span> <span data-ttu-id="49402-198">Ou seja, duas referências aos exatos que mesmo temporário <xref:System.Data.EntityKey> instância são iguais, mas nenhum outro <xref:System.Data.EntityKey> instâncias são iguais.</span><span class="sxs-lookup"><span data-stu-id="49402-198">That is, two references to the exact same temporary <xref:System.Data.EntityKey> instance are equal but no other <xref:System.Data.EntityKey> instances are equal.</span></span>  
  
-   <span data-ttu-id="49402-199">Chaves permanentes determinam a igualdade com base nos valores das propriedades de chave independentes e o <xref:System.Data.Metadata.Edm.EntitySet>.</span><span class="sxs-lookup"><span data-stu-id="49402-199">Permanent keys determine equality based on the values of the contained key properties and the <xref:System.Data.Metadata.Edm.EntitySet>.</span></span> <span data-ttu-id="49402-200">Ou seja, você pode ter dois separado <xref:System.Data.EntityKey> instâncias são iguais se seus conjuntos de entidades são os mesmos e seus valores de chave são iguais.</span><span class="sxs-lookup"><span data-stu-id="49402-200">That is, you can have two separate <xref:System.Data.EntityKey> instances that are equal if their entity sets are the same and their key values are equal.</span></span>  
  
 <span data-ttu-id="49402-201">Além disso, há chaves temporárias <xref:System.Data.Metadata.Edm.EntitySet> ou valores de chave, mas chaves permanentes.</span><span class="sxs-lookup"><span data-stu-id="49402-201">In addition, temporary keys have no <xref:System.Data.Metadata.Edm.EntitySet> or key values, but permanent keys do.</span></span>  
  
 <span data-ttu-id="49402-202">É o método equivalente para esse operador <xref:System.Data.EntityKey.Equals%28System.Data.EntityKey%29?displayProperty=nameWithType></format>
        </span><span class="sxs-lookup"><span data-stu-id="49402-202">The equivalent method for this operator is <xref:System.Data.EntityKey.Equals%28System.Data.EntityKey%29?displayProperty=nameWithType></format>
        </span></span></remarks>
      <span data-ttu-id="49402-203"></Docs>
    </Member>
    <Member MemberName="op_Inequality"> <MemberSignature Language="C#" Value="public static bool op_Inequality (System.Data.EntityKey key1, System.Data.EntityKey key2);" /></span><span class="sxs-lookup"><span data-stu-id="49402-203"></Docs>
    </Member>
    <Member MemberName="op_Inequality"> <MemberSignature Language="C#" Value="public static bool op_Inequality (System.Data.EntityKey key1, System.Data.EntityKey key2);" /></span></span>
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Data.EntityKey key1, class System.Data.EntityKey key2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.op_Inequality(System.Data.EntityKey,System.Data.EntityKey)" />
      <span data-ttu-id="49402-204"><MemberType>Method</MemberType> <AssemblyInfo> <AssemblyName>System.Data.Entity</AssemblyName> <AssemblyVersion>4.0.0.0</AssemblyVersion> </AssemblyInfo></span><span class="sxs-lookup"><span data-stu-id="49402-204"><MemberType>Method</MemberType> <AssemblyInfo> <AssemblyName>System.Data.Entity</AssemblyName> <AssemblyVersion>4.0.0.0</AssemblyVersion> </AssemblyInfo></span></span>
      <span data-ttu-id="49402-205"><ReturnValue> <ReturnType>System.Boolean</ReturnType> </ReturnValue></span><span class="sxs-lookup"><span data-stu-id="49402-205"><ReturnValue> <ReturnType>System.Boolean</ReturnType> </ReturnValue></span></span>
      <span data-ttu-id="49402-206"><Parameters> <Parameter Name="key1" Type="System.Data.EntityKey" /> <Parameter Name="key2" Type="System.Data.EntityKey" /> </Parameters></span><span class="sxs-lookup"><span data-stu-id="49402-206"><Parameters> <Parameter Name="key1" Type="System.Data.EntityKey" /> <Parameter Name="key2" Type="System.Data.EntityKey" /> </Parameters></span></span>
      <Docs>
        <param name="key1"><span data-ttu-id="49402-207">Um <see cref="T:System.Data.EntityKey" /> para comparar.</span><span class="sxs-lookup"><span data-stu-id="49402-207">A <see cref="T:System.Data.EntityKey" /> to compare.</span></span></param>
        <param name="key2"><span data-ttu-id="49402-208">Um <see cref="T:System.Data.EntityKey" /> para comparar.</span><span class="sxs-lookup"><span data-stu-id="49402-208">A <see cref="T:System.Data.EntityKey" /> to compare.</span></span></param>
        <summary><span data-ttu-id="49402-209">Compara dois objetos <see cref="T:System.Data.EntityKey" />.</span><span class="sxs-lookup"><span data-stu-id="49402-209">Compares two <see cref="T:System.Data.EntityKey" /> objects.</span></span></summary>
        <returns>
          <span data-ttu-id="49402-210"><see langword="true" /> se os valores <paramref name="key1" /> e <paramref name="key2" /> não forem iguais, caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="49402-210"><see langword="true" /> if the <paramref name="key1" /> and <paramref name="key2" /> values are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <span data-ttu-id="49402-211"><format type="text/markdown">&LT;! [CDATA [</span><span class="sxs-lookup"><span data-stu-id="49402-211"><format type="text/markdown"><![CDATA[</span></span>  
  
## Remarks  
 <span data-ttu-id="49402-212">Chaves temporárias têm semântica de comparação diferentes que chaves permanentes:</span><span class="sxs-lookup"><span data-stu-id="49402-212">Temporary keys have different comparison semantics than permanent keys:</span></span>  
  
-   <span data-ttu-id="49402-213">Chaves temporárias usam igualdade de referência.</span><span class="sxs-lookup"><span data-stu-id="49402-213">Temporary keys use reference equality.</span></span> <span data-ttu-id="49402-214">Ou seja, duas referências aos exatos que mesmo temporário <xref:System.Data.EntityKey> instância são iguais, mas nenhum outro <xref:System.Data.EntityKey> instâncias são iguais.</span><span class="sxs-lookup"><span data-stu-id="49402-214">That is, two references to the exact same temporary <xref:System.Data.EntityKey> instance are equal but no other <xref:System.Data.EntityKey> instances are equal.</span></span>  
  
-   <span data-ttu-id="49402-215">Chaves permanentes determinam a igualdade com base nos valores das propriedades de chave independentes e o <xref:System.Data.Metadata.Edm.EntitySet>.</span><span class="sxs-lookup"><span data-stu-id="49402-215">Permanent keys determine equality based on the values of the contained key properties and the <xref:System.Data.Metadata.Edm.EntitySet>.</span></span> <span data-ttu-id="49402-216">Ou seja, você pode ter dois separado <xref:System.Data.EntityKey> instâncias são iguais se seus conjuntos de entidades são os mesmos e seus valores de chave são iguais.</span><span class="sxs-lookup"><span data-stu-id="49402-216">That is, you can have two separate <xref:System.Data.EntityKey> instances that are equal if their entity sets are the same and their key values are equal.</span></span>  
  
 <span data-ttu-id="49402-217">Além disso, há chaves temporárias <xref:System.Data.Metadata.Edm.EntitySet> ou valores de chave, mas teclas regulares.</span><span class="sxs-lookup"><span data-stu-id="49402-217">In addition, temporary keys have no <xref:System.Data.Metadata.Edm.EntitySet> or key values, but regular keys do.</span></span>  
  
 <span data-ttu-id="49402-218">O método equivalente para esse operador é <xref:System.Data.EntityKey.Equals%28System.Data.EntityKey%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="49402-218">The equivalent method for this operator is <xref:System.Data.EntityKey.Equals%28System.Data.EntityKey%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Data.EntityKey key1, System.Data.EntityKey key2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Data.EntityKey key1, class System.Data.EntityKey key2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.op_Inequality(System.Data.EntityKey,System.Data.EntityKey)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (key1 As EntityKey, key2 As EntityKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Data::EntityKey ^ key1, System::Data::EntityKey ^ key2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Data.EntityKey * System.Data.EntityKey -&gt; bool" Usage="System.Data.EntityKey.op_Inequality (key1, key2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key1" Type="System.Data.EntityKey" />
        <Parameter Name="key2" Type="System.Data.EntityKey" />
      </Parameters>
      <Docs>
        <param name="key1"><span data-ttu-id="49402-219">Um <see cref="T:System.Data.EntityKey" /> para comparar.</span><span class="sxs-lookup"><span data-stu-id="49402-219">A <see cref="T:System.Data.EntityKey" /> to compare.</span></span></param>
        <param name="key2"><span data-ttu-id="49402-220">Um <see cref="T:System.Data.EntityKey" /> para comparar.</span><span class="sxs-lookup"><span data-stu-id="49402-220">A <see cref="T:System.Data.EntityKey" /> to compare.</span></span></param>
        <summary><span data-ttu-id="49402-221">Compara dois objetos <see cref="T:System.Data.EntityKey" />.</span><span class="sxs-lookup"><span data-stu-id="49402-221">Compares two <see cref="T:System.Data.EntityKey" /> objects.</span></span></summary>
        <returns><span data-ttu-id="49402-222"><see langword="true" /> se os valores <paramref name="key1" /> e <paramref name="key2" /> não forem iguais, caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="49402-222"><see langword="true" /> if the <paramref name="key1" /> and <paramref name="key2" /> values are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49402-223">Chaves temporárias têm semântica de comparação diferentes que chaves permanentes:</span><span class="sxs-lookup"><span data-stu-id="49402-223">Temporary keys have different comparison semantics than permanent keys:</span></span>  
  
-   <span data-ttu-id="49402-224">Chaves temporárias usam igualdade de referência.</span><span class="sxs-lookup"><span data-stu-id="49402-224">Temporary keys use reference equality.</span></span> <span data-ttu-id="49402-225">Ou seja, duas referências aos exatos que mesmo temporário <xref:System.Data.EntityKey> instância são iguais, mas nenhum outro <xref:System.Data.EntityKey> instâncias são iguais.</span><span class="sxs-lookup"><span data-stu-id="49402-225">That is, two references to the exact same temporary <xref:System.Data.EntityKey> instance are equal but no other <xref:System.Data.EntityKey> instances are equal.</span></span>  
  
-   <span data-ttu-id="49402-226">Chaves permanentes determinam a igualdade com base nos valores das propriedades de chave independentes e o <xref:System.Data.Metadata.Edm.EntitySet>.</span><span class="sxs-lookup"><span data-stu-id="49402-226">Permanent keys determine equality based on the values of the contained key properties and the <xref:System.Data.Metadata.Edm.EntitySet>.</span></span> <span data-ttu-id="49402-227">Ou seja, você pode ter dois separado <xref:System.Data.EntityKey> instâncias são iguais se seus conjuntos de entidades são os mesmos e seus valores de chave são iguais.</span><span class="sxs-lookup"><span data-stu-id="49402-227">That is, you can have two separate <xref:System.Data.EntityKey> instances that are equal if their entity sets are the same and their key values are equal.</span></span>  
  
 <span data-ttu-id="49402-228">Além disso, há chaves temporárias <xref:System.Data.Metadata.Edm.EntitySet> ou valores de chave, mas teclas regulares.</span><span class="sxs-lookup"><span data-stu-id="49402-228">In addition, temporary keys have no <xref:System.Data.Metadata.Edm.EntitySet> or key values, but regular keys do.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>