<Type Name="IDbCommand" FullName="System.Data.IDbCommand">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a8fda34795784f1b946fc4e44fc2862ffac7c97a" />
    <Meta Name="ms.sourcegitcommit" Value="af562076243cb1c2c1d8518e9f1b489f858cc658" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/15/2018" />
    <Meta Name="ms.locfileid" Value="35652338" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDbCommand : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDbCommand implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.IDbCommand" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDbCommand&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDbCommand : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="e0a04-101">Representa uma instrução SQL que é executada enquanto está conectada a uma fonte de dados e que é implementada por provedores de dados .NET Framework que acessam bancos de dados relacionais.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e0a04-101">Represents an SQL statement that is executed while connected to a data source, and is implemented by .NET Framework data providers that access relational databases.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0a04-102">O <xref:System.Data.IDbCommand> interface permite uma herança de classe implementar uma classe de comando, que representa uma instrução SQL que é executada em uma fonte de dados.</span><span class="sxs-lookup"><span data-stu-id="e0a04-102">The <xref:System.Data.IDbCommand> interface enables an inheriting class to implement a Command class, which represents an SQL statement that is executed at a data source.</span></span> <span data-ttu-id="e0a04-103">Para obter mais informações sobre classes de comando, consulte [executando um comando](~/docs/framework/data/adonet/executing-a-command.md).</span><span class="sxs-lookup"><span data-stu-id="e0a04-103">For more information about Command classes, see [Executing a Command](~/docs/framework/data/adonet/executing-a-command.md).</span></span>  
  
 <span data-ttu-id="e0a04-104">Um aplicativo não cria uma instância do <xref:System.Data.IDbCommand> interface diretamente, mas cria uma instância de uma classe que implementa o <xref:System.Data.IDbCommand> interface.</span><span class="sxs-lookup"><span data-stu-id="e0a04-104">An application does not create an instance of the <xref:System.Data.IDbCommand> interface directly, but creates an instance of a class that implements the <xref:System.Data.IDbCommand> interface.</span></span>  
  
 <span data-ttu-id="e0a04-105">As classes que implementam <xref:System.Data.IDbCommand> deve implementar todos os seus membros e geralmente definem membros adicionais para adicionar funcionalidade específica do provedor.</span><span class="sxs-lookup"><span data-stu-id="e0a04-105">Classes that implement <xref:System.Data.IDbCommand> must implement all its members, and typically define additional members to add provider-specific functionality.</span></span> <span data-ttu-id="e0a04-106">Por exemplo, o <xref:System.Data.IDbCommand> interface define o <xref:System.Data.IDbCommand.ExecuteNonQuery%2A> método.</span><span class="sxs-lookup"><span data-stu-id="e0a04-106">For example, the <xref:System.Data.IDbCommand> interface defines the <xref:System.Data.IDbCommand.ExecuteNonQuery%2A> method.</span></span> <span data-ttu-id="e0a04-107">Por sua vez, o <xref:System.Data.SqlClient.SqlCommand> classe herda esse método e também define o <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> método.</span><span class="sxs-lookup"><span data-stu-id="e0a04-107">In turn, the <xref:System.Data.SqlClient.SqlCommand> class inherits this method, and also defines the <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e0a04-108">O exemplo a seguir cria instâncias de classes derivadas, <xref:System.Data.SqlClient.SqlConnection>, <xref:System.Data.SqlClient.SqlCommand>, e <xref:System.Data.SqlClient.SqlDataReader>.</span><span class="sxs-lookup"><span data-stu-id="e0a04-108">The following example creates instances of the derived classes, <xref:System.Data.SqlClient.SqlConnection>, <xref:System.Data.SqlClient.SqlCommand>, and <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="e0a04-109">O exemplo lê os dados, gravá-la no console.</span><span class="sxs-lookup"><span data-stu-id="e0a04-109">The example reads through the data, writing it to the console.</span></span> <span data-ttu-id="e0a04-110">Por fim, o exemplo fecha o <xref:System.Data.SqlClient.SqlDataReader>, em seguida, o <xref:System.Data.SqlClient.SqlConnection>.</span><span class="sxs-lookup"><span data-stu-id="e0a04-110">Finally, the example closes the <xref:System.Data.SqlClient.SqlDataReader>, then the <xref:System.Data.SqlClient.SqlConnection>.</span></span>  
  
 [!code-csharp[Classic WebData SqlCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="e0a04-111">
        <para>Para promover a consistência entre os provedores de dados .NET Framework, nomeie a classe herdada no formulário <paramref name="PrvClassname" /> onde <paramref name="Prv" /> é o prefixo uniforme fornecido para todas as classes em um namespace específico do provedor de dados do .NET Framework. Por exemplo, <paramref name="Sql" /> é o prefixo do <see cref="T:System.Data.SqlClient.SqlCommand" /> classe no <see langword="System.Data.SqlClient" /> namespace.  Ao herdar do <see cref="T:System.Data.IDbCommand" /> interface, você deve implementar os seguintes construtores: <list type="table"><listheader><term> Item </term><description> descrição </description></listheader><item><term> PrvCommand() </term><description> inicializa uma nova instância da classe PrvCommand.  </description></item><item><term> PrvCommand (cadeia de caracteres cmdText) </term><description> inicializa uma nova instância da classe PrvCommand com o texto da consulta.  </description></item><item><term> PrvCommand (cadeia de caracteres cmdText, conexão PrvConnection) </term><description> inicializa uma nova instância da classe PrvCommand com o texto da consulta e um PrvConnection.  </description></item><item><term> PrvCommand (cadeia de caracteres cmdText, PrvConnection conexão, transação PrvTransaction) </term><description> inicializa uma nova instância da classe PrvCommand com o texto da consulta, um PrvConnection e o PrvTransaction.  </description></item></list></para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="e0a04-111">
          <para>To promote consistency among .NET Framework data providers, name the inheriting class in the form <paramref name="PrvClassname" /> where <paramref name="Prv" /> is the uniform prefix given to all classes in a specific .NET Framework data provider namespace. For example, <paramref name="Sql" /> is the prefix of the <see cref="T:System.Data.SqlClient.SqlCommand" /> class in the <see langword="System.Data.SqlClient" /> namespace.  When you inherit from the <see cref="T:System.Data.IDbCommand" /> interface, you should implement the following constructors:  <list type="table"><listheader><term> Item  </term><description> Description  </description></listheader><item><term> PrvCommand()  </term><description> Initializes a new instance of the PrvCommand class.  </description></item><item><term> PrvCommand(string cmdText)  </term><description> Initializes a new instance of the PrvCommand class with the text of the query.  </description></item><item><term> PrvCommand(string cmdText, PrvConnection connection)  </term><description> Initializes a new instance of the PrvCommand class with the text of the query and a PrvConnection.  </description></item><item><term> PrvCommand(string cmdText, PrvConnection connection, PrvTransaction transaction)  </term><description> Initializes a new instance of the PrvCommand class with the text of the query, a PrvConnection, and the PrvTransaction.  </description></item></list></para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Data.Common.DbDataAdapter" />
    <altmember cref="T:System.Data.IDbConnection" />
    <altmember cref="T:System.Data.OleDb.OleDbCommand" />
    <altmember cref="T:System.Data.SqlClient.SqlCommand" />
  </Docs>
  <Members>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cancel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e0a04-112">Tenta cancelar a execução de um <see cref="T:System.Data.IDbCommand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0a04-112">Attempts to cancels the execution of an <see cref="T:System.Data.IDbCommand" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0a04-113">Se não há nada para cancelar, nada acontecerá.</span><span class="sxs-lookup"><span data-stu-id="e0a04-113">If there is nothing to cancel, nothing happens.</span></span> <span data-ttu-id="e0a04-114">No entanto, se houver um comando no processo e a tentativa de cancelar falha, nenhuma exceção é gerada.</span><span class="sxs-lookup"><span data-stu-id="e0a04-114">However, if there is a command in process, and the attempt to cancel fails, no exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandText">
      <MemberSignature Language="C#" Value="public string CommandText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandText" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.CommandText" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0a04-115">Obtém ou define o comando de texto a ser executado na fonte de dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0a04-115">Gets or sets the text command to run against the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e0a04-116">O comando de texto a ser executado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0a04-116">The text command to execute.</span>
          </span>
          <span data-ttu-id="e0a04-117">O valor padrão é uma cadeia de caracteres vazia ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0a04-117">The default value is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0a04-118">Quando o <xref:System.Data.IDbCommand.CommandType%2A> está definida como `StoredProcedure`, defina o <xref:System.Data.IDbCommand.CommandText%2A> propriedade para o nome do procedimento armazenado.</span><span class="sxs-lookup"><span data-stu-id="e0a04-118">When the <xref:System.Data.IDbCommand.CommandType%2A> property is set to `StoredProcedure`, set the <xref:System.Data.IDbCommand.CommandText%2A> property to the name of the stored procedure.</span></span> <span data-ttu-id="e0a04-119">O usuário pode ser necessário usar a sintaxe de escape de caracteres se o nome do procedimento armazenado contiver caracteres especiais.</span><span class="sxs-lookup"><span data-stu-id="e0a04-119">The user may be required to use escape character syntax if the stored procedure name contains any special characters.</span></span> <span data-ttu-id="e0a04-120">O comando chamará esse procedimento armazenado quando você chama um dos métodos Execute.</span><span class="sxs-lookup"><span data-stu-id="e0a04-120">The command will call this stored procedure when you call one of the Execute methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e0a04-121">O exemplo a seguir cria uma instância de uma classe derivada, <xref:System.Data.OleDb.OleDbCommand> e define algumas de suas propriedades.</span><span class="sxs-lookup"><span data-stu-id="e0a04-121">The following example creates an instance of a derived class, <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData IDbCommand.CommandText Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandText Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDbCommand.CommandText Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandText Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.IDbCommand.CommandType" />
        <altmember cref="P:System.Data.IDbCommand.UpdatedRowSource" />
      </Docs>
    </Member>
    <Member MemberName="CommandTimeout">
      <MemberSignature Language="C#" Value="public int CommandTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CommandTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.CommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CommandTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0a04-122">Obtém ou define o tempo de espera antes do término da tentativa de executar um comando e antes de gerar um erro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0a04-122">Gets or sets the wait time before terminating the attempt to execute a command and generating an error.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e0a04-123">O tempo de espera (em segundos) para a execução do comando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0a04-123">The time (in seconds) to wait for the command to execute.</span>
          </span>
          <span data-ttu-id="e0a04-124">O valor padrão é 30 segundos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0a04-124">The default value is 30 seconds.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e0a04-125">O exemplo a seguir cria uma instância de uma classe derivada, <xref:System.Data.SqlClient.SqlCommand> e define algumas de suas propriedades.</span><span class="sxs-lookup"><span data-stu-id="e0a04-125">The following example creates an instance of a derived class, <xref:System.Data.SqlClient.SqlCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData IDbCommand.CommandTimeout Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandTimeout Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDbCommand.CommandTimeout Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandTimeout Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e0a04-126">O valor atribuído da propriedade é menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0a04-126">The property value assigned is less than 0.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.IDbCommand.CommandText" />
        <altmember cref="P:System.Data.IDbCommand.Connection" />
        <altmember cref="P:System.Data.IDbCommand.CommandType" />
      </Docs>
    </Member>
    <Member MemberName="CommandType">
      <MemberSignature Language="C#" Value="public System.Data.CommandType CommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.CommandType CommandType" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.CommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandType As CommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::CommandType CommandType { System::Data::CommandType get(); void set(System::Data::CommandType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0a04-127">Indica ou especifica como a propriedade <see cref="P:System.Data.IDbCommand.CommandText" /> é interpretada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0a04-127">Indicates or specifies how the <see cref="P:System.Data.IDbCommand.CommandText" /> property is interpreted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e0a04-128">Um dos valores de <see cref="T:System.Data.CommandType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0a04-128">One of the <see cref="T:System.Data.CommandType" /> values.</span>
          </span>
          <span data-ttu-id="e0a04-129">O padrão é <see langword="Text" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0a04-129">The default is <see langword="Text" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0a04-130">Quando você define o <xref:System.Data.IDbCommand.CommandType%2A> propriedade `StoredProcedure`, você deve definir o <xref:System.Data.IDbCommand.CommandText%2A> propriedade para o nome do procedimento armazenado.</span><span class="sxs-lookup"><span data-stu-id="e0a04-130">When you set the <xref:System.Data.IDbCommand.CommandType%2A> property to `StoredProcedure`, you should set the <xref:System.Data.IDbCommand.CommandText%2A> property to the name of the stored procedure.</span></span> <span data-ttu-id="e0a04-131">O comando é executado esse procedimento armazenado quando você chama um dos métodos Execute.</span><span class="sxs-lookup"><span data-stu-id="e0a04-131">The command executes this stored procedure when you call one of the Execute methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.IDbConnection Connection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.Connection" />
      <MemberSignature Language="VB.NET" Value="Public Property Connection As IDbConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbConnection ^ Connection { System::Data::IDbConnection ^ get(); void set(System::Data::IDbConnection ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0a04-132">Obtém ou define o <see cref="T:System.Data.IDbConnection" /> usado por essa instância do <see cref="T:System.Data.IDbCommand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0a04-132">Gets or sets the <see cref="T:System.Data.IDbConnection" /> used by this instance of the <see cref="T:System.Data.IDbCommand" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e0a04-133">A conexão com a fonte de dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0a04-133">The connection to the data source.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParameter">
      <MemberSignature Language="C#" Value="public System.Data.IDbDataParameter CreateParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.IDbDataParameter CreateParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.CreateParameter" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateParameter () As IDbDataParameter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::IDbDataParameter ^ CreateParameter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbDataParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e0a04-134">Cria uma nova instância de um objeto <see cref="T:System.Data.IDbDataParameter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0a04-134">Creates a new instance of an <see cref="T:System.Data.IDbDataParameter" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e0a04-135">Um objeto <see langword="IDbDataParameter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0a04-135">An <see langword="IDbDataParameter" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0a04-136">Ao herdar de <xref:System.Data.IDbCommand>, um provedor de dados .NET Framework implementa uma versão fortemente tipada de <xref:System.Data.IDbCommand.CreateParameter%2A>.</span><span class="sxs-lookup"><span data-stu-id="e0a04-136">When inheriting from <xref:System.Data.IDbCommand>, a .NET Framework data provider implements a strongly-typed version of <xref:System.Data.IDbCommand.CreateParameter%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteNonQuery">
      <MemberSignature Language="C#" Value="public int ExecuteNonQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ExecuteNonQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.ExecuteNonQuery" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteNonQuery () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ExecuteNonQuery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e0a04-137">Executa uma instrução SQL no objeto <see langword="Connection" /> de um provedor de dados .NET Framework e retorna o número de linhas afetadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0a04-137">Executes an SQL statement against the <see langword="Connection" /> object of a .NET Framework data provider, and returns the number of rows affected.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e0a04-138">O número de linhas afetadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0a04-138">The number of rows affected.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0a04-139">Você pode usar o <xref:System.Data.IDbCommand.ExecuteNonQuery%2A> para executar operações de catálogo (por exemplo, consultar a estrutura de um banco de dados ou criar objetos de banco de dados como tabelas), ou para alterar os dados em um banco de dados sem usar um <xref:System.Data.DataSet> executando instruções UPDATE, INSERT ou DELETE.</span><span class="sxs-lookup"><span data-stu-id="e0a04-139">You can use the <xref:System.Data.IDbCommand.ExecuteNonQuery%2A> to perform catalog operations (for example, querying the structure of a database or creating database objects such as tables), or to change the data in a database without using a <xref:System.Data.DataSet> by executing UPDATE, INSERT, or DELETE statements.</span></span>  
  
 <span data-ttu-id="e0a04-140">Embora o <xref:System.Data.IDbCommand.ExecuteNonQuery%2A> não retornar nenhuma linha, os parâmetros de saída ou retornar valores mapeados para parâmetros são preenchidos com dados.</span><span class="sxs-lookup"><span data-stu-id="e0a04-140">Although the <xref:System.Data.IDbCommand.ExecuteNonQuery%2A> does not return any rows, any output parameters or return values mapped to parameters are populated with data.</span></span>  
  
 <span data-ttu-id="e0a04-141">Para instruções UPDATE, INSERT e DELETE, o valor retornado é o número de linhas afetadas pelo comando.</span><span class="sxs-lookup"><span data-stu-id="e0a04-141">For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.</span></span> <span data-ttu-id="e0a04-142">Para todos os outros tipos de instruções, o valor retornado é -1.</span><span class="sxs-lookup"><span data-stu-id="e0a04-142">For all other types of statements, the return value is -1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e0a04-143">O exemplo a seguir cria uma instância da classe derivada, <xref:System.Data.OleDb.OleDbCommand>e, em seguida, ele é executado.</span><span class="sxs-lookup"><span data-stu-id="e0a04-143">The following example creates an instance of the derived class, <xref:System.Data.OleDb.OleDbCommand>, and then executes it.</span></span> <span data-ttu-id="e0a04-144">Para fazer isso, o método é passado uma cadeia de caracteres que é uma instrução SQL SELECT e uma cadeia de caracteres a ser usado para se conectar à fonte de dados.</span><span class="sxs-lookup"><span data-stu-id="e0a04-144">To accomplish this, the method is passed a string that is a SQL SELECT statement and a string to use to connect to the data source.</span></span>  
  
 [!code-csharp[Classic WebData OleDbCommand.ExecuteNonQuery Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.ExecuteNonQuery Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbCommand.ExecuteNonQuery Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.ExecuteNonQuery Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e0a04-145">A conexão não existe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0a04-145">The connection does not exist.</span>
          </span>
          <span data-ttu-id="e0a04-146">-ou-  A conexão não está aberta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0a04-146">-or-  The connection is not open.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteReader">
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e0a04-147">Executa o <see cref="P:System.Data.IDbCommand.CommandText" /> no <see cref="P:System.Data.IDbCommand.Connection" /> e compila um <see cref="T:System.Data.IDataReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0a04-147">Executes the <see cref="P:System.Data.IDbCommand.CommandText" /> against the <see cref="P:System.Data.IDbCommand.Connection" /> and builds an <see cref="T:System.Data.IDataReader" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.IDataReader ExecuteReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.IDataReader ExecuteReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.ExecuteReader" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader () As IDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::IDataReader ^ ExecuteReader();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e0a04-148">Executa o <see cref="P:System.Data.IDbCommand.CommandText" /> no <see cref="P:System.Data.IDbCommand.Connection" /> e compila um <see cref="T:System.Data.IDataReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0a04-148">Executes the <see cref="P:System.Data.IDbCommand.CommandText" /> against the <see cref="P:System.Data.IDbCommand.Connection" /> and builds an <see cref="T:System.Data.IDataReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e0a04-149">Um objeto <see cref="T:System.Data.IDataReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0a04-149">An <see cref="T:System.Data.IDataReader" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.IDataReader ExecuteReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.IDataReader ExecuteReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.ExecuteReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader (behavior As CommandBehavior) As IDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::IDataReader ^ ExecuteReader(System::Data::CommandBehavior behavior);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior">
          <span data-ttu-id="e0a04-150">Um dos valores de <see cref="T:System.Data.CommandBehavior" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0a04-150">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e0a04-151">Executa o <see cref="P:System.Data.IDbCommand.CommandText" /> para o <see cref="P:System.Data.IDbCommand.Connection" /> e cria um <see cref="T:System.Data.IDataReader" /> usando um dos valores de <see cref="T:System.Data.CommandBehavior" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0a04-151">Executes the <see cref="P:System.Data.IDbCommand.CommandText" /> against the <see cref="P:System.Data.IDbCommand.Connection" />, and builds an <see cref="T:System.Data.IDataReader" /> using one of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e0a04-152">Um objeto <see cref="T:System.Data.IDataReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0a04-152">An <see cref="T:System.Data.IDataReader" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0a04-153">O chamador deve chamar o <xref:System.Data.IDbConnection.Open%2A> método o <xref:System.Data.IDbCommand.Connection%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="e0a04-153">The caller must call the <xref:System.Data.IDbConnection.Open%2A> method of the <xref:System.Data.IDbCommand.Connection%2A> property.</span></span>  
  
 <span data-ttu-id="e0a04-154">Quando o <xref:System.Data.IDbCommand.CommandType%2A> está definida como `StoredProcedure`, o <xref:System.Data.IDbCommand.CommandText%2A> propriedade deve ser definida como o nome do procedimento armazenado.</span><span class="sxs-lookup"><span data-stu-id="e0a04-154">When the <xref:System.Data.IDbCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.IDbCommand.CommandText%2A> property should be set to the name of the stored procedure.</span></span> <span data-ttu-id="e0a04-155">O comando é executado esse procedimento armazenado quando você chamar <xref:System.Data.IDbCommand.ExecuteReader%2A>.</span><span class="sxs-lookup"><span data-stu-id="e0a04-155">The command executes this stored procedure when you call <xref:System.Data.IDbCommand.ExecuteReader%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0a04-156">Use <xref:System.Data.CommandBehavior.SequentialAccess> para recuperar dados binários e valores grandes.</span><span class="sxs-lookup"><span data-stu-id="e0a04-156">Use <xref:System.Data.CommandBehavior.SequentialAccess> to retrieve large values and binary data.</span></span> <span data-ttu-id="e0a04-157">Caso contrário, um <xref:System.OutOfMemoryException> podem ocorrer e a conexão será fechada.</span><span class="sxs-lookup"><span data-stu-id="e0a04-157">Otherwise, an <xref:System.OutOfMemoryException> might occur and the connection will be closed.</span></span>  
  
 <span data-ttu-id="e0a04-158">Enquanto o <xref:System.Data.IDataReader> está em uso, associado <xref:System.Data.IDbConnection> estão ocupados atendendo a <xref:System.Data.IDataReader>.</span><span class="sxs-lookup"><span data-stu-id="e0a04-158">While the <xref:System.Data.IDataReader> is in use, the associated <xref:System.Data.IDbConnection> is busy serving the <xref:System.Data.IDataReader>.</span></span> <span data-ttu-id="e0a04-159">Nesse estado, nenhuma outra operação pode ser executada no <xref:System.Data.IDbConnection> diferente de fechá-lo.</span><span class="sxs-lookup"><span data-stu-id="e0a04-159">While in this state, no other operations can be performed on the <xref:System.Data.IDbConnection> other than closing it.</span></span> <span data-ttu-id="e0a04-160">Esse é o caso até que o <xref:System.Data.IDataReader.Close%2A> é chamado de método do DataReader.</span><span class="sxs-lookup"><span data-stu-id="e0a04-160">This is the case until the <xref:System.Data.IDataReader.Close%2A> method of the DataReader is called.</span></span> <span data-ttu-id="e0a04-161">Se o DataReader for criado com <xref:System.Data.CommandBehavior> definida como `CloseConnection`, fechar o DataReader fecha a conexão automaticamente.</span><span class="sxs-lookup"><span data-stu-id="e0a04-161">If the DataReader is created with <xref:System.Data.CommandBehavior> set to `CloseConnection`, closing the DataReader closes the connection automatically.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteScalar">
      <MemberSignature Language="C#" Value="public object ExecuteScalar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ExecuteScalar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.ExecuteScalar" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteScalar () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ExecuteScalar();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e0a04-162">Executa a consulta e retorna a primeira coluna da primeira linha no conjunto de resultados retornado pela consulta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0a04-162">Executes the query, and returns the first column of the first row in the resultset returned by the query.</span>
          </span>
          <span data-ttu-id="e0a04-163">Colunas ou linhas extra são ignoradas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0a04-163">Extra columns or rows are ignored.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e0a04-164">A primeira coluna da primeira linha no conjunto de resultados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0a04-164">The first column of the first row in the resultset.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0a04-165">Use o <xref:System.Data.IDbCommand.ExecuteScalar%2A> método para recuperar um único valor (por exemplo, um valor agregado) de um banco de dados.</span><span class="sxs-lookup"><span data-stu-id="e0a04-165">Use the <xref:System.Data.IDbCommand.ExecuteScalar%2A> method to retrieve a single value (for example, an aggregate value) from a database.</span></span> <span data-ttu-id="e0a04-166">Isso requer menos código do que usando o <xref:System.Data.IDbCommand.ExecuteReader%2A> método e, em seguida, executar as operações necessárias para gerar o valor único usando os dados retornados por uma <xref:System.Data.IDataReader>.</span><span class="sxs-lookup"><span data-stu-id="e0a04-166">This requires less code than using the <xref:System.Data.IDbCommand.ExecuteReader%2A> method, and then performing the operations necessary to generate the single value using the data returned by an <xref:System.Data.IDataReader>.</span></span>  
  
 <span data-ttu-id="e0a04-167">Um típico <xref:System.Data.IDbCommand.ExecuteScalar%2A> consulta pode ser formatada como o exemplo c# a seguir:</span><span class="sxs-lookup"><span data-stu-id="e0a04-167">A typical <xref:System.Data.IDbCommand.ExecuteScalar%2A> query can be formatted as in the following C# example:</span></span>  
  
```  
CommandText = "select count(*) as NumberOfRegions from region";  
Int32 count = (int) ExecuteScalar();  
```  
  
 <span data-ttu-id="e0a04-168">Se a primeira coluna da primeira linha no conjunto de resultados não for encontrado, uma referência nula (`Nothing` no Visual Basic) é retornado.</span><span class="sxs-lookup"><span data-stu-id="e0a04-168">If the first column of the first row in the result set is not found, a null reference (`Nothing` in Visual Basic) is returned.</span></span> <span data-ttu-id="e0a04-169">Se o valor no banco de dados for `null`, a consulta retorna `DBNull.Value`.</span><span class="sxs-lookup"><span data-stu-id="e0a04-169">If the value in the database is `null`, the query returns `DBNull.Value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e0a04-170">O exemplo a seguir cria uma instância da classe derivada, <xref:System.Data.SqlClient.SqlCommand>e, em seguida, executa-o usando <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A>.</span><span class="sxs-lookup"><span data-stu-id="e0a04-170">The following example creates an instance of the derived class, <xref:System.Data.SqlClient.SqlCommand>, and then executes it using <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A>.</span></span> <span data-ttu-id="e0a04-171">O exemplo é passado uma cadeia de caracteres que é uma instrução Transact-SQL que retorna o resultado de uma agregação e uma cadeia de caracteres a ser usado para se conectar à fonte de dados.</span><span class="sxs-lookup"><span data-stu-id="e0a04-171">The example is passed a string that is a Transact-SQL statement that returns an aggregate result, and a string to use to connect to the data source.</span></span>  
  
 [!code-csharp[Classic WebData SqlCommand.ExecuteScalar#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteScalar/CS/mysample.cs#1)]
 [!code-vb[Classic WebData SqlCommand.ExecuteScalar#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteScalar/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Data.IDataParameterCollection Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDataParameterCollection Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As IDataParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDataParameterCollection ^ Parameters { System::Data::IDataParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0a04-172">Obtém o <see cref="T:System.Data.IDataParameterCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0a04-172">Gets the <see cref="T:System.Data.IDataParameterCollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e0a04-173">Os parâmetros da instrução SQL ou do procedimento armazenado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0a04-173">The parameters of the SQL statement or stored procedure.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e0a04-174">O exemplo a seguir cria uma instância da classe derivada, <xref:System.Data.SqlClient.SqlCommand>e exibe seus parâmetros.</span><span class="sxs-lookup"><span data-stu-id="e0a04-174">The following example creates an instance of the derived class, <xref:System.Data.SqlClient.SqlCommand>, and displays its parameters.</span></span> <span data-ttu-id="e0a04-175">No exemplo, o aplicativo passa um <xref:System.Data.SqlClient.SqlConnection>, uma cadeia de caracteres de consulta que é uma instrução SELECT Transact-SQL e uma matriz de <xref:System.Data.SqlClient.SqlParameter> objetos.</span><span class="sxs-lookup"><span data-stu-id="e0a04-175">In the example, the application passes a <xref:System.Data.SqlClient.SqlConnection>, a query string that is a Transact-SQL SELECT statement, and an array of <xref:System.Data.SqlClient.SqlParameter> objects.</span></span>  
  
 [!code-csharp[Classic WebData IDbCommand.Parameters Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDbCommand.Parameters Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDbCommand.Parameters Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDbCommand.Parameters Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.IDataParameter" />
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public void Prepare ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Prepare() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.Prepare" />
      <MemberSignature Language="VB.NET" Value="Public Sub Prepare ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Prepare();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e0a04-176">Cria uma versão preparada (ou compilada) do comando na fonte de dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0a04-176">Creates a prepared (or compiled) version of the command on the data source.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0a04-177">Se o <xref:System.Data.IDbCommand.CommandType%2A> está definida como `TableDirect`, <xref:System.Data.IDbCommand.Prepare%2A> não fará nada.</span><span class="sxs-lookup"><span data-stu-id="e0a04-177">If the <xref:System.Data.IDbCommand.CommandType%2A> property is set to `TableDirect`, <xref:System.Data.IDbCommand.Prepare%2A> does nothing.</span></span> <span data-ttu-id="e0a04-178">Se <xref:System.Data.IDbCommand.CommandType%2A> é definido como `StoredProcedure`, a chamada para <xref:System.Data.IDbCommand.Prepare%2A> deve ter êxito, embora isso pode resultar em uma não-operacional.</span><span class="sxs-lookup"><span data-stu-id="e0a04-178">If <xref:System.Data.IDbCommand.CommandType%2A> is set to `StoredProcedure`, the call to <xref:System.Data.IDbCommand.Prepare%2A> should succeed, although it may result in a no-op.</span></span> <span data-ttu-id="e0a04-179">O servidor automaticamente armazena em cache os planos para reutilização conforme necessário; Portanto, não há nenhuma necessidade de chamar este método diretamente em seu aplicativo cliente.</span><span class="sxs-lookup"><span data-stu-id="e0a04-179">The server automatically caches plans for reuse as necessary; therefore, there is no need to call this method directly in your client application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e0a04-180">O exemplo a seguir cria uma instância da classe derivada, <xref:System.Data.OleDb.OleDbCommand>e abre a conexão.</span><span class="sxs-lookup"><span data-stu-id="e0a04-180">The following example creates an instance of the derived class, <xref:System.Data.OleDb.OleDbCommand>, and opens the connection.</span></span> <span data-ttu-id="e0a04-181">O exemplo, em seguida, prepara um procedimento armazenado na fonte de dados, passando uma cadeia de caracteres que é uma instrução SQL Select e uma cadeia de caracteres a ser usado para se conectar à fonte de dados.</span><span class="sxs-lookup"><span data-stu-id="e0a04-181">The example then prepares a stored procedure on the data source by passing a string that is a SQL Select statement and a string to use to connect to the data source.</span></span>  
  
 [!code-csharp[Classic WebData OleDbCommand.Prepare Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.Prepare Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbCommand.Prepare Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.Prepare Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e0a04-182">O <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> não foi definido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0a04-182">The <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> is not set.</span>
          </span>
          <span data-ttu-id="e0a04-183">-ou-  O <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> não é <see cref="M:System.Data.OleDb.OleDbConnection.Open" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0a04-183">-or-  The <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> is not <see cref="M:System.Data.OleDb.OleDbConnection.Open" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Transaction">
      <MemberSignature Language="C#" Value="public System.Data.IDbTransaction Transaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbTransaction Transaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.Transaction" />
      <MemberSignature Language="VB.NET" Value="Public Property Transaction As IDbTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbTransaction ^ Transaction { System::Data::IDbTransaction ^ get(); void set(System::Data::IDbTransaction ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0a04-184">Obtém ou define a transação na qual um objeto <see langword="Command" /> de um provedor de dados .NET Framework é executado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0a04-184">Gets or sets the transaction within which the <see langword="Command" /> object of a .NET Framework data provider executes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e0a04-185">o <see langword="Command" /> executa do objeto de um provedor de dados do .NET Framework.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0a04-185">the <see langword="Command" /> object of a .NET Framework data provider executes.</span>
          </span>
          <span data-ttu-id="e0a04-186">O valor padrão é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0a04-186">The default value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdatedRowSource">
      <MemberSignature Language="C#" Value="public System.Data.UpdateRowSource UpdatedRowSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.UpdateRowSource UpdatedRowSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.UpdatedRowSource" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdatedRowSource As UpdateRowSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::UpdateRowSource UpdatedRowSource { System::Data::UpdateRowSource get(); void set(System::Data::UpdateRowSource value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.UpdateRowSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0a04-187">Obtém ou define como os resultados do comando são aplicados a <see cref="T:System.Data.DataRow" /> quando usados pelo método <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> de <see cref="T:System.Data.Common.DbDataAdapter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0a04-187">Gets or sets how command results are applied to the <see cref="T:System.Data.DataRow" /> when used by the <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> method of a <see cref="T:System.Data.Common.DbDataAdapter" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e0a04-188">Um dos valores de <see cref="T:System.Data.UpdateRowSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0a04-188">One of the <see cref="T:System.Data.UpdateRowSource" /> values.</span>
          </span>
          <span data-ttu-id="e0a04-189">O padrão é <see langword="Both" />, a menos que o comando seja gerado automaticamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0a04-189">The default is <see langword="Both" /> unless the command is automatically generated.</span>
          </span>
          <span data-ttu-id="e0a04-190">Nesse caso, o padrão é <see langword="None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0a04-190">Then the default is <see langword="None" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e0a04-191">O valor inserido não era um dos valores <see cref="T:System.Data.UpdateRowSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0a04-191">The value entered was not one of the <see cref="T:System.Data.UpdateRowSource" /> values.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>