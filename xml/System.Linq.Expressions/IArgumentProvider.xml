<Type Name="IArgumentProvider" FullName="System.Linq.Expressions.IArgumentProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4abd0b0508fdc62e37d2117e5823a54dfc7dfdce" /><Meta Name="ms.sourcegitcommit" Value="d3dcd8c426adcf1bbe5ff78a76dee13bd8ad6efd" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="05/28/2019" /><Meta Name="ms.locfileid" Value="66251520" /></Metadata><TypeSignature Language="C#" Value="public interface IArgumentProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IArgumentProvider" />
  <TypeSignature Language="DocId" Value="T:System.Linq.Expressions.IArgumentProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IArgumentProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IArgumentProvider" />
  <TypeSignature Language="F#" Value="type IArgumentProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Linq.Expressions</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="cd7d0-101">Fornece uma interface interna para acessar os argumentos de vários nós de árvore (DynamicExpression, ElementInit, MethodCallExpression, InvocationExpression, NewExpression e IndexExpression).</span><span class="sxs-lookup"><span data-stu-id="cd7d0-101">Provides an internal interface for accessing the arguments of multiple tree nodes (DynamicExpression, ElementInit, MethodCallExpression, InvocationExpression, NewExpression, and IndexExpression).</span></span>  <span data-ttu-id="cd7d0-102">Esta API é somente para uso interno.</span><span class="sxs-lookup"><span data-stu-id="cd7d0-102">This API is for internal use only.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[
      
## Remarks

<span data-ttu-id="cd7d0-103">Você não deve usar essa API.</span><span class="sxs-lookup"><span data-stu-id="cd7d0-103">You should not use this API.</span></span>  <span data-ttu-id="cd7d0-104">Ele é público apenas devido à refatoração de assembly e ele existe somente para otimizações de desempenho internas.</span><span class="sxs-lookup"><span data-stu-id="cd7d0-104">It is public only due to assembly refactoring, and it exists only for internal performance optimizations.</span></span> <span data-ttu-id="cd7d0-105">Ele habilita duas otimizações que reduzem o tamanho das árvores de:</span><span class="sxs-lookup"><span data-stu-id="cd7d0-105">It enables two optimizations that reduce the size of the trees:</span></span>
  
1. <span data-ttu-id="cd7d0-106">Ele permite que os nós retenham uma <xref:System.Collections.Generic.IList%601> em vez de um <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span><span class="sxs-lookup"><span data-stu-id="cd7d0-106">It enables the nodes to hold onto an <xref:System.Collections.Generic.IList%601> instead of a <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span></span>  <span data-ttu-id="cd7d0-107">Isso economiza o custo da alocação a coleção somente leitura para cada nó.</span><span class="sxs-lookup"><span data-stu-id="cd7d0-107">This saves the cost of allocating the read-only collection for each node.</span></span>
  
2. <span data-ttu-id="cd7d0-108">Ele permite que as subclasses especializadas a ser criado que espera no como um número específico de argumentos (por exemplo, `Block2`, `Block2`, `Block4`).</span><span class="sxs-lookup"><span data-stu-id="cd7d0-108">It enables specialized subclasses to be created that hold on to a specific number of arguments (for example, `Block2`, `Block2`, `Block4`).</span></span>  <span data-ttu-id="cd7d0-109">Portanto, esses nós evitam alocar ambos um <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> e uma matriz para armazenar seus elementos, economizando 32 bytes por nó.</span><span class="sxs-lookup"><span data-stu-id="cd7d0-109">Therefore, these nodes avoid allocating both a <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> and an array for storing their elements, thus saving 32 bytes per node.</span></span>  <span data-ttu-id="cd7d0-110">Essa técnica é usada por vários nós, incluindo <xref:System.Linq.Expressions.BlockExpression>, <xref:System.Linq.Expressions.InvocationExpression>, e <xref:System.Linq.Expressions.MethodCallExpression>.</span><span class="sxs-lookup"><span data-stu-id="cd7d0-110">This technique is used by various nodes, including <xref:System.Linq.Expressions.BlockExpression>, <xref:System.Linq.Expressions.InvocationExpression>, and <xref:System.Linq.Expressions.MethodCallExpression>.</span></span>
            
<span data-ttu-id="cd7d0-111">Os nós de árvore de expressão continuam a expor as propriedades originais do LINQ do <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> objetos.</span><span class="sxs-lookup"><span data-stu-id="cd7d0-111">The expression tree nodes continue to expose the original LINQ properties of <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> objects.</span></span> <span data-ttu-id="cd7d0-112">Eles fazem isso com a reutilização de um campo para armazenar a matriz ou um elemento que normalmente seria armazenado na matriz.</span><span class="sxs-lookup"><span data-stu-id="cd7d0-112">They do this by reusing a field for storing both the array or an element that would normally be stored in the array.</span></span>
            
<span data-ttu-id="cd7d0-113">No caso de matriz, a coleção é digitada para a <xref:System.Collections.Generic.IList%601> em vez de <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span><span class="sxs-lookup"><span data-stu-id="cd7d0-113">For the array case, the collection is typed to <xref:System.Collections.Generic.IList%601> instead of <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span></span> <span data-ttu-id="cd7d0-114">Quando o nó é inicialmente construído, ele é uma matriz.</span><span class="sxs-lookup"><span data-stu-id="cd7d0-114">When the node is initially constructed, it is an array.</span></span>  <span data-ttu-id="cd7d0-115">O compilador ou utilitários na biblioteca de acessar os elementos por meio dessa interface.</span><span class="sxs-lookup"><span data-stu-id="cd7d0-115">The compiler or utilities in this library access the elements through this interface.</span></span> <span data-ttu-id="cd7d0-116">Acessar elementos da matriz promove a matriz a um <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span><span class="sxs-lookup"><span data-stu-id="cd7d0-116">Accessing array elements promotes the array to a <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span></span>
            
<span data-ttu-id="cd7d0-117">No caso do objeto, o primeiro argumento é armazenado em um campo tipado para <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="cd7d0-117">For the object case, the first argument is stored in a field typed to <xref:System.Object>.</span></span> <span data-ttu-id="cd7d0-118">Quando o nó é inicialmente construído, este campo contém o <xref:System.Linq.Expressions.Expression> do primeiro argumento.</span><span class="sxs-lookup"><span data-stu-id="cd7d0-118">When the node is initially constructed, this field holds the <xref:System.Linq.Expressions.Expression> of the first argument.</span></span>  <span data-ttu-id="cd7d0-119">Quando o compilador e utilitários na biblioteca de acessam os argumentos, eles usam novamente essa interface e o acessador para o primeiro argumento usa o `Expression.ReturnObject<T>(System.Object)` o método auxiliar para retornar o objeto que manipula a <xref:System.Linq.Expressions.Expression> ou <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> caso.</span><span class="sxs-lookup"><span data-stu-id="cd7d0-119">When the compiler and utilities in this library access the arguments, they again use this interface, and the accessor for the first argument uses the internal `Expression.ReturnObject<T>(System.Object)` helper method to return the object that handles the <xref:System.Linq.Expressions.Expression> or <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> case.</span></span> <span data-ttu-id="cd7d0-120">Quando o usuário acessa o <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>, o campo de objeto é atualizado para conter diretamente para o <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span><span class="sxs-lookup"><span data-stu-id="cd7d0-120">When the user accesses the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>, the object field is updated to hold directly onto the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span></span>
            
<span data-ttu-id="cd7d0-121">É importante que <xref:System.Linq.Expressions.Expression> propriedades retornam consistentemente a mesma <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span><span class="sxs-lookup"><span data-stu-id="cd7d0-121">It is important that <xref:System.Linq.Expressions.Expression> properties consistently return the same <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span></span> <span data-ttu-id="cd7d0-122">Caso contrário, o caminhador de árvore regravador usado pelos visitantes de expressão será interrompido.</span><span class="sxs-lookup"><span data-stu-id="cd7d0-122">Otherwise, the rewriter tree walker used by expression visitors will break.</span></span> <span data-ttu-id="cd7d0-123">É uma alteração significativa de LINQ v1 para retornar diferentes <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> da mesma <xref:System.Linq.Expressions.Expression> nó.</span><span class="sxs-lookup"><span data-stu-id="cd7d0-123">It is a breaking change from LINQ v1 to return different <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> from the same <xref:System.Linq.Expressions.Expression> node.</span></span> <span data-ttu-id="cd7d0-124">Atualmente, os usuários podem confiar na identidade do objeto para informar se o nó foi alterado.</span><span class="sxs-lookup"><span data-stu-id="cd7d0-124">Currently, users can rely on object identity to tell if the node has changed.</span></span>  <span data-ttu-id="cd7d0-125">Armazenando o <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> em um campo sobrecarregado ambos reduz o uso de memória e mantém a compatibilidade para a API pública.</span><span class="sxs-lookup"><span data-stu-id="cd7d0-125">Storing the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> in an overloaded field both reduces memory usage and maintains compatibility for the public API.</span></span>

      ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ArgumentCount">
      <MemberSignature Language="C#" Value="public int ArgumentCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ArgumentCount" />
      <MemberSignature Language="DocId" Value="P:System.Linq.Expressions.IArgumentProvider.ArgumentCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ArgumentCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ArgumentCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ArgumentCount : int" Usage="System.Linq.Expressions.IArgumentProvider.ArgumentCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cd7d0-126">Retorna o número de argumentos para o nó de árvore de expressão.</span><span class="sxs-lookup"><span data-stu-id="cd7d0-126">Returns the number of arguments to the expression tree node.</span></span> <span data-ttu-id="cd7d0-127">Esta API é somente para uso interno.</span><span class="sxs-lookup"><span data-stu-id="cd7d0-127">This API is for internal use only.</span></span></summary>
        <value><span data-ttu-id="cd7d0-128">O número de argumentos para o nó de árvore de expressão como <see cref="T:System.Int32" />.</span><span class="sxs-lookup"><span data-stu-id="cd7d0-128">The number of arguments to the expression tree node as <see cref="T:System.Int32" />.</span></span></value>
        <remarks><span data-ttu-id="cd7d0-129">Você não deve usar essa API.</span><span class="sxs-lookup"><span data-stu-id="cd7d0-129">You should not use this API.</span></span> <span data-ttu-id="cd7d0-130">Ele é público apenas devido à refatoração de assembly e é usada internamente para otimizações de desempenho.</span><span class="sxs-lookup"><span data-stu-id="cd7d0-130">It is public only due to assembly refactoring, and it is used internally for performance optimizations.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetArgument">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression GetArgument (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression GetArgument(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.IArgumentProvider.GetArgument(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetArgument (index As Integer) As Expression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Linq::Expressions::Expression ^ GetArgument(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetArgument : int -&gt; System.Linq.Expressions.Expression" Usage="iArgumentProvider.GetArgument index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="cd7d0-131">O índice do argumento.</span><span class="sxs-lookup"><span data-stu-id="cd7d0-131">The index of the argument.</span></span></param>
        <summary><span data-ttu-id="cd7d0-132">Retorna o argumento no <paramref name="index" />, gerando se o <paramref name="index" /> estiver fora dos limites.</span><span class="sxs-lookup"><span data-stu-id="cd7d0-132">Returns the argument at <paramref name="index" />, throwing if <paramref name="index" /> is out of bounds.</span></span> <span data-ttu-id="cd7d0-133">Esta API é somente para uso interno.</span><span class="sxs-lookup"><span data-stu-id="cd7d0-133">This API is for internal use only.</span></span></summary>
        <returns><span data-ttu-id="cd7d0-134">O argumento no índice.</span><span class="sxs-lookup"><span data-stu-id="cd7d0-134">The argument at index.</span></span></returns>
        <remarks><span data-ttu-id="cd7d0-135">Você não deve usar essa API.</span><span class="sxs-lookup"><span data-stu-id="cd7d0-135">You should not use this API.</span></span>  <span data-ttu-id="cd7d0-136">Ele só é público devido a refatoração de assembly e é usado internamente para otimizações de desempenho.</span><span class="sxs-lookup"><span data-stu-id="cd7d0-136">It is only public due to assembly refactoring, and it is used internally for performance optimizations.</span></span></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
