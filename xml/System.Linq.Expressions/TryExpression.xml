<Type Name="TryExpression" FullName="System.Linq.Expressions.TryExpression">
  <TypeSignature Language="C#" Value="public sealed class TryExpression : System.Linq.Expressions.Expression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TryExpression extends System.Linq.Expressions.Expression" />
  <TypeSignature Language="DocId" Value="T:System.Linq.Expressions.TryExpression" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TryExpression&#xA;Inherits Expression" />
  <TypeSignature Language="C++ CLI" Value="public ref class TryExpression sealed : System::Linq::Expressions::Expression" />
  <AssemblyInfo>
    <AssemblyName>System.Linq.Expressions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Linq.Expressions.Expression</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Linq.Expressions.Expression/TryExpressionProxy))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="30ee4-101">Representa um bloco try/catch/finally/fault.</span><span class="sxs-lookup"><span data-stu-id="30ee4-101">Represents a try/catch/finally/fault block.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30ee4-102">O bloco de corpo é protegido pelo bloco try.</span><span class="sxs-lookup"><span data-stu-id="30ee4-102">The body block is protected by the try block.</span></span>  
  
 <span data-ttu-id="30ee4-103">Os manipuladores consistem em um conjunto de <xref:System.Linq.Expressions.CatchBlock> expressões que podem ser catch instruções ou filtros.</span><span class="sxs-lookup"><span data-stu-id="30ee4-103">The handlers consist of a set of <xref:System.Linq.Expressions.CatchBlock> expressions that can be either catch statements or filters.</span></span>  
  
 <span data-ttu-id="30ee4-104">O bloco de falha é executado se uma exceção será lançada.</span><span class="sxs-lookup"><span data-stu-id="30ee4-104">The fault block runs if an exception is thrown.</span></span>  
  
 <span data-ttu-id="30ee4-105">O bloco finally será executado, independentemente de como o controle sai do corpo.</span><span class="sxs-lookup"><span data-stu-id="30ee4-105">The finally block runs regardless of how control exits the body.</span></span>  
  
 <span data-ttu-id="30ee4-106">Apenas uma das falhas ou finally blocos pode ser fornecida.</span><span class="sxs-lookup"><span data-stu-id="30ee4-106">Only one of fault or finally blocks can be supplied.</span></span>  
  
 <span data-ttu-id="30ee4-107">O tipo de retorno do bloco try deve corresponder ao tipo de retorno de qualquer instrução catch associado.</span><span class="sxs-lookup"><span data-stu-id="30ee4-107">The return type of the try block must match the return type of any associated catch statements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30ee4-108">O exemplo a seguir demonstra como criar um <xref:System.Linq.Expressions.TryExpression> objeto que contém uma instrução catch usando o <xref:System.Linq.Expressions.Expression.TryCatch%2A> método.</span><span class="sxs-lookup"><span data-stu-id="30ee4-108">The following example demonstrates how to create a <xref:System.Linq.Expressions.TryExpression> object that contains a catch statement by using the <xref:System.Linq.Expressions.Expression.TryCatch%2A> method.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#47](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#47)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#47](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#47)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="protected internal override System.Linq.Expressions.Expression Accept (System.Linq.Expressions.ExpressionVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Linq.Expressions.Expression Accept(class System.Linq.Expressions.ExpressionVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.TryExpression.Accept(System.Linq.Expressions.ExpressionVisitor)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function Accept (visitor As ExpressionVisitor) As Expression" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Linq::Expressions::Expression ^ Accept(System::Linq::Expressions::ExpressionVisitor ^ visitor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="System.Linq.Expressions.ExpressionVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Body">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression Body { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.Expressions.Expression Body" />
      <MemberSignature Language="DocId" Value="P:System.Linq.Expressions.TryExpression.Body" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Body As Expression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Linq::Expressions::Expression ^ Body { System::Linq::Expressions::Expression ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="30ee4-109">Obtém o <see cref="T:System.Linq.Expressions.Expression" /> que representa o corpo do bloco try.</span><span class="sxs-lookup"><span data-stu-id="30ee4-109">Gets the <see cref="T:System.Linq.Expressions.Expression" /> representing the body of the try block.</span></span></summary>
        <value><span data-ttu-id="30ee4-110">O <see cref="T:System.Linq.Expressions.Expression" /> que representa o corpo do bloco try.</span><span class="sxs-lookup"><span data-stu-id="30ee4-110">The <see cref="T:System.Linq.Expressions.Expression" /> representing the body of the try block.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fault">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression Fault { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.Expressions.Expression Fault" />
      <MemberSignature Language="DocId" Value="P:System.Linq.Expressions.TryExpression.Fault" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Fault As Expression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Linq::Expressions::Expression ^ Fault { System::Linq::Expressions::Expression ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="30ee4-111">Obtém o <see cref="T:System.Linq.Expressions.Expression" /> que representa o bloco de falha.</span><span class="sxs-lookup"><span data-stu-id="30ee4-111">Gets the <see cref="T:System.Linq.Expressions.Expression" /> representing the fault block.</span></span></summary>
        <value><span data-ttu-id="30ee4-112">O <see cref="T:System.Linq.Expressions.Expression" /> que representa o bloco de falha.</span><span class="sxs-lookup"><span data-stu-id="30ee4-112">The <see cref="T:System.Linq.Expressions.Expression" /> representing the fault block.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finally">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression Finally { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.Expressions.Expression Finally" />
      <MemberSignature Language="DocId" Value="P:System.Linq.Expressions.TryExpression.Finally" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Finally As Expression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Linq::Expressions::Expression ^ Finally { System::Linq::Expressions::Expression ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="30ee4-113">Obtém o <see cref="T:System.Linq.Expressions.Expression" /> que representa o bloco finally.</span><span class="sxs-lookup"><span data-stu-id="30ee4-113">Gets the <see cref="T:System.Linq.Expressions.Expression" /> representing the finally block.</span></span></summary>
        <value><span data-ttu-id="30ee4-114">O <see cref="T:System.Linq.Expressions.Expression" /> que representa o bloco finally.</span><span class="sxs-lookup"><span data-stu-id="30ee4-114">The <see cref="T:System.Linq.Expressions.Expression" /> representing the finally block.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Handlers">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.CatchBlock&gt; Handlers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Linq.Expressions.CatchBlock&gt; Handlers" />
      <MemberSignature Language="DocId" Value="P:System.Linq.Expressions.TryExpression.Handlers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handlers As ReadOnlyCollection(Of CatchBlock)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Linq::Expressions::CatchBlock ^&gt; ^ Handlers { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Linq::Expressions::CatchBlock ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.CatchBlock&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="30ee4-115">Obtém a coleção de expressões <see cref="T:System.Linq.Expressions.CatchBlock" /> associadas ao bloco try.</span><span class="sxs-lookup"><span data-stu-id="30ee4-115">Gets the collection of <see cref="T:System.Linq.Expressions.CatchBlock" /> expressions associated with the try block.</span></span></summary>
        <value><span data-ttu-id="30ee4-116">A coleção de <see cref="T:System.Linq.Expressions.CatchBlock" /> expressões associadas ao bloco try.</span><span class="sxs-lookup"><span data-stu-id="30ee4-116">The collection of <see cref="T:System.Linq.Expressions.CatchBlock" /> expressions associated with the try block.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override sealed System.Linq.Expressions.ExpressionType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Linq.Expressions.ExpressionType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Linq.Expressions.TryExpression.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property NodeType As ExpressionType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Linq::Expressions::ExpressionType NodeType { System::Linq::Expressions::ExpressionType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ExpressionType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="30ee4-117">Retorna o tipo de nó deste <see cref="T:System.Linq.Expressions.Expression" />.</span><span class="sxs-lookup"><span data-stu-id="30ee4-117">Returns the node type of this <see cref="T:System.Linq.Expressions.Expression" />.</span></span></summary>
        <value><span data-ttu-id="30ee4-118">O <see cref="T:System.Linq.Expressions.ExpressionType" /> que representa essa expressão.</span><span class="sxs-lookup"><span data-stu-id="30ee4-118">The <see cref="T:System.Linq.Expressions.ExpressionType" /> that represents this expression.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public override sealed Type Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Linq.Expressions.TryExpression.Type" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="30ee4-119">Obtém o tipo estático da expressão que esse <see cref="T:System.Linq.Expressions.Expression" /> representa.</span><span class="sxs-lookup"><span data-stu-id="30ee4-119">Gets the static type of the expression that this <see cref="T:System.Linq.Expressions.Expression" /> represents.</span></span></summary>
        <value><span data-ttu-id="30ee4-120">O <see cref="P:System.Linq.Expressions.TryExpression.Type" /> que representa o tipo estático da expressão.</span><span class="sxs-lookup"><span data-stu-id="30ee4-120">The <see cref="P:System.Linq.Expressions.TryExpression.Type" /> that represents the static type of the expression.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.TryExpression Update (System.Linq.Expressions.Expression body, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.CatchBlock&gt; handlers, System.Linq.Expressions.Expression finally, System.Linq.Expressions.Expression fault);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Linq.Expressions.TryExpression Update(class System.Linq.Expressions.Expression body, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.CatchBlock&gt; handlers, class System.Linq.Expressions.Expression finally, class System.Linq.Expressions.Expression fault) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.TryExpression.Update(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock},System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Function Update (body As Expression, handlers As IEnumerable(Of CatchBlock), finally As Expression, fault As Expression) As TryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Linq::Expressions::TryExpression ^ Update(System::Linq::Expressions::Expression ^ body, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::CatchBlock ^&gt; ^ handlers, System::Linq::Expressions::Expression ^ finally, System::Linq::Expressions::Expression ^ fault);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.TryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="handlers" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.CatchBlock&gt;" />
        <Parameter Name="finally" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="fault" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="body"><span data-ttu-id="30ee4-121">A propriedade <see cref="P:System.Linq.Expressions.TryExpression.Body" /> do resultado.</span><span class="sxs-lookup"><span data-stu-id="30ee4-121">The <see cref="P:System.Linq.Expressions.TryExpression.Body" /> property of the result.</span></span></param>
        <param name="handlers"><span data-ttu-id="30ee4-122">A propriedade <see cref="P:System.Linq.Expressions.TryExpression.Handlers" /> do resultado.</span><span class="sxs-lookup"><span data-stu-id="30ee4-122">The <see cref="P:System.Linq.Expressions.TryExpression.Handlers" /> property of the result.</span></span></param>
        <param name="finally"><span data-ttu-id="30ee4-123">A propriedade <see cref="P:System.Linq.Expressions.TryExpression.Finally" /> do resultado.</span><span class="sxs-lookup"><span data-stu-id="30ee4-123">The <see cref="P:System.Linq.Expressions.TryExpression.Finally" /> property of the result.</span></span></param>
        <param name="fault"><span data-ttu-id="30ee4-124">A propriedade <see cref="P:System.Linq.Expressions.TryExpression.Fault" /> do resultado.</span><span class="sxs-lookup"><span data-stu-id="30ee4-124">The <see cref="P:System.Linq.Expressions.TryExpression.Fault" /> property of the result.</span></span></param>
        <summary><span data-ttu-id="30ee4-125">Cria uma nova expressão que é parecida com esta, mas usando os filhos fornecidos.</span><span class="sxs-lookup"><span data-stu-id="30ee4-125">Creates a new expression that is like this one, but using the supplied children.</span></span> <span data-ttu-id="30ee4-126">Se todos os filhos forem os mesmos, ela retornará esta expressão.</span><span class="sxs-lookup"><span data-stu-id="30ee4-126">If all of the children are the same, it will return this expression.</span></span></summary>
        <returns><span data-ttu-id="30ee4-127">Essa expressão se nenhum filho foi alterado ou uma expressão com os filhos atualizados.</span><span class="sxs-lookup"><span data-stu-id="30ee4-127">This expression if no children are changed or an expression with the updated children.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>