<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SwitchExpression.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b26d424328d615648cb1e685e8c22fe72cf3a82c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b26d424328d615648cb1e685e8c22fe72cf3a82c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Linq.Expressions.SwitchExpression">
          <source>Represents a control expression that handles multiple selections by passing control to <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.SwitchCase" /&gt;</ph>.</source>
          <target state="translated">Representa uma expressão de controle que trata de várias seleções passando o controle para <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.SwitchCase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.Expressions.SwitchExpression">
          <source>The following example demonstrates how to create an expression that represents a switch statement that has a default case by using the <ph id="ph1">&lt;xref:System.Linq.Expressions.Expression.Switch%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo a seguir demonstra como criar uma expressão que representa uma instrução switch que tenha um caso padrão usando o <ph id="ph1">&lt;xref:System.Linq.Expressions.Expression.Switch%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="P:System.Linq.Expressions.SwitchExpression.Cases">
          <source>Gets the collection of <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.SwitchCase" /&gt;</ph> objects for the switch.</source>
          <target state="translated">Obtém a coleção de objetos <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.SwitchCase" /&gt;</ph> para o comutador.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.Expressions.SwitchExpression.Cases">
          <source>The collection of <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.SwitchCase" /&gt;</ph> objects.</source>
          <target state="translated">A coleção de objetos <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.SwitchCase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="P:System.Linq.Expressions.SwitchExpression.Comparison">
          <source>Gets the equality comparison method, if any.</source>
          <target state="translated">Obtém o método de comparação de igualdade, se houver.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.Expressions.SwitchExpression.Comparison">
          <source>The <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> object representing the equality comparison method.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> objeto que representa o método de comparação de igualdade.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="P:System.Linq.Expressions.SwitchExpression.DefaultBody">
          <source>Gets the test for the switch.</source>
          <target state="translated">Obtém o teste para o comutador.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.Expressions.SwitchExpression.DefaultBody">
          <source>The <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.Expression" /&gt;</ph> object representing the test for the switch.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.Expression" /&gt;</ph> objeto que representa o teste para o comutador.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="P:System.Linq.Expressions.SwitchExpression.NodeType">
          <source>Returns the node type of this Expression.</source>
          <target state="translated">Retorna o tipo de nó dessa Expressão.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="P:System.Linq.Expressions.SwitchExpression.NodeType">
          <source>Extension nodes should return <ph id="ph1">&lt;see cref="F:System.Linq.Expressions.ExpressionType.Extension" /&gt;</ph> when overriding this method.</source>
          <target state="translated">Nós de extensão devem retornar <ph id="ph1">&lt;see cref="F:System.Linq.Expressions.ExpressionType.Extension" /&gt;</ph> ao substituírem esse método.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.Expressions.SwitchExpression.NodeType">
          <source>The <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.ExpressionType" /&gt;</ph> of the expression.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.ExpressionType" /&gt;</ph> da expressão.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="P:System.Linq.Expressions.SwitchExpression.SwitchValue">
          <source>Gets the test for the switch.</source>
          <target state="translated">Obtém o teste para o comutador.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.Expressions.SwitchExpression.SwitchValue">
          <source>The <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.Expression" /&gt;</ph> object representing the test for the switch.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.Expression" /&gt;</ph> objeto que representa o teste para o comutador.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="P:System.Linq.Expressions.SwitchExpression.Type">
          <source>Gets the static type of the expression that this <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.Expression" /&gt;</ph> represents.</source>
          <target state="translated">Obtém o tipo estático da expressão que esse <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.Expression" /&gt;</ph> representa.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.Expressions.SwitchExpression.Type">
          <source>The <ph id="ph1">&lt;see cref="P:System.Linq.Expressions.SwitchExpression.Type" /&gt;</ph> that represents the static type of the expression.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="P:System.Linq.Expressions.SwitchExpression.Type" /&gt;</ph> que representa o tipo estático da expressão.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.SwitchExpression.Update(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase},System.Linq.Expressions.Expression)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Linq.Expressions.SwitchExpression.SwitchValue" /&gt;</ph> property of the result.</source>
          <target state="translated">A propriedade <ph id="ph1">&lt;see cref="P:System.Linq.Expressions.SwitchExpression.SwitchValue" /&gt;</ph> do resultado.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.SwitchExpression.Update(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase},System.Linq.Expressions.Expression)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Linq.Expressions.SwitchExpression.Cases" /&gt;</ph> property of the result.</source>
          <target state="translated">A propriedade <ph id="ph1">&lt;see cref="P:System.Linq.Expressions.SwitchExpression.Cases" /&gt;</ph> do resultado.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.SwitchExpression.Update(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase},System.Linq.Expressions.Expression)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Linq.Expressions.SwitchExpression.DefaultBody" /&gt;</ph> property of the result.</source>
          <target state="translated">A propriedade <ph id="ph1">&lt;see cref="P:System.Linq.Expressions.SwitchExpression.DefaultBody" /&gt;</ph> do resultado.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.SwitchExpression.Update(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase},System.Linq.Expressions.Expression)">
          <source>Creates a new expression that is like this one, but using the supplied children.</source>
          <target state="translated">Cria uma nova expressão que é parecida com esta, mas usando os filhos fornecidos.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.SwitchExpression.Update(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase},System.Linq.Expressions.Expression)">
          <source>If all of the children are the same, it will return this expression.</source>
          <target state="translated">Se todos os filhos forem os mesmos, ela retornará esta expressão.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.SwitchExpression.Update(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase},System.Linq.Expressions.Expression)">
          <source>This expression if no children are changed or an expression with the updated children.</source>
          <target state="translated">Essa expressão se nenhum filho foi alterado ou uma expressão com os filhos atualizados.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>