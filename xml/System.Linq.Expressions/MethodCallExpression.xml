<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MethodCallExpression.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac51ffb35fc88c2bbd8193da35b41ae7314b87f66a6.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1ffb35fc88c2bbd8193da35b41ae7314b87f66a6</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Linq.Expressions.MethodCallExpression">
          <source>Represents a call to either static or an instance method.</source>
          <target state="translated">Representa uma chamada para um método estático ou uma instância.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.Expressions.MethodCallExpression">
          <source>Use the <ph id="ph1">&lt;xref:System.Linq.Expressions.Expression.Call%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Linq.Expressions.Expression.ArrayIndex%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.Linq.Expressions.Expression.ArrayIndex%2A&gt;</ph> factory method to create a <ph id="ph4">&lt;xref:System.Linq.Expressions.MethodCallExpression&gt;</ph>.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Linq.Expressions.Expression.Call%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Linq.Expressions.Expression.ArrayIndex%2A&gt;</ph>, ou <ph id="ph3">&lt;xref:System.Linq.Expressions.Expression.ArrayIndex%2A&gt;</ph> método de fábrica para criar um <ph id="ph4">&lt;xref:System.Linq.Expressions.MethodCallExpression&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.Expressions.MethodCallExpression">
          <source>The value of the <ph id="ph1">&lt;xref:System.Linq.Expressions.Expression.NodeType%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Linq.Expressions.MethodCallExpression&gt;</ph> object is <ph id="ph3">&lt;xref:System.Linq.Expressions.ExpressionType.Call&gt;</ph>.</source>
          <target state="translated">O valor da <ph id="ph1">&lt;xref:System.Linq.Expressions.Expression.NodeType%2A&gt;</ph> propriedade de um <ph id="ph2">&lt;xref:System.Linq.Expressions.MethodCallExpression&gt;</ph> objeto é <ph id="ph3">&lt;xref:System.Linq.Expressions.ExpressionType.Call&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.Expressions.MethodCallExpression">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Linq.Expressions.MethodCallExpression&gt;</ph> object that represents indexing into a two-dimensional array.</source>
          <target state="translated">O exemplo a seguir cria um <ph id="ph1">&lt;xref:System.Linq.Expressions.MethodCallExpression&gt;</ph> objeto que representa a indexação em uma matriz bidimensional.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.MethodCallExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
          <source>The visitor to visit this node with.</source>
          <target state="translated">O visitante com o qual visitar esse nó.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.MethodCallExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
          <source>Dispatches to the specific visit method for this node type.</source>
          <target state="translated">Expede o método específico de visita para esse tipo de nó.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.MethodCallExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
          <source>For example, <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.MethodCallExpression" /&gt;</ph> calls the <ph id="ph2">&lt;see cref="M:System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)" /&gt;</ph>.</source>
          <target state="translated">Por exemplo, <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.MethodCallExpression" /&gt;</ph> chama o <ph id="ph2">&lt;see cref="M:System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.MethodCallExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
          <source>The result of visiting this node.</source>
          <target state="translated">O resultado de visitar esse nó.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Expressions.MethodCallExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
          <source>This default implementation for <ph id="ph1">&lt;xref:System.Linq.Expressions.ExpressionType.Extension&gt;</ph> nodes calls <ph id="ph2">&lt;xref:System.Linq.Expressions.ExpressionVisitor.VisitExtension%2A&gt;</ph>.</source>
          <target state="translated">Esta implementação padrão para <ph id="ph1">&lt;xref:System.Linq.Expressions.ExpressionType.Extension&gt;</ph> chamadas nós <ph id="ph2">&lt;xref:System.Linq.Expressions.ExpressionVisitor.VisitExtension%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Expressions.MethodCallExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
          <source>Override this method to call into a more specific method on a derived visitor class of the <ph id="ph1">&lt;xref:System.Linq.Expressions.ExpressionVisitor&gt;</ph> class.</source>
          <target state="translated">Substitua este método para chamar um método mais específico em uma classe derivada de visitante do <ph id="ph1">&lt;xref:System.Linq.Expressions.ExpressionVisitor&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Expressions.MethodCallExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
          <source>However, it should still support unknown visitors by calling <ph id="ph1">&lt;xref:System.Linq.Expressions.ExpressionVisitor.VisitExtension%2A&gt;</ph>.</source>
          <target state="translated">No entanto, ele ainda deve suportar visitantes desconhecidos chamando <ph id="ph1">&lt;xref:System.Linq.Expressions.ExpressionVisitor.VisitExtension%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="P:System.Linq.Expressions.MethodCallExpression.Arguments">
          <source>Gets a collection of expressions that represent arguments of the called method.</source>
          <target state="translated">Obtém uma coleção de expressões que representam os argumentos do método chamado.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.Expressions.MethodCallExpression.Arguments">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Linq.Expressions.Expression" /&gt;</ph> objects which represent the arguments to the called method.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> de <ph id="ph2">&lt;see cref="T:System.Linq.Expressions.Expression" /&gt;</ph> objetos que representam os argumentos para o método chamado.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="P:System.Linq.Expressions.MethodCallExpression.Method">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> for the method to be called.</source>
          <target state="translated">Obtém o <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> para o método a ser chamado.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.Expressions.MethodCallExpression.Method">
          <source>The <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> that represents the called method.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> que representa o método chamado.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="P:System.Linq.Expressions.MethodCallExpression.NodeType">
          <source>Returns the node type of this <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.Expression" /&gt;</ph>.</source>
          <target state="translated">Retorna o tipo de nó deste <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.Expression" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.Expressions.MethodCallExpression.NodeType">
          <source>The <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.ExpressionType" /&gt;</ph> that represents this expression.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.ExpressionType" /&gt;</ph> que representa essa expressão.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="P:System.Linq.Expressions.MethodCallExpression.Object">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.Expression" /&gt;</ph> that represents the instance for instance method calls or null for static method calls.</source>
          <target state="translated">Obtém o <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.Expression" /&gt;</ph> que representa a instância para chamadas de método de instância ou nulo para chamadas de método estático.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.Expressions.MethodCallExpression.Object">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.Expression" /&gt;</ph> that represents the receiving object of the method.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.Expression" /&gt;</ph> que representa o objeto de recebimento do método.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.Expressions.MethodCallExpression.Object">
          <source>If a <ph id="ph1">&lt;xref:System.Linq.Expressions.MethodCallExpression&gt;</ph> object's <ph id="ph2">&lt;xref:System.Linq.Expressions.MethodCallExpression.Method%2A&gt;</ph> property represents a <ph id="ph3">`static`</ph> (<ph id="ph4">`Shared`</ph> in Visual Basic) method, the <ph id="ph5">&lt;xref:System.Linq.Expressions.MethodCallExpression.Object%2A&gt;</ph> property is <ph id="ph6">`null`</ph>.</source>
          <target state="translated">Se um <ph id="ph1">&lt;xref:System.Linq.Expressions.MethodCallExpression&gt;</ph> do objeto <ph id="ph2">&lt;xref:System.Linq.Expressions.MethodCallExpression.Method%2A&gt;</ph> propriedade representa um <ph id="ph3">`static`</ph> (<ph id="ph4">`Shared`</ph> no Visual Basic) método, o <ph id="ph5">&lt;xref:System.Linq.Expressions.MethodCallExpression.Object%2A&gt;</ph> é de propriedade <ph id="ph6">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.Linq.Expressions.MethodCallExpression.System#Linq#Expressions#IArgumentProvider#ArgumentCount">
          <source>Returns the number of arguments to the expression tree node.</source>
          <target state="translated">Retorna o número de argumentos para o nó de árvore de expressão.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="P:System.Linq.Expressions.MethodCallExpression.System#Linq#Expressions#IArgumentProvider#ArgumentCount">
          <source>You should not use this member.</source>
          <target state="translated">Você não deve usar esse membro.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="P:System.Linq.Expressions.MethodCallExpression.System#Linq#Expressions#IArgumentProvider#ArgumentCount">
          <source>It is only public due to assembly refactoring, and it is used internally for performance optimizations.</source>
          <target state="translated">Ele só é público devido a refatoração de assembly e é usado internamente para otimizações de desempenho.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.Expressions.MethodCallExpression.System#Linq#Expressions#IArgumentProvider#ArgumentCount">
          <source>The number of arguments to the expression tree node as  <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>.</source>
          <target state="translated">O número de argumentos para o nó de árvore de expressão como <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.MethodCallExpression.System#Linq#Expressions#IArgumentProvider#GetArgument(System.Int32)">
          <source>The index of the argument.</source>
          <target state="translated">O índice do argumento.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.MethodCallExpression.System#Linq#Expressions#IArgumentProvider#GetArgument(System.Int32)">
          <source>Returns the argument at index, throwing if index is out of bounds.</source>
          <target state="translated">Retorna o argumento no índice, lançando se o índice estiver fora dos limites.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.MethodCallExpression.System#Linq#Expressions#IArgumentProvider#GetArgument(System.Int32)">
          <source>You should not use this member.</source>
          <target state="translated">Você não deve usar esse membro.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.MethodCallExpression.System#Linq#Expressions#IArgumentProvider#GetArgument(System.Int32)">
          <source>It is only public due to assembly refactoring, and it is used internally for performance optimizations.</source>
          <target state="translated">Ele só é público devido a refatoração de assembly e é usado internamente para otimizações de desempenho.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.MethodCallExpression.System#Linq#Expressions#IArgumentProvider#GetArgument(System.Int32)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.Expression" /&gt;</ph>.</source>
          <target state="translated">Retorna <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.Expression" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.Linq.Expressions.MethodCallExpression.Type">
          <source>Gets the static type of the expression that this <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.Expression" /&gt;</ph> represents.</source>
          <target state="translated">Obtém o tipo estático da expressão que esse <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.Expression" /&gt;</ph> representa.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.Expressions.MethodCallExpression.Type">
          <source>The <ph id="ph1">&lt;see cref="P:System.Linq.Expressions.MethodCallExpression.Type" /&gt;</ph> that represents the static type of the expression.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="P:System.Linq.Expressions.MethodCallExpression.Type" /&gt;</ph> que representa o tipo estático da expressão.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.MethodCallExpression.Update(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
          <source>The <ph id="ph1">&lt;see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /&gt;</ph> property of the result.</source>
          <target state="translated">A propriedade <ph id="ph1">&lt;see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /&gt;</ph> do resultado.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.MethodCallExpression.Update(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
          <source>The <ph id="ph1">&lt;see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /&gt;</ph> property of the result.</source>
          <target state="translated">A propriedade <ph id="ph1">&lt;see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /&gt;</ph> do resultado.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.MethodCallExpression.Update(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
          <source>Creates a new expression that is like this one, but using the supplied children.</source>
          <target state="translated">Cria uma nova expressão que é parecida com esta, mas usando os filhos fornecidos.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.MethodCallExpression.Update(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
          <source>If all of the children are the same, it will return this expression.</source>
          <target state="translated">Se todos os filhos forem os mesmos, ela retornará esta expressão.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.MethodCallExpression.Update(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
          <source>This expression if no children are changed or an expression with the updated children.</source>
          <target state="translated">Essa expressão se nenhum filho foi alterado ou uma expressão com os filhos atualizados.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>