<Type Name="JsonReaderWriterFactory" FullName="System.Runtime.Serialization.Json.JsonReaderWriterFactory">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c78dbd47bac399c650a28aca972a809af1f16bac" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34317133" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class JsonReaderWriterFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit JsonReaderWriterFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.Json.JsonReaderWriterFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class JsonReaderWriterFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class JsonReaderWriterFactory abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.ServiceModel.Web, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="bcda3-101">Produz instâncias de <see cref="T:System.Xml.XmlDictionaryReader" /> que podem ler dados codificados com JSON (JavaScript Object Notation) de um fluxo ou um buffer e faz o mapeamento em um XML Infoset e em instâncias de <see cref="T:System.Xml.XmlDictionaryWriter" /> que mapeiam um XML Infoset para JSON e grava dados codificados por JSON em um fluxo.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bcda3-101">Produces instances of <see cref="T:System.Xml.XmlDictionaryReader" /> that can read data encoded with JavaScript Object Notation (JSON) from a stream or buffer and map it to an XML Infoset and instances of <see cref="T:System.Xml.XmlDictionaryWriter" /> that can map an XML Infoset to JSON and write JSON-encoded data to a stream.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcda3-102">Windows Communication Foundation (WCF) processa mensagens JSON usando um mapeamento entre dados JSON e XML Infoset.</span><span class="sxs-lookup"><span data-stu-id="bcda3-102">Windows Communication Foundation (WCF) processes JSON messages using a mapping between JSON data and the XML Infoset.</span></span> <span data-ttu-id="bcda3-103">Normalmente, esse mapeamento é ocultos na exibição.</span><span class="sxs-lookup"><span data-stu-id="bcda3-103">Normally, this mapping is hidden from view.</span></span> <span data-ttu-id="bcda3-104">No entanto, em alguns cenários avançados de pode ser necessário converter manualmente entre JSON e XML.</span><span class="sxs-lookup"><span data-stu-id="bcda3-104">However, in some advanced scenarios it may be necessary to manually convert between JSON and XML.</span></span> <span data-ttu-id="bcda3-105">Nesse caso, a <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory> classe pode ser usada para criar o gravadores e leitores XML necessário.</span><span class="sxs-lookup"><span data-stu-id="bcda3-105">In this case, the <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory> class can be used to create the necessary XML readers and writers.</span></span> <span data-ttu-id="bcda3-106">Observe que nem todo elemento Infoset XML pode ser mapeado para JSON.</span><span class="sxs-lookup"><span data-stu-id="bcda3-106">Note that not every XML Infoset element can be mapped to JSON.</span></span> <span data-ttu-id="bcda3-107">Para obter mais informações sobre o mapeamento, consulte [como: serializar e desserializar dados de JSON](~/docs/framework/wcf/feature-details/how-to-serialize-and-deserialize-json-data.md).</span><span class="sxs-lookup"><span data-stu-id="bcda3-107">For more information about mapping, see [How to: Serialize and Deserialize JSON Data](~/docs/framework/wcf/feature-details/how-to-serialize-and-deserialize-json-data.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="CreateJsonReader">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bcda3-108">Cria um <see cref="T:System.Xml.XmlDictionaryReader" /> que pode mapear fluxos ou buffers codificados com JSON (JavaScript Object Notation) para um Infoset XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-108">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map - streams or buffers encoded with JavaScript Object Notation (JSON) to an XML Infoset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcda3-109">Cada uma das sobrecargas usa um <xref:System.Xml.XmlDictionaryReaderQuotas> para evitar a negação de serviço (DoS) ataques ao ler confiável para dados.</span><span class="sxs-lookup"><span data-stu-id="bcda3-109">Each of the overloads uses a <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service (DoS) attacks when reading untrusted data.</span></span> <span data-ttu-id="bcda3-110">Para obter mais informações sobre como usar <xref:System.Xml.XmlDictionaryReaderQuotas> para evitar ataques de negação de serviço durante a leitura de dados não confiáveis, consulte [considerações de segurança para dados](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span><span class="sxs-lookup"><span data-stu-id="bcda3-110">For more information about using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateJsonReader (byte[] buffer, System.Xml.XmlDictionaryReaderQuotas quotas);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateJsonReader(unsigned int8[] buffer, class System.Xml.XmlDictionaryReaderQuotas quotas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateJsonReader (buffer As Byte(), quotas As XmlDictionaryReaderQuotas) As XmlDictionaryReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryReader ^ CreateJsonReader(cli::array &lt;System::Byte&gt; ^ buffer, System::Xml::XmlDictionaryReaderQuotas ^ quotas);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="bcda3-111">A matriz do buffer <see cref="T:System.Byte" /> de entrada para leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-111">The input <see cref="T:System.Byte" /> buffer array from which to read.</span>
          </span>
        </param>
        <param name="quotas">
          <span data-ttu-id="bcda3-112">O <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> usado para prevenir ataques de Negação de Serviço durante a leitura de dados não confiáveis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-112">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> used to prevent Denial of Service attacks when reading untrusted data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bcda3-113">Cria um <see cref="T:System.Xml.XmlDictionaryReader" /> que pode mapear buffers codificados com JSON (JavaScript Object Notation) para um XML Infoset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-113">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map buffers encoded with JavaScript Object Notation (JSON) to an XML Infoset.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bcda3-114">Um <see cref="T:System.Xml.XmlDictionaryReader" /> que pode processar dados JSON (JavaScript Object Notation).</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-114">An <see cref="T:System.Xml.XmlDictionaryReader" /> that can process JavaScript Object Notation (JSON) data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcda3-115">Essa sobrecarga não aceita um <xref:System.Text.Encoding> parâmetro.</span><span class="sxs-lookup"><span data-stu-id="bcda3-115">This overload does not accept an <xref:System.Text.Encoding> parameter.</span></span> <span data-ttu-id="bcda3-116">O caractere de codificação (UTF-8, Unicode ou Unicode Big-Endian) é detectado automaticamente quando os dados são lidos.</span><span class="sxs-lookup"><span data-stu-id="bcda3-116">The character encoding (UTF-8, Unicode or Big-Endian Unicode) is auto-detected when the data is read.</span></span>  
  
 <span data-ttu-id="bcda3-117">Para obter mais informações sobre como usar <xref:System.Xml.XmlDictionaryReaderQuotas> para evitar ataques de negação de serviço durante a leitura de dados não confiáveis, consulte [considerações de segurança para dados](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span><span class="sxs-lookup"><span data-stu-id="bcda3-117">For more information about using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateJsonReader (System.IO.Stream stream, System.Xml.XmlDictionaryReaderQuotas quotas);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateJsonReader(class System.IO.Stream stream, class System.Xml.XmlDictionaryReaderQuotas quotas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryReader ^ CreateJsonReader(System::IO::Stream ^ stream, System::Xml::XmlDictionaryReaderQuotas ^ quotas);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="bcda3-118">A entrada <see cref="T:System.IO.Stream" /> da qual ler.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-118">The input <see cref="T:System.IO.Stream" /> from which to read.</span>
          </span>
        </param>
        <param name="quotas">
          <span data-ttu-id="bcda3-119">O <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> usado para prevenir ataques de Negação de Serviço durante a leitura de dados não confiáveis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-119">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> used to prevent Denial of Service attacks when reading untrusted data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bcda3-120">Cria um <see cref="T:System.Xml.XmlDictionaryReader" /> que pode mapear fluxos codificados com JSON (JavaScript Object Notation) para um XML Infoset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-120">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map streams encoded with JavaScript Object Notation (JSON) to an XML Infoset.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bcda3-121">Um <see cref="T:System.Xml.XmlDictionaryReader" /> que pode ler o objeto JSON (JavaScript Object Notation).</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-121">An <see cref="T:System.Xml.XmlDictionaryReader" /> that can read JavaScript Object Notation (JSON).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcda3-122">Essa sobrecarga não tem um <xref:System.Text.Encoding> parâmetro.</span><span class="sxs-lookup"><span data-stu-id="bcda3-122">This overload does not take an <xref:System.Text.Encoding> parameter.</span></span> <span data-ttu-id="bcda3-123">O caractere de codificação (UTF-8, Unicode ou Unicode Big-Endian) é detectado automaticamente quando os dados são lidos.</span><span class="sxs-lookup"><span data-stu-id="bcda3-123">The character encoding (UTF-8, Unicode or Big-Endian Unicode) is auto-detected when the data is read.</span></span>  
  
 <span data-ttu-id="bcda3-124">Para obter mais informações sobre como usar <xref:System.Xml.XmlDictionaryReaderQuotas> para evitar ataques de negação de serviço durante a leitura de dados não confiáveis, consulte [considerações de segurança para dados](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span><span class="sxs-lookup"><span data-stu-id="bcda3-124">For more information about using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateJsonReader (byte[] buffer, int offset, int count, System.Xml.XmlDictionaryReaderQuotas quotas);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateJsonReader(unsigned int8[] buffer, int32 offset, int32 count, class System.Xml.XmlDictionaryReaderQuotas quotas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateJsonReader (buffer As Byte(), offset As Integer, count As Integer, quotas As XmlDictionaryReaderQuotas) As XmlDictionaryReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryReader ^ CreateJsonReader(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Xml::XmlDictionaryReaderQuotas ^ quotas);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="bcda3-125">A matriz do buffer <see cref="T:System.Byte" /> de entrada para leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-125">The input <see cref="T:System.Byte" /> buffer array from which to read.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="bcda3-126">Posição inicial da qual ler no <c>buffer</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-126">Starting position from which to read in <c>buffer</c>.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="bcda3-127">Número de bytes que podem ser lidos do <c>buffer</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-127">Number of bytes that can be read from <c>buffer</c>.</span>
          </span>
        </param>
        <param name="quotas">
          <span data-ttu-id="bcda3-128">O <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> usado para prevenir ataques de Negação de Serviço durante a leitura de dados não confiáveis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-128">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> used to prevent Denial of Service attacks when reading untrusted data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bcda3-129">Cria um <see cref="T:System.Xml.XmlDictionaryReader" /> que pode mapear buffers codificados com JSON (JavaScript Object Notation), de um tamanho e deslocamento especificados, para um XML Infoset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-129">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map buffers encoded with JavaScript Object Notation (JSON), of a specified size and offset, to an XML Infoset.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bcda3-130">Um <see cref="T:System.Xml.XmlDictionaryReader" /> que pode ler o objeto JSON (JavaScript Object Notation).</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-130">An <see cref="T:System.Xml.XmlDictionaryReader" /> that can read JavaScript Object Notation (JSON).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcda3-131">Essa sobrecarga não tem um <xref:System.Text.Encoding> parâmetro.</span><span class="sxs-lookup"><span data-stu-id="bcda3-131">This overload does not take an <xref:System.Text.Encoding> parameter.</span></span> <span data-ttu-id="bcda3-132">O caractere de codificação (UTF-8, Unicode ou Unicode Big-Endian) é detectado automaticamente quando os dados são lidos.</span><span class="sxs-lookup"><span data-stu-id="bcda3-132">The character encoding (UTF-8, Unicode or Big-Endian Unicode) is auto-detected when the data is read.</span></span>  
  
 <span data-ttu-id="bcda3-133">Para obter mais informações sobre como usar <xref:System.Xml.XmlDictionaryReaderQuotas> para evitar ataques de negação de serviço durante a leitura de dados não confiáveis, consulte [considerações de segurança para dados](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span><span class="sxs-lookup"><span data-stu-id="bcda3-133">For more information about using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateJsonReader (System.IO.Stream stream, System.Text.Encoding encoding, System.Xml.XmlDictionaryReaderQuotas quotas, System.Xml.OnXmlDictionaryReaderClose onClose);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateJsonReader(class System.IO.Stream stream, class System.Text.Encoding encoding, class System.Xml.XmlDictionaryReaderQuotas quotas, class System.Xml.OnXmlDictionaryReaderClose onClose) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryReader ^ CreateJsonReader(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, System::Xml::XmlDictionaryReaderQuotas ^ quotas, System::Xml::OnXmlDictionaryReaderClose ^ onClose);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
        <Parameter Name="onClose" Type="System.Xml.OnXmlDictionaryReaderClose" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="bcda3-134">A entrada <see cref="T:System.IO.Stream" /> da qual ler.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-134">The input <see cref="T:System.IO.Stream" /> from which to read.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="bcda3-135">O <see cref="T:System.Text.Encoding" /> que especifica a codificação de caracteres usada pelo leitor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-135">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the reader.</span>
          </span>
          <span data-ttu-id="bcda3-136">Se <see langword="null" /> for especificado como o valor, o leitor tentará detectar automaticamente a codificação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-136">If <see langword="null" /> is specified as the value, the reader attempts to auto-detect the encoding.</span>
          </span>
        </param>
        <param name="quotas">
          <span data-ttu-id="bcda3-137">O <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> usado para prevenir ataques de Negação de Serviço durante a leitura de dados não confiáveis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-137">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> used to prevent Denial of Service attacks when reading untrusted data.</span>
          </span>
        </param>
        <param name="onClose">
          <span data-ttu-id="bcda3-138">O delegado do <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> a chamar quando o leitor estiver fechado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-138">The <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> delegate to call when the reader is closed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bcda3-139">Cria um <see cref="T:System.Xml.XmlDictionaryReader" />, que pode mapear fluxos codificados com JSON (JavaScript Object Notation), de um tamanho e deslocamento especificados, para um Infoset XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-139">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map streams encoded with JavaScript Object Notation (JSON), of a specified size and offset, to an XML Infoset.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bcda3-140">Um <see cref="T:System.Xml.XmlDictionaryReader" /> que pode ler o objeto JSON (JavaScript Object Notation).</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-140">An <see cref="T:System.Xml.XmlDictionaryReader" /> that can read JavaScript Object Notation (JSON).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcda3-141">Para obter mais informações sobre como usar <xref:System.Xml.XmlDictionaryReaderQuotas> para evitar ataques de negação de serviço durante a leitura de dados não confiáveis, consulte [considerações de segurança para dados](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span><span class="sxs-lookup"><span data-stu-id="bcda3-141">For more information about using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateJsonReader (byte[] buffer, int offset, int count, System.Text.Encoding encoding, System.Xml.XmlDictionaryReaderQuotas quotas, System.Xml.OnXmlDictionaryReaderClose onClose);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateJsonReader(unsigned int8[] buffer, int32 offset, int32 count, class System.Text.Encoding encoding, class System.Xml.XmlDictionaryReaderQuotas quotas, class System.Xml.OnXmlDictionaryReaderClose onClose) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryReader ^ CreateJsonReader(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Text::Encoding ^ encoding, System::Xml::XmlDictionaryReaderQuotas ^ quotas, System::Xml::OnXmlDictionaryReaderClose ^ onClose);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
        <Parameter Name="onClose" Type="System.Xml.OnXmlDictionaryReaderClose" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="bcda3-142">A matriz do buffer <see cref="T:System.Byte" /> de entrada para leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-142">The input <see cref="T:System.Byte" /> buffer array from which to read.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="bcda3-143">Posição inicial da qual ler no <c>buffer</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-143">Starting position from which to read in <c>buffer</c>.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="bcda3-144">Número de bytes que podem ser lidos do <c>buffer</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-144">Number of bytes that can be read from <c>buffer</c>.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="bcda3-145">O <see cref="T:System.Text.Encoding" /> que especifica a codificação de caracteres usada pelo leitor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-145">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the reader.</span>
          </span>
          <span data-ttu-id="bcda3-146">Se <see langword="null" /> for especificado como o valor, o leitor tentará detectar automaticamente a codificação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-146">If <see langword="null" /> is specified as the value, the reader attempts to auto-detect the encoding.</span>
          </span>
        </param>
        <param name="quotas">
          <span data-ttu-id="bcda3-147">O <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> usado para prevenir ataques de Negação de Serviço durante a leitura de dados não confiáveis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-147">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> used to prevent Denial of Service attacks when reading untrusted data.</span>
          </span>
        </param>
        <param name="onClose">
          <span data-ttu-id="bcda3-148">O delegado do <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> a chamar quando o leitor estiver fechado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-148">The <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> delegate to call when the reader is closed.</span>
          </span>
          <span data-ttu-id="bcda3-149">O valor padrão é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-149">The default value is <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bcda3-150">Cria um <see cref="T:System.Xml.XmlDictionaryReader" /> que pode mapear buffers codificados com JSON (JavaScript Object Notation), com um tamanho, deslocamento e codificação de caracteres especificados, para um Infoset XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-150">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map buffers encoded with JavaScript Object Notation (JSON), with a specified size and offset and character encoding, to an XML Infoset.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bcda3-151">Um <see cref="T:System.Xml.XmlDictionaryReader" /> que pode ler o objeto JSON (JavaScript Object Notation).</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-151">An <see cref="T:System.Xml.XmlDictionaryReader" /> that can read JavaScript Object Notation (JSON).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcda3-152">Para obter mais informações sobre como usar <xref:System.Xml.XmlDictionaryReaderQuotas> para evitar ataques de negação de serviço durante a leitura de dados não confiáveis, consulte [considerações de segurança para dados](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span><span class="sxs-lookup"><span data-stu-id="bcda3-152">For more information about using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateJsonWriter">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bcda3-153">Cria um <see cref="T:System.Xml.XmlDictionaryWriter" /> que grava dados codificados com JSON em um fluxo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-153">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcda3-154">O <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter%2A> método estático retorna uma instância de um <xref:System.Xml.XmlDictionaryWriter> que um Infoset XML pode ser mapeado para um fluxo JSON.</span><span class="sxs-lookup"><span data-stu-id="bcda3-154">The <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter%2A> static method returns an instance of an <xref:System.Xml.XmlDictionaryWriter> that can map an XML Infoset to a JSON stream.</span></span> <span data-ttu-id="bcda3-155">O <xref:System.Xml.XmlDictionaryWriter> não é garantida para produzir um JSON válido.</span><span class="sxs-lookup"><span data-stu-id="bcda3-155">The <xref:System.Xml.XmlDictionaryWriter> is not guaranteed to produce valid JSON.</span></span> <span data-ttu-id="bcda3-156">Se ele é usado de forma que não há suportada o mapeamento de XML JSON, ele pode gerar uma exceção ou escrever um documento JSON inválido.</span><span class="sxs-lookup"><span data-stu-id="bcda3-156">If it is used in a way not supported by the JSON-XML mapping, it may either throw an exception or write an invalid JSON document.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryWriter CreateJsonWriter(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryWriter ^ CreateJsonWriter(System::IO::Stream ^ stream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="bcda3-157">O <see cref="T:System.IO.Stream" /> de saída do gravador JSON.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-157">The output <see cref="T:System.IO.Stream" /> for the JSON writer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bcda3-158">Cria um <see cref="T:System.Xml.XmlDictionaryWriter" /> que grava dados codificados com JSON em um fluxo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-158">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bcda3-159">Um <see cref="T:System.Xml.XmlDictionaryWriter" /> que grava dados codificados com JSON no fluxo com base em um Infoset XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-159">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to the stream based on an XML Infoset.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcda3-160">A codificação de caracteres padrão é UTF-8.</span><span class="sxs-lookup"><span data-stu-id="bcda3-160">The default character encoding is UTF-8.</span></span> <span data-ttu-id="bcda3-161">Quando o gravador está fechado, o fluxo está fechado também.</span><span class="sxs-lookup"><span data-stu-id="bcda3-161">When the writer is closed, the stream is closed as well.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryWriter CreateJsonWriter(class System.IO.Stream stream, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryWriter ^ CreateJsonWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="bcda3-162">O <see cref="T:System.IO.Stream" /> de saída do gravador JSON.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-162">The output <see cref="T:System.IO.Stream" /> for the JSON writer.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="bcda3-163">O <see cref="T:System.Text.Encoding" /> que especifica a codificação de caracteres usada pelo gravador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-163">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the writer.</span>
          </span>
          <span data-ttu-id="bcda3-164">A codificação padrão é UTF-8.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-164">The default encoding is UTF-8.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bcda3-165">Cria um <see cref="T:System.Xml.XmlDictionaryWriter" /> que grava dados codificados com JSON em um fluxo com uma codificação de caracteres especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-165">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream with a specified character encoding.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bcda3-166">Um <see cref="T:System.Xml.XmlDictionaryWriter" /> que grava dados codificados com JSON no fluxo com base em um Infoset XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-166">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to the stream based on an XML Infoset.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcda3-167">Quando o gravador está fechado, o fluxo está fechado também.</span><span class="sxs-lookup"><span data-stu-id="bcda3-167">When the writer is closed, the stream is closed as well.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream, System.Text.Encoding encoding, bool ownsStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryWriter CreateJsonWriter(class System.IO.Stream stream, class System.Text.Encoding encoding, bool ownsStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryWriter ^ CreateJsonWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, bool ownsStream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="ownsStream" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="bcda3-168">O <see cref="T:System.IO.Stream" /> de saída do gravador JSON.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-168">The output <see cref="T:System.IO.Stream" /> for the JSON writer.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="bcda3-169">O <see cref="T:System.Text.Encoding" /> que especifica a codificação de caracteres usada pelo gravador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-169">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the writer.</span>
          </span>
          <span data-ttu-id="bcda3-170">A codificação padrão é UTF-8.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-170">The default encoding is UTF-8.</span>
          </span>
        </param>
        <param name="ownsStream">
          <span data-ttu-id="bcda3-171">Se <see langword="true" />, o fluxo de saída será fechado pelo gravador ao terminar; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-171">If <see langword="true" />, the output stream is closed by the writer when done; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="bcda3-172">O valor padrão é <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-172">The default value is <see langword="true" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bcda3-173">Cria um <see cref="T:System.Xml.XmlDictionaryWriter" /> que grava dados codificados com JSON em um fluxo com uma codificação de caracteres especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-173">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream with a specified character encoding.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bcda3-174">Um <see cref="T:System.Xml.XmlDictionaryWriter" /> que grava dados codificados com JSON no fluxo com base em um Infoset XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-174">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to the stream based on an XML Infoset.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream, System.Text.Encoding encoding, bool ownsStream, bool indent);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryWriter CreateJsonWriter(class System.IO.Stream stream, class System.Text.Encoding encoding, bool ownsStream, bool indent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryWriter ^ CreateJsonWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, bool ownsStream, bool indent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="ownsStream" Type="System.Boolean" />
        <Parameter Name="indent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="bcda3-175">O <see cref="T:System.IO.Stream" /> de saída do gravador JSON.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-175">The output <see cref="T:System.IO.Stream" /> for the JSON writer.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="bcda3-176">O <see cref="T:System.Text.Encoding" /> que especifica a codificação de caracteres usada pelo gravador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-176">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the writer.</span>
          </span>
          <span data-ttu-id="bcda3-177">A codificação padrão é UTF-8.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-177">The default encoding is UTF-8.</span>
          </span>
        </param>
        <param name="ownsStream">
          <span data-ttu-id="bcda3-178">Se <see langword="true" />, o fluxo de saída será fechado pelo gravador ao terminar; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-178">If <see langword="true" />, the output stream is closed by the writer when done; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="bcda3-179">O valor padrão é <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-179">The default value is <see langword="true" />.</span>
          </span>
        </param>
        <param name="indent">
          <span data-ttu-id="bcda3-180">Se <see langword="true" />, a saída usará o formato de várias linhas, cada nível de recuo corretamente; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-180">If <see langword="true" />, the output uses multiline format, indenting each level properly; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bcda3-181">Cria um <see cref="T:System.Xml.XmlDictionaryWriter" /> que grava dados codificados com JSON em um fluxo com um caractere especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-181">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream with a specified character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bcda3-182">Um <see cref="T:System.Xml.XmlDictionaryWriter" /> que grava dados codificados com JSON no fluxo com base em um Infoset XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-182">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to the stream based on an XML Infoset.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream, System.Text.Encoding encoding, bool ownsStream, bool indent, string indentChars);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryWriter CreateJsonWriter(class System.IO.Stream stream, class System.Text.Encoding encoding, bool ownsStream, bool indent, string indentChars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryWriter ^ CreateJsonWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, bool ownsStream, bool indent, System::String ^ indentChars);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="ownsStream" Type="System.Boolean" />
        <Parameter Name="indent" Type="System.Boolean" />
        <Parameter Name="indentChars" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="bcda3-183">O <see cref="T:System.IO.Stream" /> de saída do gravador JSON.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-183">The output <see cref="T:System.IO.Stream" /> for the JSON writer.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="bcda3-184">O <see cref="T:System.Text.Encoding" /> que especifica a codificação de caracteres usada pelo gravador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-184">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the writer.</span>
          </span>
          <span data-ttu-id="bcda3-185">A codificação padrão é UTF-8.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-185">The default encoding is UTF-8.</span>
          </span>
        </param>
        <param name="ownsStream">
          <span data-ttu-id="bcda3-186">Se <see langword="true" />, o fluxo de saída será fechado pelo gravador ao terminar; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-186">If <see langword="true" />, the output stream is closed by the writer when done; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="bcda3-187">O valor padrão é <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-187">The default value is <see langword="true" />.</span>
          </span>
        </param>
        <param name="indent">
          <span data-ttu-id="bcda3-188">Se <see langword="true" />, a saída usará o formato de várias linhas, cada nível de recuo corretamente; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-188">If <see langword="true" />, the output uses multiline format, indenting each level properly; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="indentChars">
          <span data-ttu-id="bcda3-189">A cadeia de caracteres usada recuar cada nível.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-189">The string used to indent each level.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bcda3-190">Cria um <see cref="T:System.Xml.XmlDictionaryWriter" /> que grava dados codificados com JSON em um fluxo com um caractere especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-190">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream with a specified character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bcda3-191">Um <see cref="T:System.Xml.XmlDictionaryWriter" /> que grava dados codificados com JSON no fluxo com base em um Infoset XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcda3-191">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to the stream based on an XML Infoset.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>