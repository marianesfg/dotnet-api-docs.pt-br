<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DataContractJsonSerializer.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d80a5fa645889b2b4b20f749a5b8139e3d3e2a90.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d80a5fa645889b2b4b20f749a5b8139e3d3e2a90</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.Json.DataContractJsonSerializer">
          <source>Serializes objects to the JavaScript Object Notation (JSON) and deserializes JSON data to objects.</source>
          <target state="translated">Serializa objetos para o objeto JSON (JavaScript Object Notation) e desserializa os dados JSON em objetos.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.Json.DataContractJsonSerializer">
          <source>This class cannot be inherited.</source>
          <target state="translated">Essa classe não pode ser herdada.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.Json.DataContractJsonSerializer">
          <source>Use the <ph id="ph1">&lt;xref:System.Runtime.Serialization.Json.DataContractJsonSerializer&gt;</ph> class to serialize instances of a type into a JSON document and to deserialize a JSON document into an instance of a type.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Runtime.Serialization.Json.DataContractJsonSerializer&gt;</ph> para serializar instâncias de um tipo em um documento JSON e ao desserializar um documento JSON em uma instância de um tipo de classe.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.Json.DataContractJsonSerializer">
          <source>For example, you can create a type named <ph id="ph1">`Person`</ph> with properties that contain essential data, such as a name and address.</source>
          <target state="translated">Por exemplo, você pode criar um tipo chamado <ph id="ph1">`Person`</ph> com propriedades que contêm dados essenciais, como um nome e endereço.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.Json.DataContractJsonSerializer">
          <source>You can then create and manipulate an instance of the <ph id="ph1">`Person`</ph> class and write all of its property values in a JSON document for later retrieval.</source>
          <target state="translated">Você pode criar e manipular uma ocorrência da <ph id="ph1">`Person`</ph> classe e gravar todos os seus valores de propriedade em um documento JSON para recuperação posterior.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.Json.DataContractJsonSerializer">
          <source>This JSON document can later be deserialized into the <ph id="ph1">`Person`</ph> class or another class with an equivalent data contract.</source>
          <target state="translated">Este documento JSON pode ser desserializado posteriormente para o <ph id="ph1">`Person`</ph> classe ou outra classe com um contrato de dados equivalente.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.Json.DataContractJsonSerializer">
          <source>If an error occurs during the serialization of an outgoing reply on the server or the reply operation throws an exception for some other reason, it may not get returned to the client as a fault.</source>
          <target state="translated">Se ocorrer um erro durante a serialização de uma resposta de saída no servidor ou a operação de resposta lança uma exceção por algum outro motivo, ela pode não obter retornada ao cliente como uma falha.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.Json.DataContractJsonSerializer">
          <source>At least one of the types being serialized or deserialized does not conform to data contract rules.</source>
          <target state="translated">Pelo menos um dos tipos que está sendo serializado ou desserializado não está em conformidade com as regras do contrato de dados.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.Json.DataContractJsonSerializer">
          <source>For example, the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> attribute has not been applied to the type.</source>
          <target state="translated">Por exemplo, o atributo <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> não foi aplicado ao tipo.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.Json.DataContractJsonSerializer">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type)">
          <source>The type of the instances that is serialized or deserialized.</source>
          <target state="translated">O tipo das instâncias que é serializado ou desserializado.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /&gt;</ph> class to serialize or deserialize an object of the specified type.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /&gt;</ph> para serializar ou desserializar um objeto do tipo especificado.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type})">
          <source>The type of the instances that are serialized or deserialized.</source>
          <target state="translated">O tipo das instâncias serializadas ou desserializadas.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> that contains the types that may be present in the object graph.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> de <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> que contém os tipos que podem estar presentes no grafo do objeto.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /&gt;</ph> class to serialize or deserialize an object of the specified type, with a collection of known types that may be present in the object graph.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /&gt;</ph> para serializar ou desserializar um objeto do tipo especifico, com uma coleção de tipos conhecidos que podem existir no grafo do objeto.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Runtime.Serialization.Json.DataContractJsonSerializerSettings)">
          <source>The type of the instances that is serialized or deserialized.</source>
          <target state="translated">O tipo das instâncias que é serializado ou desserializado.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Runtime.Serialization.Json.DataContractJsonSerializerSettings)">
          <source>The serializer settings for the JSON serializer.</source>
          <target state="translated">As configurações de serializador para o serializador JSON.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Runtime.Serialization.Json.DataContractJsonSerializerSettings)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /&gt;</ph> class to serialize or deserialize an object of the specified type and serializer settings.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /&gt;</ph> para serializar ou desserializar um objeto do tipo e das configurações do serializador especificadas.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String)">
          <source>The type of the instances that is serialized or deserialized.</source>
          <target state="translated">O tipo das instâncias que é serializado ou desserializado.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String)">
          <source>The name of the XML element that encloses the content to serialize or deserialize.</source>
          <target state="translated">O nome do elemento XML que inclui o conteúdo para serializar ou desserializar.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /&gt;</ph> class to serialize or deserialize an object of a specified type using the XML root element specified by a parameter.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /&gt;</ph> para serializar ou desserializar um objeto de um tipo especificado usando o elemento raiz XML especificado por um parâmetro.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString)">
          <source>The type of the instances that is serialized or deserialized.</source>
          <target state="translated">O tipo das instâncias que é serializado ou desserializado.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryString" /&gt;</ph> that contains the root element name of the content.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryString" /&gt;</ph> que contém o nome do elemento raiz do conteúdo.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /&gt;</ph> class to serialize or deserialize an object of a specified type using the XML root element specified by a parameter of type <ph id="ph2">&lt;see cref="T:System.Xml.XmlDictionaryString" /&gt;</ph>.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /&gt;</ph> para serializar ou desserializar um objeto de um tipo especificado usando o elemento raiz XML especificado por um parâmetro do tipo <ph id="ph2">&lt;see cref="T:System.Xml.XmlDictionaryString" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Type})">
          <source>The type of the instances that is serialized or deserialized.</source>
          <target state="translated">O tipo das instâncias que é serializado ou desserializado.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Type})">
          <source>The name of the XML element that encloses the content to serialize or deserialize.</source>
          <target state="translated">O nome do elemento XML que inclui o conteúdo para serializar ou desserializar.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Type})">
          <source>The default is "root".</source>
          <target state="translated">O padrão é "root".</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Type})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> that contains the types that may be present in the object graph.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> de <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> que contém os tipos que podem estar presentes no grafo do objeto.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Type})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /&gt;</ph> class to serialize or deserialize an object of a specified type using the XML root element specified by a parameter, with a collection of known types that may be present in the object graph.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /&gt;</ph> para serializar ou desserializar um objeto de um tipo especificado usando o elemento raiz XML especificado por um parâmetro, com uma coleção de tipos conhecidos que pode estar presente no grafo do objeto.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type})">
          <source>The type of the instances that is serialized or deserialized.</source>
          <target state="translated">O tipo das instâncias que é serializado ou desserializado.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryString" /&gt;</ph> that contains the root element name of the content.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryString" /&gt;</ph> que contém o nome do elemento raiz do conteúdo.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> that contains the types that may be present in the object graph.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> de <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> que contém os tipos que podem estar presentes no grafo do objeto.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /&gt;</ph> class to serialize or deserialize an object of a specified type using the XML root element specified by a parameter of type <ph id="ph2">&lt;see cref="T:System.Xml.XmlDictionaryString" /&gt;</ph>, with a collection of known types that may be present in the object graph.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /&gt;</ph> para serializar ou desserializar um objeto de um tipo especificado usando o elemento raiz XML especificado por um parâmetro de tipo <ph id="ph2">&lt;see cref="T:System.Xml.XmlDictionaryString" /&gt;</ph>, com uma coleção de tipos conhecidos que pode estar presente no grafo do objeto.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source>The type of the instances that is serialized or deserialized.</source>
          <target state="translated">O tipo das instâncias que é serializado ou desserializado.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryString" /&gt;</ph> that contains the root element name of the content.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryString" /&gt;</ph> que contém o nome do elemento raiz do conteúdo.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> that contains the types that may be present in the object graph.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> de <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> que contém os tipos que podem estar presentes no grafo do objeto.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to ignore the <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.IExtensibleDataObject" /&gt;</ph> interface upon serialization and ignore unexpected data upon deserialization; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para ignorar a interface <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.IExtensibleDataObject" /&gt;</ph> na serialização e ignorar os dados inesperados na desserialização, caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source>An implementation of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /&gt;</ph> to customize the serialization process.</source>
          <target state="translated">Uma implementação do <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /&gt;</ph> para personalizar o processo de serialização.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to emit type information; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para emitir informações de tipo, caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /&gt;</ph> class to serialize or deserialize an object of the specified type.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /&gt;</ph> para serializar ou desserializar um objeto do tipo especificado.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source>This method also specifies a list of known types that may be present in the object graph, the maximum number of graph items to serialize or deserialize, whether to ignore unexpected data or emit type information, and a surrogate for custom serialization.</source>
          <target state="translated">Esse método também especifica uma lista de tipos conhecidos que podem estar presentes no grafo do objeto, o número máximo de itens de grafo para serializar ou desserializar, se deve ignorar dados inesperados ou emitir informações de tipo e um substituto para a serialização personalizada.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source>The type of the instances that is serialized or deserialized.</source>
          <target state="translated">O tipo das instâncias que é serializado ou desserializado.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source>The name of the XML element that encloses the content to serialize or deserialize.</source>
          <target state="translated">O nome do elemento XML que inclui o conteúdo para serializar ou desserializar.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source>The default is "root".</source>
          <target state="translated">O padrão é "root".</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> that contains the types that may be present in the object graph.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> de <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> que contém os tipos que podem estar presentes no grafo do objeto.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source>The maximum number of items in the graph to serialize or deserialize.</source>
          <target state="translated">O número máximo de itens no grafo a serem serializados ou desserializados.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source>The default is the value returned by the <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph> property.</source>
          <target state="translated">O padrão é o valor retornado pela propriedade <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to ignore the <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.IExtensibleDataObject" /&gt;</ph> interface upon serialization and ignore unexpected data upon deserialization; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para ignorar a interface <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.IExtensibleDataObject" /&gt;</ph> na serialização e ignorar os dados inesperados na desserialização, caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source>An implementation of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /&gt;</ph> to customize the serialization process.</source>
          <target state="translated">Uma implementação do <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /&gt;</ph> para personalizar o processo de serialização.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to emit type information; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para emitir informações de tipo, caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /&gt;</ph> class to serialize or deserialize an object of the specified type.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /&gt;</ph> para serializar ou desserializar um objeto do tipo especificado.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source>This method also specifies the root name of the XML element, a list of known types that may be present in the object graph, the maximum number of graph items to serialize or deserialize, whether to ignore unexpected data or emit type information, and a surrogate for custom serialization.</source>
          <target state="translated">Esse método também especifica o nome da raiz do elemento XML, uma lista de tipos conhecidos que podem estar presentes no grafo do objeto, o número máximo de itens de grafo para serializar ou desserializar, se deve ignorar dados inesperados ou emitir informações de tipo e um substituto para a serialização personalizada.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source>The type of the instances that are serialized or deserialized.</source>
          <target state="translated">O tipo das instâncias serializadas ou desserializadas.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryString" /&gt;</ph> that contains the root element name of the content.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryString" /&gt;</ph> que contém o nome do elemento raiz do conteúdo.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> that contains the known types that may be present in the object graph.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> de <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> que contém os tipos conhecidos que podem estar presentes no gráfico de objeto.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source>The maximum number of items in the graph to serialize or deserialize.</source>
          <target state="translated">O número máximo de itens no grafo a serem serializados ou desserializados.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source>The default is the value returned by the <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph> property.</source>
          <target state="translated">O padrão é o valor retornado pela propriedade <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to ignore the <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.IExtensibleDataObject" /&gt;</ph> interface upon serialization and ignore unexpected data upon deserialization; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para ignorar a interface <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.IExtensibleDataObject" /&gt;</ph> na serialização e ignorar os dados inesperados na desserialização, caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source>An implementation of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /&gt;</ph> to customize the serialization process.</source>
          <target state="translated">Uma implementação do <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /&gt;</ph> para personalizar o processo de serialização.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to emit type information; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para emitir informações de tipo, caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /&gt;</ph> class to serialize or deserialize an object of the specified type.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /&gt;</ph> para serializar ou desserializar um objeto do tipo especificado.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source>This method also specifies the root name of the XML element, a list of known types that may be present in the object graph, the maximum number of graph items to serialize or deserialize, whether to ignore unexpected data or emit type information, and a surrogate for custom serialization.</source>
          <target state="translated">Esse método também especifica o nome da raiz do elemento XML, uma lista de tipos conhecidos que podem estar presentes no grafo do objeto, o número máximo de itens de grafo para serializar ou desserializar, se deve ignorar dados inesperados ou emitir informações de tipo e um substituto para a serialização personalizada.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.DataContractSurrogate">
          <source>Gets a surrogate type that is currently active for a given <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /&gt;</ph> instance.</source>
          <target state="translated">Obtém um tipo substituto que está ativo no momento para uma determinada instância <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.DataContractSurrogate">
          <source>Surrogates can extend the serialization or deserialization process.</source>
          <target state="translated">Substitutos podem ampliar o processo de serialização ou desserialização.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.DataContractSurrogate">
          <source>An implementation of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /&gt;</ph> class.</source>
          <target state="translated">Uma implementação de <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.DataContractSurrogate">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Serialization.IDataContractSurrogate&gt;</ph> can be used to customize how instances of a type are serialized and deserialized.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Runtime.Serialization.IDataContractSurrogate&gt;</ph> pode ser usado para personalizar como instâncias de um tipo são serializadas e desserializadas.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.DataContractSurrogate">
          <source>For example, it can be used to enable serialization of legacy types that are not serializable, that is, types to which the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> attribute has not been applied.</source>
          <target state="translated">Por exemplo, ele pode ser usado para habilitar a serialização de tipos herdados que não são serializáveis, ou seja, tipos para os quais o <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> atributo não foi aplicado.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.DateTimeFormat">
          <source>Gets the format of the date and time type items in object graph.</source>
          <target state="translated">Obtém o formato dos itens do tipo data e hora no grafo do objeto.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.DateTimeFormat">
          <source>The format of the date and time type items in object graph.</source>
          <target state="translated">O formato dos itens do tipo data e hora no grafo do objeto.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.EmitTypeInformation">
          <source>Gets or sets the data contract JSON serializer settings to emit type information.</source>
          <target state="translated">Obtém ou define as configurações do serializador JSON do contrato de dados para emitir informações de tipo.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.EmitTypeInformation">
          <source>The data contract JSON serializer settings to emit type information.</source>
          <target state="translated">As configurações do serializador JSON do contrato de dados para emitir informações de tipo.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.IgnoreExtensionDataObject">
          <source>Gets a value that specifies whether unknown data is ignored on deserialization and whether the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.IExtensibleDataObject" /&gt;</ph> interface is ignored on serialization.</source>
          <target state="translated">Obtém um valor que especifica se os dados desconhecidos serão ignorados na desserialização e se a interface <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.IExtensibleDataObject" /&gt;</ph> é ignorada na serialização.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.IgnoreExtensionDataObject">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to ignore unknown data and <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.IExtensibleDataObject" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para ignorar dados desconhecidos e <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.IExtensibleDataObject" /&gt;</ph>; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.IgnoreExtensionDataObject">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Serialization.Json.DataContractJsonSerializer.IgnoreExtensionDataObject%2A&gt;</ph> property affects types to which a <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> attribute has been applied and that also implement the <ph id="ph3">&lt;xref:System.Runtime.Serialization.IExtensibleDataObject&gt;</ph> interface.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Runtime.Serialization.Json.DataContractJsonSerializer.IgnoreExtensionDataObject%2A&gt;</ph> propriedade afeta os tipos para os quais um <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> atributo foi aplicado, e que também implementam o <ph id="ph3">&lt;xref:System.Runtime.Serialization.IExtensibleDataObject&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.IgnoreExtensionDataObject">
          <source>In this case when <ph id="ph1">&lt;xref:System.Runtime.Serialization.IExtensibleDataObject&gt;</ph> is <ph id="ph2">`true`</ph>, data added in future versions of the contract is ignored on read and write.</source>
          <target state="translated">Nesse caso, quando <ph id="ph1">&lt;xref:System.Runtime.Serialization.IExtensibleDataObject&gt;</ph> é <ph id="ph2">`true`</ph>, dados adicionados em futuras versões do contrato é ignorado na leitura e gravação.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.IgnoreExtensionDataObject">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph><bpt id="p1">[</bpt>Forward-Compatible Data Contracts<ept id="p1">](~/docs/framework/wcf/feature-details/forward-compatible-data-contracts.md)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph><bpt id="p1">[</bpt>Contratos de dados compatíveis por encaminhamento<ept id="p1">](~/docs/framework/wcf/feature-details/forward-compatible-data-contracts.md)</ept>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.Json.DataContractJsonSerializer">
          <source>Gets a value that specifies whether the serializer can read the object.</source>
          <target state="translated">Obtém um valor que especifica se o serializador pode ler o objeto.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryReader" /&gt;</ph> used to read the XML stream mapped from JSON.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryReader" /&gt;</ph> usado para ler o fluxo XML mapeado para JSON.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
          <source>Gets a value that specifies whether the <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryReader" /&gt;</ph> is positioned over an XML element that represents an object the serializer can deserialize from.</source>
          <target state="translated">Obtém um valor que especifica se o <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryReader" /&gt;</ph> está posicionado sobre um elemento XML que representa um objeto do qual o serializador pode desserializar.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the reader is positioned correctly; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o leitor estiver posicionado corretamente, caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Serialization.Json.DataContractJsonSerializer.IsStartObject%2A&gt;</ph> determines whether it can read a object by checking that it is positioned on an XML element.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Runtime.Serialization.Json.DataContractJsonSerializer.IsStartObject%2A&gt;</ph> determina se ela pode ler um objeto, verificando se ele está posicionado em um elemento XML.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
          <source>It also examines the name and namespace of the XML element that the reader is positioned at and compares the values to the expected name and namespace.</source>
          <target state="translated">Ele também examina o nome e o namespace do elemento XML que o leitor é posicionado na e compara os valores para o namespace e nome esperado.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
          <source>The expected name can be set with the <ph id="ph1">`rootName`</ph> value passed into the constructor (if present), or is "root" if absent.</source>
          <target state="translated">O nome esperado pode ser definido com o <ph id="ph1">`rootName`</ph> valor passado para o construtor (se houver), ou será "root" caso esteja ausente.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
          <source>The expected namespace is the empty string.</source>
          <target state="translated">O namespace esperado é cadeia de caracteres vazia.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
          <source>Note that this method is intended for advanced scenarios when working with XML mapped from JSON.</source>
          <target state="translated">Observe que este método destina-se para cenários avançados ao trabalhar com XML mapeado do JSON.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.IsStartObject(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> used to read the XML stream.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> usado para ler o fluxo XML.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.IsStartObject(System.Xml.XmlReader)">
          <source>Determines whether the <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> is positioned on an object that can be deserialized.</source>
          <target state="translated">Determina se o <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> está posicionado em um objeto que pode ser desserializado.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.IsStartObject(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the reader is positioned correctly; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o leitor estiver posicionado corretamente, caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.IsStartObject(System.Xml.XmlReader)">
          <source>This method checks whether the reader is positioned on an element that can be deserialized, and returns <ph id="ph1">`true`</ph> if it is.</source>
          <target state="translated">Este método verifica se o leitor está posicionado em um elemento que pode ser desserializado e retorna <ph id="ph1">`true`</ph> se ele for.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.IsStartObject(System.Xml.XmlReader)">
          <source>To return <ph id="ph1">`true`</ph>, the found element must have the expected name.</source>
          <target state="translated">Para retornar <ph id="ph1">`true`</ph>, o elemento encontrado deve ter o nome esperado.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.KnownTypes">
          <source>Gets a collection of types that may be present in the object graph serialized using this instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /&gt;</ph>.</source>
          <target state="translated">Obtém uma coleção de tipos que podem estar presentes no grafo de objeto serializado usando essa instância do <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.KnownTypes">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> that contains the expected types passed in as known types to the <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /&gt;</ph> constructor.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> que contém os tipos esperados passados como tipos conhecidos para o construtor <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.MaxItemsInObjectGraph">
          <source>Gets the maximum number of items in an object graph that the serializer serializes or deserializes in one read or write call.</source>
          <target state="translated">Obtém o número máximo de itens em um grafo de objeto que o serializador serializa ou desserializa em uma chamada de leitura ou gravação.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.MaxItemsInObjectGraph">
          <source>The maximum number of items to serialize or deserialize.</source>
          <target state="translated">O número máximo de itens a serem serializados ou desserializados.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.MaxItemsInObjectGraph">
          <source>This property can be set using a constructor.</source>
          <target state="translated">Essa propriedade pode ser definida usando um construtor.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.MaxItemsInObjectGraph">
          <source>For a list, see <ph id="ph1">&lt;xref:System.Runtime.Serialization.Json.DataContractJsonSerializer.%23ctor%2A&gt;</ph>.</source>
          <target state="translated">Para obter uma lista, consulte <ph id="ph1">&lt;xref:System.Runtime.Serialization.Json.DataContractJsonSerializer.%23ctor%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.MaxItemsInObjectGraph">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Serialization.Json.DataContractJsonSerializer.MaxItemsInObjectGraph%2A&gt;</ph> property specifies the maximum number of objects that the serializer serializes or deserializes in a single <ph id="ph2">&lt;xref:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject%2A&gt;</ph> method call.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Runtime.Serialization.Json.DataContractJsonSerializer.MaxItemsInObjectGraph%2A&gt;</ph> propriedade especifica o número máximo de objetos que o serializador serializa ou desserializa em uma única <ph id="ph2">&lt;xref:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject%2A&gt;</ph> ou <ph id="ph3">&lt;xref:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject%2A&gt;</ph> chamada de método.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.MaxItemsInObjectGraph">
          <source>The method always reads one root object, but this object may have other objects in its data members.</source>
          <target state="translated">O método sempre lê um objeto raiz, mas esse objeto pode ter outros objetos em seus membros de dados.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.MaxItemsInObjectGraph">
          <source>Those objects may have other objects.</source>
          <target state="translated">Esses objetos podem ter outros objetos.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.MaxItemsInObjectGraph">
          <source>The default is <ph id="ph1">&lt;xref:System.Int32.MaxValue&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;xref:System.Int32.MaxValue&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.MaxItemsInObjectGraph">
          <source>Note that when serializing or deserializing arrays, every array entry counts as a separate object.</source>
          <target state="translated">Observe que, ao serializar ou desserializar matrizes, cada entrada de matriz conta como um objeto separado.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.MaxItemsInObjectGraph">
          <source>Also, note that some objects may have a large memory representation, so this quota alone may not be sufficient to prevent Denial of Service attacks.</source>
          <target state="translated">Além disso, observe que alguns objetos podem ter uma representação de memória grande, portanto essa cota sozinha pode não ser suficiente para evitar ataques de negação de serviço.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.MaxItemsInObjectGraph">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph><bpt id="p1">[</bpt>Security Considerations for Data<ept id="p1">](~/docs/framework/wcf/feature-details/security-considerations-for-data.md)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph><bpt id="p1">[</bpt>Considerações sobre segurança para dados<ept id="p1">](~/docs/framework/wcf/feature-details/security-considerations-for-data.md)</ept>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.MaxItemsInObjectGraph">
          <source>If you need to increase this quota beyond its default value, it is important to do so both on the sending (serializing) and receiving (deserializing) sides.</source>
          <target state="translated">Se você precisar aumentar essa cota além do seu valor padrão, é importante fazer isso de envio (serializar) e receber lados (desserializar).</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.MaxItemsInObjectGraph">
          <source>It applies both when reading and writing data.</source>
          <target state="translated">Ele se aplica tanto ao ler e gravar dados.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.MaxItemsInObjectGraph">
          <source>The number of items exceeds the maximum value.</source>
          <target state="translated">O número de itens excede o valor máximo.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.Json.DataContractJsonSerializer">
          <source>Deserializes JSON (JavaScript Object Notation) data and returns the deserialized object.</source>
          <target state="translated">Desserializa dados JSON (JavaScript Object Notation) e retorna o objeto desserializado.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> to be read.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> a ser lido.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.IO.Stream)">
          <source>Reads a document stream in the JSON (JavaScript Object Notation) format and returns the deserialized object.</source>
          <target state="translated">Lê um fluxo de documento no formato JSON (JavaScript Object Notation) e retorna o objeto desserializado.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.IO.Stream)">
          <source>The deserialized object.</source>
          <target state="translated">O objeto desserializado.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlDictionaryReader)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryReader" /&gt;</ph> used to read the XML document mapped from JSON.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryReader" /&gt;</ph> usado para ler o documento XML mapeado do JSON.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlDictionaryReader)">
          <source>Reads the XML document mapped from JSON (JavaScript Object Notation) with an <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryReader" /&gt;</ph> and returns the deserialized object.</source>
          <target state="translated">Lê o documento XML mapeado do JSON (JavaScript Object Notation) com um <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryReader" /&gt;</ph> e retorna o objeto desserializado.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlDictionaryReader)">
          <source>The deserialized object.</source>
          <target state="translated">O objeto desserializado.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlReader)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> used to read the XML document mapped from JSON.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> usado para ler o documento XML mapeado do JSON.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlReader)">
          <source>Reads the XML document mapped from JSON (JavaScript Object Notation) with an <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> and returns the deserialized object.</source>
          <target state="translated">Lê o documento XML mapeado do JSON (JavaScript Object Notation) com um <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> e retorna o objeto desserializado.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlReader)">
          <source>The deserialized object.</source>
          <target state="translated">O objeto desserializado.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryReader" /&gt;</ph> used to read the XML document mapped from JSON.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryReader" /&gt;</ph> usado para ler o documento XML mapeado do JSON.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to check whether the enclosing XML element name and namespace correspond to the expected name and namespace; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph> to skip the verification.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para verificar se o nome e o namespace do elemento XML delimitador correspondem ao nome e namespace esperados, caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph> para ignorar a verificação.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
          <source>Reads the XML document mapped from JSON with an <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryReader" /&gt;</ph> and returns the deserialized object; it also enables you to specify whether the serializer should verify that it is positioned on an appropriate element before attempting to deserialize.</source>
          <target state="translated">Lê o documento XML mapeado do JSON com um <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryReader" /&gt;</ph> e retorna o objeto desserializado. Ele também permite que você especifique se o serializador deve verificar se ele está posicionado em um elemento apropriado antes de tentar desserializar.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
          <source>The deserialized object.</source>
          <target state="translated">O objeto desserializado.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> used to read the XML document mapped from JSON.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> usado para ler o documento XML mapeado do JSON.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to check whether the enclosing XML element name and namespace correspond to the expected name and namespace; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>, which skips the verification.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para verificar se o nome e o namespace do elemento XML delimitador correspondem ao nome e namespace esperados, caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>, que ignora a verificação.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
          <source>Reads an XML document mapped from JSON with an <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> and returns the deserialized object; it also enables you to specify whether the serializer should verify that it is positioned on an appropriate element before attempting to deserialize.</source>
          <target state="translated">Lê um documento XML mapeado do JSON com um <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> e retorna o objeto desserializado. Ele também permite que você especifique se o serializador deve verificar se ele está posicionado em um elemento apropriado antes de tentar desserializar.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
          <source>The deserialized object.</source>
          <target state="translated">O objeto desserializado.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.SerializeReadOnlyTypes">
          <source>Gets or sets a value that specifies whether to serialize read only types.</source>
          <target state="translated">Obtém ou define um valor que especifica se deve serializar os tipos somente leitura.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.SerializeReadOnlyTypes">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to serialize read only types; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para serializar ler apenas tipos; Caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.UseSimpleDictionaryFormat">
          <source>Gets or sets a value that specifies whether to use a simple dictionary format.</source>
          <target state="translated">Obtém ou define um valor que especifica se deve usar um formato de dicionário simples.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.UseSimpleDictionaryFormat">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to use a simple dictionary format; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Para usar um formato de dicionário simples; Caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.Json.DataContractJsonSerializer">
          <source>Writes the closing XML element to an XML document that can be mapped to JavaScript Object Notation (JSON).</source>
          <target state="translated">Grava o elemento XML de fechamento em um documento XML que pode ser mapeado para o JSON (JavaScript Object Notation).</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph> used to write the XML document to map to JSON.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph> usado para gravar o documento XML para mapear para o JSON.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
          <source>Writes the closing XML element to an XML document, using an <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph>, which can be mapped to JavaScript Object Notation (JSON).</source>
          <target state="translated">Grava o elemento XML de fechamento em um documento XML, usando um <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph>, que pode ser mapeado para o JSON (JavaScript Object Notation).</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
          <source>Note that this method is intended for advanced scenarios when working with XML mapped from JSON.</source>
          <target state="translated">Observe que este método destina-se para cenários avançados ao trabalhar com XML mapeado do JSON.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteEndObject(System.Xml.XmlWriter)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> used to write the XML document mapped to JSON.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> usado para gravar o documento XML mapeado para JSON.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteEndObject(System.Xml.XmlWriter)">
          <source>Writes the closing XML element to an XML document, using an <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>, which can be mapped to JavaScript Object Notation (JSON).</source>
          <target state="translated">Grava o elemento XML de fechamento em um documento XML, usando um <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>, que pode ser mapeado para o JSON (JavaScript Object Notation).</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.Json.DataContractJsonSerializer">
          <source>Serializes an object to a JavaScript Object Notation (JSON) document.</source>
          <target state="translated">Serializa um objeto para um documento JSON (JavaScript Object Notation).</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.IO.Stream,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> that is written to.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> para gravação.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.IO.Stream,System.Object)">
          <source>The object that contains the data to write to the stream.</source>
          <target state="translated">O objeto que contém os dados a serem gravados no fluxo.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.IO.Stream,System.Object)">
          <source>Serializes a specified object to JavaScript Object Notation (JSON) data and writes the resulting JSON to a stream.</source>
          <target state="translated">Serializa um objeto especificado em dados JSON (JavaScript Object Notation) e grava o JSON resultante em um fluxo.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.IO.Stream,System.Object)">
          <source>The type being serialized does not conform to data contract rules.</source>
          <target state="translated">O tipo sendo serializado não está em conformidade com as regras do contrato de dados.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.IO.Stream,System.Object)">
          <source>For example, the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> attribute has not been applied to the type.</source>
          <target state="translated">Por exemplo, o atributo <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> não foi aplicado ao tipo.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.IO.Stream,System.Object)">
          <source>There is a problem with the instance being written.</source>
          <target state="translated">Há um problema com a instância que está sendo gravada.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.IO.Stream,System.Object)">
          <source>The maximum number of objects to serialize has been exceeded.</source>
          <target state="translated">O número máximo de objetos a serem serializados foi excedido.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.IO.Stream,System.Object)">
          <source>Check the <ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /&gt;</ph> property.</source>
          <target state="translated">Verifique a propriedade <ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph> used to write the XML document or stream to map to JSON.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph> usado para gravar o documento XML ou fluxo para mapear para o JSON.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>The object that contains the data to write.</source>
          <target state="translated">O objeto que contém os dados a serem gravados.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>Serializes an object to XML that may be mapped to JavaScript Object Notation (JSON).</source>
          <target state="translated">Serializa um objeto para XML que pode ser mapeado para o JSON (JavaScript Object Notation).</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>Writes all the object data, including the starting XML element, content, and closing element, with an <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph>.</source>
          <target state="translated">Grava todos os dados de objeto, incluindo o elemento XML inicial, o conteúdo e o elemento de fechamento com um <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>The type being serialized does not conform to data contract rules.</source>
          <target state="translated">O tipo sendo serializado não está em conformidade com as regras do contrato de dados.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>For example, the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> attribute has not been applied to the type.</source>
          <target state="translated">Por exemplo, o atributo <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> não foi aplicado ao tipo.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>There is a problem with the instance being written.</source>
          <target state="translated">Há um problema com a instância que está sendo gravada.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>The maximum number of objects to serialize has been exceeded.</source>
          <target state="translated">O número máximo de objetos a serem serializados foi excedido.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>Check the <ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /&gt;</ph> property.</source>
          <target state="translated">Verifique a propriedade <ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> used to write the XML document to map to JSON.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> usado para gravar o documento XML para mapear para o JSON.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
          <source>The object that contains the data to write.</source>
          <target state="translated">O objeto que contém os dados a serem gravados.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
          <source>Serializes an object to XML that may be mapped to JavaScript Object Notation (JSON).</source>
          <target state="translated">Serializa um objeto para XML que pode ser mapeado para o JSON (JavaScript Object Notation).</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
          <source>Writes all the object data, including the starting XML element, content, and closing element, with an <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">Grava todos os dados de objeto, incluindo o elemento XML inicial, o conteúdo e o elemento de fechamento com um <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
          <source>The type being serialized does not conform to data contract rules.</source>
          <target state="translated">O tipo sendo serializado não está em conformidade com as regras do contrato de dados.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
          <source>For example, the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> attribute has not been applied to the type.</source>
          <target state="translated">Por exemplo, o atributo <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> não foi aplicado ao tipo.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
          <source>There is a problem with the instance being written.</source>
          <target state="translated">Há um problema com a instância que está sendo gravada.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
          <source>The maximum number of objects to serialize has been exceeded.</source>
          <target state="translated">O número máximo de objetos a serem serializados foi excedido.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
          <source>Check the <ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /&gt;</ph> property.</source>
          <target state="translated">Verifique a propriedade <ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.Json.DataContractJsonSerializer">
          <source>Writes the content of an object to XML that may be mapped to JavaScript Object Notation (JSON)., without writing the wrapping element.</source>
          <target state="translated">Grava o conteúdo de um objeto no XML que pode ser mapeado para o JSON (JavaScript Object Notation), sem gravar o elemento de encapsulamento.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph> to write to.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph> no qual ocorrerá a gravação.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>The object to write.</source>
          <target state="translated">O objeto a ser gravado.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>Writes the XML content that can be mapped to JavaScript Object Notation (JSON) using an <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph>.</source>
          <target state="translated">Grava o conteúdo XML que pode ser mapeado para JSON (JavaScript Object Notation) usando um <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>The type being serialized does not conform to data contract rules.</source>
          <target state="translated">O tipo sendo serializado não está em conformidade com as regras do contrato de dados.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>For example, the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> attribute has not been applied to the type.</source>
          <target state="translated">Por exemplo, o atributo <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> não foi aplicado ao tipo.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>There is a problem with the instance being written.</source>
          <target state="translated">Há um problema com a instância que está sendo gravada.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>The maximum number of objects to serialize has been exceeded.</source>
          <target state="translated">O número máximo de objetos a serem serializados foi excedido.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>Check the <ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /&gt;</ph> property.</source>
          <target state="translated">Verifique a propriedade <ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> used to write to.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> usado para gravar.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
          <source>The object to write.</source>
          <target state="translated">O objeto a ser gravado.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
          <source>Writes the XML content that can be mapped to JavaScript Object Notation (JSON) using an <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">Grava o conteúdo XML que pode ser mapeado para JSON (JavaScript Object Notation) usando um <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
          <source>The type being serialized does not conform to data contract rules.</source>
          <target state="translated">O tipo sendo serializado não está em conformidade com as regras do contrato de dados.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
          <source>For example, the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> attribute has not been applied to the type.</source>
          <target state="translated">Por exemplo, o atributo <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> não foi aplicado ao tipo.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
          <source>There is a problem with the instance being written.</source>
          <target state="translated">Há um problema com a instância que está sendo gravada.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
          <source>The maximum number of objects to serialize has been exceeded.</source>
          <target state="translated">O número máximo de objetos a serem serializados foi excedido.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
          <source>Check the <ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /&gt;</ph> property.</source>
          <target state="translated">Verifique a propriedade <ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.Json.DataContractJsonSerializer">
          <source>Writes the opening XML element for serializing an object to XML that can be mapped to JavaScript Object Notation (JSON).</source>
          <target state="translated">Grava o elemento XML de abertura para serializar um objeto para XML que pode ser mapeado para JSON (JavaScript Object Notation).</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph> used to write the XML start element.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph> usado para gravar o elemento inicial do XML.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>The object to write.</source>
          <target state="translated">O objeto a ser gravado.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>Writes the opening XML element for serializing an object to XML that can be mapped to JavaScript Object Notation (JSON) using an <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph>.</source>
          <target state="translated">Grava o elemento XML de abertura para serializar um objeto para XML que pode ser mapeado para JSON (JavaScript Object Notation) usando um <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> used to write the XML start element.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> usado para gravar o elemento inicial do XML.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
          <source>The object to write.</source>
          <target state="translated">O objeto a ser gravado.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
          <source>Writes the opening XML element for serializing an object to XML that can be mapped to JavaScript Object Notation (JSON) using an <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">Grava o elemento XML de abertura para serializar um objeto para XML que pode ser mapeado para JSON (JavaScript Object Notation) usando um <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>