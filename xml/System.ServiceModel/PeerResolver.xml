<Type Name="PeerResolver" FullName="System.ServiceModel.PeerResolver">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fda55d2dc47eb9b0549d78f23f1f270804159402" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39747751" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class PeerResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PeerResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.PeerResolver" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PeerResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeerResolver abstract" />
  <TypeSignature Language="F#" Value="type PeerResolver = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Especifica um tipo base usado para definir o contrato para o registro e a resolução de uma ID de malha ponto a ponto para os endereços de ponto de extremidade dos nós que participam da malha.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa classe é a classe base para a implementação de resolvedores de nome de par personalizados. Um resolvedor de pares nome é um serviço de descoberta usado pelos canais pares para localizar nós pares participam de uma malha ponto a ponto. Ele também é usado para "Registrar" um nó com uma malha ponto a ponto, o mecanismo pelo qual o nó par se torna conhecidos e estão disponíveis na malha ponto a ponto.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PeerResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PeerResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.PeerResolver" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanShareReferrals">
      <MemberSignature Language="C#" Value="public abstract bool CanShareReferrals { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanShareReferrals" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.PeerResolver.CanShareReferrals" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property CanShareReferrals As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool CanShareReferrals { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanShareReferrals : bool" Usage="System.ServiceModel.PeerResolver.CanShareReferrals" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém se o resolvedor de nome par pode compartilhar referências.</summary>
        <value>Se for true, o resolvedor de nome de par pode compartilhar referências; Se for false, ele não é possível.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public virtual void Initialize (System.ServiceModel.EndpointAddress address, System.ServiceModel.Channels.Binding binding, System.ServiceModel.Description.ClientCredentials credentials, System.ServiceModel.PeerResolvers.PeerReferralPolicy referralPolicy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class System.ServiceModel.EndpointAddress address, class System.ServiceModel.Channels.Binding binding, class System.ServiceModel.Description.ClientCredentials credentials, valuetype System.ServiceModel.PeerResolvers.PeerReferralPolicy referralPolicy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolver.Initialize(System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.Binding,System.ServiceModel.Description.ClientCredentials,System.ServiceModel.PeerResolvers.PeerReferralPolicy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Initialize(System::ServiceModel::EndpointAddress ^ address, System::ServiceModel::Channels::Binding ^ binding, System::ServiceModel::Description::ClientCredentials ^ credentials, System::ServiceModel::PeerResolvers::PeerReferralPolicy referralPolicy);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : System.ServiceModel.EndpointAddress * System.ServiceModel.Channels.Binding * System.ServiceModel.Description.ClientCredentials * System.ServiceModel.PeerResolvers.PeerReferralPolicy -&gt; unit&#xA;override this.Initialize : System.ServiceModel.EndpointAddress * System.ServiceModel.Channels.Binding * System.ServiceModel.Description.ClientCredentials * System.ServiceModel.PeerResolvers.PeerReferralPolicy -&gt; unit" Usage="peerResolver.Initialize (address, binding, credentials, referralPolicy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="credentials" Type="System.ServiceModel.Description.ClientCredentials" />
        <Parameter Name="referralPolicy" Type="System.ServiceModel.PeerResolvers.PeerReferralPolicy" />
      </Parameters>
      <Docs>
        <param name="address">
          <see cref="T:System.ServiceModel.EndpointAddress" /> que contém o novo endereço do ponto de extremidade dessa instância do resolvedor de par.</param>
        <param name="binding">
          <see cref="T:System.ServiceModel.Channels.Binding" /> que especifica a nova associação de rede para este resolvedor de par.</param>
        <param name="credentials">
          <see cref="T:System.ServiceModel.Description.ClientCredentials" /> que especifica as novas credenciais de cliente para esse resolvedor de par.</param>
        <param name="referralPolicy">
          <see cref="T:System.ServiceModel.PeerResolvers.PeerReferralPolicy" /> que especifica a nova política de referência para esse resolvedor de par.</param>
        <summary>Inicializa a instância do resolvedor de par atual com o novo endereço do ponto de extremidade e as novas configurações fornecidos.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método simplesmente inicializa a instância do resolvedor de par existente; ele não cria um novo. Para criar um novo resolvedor de pares, chame o método de CreatePeerResolver no elemento de associação correspondente (por exemplo, <xref:System.ServiceModel.Channels.PnrpPeerResolverBindingElement>).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public abstract object Register (string meshId, System.ServiceModel.PeerNodeAddress nodeAddress, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Register(string meshId, class System.ServiceModel.PeerNodeAddress nodeAddress, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Register (meshId As String, nodeAddress As PeerNodeAddress, timeout As TimeSpan) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Register(System::String ^ meshId, System::ServiceModel::PeerNodeAddress ^ nodeAddress, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Register : string * System.ServiceModel.PeerNodeAddress * TimeSpan -&gt; obj" Usage="peerResolver.Register (meshId, nodeAddress, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="meshId" Type="System.String" />
        <Parameter Name="nodeAddress" Type="System.ServiceModel.PeerNodeAddress" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="meshId">A ID da malha ponto a ponto na qual o nó par deve ser registrado.</param>
        <param name="nodeAddress">O <see cref="T:System.ServiceModel.PeerNodeAddress" /> a ser registrado com a malha ponto a ponto.</param>
        <param name="timeout">O período de tempo a esperar por êxito antes de anular a tentativa de registro na malha ponto a ponto. Se a tentativa falhar, a <see cref="T:System.TimeoutException" /> será gerada no par.</param>
        <summary>Registra um <see cref="T:System.ServiceModel.PeerNodeAddress" /> para uma malha ponto a ponto específica.</summary>
        <returns>Um <see cref="T:System.Object" /> que representa a ID de registro. Esse objeto de ID de registro é passado para os métodos <see cref="M:System.ServiceModel.PeerResolver.Update(System.Object,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" /> e <see cref="M:System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ObjectModel.ReadOnlyCollection&lt;System.ServiceModel.PeerNodeAddress&gt; Resolve (string meshId, int maxAddresses, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.ServiceModel.PeerNodeAddress&gt; Resolve(string meshId, int32 maxAddresses, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolver.Resolve(System.String,System.Int32,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Resolve (meshId As String, maxAddresses As Integer, timeout As TimeSpan) As ReadOnlyCollection(Of PeerNodeAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::ObjectModel::ReadOnlyCollection&lt;System::ServiceModel::PeerNodeAddress ^&gt; ^ Resolve(System::String ^ meshId, int maxAddresses, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Resolve : string * int * TimeSpan -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.ServiceModel.PeerNodeAddress&gt;" Usage="peerResolver.Resolve (meshId, maxAddresses, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.ServiceModel.PeerNodeAddress&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="meshId" Type="System.String" />
        <Parameter Name="maxAddresses" Type="System.Int32" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="meshId">A ID da malha ponto a ponto na qual os objetos <see cref="T:System.ServiceModel.PeerNodeAddress" /> que representam nós participantes devem ser obtidos.</param>
        <param name="maxAddresses">O número de endereços de ponto de extremidade a serem retornados.</param>
        <param name="timeout">O período de tempo de espera por êxito antes de anular a tentativa de resolver os endereços de ponto de extremidade dentro da malha ponto a ponto. Se a tentativa falhar, a <see cref="T:System.TimeoutException" /> será gerada no par.</param>
        <summary>Resolve a ID de malha fornecida para zero ou mais endereços de ponto de extremidade de nós que participam da malha ponto a ponto.</summary>
        <returns>Uma <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> que contém objetos <see cref="T:System.ServiceModel.PeerNodeAddress" /> que representam os nós que participam da malha ponto a ponto.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unregister">
      <MemberSignature Language="C#" Value="public abstract void Unregister (object registrationId, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unregister(object registrationId, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Unregister (registrationId As Object, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Unregister(System::Object ^ registrationId, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Unregister : obj * TimeSpan -&gt; unit" Usage="peerResolver.Unregister (registrationId, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="registrationId" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="registrationId">Uma ID de registro para o nó obtido por uma chamada anterior para <see cref="M:System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" />.</param>
        <param name="timeout">O período de tempo de espera para a remoção bem-sucedida do registro da malha ponto a ponto. Se a tentativa falhar, a <see cref="T:System.TimeoutException" /> será gerada no par.</param>
        <summary>Remove a entrada de registro de um nó de uma malha ponto a ponto.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Uma ID de registro é um token de resolvedor de pares, que, no mínimo, representa a tupla de uma ID de nó de mesmo nível e a ID de malha. Esse valor de ID deve ter sido obtida em uma chamada anterior a <xref:System.ServiceModel.PeerResolver.Register%2A>.  
  
 <xref:System.ServiceModel.PeerResolver.Unregister%2A> é chamado em dois casos específicos:  
  
-   Quando o <xref:System.ServiceModel.PeerNode> está deixando o par de malha (normalmente, como o resultado de fechar o último canal ou serviço de host do par que está associado ele).  
  
-   Quando o <xref:System.ServiceModel.PeerNode> não pode localizar nenhum endereço de ponto de extremidade disponíveis de outros nós que participam da malha ponto a ponto. Como resultado, o <xref:System.ServiceModel.PeerNode> não está mais acessível, e ele tentará chamar <xref:System.ServiceModel.PeerResolver.Unregister%2A> para cancelar o registro automaticamente a partir de <xref:System.ServiceModel.PeerResolver>. Se outros nós pares dentro da malha são disponibilizados após o cancelamento do registro, o nó pode se registrar novamente chamando <xref:System.ServiceModel.PeerResolver.Register%2A> e obter uma nova ID de registro.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public abstract void Update (object registrationId, System.ServiceModel.PeerNodeAddress updatedNodeAddress, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Update(object registrationId, class System.ServiceModel.PeerNodeAddress updatedNodeAddress, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolver.Update(System.Object,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Update (registrationId As Object, updatedNodeAddress As PeerNodeAddress, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Update(System::Object ^ registrationId, System::ServiceModel::PeerNodeAddress ^ updatedNodeAddress, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Update : obj * System.ServiceModel.PeerNodeAddress * TimeSpan -&gt; unit" Usage="peerResolver.Update (registrationId, updatedNodeAddress, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="registrationId" Type="System.Object" />
        <Parameter Name="updatedNodeAddress" Type="System.ServiceModel.PeerNodeAddress" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="registrationId">Um token de ID de registro para o nó, obtido por uma chamada anterior a <see cref="M:System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" /></param>
        <param name="updatedNodeAddress">O endereço do ponto de extremidade atualizado (e outros endereços IP de várias home pages).</param>
        <param name="timeout">O período de tempo de espera por êxito antes de anular a tentativa de atualizar o registro do nó na malha ponto a ponto. Se a tentativa falhar, a <see cref="T:System.TimeoutException" /> será gerada no par.</param>
        <summary>Atualizações de <see cref="T:System.ServiceModel.PeerNodeAddress" /> para um nó registrado em uma malha ponto a ponto específica.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.PeerResolver.Update%2A> é chamado quando o endereço do <xref:System.ServiceModel.PeerNode> alterações no computador local.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>