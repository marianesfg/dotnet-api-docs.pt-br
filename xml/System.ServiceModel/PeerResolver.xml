<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="PeerResolver.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c58954030a1213b9bbd8f261c84addca77e8e7e6.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c58954030a1213b9bbd8f261c84addca77e8e7e6</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.PeerResolver">
          <source>Specifies a base type used to define the contract for the registration and resolution of a peer mesh ID to the endpoint addresses of nodes participating in the mesh.</source>
          <target state="translated">Especifica um tipo base usado para definir o contrato para o registro e a resolução de uma ID de malha ponto a ponto para os endereços de ponto de extremidade dos nós que participam da malha.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.PeerResolver">
          <source>This class is the base class for the implementation of custom peer name resolvers.</source>
          <target state="translated">Essa classe é a classe base para a implementação de resolvedores de nome de pares personalizado.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.PeerResolver">
          <source>A peer name resolver is a discovery service used by peer channels to find peer nodes participating in a peer mesh.</source>
          <target state="translated">Um resolvedor de nome de ponto a ponto é um serviço de descoberta usado pelos canais de ponto a ponto para localizar nós pares participando de uma malha de ponto a ponto.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.PeerResolver">
          <source>It is also used to "register" a node with a peer mesh, the mechanism by which the peer node becomes known and available from the peer mesh.</source>
          <target state="translated">Ele também é usado para "Registrar" de um nó com uma malha de ponto a ponto, o mecanismo pelo qual o nó par torna-se e conhecida da malha ponto a ponto.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.PeerResolver.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.PeerResolver" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.ServiceModel.PeerResolver" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.PeerResolver.CanShareReferrals">
          <source>Gets whether the peer name resolver can share referrals.</source>
          <target state="translated">Obtém se o resolvedor de nome par pode compartilhar referências.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.PeerResolver.CanShareReferrals">
          <source>If true, the peer name resolver can share referrals; if false, it cannot.</source>
          <target state="translated">Se for true, a resolução de nome de ponto a ponto pode compartilhar referências; Se for false, ele não pode.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.PeerResolver.Initialize(System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.Binding,System.ServiceModel.Description.ClientCredentials,System.ServiceModel.PeerResolvers.PeerReferralPolicy)">
          <source><ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointAddress" /&gt;</ph> that contains the new endpoint address of this peer resolver instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointAddress" /&gt;</ph> que contém o novo endereço do ponto de extremidade dessa instância do resolvedor de par.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.PeerResolver.Initialize(System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.Binding,System.ServiceModel.Description.ClientCredentials,System.ServiceModel.PeerResolvers.PeerReferralPolicy)">
          <source><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph> that specifies the new network binding for this peer resolver.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph> que especifica a nova associação de rede para este resolvedor de par.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.PeerResolver.Initialize(System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.Binding,System.ServiceModel.Description.ClientCredentials,System.ServiceModel.PeerResolvers.PeerReferralPolicy)">
          <source><ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ClientCredentials" /&gt;</ph> that specifies the new client credentials for this peer resolver.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ClientCredentials" /&gt;</ph> que especifica as novas credenciais de cliente para esse resolvedor de par.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.PeerResolver.Initialize(System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.Binding,System.ServiceModel.Description.ClientCredentials,System.ServiceModel.PeerResolvers.PeerReferralPolicy)">
          <source><ph id="ph1">&lt;see cref="T:System.ServiceModel.PeerResolvers.PeerReferralPolicy" /&gt;</ph> that specifies the new referral policy for this peer resolver.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.PeerResolvers.PeerReferralPolicy" /&gt;</ph> que especifica a nova política de referência para esse resolvedor de par.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.PeerResolver.Initialize(System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.Binding,System.ServiceModel.Description.ClientCredentials,System.ServiceModel.PeerResolvers.PeerReferralPolicy)">
          <source>Initializes the current peer resolver instance with the new supplied endpoint address and settings.</source>
          <target state="translated">Inicializa a instância do resolvedor de par atual com o novo endereço do ponto de extremidade e as novas configurações fornecidos.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.PeerResolver.Initialize(System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.Binding,System.ServiceModel.Description.ClientCredentials,System.ServiceModel.PeerResolvers.PeerReferralPolicy)">
          <source>This method simply initializes the existing peer resolver instance; it does not create a new one.</source>
          <target state="translated">Este método simplesmente inicializa a instância existente do resolvedor peer; ele não cria um novo.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.PeerResolver.Initialize(System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.Binding,System.ServiceModel.Description.ClientCredentials,System.ServiceModel.PeerResolvers.PeerReferralPolicy)">
          <source>To create a new peer resolver, call the CreatePeerResolver method on the corresponding binding element (for example, <ph id="ph1">&lt;xref:System.ServiceModel.Channels.PnrpPeerResolverBindingElement&gt;</ph>).</source>
          <target state="translated">Para criar um novo resolvedor de pares, chame o método de CreatePeerResolver no elemento de associação correspondente (por exemplo, <ph id="ph1">&lt;xref:System.ServiceModel.Channels.PnrpPeerResolverBindingElement&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)">
          <source>The ID of the peer mesh in which the peer node is to be registered.</source>
          <target state="translated">A ID da malha ponto a ponto na qual o nó par deve ser registrado.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.PeerNodeAddress" /&gt;</ph> to be registered with the peer mesh.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.ServiceModel.PeerNodeAddress" /&gt;</ph> a ser registrado com a malha ponto a ponto.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)">
          <source>The length of time to wait for success before aborting the attempt to register with the peer mesh.</source>
          <target state="translated">O período de tempo a esperar por êxito antes de anular a tentativa de registro na malha ponto a ponto.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)">
          <source>If the attempt fails, <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> is raised on the peer.</source>
          <target state="translated">Se a tentativa falhar, a <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> será gerada no par.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)">
          <source>Registers a <ph id="ph1">&lt;see cref="T:System.ServiceModel.PeerNodeAddress" /&gt;</ph> for a specific peer mesh.</source>
          <target state="translated">Registra um <ph id="ph1">&lt;see cref="T:System.ServiceModel.PeerNodeAddress" /&gt;</ph> para uma malha ponto a ponto específica.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that represents the registration ID.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> que representa a ID de registro.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)">
          <source>This registration ID object is passed to the <ph id="ph1">&lt;see cref="M:System.ServiceModel.PeerResolver.Update(System.Object,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)" /&gt;</ph> methods.</source>
          <target state="translated">Esse objeto de ID de registro é passado para os métodos <ph id="ph1">&lt;see cref="M:System.ServiceModel.PeerResolver.Update(System.Object,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" /&gt;</ph> e <ph id="ph2">&lt;see cref="M:System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.PeerResolver.Resolve(System.String,System.Int32,System.TimeSpan)">
          <source>The mesh ID of the peer mesh within which the <ph id="ph1">&lt;see cref="T:System.ServiceModel.PeerNodeAddress" /&gt;</ph> objects representing participating nodes are to be obtained.</source>
          <target state="translated">A ID da malha ponto a ponto na qual os objetos <ph id="ph1">&lt;see cref="T:System.ServiceModel.PeerNodeAddress" /&gt;</ph> que representam nós participantes devem ser obtidos.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.PeerResolver.Resolve(System.String,System.Int32,System.TimeSpan)">
          <source>The number of endpoint addresses to return.</source>
          <target state="translated">O número de endereços de ponto de extremidade a serem retornados.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.PeerResolver.Resolve(System.String,System.Int32,System.TimeSpan)">
          <source>The length of time to wait for success before aborting the attempt to resolve endpoint addresses within the peer mesh.</source>
          <target state="translated">O período de tempo de espera por êxito antes de anular a tentativa de resolver os endereços de ponto de extremidade dentro da malha ponto a ponto.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.PeerResolver.Resolve(System.String,System.Int32,System.TimeSpan)">
          <source>If the attempt fails, <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> is raised on the peer.</source>
          <target state="translated">Se a tentativa falhar, a <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> será gerada no par.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.PeerResolver.Resolve(System.String,System.Int32,System.TimeSpan)">
          <source>Resolves the supplied mesh ID to zero or more endpoint addresses of nodes participating in the peer mesh.</source>
          <target state="translated">Resolve a ID de malha fornecida para zero ou mais endereços de ponto de extremidade de nós que participam da malha ponto a ponto.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.PeerResolver.Resolve(System.String,System.Int32,System.TimeSpan)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> that contains <ph id="ph2">&lt;see cref="T:System.ServiceModel.PeerNodeAddress" /&gt;</ph> objects representing nodes participating in the peer mesh.</source>
          <target state="translated">Uma <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> que contém objetos <ph id="ph2">&lt;see cref="T:System.ServiceModel.PeerNodeAddress" /&gt;</ph> que representam os nós que participam da malha ponto a ponto.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)">
          <source>A registration ID for the node obtained by a previous call to <ph id="ph1">&lt;see cref="M:System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" /&gt;</ph>.</source>
          <target state="translated">Uma ID de registro para o nó obtido por uma chamada anterior para <ph id="ph1">&lt;see cref="M:System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)">
          <source>The length of time to wait for a successful removal of the registration from the peer mesh.</source>
          <target state="translated">O período de tempo de espera para a remoção bem-sucedida do registro da malha ponto a ponto.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)">
          <source>If the attempt fails, <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> is raised on the peer.</source>
          <target state="translated">Se a tentativa falhar, a <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> será gerada no par.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)">
          <source>Removes the registration entry for a node from a peer mesh.</source>
          <target state="translated">Remove a entrada de registro de um nó de uma malha ponto a ponto.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)">
          <source>A registration ID is a peer resolver token, that, at the very minimum, represents the tuple of a peer node ID and the mesh ID.</source>
          <target state="translated">Uma identificação de registro é um token de resolvedor peer, que, no mínimo, representa a tupla de uma ID de nó par e a ID de malha.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)">
          <source>This ID value must have been obtained in a previous call to <ph id="ph1">&lt;xref:System.ServiceModel.PeerResolver.Register%2A&gt;</ph>.</source>
          <target state="translated">Este valor de ID deve ter sido obtido em uma chamada anterior para <ph id="ph1">&lt;xref:System.ServiceModel.PeerResolver.Register%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.PeerResolver.Unregister%2A&gt;</ph> is called in two specific cases:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.PeerResolver.Unregister%2A&gt;</ph> é chamado em dois casos específicos:</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)">
          <source>When the <ph id="ph1">&lt;xref:System.ServiceModel.PeerNode&gt;</ph> is leaving the peer mesh (usually as the result of closing the last peer channel or service host that is associated with it).</source>
          <target state="translated">Quando o <ph id="ph1">&lt;xref:System.ServiceModel.PeerNode&gt;</ph> é deixar o par de malha (normalmente, como o resultado de fechar o último ponto a ponto canais ou host de serviço associado ele).</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)">
          <source>When the <ph id="ph1">&lt;xref:System.ServiceModel.PeerNode&gt;</ph> can find no available endpoint addresses of other nodes participating in the peer mesh.</source>
          <target state="translated">Quando o <ph id="ph1">&lt;xref:System.ServiceModel.PeerNode&gt;</ph> não pode localizar nenhum endereço de ponto de extremidade disponíveis de outros nós que participam na malha de pontos.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)">
          <source>As a result, the <ph id="ph1">&lt;xref:System.ServiceModel.PeerNode&gt;</ph> is no longer reachable, and it will attempt to call <ph id="ph2">&lt;xref:System.ServiceModel.PeerResolver.Unregister%2A&gt;</ph> to unregister itself from the <ph id="ph3">&lt;xref:System.ServiceModel.PeerResolver&gt;</ph>.</source>
          <target state="translated">Como resultado, o <ph id="ph1">&lt;xref:System.ServiceModel.PeerNode&gt;</ph> não estiver mais acessível, e ele tentará chamar <ph id="ph2">&lt;xref:System.ServiceModel.PeerResolver.Unregister%2A&gt;</ph> para cancelar o registro automaticamente a partir de <ph id="ph3">&lt;xref:System.ServiceModel.PeerResolver&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)">
          <source>If other peer nodes within the mesh become available subsequent to unregistration, the node can re-register itself by calling <ph id="ph1">&lt;xref:System.ServiceModel.PeerResolver.Register%2A&gt;</ph> and obtaining a new registration ID.</source>
          <target state="translated">Se outros nós pares dentro da malha ficam disponíveis após o cancelamento do registro, o nó pode se registrar novamente chamando <ph id="ph1">&lt;xref:System.ServiceModel.PeerResolver.Register%2A&gt;</ph> e obter uma nova ID de registro.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.PeerResolver.Update(System.Object,System.ServiceModel.PeerNodeAddress,System.TimeSpan)">
          <source>A registration ID token for the node, obtained by a previous call to <ph id="ph1">&lt;see cref="M:System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" /&gt;</ph></source>
          <target state="translated">Um token de ID de registro para o nó, obtido por uma chamada anterior a <ph id="ph1">&lt;see cref="M:System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.PeerResolver.Update(System.Object,System.ServiceModel.PeerNodeAddress,System.TimeSpan)">
          <source>The updated endpoint address (and other multihoming IP addresses).</source>
          <target state="translated">O endereço do ponto de extremidade atualizado (e outros endereços IP de várias home pages).</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.PeerResolver.Update(System.Object,System.ServiceModel.PeerNodeAddress,System.TimeSpan)">
          <source>The length of time to wait for success before aborting the attempt to update the node's registration within the peer mesh.</source>
          <target state="translated">O período de tempo de espera por êxito antes de anular a tentativa de atualizar o registro do nó na malha ponto a ponto.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.PeerResolver.Update(System.Object,System.ServiceModel.PeerNodeAddress,System.TimeSpan)">
          <source>If the attempt fails, <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> is raised on the peer.</source>
          <target state="translated">Se a tentativa falhar, a <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> será gerada no par.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.PeerResolver.Update(System.Object,System.ServiceModel.PeerNodeAddress,System.TimeSpan)">
          <source>Updates the <ph id="ph1">&lt;see cref="T:System.ServiceModel.PeerNodeAddress" /&gt;</ph> for a node registered with a specific peer mesh.</source>
          <target state="translated">Atualizações de <ph id="ph1">&lt;see cref="T:System.ServiceModel.PeerNodeAddress" /&gt;</ph> para um nó registrado em uma malha ponto a ponto específica.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.PeerResolver.Update(System.Object,System.ServiceModel.PeerNodeAddress,System.TimeSpan)">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.PeerResolver.Update%2A&gt;</ph> is called when the address of the <ph id="ph2">&lt;xref:System.ServiceModel.PeerNode&gt;</ph> changes on the local machine.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.PeerResolver.Update%2A&gt;</ph> chamado quando o endereço do <ph id="ph2">&lt;xref:System.ServiceModel.PeerNode&gt;</ph> alterações no computador local.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>