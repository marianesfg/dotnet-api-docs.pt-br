<Type Name="MessageContractMemberAttribute" FullName="System.ServiceModel.MessageContractMemberAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="358722c2a653580cd2a564670fb9ef8d514a7333" />
    <Meta Name="ms.sourcegitcommit" Value="0d6aa6694f157a08fe52cd25b4d9d3dcf913e812" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="10/12/2018" />
    <Meta Name="ms.locfileid" Value="49150044" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MessageContractMemberAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MessageContractMemberAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.MessageContractMemberAttribute" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MessageContractMemberAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageContractMemberAttribute abstract : Attribute" />
  <TypeSignature Language="F#" Value="type MessageContractMemberAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="f02c2-101">Declara os membros base para <see cref="T:System.ServiceModel.MessageBodyMemberAttribute" /> e <see cref="T:System.ServiceModel.MessageHeaderAttribute" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f02c2-101">Declares the base members for <see cref="T:System.ServiceModel.MessageBodyMemberAttribute" /> and <see cref="T:System.ServiceModel.MessageHeaderAttribute" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f02c2-102">Essa classe contém propriedades comuns a todas as partes de uma mensagem SOAP.</span><span class="sxs-lookup"><span data-stu-id="f02c2-102">This class contains properties common to all parts of a SOAP message.</span></span> <span data-ttu-id="f02c2-103">Por exemplo, todas as partes têm um nome e um namespace e potencialmente um nível de segurança aplicada.</span><span class="sxs-lookup"><span data-stu-id="f02c2-103">For example, all parts have a name and a namespace, and potentially a level of security applied.</span></span>  
  
 <span data-ttu-id="f02c2-104">Para obter informações sobre como controlar a serialização do conteúdo de um corpo SOAP sem modificar o envelope SOAP padrão em si, consulte <xref:System.Runtime.Serialization.DataContractAttribute?displayProperty=nameWithType>, [especificando a transferência de dados em contratos de serviço](~/docs/framework/wcf/feature-details/specifying-data-transfer-in-service-contracts.md), e [usando dados Contratos](~/docs/framework/wcf/feature-details/using-data-contracts.md).</span><span class="sxs-lookup"><span data-stu-id="f02c2-104">For information on controlling the serialization of the contents of a SOAP body without modifying the default SOAP envelope itself, see <xref:System.Runtime.Serialization.DataContractAttribute?displayProperty=nameWithType>, [Specifying Data Transfer in Service Contracts](~/docs/framework/wcf/feature-details/specifying-data-transfer-in-service-contracts.md), and [Using Data Contracts](~/docs/framework/wcf/feature-details/using-data-contracts.md).</span></span>  
  
 <span data-ttu-id="f02c2-105">Para obter mais informações sobre como criar contratos de mensagem, consulte [contratos de mensagem usando](~/docs/framework/wcf/feature-details/using-message-contracts.md).</span><span class="sxs-lookup"><span data-stu-id="f02c2-105">For more information about creating message contracts, see [Using Message Contracts](~/docs/framework/wcf/feature-details/using-message-contracts.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f02c2-106">Os exemplos de código a seguir demonstram um contrato de mensagem personalizada que usa o <xref:System.ServiceModel.MessageContractAttribute>, <xref:System.ServiceModel.MessageHeaderAttribute>, e <xref:System.ServiceModel.MessageBodyMemberAttribute> atributos (todos herdam <xref:System.ServiceModel.MessageContractMemberAttribute>) para criar mensagens tipadas personalizadas para usar nas operações.</span><span class="sxs-lookup"><span data-stu-id="f02c2-106">The following code examples demonstrate a custom message contract that uses the <xref:System.ServiceModel.MessageContractAttribute>, <xref:System.ServiceModel.MessageHeaderAttribute>, and <xref:System.ServiceModel.MessageBodyMemberAttribute> attributes (which all inherit from <xref:System.ServiceModel.MessageContractMemberAttribute>) to create custom typed messages to use in operations.</span></span> <span data-ttu-id="f02c2-107">Nesse caso, há três membros que são serializados no elemento de corpo da mensagem SOAP: `sourceAccount`, `targetAccount`e o `amount` valor, (que é serializado em um elemento com o nome `transactionAmount`).</span><span class="sxs-lookup"><span data-stu-id="f02c2-107">In this case, there are three members that are serialized into the body element of the SOAP message: `sourceAccount`, `targetAccount`, and the `amount` value, (which is serialized into an element with the name `transactionAmount`).</span></span> <span data-ttu-id="f02c2-108">Além disso, o `IsAudited` elemento de cabeçalho SOAP reside na `http://schemas.contosobank.com/auditing/2005` namespace, e `sourceAccount` é criptografada e assinada digitalmente.</span><span class="sxs-lookup"><span data-stu-id="f02c2-108">In addition, the `IsAudited` SOAP header element resides in the `http://schemas.contosobank.com/auditing/2005` namespace, and `sourceAccount` is encrypted and digitally signed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f02c2-109">O `Operation` e `Account` tipos devem ter um contrato de dados.</span><span class="sxs-lookup"><span data-stu-id="f02c2-109">The `Operation` and `Account` types must have a data contract.</span></span>  
  
```csharp  
[MessageContract]  
public class BankingTransaction  
{  
  [MessageHeader]   
  public Operation operation;  
  [MessageHeader(Namespace="http://schemas.contosobank.com/auditing/2005")]   
  public bool IsAudited;  
  [MessageBody(ProtectionLevel=ProtectionLevel.EncryptAndSign)]   
  public Account sourceAccount;  
  [MessageBody]   
  public Account targetAccount;  
  [MessageBody(Name="transactionAmount")]   
  public int amount;  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MessageContractMemberAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.MessageContractMemberAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MessageContractMemberAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f02c2-110">Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.MessageContractMemberAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f02c2-110">Initializes a new instance of the <see cref="T:System.ServiceModel.MessageContractMemberAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasProtectionLevel">
      <MemberSignature Language="C#" Value="public bool HasProtectionLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasProtectionLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MessageContractMemberAttribute.HasProtectionLevel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasProtectionLevel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasProtectionLevel { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasProtectionLevel : bool" Usage="System.ServiceModel.MessageContractMemberAttribute.HasProtectionLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f02c2-111">Quando substituída em uma classe derivada, obtém um valor que indica se o membro tem um nível de proteção atribuído.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f02c2-111">When overridden in a derived class, gets a value that indicates whether the member has a protection level assigned.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f02c2-112">
            <see langword="true" /> Se o membro tem um nível de proteção; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f02c2-112">
              <see langword="true" /> if the member has a protection level; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MessageContractMemberAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.ServiceModel.MessageContractMemberAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f02c2-113">Especifica o nome do elemento que corresponde a esse membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f02c2-113">Specifies the name of the element that corresponds to this member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f02c2-114">O nome do elemento que corresponde a esse membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f02c2-114">The name of the element that corresponds to this member.</span>
          </span>
          <span data-ttu-id="f02c2-115">Essa cadeia de caracteres deve ser um nome de elemento XML válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f02c2-115">This string must be a valid XML element name.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f02c2-116">Os exemplos de código a seguir demonstram um contrato de mensagem personalizada que usa o <xref:System.ServiceModel.MessageContractAttribute>, <xref:System.ServiceModel.MessageHeaderAttribute>, e <xref:System.ServiceModel.MessageBodyMemberAttribute> atributos para criar mensagens personalizadas, fortemente tipada para usar como parâmetros.</span><span class="sxs-lookup"><span data-stu-id="f02c2-116">The following code examples demonstrate a custom message contract that uses the <xref:System.ServiceModel.MessageContractAttribute>, <xref:System.ServiceModel.MessageHeaderAttribute>, and <xref:System.ServiceModel.MessageBodyMemberAttribute> attributes to create custom, strongly-typed messages to use as parameters.</span></span> <span data-ttu-id="f02c2-117">Nesse caso, há três membros de dados que são serializados no elemento de corpo da mensagem SOAP: `sourceAccount`, `targetAccount`e o `amount` valor, (que é serializado em um elemento com o nome `transactionAmount`).</span><span class="sxs-lookup"><span data-stu-id="f02c2-117">In this case, there are three data members that are serialized into the body element of the SOAP message: `sourceAccount`, `targetAccount`, and the `amount` value, (which is serialized into an element with the name `transactionAmount`).</span></span> <span data-ttu-id="f02c2-118">Além disso, o `IsAudited` elemento de cabeçalho SOAP reside no `http://schemas.contosobank.com/auditing/2005` namespace.</span><span class="sxs-lookup"><span data-stu-id="f02c2-118">In addition, the `IsAudited` SOAP header element resides in the `http://schemas.contosobank.com/auditing/2005` namespace.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f02c2-119">O `Operation` e `Account` tipos também devem ter um contrato de dados.</span><span class="sxs-lookup"><span data-stu-id="f02c2-119">The `Operation` and `Account` types must also have a data contract.</span></span>  
  
```csharp  
[MessageContract]  
public class BankingTransaction  
{  
  [MessageHeader] public Operation operation;  
  [MessageHeader(Namespace="http://schemas.contosobank.com/auditing/2005")] public bool IsAudited;  
  [MessageBody] public Account sourceAccount;  
  [MessageBody] public Account targetAccount;  
  [MessageBody(Name="transactionAmount")] public int amount;  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MessageContractMemberAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.ServiceModel.MessageContractMemberAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f02c2-120">Especifica o namespace do elemento que corresponde a esse membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f02c2-120">Specifies the namespace of the element that corresponds to this member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f02c2-121">Um URI de namespace do elemento que corresponde a esse membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f02c2-121">A namespace URI of the element that corresponds to this member.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f02c2-122">Os exemplos de código a seguir demonstram um contrato de mensagem personalizada que usa o <xref:System.ServiceModel.MessageContractAttribute>, <xref:System.ServiceModel.MessageHeaderAttribute>, e <xref:System.ServiceModel.MessageBodyMemberAttribute> atributos (todos herdam <xref:System.ServiceModel.MessageContractMemberAttribute>) para criar mensagens tipadas personalizadas para usar nas operações.</span><span class="sxs-lookup"><span data-stu-id="f02c2-122">The following code examples demonstrate a custom message contract that uses the <xref:System.ServiceModel.MessageContractAttribute>, <xref:System.ServiceModel.MessageHeaderAttribute>, and <xref:System.ServiceModel.MessageBodyMemberAttribute> attributes (which all inherit from <xref:System.ServiceModel.MessageContractMemberAttribute>) to create custom typed messages to use in operations.</span></span> <span data-ttu-id="f02c2-123">Nesse caso, há três membros que são serializados no elemento de corpo da mensagem SOAP: `sourceAccount`, `targetAccount`e o `amount` valor, (que é serializado em um elemento com o nome `transactionAmount`).</span><span class="sxs-lookup"><span data-stu-id="f02c2-123">In this case, there are three members that are serialized into the body element of the SOAP message: `sourceAccount`, `targetAccount`, and the `amount` value, (which is serialized into an element with the name `transactionAmount`).</span></span> <span data-ttu-id="f02c2-124">Além disso, o `IsAudited` elemento de cabeçalho SOAP reside na `http://schemas.contosobank.com/auditing/2005` namespace, e `sourceAccount` é criptografada e assinada digitalmente.</span><span class="sxs-lookup"><span data-stu-id="f02c2-124">In addition, the `IsAudited` SOAP header element resides in the `http://schemas.contosobank.com/auditing/2005` namespace, and `sourceAccount` is encrypted and digitally signed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f02c2-125">O `Operation` e `Account` tipos devem ter um contrato de dados.</span><span class="sxs-lookup"><span data-stu-id="f02c2-125">The `Operation` and `Account` types must have a data contract.</span></span>  
  
```csharp  
[MessageContract]  
public class BankingTransaction  
{  
  [MessageHeader] public Operation operation;  
  [MessageHeader(Namespace="http://schemas.contosobank.com/auditing/2005")] public bool IsAudited;  
  [MessageBody] public Account sourceAccount;  
  [MessageBody] public Account targetAccount;  
  [MessageBody(Name="transactionAmount")] public int amount;  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectionLevel">
      <MemberSignature Language="C#" Value="public System.Net.Security.ProtectionLevel ProtectionLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Security.ProtectionLevel ProtectionLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ProtectionLevel As ProtectionLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Security::ProtectionLevel ProtectionLevel { System::Net::Security::ProtectionLevel get(); void set(System::Net::Security::ProtectionLevel value); };" />
      <MemberSignature Language="F#" Value="member this.ProtectionLevel : System.Net.Security.ProtectionLevel with get, set" Usage="System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Security.ProtectionLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f02c2-126">Especifica se o membro deve ser transmitido no estado em que se encontra, assinado ou assinado e criptografado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f02c2-126">Specifies whether the member is to be transmitted as-is, signed, or signed and encrypted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f02c2-127">Um dos valores de <see cref="T:System.Net.Security.ProtectionLevel" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f02c2-127">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values.</span>
          </span>
          <span data-ttu-id="f02c2-128">O padrão é <see cref="F:System.Net.Security.ProtectionLevel.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f02c2-128">The default is <see cref="F:System.Net.Security.ProtectionLevel.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f02c2-129">Para fazer uso do <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A> propriedade em qualquer um os <xref:System.ServiceModel.MessageHeaderAttribute> ou <xref:System.ServiceModel.MessageBodyMemberAttribute> atributos, você deve configurar corretamente a associação e os comportamentos.</span><span class="sxs-lookup"><span data-stu-id="f02c2-129">To make use of the <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A> property in either the <xref:System.ServiceModel.MessageHeaderAttribute> or <xref:System.ServiceModel.MessageBodyMemberAttribute> attributes you must properly configure the binding and behaviors.</span></span> <span data-ttu-id="f02c2-130">Se esses recursos de segurança são usados sem a configuração apropriada (por exemplo, usando <xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType> com uma parte da mensagem sem fornecer credenciais de segurança) uma exceção será lançada em tempo de execução.</span><span class="sxs-lookup"><span data-stu-id="f02c2-130">If these security features are used without a proper configuration (for example, using <xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType> with a message part without supplying security credentials) an exception is thrown at run time.</span></span>  
  
 <span data-ttu-id="f02c2-131">Além disso, o nível de proteção é determinado para cada cabeçalho individualmente.</span><span class="sxs-lookup"><span data-stu-id="f02c2-131">In addition, the protection level is determined for each header individually.</span></span> <span data-ttu-id="f02c2-132">No entanto, o corpo SOAP tem nível de proteção de apenas um, independentemente do número de partes do corpo.</span><span class="sxs-lookup"><span data-stu-id="f02c2-132">However, the SOAP body has only one protection level, regardless of the number of body parts.</span></span> <span data-ttu-id="f02c2-133">O nível de proteção do corpo é determinado pelo mais alto <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A> valor da propriedade de todas as partes de corpo.</span><span class="sxs-lookup"><span data-stu-id="f02c2-133">The protection level of the body is determined by the highest <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A> property value of all the body parts.</span></span> <span data-ttu-id="f02c2-134">Por exemplo, considere a seguinte classe:</span><span class="sxs-lookup"><span data-stu-id="f02c2-134">For example, consider the following class:</span></span>  
  
```csharp  
[MessageContract]  
public class PatientRecord  
{  
   [MessageHeader(ProtectionLevel=None)] public int recordID;  
   [MessageHeader(ProtectionLevel=Sign)] public string patientName;  
   [MessageHeader(ProtectionLevel=EncryptAndSign)] public string SSN;  
   [MessageBody(ProtectionLevel=None)] public string comments;  
   [MessageBody(ProtectionLevel=Sign)] public string diagnosis;  
   [MessageBody(ProtectionLevel=EncryptAndSign)] public string medicalHistory;  
}  
```  
  
 <span data-ttu-id="f02c2-135">Neste exemplo, o `recordID` cabeçalho não estiver protegido, `patientName` é assinado, e `SSN` é criptografado e assinado.</span><span class="sxs-lookup"><span data-stu-id="f02c2-135">In this example, the `recordID` header is not protected, `patientName` is signed, and `SSN` is encrypted and signed.</span></span> <span data-ttu-id="f02c2-136">Há pelo menos um corpo parte, `medicalHistory`, com <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType> e, portanto, o corpo da mensagem inteira é criptografado e assinado, mesmo que o `comments` e `diagnosis` partes do corpo especificam níveis inferiores de proteção.</span><span class="sxs-lookup"><span data-stu-id="f02c2-136">There is at least one body part, `medicalHistory`, with <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType> and thus the entire message body is encrypted and signed, even though the `comments` and `diagnosis` body parts specify lower protection levels.</span></span>  
  
 <span data-ttu-id="f02c2-137">O comportamento de proteção em tempo de execução é a combinação dos valores de nível de proteção definidas nas propriedades a seguir.</span><span class="sxs-lookup"><span data-stu-id="f02c2-137">The protection behavior at runtime is the combination of the protection-level values set on the following properties.</span></span> <span data-ttu-id="f02c2-138">Essas propriedades têm uma estrutura hierárquica.</span><span class="sxs-lookup"><span data-stu-id="f02c2-138">These properties have a hierarchical structure.</span></span> <span data-ttu-id="f02c2-139">Definir o valor mais externo estabelece a configuração padrão para todos os escopos mais estreitas, a menos que um valor diferente para um escopo mais restrito é explicitamente definido.</span><span class="sxs-lookup"><span data-stu-id="f02c2-139">Setting the outermost value establishes the default setting for all narrower scopes unless a different value for a narrower scope is explicitly set.</span></span> <span data-ttu-id="f02c2-140">Nesse caso, o valor externo permanece como padrão para todos os mais estreitos escopos com a exceção de que especificamente definido.</span><span class="sxs-lookup"><span data-stu-id="f02c2-140">In this case, the outer value remains the default for all narrower scopes with the exception of that specifically set.</span></span>  
  
 <span data-ttu-id="f02c2-141">Por exemplo, se <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType> é definido como <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType> e não há outros escopos mais estreitos têm configurações de nível de proteção, todas as mensagens em um contrato de operação são criptografadas e assinadas.</span><span class="sxs-lookup"><span data-stu-id="f02c2-141">For example, if <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType> is set to <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType> and no other narrower scopes have protection level settings, all messages in an operation contract are encrypted and signed.</span></span> <span data-ttu-id="f02c2-142">Se, no entanto, uma dessas operações tem o <xref:System.ServiceModel.OperationContractAttribute> definido como <xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType>, em seguida, as mensagens para essa operação são assinadas, mas todas as outras mensagens no contrato são criptografadas e assinadas.</span><span class="sxs-lookup"><span data-stu-id="f02c2-142">If, however, one of those operations has the <xref:System.ServiceModel.OperationContractAttribute> set to <xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType>, then the messages for that operation are signed but all other messages in the contract are encrypted and signed.</span></span>  
  
 <span data-ttu-id="f02c2-143">Para obter detalhes sobre os níveis de proteção e suas suposições e escopos, consulte [Noções básicas sobre nível de proteção](~/docs/framework/wcf/understanding-protection-level.md).</span><span class="sxs-lookup"><span data-stu-id="f02c2-143">For details about protection levels and their assumptions and scopes, see [Understanding Protection Level](~/docs/framework/wcf/understanding-protection-level.md).</span></span>  
  
 <span data-ttu-id="f02c2-144">Os escopos em que esses valores são definidos são:</span><span class="sxs-lookup"><span data-stu-id="f02c2-144">The scopes at which these values are set are:</span></span>  
  
 <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <xref:System.ServiceModel.MessageContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <span data-ttu-id="f02c2-145">O <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType> propriedade <xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f02c2-145">The <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType> property on <xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f02c2-146">O <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType> propriedade <xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f02c2-146">The <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType> property on <xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f02c2-147">Quando não há nenhum nível de proteção especificado explicitamente no contrato e a associação subjacente dá suporte à segurança (quer seja no nível de transporte ou de mensagens), o nível de proteção eficaz para o contrato de inteiro é <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f02c2-147">When there is no protection level explicitly specified on the contract and the underlying binding supports security (whether at the transport or message level), the effective protection level for the whole contract is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType>.</span></span> <span data-ttu-id="f02c2-148">Se a associação não dá suporte a segurança (como <xref:System.ServiceModel.BasicHttpBinding>), a efetiva <xref:System.Net.Security.ProtectionLevel?displayProperty=nameWithType> é <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType> para o contrato de inteiro.</span><span class="sxs-lookup"><span data-stu-id="f02c2-148">If the binding does not support security (such as <xref:System.ServiceModel.BasicHttpBinding>), the effective <xref:System.Net.Security.ProtectionLevel?displayProperty=nameWithType> is <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType> for the whole contract.</span></span> <span data-ttu-id="f02c2-149">O resultado é esse acordo com a associação de ponto de extremidade, os clientes podem exigir proteção de segurança em nível de mensagem ou de transporte diferentes, mesmo quando o contrato especifica <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f02c2-149">The result is that depending upon the endpoint binding, clients can require different message or transport level security protection even when the contract specifies <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>