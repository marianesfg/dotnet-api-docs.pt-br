<Type Name="AddressAlreadyInUseException" FullName="System.ServiceModel.AddressAlreadyInUseException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="82edbfb59f71e12ab0cc0f02ccfd7df6154143a1" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36611594" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AddressAlreadyInUseException : System.ServiceModel.CommunicationException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit AddressAlreadyInUseException extends System.ServiceModel.CommunicationException" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.AddressAlreadyInUseException" />
  <TypeSignature Language="VB.NET" Value="Public Class AddressAlreadyInUseException&#xA;Inherits CommunicationException" />
  <TypeSignature Language="C++ CLI" Value="public ref class AddressAlreadyInUseException : System::ServiceModel::CommunicationException" />
  <TypeSignature Language="F#" Value="type AddressAlreadyInUseException = class&#xA;    inherit CommunicationException" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.CommunicationException</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>A exceção que é lançada quando um endereço não está disponível porque já está em uso.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa exceção é derivada de <xref:System.ServiceModel.CommunicationException> que representa uma classe de erros recuperáveis que pode ser gerada durante a comunicação entre pontos de extremidade e que o cliente Windows Communication Foundation (WCF) robusta e aplicativos de serviço são esperados para tratar. Para impedir que um manipulador para <xref:System.ServiceModel.CommunicationException> capture o <xref:System.ServiceModel.AddressAlreadyInUseException> mais específico, capture essa exceção antes de tratar <xref:System.ServiceModel.CommunicationException>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.AddressAlreadyInUseException" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se você quiser passar uma mensagem de erro para o usuário, use o <xref:System.ServiceModel.AddressAlreadyInUseException.%23ctor%28System.String%29> construtor.  
  
 Se você desejar transmitir uma mensagem de erro e uma referência à exceção interna que é a causa da exceção para o usuário, use o <xref:System.ServiceModel.AddressAlreadyInUseException.%23ctor%28System.String%2CSystem.Exception%29> construtor.  
  
 Se você deseja passar informações de serialização e contexto de streaming, use o <xref:System.ServiceModel.AddressAlreadyInUseException.%23ctor%28System.Runtime.Serialization.SerializationInfo%2CSystem.Runtime.Serialization.StreamingContext%29> construtor.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AddressAlreadyInUseException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.AddressAlreadyInUseException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AddressAlreadyInUseException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.AddressAlreadyInUseException" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AddressAlreadyInUseException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.AddressAlreadyInUseException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AddressAlreadyInUseException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.AddressAlreadyInUseException : string -&gt; System.ServiceModel.AddressAlreadyInUseException" Usage="new System.ServiceModel.AddressAlreadyInUseException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">A mensagem de erro que explica a razão da exceção.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.AddressAlreadyInUseException" /> com uma mensagem de erro especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use este construtor quando você deseja transmitir uma mensagem de erro para o usuário. O conteúdo do parâmetro deve ser legível para o usuário desejado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AddressAlreadyInUseException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.AddressAlreadyInUseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AddressAlreadyInUseException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.AddressAlreadyInUseException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.ServiceModel.AddressAlreadyInUseException" Usage="new System.ServiceModel.AddressAlreadyInUseException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">O <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contém todos os dados necessários para serializar a exceção.</param>
        <param name="context">O <see cref="T:System.Runtime.Serialization.StreamingContext" /> que especifica a origem e o destino do fluxo.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.AddressAlreadyInUseException" /> com as informações de serialização e o contexto de fluxo especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este construtor é chamado durante a desserialização para reconstruir o objeto de exceção transmitido em um fluxo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AddressAlreadyInUseException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.AddressAlreadyInUseException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AddressAlreadyInUseException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.AddressAlreadyInUseException : string * Exception -&gt; System.ServiceModel.AddressAlreadyInUseException" Usage="new System.ServiceModel.AddressAlreadyInUseException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">A mensagem de erro que explica a razão da exceção.</param>
        <param name="innerException">O <see cref="T:System.Exception" /> que fez a exceção atual ser gerada.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.AddressAlreadyInUseException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use este construtor quando você desejar transmitir uma mensagem de erro e informações sobre uma exceção interna para o usuário. O conteúdo do parâmetro deve ser legível para os usuários pretendidos.  
  
 Uma exceção que é lançada como um resultado direto de uma exceção anterior pode incluir uma referência para a exceção anterior na propriedade <xref:System.Exception.InnerException%2A>. O <xref:System.Exception.InnerException%2A> propriedade retorna o mesmo valor que é passado para o construtor, ou um `null` referência (`Nothing` no Visual Basic) se o <xref:System.Exception.InnerException%2A> propriedade não fornecer o valor da exceção interna para o construtor.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>