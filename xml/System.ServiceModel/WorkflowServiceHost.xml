<Type Name="WorkflowServiceHost" FullName="System.ServiceModel.WorkflowServiceHost">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="afb505cb020ed3f40f812693c254a97c65efb009" />
    <Meta Name="ms.sourcegitcommit" Value="0d6aa6694f157a08fe52cd25b4d9d3dcf913e812" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="10/12/2018" />
    <Meta Name="ms.locfileid" Value="49134430" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WorkflowServiceHost : System.ServiceModel.ServiceHostBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WorkflowServiceHost extends System.ServiceModel.ServiceHostBase" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.WorkflowServiceHost" />
  <TypeSignature Language="VB.NET" Value="Public Class WorkflowServiceHost&#xA;Inherits ServiceHostBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowServiceHost : System::ServiceModel::ServiceHostBase" />
  <TypeSignature Language="F#" Value="type WorkflowServiceHost = class&#xA;    inherit ServiceHostBase" />
  <AssemblyInfo>
    <AssemblyName>System.WorkflowServices</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.ServiceHostBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fornece o host para serviços baseados em fluxo de trabalho.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementa o host usado pelo modelo de programação do modelo de serviço do Windows Communication Foundation (WCF).  
  
 Use o <xref:System.ServiceModel.WorkflowServiceHost> classe para configurar e expor um fluxo de trabalho como serviço para uso por aplicativos cliente, quando você não estiver usando o Internet Information Services (IIS) ou serviços de ativação do Windows (WAS) para expor um serviço. IIS e WAS interagem com um <xref:System.ServiceModel.WorkflowServiceHost> objeto em seu nome.  
  
 Para expor um fluxo de trabalho como serviço para uso por chamadores, o WCF exige uma descrição de serviço completa (representado pela <xref:System.ServiceModel.Description.ServiceDescription> classe). O <xref:System.ServiceModel.WorkflowServiceHost> classe cria um <xref:System.ServiceModel.Description.ServiceDescription> das informações de tipo e a configuração de serviço do fluxo de trabalho e, em seguida, usa essa descrição para criar <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objetos para cada ponto de extremidade na descrição.  
  
 Use um <xref:System.ServiceModel.WorkflowServiceHost> objeto para carregar um serviço de fluxo de trabalho, configurar pontos de extremidade, aplique as configurações de segurança e Iniciar ouvintes para lidar com solicitações de entrada.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.WorkflowServiceHost" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WorkflowServiceHost ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WorkflowServiceHost.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WorkflowServiceHost();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.WorkflowServiceHost" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowServiceHost (System.IO.Stream workflowDefinition, params Uri[] baseAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream workflowDefinition, class System.Uri[] baseAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowDefinition As Stream, ParamArray baseAddress As Uri())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowServiceHost(System::IO::Stream ^ workflowDefinition, ... cli::array &lt;Uri ^&gt; ^ baseAddress);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.WorkflowServiceHost : System.IO.Stream * Uri[] -&gt; System.ServiceModel.WorkflowServiceHost" Usage="new System.ServiceModel.WorkflowServiceHost (workflowDefinition, baseAddress)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinition" Type="System.IO.Stream" />
        <Parameter Name="baseAddress" Type="System.Uri[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="workflowDefinition">
          <see cref="T:System.IO.Stream" /> que contém a definição do fluxo de trabalho.</param>
        <param name="baseAddress">Uma matriz do tipo <see cref="T:System.Uri" /> que contém os endereços base do serviço hospedado.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.WorkflowServiceHost" /> usando um fluxo de bytes que contém a definição do fluxo de trabalho e os endereços base do serviço especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use essa sobrecarga se a definição de fluxo de trabalho é armazenada no armazenamento seguro, como um banco de dados.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowServiceHost (string workflowDefinitionPath, params Uri[] baseAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string workflowDefinitionPath, class System.Uri[] baseAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowDefinitionPath As String, ParamArray baseAddress As Uri())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowServiceHost(System::String ^ workflowDefinitionPath, ... cli::array &lt;Uri ^&gt; ^ baseAddress);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.WorkflowServiceHost : string * Uri[] -&gt; System.ServiceModel.WorkflowServiceHost" Usage="new System.ServiceModel.WorkflowServiceHost (workflowDefinitionPath, baseAddress)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinitionPath" Type="System.String" />
        <Parameter Name="baseAddress" Type="System.Uri[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="workflowDefinitionPath">Uma cadeia de caracteres que contém o caminho do arquivo de definição do fluxo de trabalho.</param>
        <param name="baseAddress">Uma matriz do tipo <see cref="T:System.Uri" /> que contém os endereços base do serviço hospedado.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.WorkflowServiceHost" /> usando um caminho para a definição do fluxo de trabalho e os endereços base do serviço especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use essa sobrecarga quando a definição de fluxo de trabalho está no formato de arquivo do windows.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowServiceHost (Type workflowType, params Uri[] baseAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type workflowType, class System.Uri[] baseAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WorkflowServiceHost.#ctor(System.Type,System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowType As Type, ParamArray baseAddress As Uri())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowServiceHost(Type ^ workflowType, ... cli::array &lt;Uri ^&gt; ^ baseAddress);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.WorkflowServiceHost : Type * Uri[] -&gt; System.ServiceModel.WorkflowServiceHost" Usage="new System.ServiceModel.WorkflowServiceHost (workflowType, baseAddress)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowType" Type="System.Type" />
        <Parameter Name="baseAddress" Type="System.Uri[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="workflowType">O <see cref="T:System.Type" /> da instância de fluxo de trabalho.</param>
        <param name="baseAddress">Uma matriz do tipo <see cref="T:System.Uri" /> que contém os endereços base do serviço hospedado.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.WorkflowServiceHost" /> usando o tipo do fluxo de trabalho e os endereços base do serviço especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use essa sobrecarga quando o fluxo de trabalho é definido como o tipo compilado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowServiceHost (System.IO.Stream workflowDefinition, System.IO.Stream ruleDefinition, params Uri[] baseAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream workflowDefinition, class System.IO.Stream ruleDefinition, class System.Uri[] baseAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.IO.Stream,System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowDefinition As Stream, ruleDefinition As Stream, ParamArray baseAddress As Uri())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowServiceHost(System::IO::Stream ^ workflowDefinition, System::IO::Stream ^ ruleDefinition, ... cli::array &lt;Uri ^&gt; ^ baseAddress);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.WorkflowServiceHost : System.IO.Stream * System.IO.Stream * Uri[] -&gt; System.ServiceModel.WorkflowServiceHost" Usage="new System.ServiceModel.WorkflowServiceHost (workflowDefinition, ruleDefinition, baseAddress)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinition" Type="System.IO.Stream" />
        <Parameter Name="ruleDefinition" Type="System.IO.Stream" />
        <Parameter Name="baseAddress" Type="System.Uri[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="workflowDefinition">
          <see cref="T:System.IO.Stream" /> que contém a definição do fluxo de trabalho.</param>
        <param name="ruleDefinition">
          <see cref="T:System.IO.Stream" /> que contém a definição das regras do fluxo de trabalho.</param>
        <param name="baseAddress">Uma matriz do tipo <see cref="T:System.Uri" /> que contém os endereços base do serviço hospedado.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.WorkflowServiceHost" /> usando um fluxo de bytes que contém a definição do fluxo de trabalho, um fluxo de bytes que contém a definição das regras do fluxo de trabalho e os endereços base do serviço especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use essa sobrecarga quando a definição de fluxo de trabalho e a definição de regras são armazenados no armazenamento seguro, como um banco de dados.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowServiceHost (string workflowDefinitionPath, string ruleDefinitionPath, params Uri[] baseAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string workflowDefinitionPath, string ruleDefinitionPath, class System.Uri[] baseAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.String,System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowDefinitionPath As String, ruleDefinitionPath As String, ParamArray baseAddress As Uri())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowServiceHost(System::String ^ workflowDefinitionPath, System::String ^ ruleDefinitionPath, ... cli::array &lt;Uri ^&gt; ^ baseAddress);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.WorkflowServiceHost : string * string * Uri[] -&gt; System.ServiceModel.WorkflowServiceHost" Usage="new System.ServiceModel.WorkflowServiceHost (workflowDefinitionPath, ruleDefinitionPath, baseAddress)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinitionPath" Type="System.String" />
        <Parameter Name="ruleDefinitionPath" Type="System.String" />
        <Parameter Name="baseAddress" Type="System.Uri[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="workflowDefinitionPath">Uma cadeia de caracteres que contém o caminho do arquivo de definição do fluxo de trabalho.</param>
        <param name="ruleDefinitionPath">Uma cadeia de caracteres que contém o caminho para as regras do arquivo de definição do fluxo de trabalho.</param>
        <param name="baseAddress">Uma matriz do tipo <see cref="T:System.Uri" /> que contém os endereços base do serviço hospedado.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.WorkflowServiceHost" /> usando um caminho para a definição do fluxo de trabalho, um caminho para a definição das regras do fluxo de trabalho e os endereços base do serviço especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use essa sobrecarga quando a definição de fluxo de trabalho e a definição das regras estão na forma de arquivos do windows.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowServiceHost (System.IO.Stream workflowDefinition, System.IO.Stream ruleDefinition, System.Workflow.ComponentModel.Compiler.ITypeProvider typeProvider, params Uri[] baseAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream workflowDefinition, class System.IO.Stream ruleDefinition, class System.Workflow.ComponentModel.Compiler.ITypeProvider typeProvider, class System.Uri[] baseAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.IO.Stream,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowDefinition As Stream, ruleDefinition As Stream, typeProvider As ITypeProvider, ParamArray baseAddress As Uri())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowServiceHost(System::IO::Stream ^ workflowDefinition, System::IO::Stream ^ ruleDefinition, System::Workflow::ComponentModel::Compiler::ITypeProvider ^ typeProvider, ... cli::array &lt;Uri ^&gt; ^ baseAddress);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.WorkflowServiceHost : System.IO.Stream * System.IO.Stream * System.Workflow.ComponentModel.Compiler.ITypeProvider * Uri[] -&gt; System.ServiceModel.WorkflowServiceHost" Usage="new System.ServiceModel.WorkflowServiceHost (workflowDefinition, ruleDefinition, typeProvider, baseAddress)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinition" Type="System.IO.Stream" />
        <Parameter Name="ruleDefinition" Type="System.IO.Stream" />
        <Parameter Name="typeProvider" Type="System.Workflow.ComponentModel.Compiler.ITypeProvider" />
        <Parameter Name="baseAddress" Type="System.Uri[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="workflowDefinition">
          <see cref="T:System.IO.Stream" /> que contém a definição do fluxo de trabalho.</param>
        <param name="ruleDefinition">
          <see cref="T:System.IO.Stream" /> que contém a definição das regras do fluxo de trabalho.</param>
        <param name="typeProvider">Um provedor de tipos que implementa a interface do <see cref="T:System.Workflow.ComponentModel.Compiler.ITypeProvider" />.</param>
        <param name="baseAddress">Uma matriz do tipo <see cref="T:System.Uri" /> que contém os endereços base do serviço hospedado.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.WorkflowServiceHost" /> usando um fluxo de bytes que contém a definição do fluxo de trabalho, um fluxo de bytes que contém a definição das regras do fluxo de trabalho, um provedor de tipos para tipos de atividades personalizadas e os endereços base do serviço especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use essa sobrecarga quando compilado seu fluxo de trabalho faz referência a tipos personalizados definidos em um assembly separado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowServiceHost (string workflowDefinitionPath, string ruleDefinitionPath, System.Workflow.ComponentModel.Compiler.ITypeProvider typeProvider, params Uri[] baseAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string workflowDefinitionPath, string ruleDefinitionPath, class System.Workflow.ComponentModel.Compiler.ITypeProvider typeProvider, class System.Uri[] baseAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.String,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowDefinitionPath As String, ruleDefinitionPath As String, typeProvider As ITypeProvider, ParamArray baseAddress As Uri())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowServiceHost(System::String ^ workflowDefinitionPath, System::String ^ ruleDefinitionPath, System::Workflow::ComponentModel::Compiler::ITypeProvider ^ typeProvider, ... cli::array &lt;Uri ^&gt; ^ baseAddress);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.WorkflowServiceHost : string * string * System.Workflow.ComponentModel.Compiler.ITypeProvider * Uri[] -&gt; System.ServiceModel.WorkflowServiceHost" Usage="new System.ServiceModel.WorkflowServiceHost (workflowDefinitionPath, ruleDefinitionPath, typeProvider, baseAddress)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinitionPath" Type="System.String" />
        <Parameter Name="ruleDefinitionPath" Type="System.String" />
        <Parameter Name="typeProvider" Type="System.Workflow.ComponentModel.Compiler.ITypeProvider" />
        <Parameter Name="baseAddress" Type="System.Uri[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="workflowDefinitionPath">Uma cadeia de caracteres que contém o caminho do arquivo de definição do fluxo de trabalho.</param>
        <param name="ruleDefinitionPath">Uma cadeia de caracteres que contém o caminho para as regras do arquivo de definição do fluxo de trabalho.</param>
        <param name="typeProvider">Um provedor de tipos que implementa a interface do <see cref="T:System.Workflow.ComponentModel.Compiler.ITypeProvider" />.</param>
        <param name="baseAddress">Uma matriz do tipo <see cref="T:System.Uri" /> que contém os endereços base do serviço hospedado.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.WorkflowServiceHost" /> usando um caminho para a definição do fluxo de trabalho, um caminho para a definição das regras do fluxo de trabalho, um provedor de tipos para tipos de atividades personalizadas e os endereços base do serviço especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use essa sobrecarga quando você tem o fluxo de trabalho definido em um arquivo de marcação de fluxo de trabalho (. xoml) e faz referência a tipos personalizados definidos em um assembly separado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddServiceEndpoint">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Adiciona um ponto de extremidade de serviço ao serviço hospedado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddServiceEndpoint">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint(class System.Type implementedContract, class System.ServiceModel.Channels.Binding binding, string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpoint ^ AddServiceEndpoint(Type ^ implementedContract, System::ServiceModel::Channels::Binding ^ binding, System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.AddServiceEndpoint : Type * System.ServiceModel.Channels.Binding * string -&gt; System.ServiceModel.Description.ServiceEndpoint" Usage="workflowServiceHost.AddServiceEndpoint (implementedContract, binding, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementedContract" Type="System.Type" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="implementedContract">O <see cref="T:System.Type" /> do contrato para o ponto de extremidade adicionado.</param>
        <param name="binding">O <see cref="T:System.ServiceModel.Channels.Binding" /> do ponto de extremidade adicionado.</param>
        <param name="address">O endereço do ponto de extremidade adicionado.</param>
        <summary>Adiciona um ponto de extremidade de serviço ao serviço de fluxo de trabalho usando o contrato, a associação e o endereço do ponto de extremidade especificados.</summary>
        <returns>O <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> adicionado ao serviço de fluxo de trabalho.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> é <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">O serviço de fluxo de trabalho não implementa <paramref name="implementedContract" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddServiceEndpoint">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint(class System.Type implementedContract, class System.ServiceModel.Channels.Binding binding, class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpoint ^ AddServiceEndpoint(Type ^ implementedContract, System::ServiceModel::Channels::Binding ^ binding, Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.AddServiceEndpoint : Type * System.ServiceModel.Channels.Binding * Uri -&gt; System.ServiceModel.Description.ServiceEndpoint" Usage="workflowServiceHost.AddServiceEndpoint (implementedContract, binding, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementedContract" Type="System.Type" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="implementedContract">O <see cref="T:System.Type" /> do contrato para o ponto de extremidade adicionado.</param>
        <param name="binding">O <see cref="T:System.ServiceModel.Channels.Binding" /> do ponto de extremidade adicionado.</param>
        <param name="address">O <see cref="T:System.Uri" /> que contém o endereço do ponto de extremidade adicionado.</param>
        <summary>Adiciona um ponto de extremidade de serviço ao serviço de fluxo de trabalho com um contrato, uma associação e um URI que contêm o endereço do ponto de extremidade.</summary>
        <returns>O <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> adicionado ao serviço de fluxo de trabalho.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> é <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">O serviço de fluxo de trabalho não implementa <paramref name="implementedContract" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddServiceEndpoint">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, string address, Uri listenUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint(class System.Type implementedContract, class System.ServiceModel.Channels.Binding binding, string address, class System.Uri listenUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpoint ^ AddServiceEndpoint(Type ^ implementedContract, System::ServiceModel::Channels::Binding ^ binding, System::String ^ address, Uri ^ listenUri);" />
      <MemberSignature Language="F#" Value="member this.AddServiceEndpoint : Type * System.ServiceModel.Channels.Binding * string * Uri -&gt; System.ServiceModel.Description.ServiceEndpoint" Usage="workflowServiceHost.AddServiceEndpoint (implementedContract, binding, address, listenUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementedContract" Type="System.Type" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="listenUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="implementedContract">O <see cref="T:System.Type" /> do contrato para o ponto de extremidade adicionado.</param>
        <param name="binding">O <see cref="T:System.ServiceModel.Channels.Binding" /> do ponto de extremidade adicionado.</param>
        <param name="address">O endereço do ponto de extremidade do serviço.</param>
        <param name="listenUri">O <see cref="T:System.Uri" /> no qual os pontos de extremidade de serviço podem escutar.</param>
        <summary>Adiciona um ponto de extremidade de serviço ao serviço de fluxo de trabalho com um contrato, uma associação, um endereço do ponto de extremidade especificados e um URI no qual o serviço escuta.</summary>
        <returns>O <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> adicionado ao serviço de fluxo de trabalho.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> é <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.ServiceModel.ServiceContractAttribute" /> não foi especificado para <paramref name="implementedContract" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddServiceEndpoint">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, Uri address, Uri listenUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint(class System.Type implementedContract, class System.ServiceModel.Channels.Binding binding, class System.Uri address, class System.Uri listenUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpoint ^ AddServiceEndpoint(Type ^ implementedContract, System::ServiceModel::Channels::Binding ^ binding, Uri ^ address, Uri ^ listenUri);" />
      <MemberSignature Language="F#" Value="member this.AddServiceEndpoint : Type * System.ServiceModel.Channels.Binding * Uri * Uri -&gt; System.ServiceModel.Description.ServiceEndpoint" Usage="workflowServiceHost.AddServiceEndpoint (implementedContract, binding, address, listenUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementedContract" Type="System.Type" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="listenUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="implementedContract">O <see cref="T:System.Type" /> do contrato para o ponto de extremidade adicionado.</param>
        <param name="binding">O <see cref="T:System.ServiceModel.Channels.Binding" /> do ponto de extremidade adicionado.</param>
        <param name="address">O <see cref="T:System.Uri" /> que contém o endereço do ponto de extremidade adicionado.</param>
        <param name="listenUri">O <see cref="T:System.Uri" /> no qual os pontos de extremidade de serviço podem escutar.</param>
        <summary>Adiciona um ponto de extremidade de serviço ao serviço de fluxo de trabalho com um contrato, uma associação, um URI que contém o endereço do ponto de extremidade e um URI no qual o serviço escuta.</summary>
        <returns>O <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> adicionado ao serviço de fluxo de trabalho.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> é <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.ServiceModel.ServiceContractAttribute" /> não foi especificado para <paramref name="implementedContract" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDescription">
      <MemberSignature Language="C#" Value="protected override System.ServiceModel.Description.ServiceDescription CreateDescription (out System.Collections.Generic.IDictionary&lt;string,System.ServiceModel.Description.ContractDescription&gt; implementedContracts);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.ServiceModel.Description.ServiceDescription CreateDescription([out] class System.Collections.Generic.IDictionary`2&lt;string, class System.ServiceModel.Description.ContractDescription&gt;&amp; implementedContracts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WorkflowServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDescription (ByRef implementedContracts As IDictionary(Of String, ContractDescription)) As ServiceDescription" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::ServiceModel::Description::ServiceDescription ^ CreateDescription([Runtime::InteropServices::Out] System::Collections::Generic::IDictionary&lt;System::String ^, System::ServiceModel::Description::ContractDescription ^&gt; ^ % implementedContracts);" />
      <MemberSignature Language="F#" Value="abstract member CreateDescription :  -&gt; System.ServiceModel.Description.ServiceDescription&#xA;override this.CreateDescription :  -&gt; System.ServiceModel.Description.ServiceDescription" Usage="workflowServiceHost.CreateDescription implementedContracts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceDescription</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementedContracts" Type="System.Collections.Generic.IDictionary&lt;System.String,System.ServiceModel.Description.ContractDescription&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="implementedContracts">Quando este método é retornado, o objeto <see cref="T:System.Collections.Generic.IDictionary`2" /> contém os contratos com chave do serviço hospedado que foram implementados.</param>
        <summary>Cria uma descrição do serviço de fluxo de trabalho.</summary>
        <returns>Um <see cref="T:System.ServiceModel.Description.ServiceDescription" /> do serviço de fluxo de trabalho.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClosing">
      <MemberSignature Language="C#" Value="protected override void OnClosing ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClosing() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WorkflowServiceHost.OnClosing" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClosing ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClosing();" />
      <MemberSignature Language="F#" Value="abstract member OnClosing : unit -&gt; unit&#xA;override this.OnClosing : unit -&gt; unit" Usage="workflowServiceHost.OnClosing " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Este método é chamado antes que o <see cref="T:System.ServiceModel.WorkflowServiceHost" /> seja colocado em um estado de fechamento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Na implementação do padrão, <xref:System.ServiceModel.WorkflowServiceHost> chamadas <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> antes de chamar <xref:System.ServiceModel.Channels.CommunicationObject.OnClosing%2A?displayProperty=nameWithType>. Isso significa que o tempo de execução do fluxo de trabalho será encerrado antes de fecha o host de serviço.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>