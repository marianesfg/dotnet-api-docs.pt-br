<Type Name="ICommunicationObject" FullName="System.ServiceModel.ICommunicationObject">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cd9ca885385b63277201f3de3ef6b40a8f66af9e" />
    <Meta Name="ms.sourcegitcommit" Value="1ed56302ed1a98fc49550c1db40aae2529449969" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="09/11/2018" />
    <Meta Name="ms.locfileid" Value="44369977" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ICommunicationObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICommunicationObject" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICommunicationObject" />
  <TypeSignature Language="F#" Value="type ICommunicationObject = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Define o contrato para a máquina de estado básica para todos os objetos voltados para comunicações no sistema, incluindo canais, os gerentes de canal, fábricas, ouvintes, distribuidores e hosts de serviço.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ServiceModel.ICommunicationObject> interface define:  
  
-   Um conjunto de abrir, fechar e anular os métodos para iniciar as transições de estado:  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Open%2A>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Close%2A>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Abort%2A>  
  
-   Versões assíncronas dos métodos de abertura e fechamento:  
  
    -   <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.EndOpen%28System.IAsyncResult%29>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.EndClose%2A>  
  
-   Um conjunto de eventos que fornecem notificações de transições de estado:  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Opening>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Opened>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Closing>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Closed>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Faulted>  
  
-   Um comum <xref:System.ServiceModel.ICommunicationObject.State%2A> propriedade para inspecionar o estado de um objeto  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort();" />
      <MemberSignature Language="F#" Value="abstract member Abort : unit -&gt; unit" Usage="iCommunicationObject.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Faz com que um objeto de comunicação faça a transição imediata do estado atual para o estado fechado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método indica que qualquer trabalho não concluído deve ser ignorado ou encerrado de maneira brusca antes de retornar. O <xref:System.ServiceModel.ICommunicationObject.Abort%2A> método pode ser usado para cancelar qualquer operação pendente, inclusive chamadas pendentes para <xref:System.ServiceModel.ICommunicationObject.Close%2A>.  
  
 Para fazer a transição normalmente um <xref:System.ServiceModel.ICommunicationObject> do <xref:System.ServiceModel.CommunicationState.Opened> estado para o <xref:System.ServiceModel.CommunicationState.Closed> estado chamada <xref:System.ServiceModel.ICommunicationObject.Close%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginClose">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicia uma operação assíncrona para fechar um objeto de comunicação.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método faz com que um <xref:System.ServiceModel.ICommunicationObject> para fazer a transição de normalmente os <xref:System.ServiceModel.CommunicationState.Opened> estado para o <xref:System.ServiceModel.CommunicationState.Closed> estado.  
  
 Versões com e sem um tempo limite explícito são fornecidas.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginClose">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginClose (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginClose(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginClose (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginClose(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginClose : AsyncCallback * obj -&gt; IAsyncResult" Usage="iCommunicationObject.BeginClose (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">O delegado <see cref="T:System.AsyncCallback" /> que recebe a notificação da conclusão da operação de fechamento assíncrona.</param>
        <param name="state">Um objeto, especificado pelo aplicativo, que contém informações de estado associadas à operação de fechamento assíncrona.</param>
        <summary>Inicia uma operação assíncrona para fechar um objeto de comunicação.</summary>
        <returns>O <see cref="T:System.IAsyncResult" /> que faz referência à operação de fechamento assíncrona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método faz com que um <xref:System.ServiceModel.ICommunicationObject> normalmente uma transição de qualquer estado diferente do <xref:System.ServiceModel.CommunicationState.Opened> estado para o <xref:System.ServiceModel.CommunicationState.Closed> estado. O <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> método permite que qualquer trabalho não concluído ser concluída antes de retornar. Por exemplo, enviar as mensagens em buffer de término).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
          <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)" /> foi chamado em um objeto no estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
        <exception cref="T:System.TimeoutException">O tempo limite padrão decorrido antes de o <see cref="T:System.ServiceModel.ICommunicationObject" /> poder ser fechado normalmente.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginClose">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginClose (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginClose(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginClose (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginClose(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginClose : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="iCommunicationObject.BeginClose (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">O <see cref="T:System.TimeSpan" /> que especifica quanto tempo a operação de envio tem para ser concluída antes de atingir o tempo limite.</param>
        <param name="callback">O delegado <see cref="T:System.AsyncCallback" /> que recebe a notificação da conclusão da operação de fechamento assíncrona.</param>
        <param name="state">Um objeto, especificado pelo aplicativo, que contém informações de estado associadas à operação de fechamento assíncrona.</param>
        <summary>Inicia uma operação assíncrona para fechar um objeto de comunicação com um tempo limite especificado.</summary>
        <returns>O <see cref="T:System.IAsyncResult" /> que faz referência à operação de fechamento assíncrona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método faz com que um <xref:System.ServiceModel.ICommunicationObject> normalmente uma transição de qualquer estado diferente do <xref:System.ServiceModel.CommunicationState.Opened> estado para o <xref:System.ServiceModel.CommunicationState.Closed> estado com em um intervalo de tempo especificado. O <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> método permite que qualquer trabalho não concluído ser concluída antes de retornar. Por exemplo, enviar as mensagens em buffer de término).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
          <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" /> foi chamado em um objeto no estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
        <exception cref="T:System.TimeoutException">O tempo limite especificado expirou antes de o <see cref="T:System.ServiceModel.ICommunicationObject" /> poder ser fechado normalmente.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginOpen">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicia uma operação assíncrona para fechar um objeto de comunicação.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> método faz com que um <xref:System.ServiceModel.ICommunicationObject> inserir na <xref:System.ServiceModel.CommunicationState.Opening> estado, onde permanecem até que sua transição para o <xref:System.ServiceModel.CommunicationState.Opened> estado é concluído ou falhar.  
  
 Versões com e sem um tempo limite explícito são fornecidas.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginOpen">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginOpen (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginOpen(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginOpen (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginOpen(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginOpen : AsyncCallback * obj -&gt; IAsyncResult" Usage="iCommunicationObject.BeginOpen (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">O delegado <see cref="T:System.AsyncCallback" /> que recebe a notificação da conclusão da operação de abertura assíncrona.</param>
        <param name="state">Um objeto, especificado pelo aplicativo, que contém informações de estado associadas à operação de abertura assíncrona.</param>
        <summary>Inicia uma operação assíncrona para abrir um objeto de comunicação.</summary>
        <returns>O <see cref="T:System.IAsyncResult" /> que faz referência à operação de abertura assíncrona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando um <xref:System.ServiceModel.ICommunicationObject> é instanciado, ele começa a <xref:System.ServiceModel.CommunicationState.Created> estado. No <xref:System.ServiceModel.CommunicationState.Created> de estado, o objeto pode ser configurado (por exemplo, propriedades podem ser definidas ou eventos podem ser registrados), mas ele ainda não está utilizável para enviar ou receber mensagens. O <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> método faz com que um <xref:System.ServiceModel.ICommunicationObject> inserir na <xref:System.ServiceModel.CommunicationState.Opening> estado, onde permanecem até que a operação de abertura for bem-sucedida, a operação de abertura expira ou falha e o objeto se torna com defeito, ou o <xref:System.ServiceModel.ICommunicationObject> será anulada.  
  
 No <xref:System.ServiceModel.CommunicationState.Opened> estado, o <xref:System.ServiceModel.ICommunicationObject> pode ser usado (por exemplo, as mensagens possam ser recebidas), mas não é configurável.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationException">O <see cref="T:System.ServiceModel.ICommunicationObject" /> não pôde ser aberto e entrou no estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
        <exception cref="T:System.TimeoutException">O tempo limite padrão especificado expirou antes do <see cref="T:System.ServiceModel.ICommunicationObject" /> entrar no estado <see cref="F:System.ServiceModel.CommunicationState.Opened" /> e ele entrou no estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginOpen">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginOpen (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginOpen(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginOpen (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginOpen(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginOpen : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="iCommunicationObject.BeginOpen (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">O <see cref="T:System.TimeSpan" /> que especifica quanto tempo a operação de envio tem para ser concluída antes de atingir o tempo limite.</param>
        <param name="callback">O delegado <see cref="T:System.AsyncCallback" /> que recebe a notificação da conclusão da operação de abertura assíncrona.</param>
        <param name="state">Um objeto, especificado pelo aplicativo, que contém informações de estado associadas à operação de abertura assíncrona.</param>
        <summary>Inicia uma operação assíncrona para abrir um objeto de comunicação dentro de um intervalo de tempo especificado.</summary>
        <returns>O <see cref="T:System.IAsyncResult" /> que faz referência à operação de abertura assíncrona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando um <xref:System.ServiceModel.ICommunicationObject> é instanciado, ele começa a <xref:System.ServiceModel.CommunicationState.Created> estado. No <xref:System.ServiceModel.CommunicationState.Created> de estado, o objeto pode ser configurado (por exemplo, propriedades podem ser definidas ou eventos podem ser registrados), mas ele ainda não está utilizável para enviar ou receber mensagens. O <xref:System.ServiceModel.ICommunicationObject.Open%2A> método faz com que um <xref:System.ServiceModel.ICommunicationObject> inserir na <xref:System.ServiceModel.CommunicationState.Opening> estado, onde permanecem até que a operação de abertura for bem-sucedida, a operação de abertura expira ou falha e o objeto se torna com defeito, ou o <xref:System.ServiceModel.ICommunicationObject> será anulada.  
  
 No <xref:System.ServiceModel.CommunicationState.Opened> estado, o <xref:System.ServiceModel.ICommunicationObject> pode ser usado (por exemplo, as mensagens possam ser recebidas), mas não é configurável.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationException">O <see cref="T:System.ServiceModel.ICommunicationObject" /> não pôde ser aberto e entrou no estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
        <exception cref="T:System.TimeoutException">O tempo limite especificado expirou antes do <see cref="T:System.ServiceModel.ICommunicationObject" /> entrar no estado <see cref="F:System.ServiceModel.CommunicationState.Opened" /> e ele entrou no estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
        <block subset="none" type="overrides">
          <para>A operação deve lançar uma <see cref="T:System.TimeoutException" /> se especificado <paramref name="timeout" /> for excedido.</para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Close">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Faz com que um objeto de comunicação faça a transição do estado atual para o estado fechado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit" Usage="iCommunicationObject.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Faz com que um objeto de comunicação faça a transição do estado atual para o estado fechado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método faz com que um <xref:System.ServiceModel.ICommunicationObject> para fazer a transição de normalmente os <xref:System.ServiceModel.CommunicationState.Opened> estado para o <xref:System.ServiceModel.CommunicationState.Closed> estado. O <xref:System.ServiceModel.ICommunicationObject.Close%2A> método permite que qualquer trabalho não concluído ser concluída antes de retornar. Por exemplo, enviar as mensagens em buffer de término).  
  
 O <xref:System.ServiceModel.ICommunicationObject> insere a <xref:System.ServiceModel.CommunicationState.Closing> estado e permanece nele até que a transição para o <xref:System.ServiceModel.CommunicationState.Closed> estado for completed.  
  
 <xref:System.ServiceModel.ICommunicationObject.Close%2A> Retorna uma vez o <xref:System.ServiceModel.CommunicationState.Closed> estado é atingido.  
  
 Se o padrão de fechar o tempo limite expira antes do <xref:System.ServiceModel.ICommunicationObject> é capaz de ser fechado normalmente, o <xref:System.ServiceModel.ICommunicationObject> será anulada.  
  
 Se <xref:System.ServiceModel.ICommunicationObject.Close%2A> é chamado em um <xref:System.ServiceModel.ICommunicationObject> na <xref:System.ServiceModel.CommunicationState.Created>, <xref:System.ServiceModel.CommunicationState.Opening>, ou <xref:System.ServiceModel.CommunicationState.Faulted> estado, o <xref:System.ServiceModel.ICommunicationObject> será anulada. Se <xref:System.ServiceModel.ICommunicationObject.Close%2A> é chamado em um <xref:System.ServiceModel.ICommunicationObject> na <xref:System.ServiceModel.CommunicationState.Closing> ou <xref:System.ServiceModel.CommunicationState.Closed> de estado, a chamada retornará imediatamente.  
  
 Também há uma versão assíncrona do método close iniciada chamando <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> e concluída chamando <xref:System.ServiceModel.ICommunicationObject.Close%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
          <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> foi chamado em um objeto no estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
        <exception cref="T:System.TimeoutException">O tempo limite de fechamento padrão decorrido antes de o <see cref="T:System.ServiceModel.ICommunicationObject" /> poder ser fechado normalmente.</exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Close : TimeSpan -&gt; unit" Usage="iCommunicationObject.Close timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">O <see cref="T:System.TimeSpan" /> que especifica quanto tempo a operação de envio tem para ser concluída antes de atingir o tempo limite.</param>
        <summary>Faz com que um objeto de comunicação faça a transição do estado atual para o estado fechado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método faz com que um <xref:System.ServiceModel.ICommunicationObject> para fazer a transição de normalmente os <xref:System.ServiceModel.CommunicationState.Opened> estado para o <xref:System.ServiceModel.CommunicationState.Closed> estado dentro de um intervalo de tempo especificado. O <xref:System.ServiceModel.ICommunicationObject.Close%2A> método permite que qualquer trabalho não concluído ser concluída antes de retornar. Por exemplo, enviar as mensagens em buffer de término).  
  
 O <xref:System.ServiceModel.ICommunicationObject> insere a <xref:System.ServiceModel.CommunicationState.Closing> estado e permanece nele até que a transição para o <xref:System.ServiceModel.CommunicationState.Closed> estado for completed.  
  
 <xref:System.ServiceModel.ICommunicationObject.Close%2A> Retorna uma vez o <xref:System.ServiceModel.CommunicationState.Closed> estado é atingido.  
  
 Se o tempo limite decorrer antes de <xref:System.ServiceModel.ICommunicationObject> é poder ser fechado normalmente, o <xref:System.ServiceModel.ICommunicationObject> será anulada.  
  
 Se <xref:System.ServiceModel.ICommunicationObject.Close%2A> é chamado em um <xref:System.ServiceModel.ICommunicationObject> na <xref:System.ServiceModel.CommunicationState.Created>, <xref:System.ServiceModel.CommunicationState.Opening>, ou <xref:System.ServiceModel.CommunicationState.Faulted> estado, o <xref:System.ServiceModel.ICommunicationObject> será anulada.  Se <xref:System.ServiceModel.ICommunicationObject.Close%2A> é chamado em um <xref:System.ServiceModel.ICommunicationObject> na <xref:System.ServiceModel.CommunicationState.Closing> ou <xref:System.ServiceModel.CommunicationState.Closed> de estado, a chamada retornará imediatamente.  
  
 Também há uma versão assíncrona do método close iniciada chamando <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> e concluída chamando <xref:System.ServiceModel.ICommunicationObject.Close%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
          <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> foi chamado em um objeto no estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
        <exception cref="T:System.TimeoutException">O tempo limite expirou antes de o <see cref="T:System.ServiceModel.ICommunicationObject" /> poder ser fechado normalmente.</exception>
        <block subset="none" type="overrides">
          <para>A operação deve lançar uma <see cref="T:System.TimeoutException" /> se especificado <paramref name="timeout" /> for excedido.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Closed">
      <MemberSignature Language="C#" Value="event EventHandler Closed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Closed" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.ICommunicationObject.Closed" />
      <MemberSignature Language="VB.NET" Value="Event Closed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Closed;" />
      <MemberSignature Language="F#" Value="member this.Closed : EventHandler " Usage="member this.Closed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando o objeto de comunicação conclui sua transição do estado de fechamento para o estado fechado.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Closing">
      <MemberSignature Language="C#" Value="event EventHandler Closing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Closing" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.ICommunicationObject.Closing" />
      <MemberSignature Language="VB.NET" Value="Event Closing As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Closing;" />
      <MemberSignature Language="F#" Value="member this.Closing : EventHandler " Usage="member this.Closing : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando um objeto de comunicação entra em estado de fechamento primeiro.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse evento ocorre quando o objeto de comunicação começa primeiro fazer a transição do <xref:System.ServiceModel.CommunicationState.Opened> estado para o <xref:System.ServiceModel.CommunicationState.Closed> state, imediatamente depois de qualquer um a <xref:System.ServiceModel.ICommunicationObject.Close%2A> ou <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> método é invocado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndClose">
      <MemberSignature Language="C#" Value="public void EndClose (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndClose(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndClose (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndClose(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndClose : IAsyncResult -&gt; unit" Usage="iCommunicationObject.EndClose result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">O <see cref="T:System.IAsyncResult" /> que é retornado por uma chamada para o método <see cref="Overload:System.ServiceModel.ICommunicationObject.BeginClose" />.</param>
        <summary>Conclui uma operação assíncrona para fechar um objeto de comunicação.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
          <see cref="Overload:System.ServiceModel.ICommunicationObject.BeginClose" /> foi chamado em um objeto no estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
        <exception cref="T:System.TimeoutException">O tempo limite expirou antes de o <see cref="T:System.ServiceModel.ICommunicationObject" /> poder ser fechado normalmente.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndOpen">
      <MemberSignature Language="C#" Value="public void EndOpen (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndOpen(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndOpen (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndOpen(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndOpen : IAsyncResult -&gt; unit" Usage="iCommunicationObject.EndOpen result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">O <see cref="T:System.IAsyncResult" /> que é retornado por uma chamada para o método <see cref="Overload:System.ServiceModel.ICommunicationObject.BeginOpen" />.</param>
        <summary>Conclui uma operação assíncrona para abrir um objeto de comunicação.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ServiceModel.CommunicationException">O <see cref="T:System.ServiceModel.ICommunicationObject" /> não pôde ser aberto e entrou no estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
        <exception cref="T:System.TimeoutException">O tempo limite expirou antes de o <see cref="T:System.ServiceModel.ICommunicationObject" /> conseguir entrar no estado <see cref="F:System.ServiceModel.CommunicationState.Opened" /> e ele entrou no estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Faulted">
      <MemberSignature Language="C#" Value="event EventHandler Faulted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Faulted" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.ICommunicationObject.Faulted" />
      <MemberSignature Language="VB.NET" Value="Event Faulted As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Faulted;" />
      <MemberSignature Language="F#" Value="member this.Faulted : EventHandler " Usage="member this.Faulted : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando um objeto de comunicação entra em estado de falha primeiro.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Open">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Faz com que um objeto de comunicação faça a transição do estado criado para o estado aberto.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Versões com e sem um tempo limite explícito são fornecidas.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.Open" />
      <MemberSignature Language="VB.NET" Value="Public Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Open();" />
      <MemberSignature Language="F#" Value="abstract member Open : unit -&gt; unit" Usage="iCommunicationObject.Open " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Faz com que um objeto de comunicação faça a transição do estado criado para o estado aberto.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando um <xref:System.ServiceModel.ICommunicationObject> é instanciado, ele começa a <xref:System.ServiceModel.CommunicationState.Created> estado. No <xref:System.ServiceModel.CommunicationState.Created> de estado, o objeto pode ser configurado (por exemplo, propriedades podem ser definidas ou eventos podem ser registrados), mas ele ainda não está utilizável para enviar ou receber mensagens. O <xref:System.ServiceModel.ICommunicationObject.Open%2A> método faz com que um <xref:System.ServiceModel.ICommunicationObject> inserir na <xref:System.ServiceModel.CommunicationState.Opening> estado, onde permanecem até que a operação de abertura for bem-sucedida, a operação de abertura expira ou falha e o objeto se torna com defeito, ou o <xref:System.ServiceModel.ICommunicationObject> será anulada.  
  
 No <xref:System.ServiceModel.CommunicationState.Opened> estado, o <xref:System.ServiceModel.ICommunicationObject> pode ser usado (por exemplo, as mensagens possam ser recebidas), mas não é configurável.  
  
 Também há uma versão assíncrona do método aberto que é iniciada chamando <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> e concluída chamando <xref:System.ServiceModel.ICommunicationObject.EndOpen%28System.IAsyncResult%29>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationException">O <see cref="T:System.ServiceModel.ICommunicationObject" /> não pôde ser aberto e entrou no estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
        <exception cref="T:System.TimeoutException">O tempo limite padrão especificado expirou antes do <see cref="T:System.ServiceModel.ICommunicationObject" /> entrar no estado <see cref="F:System.ServiceModel.CommunicationState.Opened" /> e ele entrou no estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public void Open (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Open(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Open (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Open(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Open : TimeSpan -&gt; unit" Usage="iCommunicationObject.Open timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">O <see cref="T:System.TimeSpan" /> que especifica quanto tempo a operação de envio tem para ser concluída antes de atingir o tempo limite.</param>
        <summary>Faz com que um objeto de comunicação faça a transição do estado criado para o estado aberto em um intervalo de tempo especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando um <xref:System.ServiceModel.ICommunicationObject> é instanciado, ele começa a <xref:System.ServiceModel.CommunicationState.Created> estado. No <xref:System.ServiceModel.CommunicationState.Created> de estado, o objeto pode ser configurado (por exemplo, propriedades podem ser definidas ou eventos podem ser registrados), mas ele ainda não está utilizável para enviar ou receber mensagens. O <xref:System.ServiceModel.ICommunicationObject.Open%2A> método faz com que um <xref:System.ServiceModel.ICommunicationObject> inserir na <xref:System.ServiceModel.CommunicationState.Opening> estado, onde permanecem até que a operação de abertura for bem-sucedida, a operação de abertura expira ou falha e o objeto se torna com defeito, ou o <xref:System.ServiceModel.ICommunicationObject> será anulada.  
  
 No <xref:System.ServiceModel.CommunicationState.Opened> estado, o <xref:System.ServiceModel.ICommunicationObject> pode ser usado (por exemplo, as mensagens possam ser recebidas), mas não é configurável.  
  
 Também há uma versão assíncrona do método aberto que é iniciada chamando <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> e concluída chamando <xref:System.ServiceModel.ICommunicationObject.EndOpen%28System.IAsyncResult%29>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationException">O <see cref="T:System.ServiceModel.ICommunicationObject" /> não pôde ser aberto e entrou no estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
        <exception cref="T:System.TimeoutException">O tempo limite especificado expirou antes do <see cref="T:System.ServiceModel.ICommunicationObject" /> entrar no estado <see cref="F:System.ServiceModel.CommunicationState.Opened" /> e ele entrou no estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
        <block subset="none" type="overrides">
          <para>A operação deve lançar uma <see cref="T:System.TimeoutException" /> se especificado <paramref name="timeout" /> for excedido.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Opened">
      <MemberSignature Language="C#" Value="event EventHandler Opened;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Opened" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.ICommunicationObject.Opened" />
      <MemberSignature Language="VB.NET" Value="Event Opened As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Opened;" />
      <MemberSignature Language="F#" Value="member this.Opened : EventHandler " Usage="member this.Opened : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando o objeto de comunicação conclui sua transição do estado de abertura para o estado aberto.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Opening">
      <MemberSignature Language="C#" Value="event EventHandler Opening;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Opening" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.ICommunicationObject.Opening" />
      <MemberSignature Language="VB.NET" Value="Event Opening As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Opening;" />
      <MemberSignature Language="F#" Value="member this.Opening : EventHandler " Usage="member this.Opening : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando um objeto de comunicação entra em estado de abertura primeiro.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse evento ocorre quando o objeto de comunicação começa primeiro fazer a transição do <xref:System.ServiceModel.CommunicationState.Created> estado para o <xref:System.ServiceModel.CommunicationState.Opened> state, imediatamente depois de qualquer um a <xref:System.ServiceModel.ICommunicationObject.Open%2A> ou <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> método é invocado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.ServiceModel.CommunicationState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.CommunicationState State" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ICommunicationObject.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As CommunicationState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::CommunicationState State { System::ServiceModel::CommunicationState get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.ServiceModel.CommunicationState" Usage="System.ServiceModel.ICommunicationObject.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.CommunicationState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o estado atual do objeto voltado à comunicação.</summary>
        <value>O valor da <see cref="T:System.ServiceModel.CommunicationState" /> do objeto.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A principal comunicação estados disponíveis para um <xref:System.ServiceModel.ICommunicationObject> são:  
  
-   <xref:System.ServiceModel.CommunicationState.Created> <xref:System.ServiceModel.CommunicationState.Opened>  
  
-   <xref:System.ServiceModel.CommunicationState.Closed>  
  
-   <xref:System.ServiceModel.CommunicationState.Faulted>  
  
 Também há estados transitórios que tal objeto pode ocupar durante a transição entre os três primeiros estados principais:  
  
-   <xref:System.ServiceModel.CommunicationState.Opening>  
  
-   <xref:System.ServiceModel.CommunicationState.Closing>  
  
 Isso <xref:System.ServiceModel.CommunicationState> define os estados que são válidos para todos os objetos orientado pelas comunicações no sistema, incluindo canais, ouvintes, as fábricas de canal e o ouvinte e o <xref:System.ServiceModel.ServiceHost> classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>