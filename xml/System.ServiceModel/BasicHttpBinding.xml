<Type Name="BasicHttpBinding" FullName="System.ServiceModel.BasicHttpBinding">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="76a3ded33625a65a0fa636265bb712caf935202f" />
    <Meta Name="ms.sourcegitcommit" Value="723b8a6d92667ba86fcda96190bad3b4a03283b3" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="11/09/2018" />
    <Meta Name="ms.locfileid" Value="51309155" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class BasicHttpBinding : System.ServiceModel.HttpBindingBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BasicHttpBinding extends System.ServiceModel.HttpBindingBase implements class System.ServiceModel.Channels.IBindingRuntimePreferences" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.BasicHttpBinding" />
  <TypeSignature Language="VB.NET" Value="Public Class BasicHttpBinding&#xA;Inherits HttpBindingBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class BasicHttpBinding : System::ServiceModel::HttpBindingBase" />
  <TypeSignature Language="F#" Value="type BasicHttpBinding = class&#xA;    inherit HttpBindingBase&#xA;    interface IBindingRuntimePreferences" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Http</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.HttpBindingBase</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-3.0">System.ServiceModel.Channels.Binding</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IBindingRuntimePreferences</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="e582f-101">Representa uma associação que um serviço do WCF (Windows Communication Foundation) pode usar para configurar e expor pontos de extremidade capazes de se comunicar com clientes e serviços Web baseados em ASMX e outros serviços que estejam em conformidade com o WS-I Basic Profile 1.1.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e582f-101">Represents a binding that a Windows Communication Foundation (WCF) service can use to configure and expose endpoints that are able to communicate with ASMX-based Web services and clients and other services that conform to the WS-I Basic Profile 1.1.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e582f-102">O <xref:System.ServiceModel.BasicHttpBinding> usa HTTP como o transporte para enviar mensagens de SOAP 1.1.</span><span class="sxs-lookup"><span data-stu-id="e582f-102">The <xref:System.ServiceModel.BasicHttpBinding> uses HTTP as the transport for sending SOAP 1.1 messages.</span></span> <span data-ttu-id="e582f-103">Um serviço pode usar essa associação para expor pontos de extremidade que estão em conformidade com WS-I BP 1.1, como aqueles que os clientes do ASMX acessar.</span><span class="sxs-lookup"><span data-stu-id="e582f-103">A service can use this binding to expose endpoints that conform to WS-I BP 1.1, such as those that ASMX clients access.</span></span> <span data-ttu-id="e582f-104">Da mesma forma, um cliente pode usar o <xref:System.ServiceModel.BasicHttpBinding> para se comunicar com serviços de expor pontos de extremidade que estão em conformidade com WS-I BP 1.1, como serviços Web ASMX ou serviços do Windows Communication Foundation (WCF) configurados com o <xref:System.ServiceModel.BasicHttpBinding>.</span><span class="sxs-lookup"><span data-stu-id="e582f-104">Similarly, a client can use the <xref:System.ServiceModel.BasicHttpBinding> to communicate with services exposing endpoints that conform to WS-I BP 1.1, such as ASMX Web services or Windows Communication Foundation (WCF) services configured with the <xref:System.ServiceModel.BasicHttpBinding>.</span></span>  
  
 <span data-ttu-id="e582f-105">Segurança é desativada por padrão, mas podem ser adicionada a configuração a <xref:System.ServiceModel.BasicHttpSecurityMode> com um valor diferente de <xref:System.ServiceModel.BasicHttpSecurityMode.None> no <xref:System.ServiceModel.BasicHttpBinding.%23ctor%28System.ServiceModel.BasicHttpSecurityMode%29> construtor.</span><span class="sxs-lookup"><span data-stu-id="e582f-105">Security is turned off by default, but can be added setting the <xref:System.ServiceModel.BasicHttpSecurityMode> to a value other than <xref:System.ServiceModel.BasicHttpSecurityMode.None> in the <xref:System.ServiceModel.BasicHttpBinding.%23ctor%28System.ServiceModel.BasicHttpSecurityMode%29> constructor.</span></span> <span data-ttu-id="e582f-106">Ele usa um "Text" mensagem codificação e UTF-8 codificação de texto por padrão.</span><span class="sxs-lookup"><span data-stu-id="e582f-106">It uses a "Text" message encoding and UTF-8 text encoding by default.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e582f-107">O exemplo a seguir mostra como configurar o <xref:System.ServiceModel.BasicHttpBinding> em um arquivo de configuração do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="e582f-107">The following example shows how to configure the <xref:System.ServiceModel.BasicHttpBinding> in an application configuration file.</span></span>  
  
  
  
 <span data-ttu-id="e582f-108">O exemplo a seguir mostra como configurar programaticamente <xref:System.ServiceModel.BasicHttpBinding>.</span><span class="sxs-lookup"><span data-stu-id="e582f-108">The following example shows how to programmatically configure <xref:System.ServiceModel.BasicHttpBinding>.</span></span>  
  
 [!code-csharp[S_UEBasicHttpBinding#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_uebasichttpbinding/cs/service.cs#1)]
 [!code-vb[S_UEBasicHttpBinding#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uebasichttpbinding/vb/service.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e582f-109">Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.BasicHttpBinding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-109">Initializes a new instance of the <see cref="T:System.ServiceModel.BasicHttpBinding" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BasicHttpBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.BasicHttpBinding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BasicHttpBinding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e582f-110">Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.BasicHttpBinding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-110">Initializes a new instance of the <see cref="T:System.ServiceModel.BasicHttpBinding" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e582f-111">O valor padrão de <xref:System.ServiceModel.BasicHttpSecurityMode> usado é <xref:System.ServiceModel.BasicHttpSecurityMode.None>, que especifica que a mensagem SOAP não é protegida e o cliente não está autenticado.</span><span class="sxs-lookup"><span data-stu-id="e582f-111">The default value of <xref:System.ServiceModel.BasicHttpSecurityMode> used is <xref:System.ServiceModel.BasicHttpSecurityMode.None>, which specifies that the SOAP message is not secured and the client is not authenticated.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UEBasicHttpBinding#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uebasichttpbinding/cs/service.cs#2)]
 [!code-vb[S_UEBasicHttpBinding#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uebasichttpbinding/vb/service.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BasicHttpBinding (System.ServiceModel.BasicHttpSecurityMode securityMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.ServiceModel.BasicHttpSecurityMode securityMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.BasicHttpBinding.#ctor(System.ServiceModel.BasicHttpSecurityMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (securityMode As BasicHttpSecurityMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BasicHttpBinding(System::ServiceModel::BasicHttpSecurityMode securityMode);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.BasicHttpBinding : System.ServiceModel.BasicHttpSecurityMode -&gt; System.ServiceModel.BasicHttpBinding" Usage="new System.ServiceModel.BasicHttpBinding securityMode" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="securityMode" Type="System.ServiceModel.BasicHttpSecurityMode" />
      </Parameters>
      <Docs>
        <param name="securityMode">
          <span data-ttu-id="e582f-112">O valor de <see cref="T:System.ServiceModel.BasicHttpSecurityMode" /> que especifica o tipo de segurança usado com a mensagem SOAP e para o cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-112">The value of <see cref="T:System.ServiceModel.BasicHttpSecurityMode" /> that specifies the type of security that is used with the SOAP message and for the client.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e582f-113">Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.BasicHttpBinding" /> com um tipo de segurança especificado usado pela associação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-113">Initializes a new instance of the <see cref="T:System.ServiceModel.BasicHttpBinding" /> class with a specified type of security used by the binding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e582f-114">O valor padrão de <xref:System.ServiceModel.BasicHttpSecurityMode> usado é <xref:System.ServiceModel.BasicHttpSecurityMode.None>, que especifica que a mensagem SOAP não é protegida e o cliente não está autenticado.</span><span class="sxs-lookup"><span data-stu-id="e582f-114">The default value of <xref:System.ServiceModel.BasicHttpSecurityMode> used is <xref:System.ServiceModel.BasicHttpSecurityMode.None>, which specifies that the SOAP message is not secured and the client is not authenticated.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UEBasicHttpBinding#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_uebasichttpbinding/cs/snippets.cs#3)]
 [!code-vb[S_UEBasicHttpBinding#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uebasichttpbinding/vb/snippets.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BasicHttpBinding (string configurationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string configurationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.BasicHttpBinding.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (configurationName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BasicHttpBinding(System::String ^ configurationName);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.BasicHttpBinding : string -&gt; System.ServiceModel.BasicHttpBinding" Usage="new System.ServiceModel.BasicHttpBinding configurationName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="configurationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="configurationName">
          <span data-ttu-id="e582f-115">O nome da configuração da associação do <see cref="T:System.ServiceModel.Configuration.BasicHttpBindingElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-115">The binding configuration name for the <see cref="T:System.ServiceModel.Configuration.BasicHttpBindingElement" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e582f-116">Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.BasicHttpBinding" /> com uma associação especificada pelo seu nome de configuração.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-116">Initializes a new instance of the <see cref="T:System.ServiceModel.BasicHttpBinding" /> class with a binding specified by its configuration name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e582f-117">Este exemplo inicializa uma nova <xref:System.ServiceModel.BasicHttpBinding> classe com uma associação especificada pelo nome da configuração `BasicBinding`.</span><span class="sxs-lookup"><span data-stu-id="e582f-117">This example initializes a new <xref:System.ServiceModel.BasicHttpBinding> class with a binding specified by the configuration name `BasicBinding`.</span></span> <span data-ttu-id="e582f-118">Você deve criar uma seção de associações no arquivo de configuração do serviço.</span><span class="sxs-lookup"><span data-stu-id="e582f-118">You must create a bindings section in the service's configuration file.</span></span>  
  
 [!code-csharp[S_UEBasicHttpBinding#5](~/samples/snippets/csharp/VS_Snippets_CFX/s_uebasichttpbinding/cs/snippets.cs#5)]
 [!code-vb[S_UEBasicHttpBinding#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uebasichttpbinding/vb/snippets.vb#5)]  
  
 <span data-ttu-id="e582f-119">Em seguida, o nome da configuração de associação é especificado na chamada para o <xref:System.ServiceModel.BasicHttpBinding> construtor.</span><span class="sxs-lookup"><span data-stu-id="e582f-119">Then the name of the binding configuration is specified in the call to the <xref:System.ServiceModel.BasicHttpBinding> constructor.</span></span>  
  
 [!code-csharp[S_UEBasicHttpBinding#4](~/samples/snippets/csharp/VS_Snippets_CFX/s_uebasichttpbinding/cs/snippets.cs#4)]
 [!code-vb[S_UEBasicHttpBinding#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uebasichttpbinding/vb/snippets.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="e582f-120">A associação com o nome da configuração <paramref name="configurationName" /> não foi encontrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-120">The binding with the configuration name <paramref name="configurationName" /> was not found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AllowCookies">
      <MemberSignature Language="C#" Value="public bool AllowCookies { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowCookies" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.BasicHttpBinding.AllowCookies" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowCookies As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowCookies { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowCookies : bool with get, set" Usage="System.ServiceModel.BasicHttpBinding.AllowCookies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e582f-121">Obtém ou define um valor que indica se o cliente aceita cookies e propaga-os em solicitações futuras.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-121">Gets or sets a value that indicates whether the client accepts cookies and propagates them on future requests.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e582f-122">
            <see langword="true" /> se os cookies são permitidos; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-122">
              <see langword="true" /> if cookies are allowed; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="e582f-123">O padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-123">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="e582f-124">Esta propriedade é fornecida como uma conveniência para interagir com serviços Web ASMX que usam cookies.</span><span class="sxs-lookup"><span data-stu-id="e582f-124">This property is provided as a convenience for interacting with ASMX Web services that use cookies.</span></span> <span data-ttu-id="e582f-125">Quando os cookies são aceitos pelo cliente, definindo a propriedade como `true`, cookies retornados do servidor são copiados automaticamente para todas as solicitações futuras de cliente para esse serviço.</span><span class="sxs-lookup"><span data-stu-id="e582f-125">When cookies are accepted by the client by setting the property to `true`, cookies returned from the server are automatically copied to all future client requests to that service.</span></span>

## Examples

<span data-ttu-id="e582f-126">O exemplo a seguir define essa propriedade para indicar que todos os cookies do servidor devem ser copiados para solicitações de cliente futuras:</span><span class="sxs-lookup"><span data-stu-id="e582f-126">The following example sets this property to indicate that all cookies from the server should be copied to future client requests:</span></span>

```csharp
BasicHttpBinding binding = new BasicHttpBinding();
binding.AllowCookies = true;
```

<span data-ttu-id="e582f-127">O valor dessa propriedade também pode ser definido no arquivo de configuração.</span><span class="sxs-lookup"><span data-stu-id="e582f-127">The value of this property can also be set in the configuration file.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt; BuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingParameterCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.IChannelFactory`1&lt;!!TChannel&gt; BuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.BasicHttpBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BuildChannelFactory(Of TChannel) (parameters As BindingParameterCollection) As IChannelFactory(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; override System::ServiceModel::Channels::IChannelFactory&lt;TChannel&gt; ^ BuildChannelFactory(System::ServiceModel::Channels::BindingParameterCollection ^ parameters);" />
      <MemberSignature Language="F#" Value="override this.BuildChannelFactory : System.ServiceModel.Channels.BindingParameterCollection -&gt; System.ServiceModel.Channels.IChannelFactory&lt;'Channel&gt;" Usage="basicHttpBinding.BuildChannelFactory parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="parameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">
          <span data-ttu-id="e582f-128">O tipo de canal que produz a fábrica de canais.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-128">The type of channel the channel factory produces.</span>
          </span>
        </typeparam>
        <param name="parameters">
          <span data-ttu-id="e582f-129">Especifica os requisitos para a fábrica de canais criada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-129">Specifies the requirements for the channel factory built.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e582f-130">Cria a pilha de fábricas de canais no cliente que cria um tipo de canal especificado e que satisfaz os recursos especificados por uma coleção de parâmetros de associação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-130">Builds the channel factory stack on the client that creates a specified type of channel and that satisfies the features specified by a collection of binding parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e582f-131">Um <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> do tipo <paramref name="TChannel" /> que satisfaz os recursos especificados pela coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-131">An <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <paramref name="TChannel" /> that satisfies the features specified by the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BypassProxyOnLocal">
      <MemberSignature Language="C#" Value="public bool BypassProxyOnLocal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BypassProxyOnLocal" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.BasicHttpBinding.BypassProxyOnLocal" />
      <MemberSignature Language="VB.NET" Value="Public Property BypassProxyOnLocal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BypassProxyOnLocal { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.BypassProxyOnLocal : bool with get, set" Usage="System.ServiceModel.BasicHttpBinding.BypassProxyOnLocal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e582f-132">Obtém ou define um valor que indica se os endereços locais devem ser ignorados no servidor proxy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-132">Gets or sets a value that indicates whether to bypass the proxy server for local addresses.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e582f-133">
            <see langword="true" /> para ignorar endereços locais no servidor proxy; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-133">
              <see langword="true" /> to bypass the proxy server for local addresses; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="e582f-134">O valor padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-134">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="e582f-135">Um recurso da Internet é local se ele tiver um endereço local.</span><span class="sxs-lookup"><span data-stu-id="e582f-135">An Internet resource is local if it has a local address.</span></span> <span data-ttu-id="e582f-136">Um endereço local é aquele que está no mesmo computador, a rede local ou da intranet e é identificado, sintaticamente, pela falta de um período (\.) como os URIs `http://webserver/` e `http://localhost/`.</span><span class="sxs-lookup"><span data-stu-id="e582f-136">A local address is one that is on same computer, the local LAN or intranet and is identified, syntactically, by the lack of a period (\.) as in the URIs `http://webserver/` and `http://localhost/`.</span></span>

<span data-ttu-id="e582f-137">Configuração de BypassProxyOnLocal propriedade determina se os pontos de extremidade configurado com o <xref:System.ServiceModel.BasicHttpBinding> usar o servidor proxy ao acessar recursos locais.</span><span class="sxs-lookup"><span data-stu-id="e582f-137">Setting the BypassProxyOnLocal property determines whether endpoints configured with the <xref:System.ServiceModel.BasicHttpBinding> use the proxy server when accessing local resources.</span></span>

<span data-ttu-id="e582f-138">Se for BypassProxyOnLocal `true`, as solicitações para recursos locais da Internet não usam o servidor proxy.</span><span class="sxs-lookup"><span data-stu-id="e582f-138">If BypassProxyOnLocal is `true`, requests to local Internet resources do not use the proxy server.</span></span> <span data-ttu-id="e582f-139">Use o nome de host (em vez de `localhost`) se você deseja que os clientes para passar por um proxy ao conversar com os serviços no mesmo computador, quando essa propriedade é definida como `true`.</span><span class="sxs-lookup"><span data-stu-id="e582f-139">Use the host name (rather than `localhost`) if you want clients to go through a proxy when talking to services on the same machine when this property is set to `true`.</span></span>

<span data-ttu-id="e582f-140">Quando for BypassProxyOnLocal `false`, todas as solicitações de Internet não localhost URIs são feitas por meio do servidor proxy.</span><span class="sxs-lookup"><span data-stu-id="e582f-140">When BypassProxyOnLocal is `false`, all Internet requests to non-localhost URIs are made through the proxy server.</span></span> <span data-ttu-id="e582f-141">Solicitações para URIs com localhost não usará o servidor proxy, independentemente da configuração BypassProxyOnLocal.</span><span class="sxs-lookup"><span data-stu-id="e582f-141">Requests to URIs with localhost will not use the proxy server regardless of the BypassProxyOnLocal setting.</span></span>
  
## Examples

<span data-ttu-id="e582f-142">O exemplo a seguir define essa propriedade para indicar que o proxy deve ser ignorado para recursos locais.</span><span class="sxs-lookup"><span data-stu-id="e582f-142">The following example sets this property to indicate that the proxy should be bypassed for local resources.</span></span>

```csharp
BasicHttpBinding binding = new BasicHttpBinding();
binding.BypassProxyOnLocal = true;
```

<span data-ttu-id="e582f-143">O valor dessa propriedade também pode ser definido no arquivo de configuração.</span><span class="sxs-lookup"><span data-stu-id="e582f-143">The value of this property can also be set in the configuration file.</span></span>

```xml
<configuration>
  <system.serviceModel>

    <bindings>
      <basicHttpBinding>
        <binding name="Binding1" 
                 bypassProxyOnLocal="true">
          <security mode="None" />
        </binding>
      </basicHttpBinding>
    </bindings>
  </system.serviceModel>

</configuration>
```

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBindingElements">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.BindingElementCollection CreateBindingElements ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.BindingElementCollection CreateBindingElements() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.BasicHttpBinding.CreateBindingElements" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateBindingElements () As BindingElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::Channels::BindingElementCollection ^ CreateBindingElements();" />
      <MemberSignature Language="F#" Value="override this.CreateBindingElements : unit -&gt; System.ServiceModel.Channels.BindingElementCollection" Usage="basicHttpBinding.CreateBindingElements " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.BindingElementCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e582f-144">Cria e retorna uma coleção ordenada de elementos de associação contidos na associação atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-144">Creates and returns an ordered collection of binding elements contained in the current binding.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e582f-145">O <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> que contém a pilha ordenada de elementos de associação descritos pelo <see cref="T:System.ServiceModel.BasicHttpBinding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-145">The <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> that contains the ordered stack of binding elements described by the <see cref="T:System.ServiceModel.BasicHttpBinding" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e582f-146">A ordem dos elementos de ligação é importante.</span><span class="sxs-lookup"><span data-stu-id="e582f-146">The order of the binding elements is important.</span></span> <span data-ttu-id="e582f-147">Ela reflete a ordem na qual os canais de transporte e protocolo são construídos e empilhados.</span><span class="sxs-lookup"><span data-stu-id="e582f-147">It reflects the order in which the protocol and transport channels are constructed and stacked.</span></span> <span data-ttu-id="e582f-148">Esta coleção de elementos de associação é uma nova coleção e pode ser modificada e, em seguida, usada para criar um <xref:System.ServiceModel.Channels.CustomBinding>.</span><span class="sxs-lookup"><span data-stu-id="e582f-148">This collection of binding elements is a new collection and can be modified and then used to create a <xref:System.ServiceModel.Channels.CustomBinding>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e582f-149">O exemplo a seguir cria uma coleção ordenada de elementos de associação na associação atual.</span><span class="sxs-lookup"><span data-stu-id="e582f-149">The following example creates an ordered collection of the binding elements in the current binding.</span></span>  
  
 [!code-csharp[S_UEBasicHttpBinding#26](~/samples/snippets/csharp/VS_Snippets_CFX/s_uebasichttpbinding/cs/client.cs#26)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableHttpCookieContainer">
      <MemberSignature Language="C#" Value="public bool EnableHttpCookieContainer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableHttpCookieContainer" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.BasicHttpBinding.EnableHttpCookieContainer" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableHttpCookieContainer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableHttpCookieContainer { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableHttpCookieContainer : bool with get, set" Usage="System.ServiceModel.BasicHttpBinding.EnableHttpCookieContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This property is obsolete. To enable Http CookieContainer, use the AllowCookies property instead.", false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e582f-150">Obtém ou define um valor que indica se o contêiner de cookies HTTP está habilitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-150">Gets or sets a value that indicates whether HTTP cookie container is enabled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e582f-151">
            <see langword="true" /> Se o contêiner de cookies HTTP estiver habilitado; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-151">
              <see langword="true" /> if HTTP cookie container is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnvelopeVersion">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EnvelopeVersion EnvelopeVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.EnvelopeVersion EnvelopeVersion" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.BasicHttpBinding.EnvelopeVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EnvelopeVersion As EnvelopeVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::EnvelopeVersion ^ EnvelopeVersion { System::ServiceModel::EnvelopeVersion ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EnvelopeVersion : System.ServiceModel.EnvelopeVersion" Usage="System.ServiceModel.BasicHttpBinding.EnvelopeVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EnvelopeVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e582f-152">Obtém a versão do SOAP usada para as mensagens processadas por essa associação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-152">Gets the version of SOAP that is used for messages that are processed by this binding.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e582f-153">O valor da <see cref="T:System.ServiceModel.EnvelopeVersion" /> que é usado com essa associação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-153">The value of the <see cref="T:System.ServiceModel.EnvelopeVersion" /> that is used with this binding.</span>
          </span>
          <span data-ttu-id="e582f-154">O valor é sempre SOAP 1.1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-154">The value is always SOAP 1.1.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks  

<span data-ttu-id="e582f-155">SOAP 1.1 é o único valor que pode ser usado com essa associação.</span><span class="sxs-lookup"><span data-stu-id="e582f-155">SOAP 1.1 is the only value that can be used with this binding.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostNameComparisonMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.HostNameComparisonMode HostNameComparisonMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.HostNameComparisonMode HostNameComparisonMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.BasicHttpBinding.HostNameComparisonMode" />
      <MemberSignature Language="VB.NET" Value="Public Property HostNameComparisonMode As HostNameComparisonMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::HostNameComparisonMode HostNameComparisonMode { System::ServiceModel::HostNameComparisonMode get(); void set(System::ServiceModel::HostNameComparisonMode value); };" />
      <MemberSignature Language="F#" Value="member this.HostNameComparisonMode : System.ServiceModel.HostNameComparisonMode with get, set" Usage="System.ServiceModel.BasicHttpBinding.HostNameComparisonMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.HostNameComparisonMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e582f-156">Obtém ou define um valor que indica se o nome do host é usado para acessar o serviço ao corresponder ao URI.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-156">Gets or sets a value that indicates whether the hostname is used to reach the service when matching the URI.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e582f-157">O <see cref="T:System.ServiceModel.HostNameComparisonMode" /> valor que indica se o nome do host é usado para acessar o serviço ao fazer a correspondência no URI.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-157">The <see cref="T:System.ServiceModel.HostNameComparisonMode" /> value that indicates whether the hostname is used to reach the service when matching on the URI.</span>
          </span>
          <span data-ttu-id="e582f-158">O valor padrão é <see cref="F:System.ServiceModel.HostNameComparisonMode.StrongWildcard" />, que ignora o nome do host na correspondência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-158">The default value is <see cref="F:System.ServiceModel.HostNameComparisonMode.StrongWildcard" />, which ignores the hostname in the match.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples

<span data-ttu-id="e582f-159">O exemplo a seguir define essa propriedade para indicar que uma correspondência exata é necessária.</span><span class="sxs-lookup"><span data-stu-id="e582f-159">The following example sets this property to indicate that an exact match is required.</span></span>

```csharp
BasicHttpBinding binding = new BasicHttpBinding();
binding.HostNameComparisonMode = HostNameComparisonMode.Exact;
```

<span data-ttu-id="e582f-160">O valor dessa propriedade também pode ser definido no arquivo de configuração.</span><span class="sxs-lookup"><span data-stu-id="e582f-160">The value of this property can also be set in the configuration file.</span></span>

```xml
<configuration>
  <system.serviceModel>

    <bindings>
      <basicHttpBinding>
        <binding name="Binding1"
                 hostNameComparisonMode ="Exact">
          <security mode="None" />
        </binding>
      </basicHttpBinding>
    </bindings>

  </system.serviceModel>

</configuration>
```

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxBufferPoolSize">
      <MemberSignature Language="C#" Value="public long MaxBufferPoolSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxBufferPoolSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.BasicHttpBinding.MaxBufferPoolSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxBufferPoolSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxBufferPoolSize { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxBufferPoolSize : int64 with get, set" Usage="System.ServiceModel.BasicHttpBinding.MaxBufferPoolSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.DefaultValue(524288)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e582f-161">Obtém ou define a quantidade máxima de memória, em bytes, alocada para uso do gerenciador dos buffers de mensagens que recebem mensagens do canal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-161">Gets or sets the maximum amount of memory, in bytes,  that is allocated for use by the manager of the message buffers that receive messages from the channel.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e582f-162">A quantidade máxima de memória, em bytes, disponível para uso do gerenciador de buffer de mensagem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-162">The maximum amount of memory, in bytes, available for use by the message buffer manager.</span>
          </span>
          <span data-ttu-id="e582f-163">O valor padrão é 524288 (0x80000) bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-163">The default value is 524288 (0x80000) bytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="e582f-164">O <xref:System.ServiceModel.Channels.BufferManager> minimiza o custo do uso de buffers por meio de um pool de buffers.</span><span class="sxs-lookup"><span data-stu-id="e582f-164">The <xref:System.ServiceModel.Channels.BufferManager> minimizes the cost of using buffers by using a buffer pool.</span></span> <span data-ttu-id="e582f-165">Buffers são necessários para processar as mensagens pelo serviço quando eles saírem do canal.</span><span class="sxs-lookup"><span data-stu-id="e582f-165">Buffers are required to process messages by the service when they come out of the channel.</span></span> <span data-ttu-id="e582f-166">Se não houver memória suficiente no pool de buffers para processar a carga de mensagem, o <xref:System.ServiceModel.Channels.BufferManager> deve alocar mais memória do heap CLR, o que aumenta a sobrecarga de coleta de lixo.</span><span class="sxs-lookup"><span data-stu-id="e582f-166">If there is not sufficient memory in the buffer pool to process the message load, the <xref:System.ServiceModel.Channels.BufferManager> must allocate additional memory from the CLR heap, which increases the garbage collection overhead.</span></span> <span data-ttu-id="e582f-167">Ampla alocação do heap de lixo do CLR é uma indicação de que o tamanho do pool de buffers é muito pequeno e que o desempenho pode ser melhorado com uma alocação maior aumentando o limite de MaxBufferPoolSize.</span><span class="sxs-lookup"><span data-stu-id="e582f-167">Extensive allocation from the CLR garbage heap is an indication that the buffer pool size is too small and that performance can be improved with a larger allocation by increasing the MaxBufferPoolSize limit.</span></span>

## Examples

<span data-ttu-id="e582f-168">O exemplo a seguir define essa propriedade para duas vezes o valor padrão.</span><span class="sxs-lookup"><span data-stu-id="e582f-168">The following example sets this property to twice the default value.</span></span>

```csharp
BasicHttpBinding binding = new BasicHttpBinding();
// Use double the default value
binding.MaxBufferPoolSize = 0x80000 * 2;
```

<span data-ttu-id="e582f-169">O valor dessa propriedade também pode ser definido no arquivo de configuração.</span><span class="sxs-lookup"><span data-stu-id="e582f-169">The value of this property can also be set in the configuration file.</span></span>

```xml
<configuration>
  <system.serviceModel>

    <bindings>
      <basicHttpBinding>
        <binding name="Binding1">

          <!-- set pool size to double default of 0x80000 -->
          maxBufferPoolSize = 0x100000

          <security mode="None" />
        </binding>
      </basicHttpBinding>
    </bindings>

  </system.serviceModel>

</configuration>
```

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxBufferSize">
      <MemberSignature Language="C#" Value="public int MaxBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.BasicHttpBinding.MaxBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxBufferSize : int with get, set" Usage="System.ServiceModel.BasicHttpBinding.MaxBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.DefaultValue(65536)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e582f-170">Obtém ou define o tamanho máximo, em bytes, para um buffer que recebe mensagens do canal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-170">Gets or sets the maximum size, in bytes, for a buffer that receives messages from the channel.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e582f-171">O tamanho máximo, em bytes, de um buffer que armazena as mensagens enquanto eles são processados para um ponto de extremidade configurado com essa associação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-171">The maximum size, in bytes, of a buffer that stores messages while they are processed for an endpoint configured with this binding.</span>
          </span>
          <span data-ttu-id="e582f-172">O valor padrão é 65.536 bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-172">The default value is 65,536 bytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="e582f-173">Se não houver memória suficiente no buffer para armazenar a mensagem enquanto ela é processada, mais memória deve ser alocada na heap de CLR, o que aumenta a sobrecarga de coleta de lixo.</span><span class="sxs-lookup"><span data-stu-id="e582f-173">If there is not sufficient memory in the buffer to store the message while it is processed, more memory must be allocated from the CLR heap, which increases the garbage collection overhead.</span></span> <span data-ttu-id="e582f-174">Ampla alocação do heap de lixo do CLR é uma indicação de que o tamanho do buffer de mensagem é muito pequeno e que o desempenho pode ser melhorado com uma alocação maior.</span><span class="sxs-lookup"><span data-stu-id="e582f-174">Extensive allocation from the CLR garbage heap is an indication that the message buffer size is too small and that performance can be improved with a larger allocation.</span></span>

<span data-ttu-id="e582f-175">O valor da propriedade MaxBufferSize e seu significado é diferente dependendo se as mensagens estão sendo armazenadas em buffer ou transmitidas no canal por meio do qual eles estão sendo recebidos:</span><span class="sxs-lookup"><span data-stu-id="e582f-175">The value of the MaxBufferSize property and its significance is different depending on whether the messages are being buffered or streamed on the channel through which they are being received:</span></span>

<span data-ttu-id="e582f-176">Para transportes em buffer, (<xref:System.ServiceModel.BasicHttpBinding.TransferMode> definido como <xref:System.ServiceModel.TransferMode.Buffered>).</span><span class="sxs-lookup"><span data-stu-id="e582f-176">For buffered transports, (<xref:System.ServiceModel.BasicHttpBinding.TransferMode> set to <xref:System.ServiceModel.TransferMode.Buffered>).</span></span> <span data-ttu-id="e582f-177">Esse valor é sempre igual ao especificado pelo <xref:System.ServiceModel.BasicHttpBinding.MaxReceivedMessageSize>.</span><span class="sxs-lookup"><span data-stu-id="e582f-177">This value is always equal to that specified by the <xref:System.ServiceModel.BasicHttpBinding.MaxReceivedMessageSize>.</span></span>

<span data-ttu-id="e582f-178">Para transportes de streaming (<xref:System.ServiceModel.BasicHttpBinding.TransferMode> definido como <xref:System.ServiceModel.TransferMode.Streamed>), somente os cabeçalhos SOAP devem ser armazenada em buffer para gerar a mensagem.</span><span class="sxs-lookup"><span data-stu-id="e582f-178">For streamed transports, (<xref:System.ServiceModel.BasicHttpBinding.TransferMode> set to <xref:System.ServiceModel.TransferMode.Streamed>), only the SOAP headers must be buffered to generate the message.</span></span> <span data-ttu-id="e582f-179">O corpo pode ser transmitido sob demanda.</span><span class="sxs-lookup"><span data-stu-id="e582f-179">The body can be streamed in on-demand.</span></span> <span data-ttu-id="e582f-180">Nesse caso, o MaxBufferSize é menor que ou igual a <xref:System.ServiceModel.BasicHttpBinding.MaxReceivedMessageSize>, onde <xref:System.ServiceModel.BasicHttpBinding.MaxReceivedMessageSize> limita o tamanho da mensagem geral (cabeçalhos e corpo) e MaxBufferSize limita somente o tamanho dos cabeçalhos SOAP.</span><span class="sxs-lookup"><span data-stu-id="e582f-180">In this case, MaxBufferSize is less than or equal to <xref:System.ServiceModel.BasicHttpBinding.MaxReceivedMessageSize>, where <xref:System.ServiceModel.BasicHttpBinding.MaxReceivedMessageSize> bounds the size of the overall message (headers and body) and MaxBufferSize bounds only the size of the SOAP headers.</span></span>

<span data-ttu-id="e582f-181">As limitações no tamanho do buffer definidas aqui são para otimizar o desempenho de troca de mensagens.</span><span class="sxs-lookup"><span data-stu-id="e582f-181">The limitations on buffer size set here are for optimizing the performance of message exchanges.</span></span> <span data-ttu-id="e582f-182">Se uma mensagem exceder o valor máximo definido para o buffer, ele não será removido.</span><span class="sxs-lookup"><span data-stu-id="e582f-182">If a message exceeds the maximum value set for the buffer, it is not dropped.</span></span> <span data-ttu-id="e582f-183">Em vez disso, mais memória é solicitada do heap de CLR e isso resulta em mais de coleta de lixo sobrecarga que o uso de buffers.</span><span class="sxs-lookup"><span data-stu-id="e582f-183">Instead, more memory is requested from the CLR heap and this incurs more garbage collection overhead than using the buffers.</span></span>

> [!NOTE]
> <span data-ttu-id="e582f-184">As configurações para MaxBufferSize e MaxReceivedMessageSize, são as configurações de comportamento locais.</span><span class="sxs-lookup"><span data-stu-id="e582f-184">The settings for MaxBufferSize and MaxReceivedMessageSize, are local behavioral settings.</span></span> <span data-ttu-id="e582f-185">Isso significa que eles não são transmitidos para outros pontos de extremidade nos metadados.</span><span class="sxs-lookup"><span data-stu-id="e582f-185">This means that they are not transmitted to other endpoints in metadata.</span></span> <span data-ttu-id="e582f-186">Se você gerar um proxy para um serviço com um tamanho máximo da mensagem de 2GB de metadados, o proxy ainda tem um valor padrão de 64K.</span><span class="sxs-lookup"><span data-stu-id="e582f-186">If you generate a proxy to a service with a maximum message size of 2GB from metadata, the proxy still has a default value of 64K.</span></span> <span data-ttu-id="e582f-187">Isso deixa o controle dos limites apropriados para a mensagem e tamanho do buffer de mensagem no escopo do grupo local Administradores.</span><span class="sxs-lookup"><span data-stu-id="e582f-187">This leaves control of the appropriate bounds for message and message buffer size in the scope of local administrators.</span></span>
  
## Examples


<span data-ttu-id="e582f-188">O exemplo a seguir define **MaxBufferSize** para 1.000.000 bytes.</span><span class="sxs-lookup"><span data-stu-id="e582f-188">The following example sets **MaxBufferSize** to 1,000,000 bytes.</span></span>

```csharp
BasicHttpBinding binding = new BasicHttpBinding();
            
// set to one million
binding.MaxBufferSize = 1000000;
```

<span data-ttu-id="e582f-189">O valor dessa propriedade também pode ser definido no arquivo de configuração.</span><span class="sxs-lookup"><span data-stu-id="e582f-189">The value of this property can also be set in the configuration file.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxReceivedMessageSize">
      <MemberSignature Language="C#" Value="public long MaxReceivedMessageSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxReceivedMessageSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.BasicHttpBinding.MaxReceivedMessageSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxReceivedMessageSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxReceivedMessageSize { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxReceivedMessageSize : int64 with get, set" Usage="System.ServiceModel.BasicHttpBinding.MaxReceivedMessageSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.DefaultValue(65536)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e582f-190">Obtém ou define o tamanho máximo, em bytes, para uma mensagem que pode ser recebida em um canal configurado com esta associação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-190">Gets or sets the maximum size, in bytes, for a message that can be received on a channel configured with this binding.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e582f-191">O tamanho máximo, em bytes, para uma mensagem recebida que é processada pela associação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-191">The maximum size, in bytes, for a message that is processed by the binding.</span>
          </span>
          <span data-ttu-id="e582f-192">O valor padrão é 65.536 bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-192">The default value is 65,536 bytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="e582f-193">O tamanho das mensagens que podem ser recebidos durante a transmissão por serviços usando o BasicHttpBinding é limitado pela quantidade de memória alocada para cada mensagem.</span><span class="sxs-lookup"><span data-stu-id="e582f-193">The size of the messages that can be received on the wire by services using the BasicHttpBinding is bounded by the amount of memory allocated for each message.</span></span> <span data-ttu-id="e582f-194">Este limite no tamanho da mensagem se destina a limitar a exposição a ataques do estilo do DoS.</span><span class="sxs-lookup"><span data-stu-id="e582f-194">This bound on message size is intended to limit exposure to DoS-style attacks.</span></span>

<span data-ttu-id="e582f-195">Há também uma <xref:System.ServiceModel.BasicHttpBinding.MaxBufferSize> propriedade no <xref:System.ServiceModel.BasicHttpBinding>:</span><span class="sxs-lookup"><span data-stu-id="e582f-195">There is also a <xref:System.ServiceModel.BasicHttpBinding.MaxBufferSize> property on the <xref:System.ServiceModel.BasicHttpBinding>:</span></span>

<span data-ttu-id="e582f-196">Para transportes em buffer, (<xref:System.ServiceModel.BasicHttpBinding.TransferMode> definido como <xref:System.ServiceModel.TransferMode.Buffered>).</span><span class="sxs-lookup"><span data-stu-id="e582f-196">For buffered transports, (<xref:System.ServiceModel.BasicHttpBinding.TransferMode> set to <xref:System.ServiceModel.TransferMode.Buffered>).</span></span> <span data-ttu-id="e582f-197">Esse valor é sempre igual ao especificado pelo MaxReceivedMessageSize.</span><span class="sxs-lookup"><span data-stu-id="e582f-197">This value is always equal to that specified by the MaxReceivedMessageSize.</span></span>

<span data-ttu-id="e582f-198">Para transportes de streaming (<xref:System.ServiceModel.BasicHttpBinding.TransferMode> definido como <xref:System.ServiceModel.TransferMode.Streamed>), somente os cabeçalhos SOAP devem ser armazenada em buffer para gerar a mensagem.</span><span class="sxs-lookup"><span data-stu-id="e582f-198">For streamed transports (<xref:System.ServiceModel.BasicHttpBinding.TransferMode> set to <xref:System.ServiceModel.TransferMode.Streamed>), only the SOAP headers must be buffered to generate the message.</span></span> <span data-ttu-id="e582f-199">O corpo pode ser transmitido sob demanda.</span><span class="sxs-lookup"><span data-stu-id="e582f-199">The body can be streamed in on-demand.</span></span> <span data-ttu-id="e582f-200">Nesse caso, <xref:System.ServiceModel.BasicHttpBinding.MaxBufferSize> é menor ou igual a MaxReceivedMessageSize, onde MaxReceivedMessageSize limita o tamanho da mensagem geral (cabeçalhos e corpo) e <xref:System.ServiceModel.BasicHttpBinding.MaxBufferSize> limita o tamanho dos cabeçalhos SOAP.</span><span class="sxs-lookup"><span data-stu-id="e582f-200">In this case, <xref:System.ServiceModel.BasicHttpBinding.MaxBufferSize> is less than or equal to MaxReceivedMessageSize, where MaxReceivedMessageSize bounds the size of the overall message (headers and body) and <xref:System.ServiceModel.BasicHttpBinding.MaxBufferSize> bounds the size of the SOAP headers.</span></span>

## Examples

<span data-ttu-id="e582f-201">O exemplo a seguir define MaxReceivedMessageSize como 1.000.000 bytes.</span><span class="sxs-lookup"><span data-stu-id="e582f-201">The following example sets MaxReceivedMessageSize to 1,000,000 bytes.</span></span>

```csharp
BasicHttpBinding binding = new BasicHttpBinding();

// Use double the default value
binding.MaxReceivedMessageSize = 65536 * 2;
```

<span data-ttu-id="e582f-202">O valor dessa propriedade também pode ser definido no arquivo de configuração.</span><span class="sxs-lookup"><span data-stu-id="e582f-202">The value of this property can also be set in the configuration file.</span></span>

```xml
<configuration>
  <system.serviceModel>

    <bindings>
      <basicHttpBinding>
        <binding name="Binding1"
                 maxReceivedMessageSize = "1000000">
          <security mode="None" />
        </binding>
      </basicHttpBinding>
    </bindings>

  </system.serviceModel>

</configuration>
```

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e582f-203">O valor é menor que zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-203">The value is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MessageEncoding">
      <MemberSignature Language="C#" Value="public System.ServiceModel.WSMessageEncoding MessageEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.WSMessageEncoding MessageEncoding" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.BasicHttpBinding.MessageEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property MessageEncoding As WSMessageEncoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::WSMessageEncoding MessageEncoding { System::ServiceModel::WSMessageEncoding get(); void set(System::ServiceModel::WSMessageEncoding value); };" />
      <MemberSignature Language="F#" Value="member this.MessageEncoding : System.ServiceModel.WSMessageEncoding with get, set" Usage="System.ServiceModel.BasicHttpBinding.MessageEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.WSMessageEncoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e582f-204">Obtém ou define se MTOM ou Text é usado para codificar mensagens SOAP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-204">Gets or sets whether MTOM or Text is used to encode SOAP messages.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e582f-205">O valor de <see cref="T:System.ServiceModel.WSMessageEncoding" /> que indica se MTOM ou texto/XML é usado para codificar mensagens SOAP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-205">The value of <see cref="T:System.ServiceModel.WSMessageEncoding" /> that indicates whether MTOM or Text/XML is used to encode SOAP messages.</span>
          </span>
          <span data-ttu-id="e582f-206">O valor padrão é <see cref="F:System.ServiceModel.WSMessageEncoding.Text" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-206">The default value is <see cref="F:System.ServiceModel.WSMessageEncoding.Text" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e582f-207">O exemplo a seguir define MessageEncoding como texto.</span><span class="sxs-lookup"><span data-stu-id="e582f-207">The following example sets MessageEncoding to Text.</span></span>  
  
 [!code-csharp[S_UEBasicHttpBinding#19](~/samples/snippets/csharp/VS_Snippets_CFX/s_uebasichttpbinding/cs/client.cs#19)]  
  
 <span data-ttu-id="e582f-208">O valor dessa propriedade também pode ser definido no arquivo de configuração.</span><span class="sxs-lookup"><span data-stu-id="e582f-208">The value of this property can also be set in the configuration file.</span></span>  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProxyAddress">
      <MemberSignature Language="C#" Value="public Uri ProxyAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ProxyAddress" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.BasicHttpBinding.ProxyAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property ProxyAddress As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ ProxyAddress { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ProxyAddress : Uri with get, set" Usage="System.ServiceModel.BasicHttpBinding.ProxyAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.UriTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e582f-209">Obtém ou define o endereço do URI do proxy HTTP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-209">Gets or sets the URI address of the HTTP proxy.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e582f-210">Um <see cref="T:System.Uri" /> que serve como o endereço do proxy HTTP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-210">A <see cref="T:System.Uri" /> that serves as the address of the HTTP proxy.</span>
          </span>
          <span data-ttu-id="e582f-211">O valor padrão é null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-211">The default value is null.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="e582f-212">Se o <xref:System.ServiceModel.BasicHttpBinding.UseDefaultWebProxy> é definido como `true`, o endereço padrão é usado e o valor do conjunto de ProxyAddress será ignorado.</span><span class="sxs-lookup"><span data-stu-id="e582f-212">If the <xref:System.ServiceModel.BasicHttpBinding.UseDefaultWebProxy> is set to `true`, the default address is used and the value of the ProxyAddress set is ignored.</span></span>

## Examples

<span data-ttu-id="e582f-213">O exemplo a seguir define ProxyAddress às configurações do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="e582f-213">The following example sets ProxyAddress to application settings.</span></span>

```csharp
// Get base address from app settings in configuration
Uri baseAddress = new Uri(ConfigurationManager.AppSettings["baseAddress"]);

BasicHttpBinding binding = new BasicHttpBinding();

binding.ProxyAddress = baseAddress;
```

<span data-ttu-id="e582f-214">O valor dessa propriedade também pode ser definido no arquivo de configuração.</span><span class="sxs-lookup"><span data-stu-id="e582f-214">The value of this property can also be set in the configuration file.</span></span>

```xml
<configuration>
  <system.serviceModel>

    <bindings>
      <basicHttpBinding>
        <binding name="Binding1"
                 proxyAddress = "http://myProxy">
          <security mode="None" />
        </binding>
      </basicHttpBinding>
    </bindings>

  </system.serviceModel>

</configuration>
```

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReaderQuotas">
      <MemberSignature Language="C#" Value="public System.Xml.XmlDictionaryReaderQuotas ReaderQuotas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDictionaryReaderQuotas ReaderQuotas" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.BasicHttpBinding.ReaderQuotas" />
      <MemberSignature Language="VB.NET" Value="Public Property ReaderQuotas As XmlDictionaryReaderQuotas" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlDictionaryReaderQuotas ^ ReaderQuotas { System::Xml::XmlDictionaryReaderQuotas ^ get(); void set(System::Xml::XmlDictionaryReaderQuotas ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ReaderQuotas : System.Xml.XmlDictionaryReaderQuotas with get, set" Usage="System.ServiceModel.BasicHttpBinding.ReaderQuotas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReaderQuotas</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e582f-215">Obtém ou define as restrições na complexidade das mensagens SOAP que podem ser processadas por pontos de extremidade configurados com essa associação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-215">Gets or sets constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e582f-216">O <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> que especifica as restrições de complexidade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-216">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that specifies the complexity constraints.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="e582f-217">As restrições de complexidade fornecem proteção contra ataques negação de serviço (DOS) que tentam usar a complexidade de mensagem para prender o ponto de extremidade de recursos de processamento.</span><span class="sxs-lookup"><span data-stu-id="e582f-217">The complexity constraints provide protection from denial of service (DOS) attacks that attempt to use message complexity to tie up endpoint processing resources.</span></span> <span data-ttu-id="e582f-218">Outras restrições de complexidade incluem itens como uma profundidade máxima do elemento e um comprimento máximo para o conteúdo de cadeia de caracteres dentro da mensagem.</span><span class="sxs-lookup"><span data-stu-id="e582f-218">Other complexity constraints include items such as a maximum element depth and a maximum length for string content within the message.</span></span>

## Examples

<span data-ttu-id="e582f-219">O exemplo a seguir define ReaderQuotas às configurações do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="e582f-219">The following example sets ReaderQuotas to application settings.</span></span>

```csharp
BasicHttpBinding binding = new BasicHttpBinding();
XmlDictionaryReaderQuotas readerQuotas = new XmlDictionaryReaderQuotas();
readerQuotas.MaxArrayLength = 25 * 1024;
        
binding.ReaderQuotas = readerQuotas;
```

<span data-ttu-id="e582f-220">O valor dessa propriedade também pode ser definido no arquivo de configuração.</span><span class="sxs-lookup"><span data-stu-id="e582f-220">The value of this property can also be set in the configuration file.</span></span>

```xml
<configuration>
  <system.serviceModel>

    <bindings>
      <basicHttpBinding>
        <binding name="Binding1">
          <readerQuotas maxBytesPerRead ="1000" 
                        maxDepth="100"/>

          <security mode="None" />
        </binding>
      </basicHttpBinding>
    </bindings>

  </system.serviceModel>

</configuration>
```

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scheme">
      <MemberSignature Language="C#" Value="public override string Scheme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Scheme" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.BasicHttpBinding.Scheme" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Scheme As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Scheme { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Scheme : string" Usage="System.ServiceModel.BasicHttpBinding.Scheme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e582f-221">Obtém o esquema de transporte de URI para os canais e os ouvintes que estão configurados com essa associação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-221">Gets the URI transport scheme for the channels and listeners that are configured with this binding.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e582f-222">"https" se o modo de segurança no elemento de associação de transporte é definido como <see cref="F:System.ServiceModel.BasicHttpSecurityMode.Transport" /> ou <see cref="F:System.ServiceModel.BasicHttpSecurityMode.TransportWithMessageCredential" />; "http" caso contrário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-222">"https" if the security mode in the transport binding element is set to <see cref="F:System.ServiceModel.BasicHttpSecurityMode.Transport" /> or <see cref="F:System.ServiceModel.BasicHttpSecurityMode.TransportWithMessageCredential" />; "http" otherwise.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples

<span data-ttu-id="e582f-223">O exemplo a seguir obtém o esquema atual.</span><span class="sxs-lookup"><span data-stu-id="e582f-223">The following example gets the current Scheme.</span></span>

```csharp
BasicHttpBinding binding = new BasicHttpBinding();
string thisScheme = binding.Scheme;
```

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Security">
      <MemberSignature Language="C#" Value="public System.ServiceModel.BasicHttpSecurity Security { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.BasicHttpSecurity Security" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.BasicHttpBinding.Security" />
      <MemberSignature Language="VB.NET" Value="Public Property Security As BasicHttpSecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::BasicHttpSecurity ^ Security { System::ServiceModel::BasicHttpSecurity ^ get(); void set(System::ServiceModel::BasicHttpSecurity ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Security : System.ServiceModel.BasicHttpSecurity with get, set" Usage="System.ServiceModel.BasicHttpBinding.Security" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.BasicHttpSecurity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e582f-224">Obtém o tipo de segurança usado com esta associação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-224">Gets the type of security used with this binding.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e582f-225">O <see cref="T:System.ServiceModel.BasicHttpSecurity" /> que é usado com esta associação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-225">The <see cref="T:System.ServiceModel.BasicHttpSecurity" /> that is used with this binding.</span>
          </span>
          <span data-ttu-id="e582f-226">O valor padrão é <see cref="F:System.ServiceModel.BasicHttpSecurityMode.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-226">The default value is <see cref="F:System.ServiceModel.BasicHttpSecurityMode.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e582f-227">Por padrão, a mensagem SOAP não é protegida e o cliente não está autenticado.</span><span class="sxs-lookup"><span data-stu-id="e582f-227">By default, the SOAP message is not secured and the client is not authenticated.</span></span> <span data-ttu-id="e582f-228">Para usar um tipo diferente do padrão de segurança, use o <xref:System.ServiceModel.BasicHttpBinding.%23ctor%28System.ServiceModel.BasicHttpSecurityMode%29> construtor.</span><span class="sxs-lookup"><span data-stu-id="e582f-228">To use a non-default type of security, use the <xref:System.ServiceModel.BasicHttpBinding.%23ctor%28System.ServiceModel.BasicHttpSecurityMode%29> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e582f-229">O exemplo a seguir obtém o `Security` propriedade.</span><span class="sxs-lookup"><span data-stu-id="e582f-229">The following example gets the `Security` property.</span></span>  
  
 [!code-csharp[S_UEBasicHttpBinding#23](~/samples/snippets/csharp/VS_Snippets_CFX/s_uebasichttpbinding/cs/client.cs#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeEnableHttpCookieContainer">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeEnableHttpCookieContainer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeEnableHttpCookieContainer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.BasicHttpBinding.ShouldSerializeEnableHttpCookieContainer" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeEnableHttpCookieContainer () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeEnableHttpCookieContainer();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeEnableHttpCookieContainer : unit -&gt; bool" Usage="basicHttpBinding.ShouldSerializeEnableHttpCookieContainer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e582f-230">Indica se o contêiner de cookies http deve habilitar a serialização.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-230">Indicates whether the http cookie container should enable the serialization.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e582f-231">
            <see langword="true" /> se o contêiner de cookies http deve habilitar a serialização; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-231">
              <see langword="true" /> if the http cookie container should enable the serialization; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeReaderQuotas">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeReaderQuotas ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeReaderQuotas() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.BasicHttpBinding.ShouldSerializeReaderQuotas" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeReaderQuotas () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeReaderQuotas();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeReaderQuotas : unit -&gt; bool" Usage="basicHttpBinding.ShouldSerializeReaderQuotas " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e582f-232">Retorna se os valores de restrição impostos à complexidade da estrutura de mensagem SOAP devem ser serializados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-232">Returns whether the constraint values placed on the complexity of SOAP message structure should be serialized.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e582f-233">
            <see langword="true" /> se as cotas do leitor devem ser serializadas; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-233">
              <see langword="true" /> if reader quotas should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeSecurity">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeSecurity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeSecurity() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.BasicHttpBinding.ShouldSerializeSecurity" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeSecurity () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeSecurity();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeSecurity : unit -&gt; bool" Usage="basicHttpBinding.ShouldSerializeSecurity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e582f-234">Retornado se as configurações de segurança devem ser serializadas com base em se a serialização já ocorre, por exemplo, no nível de mensagem ou de transporte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-234">Returns whether security settings should be serialized based upon whether serialization already occurs, for example at the message or transport level.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e582f-235">
            <see langword="true" /> se a segurança deve ser serializada; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-235">
              <see langword="true" /> if security should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeTextEncoding">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeTextEncoding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeTextEncoding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.BasicHttpBinding.ShouldSerializeTextEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeTextEncoding () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeTextEncoding();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeTextEncoding : unit -&gt; bool" Usage="basicHttpBinding.ShouldSerializeTextEncoding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e582f-236">Retorna se as configurações para codificação de texto devem ser serializadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-236">Returns whether settings for text encoding should be serialized.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e582f-237">
            <see langword="true" /> se a codificação de texto precisar ser serializada, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-237">
              <see langword="true" /> if text encoding should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously">
      <MemberSignature Language="C#" Value="bool System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.BasicHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ReceiveSynchronously As Boolean Implements IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberSignature Language="C++ CLI" Value="property bool System::ServiceModel::Channels::IBindingRuntimePreferences::ReceiveSynchronously { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e582f-238">Obtém um valor que indica se as solicitações de entrada são tratadas de forma síncrona ou assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-238">Gets a value that indicates whether incoming requests are handled synchronously or asynchronously.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e582f-239">Sempre <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-239">Always <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples

<span data-ttu-id="e582f-240">Este exemplo obtém o valor de ReceiveSynchronously.</span><span class="sxs-lookup"><span data-stu-id="e582f-240">This example gets the ReceiveSynchronously value.</span></span>

```csharp
BasicHttpBinding binding = new BasicHttpBinding();
IBindingRuntimePreferences s = (binding as IBindingRuntimePreferences);
bool receiveSynchronously = s.ReceiveSynchronously;
```

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding TextEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding TextEncoding" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.BasicHttpBinding.TextEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property TextEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ TextEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TextEncoding : System.Text.Encoding with get, set" Usage="System.ServiceModel.BasicHttpBinding.TextEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.EncodingConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e582f-241">Obtém ou define a codificação de caracteres usada para o texto da mensagem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-241">Gets or sets the character encoding that is used for the message text.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e582f-242">O <see cref="T:System.Text.Encoding" /> que indica a codificação de caracteres que é usado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-242">The <see cref="T:System.Text.Encoding" /> that indicates the character encoding that is used.</span>
          </span>
          <span data-ttu-id="e582f-243">O padrão é <see cref="T:System.Text.UTF8Encoding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-243">The default is <see cref="T:System.Text.UTF8Encoding" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples

<span data-ttu-id="e582f-244">O exemplo a seguir define TextEncoding como <xref:System.Text.Encoding.Unicode?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e582f-244">The following example sets TextEncoding to <xref:System.Text.Encoding.Unicode?displayProperty=nameWithType>.</span></span>

```csharp
BasicHttpBinding binding = new BasicHttpBinding();
binding.TextEncoding = System.Text.Encoding.Unicode;
```

<span data-ttu-id="e582f-245">O valor dessa propriedade também pode ser definido no arquivo de configuração.</span><span class="sxs-lookup"><span data-stu-id="e582f-245">The value of this property can also be set in the configuration file.</span></span>

```xml
<configuration>
  <system.serviceModel>

    <bindings>
      <basicHttpBinding>
        <binding name="Binding1"
          textEncoding = "UnicodeFffeTextEncoding">

          <security mode="None" />
        </binding>
      </basicHttpBinding>
    </bindings>
  </system.serviceModel>

</configuration>
```

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransferMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.TransferMode TransferMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.TransferMode TransferMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.BasicHttpBinding.TransferMode" />
      <MemberSignature Language="VB.NET" Value="Public Property TransferMode As TransferMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::TransferMode TransferMode { System::ServiceModel::TransferMode get(); void set(System::ServiceModel::TransferMode value); };" />
      <MemberSignature Language="F#" Value="member this.TransferMode : System.ServiceModel.TransferMode with get, set" Usage="System.ServiceModel.BasicHttpBinding.TransferMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.TransferMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e582f-246">Obtém ou define um valor que indica se as mensagens são enviadas em buffer ou transmitidas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-246">Gets or sets a value that indicates whether messages are sent buffered or streamed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e582f-247">O <see cref="T:System.ServiceModel.TransferMode" /> que indica se as mensagens são enviadas em buffer ou transmitidas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-247">The <see cref="T:System.ServiceModel.TransferMode" /> that indicates whether messages are sent buffered or streamed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples

<span data-ttu-id="e582f-248">O exemplo a seguir define TransferMode como <xref:System.ServiceModel.TransferMode.Streamed>.</span><span class="sxs-lookup"><span data-stu-id="e582f-248">The following example sets TransferMode to <xref:System.ServiceModel.TransferMode.Streamed>.</span></span>

```csharp
BasicHttpBinding binding = new BasicHttpBinding();
binding.TransferMode = TransferMode.Streamed;
```

<span data-ttu-id="e582f-249">O valor dessa propriedade também pode ser definido no arquivo de configuração.</span><span class="sxs-lookup"><span data-stu-id="e582f-249">The value of this property can also be set in the configuration file.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseDefaultWebProxy">
      <MemberSignature Language="C#" Value="public bool UseDefaultWebProxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultWebProxy" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.BasicHttpBinding.UseDefaultWebProxy" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDefaultWebProxy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDefaultWebProxy { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDefaultWebProxy : bool with get, set" Usage="System.ServiceModel.BasicHttpBinding.UseDefaultWebProxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e582f-250">Obtém ou define um valor que indica se o proxy HTTP configurado automaticamente do sistema deve ser usado, se disponível.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-250">Gets or sets a value that indicates whether the auto-configured HTTP proxy of the system should be used, if available.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e582f-251">
            <see langword="true" /> Se o proxy HTTP configurado automaticamente do sistema deve ser usado, se disponível; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-251">
              <see langword="true" /> if the auto-configured HTTP proxy of the system should be used, if available; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="e582f-252">O valor padrão é <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e582f-252">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="e582f-253">É um erro para que isso seja `true` e <xref:System.ServiceModel.BasicHttpBinding.ProxyAddress> seja não nulo.</span><span class="sxs-lookup"><span data-stu-id="e582f-253">It is an error for this to be `true` and <xref:System.ServiceModel.BasicHttpBinding.ProxyAddress> to be non-null.</span></span>

## Examples

<span data-ttu-id="e582f-254">Este exemplo define o valor de UseDefaultWebProxy para `false`.</span><span class="sxs-lookup"><span data-stu-id="e582f-254">This example sets the value of UseDefaultWebProxy to `false`.</span></span>

```csharp
BasicHttpBinding binding = new BasicHttpBinding();
binding.UseDefaultWebProxy = false;
```

<span data-ttu-id="e582f-255">O valor dessa propriedade também pode ser definido no arquivo de configuração.</span><span class="sxs-lookup"><span data-stu-id="e582f-255">The value of this property can also be set in the configuration file.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>