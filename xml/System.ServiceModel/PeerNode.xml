<Type Name="PeerNode" FullName="System.ServiceModel.PeerNode">
  <Metadata><Meta Name="ms.openlocfilehash" Value="edcfab01ad9b7d8e19ed4d5b707fa45a28545b75" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37612241" /></Metadata><TypeSignature Language="C#" Value="public sealed class PeerNode : System.ServiceModel.IOnlineStatus" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PeerNode extends System.Object implements class System.ServiceModel.IOnlineStatus" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.PeerNode" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PeerNode&#xA;Implements IOnlineStatus" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeerNode sealed : System::ServiceModel::IOnlineStatus" />
  <TypeSignature Language="F#" Value="type PeerNode = class&#xA;    interface IOnlineStatus" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.IOnlineStatus</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="6cb33-101">Define a instância de um nó par usado por um aplicativo que participa da malha ponto a ponto específica.</span><span class="sxs-lookup"><span data-stu-id="6cb33-101">Defines the instance of of a peer node used by an application participating in a specific peer mesh.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cb33-102">Um nó par pode hospedar vários canais de mesmo nível dentro da malha, desde que eles compartilham um nome comum de URI e o host no <xref:System.ServiceModel.EndpointAddress> fornecido para a associação para cada canal.</span><span class="sxs-lookup"><span data-stu-id="6cb33-102">A peer node can host multiple peer channels within the mesh as long as they share a common URI and host name in the <xref:System.ServiceModel.EndpointAddress> supplied to the binding for each channel.</span></span>  
  
 <span data-ttu-id="6cb33-103">Se dois ou mais canais de mesmo nível definidos para um nó par forem criados com ligações separadas, em seguida, a <xref:System.ServiceModel.NetPeerTcpBinding.Port%2A>, <xref:System.ServiceModel.NetPeerTcpBinding.ListenIPAddress%2A>, e <xref:System.ServiceModel.NetPeerTcpBinding.Resolver%2A> propriedades devem ser idênticas em todas as associações.</span><span class="sxs-lookup"><span data-stu-id="6cb33-103">If two or more peer channels defined for a peer node are created with separate bindings, then the <xref:System.ServiceModel.NetPeerTcpBinding.Port%2A>, <xref:System.ServiceModel.NetPeerTcpBinding.ListenIPAddress%2A>, and <xref:System.ServiceModel.NetPeerTcpBinding.Resolver%2A> properties must be identical on all bindings.</span></span>  
  
 <span data-ttu-id="6cb33-104">Se uma associação de canal subsequente for criada após o primeiro para a mesma instância de nó par, em seguida, a <xref:System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize%2A> propriedade sobre isso e as próximas associações devem ser menor ou igual ao valor de <xref:System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize%2A> propriedade conforme definido na primeira associação de canal.</span><span class="sxs-lookup"><span data-stu-id="6cb33-104">If a subsequent channel binding is created after the first one for the same peer node instance, then the <xref:System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize%2A> property on this and subsequent bindings must be less than or equal to the value of <xref:System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize%2A> property as set on the first channel binding.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="IsOnline">
      <MemberSignature Language="C#" Value="public bool IsOnline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOnline" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.PeerNode.IsOnline" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOnline As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOnline { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsOnline : bool" Usage="System.ServiceModel.PeerNode.IsOnline" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ServiceModel.IOnlineStatus.IsOnline</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6cb33-105">Obtém um valor que indica se o nó par está online e se é capaz de enviar mensagens para nós vizinhos na malha ponto a ponto.</span><span class="sxs-lookup"><span data-stu-id="6cb33-105">Gets a value indicating whether the peer node is online and able to send messages to neighboring nodes in the peer mesh.</span></span></summary>
        <value><span data-ttu-id="6cb33-106"><see langword="true" /> Se o nó par está online; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6cb33-106"><see langword="true" /> if the peer node is online; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cb33-107">"Online" indica que um nó par tem nós vizinhos disponíveis.</span><span class="sxs-lookup"><span data-stu-id="6cb33-107">"Online" indicates that a peer node has available neighbor nodes.</span></span> <span data-ttu-id="6cb33-108">"Offline" indica que um nó par não tem disponíveis vizinhos.</span><span class="sxs-lookup"><span data-stu-id="6cb33-108">"Offline" indicates that a peer node has no available neighbors.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MessagePropagationFilter">
      <MemberSignature Language="C#" Value="public System.ServiceModel.PeerMessagePropagationFilter MessagePropagationFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.PeerMessagePropagationFilter MessagePropagationFilter" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.PeerNode.MessagePropagationFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property MessagePropagationFilter As PeerMessagePropagationFilter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::PeerMessagePropagationFilter ^ MessagePropagationFilter { System::ServiceModel::PeerMessagePropagationFilter ^ get(); void set(System::ServiceModel::PeerMessagePropagationFilter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MessagePropagationFilter : System.ServiceModel.PeerMessagePropagationFilter with get, set" Usage="System.ServiceModel.PeerNode.MessagePropagationFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.PeerMessagePropagationFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6cb33-109">Obtém e define um filtro personalizado para mensagens recebidas pelo canal par.</span><span class="sxs-lookup"><span data-stu-id="6cb33-109">Gets and sets a custom filter for messages received over the peer channel.</span></span></summary>
        <value><span data-ttu-id="6cb33-110"><see cref="T:System.ServiceModel.PeerMessagePropagationFilter" /> que contém um filtro de mensagem personalizada.</span><span class="sxs-lookup"><span data-stu-id="6cb33-110"><see cref="T:System.ServiceModel.PeerMessagePropagationFilter" /> that contains a custom message filter.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cb33-111">O filtro de mensagem deve ser um tipo derivado e deve ser reconvertido para esse tipo de utilizar qualquer recurso personalizado definido nela.</span><span class="sxs-lookup"><span data-stu-id="6cb33-111">The message filter must be a derived type and should be recast to that type to use any custom features defined on it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6cb33-112">Nenhum canal é aberto para escuta.</span><span class="sxs-lookup"><span data-stu-id="6cb33-112">No channel is open for listening.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Offline">
      <MemberSignature Language="C#" Value="public event EventHandler Offline;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Offline" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.PeerNode.Offline" />
      <MemberSignature Language="VB.NET" Value="Public Event Offline As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ Offline;" />
      <MemberSignature Language="F#" Value="member this.Offline : EventHandler " Usage="member this.Offline : System.EventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ServiceModel.IOnlineStatus.Offline</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6cb33-113">Sinalizará quando o nó par ficar offline da malha ponto a ponto.</span><span class="sxs-lookup"><span data-stu-id="6cb33-113">Signals when the peer node goes offline from the peer mesh.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cb33-114">Um par offline tiver nenhum nó vizinho dentro da malha ponto a ponto para o qual ele pode se conectar.</span><span class="sxs-lookup"><span data-stu-id="6cb33-114">An offline peer node has no neighbor nodes within the peer mesh to which it can connect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Online">
      <MemberSignature Language="C#" Value="public event EventHandler Online;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Online" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.PeerNode.Online" />
      <MemberSignature Language="VB.NET" Value="Public Event Online As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ Online;" />
      <MemberSignature Language="F#" Value="member this.Online : EventHandler " Usage="member this.Online : System.EventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ServiceModel.IOnlineStatus.Online</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6cb33-115">Sinalizará quando um nó par ficar online dentro da malha ponto a ponto.</span><span class="sxs-lookup"><span data-stu-id="6cb33-115">Signals when a peer node comes online within the peer mesh.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cb33-116">Um nó de colegas online tem pelo menos um nó vizinho dentro da malha ponto a ponto para o qual ele está conectado.</span><span class="sxs-lookup"><span data-stu-id="6cb33-116">An online peer node has at least one neighbor node within the peer mesh to which it is connected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Port">
      <MemberSignature Language="C#" Value="public int Port { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Port" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.PeerNode.Port" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Port As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Port { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Port : int" Usage="System.ServiceModel.PeerNode.Port" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6cb33-117">Obtém a porta de rede na qual o nó par está escutando.</span><span class="sxs-lookup"><span data-stu-id="6cb33-117">Gets the network port on which the peer node is listening.</span></span></summary>
        <value><span data-ttu-id="6cb33-118"><see cref="T:System.Int32" /> que especifica a porta de rede na qual o nó par está escutando.</span><span class="sxs-lookup"><span data-stu-id="6cb33-118"><see cref="T:System.Int32" /> that specifies the network port on which the peer node is listening.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6cb33-119">Nenhum canal é aberto para escuta.</span><span class="sxs-lookup"><span data-stu-id="6cb33-119">No channel is open for listening.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RefreshConnection">
      <MemberSignature Language="C#" Value="public void RefreshConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RefreshConnection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerNode.RefreshConnection" />
      <MemberSignature Language="VB.NET" Value="Public Sub RefreshConnection ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RefreshConnection();" />
      <MemberSignature Language="F#" Value="member this.RefreshConnection : unit -&gt; unit" Usage="peerNode.RefreshConnection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6cb33-120">Atualiza a conexão com a malha ponto a ponto.</span><span class="sxs-lookup"><span data-stu-id="6cb33-120">Refreshes the connection with the peer mesh.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6cb33-121">Nenhum canal é aberto para escuta.</span><span class="sxs-lookup"><span data-stu-id="6cb33-121">No channel is open for listening.</span></span></exception>
        <exception cref="T:System.TimeoutException"><span data-ttu-id="6cb33-122">A operação de atualização atingiu o tempo limite.</span><span class="sxs-lookup"><span data-stu-id="6cb33-122">The refresh operation timed out.</span></span></exception>
        <exception cref="T:System.ServiceModel.CommunicationException"><span data-ttu-id="6cb33-123">Ocorreu um erro de rede durante a tentativa de atualização.</span><span class="sxs-lookup"><span data-stu-id="6cb33-123">A network error occurred during the refresh attempt.</span></span></exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectAbortedException"><span data-ttu-id="6cb33-124">A conexão foi anulada durante a tentativa de atualização.</span><span class="sxs-lookup"><span data-stu-id="6cb33-124">The connection aborted during the refresh attempt.</span></span></exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException"><span data-ttu-id="6cb33-125">A conexão falhou durante a tentativa de atualização.</span><span class="sxs-lookup"><span data-stu-id="6cb33-125">The connection faulted during the refresh attempt.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerNode.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="peerNode.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6cb33-126">Fornece uma representação de cadeia de caracteres de um nó par.</span><span class="sxs-lookup"><span data-stu-id="6cb33-126">Provides a string representation of a peer node.</span></span></summary>
        <returns><span data-ttu-id="6cb33-127">Valor <see cref="T:System.String" /> que conterá a ID de malha do nó par se a ID de malha estiver definida; caso contrário, retornará o tipo.</span><span class="sxs-lookup"><span data-stu-id="6cb33-127"><see cref="T:System.String" /> value that contains the mesh ID of the peer node if the mesh ID is set; otherwise, it returns the type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>