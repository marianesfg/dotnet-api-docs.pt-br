<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="EndpointIdentity.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9575d09f-9d72-4690-889e-b83c405ca4563f59815b9ac3e590686fd707bf2479c1e82eea02.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3f59815b9ac3e590686fd707bf2479c1e82eea02</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">254e16ae65e82f4aa59360cd8572b36b6b5b2f80</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/05/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.EndpointIdentity">
          <source>An abstract class that when implemented provides an identity that enables the authentication of an endpoint by clients that exchange messages with it.</source>
          <target state="translated">Uma classe abstrata que fornece uma identidade quando implementada que permite a autenticação de um ponto de extremidade por clientes que trocam mensagens com ele.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.EndpointIdentity">
          <source>The value of the identity for an endpoint can be set with constructors of <ph id="ph1">&lt;xref:System.ServiceModel.EndpointAddress&gt;</ph>, where its value can also be accessed as a read-only <ph id="ph2">&lt;xref:System.ServiceModel.EndpointAddress.Identity%2A&gt;</ph> property.</source>
          <target state="translated">O valor de identidade para um ponto de extremidade pode ser definido com construtores de <ph id="ph1">&lt;xref:System.ServiceModel.EndpointAddress&gt;</ph>, onde o valor também pode ser acessado como somente leitura <ph id="ph2">&lt;xref:System.ServiceModel.EndpointAddress.Identity%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.#ctor">
          <source>Creates an empty <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointIdentity" /&gt;</ph> instance.</source>
          <target state="translated">Cria uma instância <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointIdentity" /&gt;</ph> vazia.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateDnsIdentity(System.String)">
          <source>The name for the DNS identity.</source>
          <target state="translated">O nome para a identidade do DNS.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateDnsIdentity(System.String)">
          <source>Creates a DNS identity with a specified DNS name.</source>
          <target state="translated">Cria uma identidade DNS com um nome DNS especificado.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateDnsIdentity(System.String)">
          <source>A DNS <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointIdentity" /&gt;</ph> associated with the specified <ph id="ph2">&lt;paramref name="dnsName" /&gt;</ph>.</source>
          <target state="translated">Um DNS <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointIdentity" /&gt;</ph> associado ao <ph id="ph2">&lt;paramref name="dnsName" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.EndpointIdentity.CreateDnsIdentity(System.String)">
          <source>A secure <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> client that connects to an endpoint with this identity verifies that the claims presented by the server contain a DNS claim that represents this identity.</source>
          <target state="translated">Seguro <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> cliente que se conecta a um ponto de extremidade com esta identidade verifica que as declarações apresentadas pelo servidor contém uma declaração DNS que representa essa identidade.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.EndpointIdentity.CreateDnsIdentity(System.String)">
          <source>This static method creates an instance of <ph id="ph1">&lt;xref:System.ServiceModel.DnsEndpointIdentity&gt;</ph> by calling its constructor <ph id="ph2">&lt;xref:System.ServiceModel.DnsEndpointIdentity.%23ctor%2A&gt;</ph>.</source>
          <target state="translated">Esse método estático cria uma instância de <ph id="ph1">&lt;xref:System.ServiceModel.DnsEndpointIdentity&gt;</ph> chamando seu construtor <ph id="ph2">&lt;xref:System.ServiceModel.DnsEndpointIdentity.%23ctor%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.EndpointIdentity.CreateDnsIdentity(System.String)">
          <source>The following code shows how to call this method.</source>
          <target state="translated">O código a seguir mostra como chamar esse método.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateDnsIdentity(System.String)">
          <source><ph id="ph1">&lt;paramref name="dnsName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dnsName" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateIdentity(System.IdentityModel.Claims.Claim)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Claims.Claim" /&gt;</ph> used to create the new identity.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.IdentityModel.Claims.Claim" /&gt;</ph> usado para criar a nova identidade.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateIdentity(System.IdentityModel.Claims.Claim)">
          <source>Creates an identity with the specified claim.</source>
          <target state="translated">Cria uma identidade com a declaração especificada.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateIdentity(System.IdentityModel.Claims.Claim)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointIdentity" /&gt;</ph> associated with the specified <ph id="ph2">&lt;paramref name="identity" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointIdentity" /&gt;</ph> associado ao <ph id="ph2">&lt;paramref name="identity" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.EndpointIdentity.CreateIdentity(System.IdentityModel.Claims.Claim)">
          <source>A secure <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> client that connects to an endpoint with this identity verifies that the claims presented by the server contain the identity claim used to construct this identity.</source>
          <target state="translated">Seguro <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> cliente que se conecta a um ponto de extremidade com esta identidade verifica que as declarações apresentadas pelo servidor contém a declaração de identidade usada para construir essa identidade.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.EndpointIdentity.CreateIdentity(System.IdentityModel.Claims.Claim)">
          <source>This method can create an identity of type <ph id="ph1">&lt;xref:System.ServiceModel.DnsEndpointIdentity&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.SpnEndpointIdentity&gt;</ph>, <ph id="ph3">&lt;xref:System.ServiceModel.UpnEndpointIdentity&gt;</ph>, or <ph id="ph4">&lt;xref:System.ServiceModel.RsaEndpointIdentity&gt;</ph>.</source>
          <target state="translated">Esse método pode criar uma identidade de tipo <ph id="ph1">&lt;xref:System.ServiceModel.DnsEndpointIdentity&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.SpnEndpointIdentity&gt;</ph>, <ph id="ph3">&lt;xref:System.ServiceModel.UpnEndpointIdentity&gt;</ph>, ou <ph id="ph4">&lt;xref:System.ServiceModel.RsaEndpointIdentity&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.EndpointIdentity.CreateIdentity(System.IdentityModel.Claims.Claim)">
          <source>The following code shows how to call this method.</source>
          <target state="translated">O código a seguir mostra como chamar esse método.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateIdentity(System.IdentityModel.Claims.Claim)">
          <source><ph id="ph1">&lt;paramref name="identity" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="identity" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.EndpointIdentity">
          <source>Creates an RSA identity.</source>
          <target state="translated">Cria uma identidade RSA.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.EndpointIdentity">
          <source>A secure <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> client that connects to an endpoint with this identity verifies that the claims presented by the server contain a claim that contains the RSA public key used to construct this identity.</source>
          <target state="translated">Seguro <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> cliente que se conecta a um ponto de extremidade com esta identidade verifica que as declarações apresentadas pelo servidor contém uma declaração que contém a chave pública RSA usada para construir essa identidade.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.EndpointIdentity">
          <source>One of these static methods creates an instance of <ph id="ph1">&lt;xref:System.ServiceModel.RsaEndpointIdentity&gt;</ph> by calling its constructor <ph id="ph2">&lt;xref:System.ServiceModel.RsaEndpointIdentity.%23ctor%2A&gt;</ph>.</source>
          <target state="translated">Um dos seguintes métodos estáticos cria uma instância de <ph id="ph1">&lt;xref:System.ServiceModel.RsaEndpointIdentity&gt;</ph> chamando seu construtor <ph id="ph2">&lt;xref:System.ServiceModel.RsaEndpointIdentity.%23ctor%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateRsaIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /&gt;</ph> that contains the certificate for the RSA identity.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /&gt;</ph> que contém o certificado para a identidade RSA.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateRsaIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2)">
          <source>Creates an RSA identity with the specified X.509 certificate.</source>
          <target state="translated">Cria uma identidade RSA com o certificado X.509 especificado.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateRsaIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2)">
          <source>An RSA <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointIdentity" /&gt;</ph> associated with the specified <ph id="ph2">&lt;paramref name="certificate" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointIdentity" /&gt;</ph> RSA associado ao <ph id="ph2">&lt;paramref name="certificate" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.EndpointIdentity.CreateRsaIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2)">
          <source>A secure <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> client that connects to an endpoint with this identity verifies that the claims presented by the server contain a claim that contains the RSA public key obtained from the certificate used to construct this identity.</source>
          <target state="translated">Seguro <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> cliente que se conecta a um ponto de extremidade com esta identidade verifica que as declarações apresentadas pelo servidor contém uma declaração que contém a chave pública RSA obtida o certificado usado para construir essa identidade.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.EndpointIdentity.CreateRsaIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2)">
          <source>This static method creates an instance of <ph id="ph1">&lt;xref:System.ServiceModel.RsaEndpointIdentity&gt;</ph> by calling its constructor, <ph id="ph2">&lt;xref:System.ServiceModel.RsaEndpointIdentity.%23ctor%2A&gt;</ph>.</source>
          <target state="translated">Esse método estático cria uma instância de <ph id="ph1">&lt;xref:System.ServiceModel.RsaEndpointIdentity&gt;</ph> chamando seu construtor <ph id="ph2">&lt;xref:System.ServiceModel.RsaEndpointIdentity.%23ctor%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.EndpointIdentity.CreateRsaIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2)">
          <source>The following code shows how to call this method.</source>
          <target state="translated">O código a seguir mostra como chamar esse método.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateRsaIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2)">
          <source><ph id="ph1">&lt;paramref name="certificate" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="certificate" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateRsaIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2)">
          <source><ph id="ph1">&lt;paramref name="certificate" /&gt;</ph> is not an RSA certificate.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="certificate" /&gt;</ph> não é um certificado RSA.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateRsaIdentity(System.String)">
          <source>The public key for the RSA identity.</source>
          <target state="translated">A chave pública para a identidade RSA.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateRsaIdentity(System.String)">
          <source>Creates an RSA identity with the specified public key.</source>
          <target state="translated">Cria uma identidade RSA com a chave pública especificada.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateRsaIdentity(System.String)">
          <source>An RSA <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointIdentity" /&gt;</ph> associated with the specified <ph id="ph2">&lt;paramref name="publicKey" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointIdentity" /&gt;</ph> RSA associado ao <ph id="ph2">&lt;paramref name="publicKey" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.EndpointIdentity.CreateRsaIdentity(System.String)">
          <source>A secure <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> client that connects to an endpoint with this identity verifies that the claims presented by the server contain a claim that contains the RSA public key used to construct this identity.</source>
          <target state="translated">Seguro <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> cliente que se conecta a um ponto de extremidade com esta identidade verifica que as declarações apresentadas pelo servidor contém uma declaração que contém a chave pública RSA usada para construir essa identidade.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.EndpointIdentity.CreateRsaIdentity(System.String)">
          <source>This static method creates an instance of <ph id="ph1">&lt;xref:System.ServiceModel.RsaEndpointIdentity&gt;</ph> by calling its constructor, <ph id="ph2">&lt;xref:System.ServiceModel.RsaEndpointIdentity.%23ctor%2A&gt;</ph>.</source>
          <target state="translated">Esse método estático cria uma instância de <ph id="ph1">&lt;xref:System.ServiceModel.RsaEndpointIdentity&gt;</ph> chamando seu construtor <ph id="ph2">&lt;xref:System.ServiceModel.RsaEndpointIdentity.%23ctor%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateRsaIdentity(System.String)">
          <source><ph id="ph1">&lt;paramref name="publicKey" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="publicKey" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateSpnIdentity(System.String)">
          <source>The name for the SPN identity.</source>
          <target state="translated">O nome da identidade do SPN.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateSpnIdentity(System.String)">
          <source>Creates a server principal name (SPN) identity with a specified name.</source>
          <target state="translated">Cria uma identidade de SPN (nome da entidade de servidor) com um nome especificado.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateSpnIdentity(System.String)">
          <source>An SPN <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointIdentity" /&gt;</ph> associated with the specified <ph id="ph2">&lt;paramref name="spnName" /&gt;</ph>.</source>
          <target state="translated">Um SPN <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointIdentity" /&gt;</ph> associado ao <ph id="ph2">&lt;paramref name="spnName" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.EndpointIdentity.CreateSpnIdentity(System.String)">
          <source>A secure <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> client that connects to an endpoint with this identity uses the SPN when performing SSPI authentication with the endpoint.</source>
          <target state="translated">Seguro <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> cliente que se conecta a um ponto de extremidade com esta identidade usa o SPN ao executar a autenticação de SSPI com o ponto de extremidade.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.EndpointIdentity.CreateSpnIdentity(System.String)">
          <source>This static method creates an instance of <ph id="ph1">&lt;xref:System.ServiceModel.SpnEndpointIdentity&gt;</ph> by calling its constructor, <ph id="ph2">&lt;xref:System.ServiceModel.SpnEndpointIdentity.%23ctor%2A&gt;</ph>, using <ph id="ph3">`spnName`</ph> as the input parameter.</source>
          <target state="translated">Esse método estático cria uma instância de <ph id="ph1">&lt;xref:System.ServiceModel.SpnEndpointIdentity&gt;</ph> chamando seu construtor <ph id="ph2">&lt;xref:System.ServiceModel.SpnEndpointIdentity.%23ctor%2A&gt;</ph>usando <ph id="ph3">`spnName`</ph> como o parâmetro de entrada.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.EndpointIdentity.CreateSpnIdentity(System.String)">
          <source>If <ph id="ph1">`spnName`</ph> is specified with an empty string, authentication falls back from Kerberos to NTLM if possible.</source>
          <target state="translated">Se <ph id="ph1">`spnName`</ph> for especificado com uma cadeia de caracteres vazia, autenticação reverterá do Kerberos para NTLM se possível.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.EndpointIdentity.CreateSpnIdentity(System.String)">
          <source>If <ph id="ph1">&lt;xref:System.ServiceModel.Security.WindowsClientCredential.AllowNtlm%2A&gt;</ph> is <ph id="ph2">`false`</ph>, authentication fails.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.ServiceModel.Security.WindowsClientCredential.AllowNtlm%2A&gt;</ph> é <ph id="ph2">`false`</ph>, a autenticação falhará.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.EndpointIdentity.CreateSpnIdentity(System.String)">
          <source>The following code shows how to call this method.</source>
          <target state="translated">O código a seguir mostra como chamar esse método.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateSpnIdentity(System.String)">
          <source><ph id="ph1">&lt;paramref name="spnName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="spnName" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateUpnIdentity(System.String)">
          <source>The name for the UPN identity.</source>
          <target state="translated">O nome da identidade do UPN.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateUpnIdentity(System.String)">
          <source>Creates a user principal name (UPN) identity with a specified name.</source>
          <target state="translated">Cria uma identidade e nome UPN com um nome especificado.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateUpnIdentity(System.String)">
          <source>A UPN <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointIdentity" /&gt;</ph> associated with the specified <ph id="ph2">&lt;paramref name="upnName" /&gt;</ph>.</source>
          <target state="translated">Um UPN <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointIdentity" /&gt;</ph> associado ao <ph id="ph2">&lt;paramref name="upnName" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.EndpointIdentity.CreateUpnIdentity(System.String)">
          <source>A secure <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> client that connects to an endpoint with this identity uses the UPN when performing SSPI authentication with the endpoint.</source>
          <target state="translated">Seguro <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> cliente que se conecta a um ponto de extremidade com esta identidade usa o UPN ao executar a autenticação de SSPI com o ponto de extremidade.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.EndpointIdentity.CreateUpnIdentity(System.String)">
          <source>This static method creates an instance of <ph id="ph1">&lt;xref:System.ServiceModel.UpnEndpointIdentity&gt;</ph> by calling its constructor, <ph id="ph2">&lt;xref:System.ServiceModel.UpnEndpointIdentity.%23ctor%2A&gt;</ph>, using <ph id="ph3">`upnName`</ph> as the input parameter.</source>
          <target state="translated">Esse método estático cria uma instância de <ph id="ph1">&lt;xref:System.ServiceModel.UpnEndpointIdentity&gt;</ph> chamando seu construtor <ph id="ph2">&lt;xref:System.ServiceModel.UpnEndpointIdentity.%23ctor%2A&gt;</ph>usando <ph id="ph3">`upnName`</ph> como o parâmetro de entrada.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.EndpointIdentity.CreateUpnIdentity(System.String)">
          <source>If <ph id="ph1">`upnName`</ph> is specified with an empty string, authentication falls back from Kerberos to NTLM if possible.</source>
          <target state="translated">Se <ph id="ph1">`upnName`</ph> for especificado com uma cadeia de caracteres vazia, autenticação reverterá do Kerberos para NTLM se possível.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.EndpointIdentity.CreateUpnIdentity(System.String)">
          <source>If <ph id="ph1">&lt;xref:System.ServiceModel.Security.WindowsClientCredential.AllowNtlm%2A&gt;</ph> is <ph id="ph2">`false`</ph>, <ph id="ph3">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> makes a best-effort to throw an exception if NTLM is used.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.ServiceModel.Security.WindowsClientCredential.AllowNtlm%2A&gt;</ph> é <ph id="ph2">`false`</ph>, <ph id="ph3">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> faz um esforço para lançar uma exceção se NTLM é usado.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.EndpointIdentity.CreateUpnIdentity(System.String)">
          <source>Note that setting this property to <ph id="ph1">`false`</ph> may not prevent NTLM credentials from being sent over the wire.</source>
          <target state="translated">Observe que a definição dessa propriedade <ph id="ph1">`false`</ph> talvez não impeçam que as credenciais do NTLM seja enviado pela conexão.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.EndpointIdentity.CreateUpnIdentity(System.String)">
          <source>The following code shows how to call this method.</source>
          <target state="translated">O código a seguir mostra como chamar esse método.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateUpnIdentity(System.String)">
          <source><ph id="ph1">&lt;paramref name="upnName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="upnName" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.EndpointIdentity">
          <source>Creates an X509Certificate identity.</source>
          <target state="translated">Cria uma identidade X509Certificate.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.EndpointIdentity">
          <source>Choose between these two constructors based on whether you have supporting certificates.</source>
          <target state="translated">Escolha entre esses dois construtores com base em se você tem o suporte de certificados.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.EndpointIdentity">
          <source>A secure <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> client that connects to an endpoint with this identity verifies that the claims presented by the server contain the claim that contains the thumbprint of the certificate used to construct this identity.</source>
          <target state="translated">Um cliente <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> seguro que se conecta a um ponto de extremidade com esta identidade verifica se as declarações apresentadas pelo servidor contém uma afirmação que contém a impressão digital do certificado usado para construir essa identidade.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateX509CertificateIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /&gt;</ph> that contains the certificate for the identity.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /&gt;</ph> que contém o certificado para a identidade.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateX509CertificateIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2)">
          <source>Creates an X509Certificate identity with the specified certificate.</source>
          <target state="translated">Cria uma identidade X509Certificate com o certificado especificado.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateX509CertificateIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2)">
          <source>An X509Certificate <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointIdentity" /&gt;</ph> associated with the specified <ph id="ph2">&lt;paramref name="certificate" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointIdentity" /&gt;</ph> X509Certificate associado ao <ph id="ph2">&lt;paramref name="certificate" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.EndpointIdentity.CreateX509CertificateIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2)">
          <source>A secure <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> client that connects to an endpoint with this identity verifies that the claims presented by the server contain the claim that contains the thumbprint of the certificate used to construct this identity.</source>
          <target state="translated">Um cliente <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> seguro que se conecta a um ponto de extremidade com esta identidade verifica se as declarações apresentadas pelo servidor contém uma afirmação que contém a impressão digital do certificado usado para construir essa identidade.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.EndpointIdentity.CreateX509CertificateIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2)">
          <source>This <ph id="ph1">`static`</ph> method creates an instance of <ph id="ph2">&lt;xref:System.ServiceModel.X509CertificateEndpointIdentity&gt;</ph> by calling its constructor, <ph id="ph3">&lt;xref:System.ServiceModel.X509CertificateEndpointIdentity.%23ctor%2A&gt;</ph>, using <ph id="ph4">`certificate`</ph> as the input parameter.</source>
          <target state="translated">Isso <ph id="ph1">`static`</ph> método cria uma instância de <ph id="ph2">&lt;xref:System.ServiceModel.X509CertificateEndpointIdentity&gt;</ph> chamando seu construtor <ph id="ph3">&lt;xref:System.ServiceModel.X509CertificateEndpointIdentity.%23ctor%2A&gt;</ph>usando <ph id="ph4">`certificate`</ph> como o parâmetro de entrada.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.EndpointIdentity.CreateX509CertificateIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2)">
          <source>The following code shows how to call this method.</source>
          <target state="translated">O código a seguir mostra como chamar esse método.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateX509CertificateIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2)">
          <source><ph id="ph1">&lt;paramref name="certificate" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="certificate" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateX509CertificateIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /&gt;</ph> that contains the primary certificate for the identity.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /&gt;</ph> que contém o certificado primário para a identidade.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateX509CertificateIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /&gt;</ph> that contains the supporting certificates for the identity.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /&gt;</ph> que contém os certificados de suporte para a identidade.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateX509CertificateIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
          <source>Creates an X509Certificate identity with the specified primary and supporting certificates.</source>
          <target state="translated">Cria uma identidade X509Certificate com os certificados primário e de suporte especificados.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateX509CertificateIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
          <source>A secure <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> client that connects to an endpoint with this identity verifies that the claims presented by the server contain the claim that contains the thumbprint of the certificate used to construct this identity.</source>
          <target state="translated">Um cliente <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> seguro que se conecta a um ponto de extremidade com esta identidade verifica se as declarações apresentadas pelo servidor contém uma afirmação que contém a impressão digital do certificado usado para construir essa identidade.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateX509CertificateIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
          <source>An X509Certificate <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointIdentity" /&gt;</ph> associated with the specified <ph id="ph2">&lt;paramref name="primaryCertificate" /&gt;</ph> and <ph id="ph3">&lt;paramref name="supportingCertificates." /&gt;</ph></source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointIdentity" /&gt;</ph> X509Certificate associado aos <ph id="ph2">&lt;paramref name="primaryCertificate" /&gt;</ph> e <ph id="ph3">&lt;paramref name="supportingCertificates." /&gt;</ph> especificados</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.EndpointIdentity.CreateX509CertificateIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
          <source>This static method creates an instance of <ph id="ph1">&lt;xref:System.ServiceModel.X509CertificateEndpointIdentity&gt;</ph> by calling its constructor, <ph id="ph2">&lt;xref:System.ServiceModel.X509CertificateEndpointIdentity.%23ctor%2A&gt;</ph>, using <ph id="ph3">`primaryCertificate`</ph> and <ph id="ph4">`supportingCertificates`</ph> as input parameters.</source>
          <target state="translated">Esse método estático cria uma instância de <ph id="ph1">&lt;xref:System.ServiceModel.X509CertificateEndpointIdentity&gt;</ph> chamando seu construtor <ph id="ph2">&lt;xref:System.ServiceModel.X509CertificateEndpointIdentity.%23ctor%2A&gt;</ph>usando <ph id="ph3">`primaryCertificate`</ph> e <ph id="ph4">`supportingCertificates`</ph> como parâmetros de entrada.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateX509CertificateIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
          <source><ph id="ph1">&lt;paramref name="primaryCertificate" /&gt;</ph> or <ph id="ph2">&lt;paramref name="supportingCertificates" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="primaryCertificate" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="supportingCertificates" /&gt;</ph> é <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.Equals(System.Object)">
          <source>Returns a value that determines whether a specified object is equal to the current identity object or if they have equal security properties.</source>
          <target state="translated">Retorna um valor que determina se um objeto especificado é igual ao objeto de identidade atual ou se eles têm propriedades de segurança iguais.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified object <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> is equivalent to the current identity or contains the same security properties; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o objeto especificado <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> for equivalente à identidade atual ou contém as mesmas propriedades de segurança; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.GetHashCode">
          <source>Provides a hash code for the current instance of the identity.</source>
          <target state="translated">Fornece um código hash para a instância atual da identidade.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.GetHashCode">
          <source>The hash code for the current identity.</source>
          <target state="translated">O código hash da identidade atual.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.EndpointIdentity.IdentityClaim">
          <source>Gets the identity claim that corresponds to the identity.</source>
          <target state="translated">Obtém a declaração de identidade que corresponde à identidade.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.EndpointIdentity.IdentityClaim">
          <source>The <ph id="ph1">&lt;see cref="T:System.IdentityModel.Claims.Claim" /&gt;</ph> that represents the identity claim.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.IdentityModel.Claims.Claim" /&gt;</ph> que representa a declaração de identidade.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.EndpointIdentity.IdentityClaim">
          <source>Clients that authenticate the server should verify that the claims that represent the server contain the identity claim provided by the <ph id="ph1">`EndpointIdentity`</ph>.</source>
          <target state="translated">Clientes que autenticam o servidor devem verificar se as declarações que representam o servidor contêm a declaração de identidade fornecida pelo <ph id="ph1">`EndpointIdentity`</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.EndpointIdentity">
          <source>Initializes an <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointIdentity" /&gt;</ph>.</source>
          <target state="translated">Inicializa um <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointIdentity" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.Initialize(System.IdentityModel.Claims.Claim)">
          <source>Initializes an <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointIdentity" /&gt;</ph> with the specified claim.</source>
          <target state="translated">Inicializa um <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointIdentity" /&gt;</ph> com a declaração especificada.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.EndpointIdentity.Initialize(System.IdentityModel.Claims.Claim)">
          <source>This method is called by the constructors of all the classes derived from <ph id="ph1">&lt;xref:System.ServiceModel.EndpointIdentity.Initialize%2A&gt;</ph>).</source>
          <target state="translated">Este método é chamado pelos construtores de todas as classes derivadas de <ph id="ph1">&lt;xref:System.ServiceModel.EndpointIdentity.Initialize%2A&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.Initialize(System.IdentityModel.Claims.Claim,System.Collections.Generic.IEqualityComparer{System.IdentityModel.Claims.Claim})">
          <source>Initializes an <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointIdentity" /&gt;</ph> with the specified claim and an interface and compares equality.</source>
          <target state="translated">Inicializa um <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointIdentity" /&gt;</ph> com a declaração especificada e uma interface e compara a igualdade entre elas.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.ToString">
          <source>Returns the identity.</source>
          <target state="translated">Retorna a identidade.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.ToString">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> of the form "identity(string)" where string = <ph id="ph2">&lt;see cref="P:System.ServiceModel.EndpointIdentity.IdentityClaim" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> do formulário “identity(string)” em que string = <ph id="ph2">&lt;see cref="P:System.ServiceModel.EndpointIdentity.IdentityClaim" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>