<Type Name="ConcurrencyMode" FullName="System.ServiceModel.ConcurrencyMode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5a1b1516b1eb9ad2e3072372fb6887da9290a394" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36411797" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum ConcurrencyMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ConcurrencyMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.ConcurrencyMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum ConcurrencyMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class ConcurrencyMode" />
  <TypeSignature Language="F#" Value="type ConcurrencyMode = " />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
      <span data-ttu-id="35047-101">Especifica se uma classe de serviço dá suporte a modos de operação single-thread ou multithread.</span>
      <span class="sxs-lookup">
        <span data-stu-id="35047-101">Specifies whether a service class supports single-threaded or multi-threaded modes of operation.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35047-102"><xref:System.ServiceModel.ConcurrencyMode> é usado em conjunto com o <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A> propriedade para especificar se uma classe de serviço oferece suporte a modos de thread único ou vários threads de operação.</span><span class="sxs-lookup"><span data-stu-id="35047-102"><xref:System.ServiceModel.ConcurrencyMode> is used in conjunction with the <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A> property to specify whether a service class supports single-threaded or multi-threaded modes of operation.</span></span> <span data-ttu-id="35047-103">Uma operação de thread único pode ser reentrante ou não reentrante.</span><span class="sxs-lookup"><span data-stu-id="35047-103">A single-threaded operation can be either reentrant or non-reentrant.</span></span>  
  
 <span data-ttu-id="35047-104">A tabela a seguir mostra quando o Windows Communication Foundation (WCF) permite uma operação a ser chamado enquanto outro está em andamento, dependendo do <xref:System.ServiceModel.ConcurrencyMode>.</span><span class="sxs-lookup"><span data-stu-id="35047-104">The following table shows when Windows Communication Foundation (WCF) permits an operation to be invoked while another one is in progress, depending upon the <xref:System.ServiceModel.ConcurrencyMode>.</span></span>  
  
|<span data-ttu-id="35047-105">Valor de ConcurrencyMode</span><span class="sxs-lookup"><span data-stu-id="35047-105">ConcurrencyMode Value</span></span>|<span data-ttu-id="35047-106">Uma nova operação pode ser invocada?</span><span class="sxs-lookup"><span data-stu-id="35047-106">Can a new operation be invoked?</span></span>|  
|---------------------------|-------------------------------------|  
|<span data-ttu-id="35047-107">Simples</span><span class="sxs-lookup"><span data-stu-id="35047-107">Single</span></span>|<span data-ttu-id="35047-108">Nunca.</span><span class="sxs-lookup"><span data-stu-id="35047-108">Never.</span></span>|  
|<span data-ttu-id="35047-109">Reentrante</span><span class="sxs-lookup"><span data-stu-id="35047-109">Reentrant</span></span>|<span data-ttu-id="35047-110">Apenas ao chamar outro serviço ou um retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="35047-110">Only while invoking another service or a callback.</span></span>|  
|<span data-ttu-id="35047-111">Múltiplo</span><span class="sxs-lookup"><span data-stu-id="35047-111">Multiple</span></span>|<span data-ttu-id="35047-112">Sempre.</span><span class="sxs-lookup"><span data-stu-id="35047-112">Always.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="35047-113">O exemplo de código a seguir demonstra a diferença entre usar reentrante, único e vários.</span><span class="sxs-lookup"><span data-stu-id="35047-113">The following code example demonstrates the different between using Single, Reentrant, and Multiple.</span></span> <span data-ttu-id="35047-114">Este exemplo não é compilado sem uma implementação real por trás dele, mas demonstram o tipo de threading garante que torna o WCF e o que isso significa para o código de operação.</span><span class="sxs-lookup"><span data-stu-id="35047-114">This sample does not compile without a real implementation behind it, but does demonstrate the kind of threading guarantees that WCF makes and what that means for your operation code.</span></span>  
  
 [!code-csharp[C_BestPractices-Concurrency#1](~/samples/snippets/csharp/VS_Snippets_CFX/c_bestpractices-concurrency/cs/reentrantandmultiple.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Multiple">
      <MemberSignature Language="C#" Value="Multiple" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.ConcurrencyMode Multiple = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.ConcurrencyMode.Multiple" />
      <MemberSignature Language="VB.NET" Value="Multiple" />
      <MemberSignature Language="C++ CLI" Value="Multiple" />
      <MemberSignature Language="F#" Value="Multiple = 2" Usage="System.ServiceModel.ConcurrencyMode.Multiple" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ConcurrencyMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="35047-115">A instância do serviço é multithread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35047-115">The service instance is multi-threaded.</span>
          </span>
          <span data-ttu-id="35047-116">Nenhuma garantia de sincronização é feita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35047-116">No synchronization guarantees are made.</span>
          </span>
          <span data-ttu-id="35047-117">Como outros threads podem alterar o objeto de serviço a qualquer momento, você deve tratar a sincronização e consistência de estado o tempo todo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35047-117">Because other threads can change your service object at any time, you must handle synchronization and state consistency at all times.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Reentrant">
      <MemberSignature Language="C#" Value="Reentrant" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.ConcurrencyMode Reentrant = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.ConcurrencyMode.Reentrant" />
      <MemberSignature Language="VB.NET" Value="Reentrant" />
      <MemberSignature Language="C++ CLI" Value="Reentrant" />
      <MemberSignature Language="F#" Value="Reentrant = 1" Usage="System.ServiceModel.ConcurrencyMode.Reentrant" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ConcurrencyMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="35047-118">A instância de serviço é single-thread e aceita chamadas reentrantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35047-118">The service instance is single-threaded and accepts reentrant calls.</span>
          </span>
          <span data-ttu-id="35047-119">O serviço reentrante aceita chamadas quando você chama outro serviço, portanto, é sua responsabilidade manter o estado de seu objeto consistente antes dos textos explicativos e você deve confirmar se os dados de local da operação são válidos após os textos explicativos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35047-119">The reentrant service accepts calls when you call another service; it is therefore your responsibility to leave your object state consistent before callouts and you must confirm that operation-local data is valid after callouts.</span>
          </span>
          <span data-ttu-id="35047-120">Observe que a instância do serviço é desbloqueada somente chamando outro serviço em um canal do WCF.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35047-120">Note that the service instance is unlocked only by calling another service over a WCF channel.</span>
          </span>
          <span data-ttu-id="35047-121">Nesse caso, o serviço chamado pode reinserir o primeiro serviço por meio de um retorno de chamada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35047-121">In this case, the called service can reenter the first service via a callback.</span>
          </span>
          <span data-ttu-id="35047-122">Se o primeiro serviço não for reentrante, a sequência de chamadas resultará em um deadlock.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35047-122">If the first service is not reentrant, the sequence of calls results in a deadlock.</span>
          </span>
          <span data-ttu-id="35047-123">Para obter detalhes, consulte <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35047-123">For details, see <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode" />.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Single">
      <MemberSignature Language="C#" Value="Single" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.ConcurrencyMode Single = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.ConcurrencyMode.Single" />
      <MemberSignature Language="VB.NET" Value="Single" />
      <MemberSignature Language="C++ CLI" Value="Single" />
      <MemberSignature Language="F#" Value="Single = 0" Usage="System.ServiceModel.ConcurrencyMode.Single" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ConcurrencyMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="35047-124">A instância do serviço é single-thread e não aceita chamadas reentrantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35047-124">The service instance is single-threaded and does not accept reentrant calls.</span>
          </span>
          <span data-ttu-id="35047-125">Se a propriedade <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode" /> for <see cref="F:System.ServiceModel.InstanceContextMode.Single" /> e chegarem mensagens adicionais enquanto a instância atende a uma chamada, essas mensagens deverão aguardar até que o serviço esteja disponível ou até as mensagens atingirem o tempo limite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35047-125">If the <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode" /> property is <see cref="F:System.ServiceModel.InstanceContextMode.Single" />, and additional messages arrive while the instance services a call, these messages must wait until the service is available or until the messages time out.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>