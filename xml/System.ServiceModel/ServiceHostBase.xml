<Type Name="ServiceHostBase" FullName="System.ServiceModel.ServiceHostBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fb1de2bd063f08d475104a7fa5f5788fef20182a" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39945367" /></Metadata><TypeSignature Language="C#" Value="public abstract class ServiceHostBase : System.ServiceModel.Channels.CommunicationObject, IDisposable, System.ServiceModel.IExtensibleObject&lt;System.ServiceModel.ServiceHostBase&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ServiceHostBase extends System.ServiceModel.Channels.CommunicationObject implements class System.IDisposable, class System.ServiceModel.IExtensibleObject`1&lt;class System.ServiceModel.ServiceHostBase&gt;" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.ServiceHostBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ServiceHostBase&#xA;Inherits CommunicationObject&#xA;Implements IDisposable, IExtensibleObject(Of ServiceHostBase)" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceHostBase abstract : System::ServiceModel::Channels::CommunicationObject, IDisposable, System::ServiceModel::IExtensibleObject&lt;System::ServiceModel::ServiceHostBase ^&gt;" />
  <TypeSignature Language="F#" Value="type ServiceHostBase = class&#xA;    inherit CommunicationObject&#xA;    interface IExtensibleObject&lt;ServiceHostBase&gt;&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.CommunicationObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.IExtensibleObject&lt;System.ServiceModel.ServiceHostBase&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Estende a classe <see cref="T:System.ServiceModel.ServiceHostBase" /> para implementar os hosts que expõem os modelos de programação personalizados.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.ServiceModel.ServiceHostBase> classe para criar hosts que fornecem um modelo de programação personalizado. O serviço do Windows Communication Foundation (WCF) usa do modelo de programação a <xref:System.ServiceModel.ServiceHost> classe.  
  
 Nota especial para os usuários de C++ gerenciado derivar desta classe:  
  
-   Coloque sua limpeza código em (On) (início) próximo (e/ou OnAbort), não em um destruidor.  
  
-   Evite destruidores; eles fazem com que o compilador gerar automaticamente <xref:System.IDisposable>.  
  
-   Evitar membros de não referência; pode fazer com que o compilador gerar automaticamente <xref:System.IDisposable>.  
  
-   Evite finalizadores; mas se você incluir um, você deve suprimir o aviso de compilação e chame <xref:System.GC.SuppressFinalize%28System.Object%29> e o finalizador automaticamente a partir (On) (início) próximo (e/ou OnAbort) para emular o que teria sido geradas automaticamente <xref:System.IDisposable> comportamento.  
  
   
  
## Examples  
 Este exemplo usa o <xref:System.ServiceModel.ServiceHost> classe, que é derivado de <xref:System.ServiceModel.ServiceHostBase>.  
  
 [!code-csharp[S_SelfHost#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_selfhost/cs/wholeenchilada.cs#1)]
 [!code-vb[S_SelfHost#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_selfhost/vb/wholeenchilada.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ServiceHostBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHostBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ServiceHostBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.ServiceHostBase" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_SelfHost#30](~/samples/snippets/csharp/VS_Snippets_CFX/s_selfhost/cs/wholeenchilada.cs#30)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBaseAddress">
      <MemberSignature Language="C#" Value="protected void AddBaseAddress (Uri baseAddress);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AddBaseAddress(class System.Uri baseAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AddBaseAddress (baseAddress As Uri)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AddBaseAddress(Uri ^ baseAddress);" />
      <MemberSignature Language="F#" Value="member this.AddBaseAddress : Uri -&gt; unit" Usage="serviceHostBase.AddBaseAddress baseAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseAddress" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="baseAddress">Um <see cref="T:System.Uri" /> que contém o endereço básico para os serviços hospedados no host atual.</param>
        <summary>Adiciona um endereço básico ao host de serviço.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa propriedade permite que os usuários estendendo <xref:System.ServiceModel.ServiceHostBase> para fornecer o endereço base depois que o host é construído. <xref:System.ServiceModel.ServiceHostBase.AddBaseAddress%28System.Uri%29> pode ser usado para adicionar endereços de base para um host existente, mas gera uma exceção se a descrição já foi inicializada.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">O <paramref name="baseAddress" /> não pode ser chamado.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddDefaultEndpoints">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.ServiceModel.Description.ServiceEndpoint&gt; AddDefaultEndpoints ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.ServiceModel.Description.ServiceEndpoint&gt; AddDefaultEndpoints() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHostBase.AddDefaultEndpoints" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddDefaultEndpoints () As ReadOnlyCollection(Of ServiceEndpoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::ObjectModel::ReadOnlyCollection&lt;System::ServiceModel::Description::ServiceEndpoint ^&gt; ^ AddDefaultEndpoints();" />
      <MemberSignature Language="F#" Value="abstract member AddDefaultEndpoints : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.ServiceModel.Description.ServiceEndpoint&gt;&#xA;override this.AddDefaultEndpoints : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.ServiceModel.Description.ServiceEndpoint&gt;" Usage="serviceHostBase.AddDefaultEndpoints " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.ServiceModel.Description.ServiceEndpoint&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Adiciona pontos de extremidade de serviço para todos os endereços base em cada contrato encontrado no host de serviço com a associação padrão.</summary>
        <returns>Uma coleção somente leitura de pontos de extremidade padrão.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddServiceEndpoint">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Adiciona os pontos de extremidade de serviço ao serviço hospedado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddServiceEndpoint">
      <MemberSignature Language="C#" Value="public virtual void AddServiceEndpoint (System.ServiceModel.Description.ServiceEndpoint endpoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddServiceEndpoint(class System.ServiceModel.Description.ServiceEndpoint endpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddServiceEndpoint (endpoint As ServiceEndpoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddServiceEndpoint(System::ServiceModel::Description::ServiceEndpoint ^ endpoint);" />
      <MemberSignature Language="F#" Value="abstract member AddServiceEndpoint : System.ServiceModel.Description.ServiceEndpoint -&gt; unit&#xA;override this.AddServiceEndpoint : System.ServiceModel.Description.ServiceEndpoint -&gt; unit" Usage="serviceHostBase.AddServiceEndpoint endpoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
      </Parameters>
      <Docs>
        <param name="endpoint">O ponto de extremidade de serviço.</param>
        <summary>Adiciona o ponto de extremidade de serviço especificado para o serviço hospedado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ao usar o método, o host de serviço faz uma validação de "nome pela configuração" na descrição do contrato. Em outras palavras, o host verifica que <xref:System.ServiceModel.Description.ContractDescription.ConfigurationName%2A> existe na lista de nomes de configuração dos contratos de serviço implementados pelo serviço. Se a validação é bem-sucedida, a descrição na <xref:System.ServiceModel.Description.ServiceEndpoint> é usado como está, mesmo se o <xref:System.ServiceModel.Description.ContractDescription> refletido de serviço é diferente.  
  
 Por exemplo, suponha que a descrição no ServiceEndpoint e a descrição do contrato refletidas do serviço têm o mesmo nome, mas os comportamentos de operação diferente. A implicação de validação do "nome pela configuração" é que não há nenhuma validação que os comportamentos são os mesmos e há um atualizações para uma descrição devido a outra descrição.  
  
 Se o `address` é um URI relativo, um dos endereços de base a <xref:System.ServiceModel.ServiceHost> (dependendo do protocolo de associação) é usado como endereço de base do ponto de extremidade.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="Endpoint" /> é <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">O host não está em um estado de Criado ou Abrindo ou não há nenhum <see cref="T:System.ServiceModel.Description.ServiceDescription" /> para o serviço hospedado.</exception>
        <exception cref="T:System.ArgumentException">A propriedade <paramref name="Address" />, <paramref name="Binding" /> ou <paramref name="Contract" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddServiceEndpoint">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (string implementedContract, System.ServiceModel.Channels.Binding binding, string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint(string implementedContract, class System.ServiceModel.Channels.Binding binding, string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpoint ^ AddServiceEndpoint(System::String ^ implementedContract, System::ServiceModel::Channels::Binding ^ binding, System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.AddServiceEndpoint : string * System.ServiceModel.Channels.Binding * string -&gt; System.ServiceModel.Description.ServiceEndpoint" Usage="serviceHostBase.AddServiceEndpoint (implementedContract, binding, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementedContract" Type="System.String" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="implementedContract">O contrato implementado pelo ponto de extremidade.</param>
        <param name="binding">O <see cref="T:System.ServiceModel.Channels.Binding" /> do ponto de extremidade adicionado.</param>
        <param name="address">O endereço do ponto de extremidade adicionado. Isto pode ser um URI absoluto ou relativo. Se ele for um URI relativo, um dos endereços básicos do <see cref="T:System.ServiceModel.ServiceHost" /> (dependendo do protocolo de associação) será usado como o endereço básico do ponto de extremidade.</param>
        <summary>Adiciona um ponto de extremidade de serviço ao serviço hospedado com um contrato, uma associação e um endereço do ponto de extremidade especificados.</summary>
        <returns>O <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> adicionado ao serviço hospedado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_SelfHost#40](~/samples/snippets/csharp/VS_Snippets_CFX/s_selfhost/cs/wholeenchilada.cs#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="implementedContract" /> ou <paramref name="binding" /> ou <paramref name="address" /> ou é <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">O host não está em um estado <see cref="F:System.ServiceModel.CommunicationState.Created" /> ou um estado <see cref="F:System.ServiceModel.CommunicationState.Opening" /> ou não há nenhum <see cref="T:System.ServiceModel.Description.ServiceDescription" /> para o serviço hospedado e, portanto, não é possível adicionar um ponto de extremidade ou a associação não tem um transporte de esquema de associação.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddServiceEndpoint">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (string implementedContract, System.ServiceModel.Channels.Binding binding, Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint(string implementedContract, class System.ServiceModel.Channels.Binding binding, class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpoint ^ AddServiceEndpoint(System::String ^ implementedContract, System::ServiceModel::Channels::Binding ^ binding, Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.AddServiceEndpoint : string * System.ServiceModel.Channels.Binding * Uri -&gt; System.ServiceModel.Description.ServiceEndpoint" Usage="serviceHostBase.AddServiceEndpoint (implementedContract, binding, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementedContract" Type="System.String" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="implementedContract">O contrato implementado pelo ponto de extremidade.</param>
        <param name="binding">O <see cref="T:System.ServiceModel.Channels.Binding" /> do ponto de extremidade adicionado.</param>
        <param name="address">O <see cref="T:System.Uri" /> que contém o endereço do ponto de extremidade adicionado. Isto pode ser um URI absoluto ou relativo. Se ele for um URI relativo, um dos endereços básicos do <see cref="T:System.ServiceModel.ServiceHost" /> (dependendo do protocolo de associação) será usado como o endereço básico do ponto de extremidade.</param>
        <summary>Adiciona um ponto de extremidade de serviço ao serviço hospedado com um contrato, uma associação e um URI especificados que contêm o endereço do ponto de extremidade.</summary>
        <returns>O <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> adicionado ao serviço hospedado.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="implementedContract" /> ou <paramref name="binding" /> ou <paramref name="address" /> ou é <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">O host não está em um estado <see cref="F:System.ServiceModel.CommunicationState.Created" /> ou um estado <see cref="F:System.ServiceModel.CommunicationState.Opening" /> ou não há nenhum <see cref="T:System.ServiceModel.Description.ServiceDescription" /> para o serviço hospedado e, portanto, não é possível adicionar um ponto de extremidade.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddServiceEndpoint">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (string implementedContract, System.ServiceModel.Channels.Binding binding, string address, Uri listenUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint(string implementedContract, class System.ServiceModel.Channels.Binding binding, string address, class System.Uri listenUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpoint ^ AddServiceEndpoint(System::String ^ implementedContract, System::ServiceModel::Channels::Binding ^ binding, System::String ^ address, Uri ^ listenUri);" />
      <MemberSignature Language="F#" Value="member this.AddServiceEndpoint : string * System.ServiceModel.Channels.Binding * string * Uri -&gt; System.ServiceModel.Description.ServiceEndpoint" Usage="serviceHostBase.AddServiceEndpoint (implementedContract, binding, address, listenUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementedContract" Type="System.String" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="listenUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="implementedContract">O contrato implementado pelo ponto de extremidade.</param>
        <param name="binding">O <see cref="T:System.ServiceModel.Channels.Binding" /> do ponto de extremidade adicionado.</param>
        <param name="address">O endereço do ponto de extremidade adicionado. Este endereço pode ser um URI absoluto ou relativo. Se ele for um URI relativo, um dos endereços básicos do <see cref="T:System.ServiceModel.ServiceHost" /> (dependendo do protocolo de associação) será usado como o endereço básico do ponto de extremidade.</param>
        <param name="listenUri">O <see cref="T:System.Uri" /> que contém o endereço que o ponto de extremidade de escuta para mensagens de entrada. Este URI pode ser relativo ou absoluto.</param>
        <summary>Adiciona um ponto de extremidade de serviço ao serviço hospedado com um contrato especificado, associação, endereço do ponto de extremidade e URI que contém o endereço no qual ele escuta.</summary>
        <returns>O <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> adicionado ao serviço hospedado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o `address` é um URI relativo, um dos endereços de base a <xref:System.ServiceModel.ServiceHost> (dependendo do protocolo de associação) é usado como endereço de base do ponto de extremidade.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="implementedContract" /> ou <paramref name="binding" /> ou <paramref name="address" /> ou é <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">O host não está em um estado <see cref="F:System.ServiceModel.CommunicationState.Created" /> ou um estado <see cref="F:System.ServiceModel.CommunicationState.Opening" /> ou não há nenhum <see cref="T:System.ServiceModel.Description.ServiceDescription" /> para o serviço hospedado e, portanto, não é possível adicionar um ponto de extremidade.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddServiceEndpoint">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (string implementedContract, System.ServiceModel.Channels.Binding binding, Uri address, Uri listenUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint(string implementedContract, class System.ServiceModel.Channels.Binding binding, class System.Uri address, class System.Uri listenUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpoint ^ AddServiceEndpoint(System::String ^ implementedContract, System::ServiceModel::Channels::Binding ^ binding, Uri ^ address, Uri ^ listenUri);" />
      <MemberSignature Language="F#" Value="member this.AddServiceEndpoint : string * System.ServiceModel.Channels.Binding * Uri * Uri -&gt; System.ServiceModel.Description.ServiceEndpoint" Usage="serviceHostBase.AddServiceEndpoint (implementedContract, binding, address, listenUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementedContract" Type="System.String" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="listenUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="implementedContract">O contrato implementado pelo ponto de extremidade.</param>
        <param name="binding">O <see cref="T:System.ServiceModel.Channels.Binding" /> do ponto de extremidade adicionado.</param>
        <param name="address">O <see cref="T:System.Uri" /> que contém o endereço do ponto de extremidade adicionado. Se ele for um URI relativo, um dos endereços básicos do <see cref="T:System.ServiceModel.ServiceHost" /> (dependendo do protocolo de associação) será usado como o endereço básico do ponto de extremidade.</param>
        <param name="listenUri">O <see cref="T:System.Uri" /> que contém o endereço no qual o ponto de extremidade escuta mensagens de entrada.</param>
        <summary>Adiciona um ponto de extremidade de serviço ao serviço hospedado com o contrato, a associação e os URIs especificados que contêm os endereços do ponto de extremidade e de escuta.</summary>
        <returns>O <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> adicionado ao serviço hospedado. Este URI pode ser absoluto ou relativo.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="implementedContract" /> ou <paramref name="binding" /> ou <paramref name="address" /> ou é <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">O host não está em um estado <see cref="F:System.ServiceModel.CommunicationState.Created" /> ou um estado <see cref="F:System.ServiceModel.CommunicationState.Opening" /> ou não há nenhum <see cref="T:System.ServiceModel.Description.ServiceDescription" /> para o serviço hospedado e, portanto, não é possível adicionar um ponto de extremidade.</exception>
      </Docs>
    </Member>
    <Member MemberName="ApplyConfiguration">
      <MemberSignature Language="C#" Value="protected virtual void ApplyConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ApplyConfiguration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHostBase.ApplyConfiguration" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ApplyConfiguration ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ApplyConfiguration();" />
      <MemberSignature Language="F#" Value="abstract member ApplyConfiguration : unit -&gt; unit&#xA;override this.ApplyConfiguration : unit -&gt; unit" Usage="serviceHostBase.ApplyConfiguration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Carrega as informações de descrição de serviço do arquivo de configuração e aplica-as ao tempo de execução que está sendo construído.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">A descrição do serviço hospedado é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Authentication">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceAuthenticationBehavior Authentication { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Description.ServiceAuthenticationBehavior Authentication" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceHostBase.Authentication" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Authentication As ServiceAuthenticationBehavior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Description::ServiceAuthenticationBehavior ^ Authentication { System::ServiceModel::Description::ServiceAuthenticationBehavior ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Authentication : System.ServiceModel.Description.ServiceAuthenticationBehavior" Usage="System.ServiceModel.ServiceHostBase.Authentication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceAuthenticationBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o comportamento de autenticação do serviço.</summary>
        <value>O comportamento de autenticação do serviço.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Authorization">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceAuthorizationBehavior Authorization { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Description.ServiceAuthorizationBehavior Authorization" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceHostBase.Authorization" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Authorization As ServiceAuthorizationBehavior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Description::ServiceAuthorizationBehavior ^ Authorization { System::ServiceModel::Description::ServiceAuthorizationBehavior ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Authorization : System.ServiceModel.Description.ServiceAuthorizationBehavior" Usage="System.ServiceModel.ServiceHostBase.Authorization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceAuthorizationBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o comportamento de autorização para o serviço hospedado.</summary>
        <value>O <see cref="T:System.ServiceModel.Description.ServiceAuthorizationBehavior" /> para o serviço hospedado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_SelfHost#36](~/samples/snippets/csharp/VS_Snippets_CFX/s_selfhost/cs/wholeenchilada.cs#36)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseAddresses">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;Uri&gt; BaseAddresses { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Uri&gt; BaseAddresses" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceHostBase.BaseAddresses" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseAddresses As ReadOnlyCollection(Of Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;Uri ^&gt; ^ BaseAddresses { System::Collections::ObjectModel::ReadOnlyCollection&lt;Uri ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseAddresses : System.Collections.ObjectModel.ReadOnlyCollection&lt;Uri&gt;" Usage="System.ServiceModel.ServiceHostBase.BaseAddresses" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Uri&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém os endereços básicos usados pelo serviço hospedado.</summary>
        <value>Um <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> do tipo <see cref="T:System.Uri" /> que contém os endereços básicos do serviço hospedado.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelDispatchers">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Dispatcher.ChannelDispatcherCollection ChannelDispatchers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Dispatcher.ChannelDispatcherCollection ChannelDispatchers" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceHostBase.ChannelDispatchers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelDispatchers As ChannelDispatcherCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Dispatcher::ChannelDispatcherCollection ^ ChannelDispatchers { System::ServiceModel::Dispatcher::ChannelDispatcherCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChannelDispatchers : System.ServiceModel.Dispatcher.ChannelDispatcherCollection" Usage="System.ServiceModel.ServiceHostBase.ChannelDispatchers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.ChannelDispatcherCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a coleção de dispatchers de canal usada pelo host de serviço.</summary>
        <value>O <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcherCollection" /> que contém os dispatchers de canal usados pelo host de serviço.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan CloseTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan CloseTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceHostBase.CloseTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property CloseTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan CloseTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.CloseTimeout : TimeSpan with get, set" Usage="System.ServiceModel.ServiceHostBase.CloseTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o intervalo de tempo permitido para o host de serviço fechar.</summary>
        <value>O <see cref="T:System.TimeSpan" /> que especifica o intervalo de tempo permitido para o host de serviço fechar.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_SelfHost#33](~/samples/snippets/csharp/VS_Snippets_CFX/s_selfhost/cs/wholeenchilada.cs#33)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">O valor, em milissegundos, é menor que zero ou maior que <see cref="F:System.Int32.MaxValue" /> (2.147.483.647 ou, em notação hexadecimal, 0X7FFFFFFF).</exception>
        <exception cref="T:System.InvalidOperationException">O host está em um estado <see cref="F:System.ServiceModel.CommunicationState.Opening" /> ou <see cref="F:System.ServiceModel.CommunicationState.Closing" /> e não pode ser modificado.</exception>
        <exception cref="T:System.ObjectDisposedException">O host já está em um estado <see cref="F:System.ServiceModel.CommunicationState.Closed" /> e não pode ser modificado.</exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">O host está em um estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> e não pode ser modificado.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDescription">
      <MemberSignature Language="C#" Value="protected abstract System.ServiceModel.Description.ServiceDescription CreateDescription (out System.Collections.Generic.IDictionary&lt;string,System.ServiceModel.Description.ContractDescription&gt; implementedContracts);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ServiceModel.Description.ServiceDescription CreateDescription([out] class System.Collections.Generic.IDictionary`2&lt;string, class System.ServiceModel.Description.ContractDescription&gt;&amp; implementedContracts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHostBase.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateDescription (ByRef implementedContracts As IDictionary(Of String, ContractDescription)) As ServiceDescription" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::ServiceModel::Description::ServiceDescription ^ CreateDescription([Runtime::InteropServices::Out] System::Collections::Generic::IDictionary&lt;System::String ^, System::ServiceModel::Description::ContractDescription ^&gt; ^ % implementedContracts);" />
      <MemberSignature Language="F#" Value="abstract member CreateDescription :  -&gt; System.ServiceModel.Description.ServiceDescription" Usage="serviceHostBase.CreateDescription implementedContracts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceDescription</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementedContracts" Type="System.Collections.Generic.IDictionary&lt;System.String,System.ServiceModel.Description.ContractDescription&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="implementedContracts">O <see cref="T:System.Collections.Generic.IDictionary`2" /> que contém os objetos <see cref="T:System.ServiceModel.Description.ContractDescription" /> para os serviços.</param>
        <summary>Quando implementado em uma classe derivada, cria a descrição do serviço hospedado.</summary>
        <returns>A <see cref="T:System.ServiceModel.Description.ServiceDescription" /> do serviço hospedado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_SelfHost#41](~/samples/snippets/csharp/VS_Snippets_CFX/s_selfhost/cs/wholeenchilada.cs#41)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceCredentials Credentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Description.ServiceCredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceHostBase.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Credentials As ServiceCredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Description::ServiceCredentials ^ Credentials { System::ServiceModel::Description::ServiceCredentials ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.ServiceModel.Description.ServiceCredentials" Usage="System.ServiceModel.ServiceHostBase.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceCredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a credencial para o serviço hospedado.</summary>
        <value>O <see cref="T:System.ServiceModel.Description.ServiceCredentials" /> para o serviço hospedado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_SelfHost#37](~/samples/snippets/csharp/VS_Snippets_CFX/s_selfhost/cs/wholeenchilada.cs#37)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultCloseTimeout">
      <MemberSignature Language="C#" Value="protected override TimeSpan DefaultCloseTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan DefaultCloseTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceHostBase.DefaultCloseTimeout" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultCloseTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property TimeSpan DefaultCloseTimeout { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCloseTimeout : TimeSpan" Usage="System.ServiceModel.ServiceHostBase.DefaultCloseTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o intervalo de tempo padrão permitido para o fechamento do host de serviço.</summary>
        <value>O <see cref="T:System.TimeSpan" /> que especifica o intervalo padrão de tempo permitido para o host de serviço fechar.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultOpenTimeout">
      <MemberSignature Language="C#" Value="protected override TimeSpan DefaultOpenTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan DefaultOpenTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceHostBase.DefaultOpenTimeout" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultOpenTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property TimeSpan DefaultOpenTimeout { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultOpenTimeout : TimeSpan" Usage="System.ServiceModel.ServiceHostBase.DefaultOpenTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o intervalo de tempo padrão permitido para a abertura do host de serviço.</summary>
        <value>O <see cref="T:System.TimeSpan" /> que especifica o intervalo de tempo permitido para o host de serviço abrir padrão.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_SelfHost#35](~/samples/snippets/csharp/VS_Snippets_CFX/s_selfhost/cs/wholeenchilada.cs#35)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceDescription Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Description.ServiceDescription Description" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceHostBase.Description" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Description As ServiceDescription" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Description::ServiceDescription ^ Description { System::ServiceModel::Description::ServiceDescription ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Description : System.ServiceModel.Description.ServiceDescription" Usage="System.ServiceModel.ServiceHostBase.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceDescription</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a descrição do serviço hospedado.</summary>
        <value>A <see cref="T:System.ServiceModel.Description.ServiceDescription" /> do serviço hospedado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_SelfHost#38](~/samples/snippets/csharp/VS_Snippets_CFX/s_selfhost/cs/wholeenchilada.cs#38)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Extensions">
      <MemberSignature Language="C#" Value="public System.ServiceModel.IExtensionCollection&lt;System.ServiceModel.ServiceHostBase&gt; Extensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.IExtensionCollection`1&lt;class System.ServiceModel.ServiceHostBase&gt; Extensions" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceHostBase.Extensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Extensions As IExtensionCollection(Of ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::IExtensionCollection&lt;System::ServiceModel::ServiceHostBase ^&gt; ^ Extensions { System::ServiceModel::IExtensionCollection&lt;System::ServiceModel::ServiceHostBase ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Extensions : System.ServiceModel.IExtensionCollection&lt;System.ServiceModel.ServiceHostBase&gt;" Usage="System.ServiceModel.ServiceHostBase.Extensions" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ServiceModel.IExtensibleObject`1.Extensions</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.IExtensionCollection&lt;System.ServiceModel.ServiceHostBase&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém as extensões para o host de serviço atual especificado.</summary>
        <value>Um <see cref="T:System.ServiceModel.IExtensionCollection`1" /> do tipo <see cref="T:System.ServiceModel.ServiceHostBase" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImplementedContracts">
      <MemberSignature Language="C#" Value="protected internal System.Collections.Generic.IDictionary&lt;string,System.ServiceModel.Description.ContractDescription&gt; ImplementedContracts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class System.ServiceModel.Description.ContractDescription&gt; ImplementedContracts" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceHostBase.ImplementedContracts" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property ImplementedContracts As IDictionary(Of String, ContractDescription)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::ServiceModel::Description::ContractDescription ^&gt; ^ ImplementedContracts { System::Collections::Generic::IDictionary&lt;System::String ^, System::ServiceModel::Description::ContractDescription ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ImplementedContracts : System.Collections.Generic.IDictionary&lt;string, System.ServiceModel.Description.ContractDescription&gt;" Usage="System.ServiceModel.ServiceHostBase.ImplementedContracts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.ServiceModel.Description.ContractDescription&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Recupera os contratos implementados pelo serviço hospedado.</summary>
        <value>O <see cref="T:System.Collections.Generic.IDictionary`2" /> que contém os objetos <see cref="T:System.ServiceModel.Description.ContractDescription" /> para os serviços.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncrementManualFlowControlLimit">
      <MemberSignature Language="C#" Value="public int IncrementManualFlowControlLimit (int incrementBy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IncrementManualFlowControlLimit(int32 incrementBy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IncrementManualFlowControlLimit (incrementBy As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IncrementManualFlowControlLimit(int incrementBy);" />
      <MemberSignature Language="F#" Value="member this.IncrementManualFlowControlLimit : int -&gt; int" Usage="serviceHostBase.IncrementManualFlowControlLimit incrementBy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="incrementBy" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="incrementBy">O número de mensagens pelo qual aumentar o limite de controle de fluxo.</param>
        <summary>Aumenta o limite da taxa de fluxo de mensagens para o serviço hospedado por um incremento especificado.</summary>
        <returns>O novo limite depois que o incremento é adicionado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse limite pode ser acessado usando o <xref:System.ServiceModel.ServiceHostBase.ManualFlowControlLimit%2A> propriedade.  
  
   
  
## Examples  
 [!code-csharp[S_SelfHost#42](~/samples/snippets/csharp/VS_Snippets_CFX/s_selfhost/cs/wholeenchilada.cs#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">O valor é menor que zero.</exception>
      </Docs>
    </Member>
    <Member MemberName="InitializeDescription">
      <MemberSignature Language="C#" Value="protected void InitializeDescription (System.ServiceModel.UriSchemeKeyedCollection baseAddresses);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InitializeDescription(class System.ServiceModel.UriSchemeKeyedCollection baseAddresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHostBase.InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InitializeDescription (baseAddresses As UriSchemeKeyedCollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InitializeDescription(System::ServiceModel::UriSchemeKeyedCollection ^ baseAddresses);" />
      <MemberSignature Language="F#" Value="member this.InitializeDescription : System.ServiceModel.UriSchemeKeyedCollection -&gt; unit" Usage="serviceHostBase.InitializeDescription baseAddresses" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseAddresses" Type="System.ServiceModel.UriSchemeKeyedCollection" />
      </Parameters>
      <Docs>
        <param name="baseAddresses">Uma <see cref="T:System.ServiceModel.UriSchemeKeyedCollection" /> que contém os endereços básicos do serviço hospedado.</param>
        <summary>Cria e inicializa o host de serviço com as descrições de contrato e serviço.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeRuntime">
      <MemberSignature Language="C#" Value="protected virtual void InitializeRuntime ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeRuntime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHostBase.InitializeRuntime" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeRuntime ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeRuntime();" />
      <MemberSignature Language="F#" Value="abstract member InitializeRuntime : unit -&gt; unit&#xA;override this.InitializeRuntime : unit -&gt; unit" Usage="serviceHostBase.InitializeRuntime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inicializa o tempo de execução para o host de serviço.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">A descrição do serviço hospedado é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadConfigurationSection">
      <MemberSignature Language="C#" Value="protected void LoadConfigurationSection (System.ServiceModel.Configuration.ServiceElement serviceSection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void LoadConfigurationSection(class System.ServiceModel.Configuration.ServiceElement serviceSection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHostBase.LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub LoadConfigurationSection (serviceSection As ServiceElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void LoadConfigurationSection(System::ServiceModel::Configuration::ServiceElement ^ serviceSection);" />
      <MemberSignature Language="F#" Value="member this.LoadConfigurationSection : System.ServiceModel.Configuration.ServiceElement -&gt; unit" Usage="serviceHostBase.LoadConfigurationSection serviceSection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceSection" Type="System.ServiceModel.Configuration.ServiceElement" />
      </Parameters>
      <Docs>
        <param name="serviceSection">O <see cref="T:System.ServiceModel.Configuration.ServiceElement" /> a ser carregado da configuração.</param>
        <summary>Carrega o elemento de serviço do arquivo de configuração do serviço hospedado.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="serviceSection" /> é <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">A descrição do serviço hospedado é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ManualFlowControlLimit">
      <MemberSignature Language="C#" Value="public int ManualFlowControlLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ManualFlowControlLimit" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceHostBase.ManualFlowControlLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property ManualFlowControlLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ManualFlowControlLimit { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ManualFlowControlLimit : int with get, set" Usage="System.ServiceModel.ServiceHostBase.ManualFlowControlLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o limite de controle de fluxo para mensagens recebidas pelo serviço hospedado.</summary>
        <value>O limite de controle de fluxo para mensagens recebidas pelo serviço hospedado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse limite pode ser incrementado usando o <xref:System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit%28System.Int32%29> método.  
  
   
  
## Examples  
 [!code-csharp[S_SelfHost#39](~/samples/snippets/csharp/VS_Snippets_CFX/s_selfhost/cs/wholeenchilada.cs#39)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">O valor é menor que zero.</exception>
      </Docs>
    </Member>
    <Member MemberName="OnAbort">
      <MemberSignature Language="C#" Value="protected override void OnAbort ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnAbort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHostBase.OnAbort" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnAbort ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnAbort();" />
      <MemberSignature Language="F#" Value="override this.OnAbort : unit -&gt; unit" Usage="serviceHostBase.OnAbort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Anula o serviço.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginClose">
      <MemberSignature Language="C#" Value="protected override IAsyncResult OnBeginClose (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.IAsyncResult OnBeginClose(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBeginClose (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override IAsyncResult ^ OnBeginClose(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.OnBeginClose : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="serviceHostBase.OnBeginClose (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">O <see cref="T:System.TimeSpan" /> que especifica quanto tempo a operação on-close tem para ser concluída antes de atingir o tempo limite.</param>
        <param name="callback">O representante <see cref="T:System.AsyncCallback" /> que recebe a notificação da conclusão no fechamento da operação assíncrona.</param>
        <param name="state">Um objeto especificado pelo aplicativo que contém informações de estado associadas à operação on-close assíncrona.</param>
        <summary>Inicia uma operação assíncrona invocada no fechamento do host de serviço.</summary>
        <returns>O <see cref="T:System.IAsyncResult" /> que faz referência à operação on-close assíncrona.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginOpen">
      <MemberSignature Language="C#" Value="protected override IAsyncResult OnBeginOpen (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.IAsyncResult OnBeginOpen(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBeginOpen (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override IAsyncResult ^ OnBeginOpen(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.OnBeginOpen : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="serviceHostBase.OnBeginOpen (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">O <see cref="T:System.TimeSpan" /> que especifica quanto tempo a operação na abertura deve ser concluída antes de atingir o tempo limite.</param>
        <param name="callback">O representante <see cref="T:System.AsyncCallback" /> que recebe a notificação da conclusão na abertura da operação assíncrona.</param>
        <param name="state">Um objeto, especificado pelo aplicativo, que contém informações de estado associadas à operação assíncrona na abertura.</param>
        <summary>Inicia uma operação assíncrona invocada na abertura do host de serviço.</summary>
        <returns>O <see cref="T:System.IAsyncResult" /> que referencia à operação assíncrona na abertura.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClose">
      <MemberSignature Language="C#" Value="protected override void OnClose (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClose(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClose (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClose(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="override this.OnClose : TimeSpan -&gt; unit" Usage="serviceHostBase.OnClose timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">O <see cref="T:System.TimeSpan" /> que especifica quanto tempo a operação on-close tem para ser concluída antes de atingir o tempo limite.</param>
        <summary>Fecha o serviço hospedado, incluindo seus dispatchers de canal e ouvintes e contextos de instância associados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chamar <xref:System.ServiceModel.ServiceHostBase.OnClose%28System.TimeSpan%29> faz o seguinte:  
  
-   Fecha todas as entradas para <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>, que também fecha seus respectivos <xref:System.ServiceModel.Channels.IChannelListener> instâncias. Isso interrompe qualquer novos canais de sendo aceitar.  
  
-   Chamadas <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.CloseInput%2A> em todos os <xref:System.ServiceModel.InstanceContext> objetos, que significa que eles deixarão de aceitar novas mensagens.  
  
-   Aguarda todos os <xref:System.ServiceModel.InstanceContext> objetos encerrar, o que acontece quando seus canais associados terminou de enviar todas as mensagens pendentes.  
  
-   Fecha o <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objetos associados com o host.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClosed">
      <MemberSignature Language="C#" Value="protected override void OnClosed ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClosed() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHostBase.OnClosed" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClosed ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClosed();" />
      <MemberSignature Language="F#" Value="override this.OnClosed : unit -&gt; unit" Usage="serviceHostBase.OnClosed " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Libera os recursos usados pelo host de serviço.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndClose">
      <MemberSignature Language="C#" Value="protected override void OnEndClose (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEndClose(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHostBase.OnEndClose(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEndClose (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEndClose(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="override this.OnEndClose : IAsyncResult -&gt; unit" Usage="serviceHostBase.OnEndClose result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">O <see cref="T:System.IAsyncResult" /> retornado por uma chamada para o método <see cref="M:System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
        <summary>Conclui uma operação assíncrona invocada no fechamento do host de serviço.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndOpen">
      <MemberSignature Language="C#" Value="protected override void OnEndOpen (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEndOpen(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHostBase.OnEndOpen(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEndOpen (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEndOpen(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="override this.OnEndOpen : IAsyncResult -&gt; unit" Usage="serviceHostBase.OnEndOpen result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">O <see cref="T:System.IAsyncResult" /> retornado por uma chamada para o método <see cref="M:System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
        <summary>Conclui uma operação assíncrona invocada na abertura do host de serviço.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnOpen">
      <MemberSignature Language="C#" Value="protected override void OnOpen (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnOpen(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHostBase.OnOpen(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnOpen (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnOpen(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="override this.OnOpen : TimeSpan -&gt; unit" Usage="serviceHostBase.OnOpen timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">O <see cref="T:System.TimeSpan" /> que especifica quanto tempo a operação na abertura deve ser concluída antes de atingir o tempo limite.</param>
        <summary>Abre os dispatchers de canal.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnOpened">
      <MemberSignature Language="C#" Value="protected override void OnOpened ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnOpened() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHostBase.OnOpened" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnOpened ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnOpened();" />
      <MemberSignature Language="F#" Value="override this.OnOpened : unit -&gt; unit" Usage="serviceHostBase.OnOpened " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtém as credenciais de serviço, a autenticação de serviço e o comportamento de autorização para o serviço hospedado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Depois que esses comportamentos são inicializados ao abrir o serviço, elas não podem ser alteradas.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan OpenTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan OpenTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceHostBase.OpenTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property OpenTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan OpenTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.OpenTimeout : TimeSpan with get, set" Usage="System.ServiceModel.ServiceHostBase.OpenTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um intervalo de tempo permitido para o host de serviço abrir.</summary>
        <value>O <see cref="T:System.TimeSpan" /> que especifica o intervalo de tempo permitido para o host de serviço abrir.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">O valor é menor que zero ou é maior que <see cref="F:System.Int32.MaxValue" /> (2.147.483.647 ou, em notação hexadecimal, 0X7FFFFFFF).</exception>
        <exception cref="T:System.InvalidOperationException">O host está em um estado <see cref="F:System.ServiceModel.CommunicationState.Opening" /> ou <see cref="F:System.ServiceModel.CommunicationState.Closing" /> e não pode ser modificado.</exception>
        <exception cref="T:System.ObjectDisposedException">O host já está em um estado <see cref="F:System.ServiceModel.CommunicationState.Closed" /> e não pode ser modificado.</exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">O host está em um estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> e não pode ser modificado.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReleasePerformanceCounters">
      <MemberSignature Language="C#" Value="protected void ReleasePerformanceCounters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ReleasePerformanceCounters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ReleasePerformanceCounters ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ReleasePerformanceCounters();" />
      <MemberSignature Language="F#" Value="member this.ReleasePerformanceCounters : unit -&gt; unit" Usage="serviceHostBase.ReleasePerformanceCounters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Libera os contadores de desempenho do dispatcher de serviço e canal para o serviço hospedado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método é invocado ao chamar <xref:System.ServiceModel.ServiceHostBase.OnClose%28System.TimeSpan%29> e  
  
 <xref:System.ServiceModel.ServiceHostBase.OnEndClose%28System.IAsyncResult%29>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetEndpointAddress">
      <MemberSignature Language="C#" Value="public void SetEndpointAddress (System.ServiceModel.Description.ServiceEndpoint endpoint, string relativeAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetEndpointAddress(class System.ServiceModel.Description.ServiceEndpoint endpoint, string relativeAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHostBase.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetEndpointAddress (endpoint As ServiceEndpoint, relativeAddress As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetEndpointAddress(System::ServiceModel::Description::ServiceEndpoint ^ endpoint, System::String ^ relativeAddress);" />
      <MemberSignature Language="F#" Value="member this.SetEndpointAddress : System.ServiceModel.Description.ServiceEndpoint * string -&gt; unit" Usage="serviceHostBase.SetEndpointAddress (endpoint, relativeAddress)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="relativeAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="endpoint">O ponto de extremidade de serviço.</param>
        <param name="relativeAddress">O endereço do ponto de extremidade.</param>
        <summary>Define o endereço do ponto de extremidade especificado como o endereço especificado.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fecha o host de serviço.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnknownMessageReceived">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.ServiceModel.UnknownMessageReceivedEventArgs&gt; UnknownMessageReceived;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.ServiceModel.UnknownMessageReceivedEventArgs&gt; UnknownMessageReceived" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.ServiceHostBase.UnknownMessageReceived" />
      <MemberSignature Language="VB.NET" Value="Public Event UnknownMessageReceived As EventHandler(Of UnknownMessageReceivedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::ServiceModel::UnknownMessageReceivedEventArgs ^&gt; ^ UnknownMessageReceived;" />
      <MemberSignature Language="F#" Value="member this.UnknownMessageReceived : EventHandler&lt;System.ServiceModel.UnknownMessageReceivedEventArgs&gt; " Usage="member this.UnknownMessageReceived : System.EventHandler&lt;System.ServiceModel.UnknownMessageReceivedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.ServiceModel.UnknownMessageReceivedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando uma mensagem desconhecida é recebida.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!WARNING]
>  Ao usar <xref:System.ServiceModel.WorkflowServiceHost>, expondo um ponto de extremidade de hospedagem e um <xref:System.ServiceModel.ServiceHostBase.UnknownMessageReceived> exceção é lançada, o host passa a mensagem para o manipulador de eventos. Se for feita uma tentativa de ler essa mensagem um <xref:System.InvalidOperationException> é gerada. A descrição da exceção dirá "Esta mensagem não oferece suporte a operação porque ele foi lido."  A infraestrutura do WCF lê a mensagem ao extrair os parâmetros da mensagem. Esta mensagem é então passada para o manipulador de eventos e qualquer tentativa de lê-lo causa uma exceção. Se você precisar acessar parâmetros de mensagem em seu <xref:System.InvalidOperationException> manipulador de um ponto de extremidade de hospedagem, definir o contrato de ponto de extremidade de hospedagem usando MessageContract e colocar os dados necessários em um cabeçalho de mensagem. Para obter mais informações sobre como hospedar pontos de extremidade, consulte [extensibilidade de Host de serviço de fluxo de trabalho](~/docs/framework/wcf/feature-details/workflow-service-host-extensibility.md)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>