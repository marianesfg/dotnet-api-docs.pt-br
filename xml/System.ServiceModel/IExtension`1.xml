<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IExtension`1.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac53cd9ef7ba62ca0261201ace92772b919330c31e3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3cd9ef7ba62ca0261201ace92772b919330c31e3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.IExtension`1">
          <source>The object that participates in the custom behavior.</source>
          <target state="translated">O objeto que participa do comportamento personalizado.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.IExtension`1">
          <source>Enables an object to extend another object through aggregation.</source>
          <target state="translated">Permite que um objeto estenda-se a outro objeto por meio de agregação.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.IExtension`1">
          <source><ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> allows you to extend <ph id="ph2">&lt;xref:System.ServiceModel.IExtensibleObject%601?displayProperty=nameWithType&gt;</ph> objects (the <ph id="ph3">&lt;xref:System.ServiceModel.IContextChannel?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType&gt;</ph>, <ph id="ph5">&lt;xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType&gt;</ph>, and <ph id="ph6">&lt;xref:System.ServiceModel.OperationContext?displayProperty=nameWithType&gt;</ph> classes) by adding a new state or behavior by using its extensible object pattern.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> permite que você estenda <ph id="ph2">&lt;xref:System.ServiceModel.IExtensibleObject%601?displayProperty=nameWithType&gt;</ph> objetos (o <ph id="ph3">&lt;xref:System.ServiceModel.IContextChannel?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType&gt;</ph>, <ph id="ph5">&lt;xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType&gt;</ph>, e <ph id="ph6">&lt;xref:System.ServiceModel.OperationContext?displayProperty=nameWithType&gt;</ph> classes) adicionando um novo estado ou comportamento usando o padrão de objeto extensível.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.IExtension`1">
          <source>The extensible object pattern is used in <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> to either extend existing run-time classes with new functionality or to add new state features to an object.</source>
          <target state="translated">O padrão de objeto extensível é usado em <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> para estender as classes de tempo de execução existentes com a nova funcionalidade ou para adicionar novos recursos de estado para um objeto.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.IExtension`1.Attach(`0)">
          <source>The extensible object that aggregates this extension.</source>
          <target state="translated">O objeto extensível que agrega essa extensão.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.IExtension`1.Attach(`0)">
          <source>Enables an extension object to find out when it has been aggregated.</source>
          <target state="translated">Habilita um objeto de extensão a descobrir quando ele foi agregado.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.IExtension`1.Attach(`0)">
          <source>Called when the extension is added to the <ph id="ph1">&lt;see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" /&gt;</ph> property.</source>
          <target state="translated">Chamado quando a extensão é adicionada à propriedade <ph id="ph1">&lt;see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.IExtension`1.Attach(`0)">
          <source>Use this method to keep track of the <ph id="ph1">&lt;xref:System.ServiceModel.IExtensibleObject%601&gt;</ph> object to which the current instance of the extension belongs.</source>
          <target state="translated">Use esse método para controlar o <ph id="ph1">&lt;xref:System.ServiceModel.IExtensibleObject%601&gt;</ph> do objeto ao qual pertence a instância atual da extensão.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.IExtension`1.Attach(`0)">
          <source>This call gives extensions a chance to handle events or inspect properties of their owner.</source>
          <target state="translated">Essa chamada fornece extensões a oportunidade de lidar com eventos ou Inspecione as propriedades de seu proprietário.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.IExtension`1.Attach(`0)">
          <source>The following example code shows how this method can be used to keep track of the <ph id="ph1">&lt;xref:System.ServiceModel.IExtensibleObject%601&gt;</ph> object to which the current instance of the extension belongs.</source>
          <target state="translated">O exemplo de código a seguir mostra como esse método pode ser usado para controlar o <ph id="ph1">&lt;xref:System.ServiceModel.IExtensibleObject%601&gt;</ph> do objeto ao qual pertence a instância atual da extensão.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.IExtension`1.Detach(`0)">
          <source>The extensible object that aggregates this extension.</source>
          <target state="translated">O objeto extensível que agrega essa extensão.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.IExtension`1.Detach(`0)">
          <source>Enables an object to find out when it is no longer aggregated.</source>
          <target state="translated">Habilita um objeto a descobrir quando ele não é mais agregado.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.IExtension`1.Detach(`0)">
          <source>Called when an extension is removed from the <ph id="ph1">&lt;see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" /&gt;</ph> property.</source>
          <target state="translated">Chamado quando uma extensão é removida da propriedade <ph id="ph1">&lt;see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.IExtension`1.Detach(`0)">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.IExtension%601.Detach%2A&gt;</ph> method to find out when the extension has been removed.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.ServiceModel.IExtension%601.Detach%2A&gt;</ph> método para descobrir quando a extensão foi removida.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.IExtension`1.Detach(`0)">
          <source>An extension can use this to unhook events on the extensible object.</source>
          <target state="translated">Uma extensão pode usar isso para soltar eventos no objeto extensível.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.IExtension`1.Detach(`0)">
          <source>An extension can also throw <ph id="ph1">&lt;xref:System.InvalidOperationException?displayProperty=nameWithType&gt;</ph> from this method to indicate that, once added, the extension cannot be removed.</source>
          <target state="translated">Uma extensão também pode gerar <ph id="ph1">&lt;xref:System.InvalidOperationException?displayProperty=nameWithType&gt;</ph> desse método indica que, quando adicionado, a extensão não pode ser removida.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.IExtension`1.Detach(`0)">
          <source>Note that this method is not called when the owner object is disposed or closed.</source>
          <target state="translated">Observe que esse método não é chamado quando o objeto proprietário é descartado ou fechado.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.IExtension`1.Detach(`0)">
          <source>If needed, it is up to the extension or the code adding the extension to hook the appropriate <ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject?displayProperty=nameWithType&gt;</ph> events or implement the appropriate interfaces (for <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext?displayProperty=nameWithType&gt;</ph>) to observe the lifecycle of the owner.</source>
          <target state="translated">Se necessário, cabe a extensão ou o código de adicionar a extensão para conectar as <ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject?displayProperty=nameWithType&gt;</ph> eventos ou implemente as interfaces apropriadas (para <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext?displayProperty=nameWithType&gt;</ph>) para observar o ciclo de vida do proprietário.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>