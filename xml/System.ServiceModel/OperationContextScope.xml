<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="OperationContextScope.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac592b68d48771b6c7c4987c3fb267fd7fc41d167e5.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">92b68d48771b6c7c4987c3fb267fd7fc41d167e5</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.OperationContextScope">
          <source>Creates a block within which an <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> object is in scope.</source>
          <target state="translated">Cria um bloco no qual um objeto <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> está no escopo.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContextScope">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> class to create a scope for a specific <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> object or a scope for a new <ph id="ph3">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> object using a specified <ph id="ph4">&lt;xref:System.ServiceModel.IContextChannel&gt;</ph> object.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> classe para criar um escopo para um determinado <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> objeto ou um escopo para um novo <ph id="ph3">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> usando um especificado do objeto <ph id="ph4">&lt;xref:System.ServiceModel.IContextChannel&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContextScope">
          <source>An <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> can be used in a <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> service or <ph id="ph3">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> client application.</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> pode ser usado em uma <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> service ou <ph id="ph3">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> aplicativo cliente.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContextScope">
          <source>Once the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> object has established the current operation context, you can use the <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> to:</source>
          <target state="translated">Uma vez o <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> objeto estabeleceu o contexto da operação atual, você pode usar o <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> para:</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContextScope">
          <source>Access and modify incoming and outgoing message headers and other properties.</source>
          <target state="translated">Acessar e modificar os cabeçalhos de mensagem de entrada e saída e outras propriedades.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContextScope">
          <source>Access the runtime, including dispatchers, the host, channel, and extensions.</source>
          <target state="translated">O tempo de execução, incluindo distribuidores, o host, canal e extensões de acesso.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContextScope">
          <source>Access other types of contexts, such as security, instance, and request contexts.</source>
          <target state="translated">Outros tipos de contextos, como segurança, instância e contextos de solicitação de acesso.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContextScope">
          <source>Access the channel associated with the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> object or (if the channel implements <ph id="ph2">&lt;xref:System.ServiceModel.Channels.ISession?displayProperty=nameWithType&gt;</ph>) the associated channel's session identifier.</source>
          <target state="translated">Acessar o canal associado a <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> objeto ou (se o canal implementa <ph id="ph2">&lt;xref:System.ServiceModel.Channels.ISession?displayProperty=nameWithType&gt;</ph>) identificador de sessão do canal associado.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContextScope">
          <source>When an <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> is created, the current <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> is stored and the new <ph id="ph3">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> becomes the one returned by the <ph id="ph4">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph> property.</source>
          <target state="translated">Quando um <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> é criado, atual <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> é armazenado e o novo <ph id="ph3">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> torna-se aquele retornado pelo <ph id="ph4">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContextScope">
          <source>When the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> is disposed, the original <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> is restored.</source>
          <target state="translated">Quando o <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> é descartado, o original <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> for restaurado.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContextScope">
          <source>Do not use the asynchronous "await" pattern within a OperationContextScope block.</source>
          <target state="translated">Não use o padrão assíncrono "await" dentro de um bloco OperationContextScope.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContextScope">
          <source>When the continuation occurs, it may run on a different thread and OperationContextScope is thread specific.</source>
          <target state="translated">Quando ocorre a continuação, ela poderá ser executada em um thread diferente e OperationContextScope está thread específico.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContextScope">
          <source>If you need to call "await" for an async call, use it outside of the OperationContextScope block.</source>
          <target state="translated">Se você precisar chamar "await" para uma chamada assíncrona, usá-lo fora do bloco OperationContextScope.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContextScope">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> to create a new context in a client application to add a custom header to the outgoing message.</source>
          <target state="translated">O exemplo a seguir mostra como usar o <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> para criar um novo contexto em um aplicativo cliente para adicionar um cabeçalho personalizado à mensagem de saída.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.OperationContextScope">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContextScope" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContextScope" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.IContextChannel)">
          <source>The channel to use when creating the scope for a new <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</source>
          <target state="translated">O canal a ser usado ao criar o escopo de um novo <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.IContextChannel)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContextScope" /&gt;</ph> class that uses the specified <ph id="ph2">&lt;see cref="T:System.ServiceModel.IContextChannel" /&gt;</ph> to create a new <ph id="ph3">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> for the scope.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContextScope" /&gt;</ph> que usa o <ph id="ph2">&lt;see cref="T:System.ServiceModel.IContextChannel" /&gt;</ph> especificado para criar um novo <ph id="ph3">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> para o escopo.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.IContextChannel)">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope.%23ctor%2A&gt;</ph> constructor to create a new <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> for a client channel that can be used to add or modify outbound message headers, read incoming message headers, or access other run-time properties of the <ph id="ph3">&lt;xref:System.ServiceModel.OperationContext&gt;</ph>.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope.%23ctor%2A&gt;</ph> construtor para criar um novo <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> para um canal de cliente que pode ser usado para adicionar ou modificar os cabeçalhos de mensagem de saída, ler os cabeçalhos de mensagem de entrada, ou acessar outras propriedades de tempo de execução do <ph id="ph3">&lt;xref:System.ServiceModel.OperationContext&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.IContextChannel)">
          <source>The headers added to the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A?displayProperty=nameWithType&gt;</ph> property of the newly created <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> apply only to the channel that was passed to the <ph id="ph3">&lt;xref:System.ServiceModel.OperationContextScope.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">Os cabeçalhos adicionados para o <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A?displayProperty=nameWithType&gt;</ph> propriedade recém-criado <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> se aplicam somente ao canal que foi passado para o <ph id="ph3">&lt;xref:System.ServiceModel.OperationContextScope.%23ctor%2A&gt;</ph> construtor.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.IContextChannel)">
          <source>If the user creates a new channel within its scope then the headers are not applied to messages sent on the new channel.</source>
          <target state="translated">Se o usuário cria um novo canal de dentro de seu escopo os cabeçalhos não são aplicados às mensagens enviadas no canal de novo.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.IContextChannel)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> to create a new context in a client application in order to add a custom header to the outgoing message.</source>
          <target state="translated">O exemplo a seguir mostra como usar o <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> para criar um novo contexto em um aplicativo cliente para adicionar um cabeçalho personalizado à mensagem de saída.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.OperationContext)">
          <source>The active <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> in the created scope.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> ativo no escopo criado.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.OperationContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContextScope" /&gt;</ph> class to create a scope for the specified <ph id="ph2">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> object.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContextScope" /&gt;</ph> para criar um escopo para o objeto <ph id="ph2">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.OperationContext)">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope.%23ctor%2A&gt;</ph> constructor to create a code block within which the specified <ph id="ph2">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> object is the current scope.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.ServiceModel.OperationContextScope.%23ctor%2A&gt;</ph> construtor para criar um bloco de código dentro do qual especificado <ph id="ph2">&lt;xref:System.ServiceModel.OperationContextScope&gt;</ph> objeto é o escopo atual.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.OperationContextScope.Dispose">
          <source>Restores the original <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> to the active context and recycles the <ph id="ph2">&lt;see cref="T:System.ServiceModel.OperationContextScope" /&gt;</ph> object.</source>
          <target state="translated">Restaura o <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> original para o contexto ativo e recicla o objeto <ph id="ph2">&lt;see cref="T:System.ServiceModel.OperationContextScope" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>