<Type Name="ServiceKnownTypeAttribute" FullName="System.ServiceModel.ServiceKnownTypeAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="46ba0c5b9edd9f638599c4a33849d26f0f588d46" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39866295" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ServiceKnownTypeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ServiceKnownTypeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.ServiceKnownTypeAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ServiceKnownTypeAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceKnownTypeAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ServiceKnownTypeAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface | System.AttributeTargets.Method, AllowMultiple=true, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Interface, AllowMultiple=true, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Especifica tipos conhecidos a serem usados por um serviço ao serializar ou desserializar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ServiceModel.ServiceKnownTypeAttribute> destina para uso durante a criação de contratos de serviço do Windows Communication Foundation (WCF) (interfaces que definem o serviço e seus métodos). O *tipos conhecidos* são tipos que podem estar presentes em um gráfico de objeto quando ocorre a serialização ou desserialização. Para obter mais informações sobre tipos conhecidos, consulte [tipos conhecidos de contrato de dados](~/docs/framework/wcf/feature-details/data-contract-known-types.md).  
  
 Para usar o <xref:System.ServiceModel.ServiceKnownTypeAttribute.MethodName%2A> propriedade, crie uma classe que contém um método (ou métodos) que retorna uma matriz de tipos (cada um sendo um tipo conhecido). Ao aplicar o atributo, defina a `methodName` para o nome de um método que retorna a lista de tipos e defina o `declaringType` para o tipo que contém o método. O método deve retornar um tipo que implementa o <xref:System.Collections.Generic.IEnumerable%601> interface. O método também deve incluir um parâmetro de tipo <xref:System.Reflection.ICustomAttributeProvider>.  
  
 Você também pode aplicar o atributo várias vezes para uma interface, classe ou método, cada vez especificando um novo tipo conhecido.  
  
> [!NOTE]
>  Você pode usar a palavra `ServiceKnownType` em seu código do Microsoft Visual Basic ou c# em vez de mais tempo `ServiceKnownTypeAttribute`.  
  
   
  
## Examples  
 O exemplo a seguir se aplica a <xref:System.ServiceModel.ServiceKnownTypeAttribute> a uma interface em que o atributo especifica um nome de método e um tipo de declaração de atributo.  
  
 [!code-csharp[ServiceKnownTypeAttribute#1](~/samples/snippets/csharp/VS_Snippets_CFX/serviceknowntypeattribute/cs/source.cs#1)]
 [!code-vb[ServiceKnownTypeAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/serviceknowntypeattribute/vb/source.vb#1)]  
  
 Como alternativa, aplique o atributo para a interface especificando o tipo conhecido para incluir.  
  
 [!code-csharp[ServiceKnownTypeAttribute#2](~/samples/snippets/csharp/VS_Snippets_CFX/serviceknowntypeattribute/cs/source.cs#2)]
 [!code-vb[ServiceKnownTypeAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/serviceknowntypeattribute/vb/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Serialization.DataContractAttribute" />
    <altmember cref="T:System.Runtime.Serialization.DataMemberAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceKnownTypeAttribute (string methodName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string methodName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (methodName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceKnownTypeAttribute(System::String ^ methodName);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.ServiceKnownTypeAttribute : string -&gt; System.ServiceModel.ServiceKnownTypeAttribute" Usage="new System.ServiceModel.ServiceKnownTypeAttribute methodName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="methodName">O nome de um método que retorna os tipos conhecidos.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /> e especifica o nome de um método que retorna os tipos conhecidos.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use este construtor ao aplicar o <xref:System.ServiceModel.ServiceKnownTypeAttribute> a uma classe que contém métodos que retornam tipos conhecidos.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceModel.ServiceKnownTypeAttribute.DeclaringType" />
        <altmember cref="P:System.ServiceModel.ServiceKnownTypeAttribute.MethodName" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceKnownTypeAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceKnownTypeAttribute(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.ServiceKnownTypeAttribute : Type -&gt; System.ServiceModel.ServiceKnownTypeAttribute" Usage="new System.ServiceModel.ServiceKnownTypeAttribute type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Especifica um tipo conhecido que pode ser usado em um parâmetro ou valor retornado definido pelo serviço.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /> com o tipo conhecido especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ServiceModel.ServiceKnownTypeAttribute> pode ser aplicado várias vezes a um método, com cada aplicativo de nomenclatura outro tipo que pode estar presente no grafo de objeto retornado pelo método conhecido.  
  
   
  
## Examples  
 O exemplo a seguir se aplica a <xref:System.ServiceModel.ServiceKnownTypeAttribute> do atributo a uma interface em que o atributo especifica o tipo a ser incluído.  
  
 [!code-csharp[ServiceKnownTypeAttribute#2](~/samples/snippets/csharp/VS_Snippets_CFX/serviceknowntypeattribute/cs/source.cs#2)]
 [!code-vb[ServiceKnownTypeAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/serviceknowntypeattribute/vb/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceKnownTypeAttribute (string methodName, Type declaringType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string methodName, class System.Type declaringType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (methodName As String, declaringType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceKnownTypeAttribute(System::String ^ methodName, Type ^ declaringType);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.ServiceKnownTypeAttribute : string * Type -&gt; System.ServiceModel.ServiceKnownTypeAttribute" Usage="new System.ServiceModel.ServiceKnownTypeAttribute (methodName, declaringType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="declaringType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="methodName">O nome de um método que retorna os tipos conhecidos.</param>
        <param name="declaringType">O tipo que pode usar os tipos conhecidos em seu grafo de objeto.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /> com o nome de um método que retorna os tipos conhecidos e o tipo que contém o método (ou métodos) que retorna os tipos conhecidos.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir se aplica a <xref:System.ServiceModel.ServiceKnownTypeAttribute> a uma interface em que o atributo especifica um nome de método e um tipo de declaração de atributo.  
  
 [!code-csharp[ServiceKnownTypeAttribute#1](~/samples/snippets/csharp/VS_Snippets_CFX/serviceknowntypeattribute/cs/source.cs#1)]
 [!code-vb[ServiceKnownTypeAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/serviceknowntypeattribute/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceModel.ServiceKnownTypeAttribute.DeclaringType" />
        <altmember cref="P:System.ServiceModel.ServiceKnownTypeAttribute.MethodName" />
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public Type DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DeclaringType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceKnownTypeAttribute.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeclaringType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ DeclaringType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeclaringType : Type" Usage="System.ServiceModel.ServiceKnownTypeAttribute.DeclaringType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o tipo que contém os métodos que retornam os tipos conhecidos.</summary>
        <value>O <see cref="T:System.Type" /> que contém os métodos que retornam os tipos conhecidos.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodName">
      <MemberSignature Language="C#" Value="public string MethodName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MethodName" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceKnownTypeAttribute.MethodName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MethodName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MethodName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MethodName : string" Usage="System.ServiceModel.ServiceKnownTypeAttribute.MethodName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o nome de um método que retorna a coleção de tipos conhecidos.</summary>
        <value>O nome do método que retorna os tipos conhecidos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ServiceModel.ServiceKnownTypeAttribute.MethodName%2A> deve ser o nome de um método no tipo especificado pelo <xref:System.ServiceModel.ServiceKnownTypeAttribute.DeclaringType%2A> propriedade.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceKnownTypeAttribute.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : Type" Usage="System.ServiceModel.ServiceKnownTypeAttribute.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>O tipo conhecido que pode ser incluído em um grafo de objeto.</summary>
        <value>O <see cref="T:System.Type" /> do tipo conhecido.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>