<Type Name="Html32TextWriter" FullName="System.Web.UI.Html32TextWriter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8f2be68c050a5b383753b63b544a9149dbb02c76" /><Meta Name="ms.sourcegitcommit" Value="3efce15f3841385ee3ba24bd71ff0c0cf9a47815" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="04/03/2019" /><Meta Name="ms.locfileid" Value="58875210" /></Metadata><TypeSignature Language="C#" Value="public class Html32TextWriter : System.Web.UI.HtmlTextWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Html32TextWriter extends System.Web.UI.HtmlTextWriter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Html32TextWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class Html32TextWriter&#xA;Inherits HtmlTextWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class Html32TextWriter : System::Web::UI::HtmlTextWriter" />
  <TypeSignature Language="F#" Value="type Html32TextWriter = class&#xA;    inherit HtmlTextWriter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlTextWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Grava uma série de caracteres específicos do HTML 3.2 e um texto no fluxo de saída de um controle de servidor ASP.NET. A classe <see cref="T:System.Web.UI.Html32TextWriter" /> fornece funcionalidades de formatação que os controles de servidor ASP.NET usam ao renderizar o conteúdo HTML 3.2 para os clientes.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.Html32TextWriter> classe é uma alternativa para o <xref:System.Web.UI.HtmlTextWriter> classe. Ele converte os atributos de estilo HTML 4.0 nos atributos e marcas de HTML 3.2 equivalente. Ele padroniza a propagação de atributos, como cores e fontes, usar tabelas HTML. ASP.NET usa automaticamente essa classe para HTML 3.2 e navegadores anteriores, verificando o <xref:System.Web.Configuration.HttpCapabilitiesBase.TagWriter%2A> propriedade do <xref:System.Web.HttpBrowserCapabilities> classe. A menos que você crie uma página personalizada ou um adaptador de controle que se destina a dispositivos que usam a marcação HTML 3.2, você não precisará criar uma instância da <xref:System.Web.UI.Html32TextWriter> classe explicitamente.  
  
 Para obter mais informações sobre como personalizar a página e renderização de controle, consulte [passo a passo: Controle de servidor Web de desenvolvimento e o uso de um personalizado](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar uma classe chamada `CustomHtml32TextWriter`, que deriva de <xref:System.Web.UI.Html32TextWriter> classe. `CustomHtml32TextWriter` cria dois construtores que seguem o padrão é estabelecida pela <xref:System.Web.UI.HtmlTextWriter> classe e substitui o <xref:System.Web.UI.Html32TextWriter.RenderBeforeContent%2A>, <xref:System.Web.UI.Html32TextWriter.RenderAfterContent%2A>, <xref:System.Web.UI.Html32TextWriter.RenderBeforeTag%2A>, e <xref:System.Web.UI.Html32TextWriter.RenderAfterTag%2A> métodos.  
  
 [!code-csharp[System.Web.UI.Html32TextWriter_Samples1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/cs/html32textwritersamps.cs#1)]
 [!code-vb[System.Web.UI.Html32TextWriter_Samples1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/VB/html32textwritersamps.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlTextWriter" />
    <related type="Article" href="https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08">Passo a passo: Desenvolver e usar um controle de servidor personalizado</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.UI.Html32TextWriter" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Html32TextWriter (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Html32TextWriter.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Html32TextWriter(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.Html32TextWriter : System.IO.TextWriter -&gt; System.Web.UI.Html32TextWriter" Usage="new System.Web.UI.Html32TextWriter writer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">O <see cref="T:System.IO.TextWriter" /> que renderiza o conteúdo HTML.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.UI.Html32TextWriter" /> que usa o recuo de linha especificado no campo <see cref="F:System.Web.UI.HtmlTextWriter.DefaultTabString" /> quando o navegador solicitante requer recuo de linha.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.Html32TextWriter.%23ctor%2A> construtor passa a <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> campo valor para uma segunda versão que tem dois parâmetros a seguir:  
  
-   `writer`, que usa uma instância da <xref:System.IO.TextWriter> classe.  
  
-   `tabString`, que usa uma cadeia de caracteres que define o recuo de linha.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar uma classe personalizada que deriva de <xref:System.Web.UI.Html32TextWriter> classe. Ele tem dois construtores, que é o padrão para todas as classes que derivam direta ou indiretamente a <xref:System.Web.UI.HtmlTextWriter> classe.  
  
 [!code-csharp[System.Web.UI.Html32TextWriter_Samples1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/cs/html32textwritersamps.cs#1)]
 [!code-vb[System.Web.UI.Html32TextWriter_Samples1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/VB/html32textwritersamps.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Html32TextWriter (System.IO.TextWriter writer, string tabString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer, string tabString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Html32TextWriter.#ctor(System.IO.TextWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter, tabString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Html32TextWriter(System::IO::TextWriter ^ writer, System::String ^ tabString);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.Html32TextWriter : System.IO.TextWriter * string -&gt; System.Web.UI.Html32TextWriter" Usage="new System.Web.UI.Html32TextWriter (writer, tabString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="tabString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">O <see cref="T:System.IO.TextWriter" /> que renderiza o conteúdo HTML 3.2.</param>
        <param name="tabString">Uma cadeia de caracteres que representa o número de espaços definidos pelo <see cref="P:System.Web.UI.HtmlTextWriter.Indent" />.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.UI.Html32TextWriter" /> que usa o recuo de linha especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir demonstra como usar uma classe personalizada que deriva de <xref:System.Web.UI.Html32TextWriter> classe. Ele tem dois construtores, que é o padrão para todas as classes que derivam direta ou indiretamente a <xref:System.Web.UI.HtmlTextWriter> classe.  
  
 [!code-csharp[System.Web.UI.Html32TextWriter_Samples1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/cs/html32textwritersamps.cs#1)]
 [!code-vb[System.Web.UI.Html32TextWriter_Samples1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/VB/html32textwritersamps.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="P:System.Web.UI.HtmlTextWriter.Indent" />
      </Docs>
    </Member>
    <Member MemberName="FontStack">
      <MemberSignature Language="C#" Value="protected System.Collections.Stack FontStack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Stack FontStack" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Html32TextWriter.FontStack" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property FontStack As Stack" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Stack ^ FontStack { System::Collections::Stack ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FontStack : System.Collections.Stack" Usage="System.Web.UI.Html32TextWriter.FontStack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Stack</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém uma coleção de informações de fonte para o HTML renderizar.</summary>
        <value>A coleção de informações de fonte.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTagName">
      <MemberSignature Language="C#" Value="protected override string GetTagName (System.Web.UI.HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetTagName(valuetype System.Web.UI.HtmlTextWriterTag tagKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Html32TextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetTagName (tagKey As HtmlTextWriterTag) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetTagName(System::Web::UI::HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="F#" Value="override this.GetTagName : System.Web.UI.HtmlTextWriterTag -&gt; string" Usage="html32TextWriter.GetTagName tagKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagKey" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="tagKey">O valor da enumeração <see cref="T:System.Web.UI.HtmlTextWriterTag" /> para o qual obter o elemento HTML.</param>
        <summary>Retorna o elemento HTML associado ao valor de enumeração <see cref="T:System.Web.UI.HtmlTextWriterTag" /> especificado.</summary>
        <returns>O elemento HTML.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o <xref:System.Web.UI.HtmlTextWriterTag.Div?displayProperty=nameWithType> campo é passado `tagKey` e o <xref:System.Web.UI.Html32TextWriter.ShouldPerformDivTableSubstitution%2A> é de propriedade `true`, o <xref:System.Web.UI.Html32TextWriter.GetTagName%2A> método retorna o `table` elemento.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStyleAttributeRender">
      <MemberSignature Language="C#" Value="protected override bool OnStyleAttributeRender (string name, string value, System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnStyleAttributeRender(string name, string value, valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Html32TextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnStyleAttributeRender (name As String, value As String, key As HtmlTextWriterStyle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnStyleAttributeRender(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberSignature Language="F#" Value="override this.OnStyleAttributeRender : string * string * System.Web.UI.HtmlTextWriterStyle -&gt; bool" Usage="html32TextWriter.OnStyleAttributeRender (name, value, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="name">O atributo de estilo HTML a gravar no fluxo de saída.</param>
        <param name="value">O valor associado ao atributo de estilo HTML.</param>
        <param name="key">O valor da enumeração <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> associado ao atributo de estilo HTML.</param>
        <summary>Determina se é necessário gravar o atributo de estilo HTML especificado e o respectivo valor no fluxo de saída.</summary>
        <returns><see langword="true" /> se o atributo de estilo HTML e seu valor forem renderizados no fluxo de saída; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.Html32TextWriter.OnStyleAttributeRender%2A> método dá suporte a um número menor de atributos de estilo HTML que o <xref:System.Web.UI.Html32TextWriter.OnStyleAttributeRender%2A> método que ele substitui.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTagRender">
      <MemberSignature Language="C#" Value="protected override bool OnTagRender (string name, System.Web.UI.HtmlTextWriterTag key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnTagRender(string name, valuetype System.Web.UI.HtmlTextWriterTag key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Html32TextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnTagRender (name As String, key As HtmlTextWriterTag) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnTagRender(System::String ^ name, System::Web::UI::HtmlTextWriterTag key);" />
      <MemberSignature Language="F#" Value="override this.OnTagRender : string * System.Web.UI.HtmlTextWriterTag -&gt; bool" Usage="html32TextWriter.OnTagRender (name, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="name">O elemento HTML a gravar no fluxo de saída.</param>
        <param name="key">O valor da enumeração <see cref="T:System.Web.UI.HtmlTextWriterTag" /> associado ao elemento HTML.</param>
        <summary>Determina se é necessário gravar o elemento HTML especificado no fluxo de saída.</summary>
        <returns><see langword="true" /> se o elemento HTML for gravado no fluxo de saída; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o <xref:System.Web.UI.Html32TextWriter.ShouldPerformDivTableSubstitution%2A> é de propriedade `true`, o <xref:System.Web.UI.Html32TextWriter.OnTagRender%2A> método substitui qualquer `div` elementos que são processados por um controle com `table` elementos.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderAfterContent">
      <MemberSignature Language="C#" Value="protected override string RenderAfterContent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string RenderAfterContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Html32TextWriter.RenderAfterContent" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function RenderAfterContent () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ RenderAfterContent();" />
      <MemberSignature Language="F#" Value="override this.RenderAfterContent : unit -&gt; string" Usage="html32TextWriter.RenderAfterContent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Grava qualquer texto ou espaçamento que aparece depois do conteúdo do elemento HTML.</summary>
        <returns>O espaçamento ou o texto a ser gravado após o conteúdo do elemento HTML; caso contrário, se não houver nenhuma dessas informações para renderizar, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir demonstra como substituir o <xref:System.Web.UI.Html32TextWriter.RenderAfterContent%2A> método. Cada substituído o método primeiro verifica se um `th` elemento está sendo renderizado e, em seguida, usa o <xref:System.Web.UI.Html32TextWriter.SupportsBold%2A> método para verificar se o dispositivo solicitante pode exibir a formatação em negrito. Se o dispositivo dá suporte à formatação em negrito, o <xref:System.Web.UI.Html32TextWriter.RenderAfterContent%2A> método grava a marca de fechamento de um `b` elemento. Se o dispositivo não dá suporte a formatação em negrito, o <xref:System.Web.UI.Html32TextWriter.RenderAfterContent%2A> método grava a marca de fechamento de um `font` elemento.  
  
 Em seguida, o código verifica se um `h4` elemento está sendo renderizado e, em seguida, usa o <xref:System.Web.UI.Html32TextWriter.SupportsItalic%2A> propriedade para verificar se o dispositivo solicitante pode exibir a formatação de itálico. Se o dispositivo dá suporte à formatação de itálico, o <xref:System.Web.UI.Html32TextWriter.RenderAfterContent%2A> método grava a marca de fechamento de um `i` elemento. Se o dispositivo não dá suporte a formatação de itálico, o <xref:System.Web.UI.Html32TextWriter.RenderAfterContent%2A> método grava a marca de fechamento de um `font` elemento.  
  
 Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Web.UI.Html32TextWriter> classe.  
  
 [!code-csharp[System.Web.UI.Html32TextWriter_Samples1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/cs/html32textwritersamps.cs#4)]
 [!code-vb[System.Web.UI.Html32TextWriter_Samples1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/VB/html32textwritersamps.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Html32TextWriter.RenderBeforeContent" />
      </Docs>
    </Member>
    <Member MemberName="RenderAfterTag">
      <MemberSignature Language="C#" Value="protected override string RenderAfterTag ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string RenderAfterTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Html32TextWriter.RenderAfterTag" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function RenderAfterTag () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ RenderAfterTag();" />
      <MemberSignature Language="F#" Value="override this.RenderAfterTag : unit -&gt; string" Usage="html32TextWriter.RenderAfterTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Grava o espaçamento ou texto que ocorre após a marca de fechamento de um elemento HTML.</summary>
        <returns>O espaçamento ou o texto a ser gravado após a marca de fechamento do elemento HTML; caso contrário, se não houver nenhuma dessas informações para renderizar, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir demonstra como substituir o <xref:System.Web.UI.Html32TextWriter.RenderAfterTag%2A> método. O código verifica se um `a` elemento está sendo renderizado. Nesse caso, o <xref:System.Web.UI.Html32TextWriter.RenderAfterTag%2A> método grava a marca de fechamento de um `small` elemento. O exemplo para o <xref:System.Web.UI.Html32TextWriter.RenderBeforeTag%2A> método executa a mesma verificação para o `a` elemento e, em seguida, grava a marca de abertura do `small` elemento.  
  
 Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Web.UI.Html32TextWriter> classe.  
  
 [!code-csharp[System.Web.UI.Html32TextWriter_Samples1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/cs/html32textwritersamps.cs#5)]
 [!code-vb[System.Web.UI.Html32TextWriter_Samples1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/VB/html32textwritersamps.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Html32TextWriter.RenderBeforeTag" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeforeContent">
      <MemberSignature Language="C#" Value="protected override string RenderBeforeContent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string RenderBeforeContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Html32TextWriter.RenderBeforeContent" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function RenderBeforeContent () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ RenderBeforeContent();" />
      <MemberSignature Language="F#" Value="override this.RenderBeforeContent : unit -&gt; string" Usage="html32TextWriter.RenderBeforeContent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Grava o espaçamento de guia ou informações de fonte que aparecem antes do conteúdo contido em um elemento HTML.</summary>
        <returns>As informações de fonte ou o espaçamento a gravar antes do conteúdo do elemento HTML; caso contrário, se não houver nenhuma dessas informações para renderizar, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir demonstra como substituir o <xref:System.Web.UI.Html32TextWriter.RenderBeforeContent%2A> método. O código verifica se um `th` elemento está sendo renderizado e, em seguida, usa o <xref:System.Web.UI.Html32TextWriter.SupportsBold%2A> método para verificar se o dispositivo solicitante pode exibir a formatação em negrito. Se o dispositivo dá suporte à formatação em negrito, o <xref:System.Web.UI.Html32TextWriter.RenderBeforeContent%2A> método grava a marca de abertura de um `b` elemento. Se o dispositivo não dá suporte a formatação em negrito, o <xref:System.Web.UI.Html32TextWriter.RenderBeforeContent%2A> método grava a marca de abertura de um `font` elemento com um `color` atributo definido como o valor hexadecimal para vermelho.  
  
 Em seguida, cada método verifica se um `h4` elemento está sendo renderizado e, em seguida, usa o <xref:System.Web.UI.Html32TextWriter.SupportsItalic%2A> propriedade para verificar se o dispositivo solicitante pode exibir a formatação de itálico. Se o dispositivo dá suporte à formatação de itálico, o <xref:System.Web.UI.Html32TextWriter.RenderBeforeContent%2A> método grava a marca de abertura de um `i` elemento. Se o dispositivo não dá suporte a formatação de itálico, o <xref:System.Web.UI.Html32TextWriter.RenderBeforeContent%2A> método grava a marca de abertura de um `font` elemento com um `color` atributo definido como o valor hexadecimal do azul marinho.  
  
 Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Web.UI.Html32TextWriter> classe.  
  
 [!code-csharp[System.Web.UI.Html32TextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/cs/html32textwritersamps.cs#2)]
 [!code-vb[System.Web.UI.Html32TextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/VB/html32textwritersamps.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Html32TextWriter.RenderAfterContent" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeforeTag">
      <MemberSignature Language="C#" Value="protected override string RenderBeforeTag ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string RenderBeforeTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Html32TextWriter.RenderBeforeTag" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function RenderBeforeTag () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ RenderBeforeTag();" />
      <MemberSignature Language="F#" Value="override this.RenderBeforeTag : unit -&gt; string" Usage="html32TextWriter.RenderBeforeTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Grava qualquer texto ou espaçamento de guia que ocorre antes da marca de abertura de um elemento HTML para o fluxo de saída HTML 3.2.</summary>
        <returns>As informações de espaçamento e de fonte HTML a renderizar antes da marca; caso contrário, se não houver nenhuma dessas informações para renderizar, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir demonstra como substituir o <xref:System.Web.UI.Html32TextWriter.RenderBeforeTag%2A> método. O código verifica se um `a` elemento está sendo renderizado. Nesse caso, substituído <xref:System.Web.UI.Html32TextWriter.RenderBeforeTag%2A> método grava a marca de abertura de um `small` elemento. O exemplo para o <xref:System.Web.UI.Html32TextWriter.RenderAfterTag%2A> executa a mesma verificação para o `a` elemento e, em seguida, grava a marca de fechamento do `small` elemento.  
  
 Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Web.UI.Html32TextWriter> classe.  
  
 [!code-csharp[System.Web.UI.Html32TextWriter_Samples1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/cs/html32textwritersamps.cs#3)]
 [!code-vb[System.Web.UI.Html32TextWriter_Samples1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/VB/html32textwritersamps.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Html32TextWriter.RenderAfterTag" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public override void RenderBeginTag (System.Web.UI.HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderBeginTag(valuetype System.Web.UI.HtmlTextWriterTag tagKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Html32TextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderBeginTag (tagKey As HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderBeginTag(System::Web::UI::HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="F#" Value="override this.RenderBeginTag : System.Web.UI.HtmlTextWriterTag -&gt; unit" Usage="html32TextWriter.RenderBeginTag tagKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagKey" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="tagKey">O valor de enumeração <see cref="T:System.Web.UI.HtmlTextWriterTag" /> que indica qual elemento HTML gravar.</param>
        <summary>Grava a marca de abertura do elemento especificado no fluxo de saída HTML 3.2.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se um `div` elemento for especificado e o <xref:System.Web.UI.Html32TextWriter.ShouldPerformDivTableSubstitution%2A> é o valor da propriedade `true`, o <xref:System.Web.UI.Html32TextWriter.RenderBeginTag%2A> método executa básico `table` elemento formatação para apresentar o conteúdo que está contido no `div` elemento.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="public override void RenderEndTag ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderEndTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Html32TextWriter.RenderEndTag" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderEndTag ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderEndTag();" />
      <MemberSignature Language="F#" Value="override this.RenderEndTag : unit -&gt; unit" Usage="html32TextWriter.RenderEndTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Grava a marca de fim de um elemento HTML no fluxo de saída <see cref="T:System.Web.UI.Html32TextWriter" />, juntamente com qualquer informação de fonte associada ao elemento.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldPerformDivTableSubstitution">
      <MemberSignature Language="C#" Value="public bool ShouldPerformDivTableSubstitution { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShouldPerformDivTableSubstitution" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Html32TextWriter.ShouldPerformDivTableSubstitution" />
      <MemberSignature Language="VB.NET" Value="Public Property ShouldPerformDivTableSubstitution As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShouldPerformDivTableSubstitution { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShouldPerformDivTableSubstitution : bool with get, set" Usage="System.Web.UI.Html32TextWriter.ShouldPerformDivTableSubstitution" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor booliano que indica se é necessário substituir um elemento <see langword="Table" /> por um elemento <see langword="Div" /> para reduzir o tempo que leva para renderizar um bloco de HTML.</summary>
        <value><see langword="true" /> para substituir <see langword="Table" /> com <see langword="Div" />; caso contrário, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsBold">
      <MemberSignature Language="C#" Value="public bool SupportsBold { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsBold" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Html32TextWriter.SupportsBold" />
      <MemberSignature Language="VB.NET" Value="Public Property SupportsBold As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SupportsBold { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SupportsBold : bool with get, set" Usage="System.Web.UI.Html32TextWriter.SupportsBold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor booliano que indica se a solicitação do dispositivo dá suporte a texto HTML em negrito. Use a propriedade <see cref="P:System.Web.UI.Html32TextWriter.SupportsBold" /> para renderizar condicionalmente texto em negrito para o fluxo de saída <see cref="T:System.Web.UI.Html32TextWriter" />.</summary>
        <value><see langword="true" /> Se o dispositivo solicitante der suporte a texto em negrito; Caso contrário, <see langword="false" />. O padrão é <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir demonstra como substituir a <xref:System.Web.UI.Html32TextWriter.RenderBeforeContent%2A> e <xref:System.Web.UI.Html32TextWriter.RenderAfterContent%2A> métodos. Cada substituição verifica se um `Label` elemento está sendo renderizado e, em seguida, usa o <xref:System.Web.UI.Html32TextWriter.SupportsBold%2A> método para verificar se o dispositivo solicitante pode exibir a formatação em negrito. Se o dispositivo dá suporte à formatação em negrito, o <xref:System.Web.UI.Html32TextWriter.RenderBeforeContent%2A> método grava a marca de abertura de um `b` elemento e o <xref:System.Web.UI.Html32TextWriter.RenderAfterContent%2A> método grava a marca de fechamento. Se o dispositivo não dá suporte a formatação em negrito, o <xref:System.Web.UI.Html32TextWriter.RenderBeforeContent%2A> método grava a marca de abertura de um `Font` elemento com um `color` atributo definido como o valor hexadecimal para vermelho e o <xref:System.Web.UI.Html32TextWriter.RenderAfterContent%2A> método grava a marca de fechamento.  
  
 Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Web.UI.Html32TextWriter> classe.  
  
 [!code-csharp[System.Web.UI.Html32TextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/cs/html32textwritersamps.cs#2)]
 [!code-vb[System.Web.UI.Html32TextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/VB/html32textwritersamps.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Html32TextWriter.RenderBeforeContent" />
        <altmember cref="M:System.Web.UI.Html32TextWriter.RenderAfterContent" />
        <altmember cref="P:System.Web.UI.Html32TextWriter.SupportsItalic" />
      </Docs>
    </Member>
    <Member MemberName="SupportsItalic">
      <MemberSignature Language="C#" Value="public bool SupportsItalic { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsItalic" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Html32TextWriter.SupportsItalic" />
      <MemberSignature Language="VB.NET" Value="Public Property SupportsItalic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SupportsItalic { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SupportsItalic : bool with get, set" Usage="System.Web.UI.Html32TextWriter.SupportsItalic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor booliano que indica se a solicitação do dispositivo dá suporte a texto HTML em itálico. Use a propriedade <see cref="P:System.Web.UI.Html32TextWriter.SupportsItalic" /> para renderizar condicionalmente texto em itálico para o fluxo de saída <see cref="T:System.Web.UI.Html32TextWriter" />.</summary>
        <value><see langword="true" /> Se o dispositivo solicitante der suporte a texto em itálico; Caso contrário, <see langword="false" />. O padrão é <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir demonstra como substituir a <xref:System.Web.UI.Html32TextWriter.RenderBeforeContent%2A> e <xref:System.Web.UI.Html32TextWriter.RenderAfterContent%2A> métodos. Cada substituição verifica se um `span` elemento está sendo renderizado e, em seguida, usa o <xref:System.Web.UI.Html32TextWriter.SupportsItalic%2A> propriedade para verificar se o dispositivo solicitante pode exibir a formatação de itálico. Se o dispositivo dá suporte à formatação de itálico, o <xref:System.Web.UI.Html32TextWriter.RenderBeforeContent%2A> método grava a marca de abertura de um `i` elemento e o <xref:System.Web.UI.Html32TextWriter.RenderAfterContent%2A> método grava a marca de fechamento. Se o dispositivo não dá suporte a formatação de itálico, o <xref:System.Web.UI.Html32TextWriter.RenderBeforeContent%2A> método grava a marca de abertura de um `Font` elemento com um `color` atributo definido como o valor hexadecimal do azul marinho e o <xref:System.Web.UI.Html32TextWriter.RenderAfterContent%2A> método grava a marca de fechamento.  
  
 Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Web.UI.Html32TextWriter> classe.  
  
 [!code-csharp[System.Web.UI.Html32TextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/cs/html32textwritersamps.cs#2)]
 [!code-vb[System.Web.UI.Html32TextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/VB/html32textwritersamps.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Html32TextWriter.RenderBeforeContent" />
        <altmember cref="M:System.Web.UI.Html32TextWriter.RenderAfterContent" />
        <altmember cref="P:System.Web.UI.Html32TextWriter.SupportsBold" />
      </Docs>
    </Member>
  </Members>
</Type>