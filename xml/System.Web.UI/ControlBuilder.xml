<Type Name="ControlBuilder" FullName="System.Web.UI.ControlBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f9f189e34352a9bc82c2ac71e575d4e05ef76238" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30611060" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ControlBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ControlBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ControlBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class ControlBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class ControlBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="113c4-101">Dá suporte ao analisador de página ao criar um controle e os controles filhos que ele contém.</span>
      <span class="sxs-lookup">
        <span data-stu-id="113c4-101">Supports the page parser in building a control and the child controls it contains.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="113c4-102">Por padrão, cada controle em uma página é associado com um padrão <xref:System.Web.UI.ControlBuilder> classe.</span><span class="sxs-lookup"><span data-stu-id="113c4-102">By default, every control on a page is associated with a default <xref:System.Web.UI.ControlBuilder> class.</span></span> <span data-ttu-id="113c4-103">Durante a análise, a estrutura da página ASP.NET cria uma árvore de <xref:System.Web.UI.ControlBuilder> objetos correspondentes para a árvore de controles para a página.</span><span class="sxs-lookup"><span data-stu-id="113c4-103">During parsing, the ASP.NET page framework builds a tree of <xref:System.Web.UI.ControlBuilder> objects corresponding to the tree of controls for the page.</span></span> <span data-ttu-id="113c4-104">O <xref:System.Web.UI.ControlBuilder> árvore é usada para gerar o código de página para criar a árvore de controle.</span><span class="sxs-lookup"><span data-stu-id="113c4-104">The <xref:System.Web.UI.ControlBuilder> tree is then used to generate page code to create the control tree.</span></span> <span data-ttu-id="113c4-105">Além dos controles filho, o <xref:System.Web.UI.ControlBuilder> define o comportamento de como o conteúdo dentro de marcas de controle é analisado.</span><span class="sxs-lookup"><span data-stu-id="113c4-105">In addition to child controls, the <xref:System.Web.UI.ControlBuilder> defines the behavior of how the content within control tags is parsed.</span></span> <span data-ttu-id="113c4-106">Você pode substituir esse comportamento padrão definindo sua própria classe de construtor do controle personalizado.</span><span class="sxs-lookup"><span data-stu-id="113c4-106">You can override this default behavior by defining your own custom control builder class.</span></span> <span data-ttu-id="113c4-107">Isso é feito aplicando um <xref:System.Web.UI.ControlBuilderAttribute> atributo à sua classe de construtor do controle da seguinte maneira:</span><span class="sxs-lookup"><span data-stu-id="113c4-107">This is done by applying a <xref:System.Web.UI.ControlBuilderAttribute> attribute to your control builder class as follows:</span></span>  
  
 `[ControlBuilderAttribute(typeof(ControlBuilderType))]`  
  
   
  
## Examples  
 <span data-ttu-id="113c4-108">O exemplo de código a seguir cria um <xref:System.Web.UI.WebControls.Table> controle cujos atributos e conteúdo é definido no momento em que a tabela é criada.</span><span class="sxs-lookup"><span data-stu-id="113c4-108">The following code example creates a <xref:System.Web.UI.WebControls.Table> control whose attributes and content are defined at the time the table is built.</span></span> <span data-ttu-id="113c4-109">A seguir está a linha de comando a ser usado para criar o arquivo executável.</span><span class="sxs-lookup"><span data-stu-id="113c4-109">The following is the command line to use to build the executable.</span></span>  
  
```vb  
vbc /r:System.dll /r:System.Web.dll /r:System.Drawing.dll /t:library /out:myWebAppPath/Bin/vb_mycontrolbuilder.dll myControlBuilder.vb  
```  
  
```csharp  
csc /t:library /out:myWebAppPath/Bin/cs_mycontrolbuilder.dll myControlBuilder.cs  
```  
  
 [!code-csharp[SystemWebUI_ControlBuilder_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/SystemWebUI_ControlBuilder_2/CS/controlbuilder.cs#1)]
 [!code-vb[SystemWebUI_ControlBuilder_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SystemWebUI_ControlBuilder_2/VB/controlbuilder.vb#1)]  
  
 <span data-ttu-id="113c4-110">O exemplo de código a seguir usa o controle personalizado anterior.</span><span class="sxs-lookup"><span data-stu-id="113c4-110">The following code example uses the previous custom control.</span></span> <span data-ttu-id="113c4-111">Em particular, ele cria uma tabela cujos atributos e conteúdo são definidos em tempo de execução.</span><span class="sxs-lookup"><span data-stu-id="113c4-111">In particular, it builds a table whose attributes and content are defined at run time.</span></span> <span data-ttu-id="113c4-112">Observe que os valores mostrados na diretiva de refletem a linha de comando anterior.</span><span class="sxs-lookup"><span data-stu-id="113c4-112">Notice that the values shown in the  directive reflect the previous command line.</span></span>  
  
 [!code-aspx-csharp[SystemWebUI_ControlBuilder_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/SystemWebUI_ControlBuilder_2/CS/controlbuilder.aspx#2)]
 [!code-aspx-vb[SystemWebUI_ControlBuilder_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SystemWebUI_ControlBuilder_2/VB/controlbuilder.aspx#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Control" />
    <altmember cref="T:System.Web.UI.WebControls.WebControl" />
    <altmember cref="T:System.Web.UI.Page" />
    <altmember cref="T:System.Web.UI.ControlBuilderAttribute" />
    <altmember cref="T:System.Web.UI.ParseChildrenAttribute" />
    <altmember cref="T:System.Web.UI.PersistChildrenAttribute" />
    <altmember cref="M:System.Web.UI.Control.AddParsedSubObject(System.Object)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ControlBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ControlBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="113c4-113">Inicializa uma nova instância da classe <see cref="T:System.Web.UI.ControlBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-113">Initializes a new instance of the <see cref="T:System.Web.UI.ControlBuilder" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="113c4-114">Use este construtor para criar uma nova instância de <xref:System.Web.UI.ControlBuilder> classe.</span><span class="sxs-lookup"><span data-stu-id="113c4-114">Use this constructor to create a new instance the <xref:System.Web.UI.ControlBuilder> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="113c4-115">Este construtor é geralmente usado pelo ASP.NET ao analisar a página e criar a hierarquia de controle.</span><span class="sxs-lookup"><span data-stu-id="113c4-115">This constructor is generally used by ASP.NET when parsing the page and creating the control hierarchy.</span></span> <span data-ttu-id="113c4-116">Ele não se destina para uso em seu código.</span><span class="sxs-lookup"><span data-stu-id="113c4-116">It is not intended for use in your code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowWhitespaceLiterals">
      <MemberSignature Language="C#" Value="public virtual bool AllowWhitespaceLiterals ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AllowWhitespaceLiterals() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.AllowWhitespaceLiterals" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AllowWhitespaceLiterals () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool AllowWhitespaceLiterals();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="113c4-117">Determina se literais de espaço em branco são permitidos no conteúdo entre marcas de abertura e fechamento do controle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-117">Determines whether white space literals are permitted in the content between a control's opening and closing tags.</span>
          </span>
          <span data-ttu-id="113c4-118">Esse método é chamado pela estrutura de página ASP.NET.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-118">This method is called by the ASP.NET page framework.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="113c4-119">Sempre retorna <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-119">Always returns <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="113c4-120">O <xref:System.Web.UI.ControlBuilder.AllowWhitespaceLiterals%2A> método é usado para determinar se espaço em branco literais são permitidos em conteúdo entre as marcas de abertura e fechamento de um controle.</span><span class="sxs-lookup"><span data-stu-id="113c4-120">The <xref:System.Web.UI.ControlBuilder.AllowWhitespaceLiterals%2A> method is used to determine whether white space literals are permitted in the content between the opening and closing tags of a control.</span></span> <span data-ttu-id="113c4-121">Quando este método retorna `false`, os literais de espaço em branco são cortados do conteúdo antes do conteúdo é processado pelo analisador de página.</span><span class="sxs-lookup"><span data-stu-id="113c4-121">When this method returns `false`, the white space literals are trimmed from the content before the content is processed by the page parser.</span></span> <span data-ttu-id="113c4-122">Quando este método retorna `true`, os literais de espaço em branco não é removidos.</span><span class="sxs-lookup"><span data-stu-id="113c4-122">When this method returns `true`, the white space literals not removed.</span></span>  
  
 <span data-ttu-id="113c4-123">Esse método é chamado pela estrutura de página ASP.NET durante a análise e não se destina a ser chamado diretamente de código.</span><span class="sxs-lookup"><span data-stu-id="113c4-123">This method is called by the ASP.NET page framework during parsing and is not intended to be called directly in you code.</span></span>  
  
   
  
## Examples  
 [!code-csharp[ControlBuilderSamples_1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlBuilderSamples_1/CS/ctrlbuilder_1.cs#4)]
 [!code-vb[ControlBuilderSamples_1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlBuilderSamples_1/VB/ctrlbuilder_1.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="113c4-124">Você pode substituir esse método em sua classe derivada para indicar se o espaço em branco literais são permitidos em seu controle personalizado.</span>
            <span class="sxs-lookup">
              <span data-stu-id="113c4-124">You can override this method in your derived class to indicate whether white space literals are permitted in your custom control.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="AppendLiteralString">
      <MemberSignature Language="C#" Value="public virtual void AppendLiteralString (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AppendLiteralString(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.AppendLiteralString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AppendLiteralString (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AppendLiteralString(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="113c4-125">O conteúdo a ser adicionado ao controle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-125">The content to add to the control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="113c4-126">Adiciona o conteúdo literal especificado a um controle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-126">Adds the specified literal content to a control.</span>
          </span>
          <span data-ttu-id="113c4-127">Esse método é chamado pela estrutura de página ASP.NET.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-127">This method is called by the ASP.NET page framework.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="113c4-128">Substituir o <xref:System.Web.UI.ControlBuilder.AppendLiteralString%2A> método para controlar o conteúdo como literal entre o controle marcas de abertura e fechamento é processado.</span><span class="sxs-lookup"><span data-stu-id="113c4-128">Override the <xref:System.Web.UI.ControlBuilder.AppendLiteralString%2A> method to control how literal content between the control's opening and closing tags is processed.</span></span> <span data-ttu-id="113c4-129">Conteúdo literal pode ser qualquer texto que é passado pelo navegador para o controle de servidor.</span><span class="sxs-lookup"><span data-stu-id="113c4-129">Literal content can be any text that is passed by the browser to the server control.</span></span> <span data-ttu-id="113c4-130">Por exemplo, quaisquer elementos HTML e texto entre suas marcas de abertura e fechamento, são conteúdo literal.</span><span class="sxs-lookup"><span data-stu-id="113c4-130">For example, any HTML elements and text, between their opening and closing tags, are literal content.</span></span>  
  
   
  
## Examples  
 [!code-csharp[ControlBuilderSamples_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlBuilderSamples_1/CS/ctrlbuilder_1.cs#3)]
 [!code-vb[ControlBuilderSamples_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlBuilderSamples_1/VB/ctrlbuilder_1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="113c4-131">O literal da cadeia de caracteres não está bem-formado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-131">The string literal is not well formed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AppendSubBuilder">
      <MemberSignature Language="C#" Value="public virtual void AppendSubBuilder (System.Web.UI.ControlBuilder subBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AppendSubBuilder(class System.Web.UI.ControlBuilder subBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.AppendSubBuilder(System.Web.UI.ControlBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AppendSubBuilder (subBuilder As ControlBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AppendSubBuilder(System::Web::UI::ControlBuilder ^ subBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subBuilder" Type="System.Web.UI.ControlBuilder" />
      </Parameters>
      <Docs>
        <param name="subBuilder">
          <span data-ttu-id="113c4-132">O objeto <see cref="T:System.Web.UI.ControlBuilder" /> atribuído ao controle filho.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-132">The <see cref="T:System.Web.UI.ControlBuilder" /> object assigned to the child control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="113c4-133">Adiciona construtores ao objeto <see cref="T:System.Web.UI.ControlBuilder" /> para quaisquer controles filho que pertençam ao controle de contêiner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-133">Adds builders to the <see cref="T:System.Web.UI.ControlBuilder" /> object for any child controls that belong to the container control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="113c4-134">O exemplo a seguir substitui o <xref:System.Web.UI.ControlBuilder.AppendSubBuilder%2A> método para lançar uma <xref:System.Exception> se o controle este construtor do controle é aplicada ao tentar incluem controles em sua instância de <xref:System.Web.UI.ControlCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="113c4-134">The following example overrides the <xref:System.Web.UI.ControlBuilder.AppendSubBuilder%2A> method to throw an <xref:System.Exception> if the control this control builder is applied to tries to include controls in its instance of <xref:System.Web.UI.ControlCollection> class.</span></span>  
  
 [!code-csharp[ControlBuilderSamples_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlBuilderSamples_2/cs/ctrlbuilder1.cs#1)]
 [!code-vb[ControlBuilderSamples_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlBuilderSamples_2/VB/ctrlbuilder1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ControlBuilder" />
      </Docs>
    </Member>
    <Member MemberName="BindingContainerBuilder">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ControlBuilder BindingContainerBuilder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlBuilder BindingContainerBuilder" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.BindingContainerBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BindingContainerBuilder As ControlBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ControlBuilder ^ BindingContainerBuilder { System::Web::UI::ControlBuilder ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="113c4-135">Obtém o construtor de controle que corresponde ao contêiner de associação para o controle que esse construtor cria.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-135">Gets the control builder that corresponds to the binding container for the control that this builder creates.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="113c4-136">O construtor de controle que corresponde ao contêiner de associação para o controle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-136">The control builder that corresponds to the binding container for the control.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingContainerType">
      <MemberSignature Language="C#" Value="public virtual Type BindingContainerType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type BindingContainerType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.BindingContainerType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BindingContainerType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ BindingContainerType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="113c4-137">Obtém o tipo do contêiner de associação para o controle que esse construtor cria.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-137">Gets the type of the binding container for the control that this builder creates.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="113c4-138">Um <see cref="T:System.Type" /> que representa o tipo do contêiner de associação para o controle que cria este construtor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-138">A <see cref="T:System.Type" /> that represent the type of the binding container for the control that this builder creates.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Control.BindingContainer" />
      </Docs>
    </Member>
    <Member MemberName="BuildObject">
      <MemberSignature Language="C#" Value="public virtual object BuildObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object BuildObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.BuildObject" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BuildObject () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ BuildObject();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="113c4-139">Cria uma instância de tempo de design do controle que é referenciado por esse objeto <see cref="T:System.Web.UI.ControlBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-139">Builds a design-time instance of the control that is referred to by this <see cref="T:System.Web.UI.ControlBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="113c4-140">O controle criado resultante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-140">The resulting built control.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseControl">
      <MemberSignature Language="C#" Value="public virtual void CloseControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.CloseControl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CloseControl ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CloseControl();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="113c4-141">Chamado pelo analisador para informar o construtor que a análise das marcas de abertura e fechamento do controle está concluída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-141">Called by the parser to inform the builder that the parsing of the control's opening and closing tags is complete.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="113c4-142">O <xref:System.Web.UI.ControlBuilder.CloseControl%2A> método é usado pelo analisador para indicar para o construtor que concluiu a análise do controle.</span><span class="sxs-lookup"><span data-stu-id="113c4-142">The <xref:System.Web.UI.ControlBuilder.CloseControl%2A> method is used by the parser to indicate to the builder that it has finished parsing the control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComplexPropertyEntries">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection ComplexPropertyEntries { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection ComplexPropertyEntries" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.ComplexPropertyEntries" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ComplexPropertyEntries As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ICollection ^ ComplexPropertyEntries { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="113c4-143">Obtém uma coleção de entradas de propriedade complexa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-143">Gets a collection of complex property entries.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="113c4-144">Uma coleção de entradas de propriedade complexa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-144">A collection of complex property entries.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="113c4-145">Se não houver nenhuma entrada, uma coleção vazia estática será retornada.</span><span class="sxs-lookup"><span data-stu-id="113c4-145">If there are no entries, a static empty collection is returned.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlType">
      <MemberSignature Language="C#" Value="public Type ControlType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ControlType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.ControlType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ControlType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ControlType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="113c4-146">Obtém o <see cref="T:System.Type" /> para o controle a ser criado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-146">Gets the <see cref="T:System.Type" /> for the control to be created.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="113c4-147">O <see cref="T:System.Type" /> para o controle a ser criado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-147">The <see cref="T:System.Type" /> for the control to be created.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="113c4-148">Este exemplo substitui o <xref:System.Web.UI.ControlBuilder.OnAppendToParentBuilder%2A> método para verificar a <xref:System.Web.UI.ControlBuilder.ControlType%2A> propriedade para determinar que tipo de controle este construtor é aplicada à.</span><span class="sxs-lookup"><span data-stu-id="113c4-148">This example overrides the <xref:System.Web.UI.ControlBuilder.OnAppendToParentBuilder%2A> method to check the <xref:System.Web.UI.ControlBuilder.ControlType%2A> property to determine what type of control this builder is applied to.</span></span> <span data-ttu-id="113c4-149">Se for um `CustomTextBox`, builder verificará se o valor da <xref:System.Web.UI.ControlBuilder.HasAspCode%2A> propriedade está incluída no controle.</span><span class="sxs-lookup"><span data-stu-id="113c4-149">If it is a `CustomTextBox`, the builder checks whether the value of the <xref:System.Web.UI.ControlBuilder.HasAspCode%2A> property is included in the control.</span></span> <span data-ttu-id="113c4-150">Se assim, uma exceção será lançada, se não for o <xref:System.Web.UI.ControlBuilder.HasBody%2A> método é chamado.</span><span class="sxs-lookup"><span data-stu-id="113c4-150">If so, an exception is thrown, if not the <xref:System.Web.UI.ControlBuilder.HasBody%2A> method is called.</span></span>  
  
 [!code-csharp[ControlBuilderSamples_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlBuilderSamples_4/cs/controlbuilder_4.cs#1)]
 [!code-vb[ControlBuilderSamples_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlBuilderSamples_4/VB/controlbuilder_4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
    <Member MemberName="CreateBuilderFromType">
      <MemberSignature Language="C#" Value="public static System.Web.UI.ControlBuilder CreateBuilderFromType (System.Web.UI.TemplateParser parser, System.Web.UI.ControlBuilder parentBuilder, Type type, string tagName, string id, System.Collections.IDictionary attribs, int line, string sourceFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.ControlBuilder CreateBuilderFromType(class System.Web.UI.TemplateParser parser, class System.Web.UI.ControlBuilder parentBuilder, class System.Type type, string tagName, string id, class System.Collections.IDictionary attribs, int32 line, string sourceFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.CreateBuilderFromType(System.Web.UI.TemplateParser,System.Web.UI.ControlBuilder,System.Type,System.String,System.String,System.Collections.IDictionary,System.Int32,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::ControlBuilder ^ CreateBuilderFromType(System::Web::UI::TemplateParser ^ parser, System::Web::UI::ControlBuilder ^ parentBuilder, Type ^ type, System::String ^ tagName, System::String ^ id, System::Collections::IDictionary ^ attribs, int line, System::String ^ sourceFileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parser" Type="System.Web.UI.TemplateParser" />
        <Parameter Name="parentBuilder" Type="System.Web.UI.ControlBuilder" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="tagName" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="attribs" Type="System.Collections.IDictionary" />
        <Parameter Name="line" Type="System.Int32" />
        <Parameter Name="sourceFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parser">
          <span data-ttu-id="113c4-151">O objeto <see cref="T:System.Web.UI.TemplateParser" /> responsável pela análise do controle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-151">The <see cref="T:System.Web.UI.TemplateParser" /> object responsible for parsing the control.</span>
          </span>
        </param>
        <param name="parentBuilder">
          <span data-ttu-id="113c4-152">O objeto <see cref="T:System.Web.UI.ControlBuilder" /> responsável pela criação do controle pai.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-152">The <see cref="T:System.Web.UI.ControlBuilder" /> object responsible for building the parent control.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="113c4-153">O <see cref="T:System.Type" /> do objeto que o construtor criará.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-153">The <see cref="T:System.Type" /> of the object that the builder will create.</span>
          </span>
        </param>
        <param name="tagName">
          <span data-ttu-id="113c4-154">O nome da marca a ser criada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-154">The name of the tag to be built.</span>
          </span>
          <span data-ttu-id="113c4-155">Isso permite que o construtor dê suporte a vários tipos de marca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-155">This allows the builder to support multiple tag types.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="113c4-156">O atributo <see cref="P:System.Web.UI.ControlBuilder.ID" /> atribuído ao controle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-156">The <see cref="P:System.Web.UI.ControlBuilder.ID" /> attribute assigned to the control.</span>
          </span>
        </param>
        <param name="attribs">
          <span data-ttu-id="113c4-157">O objeto <see cref="T:System.Collections.IDictionary" /> que retém todos os atributos de marca especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-157">The <see cref="T:System.Collections.IDictionary" /> object that holds all the specified tag attributes.</span>
          </span>
        </param>
        <param name="line">
          <span data-ttu-id="113c4-158">O número de linha de arquivo de origem para o controle especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-158">The source file line number for the specified control.</span>
          </span>
        </param>
        <param name="sourceFileName">
          <span data-ttu-id="113c4-159">O nome do arquivo de origem do qual o controle deve ser criado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-159">The name of the source file from which the control is to be created.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="113c4-160">Cria um objeto <see cref="T:System.Web.UI.ControlBuilder" /> do tipo de objeto e do nome da marca especificados, bem como outros parâmetros que definem o construtor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-160">Creates a <see cref="T:System.Web.UI.ControlBuilder" /> object from the specified tag name and object type, as well as other parameters defining the builder.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="113c4-161">O construtor que é responsável por criar o controle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-161">The builder that is responsible for creating the control.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentFilterResolutionService">
      <MemberSignature Language="C#" Value="public System.Web.UI.IFilterResolutionService CurrentFilterResolutionService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.IFilterResolutionService CurrentFilterResolutionService" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.CurrentFilterResolutionService" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentFilterResolutionService As IFilterResolutionService" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::IFilterResolutionService ^ CurrentFilterResolutionService { System::Web::UI::IFilterResolutionService ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IFilterResolutionService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="113c4-162">Obtém um objeto <see cref="T:System.Web.UI.IFilterResolutionService" /> que é usado para gerenciar serviços relacionados ao filtro de dispositivo ao analisar e persistir controles no designer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-162">Gets an <see cref="T:System.Web.UI.IFilterResolutionService" /> object that is used to manage device-filter related services when parsing and persisting controls in the designer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="113c4-163">Um <see cref="T:System.Web.UI.IFilterResolutionService" /> objeto que é usado para gerenciar o filtro de dispositivo serviços relacionados ao analisar e persistência de controles no designer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-163">An <see cref="T:System.Web.UI.IFilterResolutionService" /> object that is used to manage device filter related services when parsing and persisting controls in the designer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="113c4-164">O <xref:System.Web.UI.IFilterResolutionService> é uma interface que é específica para como um controle usa filtros de dispositivo em um designer.</span><span class="sxs-lookup"><span data-stu-id="113c4-164">The <xref:System.Web.UI.IFilterResolutionService> interface is an interface that is specific to how a control uses device filters in a designer.</span></span> <span data-ttu-id="113c4-165">Quando controles são analisados ou persistentes no designer de fora do contexto de uma solicitação do navegador, o <xref:System.Web.UI.IFilterResolutionService> fornece uma maneira de determinar se o controle atual é afetado por um filtro nomeado e se um filtro é parte de uma hierarquia de filtro de dispositivo específico.</span><span class="sxs-lookup"><span data-stu-id="113c4-165">When controls are parsed or persisted in the designer outside the context of a browser request, the <xref:System.Web.UI.IFilterResolutionService> provides a way to determine whether the current control is affected by a named filter and whether a named filter is part of a specific device-filter hierarchy.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IFilterResolutionService" />
      </Docs>
    </Member>
    <Member MemberName="DeclareType">
      <MemberSignature Language="C#" Value="public virtual Type DeclareType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DeclareType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.DeclareType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DeclareType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ DeclareType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="113c4-166">Obtém o tipo que será usado pela geração de código para declarar o controle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-166">Gets the type that will be used by code generation to declare the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="113c4-167">O <see cref="T:System.Type" /> do controle usado por geração de código para declarar o controle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-167">The <see cref="T:System.Type" /> of the control used by code generation to declare the control.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignerFilter">
      <MemberSignature Language="C#" Value="public static readonly string DesignerFilter;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string DesignerFilter" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.ControlBuilder.DesignerFilter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DesignerFilter As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ DesignerFilter;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="113c4-168">Representa a cadeia de caracteres literal <c>"__designer"</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-168">Represents the <c>"__designer"</c> literal string.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FChildrenAsProperties">
      <MemberSignature Language="C#" Value="protected bool FChildrenAsProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FChildrenAsProperties" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.FChildrenAsProperties" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property FChildrenAsProperties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool FChildrenAsProperties { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="113c4-169">Obtém um valor que determina se o controle tem um <see cref="T:System.Web.UI.ParseChildrenAttribute" /> com <see cref="P:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties" /> definido como <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-169">Gets a value that determines whether the control has a <see cref="T:System.Web.UI.ParseChildrenAttribute" /> with <see cref="P:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties" /> set to <see langword="true" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="113c4-170">
            <see langword="true" /> Se o controle tiver um <see cref="T:System.Web.UI.ParseChildrenAttribute" /> com <see cref="P:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties" /> definida como <see langword="true" />, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-170">
              <see langword="true" /> if the control has a <see cref="T:System.Web.UI.ParseChildrenAttribute" /> with <see cref="P:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties" /> set to <see langword="true" />, otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FIsNonParserAccessor">
      <MemberSignature Language="C#" Value="protected bool FIsNonParserAccessor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FIsNonParserAccessor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.FIsNonParserAccessor" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property FIsNonParserAccessor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool FIsNonParserAccessor { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="113c4-171">Obtém um valor que determina se o controle implementa a interface <see cref="T:System.Web.UI.IParserAccessor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-171">Gets a value that determines whether the control implements the <see cref="T:System.Web.UI.IParserAccessor" /> interface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="113c4-172">
            <see langword="false" /> Se o controle implementa o <see cref="T:System.Web.UI.IParserAccessor" /> interface, caso contrário <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-172">
              <see langword="false" /> if the control implements the <see cref="T:System.Web.UI.IParserAccessor" /> interface, otherwise <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildControlType">
      <MemberSignature Language="C#" Value="public virtual Type GetChildControlType (string tagName, System.Collections.IDictionary attribs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetChildControlType(string tagName, class System.Collections.IDictionary attribs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.GetChildControlType(System.String,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChildControlType (tagName As String, attribs As IDictionary) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetChildControlType(System::String ^ tagName, System::Collections::IDictionary ^ attribs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
        <Parameter Name="attribs" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="tagName">
          <span data-ttu-id="113c4-173">O nome da marca do filho.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-173">The tag name of the child.</span>
          </span>
        </param>
        <param name="attribs">
          <span data-ttu-id="113c4-174">Uma matriz de atributos contidos no controle filho.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-174">An array of attributes contained in the child control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="113c4-175">Obtém o <see cref="T:System.Type" /> do tipo de controle correspondente a uma marca filha.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-175">Obtains the <see cref="T:System.Type" /> of the control type corresponding to a child tag.</span>
          </span>
          <span data-ttu-id="113c4-176">Esse método é chamado pela estrutura de página ASP.NET.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-176">This method is called by the ASP.NET page framework.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="113c4-177">O <see cref="T:System.Type" /> do filho do controle especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-177">The <see cref="T:System.Type" /> of the specified control's child.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="113c4-178">Esse método é chamado pela estrutura de página ASP.NET durante a análise e não se destina a ser chamado diretamente de código.</span><span class="sxs-lookup"><span data-stu-id="113c4-178">This method is called by the ASP.NET page framework during parsing and is not intended to be called directly in you code.</span></span>  
  
   
  
## Examples  
 [!code-csharp[ControlBuilderSamples_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlBuilderSamples_1/CS/ctrlbuilder_1.cs#2)]
 [!code-vb[ControlBuilderSamples_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlBuilderSamples_1/VB/ctrlbuilder_1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectPersistData">
      <MemberSignature Language="C#" Value="public System.Web.UI.ObjectPersistData GetObjectPersistData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.ObjectPersistData GetObjectPersistData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.GetObjectPersistData" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObjectPersistData () As ObjectPersistData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::ObjectPersistData ^ GetObjectPersistData();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ObjectPersistData</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="113c4-179">Cria o objeto <see cref="T:System.Web.UI.ObjectPersistData" /> para este objeto <see cref="T:System.Web.UI.ControlBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-179">Creates the <see cref="T:System.Web.UI.ObjectPersistData" /> object for this <see cref="T:System.Web.UI.ControlBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="113c4-180">O <see cref="T:System.Web.UI.ObjectPersistData" /> para <see cref="T:System.Web.UI.ControlBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-180">The <see cref="T:System.Web.UI.ObjectPersistData" /> for this <see cref="T:System.Web.UI.ControlBuilder" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.ObjectPersistData" />
      </Docs>
    </Member>
    <Member MemberName="GetResourceKey">
      <MemberSignature Language="C#" Value="public string GetResourceKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetResourceKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.GetResourceKey" />
      <MemberSignature Language="VB.NET" Value="Public Function GetResourceKey () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetResourceKey();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="113c4-181">Recupera a chave de recurso para este objeto <see cref="T:System.Web.UI.ControlBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-181">Retrieves the resource key for this <see cref="T:System.Web.UI.ControlBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="113c4-182">A chave para o recurso para este <see cref="T:System.Web.UI.ControlBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-182">The resource key for this <see cref="T:System.Web.UI.ControlBuilder" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.ControlBuilder.SetResourceKey(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="HasAspCode">
      <MemberSignature Language="C#" Value="public virtual bool HasAspCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAspCode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.HasAspCode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasAspCode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasAspCode { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="113c4-183">Obtém um valor que indica se o controle contém algum bloco de código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-183">Gets a value indicating whether the control contains any code blocks.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="113c4-184">
            <see langword="true" /> Se o controle contiver pelo menos um bloco de código; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-184">
              <see langword="true" /> if the control contains at least one code block; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="113c4-185">Este exemplo substitui o <xref:System.Web.UI.ControlBuilder.OnAppendToParentBuilder%2A> método para verificar a <xref:System.Web.UI.ControlBuilder.ControlType%2A> propriedade para determinar que tipo de controle este construtor é aplicada à.</span><span class="sxs-lookup"><span data-stu-id="113c4-185">This example overrides the <xref:System.Web.UI.ControlBuilder.OnAppendToParentBuilder%2A> method to check the <xref:System.Web.UI.ControlBuilder.ControlType%2A> property to determine what type of control this builder is applied to.</span></span> <span data-ttu-id="113c4-186">Se for um `CustomTextBox`, builder verificará se o valor da <xref:System.Web.UI.ControlBuilder.HasAspCode%2A> propriedade está incluída no controle.</span><span class="sxs-lookup"><span data-stu-id="113c4-186">If it is a `CustomTextBox`, the builder checks whether the value of the <xref:System.Web.UI.ControlBuilder.HasAspCode%2A> property is included in the control.</span></span> <span data-ttu-id="113c4-187">Se assim, uma exceção será lançada, se não for o <xref:System.Web.UI.ControlBuilder.HasBody%2A> método é chamado.</span><span class="sxs-lookup"><span data-stu-id="113c4-187">If so, an exception is thrown, if not the <xref:System.Web.UI.ControlBuilder.HasBody%2A> method is called.</span></span>  
  
 [!code-csharp[ControlBuilderSamples_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlBuilderSamples_4/cs/controlbuilder_4.cs#1)]
 [!code-vb[ControlBuilderSamples_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlBuilderSamples_4/VB/controlbuilder_4.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasBody">
      <MemberSignature Language="C#" Value="public virtual bool HasBody ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasBody() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.HasBody" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasBody () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasBody();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="113c4-188">Determina se um controle tem uma marca de abertura e de fechamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-188">Determines if a control has both an opening and closing tag.</span>
          </span>
          <span data-ttu-id="113c4-189">Esse método é chamado pela estrutura de página ASP.NET.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-189">This method is called by the ASP.NET page framework.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="113c4-190">
            <see langword="true" /> se o controle tiver uma marca de abertura e de fechamento, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-190">
              <see langword="true" /> if the control has an opening and closing tag; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="113c4-191">Esse método é chamado pela estrutura de página ASP.NET durante a análise e não se destina a ser chamado diretamente de código.</span><span class="sxs-lookup"><span data-stu-id="113c4-191">This method is called by the ASP.NET page framework during parsing and is not intended to be called directly in you code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="113c4-192">Este exemplo substitui o <xref:System.Web.UI.ControlBuilder.OnAppendToParentBuilder%2A> método para verificar a <xref:System.Web.UI.ControlBuilder.ControlType%2A> propriedade para determinar que tipo de controle este construtor é aplicada à.</span><span class="sxs-lookup"><span data-stu-id="113c4-192">This example overrides the <xref:System.Web.UI.ControlBuilder.OnAppendToParentBuilder%2A> method to check the <xref:System.Web.UI.ControlBuilder.ControlType%2A> property to determine what type of control this builder is applied to.</span></span> <span data-ttu-id="113c4-193">Se for um `CustomTextBox`, builder verificará se o valor da <xref:System.Web.UI.ControlBuilder.HasAspCode%2A> propriedade está incluída no controle.</span><span class="sxs-lookup"><span data-stu-id="113c4-193">If it is a `CustomTextBox`, the builder checks whether the value of the <xref:System.Web.UI.ControlBuilder.HasAspCode%2A> property is included in the control.</span></span> <span data-ttu-id="113c4-194">Se assim, uma exceção será lançada, se não for o <xref:System.Web.UI.ControlBuilder.HasBody%2A> método é chamado.</span><span class="sxs-lookup"><span data-stu-id="113c4-194">If so, an exception is thrown, if not the <xref:System.Web.UI.ControlBuilder.HasBody%2A> method is called.</span></span>  
  
 [!code-csharp[ControlBuilderSamples_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlBuilderSamples_4/cs/controlbuilder_4.cs#1)]
 [!code-vb[ControlBuilderSamples_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlBuilderSamples_4/VB/controlbuilder_4.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlDecodeLiterals">
      <MemberSignature Language="C#" Value="public virtual bool HtmlDecodeLiterals ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HtmlDecodeLiterals() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.HtmlDecodeLiterals" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HtmlDecodeLiterals () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HtmlDecodeLiterals();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="113c4-195">Determina se a cadeia de caracteres literal de um controle HTML deve ser decodificada para HTML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-195">Determines whether the literal string of an HTML control must be HTML decoded.</span>
          </span>
          <span data-ttu-id="113c4-196">Esse método é chamado pela estrutura de página ASP.NET.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-196">This method is called by the ASP.NET page framework.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="113c4-197">
            <see langword="true" /> se a cadeia de caracteres literal do controle HTML precisar ser decodificada, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-197">
              <see langword="true" /> if the HTML control literal string is to be decoded; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="113c4-198">Uma cadeia de caracteres literal refere-se ao texto entre a abertura e a marca de fechamento de um controle HTML.</span><span class="sxs-lookup"><span data-stu-id="113c4-198">A literal string refers to the text between the opening and closing tag of an HTML control.</span></span> <span data-ttu-id="113c4-199">Codificação HTML é quando o texto é convertido em uma representação de cadeia de caracteres que o navegador irá exibir em vez de interpretar como HTML.</span><span class="sxs-lookup"><span data-stu-id="113c4-199">HTML encoding is when text is converted into a string representation that the browser will display rather than interpret as HTML.</span></span> <span data-ttu-id="113c4-200">Caracteres, como a pergunta marcar (?), e comercial (&), barra (/) de marcar e espaços podem ser truncados ou corrompidos por alguns navegadores, portanto esses caracteres devem ser codificados quando eles aparecem na `a` marcas ou em cadeias de caracteres de consulta.</span><span class="sxs-lookup"><span data-stu-id="113c4-200">Characters such as the question mark (?), ampersand (&), slash mark (/), and spaces might be truncated or corrupted by some browsers, so those characters must be encoded when they appear in `a` tags or in query strings.</span></span>  
  
 <span data-ttu-id="113c4-201">O <xref:System.Web.UI.ControlBuilder.HtmlDecodeLiterals%2A> método é chamado pela estrutura de página ASP.NET durante a análise e não se destina a ser chamado diretamente de código.</span><span class="sxs-lookup"><span data-stu-id="113c4-201">The <xref:System.Web.UI.ControlBuilder.HtmlDecodeLiterals%2A> method is called by the ASP.NET page framework during parsing and is not intended to be called directly in you code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="113c4-202">O exemplo a seguir substitui o <xref:System.Web.UI.ControlBuilder.HtmlDecodeLiterals%2A> método para permitir o HTML decodificação de cadeias de caracteres literais em qualquer controle este construtor é aplicado ao.</span><span class="sxs-lookup"><span data-stu-id="113c4-202">The following example overrides the <xref:System.Web.UI.ControlBuilder.HtmlDecodeLiterals%2A> method to allow HTML decoding of literal strings in any control this builder is applied to.</span></span>  
  
 [!code-csharp[ControlBuilderSamples_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlBuilderSamples_2/cs/ctrlbuilder1.cs#2)]
 [!code-vb[ControlBuilderSamples_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlBuilderSamples_2/VB/ctrlbuilder1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public string ID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.ID" />
      <MemberSignature Language="VB.NET" Value="Public Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="113c4-203">Obtém ou define a propriedade do identificador para o controle a ser criado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-203">Gets or sets the identifier property for the control to be built.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="113c4-204">A propriedade do identificador para o controle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-204">The identifier property for the control.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InDesigner">
      <MemberSignature Language="C#" Value="protected bool InDesigner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InDesigner" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.InDesigner" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property InDesigner As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool InDesigner { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="113c4-205">Retorna se o <see cref="T:System.Web.UI.ControlBuilder" /> está sendo executado no designer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-205">Returns whether the <see cref="T:System.Web.UI.ControlBuilder" /> is running in the designer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="113c4-206">
            <see langword="true" /> se o <see cref="T:System.Web.UI.ControlBuilder" /> está em execução no designer; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-206">
              <see langword="true" /> if the <see cref="T:System.Web.UI.ControlBuilder" /> is running in the designer; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="113c4-207">O exemplo a seguir usa o <xref:System.Web.UI.ControlBuilder.InDesigner%2A> propriedade quando o <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> método é chamado.</span><span class="sxs-lookup"><span data-stu-id="113c4-207">The following example uses the <xref:System.Web.UI.ControlBuilder.InDesigner%2A> property when the <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> method is called.</span></span> <span data-ttu-id="113c4-208">Quando um controle tem este construtor anexado a ele, o <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> método determina se o controle está sendo acessado no tempo de design por meio de um designer.</span><span class="sxs-lookup"><span data-stu-id="113c4-208">When a control has this builder attached to it, the <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> method determines whether the control is being accessed at design-time through a designer.</span></span> <span data-ttu-id="113c4-209">O <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> retorna o valor da <xref:System.Web.UI.ControlBuilder.InDesigner%2A> propriedade e, em seguida, o <xref:System.Web.UI.ControlBuilder.SetTagInnerText%2A> método é chamado.</span><span class="sxs-lookup"><span data-stu-id="113c4-209">The <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> returns the value of the <xref:System.Web.UI.ControlBuilder.InDesigner%2A> property, and then the <xref:System.Web.UI.ControlBuilder.SetTagInnerText%2A> method is called.</span></span> <span data-ttu-id="113c4-210">Se o <xref:System.Web.UI.ControlBuilder.InDesigner%2A> está definida como `false`, uma <xref:System.Exception> é gerada.</span><span class="sxs-lookup"><span data-stu-id="113c4-210">If the <xref:System.Web.UI.ControlBuilder.InDesigner%2A> property is set to `false`, an <xref:System.Exception> is thrown.</span></span> <span data-ttu-id="113c4-211">Caso contrário, o texto interno do controle é retornado no <xref:System.Web.UI.ControlBuilder.SetTagInnerText%2A> chamar.</span><span class="sxs-lookup"><span data-stu-id="113c4-211">Otherwise, the inner text of the control is returned on the <xref:System.Web.UI.ControlBuilder.SetTagInnerText%2A> call.</span></span>  
  
 [!code-csharp[ControlBuilderSamples_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlBuilderSamples_3/cs/controlbuilder_samples3.cs#1)]
 [!code-vb[ControlBuilderSamples_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlBuilderSamples_3/VB/controlbuilder_samples3.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public virtual void Init (System.Web.UI.TemplateParser parser, System.Web.UI.ControlBuilder parentBuilder, Type type, string tagName, string id, System.Collections.IDictionary attribs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Init(class System.Web.UI.TemplateParser parser, class System.Web.UI.ControlBuilder parentBuilder, class System.Type type, string tagName, string id, class System.Collections.IDictionary attribs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.Init(System.Web.UI.TemplateParser,System.Web.UI.ControlBuilder,System.Type,System.String,System.String,System.Collections.IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Init(System::Web::UI::TemplateParser ^ parser, System::Web::UI::ControlBuilder ^ parentBuilder, Type ^ type, System::String ^ tagName, System::String ^ id, System::Collections::IDictionary ^ attribs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parser" Type="System.Web.UI.TemplateParser" />
        <Parameter Name="parentBuilder" Type="System.Web.UI.ControlBuilder" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="tagName" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="attribs" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="parser">
          <span data-ttu-id="113c4-212">O objeto <see cref="T:System.Web.UI.TemplateParser" /> responsável pela análise do controle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-212">The <see cref="T:System.Web.UI.TemplateParser" /> object responsible for parsing the control.</span>
          </span>
        </param>
        <param name="parentBuilder">
          <span data-ttu-id="113c4-213">O objeto <see cref="T:System.Web.UI.ControlBuilder" /> responsável pela criação do controle pai.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-213">The <see cref="T:System.Web.UI.ControlBuilder" /> object responsible for building the parent control.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="113c4-214">O <see cref="T:System.Type" /> atribuído ao controle que o construtor criará.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-214">The <see cref="T:System.Type" /> assigned to the control that the builder will create.</span>
          </span>
        </param>
        <param name="tagName">
          <span data-ttu-id="113c4-215">O nome da marca a ser criada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-215">The name of the tag to be built.</span>
          </span>
          <span data-ttu-id="113c4-216">Isso permite que o construtor dê suporte a vários tipos de marca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-216">This allows the builder to support multiple tag types.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="113c4-217">O atributo <see cref="P:System.Web.UI.ControlBuilder.ID" /> atribuído ao controle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-217">The <see cref="P:System.Web.UI.ControlBuilder.ID" /> attribute assigned to the control.</span>
          </span>
        </param>
        <param name="attribs">
          <span data-ttu-id="113c4-218">O objeto <see cref="T:System.Collections.IDictionary" /> que retém todos os atributos de marca especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-218">The <see cref="T:System.Collections.IDictionary" /> object that holds all the specified tag attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="113c4-219">Inicializa o <see cref="T:System.Web.UI.ControlBuilder" /> para uso após ele ser instanciado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-219">Initializes the <see cref="T:System.Web.UI.ControlBuilder" /> for use after it is instantiated.</span>
          </span>
          <span data-ttu-id="113c4-220">Esse método é chamado pela estrutura de página ASP.NET.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-220">This method is called by the ASP.NET page framework.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="113c4-221">Esse método é chamado pela estrutura de página ASP.NET durante a análise e não se destina a ser chamado diretamente de código.</span><span class="sxs-lookup"><span data-stu-id="113c4-221">This method is called by the ASP.NET page framework during parsing and is not intended to be called directly in you code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InPageTheme">
      <MemberSignature Language="C#" Value="protected bool InPageTheme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InPageTheme" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.InPageTheme" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property InPageTheme As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool InPageTheme { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="113c4-222">Obtém um valor booliano que indica se este objeto <see cref="T:System.Web.UI.ControlBuilder" /> é usado para gerar os temas de página.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-222">Gets a Boolean value indicating whether this <see cref="T:System.Web.UI.ControlBuilder" /> object is used to generate page themes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="113c4-223">
            <see langword="true" /> Use essa <see cref="T:System.Web.UI.ControlBuilder" /> para gerar temas de página; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-223">
              <see langword="true" /> to use this <see cref="T:System.Web.UI.ControlBuilder" /> to generate page themes; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemType">
      <MemberSignature Language="C#" Value="public virtual string ItemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ItemType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.ItemType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ItemType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ItemType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="113c4-224">Obtém o tipo definido no contêiner de associação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-224">Gets the type set on the binding container.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="113c4-225">O tipo definido no contêiner de associação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-225">The type set on the binding container.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Localize">
      <MemberSignature Language="C#" Value="public bool Localize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Localize" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.Localize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Localize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Localize { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="113c4-226">Obtém um valor booliano que indica se o controle criado por este objeto <see cref="T:System.Web.UI.ControlBuilder" /> está localizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-226">Gets a Boolean value indicating whether the control that is created by this <see cref="T:System.Web.UI.ControlBuilder" /> object is localized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="113c4-227">
            <see langword="true" /> para indicar que o controle é criado por este <see cref="T:System.Web.UI.ControlBuilder" /> objeto for localizado; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-227">
              <see langword="true" /> to indicate that the control created by this <see cref="T:System.Web.UI.ControlBuilder" /> object is localized; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NamingContainerType">
      <MemberSignature Language="C#" Value="public Type NamingContainerType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type NamingContainerType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.NamingContainerType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NamingContainerType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ NamingContainerType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="113c4-228">Obtém o tipo do contêiner de nomenclatura para o controle que esse construtor cria.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-228">Gets the type of the naming container for the control that this builder creates.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="113c4-229">Um <see cref="T:System.Type" /> que representa o tipo de contêiner de nomeação para o controle que cria este construtor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-229">A <see cref="T:System.Type" /> that represent the type of the naming container for the control that this builder creates.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.ControlBuilder.ControlType" />
      </Docs>
    </Member>
    <Member MemberName="NeedsTagInnerText">
      <MemberSignature Language="C#" Value="public virtual bool NeedsTagInnerText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool NeedsTagInnerText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.NeedsTagInnerText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function NeedsTagInnerText () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool NeedsTagInnerText();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="113c4-230">Determina se o construtor de controle precisa obter seu texto interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-230">Determines if the control builder needs to get its inner text.</span>
          </span>
          <span data-ttu-id="113c4-231">Se sim, o método <see cref="M:System.Web.UI.ControlBuilder.SetTagInnerText(System.String)" /> deve ser chamado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-231">If so, the <see cref="M:System.Web.UI.ControlBuilder.SetTagInnerText(System.String)" /> method must be called.</span>
          </span>
          <span data-ttu-id="113c4-232">Esse método é chamado pela estrutura de página ASP.NET.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-232">This method is called by the ASP.NET page framework.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="113c4-233">
            <see langword="true" /> se o construtor de controle precisar obter seu texto interno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-233">
              <see langword="true" /> if the control builder needs to get its inner text.</span>
          </span>
          <span data-ttu-id="113c4-234">O padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-234">The default is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="113c4-235">O texto interno é o texto entre as marcas de abertura e fechamento do controle.</span><span class="sxs-lookup"><span data-stu-id="113c4-235">The inner text is the text between the opening and closing tags of the control.</span></span>  
  
 <span data-ttu-id="113c4-236">Esse método é chamado pela estrutura de página ASP.NET durante a análise e não se destina a ser chamado diretamente de código.</span><span class="sxs-lookup"><span data-stu-id="113c4-236">This method is called by the ASP.NET page framework during parsing and is not intended to be called directly in you code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="113c4-237">O exemplo a seguir usa o <xref:System.Web.UI.ControlBuilder.InDesigner%2A> propriedade quando o <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> método é chamado.</span><span class="sxs-lookup"><span data-stu-id="113c4-237">The following example uses the <xref:System.Web.UI.ControlBuilder.InDesigner%2A> property when the <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> method is called.</span></span> <span data-ttu-id="113c4-238">Quando um controle tem este construtor anexado a ele, o <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> determina se o controle está sendo acessado no tempo de design por meio de um designer.</span><span class="sxs-lookup"><span data-stu-id="113c4-238">When a control has this builder attached to it, the <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> determines whether the control is being accessed at design-time through a designer.</span></span> <span data-ttu-id="113c4-239">O <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> retorna o valor da <xref:System.Web.UI.ControlBuilder.InDesigner%2A> propriedade e, em seguida, o <xref:System.Web.UI.ControlBuilder.SetTagInnerText%2A> método é chamado.</span><span class="sxs-lookup"><span data-stu-id="113c4-239">The <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> returns the value of the <xref:System.Web.UI.ControlBuilder.InDesigner%2A> property, and then the <xref:System.Web.UI.ControlBuilder.SetTagInnerText%2A> method is called.</span></span> <span data-ttu-id="113c4-240">Se o <xref:System.Web.UI.ControlBuilder.InDesigner%2A> está definida como `false`, uma <xref:System.Exception> é gerada.</span><span class="sxs-lookup"><span data-stu-id="113c4-240">If the <xref:System.Web.UI.ControlBuilder.InDesigner%2A> property is set to `false`, an <xref:System.Exception> is thrown.</span></span> <span data-ttu-id="113c4-241">Caso contrário, o texto interno do controle é retornado no <xref:System.Web.UI.ControlBuilder.SetTagInnerText%2A> chamar.</span><span class="sxs-lookup"><span data-stu-id="113c4-241">Otherwise, the inner text of the control is returned on the <xref:System.Web.UI.ControlBuilder.SetTagInnerText%2A> call.</span></span>  
  
 [!code-csharp[ControlBuilderSamples_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlBuilderSamples_3/cs/controlbuilder_samples3.cs#1)]
 [!code-vb[ControlBuilderSamples_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlBuilderSamples_3/VB/controlbuilder_samples3.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAppendToParentBuilder">
      <MemberSignature Language="C#" Value="public virtual void OnAppendToParentBuilder (System.Web.UI.ControlBuilder parentBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnAppendToParentBuilder(class System.Web.UI.ControlBuilder parentBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.OnAppendToParentBuilder(System.Web.UI.ControlBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnAppendToParentBuilder (parentBuilder As ControlBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnAppendToParentBuilder(System::Web::UI::ControlBuilder ^ parentBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentBuilder" Type="System.Web.UI.ControlBuilder" />
      </Parameters>
      <Docs>
        <param name="parentBuilder">
          <span data-ttu-id="113c4-242">O objeto <see cref="T:System.Web.UI.ControlBuilder" /> ao qual o construtor atual é adicionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-242">The <see cref="T:System.Web.UI.ControlBuilder" /> object to which the current builder is added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="113c4-243">Notifica o <see cref="T:System.Web.UI.ControlBuilder" /> que está sendo adicionado a um construtor de controle pai.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-243">Notifies the <see cref="T:System.Web.UI.ControlBuilder" /> that it is being added to a parent control builder.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="113c4-244">Este exemplo substitui o <xref:System.Web.UI.ControlBuilder.OnAppendToParentBuilder%2A> método para verificar a <xref:System.Web.UI.ControlBuilder.ControlType%2A> propriedade para determinar que tipo de controle este construtor é aplicada à.</span><span class="sxs-lookup"><span data-stu-id="113c4-244">This example overrides the <xref:System.Web.UI.ControlBuilder.OnAppendToParentBuilder%2A> method to check the <xref:System.Web.UI.ControlBuilder.ControlType%2A> property to determine what type of control this builder is applied to.</span></span> <span data-ttu-id="113c4-245">Se for um `CustomTextBox`, builder verificará se o valor da <xref:System.Web.UI.ControlBuilder.HasAspCode%2A> propriedade está incluída no controle.</span><span class="sxs-lookup"><span data-stu-id="113c4-245">If it is a `CustomTextBox`, the builder checks whether the value of the <xref:System.Web.UI.ControlBuilder.HasAspCode%2A> property is included in the control.</span></span> <span data-ttu-id="113c4-246">Se assim, uma exceção será lançada, se não for o <xref:System.Web.UI.ControlBuilder.HasBody%2A> método é chamado.</span><span class="sxs-lookup"><span data-stu-id="113c4-246">If so, an exception is thrown, if not the <xref:System.Web.UI.ControlBuilder.HasBody%2A> method is called.</span></span>  
  
 [!code-csharp[ControlBuilderSamples_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlBuilderSamples_4/cs/controlbuilder_4.cs#1)]
 [!code-vb[ControlBuilderSamples_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlBuilderSamples_4/VB/controlbuilder_4.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageVirtualPath">
      <MemberSignature Language="C#" Value="public string PageVirtualPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PageVirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.PageVirtualPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PageVirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PageVirtualPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="113c4-247">Obtém o caminho virtual de uma página a ser criada por esta instância <see cref="T:System.Web.UI.ControlBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-247">Gets the virtual path of a page to be built by this <see cref="T:System.Web.UI.ControlBuilder" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="113c4-248">O caminho virtual da página a ser criado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-248">The virtual path of the page to be built.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parser">
      <MemberSignature Language="C#" Value="protected internal System.Web.UI.TemplateParser Parser { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.TemplateParser Parser" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.Parser" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property Parser As TemplateParser" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Web::UI::TemplateParser ^ Parser { System::Web::UI::TemplateParser ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.TemplateParser</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="113c4-249">Obtém o <see cref="T:System.Web.UI.TemplateParser" /> responsável por analisar o controle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-249">Gets the <see cref="T:System.Web.UI.TemplateParser" /> responsible for parsing the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="113c4-250">O <see cref="T:System.Web.UI.TemplateParser" /> usado para analisar o controle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-250">The <see cref="T:System.Web.UI.TemplateParser" /> used to parse the control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="113c4-251">Essa propriedade recupera o <xref:System.Web.UI.TemplateParser> responsável pela análise do controle.</span><span class="sxs-lookup"><span data-stu-id="113c4-251">This property retrieves the <xref:System.Web.UI.TemplateParser> responsible for parsing the control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.TemplateParser" />
      </Docs>
    </Member>
    <Member MemberName="ProcessGeneratedCode">
      <MemberSignature Language="C#" Value="public virtual void ProcessGeneratedCode (System.CodeDom.CodeCompileUnit codeCompileUnit, System.CodeDom.CodeTypeDeclaration baseType, System.CodeDom.CodeTypeDeclaration derivedType, System.CodeDom.CodeMemberMethod buildMethod, System.CodeDom.CodeMemberMethod dataBindingMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessGeneratedCode(class System.CodeDom.CodeCompileUnit codeCompileUnit, class System.CodeDom.CodeTypeDeclaration baseType, class System.CodeDom.CodeTypeDeclaration derivedType, class System.CodeDom.CodeMemberMethod buildMethod, class System.CodeDom.CodeMemberMethod dataBindingMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.ProcessGeneratedCode(System.CodeDom.CodeCompileUnit,System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeMemberMethod,System.CodeDom.CodeMemberMethod)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ProcessGeneratedCode(System::CodeDom::CodeCompileUnit ^ codeCompileUnit, System::CodeDom::CodeTypeDeclaration ^ baseType, System::CodeDom::CodeTypeDeclaration ^ derivedType, System::CodeDom::CodeMemberMethod ^ buildMethod, System::CodeDom::CodeMemberMethod ^ dataBindingMethod);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codeCompileUnit" Type="System.CodeDom.CodeCompileUnit" />
        <Parameter Name="baseType" Type="System.CodeDom.CodeTypeDeclaration" />
        <Parameter Name="derivedType" Type="System.CodeDom.CodeTypeDeclaration" />
        <Parameter Name="buildMethod" Type="System.CodeDom.CodeMemberMethod" />
        <Parameter Name="dataBindingMethod" Type="System.CodeDom.CodeMemberMethod" />
      </Parameters>
      <Docs>
        <param name="codeCompileUnit">
          <span data-ttu-id="113c4-252">O contêiner raiz de um grafo CodeDOM do controle que está sendo criado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-252">The root container of a CodeDOM graph of the control that is being built.</span>
          </span>
        </param>
        <param name="baseType">
          <span data-ttu-id="113c4-253">O tipo base da página ou controle de usuário que contém o controle que está sendo criado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-253">The base type of the page or user control that contains the control that is being built.</span>
          </span>
        </param>
        <param name="derivedType">
          <span data-ttu-id="113c4-254">O tipo derivado da página ou controle de usuário que contém o controle que está sendo criado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-254">The derived type of the page or user control that contains the control that is being built.</span>
          </span>
        </param>
        <param name="buildMethod">
          <span data-ttu-id="113c4-255">O código usado para criar o controle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-255">The code that is used to build the control.</span>
          </span>
        </param>
        <param name="dataBindingMethod">
          <span data-ttu-id="113c4-256">O código usado para criar o método de associação de dados do controle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-256">The code that is used to build the data-binding method of the control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="113c4-257">Permite que os criadores de controle personalizado acessem o CodeDom (Modelo de Objeto do Documento de Código) gerado e insiram e modifiquem o código durante o processo de análise e criação de controles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-257">Enables custom control builders to access the generated Code Document Object Model (CodeDom) and insert and modify code during the process of parsing and building controls.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="113c4-258">No modelo de página de arquivo único, o `baseType` e `derivedType` parâmetros são os mesmos <xref:System.CodeDom.CodeTypeDeclaration> tipo, que normalmente deriva de <xref:System.Web.UI.Page> classe.</span><span class="sxs-lookup"><span data-stu-id="113c4-258">In the single-file page model, the `baseType` and `derivedType` parameters are the same <xref:System.CodeDom.CodeTypeDeclaration> type, which typically derives from the <xref:System.Web.UI.Page> class.</span></span>  
  
 <span data-ttu-id="113c4-259">No modelo de página code-behind, `baseType` é o <xref:System.CodeDom.CodeTypeDeclaration> que representa a classe de code-behind parcial, que normalmente é derivado do tipo de <xref:System.Web.UI.Page> classe.</span><span class="sxs-lookup"><span data-stu-id="113c4-259">In the code-behind page model, `baseType` is the <xref:System.CodeDom.CodeTypeDeclaration> type that represents the partial code-behind class, which is typically derived from the <xref:System.Web.UI.Page> class.</span></span> <span data-ttu-id="113c4-260">O `derivedType` parâmetro é a classe que deriva da classe parcial que contém a marcação.</span><span class="sxs-lookup"><span data-stu-id="113c4-260">The `derivedType` parameter is the class that derives from the partial class that contains the markup.</span></span>  
  
 <span data-ttu-id="113c4-261">Para obter mais informações sobre modelos de página da Web do ASP.NET, consulte [visão geral da sintaxe de página do ASP.NET Web Forms](http://msdn.microsoft.com/library/09074b20-ece9-46fa-bc8f-ab2595ed2c02).</span><span class="sxs-lookup"><span data-stu-id="113c4-261">For more information about ASP.NET Web page models, see [ASP.NET Web Forms Page Syntax Overview](http://msdn.microsoft.com/library/09074b20-ece9-46fa-bc8f-ab2595ed2c02).</span></span>  
  
 <span data-ttu-id="113c4-262">Para obter mais informações sobre como usar o CodeDOM para representar e gerar código-fonte, consulte [dinâmico geração de código-fonte e compilação](~/docs/framework/reflection-and-codedom/dynamic-source-code-generation-and-compilation.md).</span><span class="sxs-lookup"><span data-stu-id="113c4-262">For more information about how to use the CodeDOM to represent and generate source code, see [Dynamic Source Code Generation and Compilation](~/docs/framework/reflection-and-codedom/dynamic-source-code-generation-and-compilation.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceProvider">
      <MemberSignature Language="C#" Value="public IServiceProvider ServiceProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IServiceProvider ServiceProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.ServiceProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceProvider As IServiceProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IServiceProvider ^ ServiceProvider { IServiceProvider ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="113c4-263">Obtém o objeto de serviço para esse objeto <see cref="T:System.Web.UI.ControlBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-263">Gets the service object for this <see cref="T:System.Web.UI.ControlBuilder" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="113c4-264">Um <see cref="T:System.IServiceProvider" /> que representa o objeto de serviço para este <see cref="T:System.Web.UI.ControlBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-264">An <see cref="T:System.IServiceProvider" /> that represents the service object for this <see cref="T:System.Web.UI.ControlBuilder" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.ControlBuilder.SetServiceProvider(System.IServiceProvider)" />
      </Docs>
    </Member>
    <Member MemberName="SetResourceKey">
      <MemberSignature Language="C#" Value="public void SetResourceKey (string resourceKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetResourceKey(string resourceKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.SetResourceKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetResourceKey (resourceKey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetResourceKey(System::String ^ resourceKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceKey">
          <span data-ttu-id="113c4-265">A chave para o recurso para este <see cref="T:System.Web.UI.ControlBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-265">The resource key for this <see cref="T:System.Web.UI.ControlBuilder" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="113c4-266">Define a chave de recurso para este objeto <see cref="T:System.Web.UI.ControlBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-266">Sets the resource key for this <see cref="T:System.Web.UI.ControlBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.ControlBuilder.GetResourceKey" />
      </Docs>
    </Member>
    <Member MemberName="SetServiceProvider">
      <MemberSignature Language="C#" Value="public void SetServiceProvider (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetServiceProvider(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.SetServiceProvider(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetServiceProvider (serviceProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetServiceProvider(IServiceProvider ^ serviceProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">
          <span data-ttu-id="113c4-267">Um <see cref="T:System.IServiceProvider" /> que representa o objeto de serviço para o <see cref="T:System.Web.UI.ControlBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-267">An <see cref="T:System.IServiceProvider" /> that represents the service object for the <see cref="T:System.Web.UI.ControlBuilder" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="113c4-268">Define o objeto de serviço para esse objeto <see cref="T:System.Web.UI.ControlBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-268">Sets the service object for this <see cref="T:System.Web.UI.ControlBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="SetTagInnerText">
      <MemberSignature Language="C#" Value="public virtual void SetTagInnerText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTagInnerText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.SetTagInnerText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetTagInnerText (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetTagInnerText(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="113c4-269">O texto a ser fornecido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-269">The text to be provided.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="113c4-270">Fornece o <see cref="T:System.Web.UI.ControlBuilder" /> com o texto interno da marca do controle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-270">Provides the <see cref="T:System.Web.UI.ControlBuilder" /> with the inner text of the control tag.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="113c4-271">Este método é chamado somente se <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> retornados anteriormente `true`.</span><span class="sxs-lookup"><span data-stu-id="113c4-271">This method is called only if <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> previously returned `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="113c4-272">O exemplo a seguir usa o <xref:System.Web.UI.ControlBuilder.InDesigner%2A> propriedade quando o <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> método é chamado.</span><span class="sxs-lookup"><span data-stu-id="113c4-272">The following example uses the <xref:System.Web.UI.ControlBuilder.InDesigner%2A> property when the <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> method is called.</span></span> <span data-ttu-id="113c4-273">Quando um controle tem este construtor anexado a ele, o <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> determina se o controle está sendo acessado no tempo de design por meio de um designer.</span><span class="sxs-lookup"><span data-stu-id="113c4-273">When a control has this builder attached to it, the <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> determines whether the control is being accessed at design-time through a designer.</span></span> <span data-ttu-id="113c4-274">O <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> retorna o valor da <xref:System.Web.UI.ControlBuilder.InDesigner%2A> propriedade e, em seguida, o <xref:System.Web.UI.ControlBuilder.SetTagInnerText%2A> método é chamado.</span><span class="sxs-lookup"><span data-stu-id="113c4-274">The <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> returns the value of the <xref:System.Web.UI.ControlBuilder.InDesigner%2A> property, and then the <xref:System.Web.UI.ControlBuilder.SetTagInnerText%2A> method is called.</span></span> <span data-ttu-id="113c4-275">Se o <xref:System.Web.UI.ControlBuilder.InDesigner%2A> está definida como `false`, uma <xref:System.Exception> é gerada.</span><span class="sxs-lookup"><span data-stu-id="113c4-275">If the <xref:System.Web.UI.ControlBuilder.InDesigner%2A> property is set to `false`, an <xref:System.Exception> is thrown.</span></span> <span data-ttu-id="113c4-276">Caso contrário, o texto interno do controle é retornado no <xref:System.Web.UI.ControlBuilder.SetTagInnerText%2A> chamar.</span><span class="sxs-lookup"><span data-stu-id="113c4-276">Otherwise, the inner text of the control is returned on the <xref:System.Web.UI.ControlBuilder.SetTagInnerText%2A> call.</span></span>  
  
 [!code-csharp[ControlBuilderSamples_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlBuilderSamples_3/cs/controlbuilder_samples3.cs#1)]
 [!code-vb[ControlBuilderSamples_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlBuilderSamples_3/VB/controlbuilder_samples3.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubBuilders">
      <MemberSignature Language="C#" Value="public System.Collections.ArrayList SubBuilders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ArrayList SubBuilders" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.SubBuilders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SubBuilders As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ArrayList ^ SubBuilders { System::Collections::ArrayList ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="113c4-277">Obtém uma lista de objetos <see cref="T:System.Web.UI.ControlBuilder" /> filho para esse objeto <see cref="T:System.Web.UI.ControlBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-277">Gets a list of child <see cref="T:System.Web.UI.ControlBuilder" /> objects for this <see cref="T:System.Web.UI.ControlBuilder" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="113c4-278">Uma lista de filhos <see cref="T:System.Web.UI.ControlBuilder" /> objetos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-278">A list of child <see cref="T:System.Web.UI.ControlBuilder" /> objects.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TagName">
      <MemberSignature Language="C#" Value="public string TagName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TagName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.TagName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TagName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TagName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="113c4-279">Obtém o nome da marca para o controle a ser criado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-279">Gets the tag name for the control to be built.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="113c4-280">O nome da marca do controle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-280">The tag name for the control.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TemplatePropertyEntries">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection TemplatePropertyEntries { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection TemplatePropertyEntries" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.TemplatePropertyEntries" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TemplatePropertyEntries As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ICollection ^ TemplatePropertyEntries { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="113c4-281">Obtém uma coleção de entradas de propriedade de modelo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-281">Gets a collection of template property entries.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="113c4-282">Uma coleção de entradas de propriedade do modelo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-282">A collection of template property entries.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="113c4-283">Se não houver nenhuma entrada, uma coleção vazia estática será retornada.</span><span class="sxs-lookup"><span data-stu-id="113c4-283">If there are no entries, a static empty collection is returned.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThemeResolutionService">
      <MemberSignature Language="C#" Value="public System.Web.UI.IThemeResolutionService ThemeResolutionService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.IThemeResolutionService ThemeResolutionService" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.ThemeResolutionService" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThemeResolutionService As IThemeResolutionService" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::IThemeResolutionService ^ ThemeResolutionService { System::Web::UI::IThemeResolutionService ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IThemeResolutionService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="113c4-284">Obtém um objeto <see cref="T:System.Web.UI.IThemeResolutionService" /> que é usado no tempo de design para gerenciar os temas e capas do controle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-284">Gets an <see cref="T:System.Web.UI.IThemeResolutionService" /> object that is used in design time to manage control themes and skins.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="113c4-285">Um <see cref="T:System.Web.UI.IThemeResolutionService" /> objeto que é usado em tempo de design para gerenciar capas e temas do controle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="113c4-285">An <see cref="T:System.Web.UI.IThemeResolutionService" /> object that is used in design time to manage control themes and skins.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="113c4-286">O <xref:System.Web.UI.IThemeResolutionService> interface é um contêiner para um ou mais <xref:System.Web.UI.ThemeProvider> objetos, que por sua vez fornecem o <xref:System.Web.UI.SkinBuilder> objetos que se aplicam a temas e capas de controle para controles quando eles são criados em um designer.</span><span class="sxs-lookup"><span data-stu-id="113c4-286">The <xref:System.Web.UI.IThemeResolutionService> interface is a container for one or more <xref:System.Web.UI.ThemeProvider> objects, which in turn supply the <xref:System.Web.UI.SkinBuilder> objects that apply themes and control skins to controls when they are created in a designer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IThemeResolutionService" />
      </Docs>
    </Member>
  </Members>
</Type>