<Type Name="DataSourceView" FullName="System.Web.UI.DataSourceView">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b17fef727a6f0f1ce8e4360cebe26d6b35e5a86e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36378556" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DataSourceView" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DataSourceView extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataSourceView" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DataSourceView" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataSourceView abstract" />
  <TypeSignature Language="F#" Value="type DataSourceView = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Serves as the base class for all data source view classes, which define the capabilities of data source controls.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET oferece suporte a uma arquitetura de associação de dados que permite que os controles de servidor Web associar aos dados de uma maneira consistente. Controles de servidor Web que associar aos dados são conhecidos como controles associados a dados e as classes que facilitam que são chamados de vinculação de controles da fonte de dados. Controles de fonte de dados podem representar qualquer fonte de dados: um banco de dados relacional, um arquivo, um fluxo, um objeto comercial e assim por diante. Fonte de dados controla apresentar dados de uma maneira consistente para controles associados a dados, independentemente da origem ou o formato dos dados subjacentes.  
  
 Use os controles de fonte de dados que são fornecidos com o ASP.NET, incluindo <xref:System.Web.UI.WebControls.SqlDataSource>, <xref:System.Web.UI.WebControls.AccessDataSource>, e <xref:System.Web.UI.WebControls.XmlDataSource>, para executar a maioria das tarefas de desenvolvimento na Web. Usar a base de <xref:System.Web.UI.DataSourceControl> e <xref:System.Web.UI.DataSourceView> classes para implementar seus próprios dados personalizados de controle de origem.  
  
 Você pode pensar em um controle de fonte de dados como a combinação da <xref:System.Web.UI.IDataSource> objeto e suas listas associadas de dados, chamado de exibições da fonte de dados. Cada lista de dados é representada por um <xref:System.Web.UI.DataSourceView> objeto. O <xref:System.Web.UI.DataSourceView> classe é a classe base para todos os modos de exibição de fonte de dados ou listas de dados, associados a controles de fonte de dados. Exibições da fonte de dados definem as capacidades de um controle de fonte de dados. Como o armazenamento de dados subjacente contém uma ou mais listas de dados, um controle de fonte de dados sempre está associado uma ou mais exibições da fonte de dados nomeado. O controle de fonte de dados usa o <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> modos de exibição associados atualmente com o controle de fonte de dados de origem do método para enumerar os dados e o <xref:System.Web.UI.DataSourceControl.GetView%2A> método para recuperar uma instância de modo de exibição de fonte de dados específico por nome.  
  
 Todos os <xref:System.Web.UI.DataSourceView> objetos dão suporte a recuperação de dados de subjacente fonte de dados usando o <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> método. Todas as exibições, opcionalmente, dar suporte a um conjunto básico de operações, inclusive operações como <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>, <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>, e <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>. Um controle associado a dados pode descobrir os recursos de um controle de fonte de dados, recuperando uma fonte de dados associado exibir usando o <xref:System.Web.UI.DataSourceControl.GetView%2A> e <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> métodos e consultando a exibição em tempo de design ou tempo de execução.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como estender o <xref:System.Web.UI.DataSourceView> classe para criar uma classe de exibição fortemente tipado para um controle de fonte de dados. O `CsVDataSourceView` classe define os recursos do `CsvDataSource` controle de fonte de dados e fornece uma implementação para controles de associação de dados para usar dados armazenados em arquivos de valores separados por vírgula (. csv). Para obter mais informações sobre o `CsvDataSource` fonte de dados de controle, consulte o <xref:System.Web.UI.DataSourceControl> classe.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#5)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#5)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.DataSourceControl" />
    <altmember cref="T:System.Web.UI.HierarchicalDataSourceView" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DataSourceView (System.Web.UI.IDataSource owner, string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.IDataSource owner, string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.#ctor(System.Web.UI.IDataSource,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (owner As IDataSource, viewName As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DataSourceView(System::Web::UI::IDataSource ^ owner, System::String ^ viewName);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.DataSourceView : System.Web.UI.IDataSource * string -&gt; System.Web.UI.DataSourceView" Usage="new System.Web.UI.DataSourceView (owner, viewName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.IDataSource" />
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="owner">The data source control that the <see cref="T:System.Web.UI.DataSourceView" /> is associated with.</param>
        <param name="viewName">The name of the <see cref="T:System.Web.UI.DataSourceView" /> object.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Web.UI.DataSourceView" /> class.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="owner" /> is <see langword="null" />.  \- or -  <paramref name="viewName" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CanDelete">
      <MemberSignature Language="C#" Value="public virtual bool CanDelete { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanDelete" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanDelete" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanDelete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanDelete { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanDelete : bool" Usage="System.Web.UI.DataSourceView.CanDelete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.DataSourceView" /> object associated with the current <see cref="T:System.Web.UI.DataSourceControl" /> object supports the <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /> operation.</summary>
        <value>
          <see langword="true" /> Se a operação tem suporte; Caso contrário, <see langword="false" />. Retorna a implementação da classe base <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.DataSourceView.CanDelete%2A> propriedade reflete não apenas um recurso de controle da fonte de dados, mas também se ele é no momento apropriado para executar uma operação. Por exemplo, mesmo que uma fonte de dados exibir oferece suporte a <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> operação em geral, se uma propriedade obrigatória ou outros dados não for definidos, o <xref:System.Web.UI.DataSourceView.CanDelete%2A> propriedade retorna `false`, como uma operação de exclusão falhará.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como substituir o <xref:System.Web.UI.DataSourceView.CanDelete%2A> propriedade e o <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> método em uma classe que estende o <xref:System.Web.UI.DataSourceView> classe. Este exemplo de código é parte de um exemplo maior fornecido para a <xref:System.Web.UI.DataSourceView> classe.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#8)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CanExecute">
      <MemberSignature Language="C#" Value="public virtual bool CanExecute (string commandName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanExecute(string commandName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.CanExecute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanExecute (commandName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanExecute(System::String ^ commandName);" />
      <MemberSignature Language="F#" Value="abstract member CanExecute : string -&gt; bool&#xA;override this.CanExecute : string -&gt; bool" Usage="dataSourceView.CanExecute commandName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="commandName">The name of the command.</param>
        <summary>Determines whether the specified command can be executed.</summary>
        <returns>
          <see langword="true" /> if the command can be executed; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanInsert">
      <MemberSignature Language="C#" Value="public virtual bool CanInsert { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanInsert" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanInsert" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanInsert As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanInsert { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanInsert : bool" Usage="System.Web.UI.DataSourceView.CanInsert" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.DataSourceView" /> object associated with the current <see cref="T:System.Web.UI.DataSourceControl" /> object supports the <see cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" /> operation.</summary>
        <value>
          <see langword="true" /> Se a operação tem suporte; Caso contrário, <see langword="false" />. Retorna a implementação da classe base <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.DataSourceView.CanInsert%2A> propriedade reflete não apenas um recurso de controle da fonte de dados, mas também se ele é no momento apropriado para executar uma operação. Por exemplo, embora um controle de fonte de dados oferece suporte a <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> operação, se necessário inserir o comando ou outros dados não for definidos, o <xref:System.Web.UI.DataSourceView.CanInsert%2A> propriedade retorna `false`, como uma operação de inserção falhará.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como substituir o <xref:System.Web.UI.DataSourceView.CanInsert%2A> propriedade e o <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> método em uma classe que estende o <xref:System.Web.UI.DataSourceView> classe. Este exemplo de código é parte de um exemplo maior fornecido para a <xref:System.Web.UI.DataSourceView> classe.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#9)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CanPage">
      <MemberSignature Language="C#" Value="public virtual bool CanPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanPage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanPage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanPage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanPage { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanPage : bool" Usage="System.Web.UI.DataSourceView.CanPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.DataSourceView" /> object associated with the current <see cref="T:System.Web.UI.DataSourceControl" /> object supports paging through the data retrieved by the <see cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> method.</summary>
        <value>
          <see langword="true" /> Se a operação tem suporte; Caso contrário, <see langword="false" />. Retorna a implementação da classe base <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um controle associado a dados pode solicitar paginação adicionando o <xref:System.Web.UI.DataSourceCapabilities.Page> campo para o <xref:System.Web.UI.DataSourceSelectArguments> objeto passado para o <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> método. Se um controle associado a dados solicitações de paginação, mas o <xref:System.Web.UI.DataSourceView.CanPage%2A> propriedade retorna `false`, a exibição da fonte de dados gera uma exceção.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.StartRowIndex" />
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.MaximumRows" />
        <altmember cref="T:System.Web.UI.DataSourceCapabilities" />
      </Docs>
    </Member>
    <Member MemberName="CanRetrieveTotalRowCount">
      <MemberSignature Language="C#" Value="public virtual bool CanRetrieveTotalRowCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRetrieveTotalRowCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanRetrieveTotalRowCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRetrieveTotalRowCount As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRetrieveTotalRowCount { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRetrieveTotalRowCount : bool" Usage="System.Web.UI.DataSourceView.CanRetrieveTotalRowCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.DataSourceView" /> object associated with the current <see cref="T:System.Web.UI.DataSourceControl" /> object supports retrieving the total number of data rows, instead of the data.</summary>
        <value>
          <see langword="true" /> Se a operação tem suporte; Caso contrário, <see langword="false" />. Retorna a implementação da classe base <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um controle associado a dados pode solicitar uma contagem total de linhas, adicionando o <xref:System.Web.UI.DataSourceCapabilities.RetrieveTotalRowCount?displayProperty=nameWithType> campo para o <xref:System.Web.UI.DataSourceSelectArguments?displayProperty=nameWithType> objeto passado para o <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> método. Se um controle associado a dados solicita uma contagem total de linhas, mas o <xref:System.Web.UI.DataSourceView.CanRetrieveTotalRowCount%2A> propriedade retorna `false`, a exibição da fonte de dados gera uma exceção.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.TotalRowCount" />
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount" />
        <altmember cref="T:System.Web.UI.DataSourceCapabilities" />
        <altmember cref="F:System.Web.UI.DataSourceOperation.SelectCount" />
      </Docs>
    </Member>
    <Member MemberName="CanSort">
      <MemberSignature Language="C#" Value="public virtual bool CanSort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSort" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanSort" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanSort As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSort { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSort : bool" Usage="System.Web.UI.DataSourceView.CanSort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.DataSourceView" /> object associated with the current <see cref="T:System.Web.UI.DataSourceControl" /> object supports a sorted view on the underlying data source.</summary>
        <value>
          <see langword="true" /> Se a operação tem suporte; Caso contrário, <see langword="false" />. A implementação padrão retorna <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um controle associado a dados pode solicitar a classificação, adicionando o <xref:System.Web.UI.DataSourceCapabilities.Sort> campo para o <xref:System.Web.UI.DataSourceSelectArguments> objeto passado para o <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> método. Se uma associação de dados controlar as solicitações de classificação, mas o <xref:System.Web.UI.DataSourceView.CanSort%2A> propriedade retorna `false`, a exibição da fonte de dados gera uma exceção.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como substituir o <xref:System.Web.UI.DataSourceView.CanSort%2A> propriedade em uma classe que estende o <xref:System.Web.UI.DataSourceView> classe. Este exemplo de código é parte de um exemplo maior fornecido para a <xref:System.Web.UI.DataSourceView> classe.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#7)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.SortExpression" />
        <altmember cref="T:System.Web.UI.DataSourceCapabilities" />
      </Docs>
    </Member>
    <Member MemberName="CanUpdate">
      <MemberSignature Language="C#" Value="public virtual bool CanUpdate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanUpdate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanUpdate { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanUpdate : bool" Usage="System.Web.UI.DataSourceView.CanUpdate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.DataSourceView" /> object associated with the current <see cref="T:System.Web.UI.DataSourceControl" /> object supports the <see cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" /> operation.</summary>
        <value>
          <see langword="true" /> Se a operação tem suporte; Caso contrário, <see langword="false" />. A implementação padrão retorna <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.DataSourceView.CanUpdate%2A> propriedade reflete não apenas um recurso de controle da fonte de dados, mas também se ele é no momento apropriado para executar uma operação. Por exemplo, embora um controle associado a dados oferece suporte a <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> operação, se um comando de atualização necessária ou outros dados não for definidos, o <xref:System.Web.UI.DataSourceView.CanUpdate%2A> propriedade retorna `false`, como uma operação de atualização falhará.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como substituir o <xref:System.Web.UI.DataSourceView.CanUpdate%2A> propriedade e o <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> método em uma classe que estende o <xref:System.Web.UI.DataSourceView> classe. Este exemplo de código é parte de um exemplo maior fornecido para a <xref:System.Web.UI.DataSourceView> classe.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#10)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="DataSourceViewChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DataSourceViewChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataSourceViewChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.DataSourceView.DataSourceViewChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataSourceViewChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DataSourceViewChanged;" />
      <MemberSignature Language="F#" Value="member this.DataSourceViewChanged : EventHandler " Usage="member this.DataSourceViewChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the data source view has changed.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A alteração para o modo de exibição de fonte de dados pode ser devido a uma alteração nos valores de suas propriedades ou a uma alteração nos dados devido a uma operação de dados executada pela exibição da fonte de dados.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual void Delete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues, System.Web.UI.DataSourceViewOperationCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues, class System.Web.UI.DataSourceViewOperationCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Delete (keys As IDictionary, oldValues As IDictionary, callback As DataSourceViewOperationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Delete(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ oldValues, System::Web::UI::DataSourceViewOperationCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member Delete : System.Collections.IDictionary * System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit&#xA;override this.Delete : System.Collections.IDictionary * System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit" Usage="dataSourceView.Delete (keys, oldValues, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
        <Parameter Name="callback" Type="System.Web.UI.DataSourceViewOperationCallback" />
      </Parameters>
      <Docs>
        <param name="keys">An <see cref="T:System.Collections.IDictionary" /> of object or row keys to be deleted by the <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /> operation.</param>
        <param name="oldValues">An <see cref="T:System.Collections.IDictionary" /> of name/value pairs that represent data elements and their original values.</param>
        <param name="callback">A <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> delegate that is used to notify a data-bound control when the asynchronous operation is complete.</param>
        <summary>Performs an asynchronous delete operation on the list of data that the <see cref="T:System.Web.UI.DataSourceView" /> object represents.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.DataSourceView.Delete%2A> método é a interface de exclusão de dados assíncrona para todos os objetos de exibição de fonte de dados. O <xref:System.Web.UI.DataSourceView.Delete%2A> chamadas de método de <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> usando qualquer método de `keys` e `oldValues` valores de parâmetros fornecidos. O `callback` parâmetro é um delegado que um controle associado a dados passa para a fonte de dados de exibição, que é usada para notificar a associação de dados controlar quando o <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> operação foi concluída. O método usa os parâmetros do <xref:System.Web.UI.DataSourceViewOperationCallback> delegado para retornar o número de registros afetados e qualquer <xref:System.Exception> exceção que é lançada pelo <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> supplied is <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.DataSourceViewOperationCallback" />
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="Events">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.EventHandlerList Events { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.EventHandlerList Events" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.Events" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Events As EventHandlerList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::ComponentModel::EventHandlerList ^ Events { System::ComponentModel::EventHandlerList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Events : System.ComponentModel.EventHandlerList" Usage="System.Web.UI.DataSourceView.Events" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventHandlerList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a list of event-handler delegates for the data source view.</summary>
        <value>A lista de delegados de manipulador de eventos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa propriedade é do tipo <xref:System.ComponentModel.EventHandlerList>, que usa um algoritmo de pesquisa linear para localizar as entradas na lista de delegados. Um algoritmo de pesquisa linear é ineficiente ao trabalhar com um grande número de entradas. Portanto, quando você tiver uma lista grande, localizando entradas com essa propriedade será lentas.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteCommand">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Executes the specified command.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteCommand">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteCommand (string commandName, System.Collections.IDictionary keys, System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteCommand(string commandName, class System.Collections.IDictionary keys, class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteCommand (commandName As String, keys As IDictionary, values As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteCommand(System::String ^ commandName, System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteCommand : string * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int&#xA;override this.ExecuteCommand : string * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="dataSourceView.ExecuteCommand (commandName, keys, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandName" Type="System.String" />
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="commandName">The name of the command.</param>
        <param name="keys">A dictionary of object keys or row keys to act on.</param>
        <param name="values">A dictionary of name/value pairs that represent data elements and their values.</param>
        <summary>Executes the specified command.</summary>
        <returns>The number of items that were affected by the operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteCommand">
      <MemberSignature Language="C#" Value="public virtual void ExecuteCommand (string commandName, System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Web.UI.DataSourceViewOperationCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExecuteCommand(string commandName, class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Web.UI.DataSourceViewOperationCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExecuteCommand (commandName As String, keys As IDictionary, values As IDictionary, callback As DataSourceViewOperationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ExecuteCommand(System::String ^ commandName, System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Web::UI::DataSourceViewOperationCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteCommand : string * System.Collections.IDictionary * System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit&#xA;override this.ExecuteCommand : string * System.Collections.IDictionary * System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit" Usage="dataSourceView.ExecuteCommand (commandName, keys, values, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandName" Type="System.String" />
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="callback" Type="System.Web.UI.DataSourceViewOperationCallback" />
      </Parameters>
      <Docs>
        <param name="commandName">The name of the command.</param>
        <param name="keys">A dictionary of object keys or row keys to act on.</param>
        <param name="values">A dictionary of name/value pairs that represent data elements and their values.</param>
        <param name="callback">A <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> object.</param>
        <summary>Executes the specified command.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método não retorna um valor.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDelete">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteDelete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteDelete(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteDelete (keys As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteDelete(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteDelete : System.Collections.IDictionary * System.Collections.IDictionary -&gt; int&#xA;override this.ExecuteDelete : System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="dataSourceView.ExecuteDelete (keys, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">An <see cref="T:System.Collections.IDictionary" /> of object or row keys to be deleted by the <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /> operation.</param>
        <param name="oldValues">An <see cref="T:System.Collections.IDictionary" /> of name/value pairs that represent data elements and their original values.</param>
        <summary>Performs a delete operation on the list of data that the <see cref="T:System.Web.UI.DataSourceView" /> object represents.</summary>
        <returns>The number of items that were deleted from the underlying data storage.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Controles associados a dados podem determinar se o <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> operação tem suporte por um controle de fonte de dados, recuperando o <xref:System.Web.UI.DataSourceView> objeto usando o <xref:System.Web.UI.DataSourceControl.GetView%2A?displayProperty=nameWithType> método e verificando o <xref:System.Web.UI.DataSourceView.CanDelete%2A> propriedade.  
  
 O `keys` parâmetro representa as chaves de objeto ou uma linha de dados a ser excluído. Para fontes de dados que representam dados relacionais, como o <xref:System.Web.UI.WebControls.SqlDataSource> controle, o `keys` parâmetro é uma coleção de chaves primárias do banco de dados. Em outros cenários, o `keys` é uma coleção de pares nome/valor de parâmetro e é usado para filtrar uma lista de dados. Nenhuma correspondência um par nome/valor de dados são excluídos.  
  
> [!NOTE]
>  O <xref:System.Web.UI.DataSourceView> implementação do padrão da classe é gerar um <xref:System.NotSupportedException> exceção. Se você estender o <xref:System.Web.UI.DataSourceView> classe, substitua o <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> método se sua classe oferece suporte a exclusão do armazenamento de dados subjacente.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como uma classe que estende o <xref:System.Web.UI.DataSourceView> classe pode substituir o <xref:System.Web.UI.DataSourceView.CanDelete%2A> propriedade e o <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> método. Este exemplo de código é parte de um exemplo maior fornecido para a <xref:System.Web.UI.DataSourceView> classe.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#8)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">The <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /> operation is not supported by the <see cref="T:System.Web.UI.DataSourceView" />.</exception>
        <altmember cref="P:System.Web.UI.DataSourceView.CanDelete" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteInsert">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteInsert (System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteInsert(class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteInsert (values As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteInsert(System::Collections::IDictionary ^ values);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteInsert : System.Collections.IDictionary -&gt; int&#xA;override this.ExecuteInsert : System.Collections.IDictionary -&gt; int" Usage="dataSourceView.ExecuteInsert values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="values">An <see cref="T:System.Collections.IDictionary" /> of name/value pairs used during an insert operation.</param>
        <summary>Performs an insert operation on the list of data that the <see cref="T:System.Web.UI.DataSourceView" /> object represents.</summary>
        <returns>The number of items that were inserted into the underlying data storage.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Controles associados a dados podem determinar se o <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> operação tem suporte por um controle de fonte de dados, recuperando o <xref:System.Web.UI.DataSourceView> objeto usando o <xref:System.Web.UI.DataSourceControl.GetView%2A> método e verificando o <xref:System.Web.UI.DataSourceView.CanInsert%2A> propriedade.  
  
 O `values` parâmetro é um conjunto de pares nome/valor que representa colunas de dados ou campos e valores correspondentes a serem inseridos.  
  
> [!NOTE]
>  O <xref:System.Web.UI.DataSourceView> implementação do padrão da classe é gerar um <xref:System.NotSupportedException> exceção. Se você estender o <xref:System.Web.UI.DataSourceView> classe, substitua o <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> método se sua classe oferece suporte à inserção para o armazenamento de dados subjacente.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como uma classe que estende o <xref:System.Web.UI.DataSourceView> classe pode substituir o <xref:System.Web.UI.DataSourceView.CanInsert%2A> propriedade e o <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> método. Este exemplo de código é parte de um exemplo maior fornecido para a <xref:System.Web.UI.DataSourceView> classe.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#9)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">The <see cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" /> operation is not supported by the <see cref="T:System.Web.UI.DataSourceView" />.</exception>
        <altmember cref="P:System.Web.UI.DataSourceView.CanInsert" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteSelect">
      <MemberSignature Language="C#" Value="protected internal abstract System.Collections.IEnumerable ExecuteSelect (System.Web.UI.DataSourceSelectArguments arguments);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Collections.IEnumerable ExecuteSelect(class System.Web.UI.DataSourceSelectArguments arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function ExecuteSelect (arguments As DataSourceSelectArguments) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Collections::IEnumerable ^ ExecuteSelect(System::Web::UI::DataSourceSelectArguments ^ arguments);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteSelect : System.Web.UI.DataSourceSelectArguments -&gt; System.Collections.IEnumerable" Usage="dataSourceView.ExecuteSelect arguments" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
      </Parameters>
      <Docs>
        <param name="arguments">A <see cref="T:System.Web.UI.DataSourceSelectArguments" /> that is used to request operations on the data beyond basic data retrieval.</param>
        <summary>Gets a list of data from the underlying data storage.</summary>
        <returns>An <see cref="T:System.Collections.IEnumerable" /> list of data from the underlying data storage.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> método é chamado para recuperar dados de armazenamento de dados subjacente e retorná-lo como um <xref:System.Collections.IEnumerable> objeto. Todos os controles de fonte de dados oferecem suporte à recuperação de dados do seu armazenamento de dados subjacente, mesmo se não há suporte para outras operações, como inserção e classificação. Como um controle associado a dados pode solicitar uma lista de dados a qualquer momento como resultado de uma <xref:System.Web.UI.IDataSource.DataSourceChanged> evento ou um <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> chamada de método, a recuperação de dados deve ser executada sob demanda.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como substituir o <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> método em uma classe que estende o <xref:System.Web.UI.DataSourceView> classe. O `CsvDataSourceView` abre um arquivo de valores separados por vírgula (. csv), analisa-lo linha por linha e cria um <xref:System.Data.DataTable> objeto e um <xref:System.Data.DataView> objeto para manter os dados na memória. Por fim, uma expressão de classificação é aplicada se for fornecido o <xref:System.Web.UI.DataSourceSelectArguments> objeto e o <xref:System.Data.DataView> objeto é retornado como um <xref:System.Collections.IEnumerable> instância. Este exemplo de código é parte de um exemplo maior fornecido para a <xref:System.Web.UI.DataSourceView> classe.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#6)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceView.CanSort" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteUpdate">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteUpdate (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteUpdate(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteUpdate (keys As IDictionary, values As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteUpdate(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteUpdate : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int&#xA;override this.ExecuteUpdate : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="dataSourceView.ExecuteUpdate (keys, values, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">An <see cref="T:System.Collections.IDictionary" /> of object or row keys to be updated by the update operation.</param>
        <param name="values">An <see cref="T:System.Collections.IDictionary" /> of name/value pairs that represent data elements and their new values.</param>
        <param name="oldValues">An <see cref="T:System.Collections.IDictionary" /> of name/value pairs that represent data elements and their original values.</param>
        <summary>Performs an update operation on the list of data that the <see cref="T:System.Web.UI.DataSourceView" /> object represents.</summary>
        <returns>The number of items that were updated in the underlying data storage.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Controles associados a dados podem determinar se o <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> operação tem suporte por um controle de fonte de dados usando o <xref:System.Web.UI.DataSourceControl.GetView%2A?displayProperty=nameWithType> método para recuperar o <xref:System.Web.UI.DataSourceView> objeto e verificar o valor da <xref:System.Web.UI.DataSourceView.CanUpdate%2A> propriedade.  
  
 O `keys` parâmetro representa as chaves de objeto ou uma linha de dados para atualizar. Para fontes de dados que representam dados relacionais, como o <xref:System.Web.UI.WebControls.SqlDataSource> controle, o `keys` parâmetro é uma coleção de chaves primárias do banco de dados. Em outros cenários, o `keys` é uma coleção de pares nome/valor de parâmetro e é usado para filtrar uma lista de dados. Nenhuma correspondência um par nome/valor de dados são atualizados com os valores encontrados no `values` parâmetro, que é um conjunto de pares nome/valor que representa os novos valores para os campos existentes ou colunas.  
  
> [!NOTE]
>  O <xref:System.Web.UI.DataSourceView> implementação do padrão da classe é gerar um <xref:System.NotSupportedException> exceção. Se você estender o <xref:System.Web.UI.DataSourceView> classe, substitua o <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> método se sua classe oferece suporte à atualização de dados no armazenamento de dados subjacente.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como uma classe que estende o <xref:System.Web.UI.DataSourceView> classe pode substituir o <xref:System.Web.UI.DataSourceView.CanUpdate%2A> propriedade e o <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> método. Este exemplo de código é parte de um exemplo maior fornecido para a <xref:System.Web.UI.DataSourceView> classe.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#10)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">The <see cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" /> operation is not supported by the <see cref="T:System.Web.UI.DataSourceView" />.</exception>
        <altmember cref="P:System.Web.UI.DataSourceView.CanUpdate" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual void Insert (System.Collections.IDictionary values, System.Web.UI.DataSourceViewOperationCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(class System.Collections.IDictionary values, class System.Web.UI.DataSourceViewOperationCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.Insert(System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Insert (values As IDictionary, callback As DataSourceViewOperationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(System::Collections::IDictionary ^ values, System::Web::UI::DataSourceViewOperationCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member Insert : System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit&#xA;override this.Insert : System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit" Usage="dataSourceView.Insert (values, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="callback" Type="System.Web.UI.DataSourceViewOperationCallback" />
      </Parameters>
      <Docs>
        <param name="values">An <see cref="T:System.Collections.IDictionary" /> of name/value pairs used during an insert operation.</param>
        <param name="callback">A <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> delegate that is used to notify a data-bound control when the asynchronous operation is complete.</param>
        <summary>Performs an asynchronous insert operation on the list of data that the <see cref="T:System.Web.UI.DataSourceView" /> object represents.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.DataSourceView.Insert%2A> método é a interface de inserção de dados assíncrona para todos os objetos de exibição de fonte de dados. O <xref:System.Web.UI.DataSourceView.Insert%2A> chamadas de método de <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> método usando qualquer `values` fornecido. O `callback` parâmetro é um delegado que um controle associado a dados passa para a fonte de dados de exibição, que é usada para notificar a associação de dados controlar quando o <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> operação foi concluída. O método usa os parâmetros do <xref:System.Web.UI.DataSourceViewOperationCallback> delegado para retornar o número de registros afetados e qualquer <xref:System.Exception> exceção que é lançada pelo <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> chamada de método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> supplied is <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.DataSourceViewOperationCallback" />
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Web.UI.DataSourceView.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name of the data source view.</summary>
        <value>O nome do <see cref="T:System.Web.UI.DataSourceView" />, se houver. O valor padrão é <see cref="F:System.String.Empty" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.DataSourceControl.GetView(System.String)" />
        <altmember cref="M:System.Web.UI.DataSourceControl.GetViewNames" />
      </Docs>
    </Member>
    <Member MemberName="OnDataSourceViewChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDataSourceViewChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataSourceViewChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataSourceViewChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataSourceViewChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataSourceViewChanged : EventArgs -&gt; unit&#xA;override this.OnDataSourceViewChanged : EventArgs -&gt; unit" Usage="dataSourceView.OnDataSourceViewChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">An <see cref="T:System.EventArgs" /> that contains event data.</param>
        <summary>Raises the <see cref="E:System.Web.UI.DataSourceView.DataSourceViewChanged" /> event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.DataSourceView.OnDataSourceViewChanged%2A> método notifica um controle associado a dados que a fonte de dados subjacente foi alterada e que o controle deve associar novamente e executar qualquer trabalho necessário. Normalmente, o <xref:System.Web.UI.DataSourceView.OnDataSourceViewChanged%2A> método é chamado quando uma propriedade da exibição da fonte de dados foi alterado.  
  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).  
  
 O <xref:System.Web.UI.DataSourceView.OnDataSourceViewChanged%2A> método também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao substituir <see cref="M:System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)" /> método para que registrado delegados receber o evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RaiseUnsupportedCapabilityError">
      <MemberSignature Language="C#" Value="protected internal virtual void RaiseUnsupportedCapabilityError (System.Web.UI.DataSourceCapabilities capability);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void RaiseUnsupportedCapabilityError(valuetype System.Web.UI.DataSourceCapabilities capability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub RaiseUnsupportedCapabilityError (capability As DataSourceCapabilities)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void RaiseUnsupportedCapabilityError(System::Web::UI::DataSourceCapabilities capability);" />
      <MemberSignature Language="F#" Value="abstract member RaiseUnsupportedCapabilityError : System.Web.UI.DataSourceCapabilities -&gt; unit&#xA;override this.RaiseUnsupportedCapabilityError : System.Web.UI.DataSourceCapabilities -&gt; unit" Usage="dataSourceView.RaiseUnsupportedCapabilityError capability" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="capability" Type="System.Web.UI.DataSourceCapabilities" />
      </Parameters>
      <Docs>
        <param name="capability">One of the <see cref="T:System.Web.UI.DataSourceCapabilities" /> values that is compared against the capabilities that the view supports.</param>
        <summary>Called by the <see cref="M:System.Web.UI.DataSourceSelectArguments.RaiseUnsupportedCapabilitiesError(System.Web.UI.DataSourceView)" /> method to compare the capabilities requested for an <see cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> operation against those that the view supports.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError%2A> método é usado pela exibição da fonte de dados para examinar cada um dos recursos solicitados por um controle associado a dados, representado pelo <xref:System.Web.UI.DataSourceSelectArguments> objeto passado para o <xref:System.Web.UI.DataSourceView.Select%2A> método e compare-o para os recursos com suporte os dados exibição da fonte.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">The data source view does not support the data source capability specified.</exception>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public virtual void Select (System.Web.UI.DataSourceSelectArguments arguments, System.Web.UI.DataSourceViewSelectCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select(class System.Web.UI.DataSourceSelectArguments arguments, class System.Web.UI.DataSourceViewSelectCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select (arguments As DataSourceSelectArguments, callback As DataSourceViewSelectCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select(System::Web::UI::DataSourceSelectArguments ^ arguments, System::Web::UI::DataSourceViewSelectCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member Select : System.Web.UI.DataSourceSelectArguments * System.Web.UI.DataSourceViewSelectCallback -&gt; unit&#xA;override this.Select : System.Web.UI.DataSourceSelectArguments * System.Web.UI.DataSourceViewSelectCallback -&gt; unit" Usage="dataSourceView.Select (arguments, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
        <Parameter Name="callback" Type="System.Web.UI.DataSourceViewSelectCallback" />
      </Parameters>
      <Docs>
        <param name="arguments">A <see cref="T:System.Web.UI.DataSourceSelectArguments" /> that is used to request operations on the data beyond basic data retrieval.</param>
        <param name="callback">A <see cref="T:System.Web.UI.DataSourceViewSelectCallback" /> delegate that is used to notify a data-bound control when the asynchronous operation is complete.</param>
        <summary>Gets a list of data asynchronously from the underlying data storage.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.DataSourceView.Select%2A> método é a interface de recuperação de dados assíncrona para todos os objetos de exibição de fonte de dados. O <xref:System.Web.UI.DataSourceView.Select%2A> chamadas de método de <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> método, passando qualquer <xref:System.Web.UI.DataSourceSelectArguments> fornecido. O `callback` parâmetro é um delegado que um controle associado a dados passa para a fonte de dados de exibição, que é usada para notificar a associação de dados controlar quando o <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> operação foi concluída. Os dados retornados pelo <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> chamada é retornada no parâmetro do <xref:System.Web.UI.DataSourceViewSelectCallback> delegate.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <see cref="T:System.Web.UI.DataSourceViewSelectCallback" /> supplied is <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.DataSourceViewSelectCallback" />
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual void Update (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues, System.Web.UI.DataSourceViewOperationCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Update(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues, class System.Web.UI.DataSourceViewOperationCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Update (keys As IDictionary, values As IDictionary, oldValues As IDictionary, callback As DataSourceViewOperationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Update(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Collections::IDictionary ^ oldValues, System::Web::UI::DataSourceViewOperationCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member Update : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit&#xA;override this.Update : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit" Usage="dataSourceView.Update (keys, values, oldValues, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
        <Parameter Name="callback" Type="System.Web.UI.DataSourceViewOperationCallback" />
      </Parameters>
      <Docs>
        <param name="keys">An <see cref="T:System.Collections.IDictionary" /> of object or row keys to be updated by the update operation.</param>
        <param name="values">An <see cref="T:System.Collections.IDictionary" /> of name/value pairs that represent data elements and their new values.</param>
        <param name="oldValues">An <see cref="T:System.Collections.IDictionary" /> of name/value pairs that represent data elements and their original values.</param>
        <param name="callback">A <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> delegate that is used to notify a data-bound control when the asynchronous operation is complete.</param>
        <summary>Performs an asynchronous update operation on the list of data that the <see cref="T:System.Web.UI.DataSourceView" /> object represents.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.DataSourceView.Update%2A> método é a interface de modificação de dados assíncrona para todos os objetos de exibição de fonte de dados. O <xref:System.Web.UI.DataSourceView.Update%2A> chamadas de método de <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> usando qualquer método de `keys`, `values`, e `oldValues` valores de parâmetros fornecidos. O `callback` parâmetro é um delegado que um controle associado a dados passa para a fonte de dados de exibição, que é usada para notificar a associação de dados controlar quando o <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> operação foi concluída. O método usa os parâmetros do <xref:System.Web.UI.DataSourceViewOperationCallback> delegado para retornar o número de registros afetados e qualquer <xref:System.Exception> exceção que é lançada pelo <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> chamar.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> supplied is <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.DataSourceViewOperationCallback" />
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
  </Members>
</Type>