<Type Name="ViewStateException" FullName="System.Web.UI.ViewStateException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="eaf6ea86b3645cbf3eda499827e8194c06e8f62d" />
    <Meta Name="ms.sourcegitcommit" Value="723b8a6d92667ba86fcda96190bad3b4a03283b3" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="11/09/2018" />
    <Meta Name="ms.locfileid" Value="51322612" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ViewStateException : Exception" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ViewStateException extends System.Exception implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ViewStateException" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ViewStateException&#xA;Inherits Exception" />
  <TypeSignature Language="C++ CLI" Value="public ref class ViewStateException sealed : Exception" />
  <TypeSignature Language="F#" Value="type ViewStateException = class&#xA;    inherit Exception&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="5aa52-101">Representa a exceção lançada quando o estado de exibição não pode ser carregado ou validado.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5aa52-101">Represents the exception that is thrown when the view state cannot be loaded or validated.</span>
      </span>
      <span data-ttu-id="5aa52-102">Essa classe não pode ser herdada.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5aa52-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5aa52-103">Se ocorrer uma exceção quando a página carrega as informações de estado de exibição, a página cria uma <xref:System.Web.UI.ViewStateException> do objeto e a passa como uma exceção interna dentro de um <xref:System.Web.HttpException> exceção.</span><span class="sxs-lookup"><span data-stu-id="5aa52-103">If an exception occurs when the page loads the view-state information, the page creates a <xref:System.Web.UI.ViewStateException> object and passes it as an inner exception within an <xref:System.Web.HttpException> exception.</span></span> <span data-ttu-id="5aa52-104">O <xref:System.Web.HttpException> exceção é lançada novamente para ser tratada pelo aplicativo.</span><span class="sxs-lookup"><span data-stu-id="5aa52-104">The <xref:System.Web.HttpException> exception is re-thrown to be handled by the application.</span></span>  
  
 <span data-ttu-id="5aa52-105">O <xref:System.Web.UI.ViewStateException> classe armazena informações sobre a exceção no <xref:System.Web.UI.ViewStateException.Message%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="5aa52-105">The <xref:System.Web.UI.ViewStateException> class stores information about the exception in the <xref:System.Web.UI.ViewStateException.Message%2A> property.</span></span> <span data-ttu-id="5aa52-106">Se a solicitação tiver permissão para acessar o <xref:System.Web.HttpRequest.ServerVariables%2A> propriedade, em seguida, a <xref:System.Web.UI.ViewStateException.Message%2A> propriedade contém os valores retornados das <xref:System.Web.UI.ViewStateException.RemoteAddress%2A>, <xref:System.Web.UI.ViewStateException.RemotePort%2A>, <xref:System.Web.UI.ViewStateException.UserAgent%2A>, <xref:System.Web.UI.ViewStateException.PersistedState%2A>, <xref:System.Web.UI.ViewStateException.Referer%2A>, e <xref:System.Web.UI.ViewStateException.Path%2A> Propriedades; Caso contrário, o <xref:System.Web.UI.ViewStateException.Message%2A> propriedade contém uma mensagem de erro genérica do estado de exibição.</span><span class="sxs-lookup"><span data-stu-id="5aa52-106">If the request has permission to access the <xref:System.Web.HttpRequest.ServerVariables%2A> property, then the <xref:System.Web.UI.ViewStateException.Message%2A> property contains the values returned from the <xref:System.Web.UI.ViewStateException.RemoteAddress%2A>, <xref:System.Web.UI.ViewStateException.RemotePort%2A>, <xref:System.Web.UI.ViewStateException.UserAgent%2A>, <xref:System.Web.UI.ViewStateException.PersistedState%2A>, <xref:System.Web.UI.ViewStateException.Referer%2A>, and <xref:System.Web.UI.ViewStateException.Path%2A> properties; otherwise, the <xref:System.Web.UI.ViewStateException.Message%2A> property contains a generic view-state error message.</span></span>  
  
 <span data-ttu-id="5aa52-107">Uma exceção de estado de exibição pode ser o resultado de um erro de validação de códigos de autenticação de mensagem (MAC).</span><span class="sxs-lookup"><span data-stu-id="5aa52-107">A view-state exception can be the result of a Message Authentication Codes (MAC) validation error.</span></span> <span data-ttu-id="5aa52-108">Se o atributo de página `enableViewStateMac` é definido como `true`, informações de estado de exibição são codificadas com um identificador de MAC.</span><span class="sxs-lookup"><span data-stu-id="5aa52-108">If the page attribute `enableViewStateMac` is set to `true`, view-state information is encoded with a MAC identifier.</span></span> <span data-ttu-id="5aa52-109">Quando as informações de estado de exibição são postadas de volta para o servidor, a página verifica a codificação para garantir que ele não foi alterado pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="5aa52-109">When the view-state information is posted back to the server, the page verifies the encoding to ensure that it has not been altered by the user.</span></span> <span data-ttu-id="5aa52-110">Se a página não é possível validar a codificação do MAC nas informações de estado de exibição, ele gerará uma <xref:System.Web.HttpException> exceção com a <xref:System.Web.UI.ViewStateException> objeto como uma exceção interna.</span><span class="sxs-lookup"><span data-stu-id="5aa52-110">If the page cannot validate the MAC encoding on the view-state information, it will throw an <xref:System.Web.HttpException> exception with the <xref:System.Web.UI.ViewStateException> object as an inner exception.</span></span>  
  
 <span data-ttu-id="5aa52-111">Validação de MAC de êxito, as informações de estado de exibição devem ser hash pela mesma chave quando ele é enviado e recebido.</span><span class="sxs-lookup"><span data-stu-id="5aa52-111">For MAC validation to succeed, the view-state information must be hashed by the same key when it is sent and received.</span></span> <span data-ttu-id="5aa52-112">Dentro de uma Web farm, a chave do computador em cada servidor deve ser definida para uma chave comum.</span><span class="sxs-lookup"><span data-stu-id="5aa52-112">Within a Web farm, the machine key on each server should be set to a common key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5aa52-113">O exemplo de código a seguir demonstra como implementar um método que desserializa uma cadeia de caracteres codificada em base64 e retorna um <xref:System.Collections.ICollection> coleção de configurações de propriedade.</span><span class="sxs-lookup"><span data-stu-id="5aa52-113">The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <xref:System.Collections.ICollection> collection of property settings.</span></span> <span data-ttu-id="5aa52-114">O <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> método pode lançar uma <xref:System.Web.HttpException> exceção que contém um <xref:System.Web.UI.ViewStateException> objeto como uma exceção interna.</span><span class="sxs-lookup"><span data-stu-id="5aa52-114">The <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> method can throw an <xref:System.Web.HttpException> exception that contains a <xref:System.Web.UI.ViewStateException> object as an inner exception.</span></span> <span data-ttu-id="5aa52-115">O exemplo mostra como você pode capturar uma <xref:System.Web.HttpException> exceção e recuperar as propriedades do <xref:System.Web.UI.ViewStateException> objeto.</span><span class="sxs-lookup"><span data-stu-id="5aa52-115">The example shows how you can catch an <xref:System.Web.HttpException> exception and retrieve the properties from the <xref:System.Web.UI.ViewStateException> object.</span></span>  
  
 [!code-csharp[System.Web.UI.ViewStateException#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ViewStateException/CS/Class1.cs#2)]
 [!code-vb[System.Web.UI.ViewStateException#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ViewStateException/VB/Class1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Configuration.MachineKeySection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ViewStateException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ViewStateException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ViewStateException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5aa52-116">Inicializa uma nova instância da classe <see cref="T:System.Web.UI.ViewStateException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5aa52-116">Initializes a new instance of the <see cref="T:System.Web.UI.ViewStateException" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Configuration.MachineKeySection" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ViewStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="viewStateException.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="5aa52-117">O objeto que mantém os dados de objeto serializados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5aa52-117">The object that holds the serialized object data.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="5aa52-118">As informações contextuais sobre a origem ou o destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5aa52-118">The contextual information about the source or destination.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5aa52-119">Inicializa uma nova instância da classe <see cref="T:System.Web.UI.ViewStateException" /> com dados serializados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5aa52-119">Initializes a new instance of the <see cref="T:System.Web.UI.ViewStateException" /> class with serialized data.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConnected">
      <MemberSignature Language="C#" Value="public bool IsConnected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConnected" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ViewStateException.IsConnected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsConnected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsConnected { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsConnected : bool" Usage="System.Web.UI.ViewStateException.IsConnected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5aa52-120">Obtém um valor que indica se o cliente está conectado ao servidor no momento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5aa52-120">Gets a value indicating whether the client is currently connected to the server.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5aa52-121">
            <see langword="true" /> Se o cliente ainda está conectado ao servidor. Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5aa52-121">
              <see langword="true" /> if the client is still connected to the server; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5aa52-122">Essa propriedade retorna o mesmo valor que chamar o <xref:System.Web.HttpResponse.IsClientConnected%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="5aa52-122">This property returns the same value as calling the <xref:System.Web.HttpResponse.IsClientConnected%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5aa52-123">O exemplo de código a seguir demonstra como implementar um método que desserializa uma cadeia de caracteres codificada em base64 e retorna um <xref:System.Collections.ICollection> coleção de configurações de propriedade.</span><span class="sxs-lookup"><span data-stu-id="5aa52-123">The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <xref:System.Collections.ICollection> collection of property settings.</span></span> <span data-ttu-id="5aa52-124">O <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> método pode lançar uma <xref:System.Web.HttpException> exceção que contém um <xref:System.Web.UI.ViewStateException> objeto como uma exceção interna.</span><span class="sxs-lookup"><span data-stu-id="5aa52-124">The <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> method can throw an <xref:System.Web.HttpException> exception that contains a <xref:System.Web.UI.ViewStateException> object as an inner exception.</span></span> <span data-ttu-id="5aa52-125">O exemplo mostra como você pode capturar uma <xref:System.Web.HttpException> exceção e recuperar as propriedades do <xref:System.Web.UI.ViewStateException> objeto.</span><span class="sxs-lookup"><span data-stu-id="5aa52-125">The example shows how you can catch an <xref:System.Web.HttpException> exception and retrieve the properties from the <xref:System.Web.UI.ViewStateException> object.</span></span>  
  
 [!code-csharp[System.Web.UI.ViewStateException#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ViewStateException/CS/Class1.cs#2)]
 [!code-vb[System.Web.UI.ViewStateException#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ViewStateException/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpResponse" />
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public override string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ViewStateException.Message" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Message As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Message { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Message : string" Usage="System.Web.UI.ViewStateException.Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5aa52-126">Obtém informações de depuração sobre a solicitação HTTP que resultou em uma exceção de estado de exibição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5aa52-126">Gets debugging information about the HTTP request that resulted in a view-state exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5aa52-127">Um <see cref="T:System.String" /> que contém a mensagem formatada com informações sobre a exceção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5aa52-127">A <see cref="T:System.String" /> containing the formatted message with information about the exception.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5aa52-128">Se a solicitação não tem permissão para acessar as variáveis de servidor, em seguida, essa propriedade retornará uma mensagem de erro genérica do estado de exibição.</span><span class="sxs-lookup"><span data-stu-id="5aa52-128">If the request does not have permission to access the server variables, then this property returns a generic view-state error message.</span></span> <span data-ttu-id="5aa52-129">Se a solicitação tem permissão para acessar variáveis de servidor, o <xref:System.Web.UI.ViewStateException.Message%2A> propriedade contém os valores retornados dos <xref:System.Web.UI.ViewStateException.RemoteAddress%2A>, <xref:System.Web.UI.ViewStateException.RemotePort%2A>, <xref:System.Web.UI.ViewStateException.UserAgent%2A>, <xref:System.Web.UI.ViewStateException.PersistedState%2A>, <xref:System.Web.UI.ViewStateException.Referer%2A>, e <xref:System.Web.UI.ViewStateException.Path%2A> propriedades.</span><span class="sxs-lookup"><span data-stu-id="5aa52-129">If the request does have permission to access server variables, the <xref:System.Web.UI.ViewStateException.Message%2A> property contains the values returned from the <xref:System.Web.UI.ViewStateException.RemoteAddress%2A>, <xref:System.Web.UI.ViewStateException.RemotePort%2A>, <xref:System.Web.UI.ViewStateException.UserAgent%2A>, <xref:System.Web.UI.ViewStateException.PersistedState%2A>, <xref:System.Web.UI.ViewStateException.Referer%2A>, and <xref:System.Web.UI.ViewStateException.Path%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ViewStateException.Path" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Path : string" Usage="System.Web.UI.ViewStateException.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5aa52-130">Obtém o caminho da solicitação HTTP que resultou em uma exceção de estado de exibição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5aa52-130">Gets the path of the HTTP request that resulted in a view-state exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5aa52-131">Um <see cref="T:System.String" /> que contém o caminho da solicitação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5aa52-131">A <see cref="T:System.String" /> containing the path from the request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5aa52-132">Essa propriedade retorna o mesmo valor que o `PATH_INFO` variável de <xref:System.Web.HttpRequest.ServerVariables%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="5aa52-132">This property returns the same value as the `PATH_INFO` variable in the <xref:System.Web.HttpRequest.ServerVariables%2A> property.</span></span> <span data-ttu-id="5aa52-133">Ele retorna a parte do caminho após o nome do host.</span><span class="sxs-lookup"><span data-stu-id="5aa52-133">It returns the portion of the path after the host name.</span></span> <span data-ttu-id="5aa52-134">Por exemplo, na URL http://www.contoso.com/virdir/page.html, <xref:System.Web.UI.ViewStateException.Path%2A> retornaria /virdir/page.html.</span><span class="sxs-lookup"><span data-stu-id="5aa52-134">For example, in the URL http://www.contoso.com/virdir/page.html, <xref:System.Web.UI.ViewStateException.Path%2A> would return /virdir/page.html.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5aa52-135">O exemplo de código a seguir demonstra como implementar um método que desserializa uma cadeia de caracteres codificada em base64 e retorna um <xref:System.Collections.ICollection> coleção de configurações de propriedade.</span><span class="sxs-lookup"><span data-stu-id="5aa52-135">The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <xref:System.Collections.ICollection> collection of property settings.</span></span> <span data-ttu-id="5aa52-136">O <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> método pode lançar uma <xref:System.Web.HttpException> exceção que contém um <xref:System.Web.UI.ViewStateException> objeto como uma exceção interna.</span><span class="sxs-lookup"><span data-stu-id="5aa52-136">The <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> method can throw an <xref:System.Web.HttpException> exception that contains a <xref:System.Web.UI.ViewStateException> object as an inner exception.</span></span> <span data-ttu-id="5aa52-137">O exemplo mostra como você pode capturar uma <xref:System.Web.HttpException> exceção e recuperar as propriedades do <xref:System.Web.UI.ViewStateException> objeto.</span><span class="sxs-lookup"><span data-stu-id="5aa52-137">The example shows how you can catch an <xref:System.Web.HttpException> exception and retrieve the properties from the <xref:System.Web.UI.ViewStateException> object.</span></span>  
  
 [!code-csharp[System.Web.UI.ViewStateException#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ViewStateException/CS/Class1.cs#2)]
 [!code-vb[System.Web.UI.ViewStateException#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ViewStateException/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PersistedState">
      <MemberSignature Language="C#" Value="public string PersistedState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PersistedState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ViewStateException.PersistedState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PersistedState As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PersistedState { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PersistedState : string" Usage="System.Web.UI.ViewStateException.PersistedState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5aa52-138">Obtém o conteúdo da cadeia de caracteres de estado de exibição que, quando lido, causou a exceção de estado de exibição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5aa52-138">Gets the contents of the view-state string that, when read, caused the view-state exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5aa52-139">Um <see cref="T:System.String" /> que contém o estado de exibição de valores que causou a exceção de estado de exibição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5aa52-139">A <see cref="T:System.String" /> containing the view-state values that caused the view-state exception.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Referer">
      <MemberSignature Language="C#" Value="public string Referer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Referer" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ViewStateException.Referer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Referer As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Referer { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Referer : string" Usage="System.Web.UI.ViewStateException.Referer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5aa52-140">Obtém a URL da página que é vinculada à página em que ocorreu a exceção de estado de exibição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5aa52-140">Gets the URL of the page that linked to the page where the view-state exception occurred.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5aa52-141">Um <see cref="T:System.String" /> que contém o referenciador HTTP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5aa52-141">A <see cref="T:System.String" /> containing the HTTP referrer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5aa52-142">Essa propriedade retorna o mesmo valor que o `HTTP_REFERER` variável de <xref:System.Web.HttpRequest.ServerVariables%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="5aa52-142">This property returns the same value as the `HTTP_REFERER` variable in the <xref:System.Web.HttpRequest.ServerVariables%2A> property.</span></span> <span data-ttu-id="5aa52-143">O valor é uma cadeia de caracteres vazia ("") se nenhuma solicitação anterior vinculada à página.</span><span class="sxs-lookup"><span data-stu-id="5aa52-143">The value is an empty string ("") if no previous request linked to the page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5aa52-144">O exemplo de código a seguir demonstra como implementar um método que desserializa uma cadeia de caracteres codificada em base64 e retorna um <xref:System.Collections.ICollection> coleção de configurações de propriedade.</span><span class="sxs-lookup"><span data-stu-id="5aa52-144">The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <xref:System.Collections.ICollection> collection of property settings.</span></span> <span data-ttu-id="5aa52-145">O <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> método pode lançar uma <xref:System.Web.HttpException> exceção que contém um <xref:System.Web.UI.ViewStateException> objeto como uma exceção interna.</span><span class="sxs-lookup"><span data-stu-id="5aa52-145">The <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> method can throw an <xref:System.Web.HttpException> exception that contains a <xref:System.Web.UI.ViewStateException> object as an inner exception.</span></span> <span data-ttu-id="5aa52-146">O exemplo mostra como você pode capturar uma <xref:System.Web.HttpException> exceção e recuperar as propriedades do <xref:System.Web.UI.ViewStateException> objeto.</span><span class="sxs-lookup"><span data-stu-id="5aa52-146">The example shows how you can catch an <xref:System.Web.HttpException> exception and retrieve the properties from the <xref:System.Web.UI.ViewStateException> object.</span></span>  
  
 [!code-csharp[System.Web.UI.ViewStateException#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ViewStateException/CS/Class1.cs#2)]
 [!code-vb[System.Web.UI.ViewStateException#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ViewStateException/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteAddress">
      <MemberSignature Language="C#" Value="public string RemoteAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RemoteAddress" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ViewStateException.RemoteAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RemoteAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RemoteAddress { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RemoteAddress : string" Usage="System.Web.UI.ViewStateException.RemoteAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5aa52-147">Obtém o endereço IP da solicitação HTTP que resultou em uma exceção de estado de exibição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5aa52-147">Gets the IP address of the HTTP request that resulted in a view-state exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5aa52-148">Um <see cref="T:System.String" /> que contém o endereço IP remoto do cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5aa52-148">A <see cref="T:System.String" /> containing the remote IP address of the client.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5aa52-149">Essa propriedade retorna o mesmo valor que o `REMOTE_ADDR` variável de <xref:System.Web.HttpRequest.ServerVariables%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="5aa52-149">This property returns the same value as the `REMOTE_ADDR` variable in the <xref:System.Web.HttpRequest.ServerVariables%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemotePort">
      <MemberSignature Language="C#" Value="public string RemotePort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RemotePort" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ViewStateException.RemotePort" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RemotePort As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RemotePort { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RemotePort : string" Usage="System.Web.UI.ViewStateException.RemotePort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5aa52-150">Obtém o número da porta da solicitação HTTP que resultou em uma exceção de estado de exibição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5aa52-150">Gets the port number of the HTTP request that resulted in a view-state exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5aa52-151">Um <see cref="T:System.String" /> que contém o número da porta remota.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5aa52-151">A <see cref="T:System.String" /> containing the remote port number.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5aa52-152">Essa propriedade retorna o mesmo valor que o `REMOTE_PORT` variável de <xref:System.Web.HttpRequest.ServerVariables%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="5aa52-152">This property returns the same value as the `REMOTE_PORT` variable in the <xref:System.Web.HttpRequest.ServerVariables%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserAgent">
      <MemberSignature Language="C#" Value="public string UserAgent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserAgent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ViewStateException.UserAgent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserAgent As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserAgent { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserAgent : string" Usage="System.Web.UI.ViewStateException.UserAgent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5aa52-153">Obtém o tipo de navegador da solicitação HTTP que resultou em uma exceção de estado de exibição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5aa52-153">Gets the browser type of the HTTP request that resulted in a view-state exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5aa52-154">Um <see cref="T:System.String" /> que contém o agente do usuário, que normalmente é o tipo de navegador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5aa52-154">A <see cref="T:System.String" /> containing the user agent, which is typically the browser type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5aa52-155">Essa propriedade retorna o mesmo valor que o `HTTP_USER_AGENT` variável de <xref:System.Web.HttpRequest.ServerVariables%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="5aa52-155">This property returns the same value as the `HTTP_USER_AGENT` variable in the <xref:System.Web.HttpRequest.ServerVariables%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5aa52-156">O exemplo de código a seguir demonstra como implementar um método que desserializa uma cadeia de caracteres codificada em base64 e retorna um <xref:System.Collections.ICollection> coleção de configurações de propriedade.</span><span class="sxs-lookup"><span data-stu-id="5aa52-156">The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <xref:System.Collections.ICollection> collection of property settings.</span></span> <span data-ttu-id="5aa52-157">O <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> método pode lançar uma <xref:System.Web.HttpException> exceção que contém um <xref:System.Web.UI.ViewStateException> objeto como uma exceção interna.</span><span class="sxs-lookup"><span data-stu-id="5aa52-157">The <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> method can throw an <xref:System.Web.HttpException> exception that contains a <xref:System.Web.UI.ViewStateException> object as an inner exception.</span></span> <span data-ttu-id="5aa52-158">O exemplo mostra como você pode capturar uma <xref:System.Web.HttpException> exceção e recuperar as propriedades do <xref:System.Web.UI.ViewStateException> objeto.</span><span class="sxs-lookup"><span data-stu-id="5aa52-158">The example shows how you can catch an <xref:System.Web.HttpException> exception and retrieve the properties from the <xref:System.Web.UI.ViewStateException> object.</span></span>  
  
 [!code-csharp[System.Web.UI.ViewStateException#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ViewStateException/CS/Class1.cs#2)]
 [!code-vb[System.Web.UI.ViewStateException#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ViewStateException/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>