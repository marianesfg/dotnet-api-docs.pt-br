<Type Name="PageHandlerFactory" FullName="System.Web.UI.PageHandlerFactory">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="05a7ec83e34eda43bdad32bc7ecc034aed1ebd6b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30605680" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PageHandlerFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PageHandlerFactory extends System.Object implements class System.Web.IHttpHandlerFactory" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.PageHandlerFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class PageHandlerFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class PageHandlerFactory" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Cria instâncias de classes que herdam da classe <see cref="T:System.Web.UI.Page" /> e implementam a interface <see cref="T:System.Web.IHttpHandler" />. Instâncias são criadas dinamicamente para manipular solicitações de arquivos ASP.NET. A classe <see cref="T:System.Web.UI.PageHandlerFactory" /> é a implementação de fábrica do manipulador padrão para as páginas ASP.NET.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.PageHandlerFactory> classe implementa o <xref:System.Web.IHttpHandlerFactory> interface para fornecer o manipulador HTTP padrão para arquivos ASP.NET. O <xref:System.Web.UI.PageHandlerFactory> chama o sistema de compilação do ASP.NET para compilar, se necessário e retornar o tipo exato correspondente à URL e, em seguida, cria uma instância desse tipo. O tipo de página herda do <xref:System.Web.UI.Page> classe e implemente o <xref:System.Web.IHttpHandler> interface.  
  
 Para criar uma fábrica de manipulador de página personalizado, implemente o <xref:System.Web.IHttpHandlerFactory> e registrar personalizado <xref:System.Web.UI.PageHandlerFactory> classe no arquivo Web. config para o aplicativo no [httpHandlers Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/24ca01f3-7141-4fdc-acac-71c0733cf6c2) seção de configuração.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.IHttpHandler" />
    <altmember cref="T:System.Web.IHttpHandlerFactory" />
    <altmember cref="T:System.Web.Services.Protocols.WebServiceHandlerFactory" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal PageHandlerFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageHandlerFactory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; PageHandlerFactory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.UI.PageHandlerFactory" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.PageHandlerFactory.%23ctor%2A> construtor é o construtor padrão e inicializa quaisquer campos com seus valores padrão.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHandler">
      <MemberSignature Language="C#" Value="public virtual System.Web.IHttpHandler GetHandler (System.Web.HttpContext context, string requestType, string virtualPath, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.IHttpHandler GetHandler(class System.Web.HttpContext context, string requestType, string virtualPath, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageHandlerFactory.GetHandler(System.Web.HttpContext,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHandler (context As HttpContext, requestType As String, virtualPath As String, path As String) As IHttpHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::IHttpHandler ^ GetHandler(System::Web::HttpContext ^ context, System::String ^ requestType, System::String ^ virtualPath, System::String ^ path);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpHandlerFactory.GetHandler(System.Web.HttpContext,System.String,System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHttpHandler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="requestType" Type="System.String" />
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">Uma instância da classe <see cref="T:System.Web.HttpContext" /> que fornece referências a objetos do servidor intrínseco (por exemplo, Solicitação, Resposta, Sessão e Servidor) usados para atender a solicitações HTTP.</param>
        <param name="requestType">Método de transferência de dados HTTP (GET ou POST) que o cliente usa.</param>
        <param name="virtualPath">O caminho virtual para o recurso solicitado.</param>
        <param name="path">A propriedade <see cref="P:System.Web.HttpRequest.PhysicalApplicationPath" /> para o recurso solicitado.</param>
        <summary>Retorna uma instância da interface <see cref="T:System.Web.IHttpHandler" /> para processar o recurso solicitado.</summary>
        <returns>Um novo <see cref="T:System.Web.IHttpHandler" /> que processa a solicitação; caso contrário, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.PageHandlerFactory.GetHandler%2A> método é chamado pelo tempo de execução do ASP.NET e retorna uma instância válida do <xref:System.Web.IHttpHandler> interface ou `null`.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.IHttpHandlerFactory.GetHandler(System.Web.HttpContext,System.String,System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ReleaseHandler">
      <MemberSignature Language="C#" Value="public virtual void ReleaseHandler (System.Web.IHttpHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseHandler(class System.Web.IHttpHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageHandlerFactory.ReleaseHandler(System.Web.IHttpHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ReleaseHandler (handler As IHttpHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseHandler(System::Web::IHttpHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpHandlerFactory.ReleaseHandler(System.Web.IHttpHandler)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Web.IHttpHandler" />
      </Parameters>
      <Docs>
        <param name="handler">O <see cref="T:System.Web.IHttpHandler" /> a reutilizar.</param>
        <summary>Permite que uma fábrica reutilize uma instância existente de um manipulador.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.IHttpHandlerFactory.ReleaseHandler(System.Web.IHttpHandler)" />
      </Docs>
    </Member>
  </Members>
</Type>