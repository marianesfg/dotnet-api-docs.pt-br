<Type Name="EmptyControlCollection" FullName="System.Web.UI.EmptyControlCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="154717e192d4549919e94aebb01f408ae11d0b24" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37588674" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EmptyControlCollection : System.Web.UI.ControlCollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EmptyControlCollection extends System.Web.UI.ControlCollection" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.EmptyControlCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class EmptyControlCollection&#xA;Inherits ControlCollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class EmptyControlCollection : System::Web::UI::ControlCollection" />
  <TypeSignature Language="F#" Value="type EmptyControlCollection = class&#xA;    inherit ControlCollection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.ControlCollection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fornece suporte Standard para uma coleção <see cref="T:System.Web.UI.ControlCollection" /> que está sempre vazia.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa classe é usada quando você deseja definir um controle personalizado que não permite controles filho.  
  
   
  
## Examples  
 [!code-csharp[SystemWebUI_EmptyControlCollection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/SystemWebUI_EmptyControlCollection/CS/emptycontrolcollection.cs#1)]
 [!code-vb[SystemWebUI_EmptyControlCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SystemWebUI_EmptyControlCollection/VB/emptycontrolcollection.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EmptyControlCollection (System.Web.UI.Control owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.Control owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.EmptyControlCollection.#ctor(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EmptyControlCollection(System::Web::UI::Control ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.EmptyControlCollection : System.Web.UI.Control -&gt; System.Web.UI.EmptyControlCollection" Usage="new System.Web.UI.EmptyControlCollection owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="owner">O <see cref="T:System.Web.UI.Control" /> que possui essa coleção como sua coleção de controles filho.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.UI.EmptyControlCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir tenta preencher um controle com os controles filho, causando uma exceção. Isso ocorre porque o controle de contêiner não permite controles filho. A seguir é usada para criar o arquivo executável de linha de comando.  
  
```vb  
vbc /r:System.dll /r:System.Web.dll /t:library  
       /out:myWebAppPath/bin/vb_myEmptyControlCollection.dll  
       myEmptyControlCollection.vb  
```  
  
```csharp  
csc /t:library /out:myWebAppPath/bin/cs_myEmptyControlCollection.dll  
    myEmptyControlCollection.cs  
```  
  
 [!code-csharp[SystemWebUI_EmptyControlCollection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/SystemWebUI_EmptyControlCollection/CS/emptycontrolcollection.cs#1)]
 [!code-vb[SystemWebUI_EmptyControlCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SystemWebUI_EmptyControlCollection/VB/emptycontrolcollection.vb#1)]  
  
 O exemplo de código a seguir usa o controle personalizado vazio definido acima. Ao executar este exemplo, você receberá uma exceção. Observe que os valores mostrados na `Register` diretiva refletem a linha de comando anterior.  
  
```vb  
<%@ Register TagPrefix="custom" Assembly="vb_myEmptyControlCollection" Namespace="CustomControls" %>  
 <html>  
  <body>  
  <h1>Using an Empty Control</h1>  
  <custom:MyVB_EmptyControl id="vbEmptyControlId" runat="server"/>  
  </body>  
 </html>  
```  
  
```csharp  
<%@ Register TagPrefix="custom" Assembly="cs_myEmptyControlCollection" Namespace="CustomControls" %>  
 <html>  
  <body>  
  <h1>Using an Empty Control </h1>  
  <custom:MyCS_EmptyControl id="csEmptyControlId" runat="server"/>  
  </body>  
 </html>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public override void Add (System.Web.UI.Control child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Add(class System.Web.UI.Control child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.EmptyControlCollection.Add(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Add (child As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Add(System::Web::UI::Control ^ child);" />
      <MemberSignature Language="F#" Value="override this.Add : System.Web.UI.Control -&gt; unit" Usage="emptyControlCollection.Add child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="child">O <see cref="T:System.Web.UI.Control" /> a ser adicionado. Este parâmetro é sempre ignorado.</param>
        <summary>Nega a adição do objeto <see cref="T:System.Web.UI.Control" /> especificado à coleção.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException">Sempre emitido, porque o controle não permite controles filho.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddAt">
      <MemberSignature Language="C#" Value="public override void AddAt (int index, System.Web.UI.Control child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddAt(int32 index, class System.Web.UI.Control child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.EmptyControlCollection.AddAt(System.Int32,System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub AddAt (index As Integer, child As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void AddAt(int index, System::Web::UI::Control ^ child);" />
      <MemberSignature Language="F#" Value="override this.AddAt : int * System.Web.UI.Control -&gt; unit" Usage="emptyControlCollection.AddAt (index, child)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="child" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="index">O índice no qual adicionar o <see cref="T:System.Web.UI.Control" />. Este parâmetro é sempre ignorado.</param>
        <param name="child">O <see cref="T:System.Web.UI.Control" /> a ser adicionado. Este parâmetro é sempre ignorado.</param>
        <summary>Nega a adição do objeto <see cref="T:System.Web.UI.Control" /> especificado à coleção na posição de índice especificada.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException">Sempre emitido, porque o controle não permite controles filho.</exception>
      </Docs>
    </Member>
  </Members>
</Type>