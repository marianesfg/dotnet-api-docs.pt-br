<Type Name="LiteralControl" FullName="System.Web.UI.LiteralControl">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a76e715c656424072a0d88fab99ea4e50d41f670" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39962990" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LiteralControl : System.Web.UI.Control, System.Web.UI.ITextControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LiteralControl extends System.Web.UI.Control implements class System.Web.UI.ITextControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.LiteralControl" />
  <TypeSignature Language="VB.NET" Value="Public Class LiteralControl&#xA;Inherits Control&#xA;Implements ITextControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class LiteralControl : System::Web::UI::Control, System::Web::UI::ITextControl" />
  <TypeSignature Language="F#" Value="type LiteralControl = class&#xA;    inherit Control&#xA;    interface ITextControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.ITextControl</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="662e3-101">Representa os elementos HTML, texto e quaisquer outras cadeias de caracteres em uma página ASP.NET que não exigem processamento no servidor.</span>
      <span class="sxs-lookup">
        <span data-stu-id="662e3-101">Represents HTML elements, text, and any other strings in an ASP.NET page that do not require processing on the server.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="662e3-102">O ASP.NET compila todos os elementos HTML e texto legível que não exigem processamento do lado do servidor em instâncias dessa classe.</span><span class="sxs-lookup"><span data-stu-id="662e3-102">ASP.NET compiles all HTML elements and readable text that do not require server-side processing into instances of this class.</span></span> <span data-ttu-id="662e3-103">Por exemplo, um elemento HTML que não contém um `runat="server"` par atributo/valor na sua marca de abertura é compilado em um <xref:System.Web.UI.LiteralControl> objeto.</span><span class="sxs-lookup"><span data-stu-id="662e3-103">For example, an HTML element that does not contain a `runat="server"` attribute/value pair in its opening tag is compiled into a <xref:System.Web.UI.LiteralControl> object.</span></span> <span data-ttu-id="662e3-104"><xref:System.Web.UI.LiteralControl> objetos não mantêm o estado de exibição, portanto, o conteúdo de um <xref:System.Web.UI.LiteralControl> objeto deverá ser recriado em cada solicitação.</span><span class="sxs-lookup"><span data-stu-id="662e3-104"><xref:System.Web.UI.LiteralControl> objects do not maintain view state, so the contents of a <xref:System.Web.UI.LiteralControl> object must be recreated on each request.</span></span>  
  
 <span data-ttu-id="662e3-105">Controles literais se comportam como os detentores de texto, que significa que você pode extrair o texto do controle literal e remova o controle literal do controle de servidor pai <xref:System.Web.UI.ControlCollection> coleção por meio do pai <xref:System.Web.UI.Control.Controls%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="662e3-105">Literal controls behave as text holders, meaning that you can extract text from the literal control and remove the literal control from the parent server control's <xref:System.Web.UI.ControlCollection> collection through the parent's <xref:System.Web.UI.Control.Controls%2A> property.</span></span> <span data-ttu-id="662e3-106">Portanto, quando você desenvolve um controle personalizado derivado a <xref:System.Web.UI.LiteralControl> classe, verifique se o controle executa qualquer um de pré-processamento necessário etapas em si, em vez de usar uma chamada para o <xref:System.Web.UI.LiteralControl.Render%2A?displayProperty=nameWithType> método realizá-las.</span><span class="sxs-lookup"><span data-stu-id="662e3-106">Therefore, when you develop a custom control derived from the <xref:System.Web.UI.LiteralControl> class, make sure your control performs any required preprocessing steps itself, rather than using a call to the <xref:System.Web.UI.LiteralControl.Render%2A?displayProperty=nameWithType> method to accomplish them.</span></span> <span data-ttu-id="662e3-107">Normalmente, você faria isso para melhorar o tempo de resposta do seu aplicativo Web.</span><span class="sxs-lookup"><span data-stu-id="662e3-107">Typically, you would do this to improve the response time of your Web application.</span></span>  
  
 <span data-ttu-id="662e3-108">Você pode adicionar ou remover os controles de literais de um controle de página ou o servidor por meio de programação usando o <xref:System.Web.UI.ControlCollection.Add%2A?displayProperty=nameWithType> ou o <xref:System.Web.UI.ControlCollection.Remove%2A?displayProperty=nameWithType> método, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="662e3-108">You can add or remove literal controls from a page or server control programmatically using the <xref:System.Web.UI.ControlCollection.Add%2A?displayProperty=nameWithType> or the <xref:System.Web.UI.ControlCollection.Remove%2A?displayProperty=nameWithType> method, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="662e3-109">O exemplo de código a seguir demonstra como usar o sobrecarregado <xref:System.Web.UI.LiteralControl.%23ctor%2A> construtor ao substituir o <xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="662e3-109">The following code example demonstrates how to use the overloaded <xref:System.Web.UI.LiteralControl.%23ctor%2A> constructor when overriding the <xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="662e3-110">O código adiciona duas novas <xref:System.Web.UI.LiteralControl> objetos e uma <xref:System.Web.UI.WebControls.TextBox> controle de servidor para o controle de servidor atual Web <xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType> propriedade.</span><span class="sxs-lookup"><span data-stu-id="662e3-110">The code adds two new <xref:System.Web.UI.LiteralControl> objects and a <xref:System.Web.UI.WebControls.TextBox> Web server control to the current server control's <xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType> property.</span></span>  
  
 [!code-csharp[SystemWebUILiteralControl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/SystemWebUILiteralControl/CS/controlcreatechildcontrols.cs#1)]
 [!code-vb[SystemWebUILiteralControl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SystemWebUILiteralControl/VB/controlcreatechildcontrols.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Control" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="662e3-111">Inicializa uma nova instância da classe <see cref="T:System.Web.UI.LiteralControl" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="662e3-111">Initializes a new instance of the <see cref="T:System.Web.UI.LiteralControl" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LiteralControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.LiteralControl.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LiteralControl();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="662e3-112">Inicializa uma nova instância da classe <see cref="T:System.Web.UI.LiteralControl" /> que contém uma cadeia de caracteres literal a ser renderizada na página ASP.NET solicitada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="662e3-112">Initializes a new instance of the <see cref="T:System.Web.UI.LiteralControl" /> class that contains a literal string to be rendered on the requested ASP.NET page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="662e3-113">O exemplo de código a seguir cria uma classe `CustLiteralControlClass`, que estende o <xref:System.Web.UI.LiteralControl> classe.</span><span class="sxs-lookup"><span data-stu-id="662e3-113">The following code example creates a class, `CustLiteralControlClass`, that extends the <xref:System.Web.UI.LiteralControl> class.</span></span> <span data-ttu-id="662e3-114">Ele cria uma instância da classe chamada `myLiteralControlClass1` usando o construtor que não especifica o texto do <xref:System.Web.UI.LiteralControl> objeto.</span><span class="sxs-lookup"><span data-stu-id="662e3-114">It creates an instance of the class named `myLiteralControlClass1` by using the constructor that does not specify the text of the <xref:System.Web.UI.LiteralControl> object.</span></span> <span data-ttu-id="662e3-115">Depois que o objeto é criado, o <xref:System.Web.UI.LiteralControl.Text%2A> propriedade é usada para definir o texto que ele contém.</span><span class="sxs-lookup"><span data-stu-id="662e3-115">After the object is created, the <xref:System.Web.UI.LiteralControl.Text%2A> property is used to set the text that it contains.</span></span>  
  
 [!code-csharp[LiteralControlSample#4](~/samples/snippets/csharp/VS_Snippets_WebNet/LiteralControlSample/CS/customliteralcontrol.cs.aspx#4)]
 [!code-vb[LiteralControlSample#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LiteralControlSample/VB/customliteralcontrol.vb.aspx#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LiteralControl (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.LiteralControl.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LiteralControl(System::String ^ text);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.LiteralControl : string -&gt; System.Web.UI.LiteralControl" Usage="new System.Web.UI.LiteralControl text" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="662e3-116">O texto a ser renderizado na página da Web solicitada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="662e3-116">The text to be rendered on the requested Web page.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="662e3-117">Inicializa uma nova instância da classe <see cref="T:System.Web.UI.LiteralControl" /> com o texto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="662e3-117">Initializes a new instance of the <see cref="T:System.Web.UI.LiteralControl" /> class with the specified text.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="662e3-118">O exemplo de código a seguir cria duas instâncias do <xref:System.Web.UI.LiteralControl> classe usando o <xref:System.Web.UI.LiteralControl.%23ctor%2A> construtor.</span><span class="sxs-lookup"><span data-stu-id="662e3-118">The following code example creates two instances of the <xref:System.Web.UI.LiteralControl> class using the <xref:System.Web.UI.LiteralControl.%23ctor%2A> constructor.</span></span> <span data-ttu-id="662e3-119">As duas instâncias processam as marcas de abertura e fechamento de um elemento HTML H3 e incluem o texto a ser exibido dentro das marcas H3.</span><span class="sxs-lookup"><span data-stu-id="662e3-119">The two instances render opening and closing tags for an H3 HTML element, and include the text to display within the H3 tags.</span></span>  
  
 [!code-csharp[SystemWebUILiteralControl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/SystemWebUILiteralControl/CS/controlcreatechildcontrols.cs#1)]
 [!code-vb[SystemWebUILiteralControl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SystemWebUILiteralControl/VB/controlcreatechildcontrols.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.LiteralControl.Text" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.LiteralControl.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="literalControl.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="662e3-120">Cria um objeto <see cref="T:System.Web.UI.EmptyControlCollection" /> para a instância atual da classe <see cref="T:System.Web.UI.LiteralControl" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="662e3-120">Creates an <see cref="T:System.Web.UI.EmptyControlCollection" /> object for the current instance of the <see cref="T:System.Web.UI.LiteralControl" /> class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="662e3-121">O <see cref="T:System.Web.UI.EmptyControlCollection" /> para o controle atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="662e3-121">The <see cref="T:System.Web.UI.EmptyControlCollection" /> for the current control.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="662e3-122">Por padrão, <xref:System.Web.UI.LiteralControl> objetos contêm somente texto e não há controles de servidor filho.</span><span class="sxs-lookup"><span data-stu-id="662e3-122">By default, <xref:System.Web.UI.LiteralControl> objects contain only text and no child server controls.</span></span> <span data-ttu-id="662e3-123">Se você quiser alterar esse comportamento, você deve substituir esse método.</span><span class="sxs-lookup"><span data-stu-id="662e3-123">If you want to change this behavior, you must override this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="662e3-124">Substituições de exemplo de código a seguir a <xref:System.Web.UI.LiteralControl.CreateControlCollection%2A> método para criar uma instância das <xref:System.Web.UI.ControlCollection> classe em vez de uma instância da <xref:System.Web.UI.EmptyControlCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="662e3-124">The following code example overrides the <xref:System.Web.UI.LiteralControl.CreateControlCollection%2A> method to create an instance of the <xref:System.Web.UI.ControlCollection> class rather than an instance of the <xref:System.Web.UI.EmptyControlCollection> class.</span></span>  
  
 [!code-csharp[LiteralControlSample#2](~/samples/snippets/csharp/VS_Snippets_WebNet/LiteralControlSample/CS/customliteralcontrol.cs#2)]
 [!code-vb[LiteralControlSample#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LiteralControlSample/VB/customliteralcontrol.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.CreateControlCollection" />
        <altmember cref="T:System.Web.UI.EmptyControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.LiteralControl.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (output As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ output);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="literalControl.Render output" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="output">
          <span data-ttu-id="662e3-125">Um <see cref="T:System.Web.UI.HtmlTextWriter" /> que renderiza o conteúdo do <see cref="T:System.Web.UI.LiteralControl" /> para o cliente solicitante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="662e3-125">An <see cref="T:System.Web.UI.HtmlTextWriter" /> that renders the content of the <see cref="T:System.Web.UI.LiteralControl" /> to the requesting client.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="662e3-126">Grava o conteúdo do objeto <see cref="T:System.Web.UI.LiteralControl" /> para a página ASP.NET.</span>
          <span class="sxs-lookup">
            <span data-stu-id="662e3-126">Writes the content of the <see cref="T:System.Web.UI.LiteralControl" /> object to the ASP.NET page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="662e3-127">Quando você cria um servidor personalizado, controle e desejar renderizar texto ou HTML específico para um cliente, você pode melhorar o desempenho do controle, passando o valor da <xref:System.Web.UI.LiteralControl.Text%2A> propriedade para o <xref:System.Web.UI.Control.Render%2A?displayProperty=nameWithType> método em vez de chamar o <xref:System.Web.UI.LiteralControl.Render%2A> método.</span><span class="sxs-lookup"><span data-stu-id="662e3-127">When you create a custom server control and want to render specific HTML or text to a client, you can improve the performance of the control by passing the value of the <xref:System.Web.UI.LiteralControl.Text%2A> property to the <xref:System.Web.UI.Control.Render%2A?displayProperty=nameWithType> method rather than calling the <xref:System.Web.UI.LiteralControl.Render%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public virtual string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.LiteralControl.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Web.UI.LiteralControl.Text" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.ITextControl.Text</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="662e3-128">Obtém ou define o conteúdo do texto do objeto <see cref="T:System.Web.UI.LiteralControl" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="662e3-128">Gets or sets the text content of the <see cref="T:System.Web.UI.LiteralControl" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="662e3-129">Um <see cref="T:System.String" /> que representa o conteúdo de texto do controle literal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="662e3-129">A <see cref="T:System.String" /> that represents the text content of the literal control.</span>
          </span>
          <span data-ttu-id="662e3-130">O padrão é <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="662e3-130">The default is <see cref="F:System.String.Empty" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="662e3-131">O exemplo de código a seguir cria uma classe `CustLiteralControlClass`, que estende o <xref:System.Web.UI.LiteralControl> classe.</span><span class="sxs-lookup"><span data-stu-id="662e3-131">The following code example creates a class, `CustLiteralControlClass`, that extends the <xref:System.Web.UI.LiteralControl> class.</span></span> <span data-ttu-id="662e3-132">Ele cria uma instância da classe chamada `myLiteralControlClass1` usando o construtor que não especifica o texto do <xref:System.Web.UI.LiteralControl> objeto.</span><span class="sxs-lookup"><span data-stu-id="662e3-132">It creates an instance of the class named `myLiteralControlClass1` by using the constructor that does not specify the text of the <xref:System.Web.UI.LiteralControl> object.</span></span> <span data-ttu-id="662e3-133">Depois que o objeto é criado, o <xref:System.Web.UI.LiteralControl.Text%2A> propriedade é usada para definir o texto que ele contém.</span><span class="sxs-lookup"><span data-stu-id="662e3-133">After the object is created, the <xref:System.Web.UI.LiteralControl.Text%2A> property is used to set the text that it contains.</span></span>  
  
 [!code-csharp[LiteralControlSample#4](~/samples/snippets/csharp/VS_Snippets_WebNet/LiteralControlSample/CS/customliteralcontrol.cs.aspx#4)]
 [!code-vb[LiteralControlSample#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LiteralControlSample/VB/customliteralcontrol.vb.aspx#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>