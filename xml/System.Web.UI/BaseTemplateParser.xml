<Type Name="BaseTemplateParser" FullName="System.Web.UI.BaseTemplateParser">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fac3a661aacd9c394671d78aeda313edcd3c490d" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51881461" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class BaseTemplateParser : System.Web.UI.TemplateParser" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BaseTemplateParser extends System.Web.UI.TemplateParser" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.BaseTemplateParser" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BaseTemplateParser&#xA;Inherits TemplateParser" />
  <TypeSignature Language="C++ CLI" Value="public ref class BaseTemplateParser abstract : System::Web::UI::TemplateParser" />
  <TypeSignature Language="F#" Value="type BaseTemplateParser = class&#xA;    inherit TemplateParser" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.TemplateParser</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Implementa a análise de modelo ASP.NET para arquivos de modelo.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.BaseTemplateParser> classe fornece funcionalidade de analisador para o <xref:System.Web.UI.TemplateControl> e <xref:System.Web.UI.PageTheme> classes. Porque o <xref:System.Web.UI.BaseTemplateParser> classe é abstrata, uma instância dessa classe não é criada diretamente.  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
    <related type="Article" href="https://msdn.microsoft.com/library/a638e52e-eb7d-41be-948e-e0c4c3b9d0a4">Conjuntos de modelo e controles de modelo</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BaseTemplateParser ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.BaseTemplateParser.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BaseTemplateParser();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.UI.BaseTemplateParser" />.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetReferencedType">
      <MemberSignature Language="C#" Value="protected Type GetReferencedType (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Type GetReferencedType(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.BaseTemplateParser.GetReferencedType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetReferencedType (virtualPath As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Type ^ GetReferencedType(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.GetReferencedType : string -&gt; Type" Usage="baseTemplateParser.GetReferencedType virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">O caminho virtual do <see cref="T:System.Web.UI.Page" /> ou <see cref="T:System.Web.UI.UserControl" />.</param>
        <summary>Compila e retorna o tipo do controle <see cref="T:System.Web.UI.Page" /> ou <see cref="T:System.Web.UI.UserControl" /> que é especificado pelo caminho virtual.</summary>
        <returns>O tipo da página ou do controle de usuário.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se um <xref:System.Web.UI.PageParserFilter> objeto é definido e sua <xref:System.Web.UI.PageParserFilter.AllowVirtualReference%2A> é de propriedade `false`, o <xref:System.Web.UI.BaseTemplateParser.GetUserControlType%2A> método gera um <xref:System.Web.HttpException> exceção.  
  
 O <xref:System.Web.UI.BaseTemplateParser.GetUserControlType%2A> método é um wrapper para o <xref:System.Web.UI.BaseTemplateParser.GetReferencedType%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">O analisador não permite uma referência virtual ao recurso especificado por <paramref name="virtualPath" />.</exception>
        <forInternalUseOnly />
        <altmember cref="T:System.Web.UI.CompilationMode" />
        <altmember cref="M:System.Web.UI.PageParserFilter.GetCompilationMode(System.Web.UI.CompilationMode)" />
      </Docs>
    </Member>
    <Member MemberName="GetUserControlType">
      <MemberSignature Language="C#" Value="protected internal Type GetUserControlType (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.Type GetUserControlType(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.BaseTemplateParser.GetUserControlType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function GetUserControlType (virtualPath As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; Type ^ GetUserControlType(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.GetUserControlType : string -&gt; Type" Usage="baseTemplateParser.GetUserControlType virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">O caminho virtual do <see cref="T:System.Web.UI.UserControl" />.</param>
        <summary>Compila e retorna o tipo do objeto <see cref="T:System.Web.UI.UserControl" /> que é especificado pelo caminho virtual.</summary>
        <returns>O tipo do controle de usuário.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se um <xref:System.Web.UI.PageParserFilter> objeto é definido e sua <xref:System.Web.UI.PageParserFilter.AllowVirtualReference%2A> é de propriedade `false`, o <xref:System.Web.UI.BaseTemplateParser.GetUserControlType%2A> método gera um <xref:System.Web.HttpException> exceção.  
  
 Além disso, se o <xref:System.Web.UI.UserControl> objeto que é referenciado pelo caminho virtual é marcado como um controle sem compilação, um <xref:System.Web.HttpException> exceção será lançada. Para forçar uma <xref:System.Web.UI.UserControl> a ser compilado, defina o atributo de modo de compilação no seu [@ Control](https://msdn.microsoft.com/library/5fd824c2-7d70-4f8a-ab47-0c7e0e43578b) diretiva para o <xref:System.Web.UI.CompilationMode.Always> campo. Para definir o modo de compilação para páginas e controles em um aplicativo, defina as `compilationMode` atributo o [páginas Element (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/4123bb66-3fe4-4d62-b70e-33758656b458) no arquivo Web. config.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">O <see cref="T:System.Web.UI.UserControl" /> especificado por <paramref name="virtualPath" /> está marcado como não compilar.  
  
\- ou - 
O analisador não permite uma referência virtual ao <see cref="T:System.Web.UI.UserControl" />.</exception>
        <forInternalUseOnly />
        <altmember cref="T:System.Web.UI.UserControl" />
        <altmember cref="M:System.Web.UI.TemplateParser.ProcessError(System.String)" />
        <altmember cref="T:System.Web.UI.CompilationMode" />
        <altmember cref="T:System.Web.UI.PageParserFilter" />
      </Docs>
    </Member>
  </Members>
</Type>