<Type Name="ChtmlTextWriter" FullName="System.Web.UI.ChtmlTextWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e805d8f6ad91bd3c25b09a87d994da94dd827dea" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39856694" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ChtmlTextWriter : System.Web.UI.Html32TextWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ChtmlTextWriter extends System.Web.UI.Html32TextWriter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ChtmlTextWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class ChtmlTextWriter&#xA;Inherits Html32TextWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChtmlTextWriter : System::Web::UI::Html32TextWriter" />
  <TypeSignature Language="F#" Value="type ChtmlTextWriter = class&#xA;    inherit Html32TextWriter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Html32TextWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Grava uma série de caracteres específicos ao cHTML e um texto no fluxo de saída de um controle de servidor ASP.NET. A classe <see cref="T:System.Web.UI.ChtmlTextWriter" /> fornece funcionalidades de formatação que os controles de servidor ASP.NET usam ao renderizar o conteúdo cHTML para os clientes.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Compact HTML ou cHTML, é um subconjunto de HTML 2.0, HTML 3.2 e HTML 4.0 e é projetado para renderizar em dispositivos com limitada de memória e potência de CPU, junto com pequenas telas, limitadas a formatação de recursos e um número limitado de opções de entrada (como um telefone celular teclado de toque). Portanto, cHTML não oferece suporte a seguir:  
  
-   Imagens JPEG.  
  
-   Tabelas.  
  
-   Mapas de imagem.  
  
-   Várias fontes de caractere e estilos.  
  
-   Cores de plano de fundo e imagens.  
  
-   Os quadros.  
  
-   Folhas de estilos.  
  
 O <xref:System.Web.UI.ChtmlTextWriter> classe deriva a <xref:System.Web.UI.Html32TextWriter> classe e grande parte da sua funcionalidade é fornecida pelo <xref:System.Web.UI.Html32TextWriter> e a classe base para todos os gravadores de texto de marcação, que é o <xref:System.Web.UI.HtmlTextWriter> classe.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como criar uma classe chamada `CustomChtmlTextWriter` que deriva de <xref:System.Web.UI.ChtmlTextWriter> classe. Ele cria dois construtores e substitui o <xref:System.Web.UI.ChtmlTextWriter.OnAttributeRender%2A> método para impedir que o `bgcolor` atributo de estilo do que estão sendo gravados no fluxo de saída do <xref:System.Web.UI.ChtmlTextWriter> objeto. Ele também cria uma classe chamada `ChtmlCustomPageAdapter` que define um método, `CreateCustomChtmlTextWriter`, que cria e retorna uma instância do `CustomChtmlTextWriter` classe. O `CustomChtmlTextWriter` , em seguida, renderiza o conteúdo cHTML para uma página em dispositivos com navegadores que usam marcação cHTML.  
  
 [!code-csharp[System.Web.UI.ChtmlTextWriter_Sample4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ChtmlTextWriter_Sample4/cs/chtmltextwriter.cs#1)]
 [!code-vb[System.Web.UI.ChtmlTextWriter_Sample4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ChtmlTextWriter_Sample4/vb/chtmltextwriter.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.XhtmlTextWriter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.UI.ChtmlTextWriter" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChtmlTextWriter (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ChtmlTextWriter.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ChtmlTextWriter(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ChtmlTextWriter : System.IO.TextWriter -&gt; System.Web.UI.ChtmlTextWriter" Usage="new System.Web.UI.ChtmlTextWriter writer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">O <see cref="T:System.IO.TextWriter" /> que renderiza o conteúdo de marcação.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.UI.ChtmlTextWriter" /> que usa a constante <see cref="F:System.Web.UI.HtmlTextWriter.DefaultTabString" /> para recuar linhas.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.ChtmlTextWriter> classe possui dois construtores, que é o padrão para todas as classes que derivam direta ou indiretamente a <xref:System.Web.UI.HtmlTextWriter> classe.  
  
 O <xref:System.Web.UI.ChtmlTextWriter.%23ctor%2A> construtor, que usa uma instância do <xref:System.IO.TextWriter> classe como um parâmetro, chama o segundo construtor e o passa dois valores de parâmetro:  
  
-   O <xref:System.IO.TextWriter>.  
  
-   O valor de cadeia de caracteres que é especificado no <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> campo, que define o espaçamento de guia é usado pelo gravador de texto de XHTML.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como criar uma classe chamada `ChtmlCustomPageAdapter` e define um método, `CreateCustomChtmlTextWriter`, que cria e retorna uma instância do `CustomChtmlTextWriter` classe. O `CustomChtmlTextWriter` , em seguida, renderiza o conteúdo cHTML para páginas para dispositivos com navegadores que usam marcação cHTML.  
  
 Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Web.UI.ChtmlTextWriter> classe.  
  
 [!code-csharp[System.Web.UI.ChtmlTextWriter_Sample4#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ChtmlTextWriter_Sample4/cs/chtmltextwriter.cs#3)]
 [!code-vb[System.Web.UI.ChtmlTextWriter_Sample4#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ChtmlTextWriter_Sample4/vb/chtmltextwriter.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChtmlTextWriter (System.IO.TextWriter writer, string tabString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer, string tabString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ChtmlTextWriter.#ctor(System.IO.TextWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter, tabString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ChtmlTextWriter(System::IO::TextWriter ^ writer, System::String ^ tabString);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ChtmlTextWriter : System.IO.TextWriter * string -&gt; System.Web.UI.ChtmlTextWriter" Usage="new System.Web.UI.ChtmlTextWriter (writer, tabString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="tabString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">O <see cref="T:System.IO.TextWriter" /> que renderiza o conteúdo de marcação.</param>
        <param name="tabString">O número de espaços definidos no <see cref="P:System.Web.UI.HtmlTextWriter.Indent" />.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.UI.ChtmlTextWriter" /> com o recuo de linha especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.ChtmlTextWriter.%23ctor%2A> construtor, que usa os dois uma instância do <xref:System.IO.TextWriter> classe e uma cadeia de caracteres como parâmetros, chama o <xref:System.Web.UI.Html32TextWriter> construtor que usa os mesmos parâmetros quando ele cria uma instância da <xref:System.Web.UI.ChtmlTextWriter> classe.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como criar uma classe personalizada denominada `CustomChtmlTextWriter` que deriva de <xref:System.Web.UI.ChtmlTextWriter> classe. Ele cria dois construtores que você pode usar para criar uma instância da classe personalizada com o mesmo padrão como todas as classes que derivam diretamente ou indiretamente, a partir de <xref:System.Web.UI.HtmlTextWriter> classe.  
  
 [!code-csharp[System.Web.UI.ChtmlTextWriter_Sample4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ChtmlTextWriter_Sample4/cs/chtmltextwriter.cs#1)]
 [!code-vb[System.Web.UI.ChtmlTextWriter_Sample4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ChtmlTextWriter_Sample4/vb/chtmltextwriter.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRecognizedAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddRecognizedAttribute (string elementName, string attributeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddRecognizedAttribute(string elementName, string attributeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ChtmlTextWriter.AddRecognizedAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddRecognizedAttribute (elementName As String, attributeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddRecognizedAttribute(System::String ^ elementName, System::String ^ attributeName);" />
      <MemberSignature Language="F#" Value="abstract member AddRecognizedAttribute : string * string -&gt; unit&#xA;override this.AddRecognizedAttribute : string * string -&gt; unit" Usage="chtmlTextWriter.AddRecognizedAttribute (elementName, attributeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="attributeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName">O elemento cHTML ao qual o atributo será adicionado.</param>
        <param name="attributeName">O atributo a ser adicionado a <c>elementName</c>.</param>
        <summary>Adiciona um atributo a um elemento cHTML do objeto <see cref="T:System.Web.UI.ChtmlTextWriter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.ChtmlTextWriter.AddRecognizedAttribute%2A> método adiciona um atributo a um elemento cHTML. O atributo reconhecido é armazenado em um dos atributos reconhecidos <xref:System.Collections.Hashtable> coleção do <xref:System.Web.UI.ChtmlTextWriter> que é referenciado pelo objeto de <xref:System.Web.UI.ChtmlTextWriter.RecognizedAttributes%2A> propriedade.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ChtmlTextWriter.RemoveRecognizedAttribute(System.String,System.String)" />
        <altmember cref="P:System.Web.UI.ChtmlTextWriter.RecognizedAttributes" />
      </Docs>
    </Member>
    <Member MemberName="GlobalSuppressedAttributes">
      <MemberSignature Language="C#" Value="protected System.Collections.Hashtable GlobalSuppressedAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Hashtable GlobalSuppressedAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ChtmlTextWriter.GlobalSuppressedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property GlobalSuppressedAttributes As Hashtable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Hashtable ^ GlobalSuppressedAttributes { System::Collections::Hashtable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GlobalSuppressedAttributes : System.Collections.Hashtable" Usage="System.Web.UI.ChtmlTextWriter.GlobalSuppressedAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um objeto <see cref="T:System.Collections.Hashtable" /> de atributos suprimidos globalmente que não podem ser renderizados em elementos cHTML.</summary>
        <value>Um <see cref="T:System.Collections.Hashtable" /> de atributos suprimidos globalmente cHTML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A lista a seguir mostra os atributos suprimidos globalmente que são definidos quando uma nova instância do <xref:System.Web.UI.ChtmlTextWriter> classe é criada.  
  
|||  
|-|-|  
|`onclick`|`onmousemove`|  
|`ondblclick`|`onmouseout`|  
|`onmousedown`|`onkeypress`|  
|`onmouseup`|`onkeydown`|  
|`onmouseover`|`onkeyup`|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.ChtmlTextWriter.RecognizedAttributes" />
        <altmember cref="P:System.Web.UI.ChtmlTextWriter.SuppressedAttributes" />
      </Docs>
    </Member>
    <Member MemberName="OnAttributeRender">
      <MemberSignature Language="C#" Value="protected override bool OnAttributeRender (string name, string value, System.Web.UI.HtmlTextWriterAttribute key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnAttributeRender(string name, string value, valuetype System.Web.UI.HtmlTextWriterAttribute key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ChtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnAttributeRender (name As String, value As String, key As HtmlTextWriterAttribute) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnAttributeRender(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterAttribute key);" />
      <MemberSignature Language="F#" Value="override this.OnAttributeRender : string * string * System.Web.UI.HtmlTextWriterAttribute -&gt; bool" Usage="chtmlTextWriter.OnAttributeRender (name, value, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="name">O atributo cHTML a ser renderizado.</param>
        <param name="value">O valor atribuído a <c>name</c>.</param>
        <param name="key">O <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> associado a <c>name</c>.</param>
        <summary>Determina se o atributo cHTML especificado e seu valor são renderizados para a página solicitante. Você pode substituir o método <see cref="M:System.Web.UI.ChtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /> em classes que derivam da classe <see cref="T:System.Web.UI.ChtmlTextWriter" /> para filtrar os atributos que não deseja renderizar em dispositivos com suporte para cHTML.</summary>
        <returns>
          <see langword="true" /> para gravar o atributo e seu valor no fluxo de saída <see cref="T:System.Web.UI.ChtmlTextWriter" />; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Por padrão, o <xref:System.Web.UI.ChtmlTextWriter.OnAttributeRender%2A> método impede que os atributos suprimidos globalmente que são listados na <xref:System.Web.UI.ChtmlTextWriter.GlobalSuppressedAttributes%2A> propriedade e os atributos específicos do elemento, suprimidos são listados no <xref:System.Web.UI.ChtmlTextWriter.SuppressedAttributes%2A> propriedade sejam gravadas no fluxo de saída. Você pode substituir o comportamento do <xref:System.Web.UI.ChtmlTextWriter.OnAttributeRender%2A> método nas classes que derivam de <xref:System.Web.UI.ChtmlTextWriter> classe.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar uma classe personalizada que substitui o <xref:System.Web.UI.ChtmlTextWriter.OnAttributeRender%2A> método para impedir que o `bgcolor` atributo sejam gravadas no fluxo de saída cHTML. Depois, ele chama a funcionalidade fornecida pelo base <xref:System.Web.UI.ChtmlTextWriter.OnAttributeRender%2A> método da <xref:System.Web.UI.ChtmlTextWriter> classe para garantir que seu comportamento padrão é usado, muito.  
  
 Este exemplo de código é parte de um exemplo maior fornecido para o <xref:System.Web.UI.ChtmlTextWriter> classe.  
  
 [!code-csharp[System.Web.UI.ChtmlTextWriter_Sample4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ChtmlTextWriter_Sample4/cs/chtmltextwriter.cs#2)]
 [!code-vb[System.Web.UI.ChtmlTextWriter_Sample4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ChtmlTextWriter_Sample4/vb/chtmltextwriter.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ChtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />
      </Docs>
    </Member>
    <Member MemberName="OnStyleAttributeRender">
      <MemberSignature Language="C#" Value="protected override bool OnStyleAttributeRender (string name, string value, System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnStyleAttributeRender(string name, string value, valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ChtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnStyleAttributeRender (name As String, value As String, key As HtmlTextWriterStyle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnStyleAttributeRender(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberSignature Language="F#" Value="override this.OnStyleAttributeRender : string * string * System.Web.UI.HtmlTextWriterStyle -&gt; bool" Usage="chtmlTextWriter.OnStyleAttributeRender (name, value, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="name">Uma cadeia de caracteres que contém o atributo de estilo a ser renderizado.</param>
        <param name="value">Uma cadeia de caracteres que contém o valor atribuído a <c>name</c>.</param>
        <param name="key">O <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> associado a <c>name</c>.</param>
        <summary>Determina se o atributo de estilo de marcação cHTML especificado e seu valor podem ser renderizados para o elemento da marcação atual.</summary>
        <returns>
          <see langword="true" /> se o estilo puder ser renderizado; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.ChtmlTextWriter.OnStyleAttributeRender%2A> método retorna `false` quando `key` é igual de <xref:System.Web.UI.HtmlTextWriterStyle.TextDecoration> campo e o valor é `"line-through"`.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="M:System.Web.UI.ChtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />
      </Docs>
    </Member>
    <Member MemberName="OnTagRender">
      <MemberSignature Language="C#" Value="protected override bool OnTagRender (string name, System.Web.UI.HtmlTextWriterTag key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnTagRender(string name, valuetype System.Web.UI.HtmlTextWriterTag key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ChtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnTagRender (name As String, key As HtmlTextWriterTag) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnTagRender(System::String ^ name, System::Web::UI::HtmlTextWriterTag key);" />
      <MemberSignature Language="F#" Value="override this.OnTagRender : string * System.Web.UI.HtmlTextWriterTag -&gt; bool" Usage="chtmlTextWriter.OnTagRender (name, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="name">Uma cadeia de caracteres que contém o nome do elemento cHTML a ser renderizado.</param>
        <param name="key">O <see cref="T:System.Web.UI.HtmlTextWriterTag" /> associado a <c>name</c>.</param>
        <summary>Determina se o elemento de marcação cHTML especificado é renderizado para a página solicitante.</summary>
        <returns>
          <see langword="true" /> se o elemento de marcação cHTML especificado puder ser renderizado; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o elemento cHTML for um `span` elemento, o <xref:System.Web.UI.ChtmlTextWriter.OnTagRender%2A> retorno do método `false`. Para todas as outras marcas, ele retorna `true`.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" />
      </Docs>
    </Member>
    <Member MemberName="RecognizedAttributes">
      <MemberSignature Language="C#" Value="protected System.Collections.Hashtable RecognizedAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Hashtable RecognizedAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ChtmlTextWriter.RecognizedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property RecognizedAttributes As Hashtable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Hashtable ^ RecognizedAttributes { System::Collections::Hashtable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RecognizedAttributes : System.Collections.Hashtable" Usage="System.Web.UI.ChtmlTextWriter.RecognizedAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um objeto <see cref="T:System.Collections.Hashtable" /> de atributos reconhecidos que poderiam ser renderizados em elementos cHTML.</summary>
        <value>Um <see cref="T:System.Collections.Hashtable" /> de atributos reconhecidos cHTML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.ChtmlTextWriter.AddRecognizedAttribute%2A> atributos de método para adicionar reconhecido para a coleção de atributos reconhecidos.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.ChtmlTextWriter.GlobalSuppressedAttributes" />
        <altmember cref="P:System.Web.UI.ChtmlTextWriter.SuppressedAttributes" />
        <altmember cref="M:System.Web.UI.ChtmlTextWriter.AddRecognizedAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveRecognizedAttribute">
      <MemberSignature Language="C#" Value="public virtual void RemoveRecognizedAttribute (string elementName, string attributeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveRecognizedAttribute(string elementName, string attributeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ChtmlTextWriter.RemoveRecognizedAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveRecognizedAttribute (elementName As String, attributeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveRecognizedAttribute(System::String ^ elementName, System::String ^ attributeName);" />
      <MemberSignature Language="F#" Value="abstract member RemoveRecognizedAttribute : string * string -&gt; unit&#xA;override this.RemoveRecognizedAttribute : string * string -&gt; unit" Usage="chtmlTextWriter.RemoveRecognizedAttribute (elementName, attributeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="attributeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName">O elemento cHTML do qual um atributo será removido.</param>
        <param name="attributeName">O atributo a ser removido de <c>elementName</c>.</param>
        <summary>Remove um atributo de um elemento cHTML do objeto <see cref="T:System.Web.UI.ChtmlTextWriter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.ChtmlTextWriter.RemoveRecognizedAttribute%2A> método Remove um atributo de um elemento cHTML. O atributo reconhecido é removido de atributos reconhecidos <xref:System.Collections.Hashtable> coleção do <xref:System.Web.UI.ChtmlTextWriter> que é referenciado pelo objeto de <xref:System.Web.UI.ChtmlTextWriter.RecognizedAttributes%2A> propriedade.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ChtmlTextWriter.AddRecognizedAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SuppressedAttributes">
      <MemberSignature Language="C#" Value="protected System.Collections.Hashtable SuppressedAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Hashtable SuppressedAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ChtmlTextWriter.SuppressedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property SuppressedAttributes As Hashtable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Hashtable ^ SuppressedAttributes { System::Collections::Hashtable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SuppressedAttributes : System.Collections.Hashtable" Usage="System.Web.UI.ChtmlTextWriter.SuppressedAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um objeto <see cref="T:System.Collections.Hashtable" /> de atributos suprimidos especificados pelo usuário que não são renderizados em elementos cHTML.</summary>
        <value>Um <see cref="T:System.Collections.Hashtable" /> de atributos suprimidos cHTML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.ChtmlTextWriter.RemoveRecognizedAttribute%2A> método para adicionar atributos à coleção de atributos suprimidos.  
  
 A lista a seguir mostra os atributos padrão suprimido que são definidos para um `div` elemento quando uma nova instância do <xref:System.Web.UI.ChtmlTextWriter> classe é criada.  
  
|||  
|-|-|  
|`accesskey`|`gridlines`|  
|`cellspacing`|`rules`|  
|`cellpadding`||  
  
 A lista a seguir mostra os atributos padrão suprimido que são definidos para um `span` elemento quando uma nova instância do <xref:System.Web.UI.ChtmlTextWriter> classe é criada.  
  
|||  
|-|-|  
|`cellspacing`|`gridlines`|  
|`cellpadding`|`rules`|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.ChtmlTextWriter.GlobalSuppressedAttributes" />
        <altmember cref="P:System.Web.UI.ChtmlTextWriter.RecognizedAttributes" />
        <altmember cref="M:System.Web.UI.ChtmlTextWriter.RemoveRecognizedAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteBreak">
      <MemberSignature Language="C#" Value="public override void WriteBreak ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteBreak() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ChtmlTextWriter.WriteBreak" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteBreak ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteBreak();" />
      <MemberSignature Language="F#" Value="override this.WriteBreak : unit -&gt; unit" Usage="chtmlTextWriter.WriteBreak " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Grava um elemento <see langword="br" /> no fluxo de saída cHTML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.ChtmlTextWriter.WriteBreak%2A> quebrar de método para inserir uma linha em um fluxo de cHMTL.  
  
   
  
## Examples  
 Esta seção contém dois exemplos de código. O primeiro exemplo de código demonstra como criar uma classe cHTML e propriedades personalizadas. O segundo exemplo de código demonstra como usar uma classe personalizada em uma página da Web.  
  
 Para usar o custom `ChtmlSimplelabelAdapter` adaptador, adicione o seguinte código como o arquivo de todo o computador apropriado no subdiretório do diretório de configuração do .NET Framework ou em um arquivo de navegador personalizado na pasta App_Browsers na Web do navegador raiz do aplicativo.  
  
```  
<controlAdapters>  
   <adapter controlType="AspNet.Samples.SimpleLabel"  
   adapterType="AspNet.Samples.ChtmlSimpleLabelAdapter" />  
</controlAdapters>  
```  
  
 O exemplo de código a seguir demonstra como criar uma classe de adaptador cHTML denominada `ChtmlSimpleLabelAdapter` de uma classe denominada `SimpleLabel`. Ele cria um personalizado `Control` propriedade que permite que o `ChtmlSimpleLabelAdapter` classe para acessar os membros da `SimpleLabel` classe e, em seguida, substitui o <xref:System.Web.UI.WebControls.Adapters.WebControlAdapter.Render%2A> método. Na substituição, ocorrerá o seguinte:  
  
-   Ele cria uma referência a um <xref:System.Web.UI.ChtmlTextWriter> objeto, chamado `w`, que é derivado da <xref:System.Web.UI.HtmlTextWriter> objeto que é passado como o `writer` parâmetro para o <xref:System.Web.UI.WebControls.Adapters.WebControlAdapter.Render%2A> método.  
  
-   Ele cria uma cadeia de caracteres e define-igual ao `SimpleLabel.Text` valor.  
  
-   Ele chama o <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> método para aplicar os estilos que são definidos pelo <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> fluxo de saída de propriedade do rótulo para a cHTML.  
  
-   Ele grava os `Text` valor da propriedade para o fluxo e fecha o bloco de estilo, chamando o <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> método.  
  
-   Ele chama o <xref:System.Web.UI.ChtmlTextWriter.WriteBreak%2A> método para renderizar um `br` elemento para o fluxo de saída depois da renderização de texto e estilos.  
  
 [!code-csharp[System.Web.UI.ChtmlTextWriter_Sample1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ChtmlTextWriter_Sample1/cs/chtmltestlabel.cs#2)]
 [!code-vb[System.Web.UI.ChtmlTextWriter_Sample1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ChtmlTextWriter_Sample1/VB/chtmltestlabel.vb#2)]  
  
 O exemplo a seguir demonstra como usar o `SimpleLabel` classe em uma página da Web.  
  
 [!code-aspx-csharp[System.Web.UI.ChtmlTextWriter_Sample1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ChtmlTextWriter_Sample1/cs/chtmltestlabel.aspx#3)]
 [!code-aspx-vb[System.Web.UI.ChtmlTextWriter_Sample1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ChtmlTextWriter_Sample1/VB/chtmltestlabel.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ChtmlTextWriter.WriteEncodedText(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteEncodedText">
      <MemberSignature Language="C#" Value="public override void WriteEncodedText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEncodedText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ChtmlTextWriter.WriteEncodedText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEncodedText (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEncodedText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="override this.WriteEncodedText : string -&gt; unit" Usage="chtmlTextWriter.WriteEncodedText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">A cadeia de caracteres de texto a ser codificada e gravada no fluxo de saída.</param>
        <summary>Codifica o texto especificado para o dispositivo solicitante e, em seguida, grava-o no fluxo de saída.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o parâmetro de texto é passado para o <xref:System.Web.UI.ChtmlTextWriter.WriteEncodedText%2A> método é `null` ou tem comprimento zero, em seguida, nada será gravado.  
  
 Use o <xref:System.Web.UI.ChtmlTextWriter.WriteEncodedText%2A> método quando uma cadeia de caracteres contém colchetes angulares (\< ou >) ou um e comercial (&) e você deseja garantir que eles sejam renderizados corretamente no dispositivo solicitante.  
  
 O <xref:System.Web.UI.ChtmlTextWriter.WriteEncodedText%2A> método usa a classe base <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> método.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ChtmlTextWriter.WriteBreak" />
      </Docs>
    </Member>
  </Members>
</Type>