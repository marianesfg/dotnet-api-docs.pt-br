<Type Name="IAttributeAccessor" FullName="System.Web.UI.IAttributeAccessor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e6d281707c751c021e91323b3646ccb74dff37ef" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37588648" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IAttributeAccessor" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAttributeAccessor" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IAttributeAccessor" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAttributeAccessor" />
  <TypeSignature Language="C++ CLI" Value="public interface class IAttributeAccessor" />
  <TypeSignature Language="F#" Value="type IAttributeAccessor = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="19660-101">Define métodos usados por controles de servidor ASP.NET para fornecer acesso programático a qualquer atributo declarado na marca de abertura de um controle de servidor.</span>
      <span class="sxs-lookup">
        <span data-stu-id="19660-101">Defines methods used by ASP.NET server controls to provide programmatic access to any attribute declared in the opening tag of a server control.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19660-102">Se você criar um controle de servidor personalizado que herda de <xref:System.Web.UI.WebControls.WebControl>, <xref:System.Web.UI.HtmlControls.HtmlControl>, ou <xref:System.Web.UI.WebControls.ListItem> classe, o .NET Framework automaticamente fornece acesso programático aos atributos porque cada uma dessas classes implementam o <xref:System.Web.UI.IAttributeAccessor> interface.</span><span class="sxs-lookup"><span data-stu-id="19660-102">If you author a custom server control that inherits from the <xref:System.Web.UI.WebControls.WebControl>, <xref:System.Web.UI.HtmlControls.HtmlControl>, or <xref:System.Web.UI.WebControls.ListItem> class, the .NET Framework automatically provides programmatic access to attributes because each of these classes implement the <xref:System.Web.UI.IAttributeAccessor> interface.</span></span>  
  
 <span data-ttu-id="19660-103">Se você criar um controle de servidor personalizado que não herdam de uma dessas classes e planeja permitir acesso programático aos atributos que não coincidem com as propriedades do controle com rigidez de tipos, certifique-se de implementar o <xref:System.Web.UI.IAttributeAccessor> interface.</span><span class="sxs-lookup"><span data-stu-id="19660-103">If you author a custom server control that does not inherit from one of these classes and plan to allow programmatic access to attributes that do not correspond with the control's strongly typed properties, be sure to implement the <xref:System.Web.UI.IAttributeAccessor> interface.</span></span>  
  
   
  
## Examples  
 [!code-csharp[IAttributeAccessor_Sample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/IAttributeAccessor_Sample/CS/iattributeaccessor.cs#1)]
 [!code-vb[IAttributeAccessor_Sample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/IAttributeAccessor_Sample/VB/iattributeaccessor.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlControl" />
    <altmember cref="T:System.Web.UI.WebControls.WebControl" />
  </Docs>
  <Members>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public string GetAttribute (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAttribute(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IAttributeAccessor.GetAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAttribute (key As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAttribute(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member GetAttribute : string -&gt; string" Usage="iAttributeAccessor.GetAttribute key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="19660-104">Um <see cref="T:System.String" /> que representa o nome do atributo de controle de servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19660-104">A <see cref="T:System.String" /> that represents the name of the server control attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19660-105">Quando implementado por uma classe, recupera a propriedade de atributo especificada do controle de servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19660-105">When implemented by a class, retrieves the specified attribute property from the server control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19660-106">O valor do atributo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19660-106">The value of the specified attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="19660-107">O exemplo de código a seguir demonstra uma implementação do <xref:System.Web.UI.IAttributeAccessor.GetAttribute%2A> método.</span><span class="sxs-lookup"><span data-stu-id="19660-107">The following code example demonstrates an implementation of the <xref:System.Web.UI.IAttributeAccessor.GetAttribute%2A> method.</span></span>  
  
 [!code-csharp[IAttributeAccessor_Sample#3](~/samples/snippets/csharp/VS_Snippets_WebNet/IAttributeAccessor_Sample/CS/iattributeaccessor.cs#3)]
 [!code-vb[IAttributeAccessor_Sample#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/IAttributeAccessor_Sample/VB/iattributeaccessor.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAttribute">
      <MemberSignature Language="C#" Value="public void SetAttribute (string key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAttribute(string key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IAttributeAccessor.SetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAttribute (key As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAttribute(System::String ^ key, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SetAttribute : string * string -&gt; unit" Usage="iAttributeAccessor.SetAttribute (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="19660-108">O nome do atributo a ser definido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19660-108">The name of the attribute to be set.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="19660-109">O valor atribuído ao atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19660-109">The value assigned to the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19660-110">Quando implementado por uma classe, designa um atributo e seu valor a serem atribuídos ao controle de servidor ASP.NET.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19660-110">When implemented by a class, designates an attribute and its value to assign to the ASP.NET server control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="19660-111">O exemplo de código a seguir demonstra uma possível implementação do <xref:System.Web.UI.IAttributeAccessor.SetAttribute%2A> método.</span><span class="sxs-lookup"><span data-stu-id="19660-111">The following code example demonstrates a possible implementation of the <xref:System.Web.UI.IAttributeAccessor.SetAttribute%2A> method.</span></span>  
  
 [!code-csharp[IAttributeAccessor_Sample#2](~/samples/snippets/csharp/VS_Snippets_WebNet/IAttributeAccessor_Sample/CS/iattributeaccessor.cs#2)]
 [!code-vb[IAttributeAccessor_Sample#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/IAttributeAccessor_Sample/VB/iattributeaccessor.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>