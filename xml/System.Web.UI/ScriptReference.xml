<Type Name="ScriptReference" FullName="System.Web.UI.ScriptReference">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ff95b64c9a7ee03b8bf81c5965d8e212d501d4c6" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51917809" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ScriptReference : System.Web.UI.ScriptReferenceBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ScriptReference extends System.Web.UI.ScriptReferenceBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ScriptReference" />
  <TypeSignature Language="VB.NET" Value="Public Class ScriptReference&#xA;Inherits ScriptReferenceBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ScriptReference : System::Web::UI::ScriptReferenceBase" />
  <TypeSignature Language="F#" Value="type ScriptReference = class&#xA;    inherit ScriptReferenceBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.ScriptReferenceBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultProperty("Path")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Registra um arquivo ECMAScript (JavaScript) para uso em uma página da Web do ASP.NET.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode incluir um arquivo JavaScript em uma página da Web do ASP.NET, registrá-lo por meio de um <xref:System.Web.UI.ScriptReference> objeto. Você pode registrar um arquivo de script está localizado, como um arquivo. js (um arquivo de script estático) no site da Web. Você também pode registrar um arquivo de script que é inserido como um recurso em um assembly. Depois de registrar o arquivo de script, você pode usar suas funções no script de cliente na página da Web.  
  
 Para registrar um arquivo de script estático, defina as <xref:System.Web.UI.ScriptReferenceBase.Path%2A> propriedade do <xref:System.Web.UI.ScriptReference> objeto para o local relativo do arquivo.  
  
 Para registrar um arquivo de script que é inserido como um recurso em um assembly, defina o <xref:System.Web.UI.ScriptReference.Assembly%2A> propriedade para o nome do assembly que contém o arquivo. Em seguida, defina o <xref:System.Web.UI.ScriptReference.Name%2A> propriedade para o nome do arquivo. js que é inserido no assembly. Nesse caso, o arquivo de script deve ser inserido, não vinculado.  
  
 Você define o <xref:System.Web.UI.ScriptReferenceBase.ScriptMode%2A> propriedade para indicar se deseja usar a depuração ou lançamento de versão do script.  
  
 O <xref:System.Web.UI.ScriptMode.Auto> valor produz resultados diferentes dependendo se ele se refere a um arquivo de script autônomo ou em um arquivo de script que é inserido como um recurso em um assembly. Um arquivo de script autônomo é definido com o <xref:System.Web.UI.ScriptReferenceBase.Path%2A> propriedade. Uma referência de assembly deve ser acessada por meio de <xref:System.Web.UI.ScriptReference.Name%2A> e <xref:System.Web.UI.ScriptReference.Assembly%2A> propriedades. Os resultados para o <xref:System.Web.UI.ScriptMode.Auto> valor são da seguinte maneira:  
  
-   Quando ele é aplicado a um arquivo de script autônomo no qual o <xref:System.Web.UI.ScriptReferenceBase.Path%2A> propriedade for especificada, o <xref:System.Web.UI.ScriptMode.Auto> valor é equivalente a <xref:System.Web.UI.ScriptMode.Release>.  
  
-   Quando ele é aplicado a uma referência de script em um assembly <xref:System.Web.UI.ScriptMode.Auto> é equivalente a <xref:System.Web.UI.ScriptMode.Inherit>. Quando apenas <xref:System.Web.UI.ScriptReference.Name%2A> for especificado, ele é usado para referenciar o script. Quando <xref:System.Web.UI.ScriptReference.Name%2A> e o <xref:System.Web.UI.ScriptReferenceBase.Path%2A> propriedade forem especificadas, o <xref:System.Web.UI.ScriptReferenceBase.Path%2A> propriedade é usada em vez de <xref:System.Web.UI.ScriptReference.Name%2A>, mas o <xref:System.Web.UI.ScriptMode.Auto> valor equivale ainda a <xref:System.Web.UI.ScriptMode.Inherit>.  
  
   
  
## Examples  
 O exemplo a seguir mostra como fazer referência a um controle personalizado e um arquivo JavaScript que é inserido no assembly do controle. O assembly deve para estar na pasta Bin do site da Web. Anima o controle personalizado <xref:System.Web.UI.UpdatePanel> controles. O arquivo JavaScript é compilado como um recurso incorporado chamado SampleControl.UpdatePanelAnimation.js. Registrar o arquivo JavaScript incorporado, usando o <xref:System.Web.UI.ScriptReference.Assembly%2A> e <xref:System.Web.UI.ScriptReference.Name%2A> propriedades.  
  
 Para usar este exemplo, compile o arquivo JavaScript que é mostrado no exemplo como um recurso inserido com o controle personalizado. Coloque o assembly resultante para a pasta Bin do site da Web. Para obter um exemplo de como inserir um arquivo JavaScript em um assembly, consulte [instruções passo a passo: inserindo um arquivo JavaScript como um recurso em um Assembly](https://msdn.microsoft.com/library/d8cb78cd-95a9-4dc6-92df-391866817e89).  
  
 O exemplo a seguir mostra uma página que usa o controle personalizado.  
  
 [!code-aspx-csharp[System.Web.UI.ScriptReference#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptReference#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/Default.aspx#1)]  
  
 O exemplo a seguir mostra a definição de classe de controle personalizado.  
  
 [!code-csharp[System.Web.UI.ScriptReference#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/customcontrol.cs#2)]
 [!code-vb[System.Web.UI.ScriptReference#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/customcontrol.vb#2)]  
  
 O exemplo a seguir mostra o arquivo JavaScript de suporte.  
  
 [!code-javascript[System.Web.UI.ScriptReference#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/UpdatePanelAnimation.js#3)]  
  
 O exemplo a seguir mostra o código que você deve adicionar ao arquivo AssemblyInfo do projeto que contém o controle personalizado e o arquivo JavaScript.  
  
 [!code-csharp[System.Web.UI.ScriptReference#4](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/AssemblyInfo.cs#4)]
 [!code-vb[System.Web.UI.ScriptReference#4](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/AssemblyInfo.vb#4)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.UI.ScriptReference" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScriptReference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ScriptReference();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.UI.ScriptReference" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScriptReference (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ScriptReference(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ScriptReference : string -&gt; System.Web.UI.ScriptReference" Usage="new System.Web.UI.ScriptReference path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">O caminho do arquivo de script de cliente relativo à página da Web.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.UI.ScriptReference" /> usando um caminho especificado.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScriptReference (string name, string assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, assembly As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ScriptReference(System::String ^ name, System::String ^ assembly);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ScriptReference : string * string -&gt; System.Web.UI.ScriptReference" Usage="new System.Web.UI.ScriptReference (name, assembly)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="assembly" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">O nome do arquivo de script inserido no assembly.</param>
        <param name="assembly">O nome do assembly que contém o arquivo de script de cliente como um recurso inserido.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.UI.ScriptReference" /> usando um nome e um assembly especificados.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Assembly">
      <MemberSignature Language="C#" Value="public string Assembly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Assembly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptReference.Assembly" />
      <MemberSignature Language="VB.NET" Value="Public Property Assembly As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Assembly { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Assembly : string with get, set" Usage="System.Web.UI.ScriptReference.Assembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o nome do assembly que contém o arquivo de script de cliente como um recurso inserido.</summary>
        <value>O nome totalmente ou parcialmente qualificado do assembly que contém um arquivo de script de cliente como um recurso inserido.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você define o <xref:System.Web.UI.ScriptReference.Assembly%2A> propriedade quando você faz referência a um arquivo de script de cliente que está incluído como um recurso inserido em um assembly. Definir <xref:System.Web.UI.ScriptReference.Assembly%2A> para o nome do assembly totalmente ou parcialmente qualificado. Um nome de assembly totalmente qualificado inclui um nome, cultura, chave pública e número de versão. Um nome de assembly parcialmente qualificadas inclui somente um nome.  
  
 Quando você especifica um valor para <xref:System.Web.UI.ScriptReference.Assembly%2A>, você também deve especificar o nome do recurso inserido no <xref:System.Web.UI.ScriptReference.Name%2A> propriedade. Caso contrário, um <xref:System.InvalidOperationException> será lançada.  
  
 O assembly que está sendo referenciado deve ser localizado na pasta Bin do site da Web ou no cache de assembly global.  
  
   
  
## Examples  
 O exemplo a seguir mostra como fazer referência a um controle personalizado e um arquivo JavaScript que é inserido no assembly do controle. O assembly deve para estar na pasta Bin do site da Web. Anima o controle personalizado <xref:System.Web.UI.UpdatePanel> controles. O arquivo JavaScript é compilado como um recurso incorporado chamado SampleControl.UpdatePanelAnimation.js. Registrar o arquivo JavaScript incorporado, usando o <xref:System.Web.UI.ScriptReference.Assembly%2A> e <xref:System.Web.UI.ScriptReference.Name%2A> propriedades.  
  
 Para usar este exemplo, compile o arquivo JavaScript que é mostrado no exemplo como um recurso inserido com o controle personalizado. Coloque o assembly resultante para a pasta Bin do site da Web. Para obter um exemplo de como inserir um arquivo JavaScript em um assembly, consulte [instruções passo a passo: inserindo um arquivo JavaScript como um recurso em um Assembly](https://msdn.microsoft.com/library/d8cb78cd-95a9-4dc6-92df-391866817e89).  
  
 O exemplo a seguir mostra uma página que usa o controle personalizado.  
  
 [!code-aspx-csharp[System.Web.UI.ScriptReference#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptReference#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/Default.aspx#1)]  
  
 O exemplo a seguir mostra a definição de classe de controle personalizado.  
  
 [!code-csharp[System.Web.UI.ScriptReference#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/customcontrol.cs#2)]
 [!code-vb[System.Web.UI.ScriptReference#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/customcontrol.vb#2)]  
  
 O exemplo a seguir mostra o arquivo JavaScript de suporte.  
  
 [!code-javascript[System.Web.UI.ScriptReference#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/UpdatePanelAnimation.js#3)]  
  
 O exemplo a seguir mostra o código que você deve adicionar ao arquivo AssemblyInfo do projeto que contém o controle personalizado e o arquivo JavaScript.  
  
 [!code-csharp[System.Web.UI.ScriptReference#4](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/AssemblyInfo.cs#4)]
 [!code-vb[System.Web.UI.ScriptReference#4](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/AssemblyInfo.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUrl">
      <MemberSignature Language="C#" Value="protected internal override string GetUrl (System.Web.UI.ScriptManager scriptManager, bool zip);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance string GetUrl(class System.Web.UI.ScriptManager scriptManager, bool zip) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.GetUrl(System.Web.UI.ScriptManager,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::String ^ GetUrl(System::Web::UI::ScriptManager ^ scriptManager, bool zip);" />
      <MemberSignature Language="F#" Value="override this.GetUrl : System.Web.UI.ScriptManager * bool -&gt; string" Usage="scriptReference.GetUrl (scriptManager, zip)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptManager" Type="System.Web.UI.ScriptManager" />
        <Parameter Name="zip" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="scriptManager">O controle <see langword="ScriptManager" /> na página da Web de destino.</param>
        <param name="zip">
          <see langword="true" /> se o script deve ser compactado; caso contrário, <see langword="false" />.</param>
        <summary>Recupera a URL que é processada como o valor do atributo <see langword="src" /> do elemento <see langword="script" />.</summary>
        <returns>Uma cadeia de caracteres que contém a URL que é processada como o valor do atributo <see langword="src" /> do elemento <see langword="script" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreScriptPath">
      <MemberSignature Language="C#" Value="public bool IgnoreScriptPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreScriptPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptReference.IgnoreScriptPath" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreScriptPath As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreScriptPath { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreScriptPath : bool with get, set" Usage="System.Web.UI.ScriptReference.IgnoreScriptPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This property is obsolete. Instead of using ScriptManager.ScriptPath, set the Path property on each individual ScriptReference.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se a propriedade <see cref="P:System.Web.UI.ScriptManager.ScriptPath" /> está incluída na URL ao registrar um arquivo de script de cliente de um recurso.</summary>
        <value>
          <see langword="true" /> Se o caminho do script não é usado quando você registra o script de cliente; Caso contrário, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você definir <xref:System.Web.UI.ScriptReference.IgnoreScriptPath%2A> à `true` quando quiser registrar um arquivo de script de cliente sem incluir o <xref:System.Web.UI.ScriptManager.ScriptPath%2A> valor na URL do arquivo de script.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAjaxFrameworkScript">
      <MemberSignature Language="C#" Value="protected internal override bool IsAjaxFrameworkScript (System.Web.UI.ScriptManager scriptManager);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool IsAjaxFrameworkScript(class System.Web.UI.ScriptManager scriptManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.IsAjaxFrameworkScript(System.Web.UI.ScriptManager)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool IsAjaxFrameworkScript(System::Web::UI::ScriptManager ^ scriptManager);" />
      <MemberSignature Language="F#" Value="override this.IsAjaxFrameworkScript : System.Web.UI.ScriptManager -&gt; bool" Usage="scriptReference.IsAjaxFrameworkScript scriptManager" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptManager" Type="System.Web.UI.ScriptManager" />
      </Parameters>
      <Docs>
        <param name="scriptManager">Um objeto <see cref="T:System.Web.UI.ScriptManager" />.</param>
        <summary>Determina se a referência de script é um script AJAX.</summary>
        <returns>
          <see langword="true" /> se a referência de script for um script AJAX; caso contrário, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFromSystemWebExtensions">
      <MemberSignature Language="C#" Value="protected internal override bool IsFromSystemWebExtensions ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool IsFromSystemWebExtensions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.IsFromSystemWebExtensions" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function IsFromSystemWebExtensions () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool IsFromSystemWebExtensions();" />
      <MemberSignature Language="F#" Value="override this.IsFromSystemWebExtensions : unit -&gt; bool" Usage="scriptReference.IsFromSystemWebExtensions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This method is obsolete. Use IsAjaxFrameworkScript(ScriptManager) instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indica se o script de composição contém uma referência a um script de estrutura AJAX ASP.NET.</summary>
        <returns>
          <see langword="true" /> se o script de composição contiver uma referência a um script de estrutura AJAX ASP.NET; caso contrário, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptReference.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.UI.ScriptReference.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o nome do recurso inserido que contém o arquivo de script de cliente.</summary>
        <value>O nome do arquivo de script de cliente que está incorporado como um recurso em um assembly.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você define o <xref:System.Web.UI.ScriptReference.Name%2A> propriedade para fazer referência a um arquivo de script de cliente que está incorporado como um recurso em um assembly.  
  
 Se você definir valores para ambas as <xref:System.Web.UI.ScriptReferenceBase.Path%2A> e <xref:System.Web.UI.ScriptReference.Name%2A> propriedades na referência de script, o <xref:System.Web.UI.ScriptReferenceBase.Path%2A> propriedade terá precedência.  
  
   
  
## Examples  
 O exemplo a seguir mostra como fazer referência a um controle personalizado e um arquivo JavaScript que é inserido no assembly do controle. O assembly deve para estar na pasta Bin do site da Web. Anima o controle personalizado <xref:System.Web.UI.UpdatePanel> controles. O arquivo JavaScript é compilado como um recurso incorporado chamado SampleControl.UpdatePanelAnimation.js. Registrar o arquivo JavaScript incorporado, usando o <xref:System.Web.UI.ScriptReference.Assembly%2A> e <xref:System.Web.UI.ScriptReference.Name%2A> propriedades.  
  
 Para usar este exemplo, compile o arquivo JavaScript que é mostrado no exemplo como um recurso inserido com o controle personalizado. Coloque o assembly resultante para a pasta Bin do site da Web. Para obter um exemplo de como inserir um arquivo JavaScript em um assembly, consulte [instruções passo a passo: inserindo um arquivo JavaScript como um recurso em um Assembly](https://msdn.microsoft.com/library/d8cb78cd-95a9-4dc6-92df-391866817e89).  
  
 O exemplo a seguir mostra uma página que usa o controle personalizado.  
  
 [!code-aspx-csharp[System.Web.UI.ScriptReference#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptReference#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/Default.aspx#1)]  
  
 O exemplo a seguir mostra a definição de classe de controle personalizado.  
  
 [!code-csharp[System.Web.UI.ScriptReference#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/customcontrol.cs#2)]
 [!code-vb[System.Web.UI.ScriptReference#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/customcontrol.vb#2)]  
  
 O exemplo a seguir mostra o arquivo JavaScript de suporte.  
  
 [!code-javascript[System.Web.UI.ScriptReference#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/UpdatePanelAnimation.js#3)]  
  
 O exemplo a seguir mostra o código que você deve adicionar ao arquivo AssemblyInfo do projeto que contém o controle personalizado e o arquivo JavaScript.  
  
 [!code-csharp[System.Web.UI.ScriptReference#4](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/AssemblyInfo.cs#4)]
 [!code-vb[System.Web.UI.ScriptReference#4](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/AssemblyInfo.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="scriptReference.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna uma cadeia de caracteres que representa o valor da propriedade <see cref="P:System.Web.UI.ScriptReference.Name" />, a propriedade <see cref="P:System.Web.UI.ScriptReferenceBase.Path" /> ou o nome do tipo.</summary>
        <returns>O valor da propriedade <see cref="P:System.Web.UI.ScriptReference.Name" /> se ela estiver definida ou o valor da propriedade <see cref="P:System.Web.UI.ScriptReferenceBase.Path" /> se ela estiver definida; caso contrário, o valor da propriedade <see cref="P:System.Reflection.MemberInfo.Name" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>