<Type Name="ICallbackEventHandler" FullName="System.Web.UI.ICallbackEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7c825a3f80dfb1fd33e27c2eb4f80d07877ee835" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ICallbackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICallbackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ICallbackEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICallbackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICallbackEventHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="8d54a-101">Usado para indicar que um controle pode ser o destino de um evento de retorno de chamada no servidor.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8d54a-101">Used to indicate that a control can be the target of a callback event on the server.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d54a-102">Implementar o <xref:System.Web.UI.ICallbackEventHandler> interface para qualquer controle personalizado que precisa receber eventos de retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="8d54a-102">Implement the <xref:System.Web.UI.ICallbackEventHandler> interface for any custom control that needs to receive callback events.</span></span> <span data-ttu-id="8d54a-103">Para obter mais informações, consulte [implementando retornos de chamada de cliente sem Postbacks](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span><span class="sxs-lookup"><span data-stu-id="8d54a-103">For more information, see [Implementing Client Callbacks Without Postbacks](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span></span>  
  
 <span data-ttu-id="8d54a-104">Exemplos de controles que implementam o <xref:System.Web.UI.ICallbackEventHandler> interface incluir o <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, e <xref:System.Web.UI.WebControls.TreeView> controles.</span><span class="sxs-lookup"><span data-stu-id="8d54a-104">Examples of controls that implement the <xref:System.Web.UI.ICallbackEventHandler> interface include the <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, and <xref:System.Web.UI.WebControls.TreeView> controls.</span></span> <span data-ttu-id="8d54a-105">Quando um evento de retorno de chamada tem como alvo um controle que implementa o <xref:System.Web.UI.ICallbackEventHandler> interface, o <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> método é chamado para manipular o evento, passando o argumento do evento como um parâmetro e o <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> método retorna o resultado de retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="8d54a-105">When a callback event targets a control that implements the <xref:System.Web.UI.ICallbackEventHandler> interface, the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method is called to handle the event, passing the event argument as a parameter and the <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> method returns the result of the callback.</span></span>  
  
 <span data-ttu-id="8d54a-106">Controles que recuperam dados de um controle de fonte de dados durante o retorno de chamada podem fazer isso forma síncrona ou assíncrona.</span><span class="sxs-lookup"><span data-stu-id="8d54a-106">Controls that retrieve data from a data source control during callback can do so synchronously or asynchronously.</span></span> <span data-ttu-id="8d54a-107">Controles do ASP.NET como <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, e <xref:System.Web.UI.WebControls.TreeView> são implementadas de forma síncrona.</span><span class="sxs-lookup"><span data-stu-id="8d54a-107">ASP.NET controls like <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, and <xref:System.Web.UI.WebControls.TreeView> are implemented synchronously.</span></span> <span data-ttu-id="8d54a-108">Retornos de chamada síncronos não impedem que o usuário trabalhando no navegador.</span><span class="sxs-lookup"><span data-stu-id="8d54a-108">Synchronous callbacks do not prevent the user from working in the browser.</span></span> <span data-ttu-id="8d54a-109">No modo síncrono, somente um retorno de chamada por vez pode ser executado, com o retorno de chamada última tendo precedência.</span><span class="sxs-lookup"><span data-stu-id="8d54a-109">In synchronous mode, only one callback at a time can execute, with the last callback taking precedence.</span></span> <span data-ttu-id="8d54a-110">Quando um controle da Web é implementado para dar suporte ao comportamento assíncrono, vários retornos de chamada podem ser gerados simultaneamente.</span><span class="sxs-lookup"><span data-stu-id="8d54a-110">When a Web control is implemented to support asynchronous behavior, multiple callbacks can be raised simultaneously.</span></span> <span data-ttu-id="8d54a-111">Para obter detalhes sobre a programação assíncrona, consulte [padrão assíncrono baseado em evento (EAP)](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-eap.md).</span><span class="sxs-lookup"><span data-stu-id="8d54a-111">For details on asynchronous programming, see [Event-based Asynchronous Pattern (EAP)](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-eap.md).</span></span>  
  
 <span data-ttu-id="8d54a-112">Você pode especificar se os eventos de retorno de chamada da interface do usuário de origem renderizado por uma implementação de controle de <xref:System.Web.UI.ICallbackEventHandler> interface são validados.</span><span class="sxs-lookup"><span data-stu-id="8d54a-112">You can specify whether callback events originating from the user interface rendered by a control implementing the <xref:System.Web.UI.ICallbackEventHandler> interface are validated.</span></span> <span data-ttu-id="8d54a-113">Validação de eventos é uma boa prática de segurança.</span><span class="sxs-lookup"><span data-stu-id="8d54a-113">Validation of events is a good security practice.</span></span> <span data-ttu-id="8d54a-114">No entanto, por motivos de desempenho você pode desabilitá-lo.</span><span class="sxs-lookup"><span data-stu-id="8d54a-114">However, for performance reasons you can disable it.</span></span> <span data-ttu-id="8d54a-115">Para controlar se eventos de validação é executado em eventos de retorno de chamada, defina o `enableEventValidation` atributo do [@ Page](http://msdn.microsoft.com/library/f06cf9e5-22bb-461d-8b8f-549e53ff40a4) diretiva ou o `enableEventValidation` atributo do [páginas Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/4123bb66-3fe4-4d62-b70e-33758656b458) do arquivo Web. config.</span><span class="sxs-lookup"><span data-stu-id="8d54a-115">To control whether event validation is performed on callback events, set the `enableEventValidation` attribute of the [@ Page](http://msdn.microsoft.com/library/f06cf9e5-22bb-461d-8b8f-549e53ff40a4) directive or the `enableEventValidation` attribute of the [pages Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/4123bb66-3fe4-4d62-b70e-33758656b458) of the Web.config file.</span></span> <span data-ttu-id="8d54a-116">Se você definir o <xref:System.Web.UI.Page.EnableEventValidation%2A> propriedade no código, defina-o `Page_Init` fase do processamento da página.</span><span class="sxs-lookup"><span data-stu-id="8d54a-116">If you set the <xref:System.Web.UI.Page.EnableEventValidation%2A> property in code, set it in the `Page_Init` phase of page processing.</span></span> <span data-ttu-id="8d54a-117">Para obter mais informações sobre o balanceamento do benefício da segurança do evento de validação com o custo de desempenho, consulte [visão geral de desempenho do ASP.NET](http://msdn.microsoft.com/library/f882bf1b-a009-4312-ac06-74370ffabc0b).</span><span class="sxs-lookup"><span data-stu-id="8d54a-117">For more information on balancing the security benefit of event validation with its performance cost, see [ASP.NET Performance Overview](http://msdn.microsoft.com/library/f882bf1b-a009-4312-ac06-74370ffabc0b).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetCallbackEventReference" />
    <altmember cref="M:System.Web.UI.WebControls.DetailsView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
    <altmember cref="M:System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
  </Docs>
  <Members>
    <Member MemberName="GetCallbackResult">
      <MemberSignature Language="C#" Value="public string GetCallbackResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetCallbackResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ICallbackEventHandler.GetCallbackResult" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCallbackResult () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackResult();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8d54a-118">Retorna os resultados de um evento de retorno de chamada que segmenta um controle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d54a-118">Returns the results of a callback event that targets a control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d54a-119">O resultado do retorno de chamada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d54a-119">The result of the callback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d54a-120">Exceções geradas <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> não impedirá que <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> do que está sendo chamada e retornar um resultado.</span><span class="sxs-lookup"><span data-stu-id="8d54a-120">Exceptions thrown in <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> will not prevent <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> from being called and returning a result.</span></span> <span data-ttu-id="8d54a-121">Para evitar <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> retornem um resultado, definir um sinalizador quando uma exceção será lançada <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> e retornar uma cadeia de caracteres vazia de <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>.</span><span class="sxs-lookup"><span data-stu-id="8d54a-121">To prevent <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> from returning a result, set a flag when an exception is thrown in <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> and return an empty string from <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.GetCallbackResult" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.GetCallbackResult" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.GetCallbackResult" />
      </Docs>
    </Member>
    <Member MemberName="RaiseCallbackEvent">
      <MemberSignature Language="C#" Value="public void RaiseCallbackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RaiseCallbackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaiseCallbackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RaiseCallbackEvent(System::String ^ eventArgument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">
          <span data-ttu-id="8d54a-122">Uma cadeia de caracteres que representa um argumento do evento a ser passado para o manipulador de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d54a-122">A string that represents an event argument to pass to the event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d54a-123">Processa um evento de retorno de chamada que segmenta um controle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d54a-123">Processes a callback event that targets a control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d54a-124">Quando `null` é usado como o parâmetro de argumento de evento, a cadeia de caracteres é serializada como "null" e enviada de volta para o servidor.</span><span class="sxs-lookup"><span data-stu-id="8d54a-124">When `null` is used as the event argument parameter, the string is serialized to "null" and sent back to the server.</span></span> <span data-ttu-id="8d54a-125">Como não há nenhuma forma de distinguir entre `null` e "null", você deve evitar usar `null` parâmetros de argumento com retornos de chamada.</span><span class="sxs-lookup"><span data-stu-id="8d54a-125">Because there is no way to distinguish between `null` and "null", you should avoid using `null` argument parameters with callbacks.</span></span>  
  
 <span data-ttu-id="8d54a-126">Exceções geradas <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> não impedirá que <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> do que está sendo chamada e retornar um resultado.</span><span class="sxs-lookup"><span data-stu-id="8d54a-126">Exceptions thrown in <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> will not prevent <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> from being called and returning a result.</span></span> <span data-ttu-id="8d54a-127">Para evitar <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> retornem um resultado, definir um sinalizador quando uma exceção será lançada <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> e retornar uma cadeia de caracteres vazia de <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>.</span><span class="sxs-lookup"><span data-stu-id="8d54a-127">To prevent <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> from returning a result, set a flag when an exception is thrown in <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> and return an empty string from <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetCallbackEventReference" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
        <altmember cref="M:System.Web.UI.ICallbackEventHandler.GetCallbackResult" />
      </Docs>
    </Member>
  </Members>
</Type>