<Type Name="DataSourceControl" FullName="System.Web.UI.DataSourceControl">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="834756595bcb2e9064a86f888f4048d55b4ccf02" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30610330" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DataSourceControl : System.Web.UI.Control, System.ComponentModel.IListSource, System.Web.UI.IDataSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DataSourceControl extends System.Web.UI.Control implements class System.ComponentModel.IListSource, class System.Web.UI.IDataSource" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataSourceControl" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DataSourceControl&#xA;Inherits Control&#xA;Implements IDataSource, IListSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataSourceControl abstract : System::Web::UI::Control, System::ComponentModel::IListSource, System::Web::UI::IDataSource" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IListSource</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IDataSource</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.DataSourceDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlBuilder(typeof(System.Web.UI.DataSourceControlBuilder))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.NonVisualControl</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Funciona como a classe base de controles que representam fontes de dados para controles associados a dados.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET oferece suporte a uma arquitetura de associação de dados de controle que permite que os controles de servidor Web associar aos dados de uma maneira consistente. Controles de servidor Web que associar aos dados são conhecidos como controles associados a dados e as classes que facilitam que são chamados de vinculação de controles da fonte de dados. Controles de fonte de dados podem representar qualquer fonte de dados: um banco de dados relacional, um arquivo, um fluxo, um objeto comercial e assim por diante. Fonte de dados controla apresentar dados de uma maneira consistente para controles associados a dados, independentemente da origem ou o formato dos dados subjacentes.  
  
 Use os controles de fonte de dados que são fornecidos com o ASP.NET, incluindo <xref:System.Web.UI.WebControls.SqlDataSource>, <xref:System.Web.UI.WebControls.AccessDataSource>, e <xref:System.Web.UI.WebControls.XmlDataSource>, para executar a maioria das tarefas de desenvolvimento na Web. Usar a base de <xref:System.Web.UI.DataSourceControl> classe quando você deseja implementar seu próprio controle de fonte de dados personalizados.  
  
 Enquanto qualquer classe que implementa o <xref:System.Web.UI.IDataSource> interface é um controle de fonte de dados, a maioria dos controles de fonte de dados ASP.NET estender abstrata <xref:System.Web.UI.DataSourceControl> classe, que fornece uma implementação básica do <xref:System.Web.UI.IDataSource> interface. O <xref:System.Web.UI.DataSourceControl> classe também fornece uma implementação do <xref:System.ComponentModel.IListSource> interface, que permite que você atribua programaticamente o controle de fonte de dados para o `DataSource` propriedade de um controle associado a dados e retornar dados para o controle como uma lista básica.  
  
 Qualquer controle ASP.NET que deriva de <xref:System.Web.UI.WebControls.DataBoundControl> classe possa se associar a um controle de fonte de dados. Quando um <xref:System.Web.UI.WebControls.DataBoundControl> está associado a um controle de fonte de dados, associação de dados é executada automaticamente em tempo de execução. Você também pode usar controles da fonte de dados com controles do ASP.NET que expõem um `DataSource` ou `DataSourceID` propriedade e associação de dados básicos de suporte, mas são não derivado de <xref:System.Web.UI.WebControls.DataBoundControl>. Ao usar esses controles de associação de dados, você deve chamar explicitamente o `DataBind` método. Para obter mais informações sobre associação de dados, consulte [ASP.NET mapa de conteúdo de acesso de dados](http://msdn.microsoft.com/library/f9219396-a0fa-481f-894d-e3d9c67d64f2).  
  
 Você pode pensar em um controle de fonte de dados como a combinação da <xref:System.Web.UI.DataSourceControl> objeto e suas listas associadas de dados, chamado de exibições da fonte de dados. Cada lista de dados é representada por um <xref:System.Web.UI.DataSourceView> objeto. Como o armazenamento de dados subjacente contém uma ou mais listas de dados, um <xref:System.Web.UI.DataSourceControl> é sempre associado a um ou mais nomes <xref:System.Web.UI.DataSourceView> objetos. O <xref:System.Web.UI.IDataSource> interface define os métodos que todos os controles de fonte de dados usam para interagir com exibições da fonte de dados: o <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> método é usado para enumerar os modos de exibição de fonte de dados associados atualmente com o controle de fonte de dados e o <xref:System.Web.UI.DataSourceControl.GetView%2A> método é usado para recuperar uma instância de modo de exibição de fonte de dados específico por nome.  
  
 Você também pode considerar o controle de fonte de dados como distintos duas interfaces que usam os chamadores para acessar dados. O <xref:System.Web.UI.DataSourceControl> classe é a interface que os desenvolvedores de página interagem com diretamente ao desenvolver uma página de Web Forms, e o <xref:System.Web.UI.DataSourceView> classe é a interface que os autores de controle associado a dados e controles associados a dados interagem com o. Porque o <xref:System.Web.UI.DataSourceView> objeto está disponível somente em tempo de execução, qualquer estado persistente para o controle de fonte de dados ou exibição da fonte de dados deve ser exposta diretamente pelo controle de fonte de dados.  
  
 Não há nenhum processamento visual de controles de fonte de dados do ASP.NET; eles são implementados como controles que você possa criar declarativamente e, opcionalmente, permitir que eles participam do gerenciamento de estado. Como resultado, os controles de fonte de dados não dão suporte a recursos visuais como <xref:System.Web.UI.DataSourceControl.EnableTheming%2A> ou <xref:System.Web.UI.DataSourceControl.SkinID%2A>.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como uma classe pode estender o <xref:System.Web.UI.DataSourceControl> classe. O `CsvDataSource` controle representa dados de arquivo delimitado por vírgula armazenados em um arquivo. csv. O `CsvDataSource` classe fornece suas próprias implementações do <xref:System.Web.UI.DataSourceControl.GetView%2A>, <xref:System.Web.UI.DataSourceControl.GetViewNames%2A>e outros métodos, porque as implementações de classe base não são funcionais.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#1)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#1)]  
  
 O exemplo de código a seguir demonstra como usar o `CsvDataSource` controle em um formulário da Web.  
  
 [!code-aspx-csharp[Urtue.Samples.Alexkr.CsvDataSource_1_webform#50](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1_webform/CS/webform6cs.aspx#50)]
 [!code-aspx-vb[Urtue.Samples.Alexkr.CsvDataSource_1_webform#50](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1_webform/VB/webform6vb.aspx#50)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.IDataSource" />
    <altmember cref="T:System.Web.UI.DataSourceView" />
    <altmember cref="T:System.Web.UI.WebControls.DataBoundControl" />
    <altmember cref="T:System.Web.UI.HierarchicalDataSourceControl" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DataSourceControl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DataSourceControl();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.UI.DataSourceControl" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyStyleSheetSkin">
      <MemberSignature Language="C#" Value="public override void ApplyStyleSheetSkin (System.Web.UI.Page page);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ApplyStyleSheetSkin(class System.Web.UI.Page page) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.ApplyStyleSheetSkin(System.Web.UI.Page)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ApplyStyleSheetSkin(System::Web::UI::Page ^ page);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
      </Parameters>
      <Docs>
        <param name="page">O <see cref="T:System.Web.UI.Page" /> que contém o controle.</param>
        <summary>Aplica as propriedades de estilo definidas na folha de estilos da página ao controle.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientID">
      <MemberSignature Language="C#" Value="public override string ClientID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceControl.ClientID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ClientID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ClientID { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o identificador de controle de servidor gerado pelo ASP.NET.</summary>
        <value>O identificador de controle de servidor gerado pelo ASP.NET.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientIDMode">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ClientIDMode ClientIDMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ClientIDMode ClientIDMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceControl.ClientIDMode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ClientIDMode As ClientIDMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ClientIDMode ClientIDMode { System::Web::UI::ClientIDMode get(); void set(System::Web::UI::ClientIDMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ClientIDMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Essa propriedade não é usada para controles de fonte de dados.</summary>
        <value>Essa propriedade não é usada para controles de fonte de dados.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa propriedade do <xref:System.Web.UI.Control> classe base não é usada para controles de fonte de dados porque os controles de fonte de dados não renderizar a marcação.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Foi feita uma tentativa de definir essa propriedade.</exception>
        <altmember cref="P:System.Web.UI.Control.ClientIDMode" />
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceControl.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um objeto <see cref="T:System.Web.UI.ControlCollection" /> que representa os controles filho para um controle de servidor especificado na hierarquia de interface do usuário.</summary>
        <value>A coleção de controles filho para o controle de servidor especificado.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cria uma coleção para armazenar controles filho.</summary>
        <returns>Retorna um <see cref="T:System.Web.UI.EmptyControlCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Porque os controles de fonte de dados não permite controles filho, o <xref:System.Web.UI.DataSourceControl> implementação do padrão da classe não oferece suporte a inserção de controles filho.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.EmptyControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceControl.EnableTheming" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EnableTheming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableTheming { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se esse controle dá suporte a temas.</summary>
        <value>
          <see langword="false" /> em todos os casos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Porque o <xref:System.Web.UI.DataSourceControl> controle não tem nenhum processamento visual, ele não oferece suporte a temas.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Foi feita uma tentativa de definir o valor da propriedade <see cref="P:System.Web.UI.DataSourceControl.EnableTheming" />.</exception>
        <altmember cref="P:System.Web.UI.DataSourceControl.SkinID" />
        <altmember cref="P:System.Web.UI.DataSourceControl.Visible" />
      </Docs>
    </Member>
    <Member MemberName="FindControl">
      <MemberSignature Language="C#" Value="public override System.Web.UI.Control FindControl (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.Control FindControl(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.FindControl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindControl (id As String) As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::UI::Control ^ FindControl(System::String ^ id);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">O identificador do controle a ser encontrado.</param>
        <summary>Procura o atual contêiner de nomenclatura de um controle de servidor com o parâmetro <paramref name="id" /> especificado.</summary>
        <returns>O controle especificado, ou <see langword="null" />, se o controle especificado não existir.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public override void Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Focus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Focus();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Define o foco de entrada para o controle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Porque o <xref:System.Web.UI.DataSourceControl> nenhum visual do controle tem de renderização, chamando o <xref:System.Web.UI.DataSourceControl.Focus%2A> método lança um <xref:System.NotSupportedException> exceção.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Foi feita uma tentativa de chamar o método <see cref="M:System.Web.UI.DataSourceControl.Focus" />.</exception>
        <altmember cref="P:System.Web.UI.DataSourceControl.Visible" />
      </Docs>
    </Member>
    <Member MemberName="GetView">
      <MemberSignature Language="C#" Value="protected abstract System.Web.UI.DataSourceView GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.DataSourceView GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetView (viewName As String) As DataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Web::UI::DataSourceView ^ GetView(System::String ^ viewName);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IDataSource.GetView(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">O nome do <see cref="T:System.Web.UI.DataSourceView" /> a ser recuperado. Em controles de fonte de dados que dão suporte apenas a uma exibição, como <see cref="T:System.Web.UI.WebControls.SqlDataSource" />, esse parâmetro é ignorado.</param>
        <summary>Obtém a exibição de fonte de dados nomeada associada ao controle de fonte de dados.</summary>
        <returns>Retorna o <see cref="T:System.Web.UI.DataSourceView" /> nomeado associado a <see cref="T:System.Web.UI.DataSourceControl" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode enumerar o conjunto de modos de exibição associada atualmente com o controle de fonte de dados chamando o <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> método.  
  
 Classes de controle de fonte de dados podem dar suporte a uma ou mais exibições em seus dados subjacentes. Essas exibições são representadas por instâncias de <xref:System.Web.UI.DataSourceView> classe. O modo de exibição de fonte de dados define os recursos de um controle de fonte de dados, faz todo o trabalho necessário para recuperar dados de armazenamento de dados subjacente e executa operações como classificação, inserção, exclusão e atualização.  
  
> [!NOTE]
>  O <xref:System.Web.UI.DataSourceControl> retorna da implementação do padrão da classe `null`. Se você estender o <xref:System.Web.UI.DataSourceControl> classe, substitua o <xref:System.Web.UI.DataSourceControl.GetView%2A> método para retornar especificado <xref:System.Web.UI.DataSourceView> objeto.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como uma classe de controle de fonte de dados que estende o <xref:System.Web.UI.DataSourceControl> classe implementa o <xref:System.Web.UI.IDataSource.GetView%2A> método, retornar uma instância com rigidez de tipos do <xref:System.Web.UI.DataSourceView> classe. Como o controle de fonte de dados oferece suporte a apenas um modo de exibição, ele ignora o nome e retorna uma exibição nomeada com o nome de exibição padrão. Este exemplo de código é parte de um exemplo maior fornecido para a <xref:System.Web.UI.DataSourceControl> classe.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#3)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceControl.GetViewNames" />
      </Docs>
    </Member>
    <Member MemberName="GetViewNames">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.ICollection GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.ICollection GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetViewNames () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::ICollection ^ GetViewNames();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IDataSource.GetViewNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtém uma coleção de nomes, que representa a lista de objetos <see cref="T:System.Web.UI.DataSourceView" /> associados ao controle <see cref="T:System.Web.UI.DataSourceControl" />.</summary>
        <returns>Uma <see cref="T:System.Collections.ICollection" /> que contém os nomes dos objetos <see cref="T:System.Web.UI.DataSourceView" /> associados ao <see cref="T:System.Web.UI.DataSourceControl" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Collections.ICollection> coleção de nomes é o conjunto permitido de valores que podem ser passados para o <xref:System.Web.UI.DataSourceControl.GetView%2A> método.  
  
 O <xref:System.Web.UI.ListSourceHelper> classe, que é usada para o <xref:System.Web.UI.DataSourceControl> da classe <xref:System.ComponentModel.IListSource> implementação, verifica o <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> método para ambos os <xref:System.Web.UI.DataSourceControl.System%23ComponentModel%23IListSource%23ContainsListCollection%2A> e <xref:System.Web.UI.DataSourceControl.System%23ComponentModel%23IListSource%23GetList%2A> chamadas para determinar se o controle de fonte de dados está associado a dados de uma ou mais exibições da fonte. Se <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> retorna `null`, que é a implementação padrão do método, <xref:System.Web.UI.DataSourceControl.System%23ComponentModel%23IListSource%23ContainsListCollection%2A> retorna `false` e <xref:System.Web.UI.DataSourceControl.System%23ComponentModel%23IListSource%23GetList%2A> retorna `null`.  
  
> [!NOTE]
>  O <xref:System.Web.UI.DataSourceControl> retorna da implementação do padrão da classe `null`. Se você estender o <xref:System.Web.UI.DataSourceControl> classe, substitua o <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> método para retornar uma coleção de nomes de exibição.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como uma classe que estende o <xref:System.Web.UI.DataSourceControl> classe pode substituir a implementação padrão, que retorna `null`, para fornecer uma coleção de nomes de exibição. O `CsvDataSource` classe só dá suporte a um modo de exibição; portanto, uma coleção de um elemento com o nome de exibição padrão é retornada. Este exemplo de código é parte de um exemplo maior fornecido para a <xref:System.Web.UI.DataSourceControl> classe.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#4)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceControl.GetView(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="HasControls">
      <MemberSignature Language="C#" Value="public override bool HasControls ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool HasControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.HasControls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function HasControls () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool HasControls();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Determina se o controle de servidor contém algum controle filho.</summary>
        <returns>
          <see langword="true" /> se o controle contiver outros controles; caso contrário, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseDataSourceChangedEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaiseDataSourceChangedEvent (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaiseDataSourceChangedEvent(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaiseDataSourceChangedEvent (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaiseDataSourceChangedEvent(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.EventArgs" /> que contém dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Web.UI.IDataSource.DataSourceChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent%2A> método notifica um controle associado a dados que a fonte de dados subjacente ou os dados armazenados em cache na memória foi alterado, e que o controle deve associar novamente e executar qualquer trabalho adicional necessário. Normalmente, o <xref:System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent%2A> método é chamado quando uma propriedade de controle de fonte de dados ou um valor de parâmetro foi alterado.  
  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como chamar o <xref:System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent%2A> controles associados de método quando seus dados subjacentes ou uma fonte de dados foi alterado de forma que pode afetar qualquer. Neste exemplo, um controle de fonte de dados com base em arquivo que estende o <xref:System.Web.UI.DataSourceControl> classe gera o <xref:System.Web.UI.IDataSource.DataSourceChanged> evento chamando <xref:System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent%2A> qualquer momento o `FileName` propriedade é alterada.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#1)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao substituir <see cref="M:System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent(System.EventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent(System.EventArgs)" /> método para que registrado delegados receber o evento.</para>
        </block>
        <altmember cref="E:System.Web.UI.IDataSource.DataSourceChanged" />
      </Docs>
    </Member>
    <Member MemberName="RenderControl">
      <MemberSignature Language="C#" Value="public override void RenderControl (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderControl(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.RenderControl(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderControl (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderControl(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">O objeto <see cref="T:System.Web.UI.HtmlTextWriter" /> que recebe o conteúdo do controle.</param>
        <summary>Gera o conteúdo do controle de servidor para um objeto <see cref="T:System.Web.UI.HtmlTextWriter" /> fornecido e armazena informações de rastreamento sobre o controle caso o rastreamento esteja habilitado.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SkinID">
      <MemberSignature Language="C#" Value="public override string SkinID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkinID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceControl.SkinID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SkinID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SkinID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a capa a ser aplicada ao controle <see cref="T:System.Web.UI.DataSourceControl" />.</summary>
        <value>
          <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Porque o <xref:System.Web.UI.DataSourceControl> controle não possui nenhum processamento visual, não é possível definir o <xref:System.Web.UI.DataSourceControl.SkinID%2A> propriedade.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Foi feita uma tentativa de definir o valor da propriedade <see cref="P:System.Web.UI.DataSourceControl.SkinID" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.ContainsListCollection">
      <MemberSignature Language="C#" Value="bool System.ComponentModel.IListSource.ContainsListCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceControl.System#ComponentModel#IListSource#ContainsListCollection" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ContainsListCollection As Boolean Implements IListSource.ContainsListCollection" />
      <MemberSignature Language="C++ CLI" Value="property bool System.ComponentModel.IListSource.ContainsListCollection { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indica se o controle de fonte de dados está associado a uma ou mais listas de dados.</summary>
        <value>
          <see langword="true" /> Se o <see cref="T:System.Web.UI.DataSourceControl" /> está associado um ou mais <see cref="T:System.Web.UI.DataSourceView" /> objetos; caso contrário, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa propriedade é usada para determinar se o objeto atual pode ser usado como uma fonte de uma ou mais listas de dados. Controles de fonte de dados encapsulam suas listas de dados como <xref:System.Web.UI.DataSourceView> objetos; portanto, quando associada a um ou mais <xref:System.Web.UI.DataSourceView> objetos, uma <xref:System.Web.UI.DataSourceControl> controle representa um objeto da lista de origem e a propriedade retorna `true`.  
  
 Esta propriedade chama estático <xref:System.Web.UI.ListSourceHelper.ContainsListCollection%2A?displayProperty=nameWithType> método para determinar se os dados atuais da fonte de controle pode ser usado como uma fonte de dados. O <xref:System.Web.UI.ListSourceHelper> classe determina se o <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> método retorna um conjunto válido de nomes de exibição. Se isso acontecer, essa propriedade retornará `true`. Se <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> retorna `null`, que é a implementação padrão da <xref:System.Web.UI.DataSourceControl> de classe, o método retornará `false`.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceControl.System#ComponentModel#IListSource#GetList" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.GetList">
      <MemberSignature Language="C#" Value="System.Collections.IList IListSource.GetList ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IList System.ComponentModel.IListSource.GetList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.System#ComponentModel#IListSource#GetList" />
      <MemberSignature Language="VB.NET" Value="Function GetList () As IList Implements IListSource.GetList" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IList ^ System.ComponentModel.IListSource.GetList() = System::ComponentModel::IListSource::GetList;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtém uma lista de controles de fonte de dados que podem ser usados como fontes de listas de dados.</summary>
        <returns>Uma <see cref="T:System.Collections.IList" /> de controles de fonte de dados que podem ser usados como fontes de listas de dados.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método é usado para recuperar um conjunto de objetos que podem ser usados como fontes de dados. Controles de fonte de dados encapsulam suas listas de dados como <xref:System.Web.UI.DataSourceView> objetos; portanto, quando associada a um ou mais <xref:System.Web.UI.DataSourceView> objetos, uma <xref:System.Web.UI.DataSourceControl> controle representa um objeto da lista de origem e o método retorna um <xref:System.Collections.IList> coleção de um elemento, o <xref:System.Web.UI.DataSourceControl> em si.  
  
 Este método chama estático <xref:System.Web.UI.ListSourceHelper.GetList%2A?displayProperty=nameWithType> método para recuperar um <xref:System.Collections.IList> coleção de objetos que podem ser usados como fontes de dados. O <xref:System.Web.UI.ListSourceHelper> classe determina se <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> retorna um conjunto válido de nomes de exibição. Se isso acontecer, o <xref:System.Web.UI.ListSourceHelper> classe retorna uma <xref:System.Collections.IList> coleção de um elemento, o <xref:System.Web.UI.DataSourceControl> controle. Se <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> retorna `null`, que é a implementação padrão da <xref:System.Web.UI.DataSourceControl> classe, o <xref:System.Web.UI.ListSourceHelper> classe também retorna `null`.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceControl.System#ComponentModel#IListSource#ContainsListCollection" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataSource.DataSourceChanged">
      <MemberSignature Language="C#" Value="event EventHandler System.Web.UI.IDataSource.DataSourceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler System.Web.UI.IDataSource.DataSourceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.DataSourceControl.System#Web#UI#IDataSource#DataSourceChanged" />
      <MemberSignature Language="VB.NET" Value="Custom Event DataSourceChanged As EventHandler Implements System.Web.UI.IDataSource" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.UI.IDataSource.DataSourceChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataSource.GetView">
      <MemberSignature Language="C#" Value="System.Web.UI.DataSourceView IDataSource.GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Web.UI.DataSourceView System.Web.UI.IDataSource.GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.System#Web#UI#IDataSource#GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetView (viewName As String) As DataSourceView Implements IDataSource.GetView" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Web::UI::DataSourceView ^ System.Web.UI.IDataSource.GetView(System::String ^ viewName) = System::Web::UI::IDataSource::GetView;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IDataSource.GetView(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">O nome do <see cref="T:System.Web.UI.DataSourceView" /> a ser recuperado. Em controles de fonte de dados que dão suporte apenas a uma exibição, como <see cref="T:System.Web.UI.WebControls.SqlDataSource" />, esse parâmetro é ignorado.</param>
        <summary>Obtém um objeto <see cref="T:System.Web.UI.DataSourceView" /> nomeado associado ao controle <see cref="T:System.Web.UI.DataSourceControl" />. Alguns controles de fonte de dados dão suporte a apenas uma exibição, enquanto outros dão suporte a mais de uma.</summary>
        <returns>Retorna o <see cref="T:System.Web.UI.DataSourceView" /> nomeado associado a <see cref="T:System.Web.UI.DataSourceControl" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O `viewName` parâmetro é ignorado quando esse método é chamado em controles de fonte de dados que oferecem suporte a apenas um modo de exibição, como o <xref:System.Web.UI.WebControls.SqlDataSource> e <xref:System.Web.UI.WebControls.AccessDataSource> controles.  
  
> [!NOTE]
>  O <xref:System.Web.UI.DataSourceControl> implementação padrão da classe, o que é chamada por esse método de interface, retorna `null`. Se você estender o <xref:System.Web.UI.DataSourceControl> classe, substitua o <xref:System.Web.UI.DataSourceControl.GetView%2A> método para retornar especificado <xref:System.Web.UI.DataSourceView> objeto.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="viewName" /> é <see langword="null" />.</exception>
        <altmember cref="M:System.Web.UI.DataSourceControl.GetViewNames" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataSource.GetViewNames">
      <MemberSignature Language="C#" Value="System.Collections.ICollection IDataSource.GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.ICollection System.Web.UI.IDataSource.GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.System#Web#UI#IDataSource#GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Function GetViewNames () As ICollection Implements IDataSource.GetViewNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::ICollection ^ System.Web.UI.IDataSource.GetViewNames() = System::Web::UI::IDataSource::GetViewNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IDataSource.GetViewNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtém uma coleção de nomes, que representa a lista de objetos <see cref="T:System.Web.UI.DataSourceView" /> associados ao controle <see cref="T:System.Web.UI.DataSourceControl" />.</summary>
        <returns>Uma <see cref="T:System.Collections.ICollection" /> que contém os nomes dos objetos <see cref="T:System.Web.UI.DataSourceView" /> associados ao <see cref="T:System.Web.UI.DataSourceControl" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  O <xref:System.Web.UI.DataSourceControl> implementação padrão da classe, o que é chamada por esse método de interface, retorna `null`, há suporte para a qual indica que apenas um modo de exibição. Se você estender o <xref:System.Web.UI.DataSourceControl> classe, substitua o <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> método para retornar uma coleção de nomes de exibição. Um nome pode ser passado para o <xref:System.Web.UI.DataSourceControl.GetView%2A> método para retornar um <xref:System.Web.UI.DataSourceView> objeto.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceControl.GetView(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public override bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceControl.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor indicando se o controle é exibido visualmente.</summary>
        <value>Sempre <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Porque o <xref:System.Web.UI.DataSourceControl> controle não possui nenhum processamento visual, o <xref:System.Web.UI.DataSourceControl.Visible%2A> propriedade sempre retorna `false`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Foi feita uma tentativa de definir o valor da propriedade <see cref="P:System.Web.UI.DataSourceControl.Visible" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>