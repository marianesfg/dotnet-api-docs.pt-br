<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ClientScriptManager.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-81070f4" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1e344e59-9d8e-481b-978a-09f2e01be86ce19ff5181caa07c458ad6ff38334f4d37a7d0917.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e19ff5181caa07c458ad6ff38334f4d37a7d0917</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f9e3295b6cc303a611a73a84c4b27f9da792ad0d</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/26/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.UI.ClientScriptManager">
          <source>Defines methods for managing client scripts in Web applications.</source>
          <target state="translated">Define métodos para gerenciar scripts de cliente em aplicativos Web.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ClientScriptManager">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager&gt;</ph> class is used to manage client scripts and add them to Web applications.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager&gt;</ph> classe é usada para gerenciar scripts de cliente e adicioná-las aos aplicativos da Web.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ClientScriptManager">
          <source>You can get a reference to the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager&gt;</ph> class from the <ph id="ph2">&lt;xref:System.Web.UI.Page.ClientScript%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Web.UI.Page&gt;</ph> object.</source>
          <target state="translated">Você pode obter uma referência para o <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager&gt;</ph> classe o <ph id="ph2">&lt;xref:System.Web.UI.Page.ClientScript%2A&gt;</ph> propriedade do <ph id="ph3">&lt;xref:System.Web.UI.Page&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ClientScriptManager">
          <source>You can add a client script to a Web page declaratively by including the script in the HTML markup of the page.</source>
          <target state="translated">Você pode adicionar um script de cliente para uma página da Web declarativamente, incluindo o script na marcação HTML da página.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ClientScriptManager">
          <source>However, there are situations when adding client script dynamically is needed.</source>
          <target state="translated">No entanto, há situações quando adicionar o script de cliente dinamicamente é necessária.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ClientScriptManager">
          <source>To add a script dynamically, use the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A&gt;</ph> method, the <ph id="ph3">&lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt;</ph> method, or the <ph id="ph4">&lt;xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A&gt;</ph> method, depending on when and how you want to add the script.</source>
          <target state="translated">Para adicionar um script dinamicamente, use o <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;</ph> método, o <ph id="ph2">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A&gt;</ph> método, o <ph id="ph3">&lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt;</ph> método, ou o <ph id="ph4">&lt;xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A&gt;</ph> método, dependendo de quando e como você deseja adicionar o script.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ClientScriptManager">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Add Client Script Dynamically to ASP.NET Web Pages<ept id="p1">](http://msdn.microsoft.com/library/e89f1306-e43d-49ae-a66a-e18b71007666)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>como: Adicionar cliente Script dinamicamente para páginas da Web do ASP.NET<ept id="p1">](http://msdn.microsoft.com/library/e89f1306-e43d-49ae-a66a-e18b71007666)</ept>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ClientScriptManager">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager&gt;</ph> class uniquely identifies scripts by a key <ph id="ph2">&lt;xref:System.String&gt;</ph> and a <ph id="ph3">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager&gt;</ph> classe scripts identifica exclusivamente por uma chave <ph id="ph2">&lt;xref:System.String&gt;</ph> e um <ph id="ph3">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ClientScriptManager">
          <source>Scripts with the same key and type are considered duplicates.</source>
          <target state="translated">Scripts com a mesma chave e tipo são considerados duplicatas.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ClientScriptManager">
          <source>Using the script type helps to avoid confusing similar scripts from different user controls that might be in use on the page.</source>
          <target state="translated">Usar o tipo de script ajuda a evitar confusos scripts semelhantes de controles de usuário diferentes que podem estar em uso na página.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ClientScriptManager">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager&gt;</ph> class can be used to invoke client callbacks in situations when it is desirable to run server code from the client without performing a postback.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager&gt;</ph> classe pode ser usada para invocar retornos de chamada de cliente em situações, é necessário para executar o código do servidor do cliente sem executar um postback.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ClientScriptManager">
          <source>This is referred to as performing an out-of-band callback to the server.</source>
          <target state="translated">Isso é conhecido como executar um retorno de chamada fora de banda para o servidor.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ClientScriptManager">
          <source>In a client callback, a client script function sends an asynchronous request to an ASP.NET Web page.</source>
          <target state="translated">Em um retorno de chamada do cliente, uma função de script de cliente envia uma solicitação assíncrona para uma página da Web do ASP.NET.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ClientScriptManager">
          <source>The Web page runs a modified version of its normal life cycle to process the callback.</source>
          <target state="translated">A página da Web executa uma versão modificada do seu ciclo de vida normal para processar o retorno de chamada.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ClientScriptManager">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;</ph> method to obtain a reference to a client function that, when invoked, initiates a client callback to a server event.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;</ph> método para obter uma referência a uma função de cliente que, quando chamado, inicia um retorno de chamada do cliente para um evento de servidor.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ClientScriptManager">
          <source>For more information, see <bpt id="p1">[</bpt>Implementing Client Callbacks Without Postbacks<ept id="p1">](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>implementando retornos de chamada de cliente sem Postbacks<ept id="p1">](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185)</ept>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ClientScriptManager">
          <source>Script callbacks will not work in older browsers that do not support the Document Object Model (DOM), and they require that ECMAScript is enabled on the client.</source>
          <target state="translated">Retornos de chamada de script não funcionará em navegadores mais antigos que não oferecem suporte para o modelo de objeto de documento (DOM), e eles requerem que ECMAScript está habilitado no cliente.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ClientScriptManager">
          <source>To check if the browser supports callbacks, use the <ph id="ph1">&lt;xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A&gt;</ph> property, which is accessible through the <ph id="ph2">&lt;xref:System.Web.HttpRequest.Browser%2A&gt;</ph> property of the ASP.NET intrinsic <ph id="ph3">&lt;xref:System.Web.HttpContext.Request%2A&gt;</ph> object.</source>
          <target state="translated">Para verificar se o navegador oferece suporte a retornos de chamada, use o <ph id="ph1">&lt;xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A&gt;</ph> propriedade, o que pode ser acessada por meio de <ph id="ph2">&lt;xref:System.Web.HttpRequest.Browser%2A&gt;</ph> propriedade do ASP.NET intrínseco <ph id="ph3">&lt;xref:System.Web.HttpContext.Request%2A&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ClientScriptManager">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A&gt;</ph> method to define a client postback event.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;</ph> método e o <ph id="ph2">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A&gt;</ph> método para definir um evento de postback do cliente.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ClientScriptManager">
          <source>These methods enable client script functions, when invoked, to cause the server to post back to the page.</source>
          <target state="translated">Esses métodos permitem que as funções de script de cliente, quando chamado, para fazer com que o servidor de volta para a página.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ClientScriptManager">
          <source>A client postback event is different from a client callback in that the Web page completes a normal life cycle to process the client postback event.</source>
          <target state="translated">Um evento de postback do cliente é diferente de um retorno de chamada do cliente em que a página da Web concluir um ciclo de vida normal para processar o evento de postback do cliente.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ClientScriptManager">
          <source>If you are using a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control and the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A&gt;</ph> property is set to <ph id="ph3">`false`</ph>, then you can use the <ph id="ph4">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;</ph> method to return the client postback event for the <ph id="ph5">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control.</source>
          <target state="translated">Se você estiver usando um <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> controle e o <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A&gt;</ph> está definida como <ph id="ph3">`false`</ph>, em seguida, você pode usar o <ph id="ph4">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;</ph> evento de postback de método para retornar o cliente o <ph id="ph5">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> controle.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ClientScriptManager">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button.OnClientClick%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ImageButton&gt;</ph> control, and <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinkButton&gt;</ph> control can be used to run client script.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button.OnClientClick%2A&gt;</ph> propriedade o <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> controle, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ImageButton&gt;</ph> controle, e <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinkButton&gt;</ph> controle pode ser usado para executar o script de cliente.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ClientScriptManager">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Web.UI.ClientScriptManager&gt;</ph> class.</source>
          <target state="translated">O exemplo de código a seguir demonstra o uso do <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;</ph> método o <ph id="ph2">&lt;xref:System.Web.UI.ClientScriptManager&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ClientScriptManager">
          <source>Two client scripts are defined in the page: <ph id="ph1">`PopupScript`</ph>, which displays an alert message when the page is loaded, and <ph id="ph2">`ButtonClickScript`</ph>, which defines a client handler for an HTML button's <ph id="ph3">`onClick`</ph> event.</source>
          <target state="translated">Dois scripts de cliente são definidas na página: <ph id="ph1">`PopupScript`</ph>, que exibe uma mensagem de alerta quando a página for carregada, e <ph id="ph2">`ButtonClickScript`</ph>, que define um manipulador de cliente para um botão HTML <ph id="ph3">`onClick`</ph> eventos.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="T:System.Web.UI.ClientScriptManager">
          <source>Obtains a reference to a client function that, when invoked, initiates a client call back to a server event.</source>
          <target state="translated">Obtém uma referência a uma função de cliente que, quando invocada, inicia um retorno de chamada do cliente para um evento de servidor.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>The server <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> that handles the client callback.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> do servidor que manipula o retorno de chamada do cliente.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>The control must implement the <ph id="ph1">&lt;see cref="T:System.Web.UI.ICallbackEventHandler" /&gt;</ph> interface and provide a <ph id="ph2">&lt;see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /&gt;</ph> method.</source>
          <target state="translated">O controle deve implementar a interface <ph id="ph1">&lt;see cref="T:System.Web.UI.ICallbackEventHandler" /&gt;</ph> e fornecer um método <ph id="ph2">&lt;see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>An argument passed from the client script to the server</source>
          <target state="translated">Um argumento passado do script de cliente para o servidor</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source><ph id="ph1">&lt;see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /&gt;</ph> method.</source>
          <target state="translated">Método <ph id="ph1">&lt;see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>The name of the client event handler that receives the result of the successful server event.</source>
          <target state="translated">O nome do manipulador de eventos do cliente que recebe o resultado do evento do servidor com êxito.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>The client script that is evaluated on the client prior to initiating the callback.</source>
          <target state="translated">O script de cliente avaliado no cliente antes de iniciar o retorno de chamada.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>The result of the script is passed back to the client event handler.</source>
          <target state="translated">O resultado do script é passado de volta para o manipulador de eventos do cliente.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>Obtains a reference to a client function that, when invoked, initiates a client call back to a server event.</source>
          <target state="translated">Obtém uma referência a uma função de cliente que, quando invocada, inicia um retorno de chamada do cliente para um evento de servidor.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>The client function for this overloaded method includes a specified control, argument, client script, and context.</source>
          <target state="translated">A função do cliente para esse método sobrecarregado inclui um controle, argumento, script de cliente e contexto especificados.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>The name of a client function that invokes the client callback.</source>
          <target state="translated">O nome de uma função de cliente que invoca o retorno de chamada do cliente.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%28System.Web.UI.Control%2CSystem.String%2CSystem.String%2CSystem.String%29&gt;</ph> method performs an out-of-band callback to the server that is a modified version of a page's normal life cycle.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%28System.Web.UI.Control%2CSystem.String%2CSystem.String%2CSystem.String%29&gt;</ph> método executa um retorno de chamada fora de banda para o servidor que é uma versão modificada do ciclo de vida normal de uma página.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>For more information, see <bpt id="p1">[</bpt>Implementing Client Callbacks Without Postbacks<ept id="p1">](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>implementando retornos de chamada de cliente sem Postbacks<ept id="p1">](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185)</ept>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>When the browser is Microsoft Internet Explorer (version 5.0 or later), the script callback mechanism is implemented through the Microsoft.XmlHttp COM object and requires the browser to be set to run ActiveX controls.</source>
          <target state="translated">Quando o navegador for o Microsoft Internet Explorer (versão 5.0 ou posterior), o mecanismo de retorno de chamada de script é implementado por meio do objeto Microsoft.XmlHttp COM e requer que o navegador ser definida para executar controles ActiveX.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>For other browsers, an XMLHttpRequest using the browser's local Document Object Model (DOM) is used.</source>
          <target state="translated">Para outros navegadores, uma XMLHttpRequest usando local DOM do navegador Document Object Model () é usada.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>To check whether a browser supports client callbacks, use the <ph id="ph1">&lt;xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A&gt;</ph> property.</source>
          <target state="translated">Para verificar se um navegador oferece suporte a retornos de chamada de cliente, use o <ph id="ph1">&lt;xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>To check whether a browser supports XML over HTTP, use the <ph id="ph1">&lt;xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp%2A&gt;</ph> property.</source>
          <target state="translated">Para verificar se um navegador oferece suporte a XML sobre HTTP, use o <ph id="ph1">&lt;xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>Both properties are accessible through the <ph id="ph1">&lt;xref:System.Web.HttpRequest.Browser%2A&gt;</ph> property of the intrinsic ASP.NET <ph id="ph2">&lt;xref:System.Web.HttpContext.Request%2A&gt;</ph> object.</source>
          <target state="translated">Ambas as propriedades são acessíveis por meio de <ph id="ph1">&lt;xref:System.Web.HttpRequest.Browser%2A&gt;</ph> propriedade do ASP.NET intrínseco <ph id="ph2">&lt;xref:System.Web.HttpContext.Request%2A&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;</ph> method performs a callback synchronously using XML over HTTP.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;</ph> de sobrecarga do <ph id="ph2">&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;</ph> método executa um retorno de chamada de maneira síncrona usando XML sobre HTTP.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>When sending data synchronously in a callback scenario, synchronous callbacks return immediately and do not block the browser.</source>
          <target state="translated">Ao enviar dados de forma síncrona em um cenário de retorno de chamada, retornos de chamada síncronos retornam imediatamente e não bloqueiam o navegador.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>No two synchronous callbacks callback can execute at the same time in the browser.</source>
          <target state="translated">Nenhum retorno de chamada de dois retornos de chamada síncrona pode executar ao mesmo tempo no navegador.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>If a second synchronous callback is fired while one is currently pending, the second synchronous callback cancels the first and only the second callback will return.</source>
          <target state="translated">Se um retorno de chamada síncrono segundo for acionado enquanto um está pendente no momento, o retorno de chamada síncrono segundo cancela a primeira e retornará apenas o retorno de chamada segundo.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>To send data asynchronously, use one of the overloads that takes the <ph id="ph1">`useAsync`</ph> parameter, which is a Boolean value controlling this behavior.</source>
          <target state="translated">Para enviar dados de forma assíncrona, use uma das sobrecargas que usa o <ph id="ph1">`useAsync`</ph> parâmetro, que é um valor booleano valor controlar esse comportamento.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>In the asynchronous scenario you can have multiple pending callbacks; however, the order in which they return is not guaranteed to match the order in which they were initiated.</source>
          <target state="translated">No cenário assíncrono, você pode ter vários retornos de chamada pendentes; No entanto, a ordem em que elas retornam não é garantida para corresponder à ordem na qual elas foram iniciadas.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>Additionally, this overload of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;</ph> method specifies no client function to handle the case of an error condition generated by the <ph id="ph2">&lt;xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A&gt;</ph> method.</source>
          <target state="translated">Além disso, essa sobrecarga do <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;</ph> método não especifica nenhuma função de cliente para lidar com o caso de uma condição de erro gerado pelo <ph id="ph2">&lt;xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>To specify a client error callback handler, use one of the overloads that takes the <ph id="ph1">`clientErrorCallback`</ph> parameter.</source>
          <target state="translated">Para especificar um manipulador de retorno de chamada de erro do cliente, use uma das sobrecargas que usa o <ph id="ph1">`clientErrorCallback`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%28System.Web.UI.Control%2CSystem.String%2CSystem.String%2CSystem.String%29&gt;</ph> method takes an optional string <ph id="ph2">`argument`</ph> parameter and returns a string.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%28System.Web.UI.Control%2CSystem.String%2CSystem.String%2CSystem.String%29&gt;</ph> método usa uma cadeia de caracteres opcional <ph id="ph2">`argument`</ph> parâmetro e retorna uma cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>To pass in or to receive multiple values, concatenate values in the input or return string, respectively.</source>
          <target state="translated">Para passar ou receber vários valores, concatenar os valores na entrada ou retornar a cadeia de caracteres, respectivamente.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>Avoid using the view state in the implementation of page or control properties that need be updated during script callback operations.</source>
          <target state="translated">Evite usar o estado de exibição na implementação de controle ou página de propriedades que precisam ser atualizados durante operações de retorno de chamada de script.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>If the properties are to survive page requests, you can use session state.</source>
          <target state="translated">Se as propriedades são sobreviver a solicitações de página, você pode usar o estado da sessão.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>The following code example demonstrates how to use two overloads of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;</ph> method in a client callback scenario that increments integers.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar duas sobrecargas do <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;</ph> método em um cenário de retorno de chamada de cliente com incrementos de números inteiros.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>Two callback mechanisms are shown; the difference between them is the use of the <ph id="ph1">`context`</ph> parameter.</source>
          <target state="translated">Dois mecanismos de retorno de chamada são mostrados; a diferença entre eles é o uso do <ph id="ph1">`context`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>A <ph id="ph1">`ReceiveServerData1`</ph> client callback function is provided using the <ph id="ph2">`context`</ph> parameter.</source>
          <target state="translated">Um <ph id="ph1">`ReceiveServerData1`</ph> função de retorno de chamada do cliente é fornecida usando o <ph id="ph2">`context`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>In contrast, the <ph id="ph1">`ReceiveServerData2`</ph> client callback function is defined in a <ph id="ph2">`&lt;script&gt;`</ph> block on the page.</source>
          <target state="translated">Em contraste, o <ph id="ph1">`ReceiveServerData2`</ph> função de retorno de chamada do cliente é definida em um <ph id="ph2">`&lt;script&gt;`</ph> bloco na página.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>A <ph id="ph1">&lt;xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A&gt;</ph> method is the server handler that increments the value that is passed to it and the <ph id="ph2">&lt;xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A&gt;</ph> method returns the incremented value as a string.</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A&gt;</ph> método é o manipulador de servidor que incrementa o valor que é passado para ele e o <ph id="ph2">&lt;xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A&gt;</ph> método retorna o valor incrementado como uma cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A&gt;</ph> method returns an error, then the <ph id="ph2">`ProcessCallBackError`</ph> client function is called.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A&gt;</ph> método retornará um erro, o <ph id="ph2">`ProcessCallBackError`</ph> é chamada de função de cliente.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> specified is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> especificado é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> specified does not implement the <ph id="ph2">&lt;see cref="T:System.Web.UI.ICallbackEventHandler" /&gt;</ph> interface.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> especificado não implementa a interface <ph id="ph2">&lt;see cref="T:System.Web.UI.ICallbackEventHandler" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)">
          <source>The server <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> that handles the client callback.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> do servidor que manipula o retorno de chamada do cliente.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)">
          <source>The control must implement the <ph id="ph1">&lt;see cref="T:System.Web.UI.ICallbackEventHandler" /&gt;</ph> interface and provide a <ph id="ph2">&lt;see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /&gt;</ph> method.</source>
          <target state="translated">O controle deve implementar a interface <ph id="ph1">&lt;see cref="T:System.Web.UI.ICallbackEventHandler" /&gt;</ph> e fornecer um método <ph id="ph2">&lt;see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)">
          <source>An argument passed from the client script to the server</source>
          <target state="translated">Um argumento passado do script de cliente para o servidor</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /&gt;</ph> method.</source>
          <target state="translated">Método <ph id="ph1">&lt;see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)">
          <source>The name of the client event handler that receives the result of the successful server event.</source>
          <target state="translated">O nome do manipulador de eventos do cliente que recebe o resultado do evento do servidor com êxito.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)">
          <source>The client script that is evaluated on the client prior to initiating the callback.</source>
          <target state="translated">O script de cliente avaliado no cliente antes de iniciar o retorno de chamada.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)">
          <source>The result of the script is passed back to the client event handler.</source>
          <target state="translated">O resultado do script é passado de volta para o manipulador de eventos do cliente.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to perform the callback asynchronously; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to perform the callback synchronously.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para executar o retorno de chamada de forma assíncrona; <ph id="ph2">&lt;see langword="false" /&gt;</ph> para executar o retorno de chamada de forma síncrona.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)">
          <source>Obtains a reference to a client function that, when invoked, initiates a client call back to server events.</source>
          <target state="translated">Obtém uma referência a uma função de cliente que, quando invocada, inicia um retorno de chamada do cliente para eventos de servidor.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)">
          <source>The client function for this overloaded method includes a specified control, argument, client script, context, and Boolean value.</source>
          <target state="translated">A função do cliente para esse método sobrecarregado inclui um controle, um argumento, um script de cliente, um contexto e um valor booliano especificados.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)">
          <source>The name of a client function that invokes the client callback.</source>
          <target state="translated">O nome de uma função de cliente que invoca o retorno de chamada do cliente.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)">
          <source>This overload of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;</ph> method requires a <ph id="ph2">`useAsync`</ph> parameter, which allows you to perform the client callback asynchronously by setting the value to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Esta sobrecarga do <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;</ph> método exige um <ph id="ph2">`useAsync`</ph> parâmetro, que permite que você executar o retorno de chamada do cliente de forma assíncrona, definindo o valor como <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)">
          <source>The overload versions of this method that do not require the <ph id="ph1">`useAsync`</ph> parameter set the value to <ph id="ph2">`false`</ph> by default.</source>
          <target state="translated">As versões de sobrecarga desse método que não exigem o <ph id="ph1">`useAsync`</ph> parâmetro defina o valor como <ph id="ph2">`false`</ph> por padrão.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)">
          <source>For more information on this method, see the remarks for the overload <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;</ph> method.</source>
          <target state="translated">Para obter mais informações sobre esse método, consulte os comentários para a sobrecarga <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> specified is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> especificado é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> specified does not implement the <ph id="ph2">&lt;see cref="T:System.Web.UI.ICallbackEventHandler" /&gt;</ph> interface.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> especificado não implementa a interface <ph id="ph2">&lt;see cref="T:System.Web.UI.ICallbackEventHandler" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>The name of a server <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> that handles the client callback.</source>
          <target state="translated">O nome de um servidor <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> que manipula o retorno de chamada do cliente.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>The control must implement the <ph id="ph1">&lt;see cref="T:System.Web.UI.ICallbackEventHandler" /&gt;</ph> interface and provide a <ph id="ph2">&lt;see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /&gt;</ph> method.</source>
          <target state="translated">O controle deve implementar a interface <ph id="ph1">&lt;see cref="T:System.Web.UI.ICallbackEventHandler" /&gt;</ph> e fornecer um método <ph id="ph2">&lt;see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>An argument passed from the client script to the server</source>
          <target state="translated">Um argumento passado do script de cliente para o servidor</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /&gt;</ph> method.</source>
          <target state="translated">Método <ph id="ph1">&lt;see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>The name of the client event handler that receives the result of the successful server event.</source>
          <target state="translated">O nome do manipulador de eventos do cliente que recebe o resultado do evento do servidor com êxito.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>The client script that is evaluated on the client prior to initiating the callback.</source>
          <target state="translated">O script de cliente avaliado no cliente antes de iniciar o retorno de chamada.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>The result of the script is passed back to the client event handler.</source>
          <target state="translated">O resultado do script é passado de volta para o manipulador de eventos do cliente.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>The name of the client event handler that receives the result when an error occurs in the server event handler.</source>
          <target state="translated">O nome do manipulador de eventos do cliente que recebe o resultado quando ocorre um erro no manipulador de eventos do servidor.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to perform the callback asynchronously; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to perform the callback synchronously.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para executar o retorno de chamada de forma assíncrona; <ph id="ph2">&lt;see langword="false" /&gt;</ph> para executar o retorno de chamada de forma síncrona.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>Obtains a reference to a client function that, when invoked, initiates a client call back to server events.</source>
          <target state="translated">Obtém uma referência a uma função de cliente que, quando invocada, inicia um retorno de chamada do cliente para eventos de servidor.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>The client function for this overloaded method includes a specified target, argument, client script, context, error handler, and Boolean value.</source>
          <target state="translated">A função do cliente para esse método sobrecarregado inclui um destino, argumento, script de cliente, contexto, manipulador de erro e valor booliano especificados.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>The name of a client function that invokes the client callback.</source>
          <target state="translated">O nome de uma função de cliente que invoca o retorno de chamada do cliente.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>This overload of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;</ph> method takes a <ph id="ph2">`target`</ph> string parameter instead of a <ph id="ph3">&lt;xref:System.Web.UI.Control&gt;</ph> parameter.</source>
          <target state="translated">Esta sobrecarga do <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;</ph> leva um <ph id="ph2">`target`</ph> parâmetro em vez de cadeia de caracteres um <ph id="ph3">&lt;xref:System.Web.UI.Control&gt;</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>Use this overload when you want the callback to go back to something other than a string containing the <ph id="ph1">&lt;xref:System.Web.UI.Control.UniqueID%2A&gt;</ph> of the control.</source>
          <target state="translated">Use essa sobrecarga quando desejar que o retorno de chamada para voltar para algo diferente de uma cadeia de caracteres que contém o <ph id="ph1">&lt;xref:System.Web.UI.Control.UniqueID%2A&gt;</ph> do controle.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>Additionally, this overload of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;</ph> method requires a <ph id="ph2">`useAsync`</ph> and a <ph id="ph3">`clientErrorCallback`</ph> parameter.</source>
          <target state="translated">Além disso, essa sobrecarga do <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;</ph> método exige um <ph id="ph2">`useAsync`</ph> e um <ph id="ph3">`clientErrorCallback`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>The <ph id="ph1">`useAsync`</ph> parameter allows you to perform the client callback asynchronously by setting the value to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">O <ph id="ph1">`useAsync`</ph> parâmetro permite que você executar o retorno de chamada do cliente de forma assíncrona, definindo o valor como <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>The overload versions of this method that do not require the <ph id="ph1">`useAsync`</ph> parameter set the value to <ph id="ph2">`false`</ph> by default.</source>
          <target state="translated">As versões de sobrecarga desse método que não exigem o <ph id="ph1">`useAsync`</ph> parâmetro defina o valor como <ph id="ph2">`false`</ph> por padrão.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>The <ph id="ph1">`clientErrorCallback`</ph> parameter allows you to define the name of the client function that is called if the server handler, the <ph id="ph2">&lt;xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A&gt;</ph> method, returns an error.</source>
          <target state="translated">O <ph id="ph1">`clientErrorCallback`</ph> parâmetro permite que você defina o nome da função de cliente que será chamado se o manipulador de servidor, o <ph id="ph2">&lt;xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A&gt;</ph> método, retornará um erro.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>The overload versions of this method that do not require the <ph id="ph1">`clientErrorCallback`</ph> parameter set the value to null.</source>
          <target state="translated">As versões de sobrecarga desse método que não exigem o <ph id="ph1">`clientErrorCallback`</ph> parâmetro definir o valor como nulo.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>For more information on this method, see the remarks for the overload <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;</ph> method.</source>
          <target state="translated">Para obter mais informações sobre esse método, consulte os comentários para a sobrecarga <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>The following code example demonstrates how to use two overloads of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;</ph> method in a client callback scenario that increments integers.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar duas sobrecargas do <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;</ph> método em um cenário de retorno de chamada de cliente com incrementos de números inteiros.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>Two callback mechanisms are shown; the difference between them is the use of the <ph id="ph1">`context`</ph> parameter.</source>
          <target state="translated">Dois mecanismos de retorno de chamada são mostrados; a diferença entre eles é o uso do <ph id="ph1">`context`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>A <ph id="ph1">`ReceiveServerData1`</ph> client callback function is provided using the <ph id="ph2">`context`</ph> parameter.</source>
          <target state="translated">Um <ph id="ph1">`ReceiveServerData1`</ph> função de retorno de chamada do cliente é fornecida usando o <ph id="ph2">`context`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>In contrast, the <ph id="ph1">`ReceiveServerData2`</ph> client callback function is defined in a <ph id="ph2">`&lt;script&gt;`</ph> block on the page.</source>
          <target state="translated">Em contraste, o <ph id="ph1">`ReceiveServerData2`</ph> função de retorno de chamada do cliente é definida em um <ph id="ph2">`&lt;script&gt;`</ph> bloco na página.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>A <ph id="ph1">&lt;xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A&gt;</ph> method is the server handler that increments the value that is passed to it and the <ph id="ph2">&lt;xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A&gt;</ph> method returns the incremented value as a string.</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A&gt;</ph> método é o manipulador de servidor que incrementa o valor que é passado para ele e o <ph id="ph2">&lt;xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A&gt;</ph> método retorna o valor incrementado como uma cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A&gt;</ph> method returns an error, then the client function <ph id="ph2">`ProcessCallBackError`</ph> is called.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A&gt;</ph> método retornará um erro e, em seguida, a função cliente <ph id="ph2">`ProcessCallBackError`</ph> é chamado.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>The server <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> that handles the client callback.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> do servidor que manipula o retorno de chamada do cliente.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>The control must implement the <ph id="ph1">&lt;see cref="T:System.Web.UI.ICallbackEventHandler" /&gt;</ph> interface and provide a <ph id="ph2">&lt;see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /&gt;</ph> method.</source>
          <target state="translated">O controle deve implementar a interface <ph id="ph1">&lt;see cref="T:System.Web.UI.ICallbackEventHandler" /&gt;</ph> e fornecer um método <ph id="ph2">&lt;see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>An argument passed from the client script to the server <ph id="ph1">&lt;see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /&gt;</ph> method.</source>
          <target state="translated">Um argumento passado do script de cliente para o método <ph id="ph1">&lt;see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /&gt;</ph> do servidor.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>The name of the client event handler that receives the result of the successful server event.</source>
          <target state="translated">O nome do manipulador de eventos do cliente que recebe o resultado do evento do servidor com êxito.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>The client script that is evaluated on the client prior to initiating the callback.</source>
          <target state="translated">O script de cliente avaliado no cliente antes de iniciar o retorno de chamada.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>The result of the script is passed back to the client event handler.</source>
          <target state="translated">O resultado do script é passado de volta para o manipulador de eventos do cliente.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>The name of the client event handler that receives the result when an error occurs in the server event handler.</source>
          <target state="translated">O nome do manipulador de eventos do cliente que recebe o resultado quando ocorre um erro no manipulador de eventos do servidor.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to perform the callback asynchronously; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to perform the callback synchronously.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para executar o retorno de chamada de forma assíncrona; <ph id="ph2">&lt;see langword="false" /&gt;</ph> para executar o retorno de chamada de forma síncrona.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>Obtains a reference to a client function that, when invoked, initiates a client call back to server events.</source>
          <target state="translated">Obtém uma referência a uma função de cliente que, quando invocada, inicia um retorno de chamada do cliente para eventos de servidor.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>The client function for this overloaded method includes a specified control, argument, client script, context, error handler, and Boolean value.</source>
          <target state="translated">A função do cliente para esse método sobrecarregado inclui um controle, um argumento, um script de cliente, um contexto, um manipulador de erros e m valor booliano especificados.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>The name of a client function that invokes the client callback.</source>
          <target state="translated">O nome de uma função de cliente que invoca o retorno de chamada do cliente.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>This overload of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;</ph> method requires a <ph id="ph2">`useAsync`</ph> and a <ph id="ph3">`clientErrorCallback`</ph> parameter.</source>
          <target state="translated">Esta sobrecarga do <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;</ph> método exige um <ph id="ph2">`useAsync`</ph> e um <ph id="ph3">`clientErrorCallback`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>The <ph id="ph1">`useAsync`</ph> parameter allows you to perform the client callback asynchronously by setting the value to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">O <ph id="ph1">`useAsync`</ph> parâmetro permite que você executar o retorno de chamada do cliente de forma assíncrona, definindo o valor como <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>The overload versions of this method that do not require the <ph id="ph1">`useAsync`</ph> parameter set the value to <ph id="ph2">`false`</ph> by default.</source>
          <target state="translated">As versões de sobrecarga desse método que não exigem o <ph id="ph1">`useAsync`</ph> parâmetro defina o valor como <ph id="ph2">`false`</ph> por padrão.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>The <ph id="ph1">`clientErrorCallback`</ph> parameter allows you to define the name of the client function that is called if the server handler (the <ph id="ph2">&lt;xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A&gt;</ph> method) returns an error.</source>
          <target state="translated">O <ph id="ph1">`clientErrorCallback`</ph> parâmetro permite que você defina o nome da função de cliente que será chamado se o manipulador de servidor (o <ph id="ph2">&lt;xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A&gt;</ph> método) retornará um erro.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>The overload versions of this method that do not require the <ph id="ph1">`clientErrorCallback`</ph> parameter set the value to null.</source>
          <target state="translated">As versões de sobrecarga desse método que não exigem o <ph id="ph1">`clientErrorCallback`</ph> parâmetro definir o valor como nulo.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>For more information on this method, see the remarks for the overload <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;</ph> method.</source>
          <target state="translated">Para obter mais informações sobre esse método, consulte os comentários para a sobrecarga <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> specified is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> especificado é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> specified does not implement the <ph id="ph2">&lt;see cref="T:System.Web.UI.ICallbackEventHandler" /&gt;</ph> interface.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> especificado não implementa a interface <ph id="ph2">&lt;see cref="T:System.Web.UI.ICallbackEventHandler" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="T:System.Web.UI.ClientScriptManager">
          <source>Gets a reference, with <ph id="ph1">&lt;see langword="javascript:" /&gt;</ph> appended to the beginning of it, that can be used in a client event to post back to the server.</source>
          <target state="translated">Obtém uma referência, com <ph id="ph1">&lt;see langword="javascript:" /&gt;</ph> acrescentado ao início, que pode ser usada em um evento de cliente para postback ao servidor.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)">
          <source>The server control to process the postback.</source>
          <target state="translated">O controle de servidor para processar o postback.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)">
          <source>The parameter passed to the server control.</source>
          <target state="translated">O parâmetro passado para o controle de servidor.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)">
          <source>Gets a reference, with <ph id="ph1">&lt;see langword="javascript:" /&gt;</ph> appended to the beginning of it, that can be used in a client event to post back to the server for the specified control and with the specified event arguments.</source>
          <target state="translated">Obtém uma referência, com <ph id="ph1">&lt;see langword="javascript:" /&gt;</ph> acrescentado ao início, que pode ser usada em um evento de cliente para postback ao servidor do controle especificado e com os argumentos de evento especificados.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)">
          <source>A string representing a JavaScript call to the postback function that includes the target control's ID and event arguments.</source>
          <target state="translated">Uma cadeia de caracteres que representa uma chamada de JavaScript à função de postback, que inclui os argumentos de evento e de ID do controle de destino.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)">
          <source>Using the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;</ph> method requires the control that handles the postback to implement the <ph id="ph2">&lt;xref:System.Web.UI.IPostBackEventHandler&gt;</ph> interface.</source>
          <target state="translated">Usando o <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;</ph> método requer que o controle que manipula a postagem para implementar o <ph id="ph2">&lt;xref:System.Web.UI.IPostBackEventHandler&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)">
          <source>To implement the <ph id="ph1">&lt;xref:System.Web.UI.IPostBackEventHandler&gt;</ph> interface for a <ph id="ph2">&lt;xref:System.Web.UI.Page&gt;</ph>,  use the  directive.</source>
          <target state="translated">Para implementar o <ph id="ph1">&lt;xref:System.Web.UI.IPostBackEventHandler&gt;</ph> a interface para um <ph id="ph2">&lt;xref:System.Web.UI.Page&gt;</ph>, use a diretiva.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo de código a seguir demonstra o uso do <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)">
          <source>The custom control, <ph id="ph1">`MyControl`</ph>, implements the <ph id="ph2">&lt;xref:System.Web.UI.IPostBackEventHandler&gt;</ph> interface.</source>
          <target state="translated">O controle personalizado, <ph id="ph1">`MyControl`</ph>, implementa o <ph id="ph2">&lt;xref:System.Web.UI.IPostBackEventHandler&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)">
          <source>When the HTML anchor element on the page is clicked, the <ph id="ph1">&lt;xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A&gt;</ph> method of the custom control is invoked.</source>
          <target state="translated">Quando o elemento de âncora HTML da página é clicado, o <ph id="ph1">&lt;xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A&gt;</ph> método do controle personalizado é chamado.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)">
          <source>The following code example has the same functionality as the preceding one, except that instead of a custom control, the <ph id="ph1">&lt;xref:System.Web.UI.Page&gt;</ph> class implements the <ph id="ph2">&lt;xref:System.Web.UI.IPostBackEventHandler&gt;</ph> interface.</source>
          <target state="translated">O exemplo de código a seguir tem a mesma funcionalidade que o anterior, exceto que, em vez de um controle personalizado, o <ph id="ph1">&lt;xref:System.Web.UI.Page&gt;</ph> classe implementa o <ph id="ph2">&lt;xref:System.Web.UI.IPostBackEventHandler&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String,System.Boolean)">
          <source>The server control to process the postback.</source>
          <target state="translated">O controle de servidor para processar o postback.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String,System.Boolean)">
          <source>The parameter passed to the server control.</source>
          <target state="translated">O parâmetro passado para o controle de servidor.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to register the postback event for validation; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to not register the post back event for validation.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para registrar o evento de postback para validação; <ph id="ph2">&lt;see langword="false" /&gt;</ph> para não registrar o evento de postback para validação.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String,System.Boolean)">
          <source>Gets a reference, with <ph id="ph1">&lt;see langword="javascript:" /&gt;</ph> appended to the beginning of it, that can be used in a client event to post back to the server for the specified control with the specified event arguments and Boolean indication whether to register the post back for event validation.</source>
          <target state="translated">Obtém uma referência, com <ph id="ph1">&lt;see langword="javascript:" /&gt;</ph> acrescentado ao início, que pode ser usada em um evento de cliente para postback ao servidor do controle especificado com os argumentos de evento especificados, bem como com um indicação booliana especificando se é para registrar o postback para a validação de evento.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String,System.Boolean)">
          <source>A string representing a JavaScript call to the postback function that includes the target control's ID and event arguments.</source>
          <target state="translated">Uma cadeia de caracteres que representa uma chamada de JavaScript à função de postback, que inclui os argumentos de evento e de ID do controle de destino.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String,System.Boolean)">
          <source>Using the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;</ph> method requires the control that handles the postback to implement the <ph id="ph2">&lt;xref:System.Web.UI.IPostBackEventHandler&gt;</ph> interface.</source>
          <target state="translated">Usando o <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;</ph> método requer que o controle que manipula a postagem para implementar o <ph id="ph2">&lt;xref:System.Web.UI.IPostBackEventHandler&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String,System.Boolean)">
          <source>To implement the <ph id="ph1">&lt;xref:System.Web.UI.IPostBackEventHandler&gt;</ph> interface for a <ph id="ph2">&lt;xref:System.Web.UI.Page&gt;</ph>, use the  directive.</source>
          <target state="translated">Para implementar o <ph id="ph1">&lt;xref:System.Web.UI.IPostBackEventHandler&gt;</ph> a interface para um <ph id="ph2">&lt;xref:System.Web.UI.Page&gt;</ph>, use a diretiva.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="T:System.Web.UI.ClientScriptManager">
          <source>Returns a string that can be used in a client event to cause postback to the server.</source>
          <target state="translated">Retorna uma cadeia de caracteres que pode ser usada em um evento de cliente para fazer postback no servidor.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.UI.PostBackOptions" /&gt;</ph> that defines the postback.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Web.UI.PostBackOptions" /&gt;</ph> que define o postback.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions)">
          <source>Returns a string that can be used in a client event to cause postback to the server.</source>
          <target state="translated">Retorna uma cadeia de caracteres que pode ser usada em um evento de cliente para fazer postback no servidor.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions)">
          <source>The reference string is defined by the specified <ph id="ph1">&lt;see cref="T:System.Web.UI.PostBackOptions" /&gt;</ph> instance.</source>
          <target state="translated">A cadeia de caracteres de referência é definida pela instância <ph id="ph1">&lt;see cref="T:System.Web.UI.PostBackOptions" /&gt;</ph> especificada.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions)">
          <source>A string that, when treated as script on the client, initiates the client postback.</source>
          <target state="translated">Uma cadeia de caracteres que, quando tratada como script no cliente, inicia o postback do cliente.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions)">
          <source>To implement the <ph id="ph1">&lt;xref:System.Web.UI.IPostBackEventHandler&gt;</ph> interface for a <ph id="ph2">&lt;xref:System.Web.UI.Page&gt;</ph>,  use the  directive.</source>
          <target state="translated">Para implementar o <ph id="ph1">&lt;xref:System.Web.UI.IPostBackEventHandler&gt;</ph> a interface para um <ph id="ph2">&lt;xref:System.Web.UI.Page&gt;</ph>, use a diretiva.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;</ph> method can be used with the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control when the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A&gt;</ph> property is <ph id="ph4">`false`</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;</ph> método pode ser usado com o <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> controlar quando o <ph id="ph3">&lt;xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A&gt;</ph> é de propriedade <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions)">
          <source>In this scenario, the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;</ph> method returns the client postback event for the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control.</source>
          <target state="translated">Nesse cenário, o <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;</ph> método retorna o cliente executa postback eventos para o <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> controle.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.PostBackOptions" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph></source>
          <target state="translated">O parâmetro <ph id="ph1">&lt;see cref="T:System.Web.UI.PostBackOptions" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String)">
          <source>The server <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> that processes the postback on the server.</source>
          <target state="translated">O servidor <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> que processa o postback no servidor.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String)">
          <source>A string of optional arguments to pass to the control that processes the postback.</source>
          <target state="translated">Uma cadeia de caracteres de argumentos opcionais para ser passada para o controle que processa o postback.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String)">
          <source>Returns a string that can be used in a client event to cause postback to the server.</source>
          <target state="translated">Retorna uma cadeia de caracteres que pode ser usada em um evento de cliente para fazer postback no servidor.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String)">
          <source>The reference string is defined by the specified control that handles the postback and a string argument of additional event information.</source>
          <target state="translated">A cadeia de caracteres de referência é definida pelo controle especificado que manipula o postback e um argumento de cadeia de caracteres de informações de evento adicionais.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String)">
          <source>A string that, when treated as script on the client, initiates the postback.</source>
          <target state="translated">Uma cadeia de caracteres que, quando tratada como script no cliente, inicia o postback.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String)">
          <source>To implement the <ph id="ph1">&lt;xref:System.Web.UI.IPostBackEventHandler&gt;</ph> interface for a <ph id="ph2">&lt;xref:System.Web.UI.Page&gt;</ph>,  use the  directive.</source>
          <target state="translated">Para implementar o <ph id="ph1">&lt;xref:System.Web.UI.IPostBackEventHandler&gt;</ph> a interface para um <ph id="ph2">&lt;xref:System.Web.UI.Page&gt;</ph>, use a diretiva.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;</ph> method can be used with the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control when the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A&gt;</ph> property is <ph id="ph4">`false`</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;</ph> método pode ser usado com o <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> controlar quando o <ph id="ph3">&lt;xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A&gt;</ph> é de propriedade <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String)">
          <source>In this scenario, the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;</ph> method returns the client postback event for the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control.</source>
          <target state="translated">Nesse cenário, o <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;</ph> método retorna o cliente executa postback eventos para o <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> controle.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String)">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo de código a seguir demonstra o uso do <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String)">
          <source>The custom control, <ph id="ph1">`MyControl`</ph>, implements the <ph id="ph2">&lt;xref:System.Web.UI.IPostBackEventHandler&gt;</ph> interface.</source>
          <target state="translated">O controle personalizado, <ph id="ph1">`MyControl`</ph>, implementa o <ph id="ph2">&lt;xref:System.Web.UI.IPostBackEventHandler&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String)">
          <source>When the button on the page is clicked, the <ph id="ph1">&lt;xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A&gt;</ph> method of the custom control is invoked.</source>
          <target state="translated">Quando o botão na página é clicado, o <ph id="ph1">&lt;xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A&gt;</ph> método do controle personalizado é chamado.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String)">
          <source>The following code example has the same functionality as the preceding one, except that instead of a custom control, the <ph id="ph1">&lt;xref:System.Web.UI.Page&gt;</ph> class implements the <ph id="ph2">&lt;xref:System.Web.UI.IPostBackEventHandler&gt;</ph> interface.</source>
          <target state="translated">O exemplo de código a seguir tem a mesma funcionalidade que o anterior, exceto que, em vez de um controle personalizado, o <ph id="ph1">&lt;xref:System.Web.UI.Page&gt;</ph> classe implementa o <ph id="ph2">&lt;xref:System.Web.UI.IPostBackEventHandler&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String)">
          <source>The specified <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> especificado é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.UI.PostBackOptions" /&gt;</ph> that defines the postback.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Web.UI.PostBackOptions" /&gt;</ph> que define o postback.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to register the event reference for validation; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para registrar a referência de evento para validação; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions,System.Boolean)">
          <source>Returns a string that can be used in a client event to cause postback to the server.</source>
          <target state="translated">Retorna uma cadeia de caracteres que pode ser usada em um evento de cliente para fazer postback no servidor.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions,System.Boolean)">
          <source>The reference string is defined by the specified <ph id="ph1">&lt;see cref="T:System.Web.UI.PostBackOptions" /&gt;</ph> object.</source>
          <target state="translated">A cadeia de caracteres de referência é definida pelo objeto <ph id="ph1">&lt;see cref="T:System.Web.UI.PostBackOptions" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions,System.Boolean)">
          <source>Optionally, registers the event reference for validation.</source>
          <target state="translated">Opcionalmente, registra a referência de evento para validação.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions,System.Boolean)">
          <source>A string that, when treated as script on the client, initiates the client postback.</source>
          <target state="translated">Uma cadeia de caracteres que, quando tratada como script no cliente, inicia o postback do cliente.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions,System.Boolean)">
          <source>To implement the <ph id="ph1">&lt;xref:System.Web.UI.IPostBackEventHandler&gt;</ph> interface for a <ph id="ph2">&lt;xref:System.Web.UI.Page&gt;</ph> object, use the  directive.</source>
          <target state="translated">Para implementar o <ph id="ph1">&lt;xref:System.Web.UI.IPostBackEventHandler&gt;</ph> a interface para um <ph id="ph2">&lt;xref:System.Web.UI.Page&gt;</ph> de objeto, use a diretiva.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;</ph> method can be used with the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control when the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A&gt;</ph> property is <ph id="ph4">`false`</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;</ph> método pode ser usado com o <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> controlar quando o <ph id="ph3">&lt;xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A&gt;</ph> é de propriedade <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions,System.Boolean)">
          <source>In this scenario, the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;</ph> method returns the client postback event for the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control.</source>
          <target state="translated">Nesse cenário, o <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;</ph> método retorna o cliente executa postback eventos para o <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> controle.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions,System.Boolean)">
          <source>If <ph id="ph1">`registerForEventValidation`</ph> is <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29&gt;</ph> method calls the <ph id="ph4">&lt;xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29&gt;</ph> method to register the event reference for validation with a unique control ID that represents the client control that is generating the event.</source>
          <target state="translated">Se <ph id="ph1">`registerForEventValidation`</ph> é <ph id="ph2">`true`</ph>, o <ph id="ph3">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29&gt;</ph> chamadas de método de <ph id="ph4">&lt;xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29&gt;</ph> método para registrar a referência de evento de validação com uma ID exclusiva do controle que representa o controle de cliente que está gerando o evento.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.PostBackOptions" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Web.UI.PostBackOptions" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String,System.Boolean)">
          <source>The server <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> that processes the postback on the server.</source>
          <target state="translated">O servidor <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> que processa o postback no servidor.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String,System.Boolean)">
          <source>A string of optional arguments to pass to <bpt id="p1">&lt;c&gt;</bpt>control<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Uma cadeia de caracteres de argumentos opcionais a serem passados para <bpt id="p1">&lt;c&gt;</bpt>control<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to register the event reference for validation; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para registrar a referência de evento para validação; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String,System.Boolean)">
          <source>Returns a string to use in a client event to cause postback to the server.</source>
          <target state="translated">Retorna uma cadeia de caracteres a ser usada em um evento de cliente para executar postback no servidor.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String,System.Boolean)">
          <source>The reference string is defined by the specified control that handles the postback and a string argument of additional event information.</source>
          <target state="translated">A cadeia de caracteres de referência é definida pelo controle especificado que manipula o postback e um argumento de cadeia de caracteres de informações de evento adicionais.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String,System.Boolean)">
          <source>Optionally, registers the event reference for validation.</source>
          <target state="translated">Opcionalmente, registra a referência de evento para validação.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String,System.Boolean)">
          <source>A string that, when treated as script on the client, initiates the postback.</source>
          <target state="translated">Uma cadeia de caracteres que, quando tratada como script no cliente, inicia o postback.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String,System.Boolean)">
          <source>To implement the <ph id="ph1">&lt;xref:System.Web.UI.IPostBackEventHandler&gt;</ph> interface for a <ph id="ph2">&lt;xref:System.Web.UI.Page&gt;</ph>, use the  directive.</source>
          <target state="translated">Para implementar o <ph id="ph1">&lt;xref:System.Web.UI.IPostBackEventHandler&gt;</ph> a interface para um <ph id="ph2">&lt;xref:System.Web.UI.Page&gt;</ph>, use a diretiva.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;</ph> method can be used with the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control when the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A&gt;</ph> property is <ph id="ph4">`false`</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;</ph> método pode ser usado com o <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> controlar quando o <ph id="ph3">&lt;xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A&gt;</ph> é de propriedade <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String,System.Boolean)">
          <source>In this scenario, the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;</ph> method returns the client postback event for the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control.</source>
          <target state="translated">Nesse cenário, o <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;</ph> método retorna o cliente executa postback eventos para o <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> controle.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String,System.Boolean)">
          <source>If <ph id="ph1">`registerForEventValidation`</ph> is true, the <ph id="ph2">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29&gt;</ph> method calls the <ph id="ph3">&lt;xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29&gt;</ph> method to register the event reference for validation with a unique control ID that represents the client control that is generating the event.</source>
          <target state="translated">Se <ph id="ph1">`registerForEventValidation`</ph> for true, o <ph id="ph2">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29&gt;</ph> chamadas de método de <ph id="ph3">&lt;xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29&gt;</ph> método para registrar a referência de evento de validação com uma ID exclusiva do controle que representa o controle de cliente que está gerando o evento.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String,System.Boolean)">
          <source>The specified <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> especificado é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)">
          <source>The type of the resource.</source>
          <target state="translated">O tipo do recurso.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)">
          <source>The fully qualified name of the resource in the assembly.</source>
          <target state="translated">O nome totalmente qualificado do recurso no assembly.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)">
          <source>Gets a URL reference to a resource in an assembly.</source>
          <target state="translated">Obtém uma referência de URL para um recurso em um assembly.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)">
          <source>The URL reference to the resource.</source>
          <target state="translated">A referência de URL para o recurso.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A&gt;</ph> method returns a URL reference to a resource embedded in an assembly.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A&gt;</ph> método retorna uma referência de URL para um recurso inserido em um assembly.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)">
          <source>The returned reference is not URL encoded.</source>
          <target state="translated">A referência fornecida não é codificada de URL.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)">
          <source>Resources can be script files, images, or any static file.</source>
          <target state="translated">Recursos podem ser qualquer arquivo estático, imagens ou arquivos de script.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)">
          <source>You specify the type based on the object that will be accessing the resource.</source>
          <target state="translated">Você especificar o tipo com base no objeto que estarão acessando o recurso.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)">
          <source>A Web resource registered with the page is uniquely identified by its type and name.</source>
          <target state="translated">Um recurso da Web registrado com a página é identificado exclusivamente por seu tipo e nome.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)">
          <source>Only one resource with a given type and name pair can be registered with the page.</source>
          <target state="translated">Somente um recurso com um par de nome e tipo fornecido pode ser registrado com a página.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)">
          <source>Attempting to register a resource that is already registered does not create a duplicate of the registered resource.</source>
          <target state="translated">Tentativa de registrar um recurso que já está registrado não cria uma cópia do recurso registrado.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A&gt;</ph> method is used in conjunction with the <ph id="ph2">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A&gt;</ph> method for accessing resources embedded in assemblies.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A&gt;</ph> método é usado em conjunto com o <ph id="ph2">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A&gt;</ph> método para acessar recursos incorporados em assemblies.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)">
          <source>For more information on using resources in applications, see <bpt id="p1">[</bpt>ASP.NET Web Page Resources Overview<ept id="p1">](http://msdn.microsoft.com/library/0936b3b2-9e6e-4abe-9c06-364efef9dbbd)</ept>.</source>
          <target state="translated">Para obter mais informações sobre o uso de recursos em aplicativos, consulte <bpt id="p1">[</bpt>visão geral de recursos de página da Web do ASP.NET<ept id="p1">](http://msdn.microsoft.com/library/0936b3b2-9e6e-4abe-9c06-364efef9dbbd)</ept>.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo de código a seguir demonstra o uso do <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)">
          <source>The <bpt id="p1">*</bpt>type<ept id="p1">*</ept> parameter in this example is set to the type of class in the assembly containing the resource.</source>
          <target state="translated">O <bpt id="p1">*</bpt>tipo<ept id="p1">*</ept> parâmetro neste exemplo é definido como o tipo de classe no assembly que contém o recurso.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)">
          <source>The <ph id="ph1">`resourceName`</ph> parameter is specified with the fully qualified path to the resource, which includes the default namespace.</source>
          <target state="translated">O <ph id="ph1">`resourceName`</ph> parâmetro for especificado com o caminho totalmente qualificado para o recurso, que inclui o namespace padrão.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)">
          <source>The following code example demonstrates how to programmatically apply the <ph id="ph1">&lt;xref:System.Web.UI.WebResourceAttribute&gt;</ph> metadata attribute to mark the assembly for the resources that will be served.</source>
          <target state="translated">O exemplo de código a seguir demonstra como aplicar programaticamente o <ph id="ph1">&lt;xref:System.Web.UI.WebResourceAttribute&gt;</ph> atributo de metadados para marcar o assembly para os recursos que será servido.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)">
          <source>Compile the following class in a class library with a default namespace set to <ph id="ph1">`Samples.AspNet.CS.Controls`</ph> or <ph id="ph2">`Samples.AspNet.VB.Controls`</ph>, depending on what language you are using.</source>
          <target state="translated">Compile a seguinte classe em uma biblioteca de classe com um namespace padrão definido como <ph id="ph1">`Samples.AspNet.CS.Controls`</ph> ou <ph id="ph2">`Samples.AspNet.VB.Controls`</ph>, dependendo da linguagem em que você está usando.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)">
          <source>This example requires a JavaScript file named <ph id="ph1">`Script_include.js`</ph>.</source>
          <target state="translated">Este exemplo requer um arquivo JavaScript chamado <ph id="ph1">`Script_include.js`</ph>.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)">
          <source>The .js file is an embedded resource in the assembly that contains the <ph id="ph1">`ClientScriptResourceLabel`</ph> object.</source>
          <target state="translated">O arquivo. js é um recurso incorporado no assembly que contém o <ph id="ph1">`ClientScriptResourceLabel`</ph> objeto.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)">
          <source>If you are using Visual Studio], in the Properties window of the class library project, set <bpt id="p1">**</bpt>Build Action<ept id="p1">**</ept> to <bpt id="p2">**</bpt>Embedded Resource<ept id="p2">**</ept> when the script file is selected.</source>
          <target state="translated">Se você estiver usando o Visual Studio], na janela Propriedades do projeto de biblioteca de classe, defina <bpt id="p1">**</bpt>ação de compilação<ept id="p1">**</ept> para <bpt id="p2">**</bpt>recurso inserido<ept id="p2">**</ept> quando o arquivo de script estiver selecionado.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)">
          <source>If you are compiling the library at the command line, use the  switch to embed the resource.</source>
          <target state="translated">Se você estiver compilando a biblioteca na linha de comando, use a opção para inserir o recurso.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)">
          <source>The web resource name is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O nome do recurso da Web é <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> ou -</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)">
          <source>The web resource name has a length of zero.</source>
          <target state="translated">O nome do recurso da Web tem comprimento zero.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="T:System.Web.UI.ClientScriptManager">
          <source>Determines whether the client script block is registered with the <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> object.</source>
          <target state="translated">Determina se o bloco de script de cliente está registrado com o objeto <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.String)">
          <source>The key of the client script block to search for.</source>
          <target state="translated">A chave do bloco de script de cliente a ser pesquisada.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.String)">
          <source>Determines whether the client script block is registered with the <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> object using the specified key.</source>
          <target state="translated">Determina se o bloco de script de cliente está registrado com o objeto <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> usando a chave especificada.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the client script block is registered; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o bloco de script de cliente estiver registrado; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.String)">
          <source>Call this method before calling the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;</ph> method to avoid registering duplicate scripts.</source>
          <target state="translated">Chamar esse método antes de chamar o <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;</ph> método para evitar o registro duplicados scripts.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.String)">
          <source>This is particularly important if the script requires a large amount of server resources to create.</source>
          <target state="translated">Isso é particularmente importante se o script requer uma grande quantidade de recursos de servidor para criar.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.String)">
          <source>A client script is uniquely identified by its key and its type.</source>
          <target state="translated">Um script de cliente é identificado exclusivamente por sua chave e seu tipo.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.String)">
          <source>Scripts with the same key and type are considered duplicates.</source>
          <target state="translated">Scripts com a mesma chave e tipo são considerados duplicatas.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.String)">
          <source>This overload of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A&gt;</ph> method calls the overload that takes both a <ph id="ph2">`key`</ph> and a <ph id="ph3">`type`</ph> parameter with the type set as a <ph id="ph4">&lt;xref:System.Web.UI.Page&gt;</ph> object</source>
          <target state="translated">Esta sobrecarga do <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A&gt;</ph> método chama a sobrecarga que usa tanto uma <ph id="ph2">`key`</ph> e um <ph id="ph3">`type`</ph> parâmetro com o tipo é definido como um <ph id="ph4">&lt;xref:System.Web.UI.Page&gt;</ph> objeto</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)">
          <source>The type of the client script block to search for.</source>
          <target state="translated">O tipo do bloco de script de cliente a ser pesquisado.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)">
          <source>The key of the client script block to search for.</source>
          <target state="translated">A chave do bloco de script de cliente a ser pesquisada.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)">
          <source>Determines whether the client script block is registered with the <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> object using a key and type.</source>
          <target state="translated">Determina se o bloco de script de cliente está registrado com o objeto <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> usando uma chave e um tipo.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the client script block is registered; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o bloco de script de cliente estiver registrado; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)">
          <source>Call this method before calling the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;</ph> method to avoid registering duplicate scripts.</source>
          <target state="translated">Chamar esse método antes de chamar o <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;</ph> método para evitar o registro duplicados scripts.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)">
          <source>This is particularly important if the script requires a large amount of server resources to create.</source>
          <target state="translated">Isso é particularmente importante se o script requer uma grande quantidade de recursos de servidor para criar.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)">
          <source>A client script is uniquely identified by its key and its type.</source>
          <target state="translated">Um script de cliente é identificado exclusivamente por sua chave e seu tipo.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)">
          <source>Scripts with the same key and type are considered duplicates.</source>
          <target state="translated">Scripts com a mesma chave e tipo são considerados duplicatas.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)">
          <source>You specify the type based on the object that will be accessing the resource.</source>
          <target state="translated">Você especificar o tipo com base no objeto que estarão acessando o recurso.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)">
          <source>For instance, when using a <ph id="ph1">`Page`</ph> instance to access the resource, you specify the <ph id="ph2">`Page`</ph> type.</source>
          <target state="translated">Por exemplo, ao usar um <ph id="ph1">`Page`</ph> instância para acessar o recurso, você especificar o <ph id="ph2">`Page`</ph> tipo.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo de código a seguir demonstra o uso do <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)">
          <source>Note that, if the logic to check for the existing client script block were removed, there would not be two duplicate client scripts in the HTML source code of the rendered page because the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;</ph> method checks for duplicates.</source>
          <target state="translated">Observe que, se a lógica de verificação para o bloco de script de cliente existentes foram removida, não haveria dois scripts de cliente duplicados no código-fonte HTML da página renderizada porque o <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;</ph> método procura duplicatas.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)">
          <source>The benefit of checking is to reduce unnecessary computation.</source>
          <target state="translated">O benefício de verificação é reduzir a computação desnecessária.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)">
          <source>The client script type is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O tipo de script de cliente é <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="T:System.Web.UI.ClientScriptManager">
          <source>Determines whether the client script include is registered with the <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> object.</source>
          <target state="translated">Determina se o script de cliente de inclusão está registrado com o objeto <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.String)">
          <source>The key of the client script include to search for.</source>
          <target state="translated">A chave do script de cliente de inclusão a ser pesquisado.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.String)">
          <source>Determines whether the client script include is registered with the <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> object using the specified key.</source>
          <target state="translated">Determina se o script de cliente de inclusão está registrado com o objeto <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> usando a chave especificada.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the client script include is registered; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o script de cliente de inclusão estiver registrado; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.String)">
          <source>Call this method before calling the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A&gt;</ph> method to avoid registering duplicate scripts.</source>
          <target state="translated">Chamar esse método antes de chamar o <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A&gt;</ph> método para evitar o registro duplicados scripts.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.String)">
          <source>This is particularly important if the script requires a large amount of server resources to create.</source>
          <target state="translated">Isso é particularmente importante se o script requer uma grande quantidade de recursos de servidor para criar.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.String)">
          <source>A client script include is uniquely identified by its key and its type.</source>
          <target state="translated">Incluir um script de cliente é identificada exclusivamente por sua chave e seu tipo.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.String)">
          <source>Scripts with the same key and type are considered duplicates.</source>
          <target state="translated">Scripts com a mesma chave e tipo são considerados duplicatas.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.String)">
          <source>This overload of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A&gt;</ph> method calls the overload that takes both a <ph id="ph2">`key`</ph> and a <ph id="ph3">`type`</ph> parameter with the type set as a <ph id="ph4">&lt;xref:System.Web.UI.Page&gt;</ph> object.</source>
          <target state="translated">Esta sobrecarga do <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A&gt;</ph> método chama a sobrecarga que usa tanto uma <ph id="ph2">`key`</ph> e um <ph id="ph3">`type`</ph> parâmetro com o tipo é definido como um <ph id="ph4">&lt;xref:System.Web.UI.Page&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.Type,System.String)">
          <source>The type of the client script include to search for.</source>
          <target state="translated">O tipo do script de cliente de inclusão a ser pesquisado.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.Type,System.String)">
          <source>The key of the client script include to search for.</source>
          <target state="translated">A chave do script de cliente de inclusão a ser pesquisado.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.Type,System.String)">
          <source>Determines whether the client script include is registered with the <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> object using a key and type.</source>
          <target state="translated">Determina se o script de cliente de inclusão está registrado com o objeto <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> usando uma chave e um tipo.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.Type,System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the client script include is registered; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o script de cliente de inclusão estiver registrado; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.Type,System.String)">
          <source>Call this method before calling the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A&gt;</ph> method to avoid registering duplicate client script includes.</source>
          <target state="translated">Chamar esse método antes de chamar o <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A&gt;</ph> inclui o método para evitar o registro de script de cliente duplicados.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.Type,System.String)">
          <source>This is particularly important if the script requires a large amount of server resources to create.</source>
          <target state="translated">Isso é particularmente importante se o script requer uma grande quantidade de recursos de servidor para criar.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.Type,System.String)">
          <source>A client script include is uniquely identified by its key and its type.</source>
          <target state="translated">Incluir um script de cliente é identificada exclusivamente por sua chave e seu tipo.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.Type,System.String)">
          <source>Scripts with the same key and type are considered duplicates.</source>
          <target state="translated">Scripts com a mesma chave e tipo são considerados duplicatas.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.Type,System.String)">
          <source>You specify the type based on the object that will be accessing the resource.</source>
          <target state="translated">Você especificar o tipo com base no objeto que estarão acessando o recurso.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.Type,System.String)">
          <source>For instance, when using a Page instance to access the resource, you specify the <ph id="ph1">`Page`</ph> type.</source>
          <target state="translated">Por exemplo, ao usar uma instância de página para acessar o recurso, especifique o <ph id="ph1">`Page`</ph> tipo.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.Type,System.String)">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo de código a seguir demonstra o uso do <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.Type,System.String)">
          <source>Note that, if the logic to check for the existing client script include were removed, there would not be two duplicate client scripts in the HTML source code of the rendered page because the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A&gt;</ph> method checks for duplicates.</source>
          <target state="translated">Observe que, se a lógica de verificação de incluir o script de cliente existentes foram removida, não haveria dois scripts de cliente duplicados no código-fonte HTML da página renderizada porque o <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A&gt;</ph> método procura duplicatas.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.Type,System.String)">
          <source>The benefit of checking is to reduce unnecessary computation.</source>
          <target state="translated">O benefício de verificação é reduzir a computação desnecessária.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.Type,System.String)">
          <source>This example requires a JavaScript file named <ph id="ph1">`Script_include.js`</ph>, with the following contents:</source>
          <target state="translated">Este exemplo requer um arquivo JavaScript chamado <ph id="ph1">`Script_include.js`</ph>, com o seguinte conteúdo:</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.Type,System.String)">
          <source>The client script include type is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O tipo do script de cliente de inclusão é <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="T:System.Web.UI.ClientScriptManager">
          <source>Determines whether the OnSubmit statement is registered with the <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> object.</source>
          <target state="translated">Determina se a instrução OnSubmit está registrada com o objeto <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.String)">
          <source>The key of the OnSubmit statement to search for.</source>
          <target state="translated">A chave da instrução OnSubmit a ser pesquisada.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.String)">
          <source>Determines whether the OnSubmit statement is registered with the <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> object using the specified key.</source>
          <target state="translated">Determina se a instrução OnSubmit está registrada com o objeto <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> usando a chave especificada.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the OnSubmit statement is registered; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se a instrução OnSubmit estiver registrada; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.String)">
          <source>Call this method before calling the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A&gt;</ph> method to avoid registering duplicate OnSubmit statements.</source>
          <target state="translated">Chamar esse método antes de chamar o <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A&gt;</ph> método para evitar o registro de instruções de OnSubmit duplicadas.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.String)">
          <source>This is particularly important if the statement requires a large amount of server resources to create.</source>
          <target state="translated">Isso é particularmente importante se a instrução exige uma grande quantidade de recursos de servidor para criar.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.String)">
          <source>A statement is uniquely identified by its key and its type.</source>
          <target state="translated">Uma instrução é identificada exclusivamente por sua chave e seu tipo.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.String)">
          <source>Statements with the same key and type are considered duplicates.</source>
          <target state="translated">Instruções com a mesma chave e tipo são consideradas duplicatas.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.String)">
          <source>This overload of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A&gt;</ph> method calls the overload that takes both a <ph id="ph2">`key`</ph> and a <ph id="ph3">`type`</ph> parameter with the type set as a <ph id="ph4">&lt;xref:System.Web.UI.Page&gt;</ph> object</source>
          <target state="translated">Esta sobrecarga do <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A&gt;</ph> método chama a sobrecarga que usa tanto uma <ph id="ph2">`key`</ph> e um <ph id="ph3">`type`</ph> parâmetro com o tipo é definido como um <ph id="ph4">&lt;xref:System.Web.UI.Page&gt;</ph> objeto</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)">
          <source>The type of the OnSubmit statement to search for.</source>
          <target state="translated">O tipo da instrução OnSubmit a ser pesquisada.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)">
          <source>The key of the OnSubmit statement to search for.</source>
          <target state="translated">A chave da instrução OnSubmit a ser pesquisada.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)">
          <source>Determines whether the OnSubmit statement is registered with the <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> object using the specified key and type.</source>
          <target state="translated">Determina se a instrução OnSubmit está registrada com o objeto <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> usando a chave e o tipo especificados.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the OnSubmit statement is registered; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se a instrução OnSubmit estiver registrada; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)">
          <source>Call this method before calling the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A&gt;</ph> method to avoid registering duplicate statements.</source>
          <target state="translated">Chamar esse método antes de chamar o <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A&gt;</ph> método para evitar o registro duplicadas instruções.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)">
          <source>This is particularly important if the statement requires a large amount of server resources to create.</source>
          <target state="translated">Isso é particularmente importante se a instrução exige uma grande quantidade de recursos de servidor para criar.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)">
          <source>A statement is uniquely identified by its key and its type.</source>
          <target state="translated">Uma instrução é identificada exclusivamente por sua chave e seu tipo.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)">
          <source>Statements with the same key and type are considered duplicates.</source>
          <target state="translated">Instruções com a mesma chave e tipo são consideradas duplicatas.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)">
          <source>You specify the type based on the object that will be accessing the resource.</source>
          <target state="translated">Você especificar o tipo com base no objeto que estarão acessando o recurso.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)">
          <source>For instance, when using a <ph id="ph1">`Page`</ph> instance to access the resource, you specify the <ph id="ph2">`Page`</ph> type.</source>
          <target state="translated">Por exemplo, ao usar um <ph id="ph1">`Page`</ph> instância para acessar o recurso, você especificar o <ph id="ph2">`Page`</ph> tipo.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo de código a seguir demonstra o uso do <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)">
          <source>A script named <ph id="ph1">`OnSubmitScript`</ph> is registered with the <ph id="ph2">&lt;xref:System.Web.UI.Page&gt;</ph> so that when the page's form is submitted the script is invoked.</source>
          <target state="translated">Um script chamado <ph id="ph1">`OnSubmitScript`</ph> está registrado com o <ph id="ph2">&lt;xref:System.Web.UI.Page&gt;</ph> para que quando o formulário da página é enviado ao script é invocado.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)">
          <source>The OnSubmit statement type is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O tipo da instrução OnSubmit é <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="T:System.Web.UI.ClientScriptManager">
          <source>Determines whether the startup script is registered with the <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> object.</source>
          <target state="translated">Determina se o script de inicialização está registrado com o objeto <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.String)">
          <source>The key of the startup script to search for.</source>
          <target state="translated">A chave de script de inicialização a ser pesquisada.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.String)">
          <source>Determines whether the startup script is registered with the <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> object using the specified key.</source>
          <target state="translated">Determina se o script de inicialização está registrado com o objeto <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> usando a chave especificada.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the startup script is registered; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o script de inicialização está registrado; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.String)">
          <source>Call this method before calling the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt;</ph> method to avoid registering duplicate scripts.</source>
          <target state="translated">Chamar esse método antes de chamar o <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt;</ph> método para evitar o registro duplicados scripts.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.String)">
          <source>This is particularly important if the script requires a large amount of server resources to create.</source>
          <target state="translated">Isso é particularmente importante se o script requer uma grande quantidade de recursos de servidor para criar.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.String)">
          <source>A startup script is uniquely identified by its key and its type.</source>
          <target state="translated">Um script de inicialização é identificado exclusivamente por sua chave e seu tipo.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.String)">
          <source>Scripts with the same key and type are considered duplicates.</source>
          <target state="translated">Scripts com a mesma chave e tipo são considerados duplicatas.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.String)">
          <source>This overload of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A&gt;</ph> method calls the overload that takes both a string <ph id="ph2">`key`</ph> and a <ph id="ph3">`type`</ph> parameter with the type set as a <ph id="ph4">&lt;xref:System.Web.UI.Page&gt;</ph> object</source>
          <target state="translated">Esta sobrecarga do <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A&gt;</ph> método chama a sobrecarga que utiliza uma cadeia de caracteres <ph id="ph2">`key`</ph> e um <ph id="ph3">`type`</ph> parâmetro com o tipo é definido como um <ph id="ph4">&lt;xref:System.Web.UI.Page&gt;</ph> objeto</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)">
          <source>The type of the startup script to search for.</source>
          <target state="translated">O tipo de script de inicialização a ser pesquisado.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)">
          <source>The key of the startup script to search for.</source>
          <target state="translated">A chave de script de inicialização a ser pesquisada.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)">
          <source>Determines whether the startup script is registered with the <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> object using the specified key and type.</source>
          <target state="translated">Determina se script de inicialização está registrado com o objeto <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> usando o tipo e a chave especificados.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the startup script is registered; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o script de inicialização está registrado; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)">
          <source>Call this method before calling the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt;</ph> method to avoid registering duplicate scripts.</source>
          <target state="translated">Chamar esse método antes de chamar o <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt;</ph> método para evitar o registro duplicados scripts.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)">
          <source>This is particularly important if the script requires a large amount of server resources to create.</source>
          <target state="translated">Isso é particularmente importante se o script requer uma grande quantidade de recursos de servidor para criar.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)">
          <source>A client startup script is uniquely identified by its key and its type.</source>
          <target state="translated">Um script de inicialização do cliente é identificado exclusivamente por sua chave e seu tipo.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)">
          <source>Scripts with the same key and type are considered duplicates.</source>
          <target state="translated">Scripts com a mesma chave e tipo são considerados duplicatas.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo de código a seguir demonstra o uso do <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)">
          <source>Note that, if the logic to check for the existing startup script block were removed, there would not be two duplicate startup scripts in the HTML source code of the rendered page because the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt;</ph> method checks for duplicates.</source>
          <target state="translated">Observe que, se a lógica de verificação para o bloco de script de inicialização existentes foram removida, não haveria dois scripts de inicialização duplicados no código-fonte HTML da página renderizada porque o <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt;</ph> método procura duplicatas.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)">
          <source>The benefit of checking is to reduce unnecessary computation.</source>
          <target state="translated">O benefício de verificação é reduzir a computação desnecessária.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)">
          <source>The startup script type is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O tipo de script de inicialização é <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(System.String,System.String)">
          <source>The array name to register.</source>
          <target state="translated">O nome da matriz a ser registrado.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(System.String,System.String)">
          <source>The array value or values to register.</source>
          <target state="translated">O valor ou valores da matriz a serem registrados.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(System.String,System.String)">
          <source>Registers a JavaScript array declaration with the <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> object using an array name and array value.</source>
          <target state="translated">Registra uma declaração de matriz JavaScript com o <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> usando um nome de matriz e um valor de matriz do objeto.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A&gt;</ph> checks to see whether a registered array exists with the same name as the name specified in the <ph id="ph2">`arrayName`</ph> parameter and, if so, adds the values specified in the <ph id="ph3">`arrayValue`</ph> parameter.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A&gt;</ph> verifica se uma matriz de marcas existe com o mesmo nome que o nome especificado no <ph id="ph2">`arrayName`</ph> parâmetro e, nesse caso, adiciona os valores especificados no <ph id="ph3">`arrayValue`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(System.String,System.String)">
          <source>Because the underlying storage mechanism is based on an <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>, duplicates are allowed.</source>
          <target state="translated">Como o mecanismo de armazenamento subjacente se baseia em um <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>, são permitidas duplicatas.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(System.String,System.String)">
          <source>If a registered array with the same name as the <ph id="ph1">`arrayName`</ph> parameter does not exist, it is created and the values in the <ph id="ph2">`arrayValue`</ph> parameter added to it.</source>
          <target state="translated">Se uma matriz registrada com o mesmo nome que o <ph id="ph1">`arrayName`</ph> parâmetro não existe, ele é criado e os valores a <ph id="ph2">`arrayValue`</ph> parâmetro adicionado a ele.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(System.String,System.String)">
          <source>If you want string literals in the resulting JavaScript array, include single quotation marks (') or escaped double quotation marks (<ph id="ph1">\\</ph>") in the <ph id="ph2">`arrayValue`</ph> parameter.</source>
          <target state="translated">Se você quiser literais de cadeia de caracteres na matriz resultante do JavaScript, incluir aspas simples (') ou aspas duplas de escape (<ph id="ph1">\\</ph>") no <ph id="ph2">`arrayValue`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(System.String,System.String)">
          <source>The value of the <ph id="ph1">`arrayValue`</ph> parameter should be a single element.</source>
          <target state="translated">O valor de <ph id="ph1">`arrayValue`</ph> parâmetro deve ser um único elemento.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(System.String,System.String)">
          <source>If more than one value needs to be added to the array, make multiple calls using the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A&gt;</ph> method.</source>
          <target state="translated">Se precisar de mais de um valor a ser adicionada à matriz, fazer várias chamadas usando o <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(System.String,System.String)">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A&gt;</ph> methods.</source>
          <target state="translated">O exemplo de código a seguir demonstra o uso do <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A&gt;</ph> métodos.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(System.String,System.String)">
          <source>The example registers an array and a hidden value and defines the <ph id="ph1">`OnClick`</ph> event of an <ph id="ph2">`&lt;input&gt;`</ph> button to calculate the sum of two values of the array and the hidden value.</source>
          <target state="translated">O exemplo registra uma matriz e um valor oculto e define o <ph id="ph1">`OnClick`</ph> eventos de um <ph id="ph2">`&lt;input&gt;`</ph> botão para calcular a soma dos dois valores da matriz e o valor hidden.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="arrayName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="arrayName" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="T:System.Web.UI.ClientScriptManager">
          <source>Registers the client script with the <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> object.</source>
          <target state="translated">Registra o script de cliente com o objeto <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)">
          <source>The type of the client script to register.</source>
          <target state="translated">O tipo do script de cliente que será registrado.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)">
          <source>The key of the client script to register.</source>
          <target state="translated">A chave do script de cliente a ser registrado.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)">
          <source>The client script literal to register.</source>
          <target state="translated">A literal de script de cliente a ser registrada.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)">
          <source>Registers the client script with the <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> object using a type, key, and script literal.</source>
          <target state="translated">Registra o script de cliente com o objeto <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> usando um tipo, uma chave e uma literal de script.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)">
          <source>A client script is uniquely identified by its key and its type.</source>
          <target state="translated">Um script de cliente é identificado exclusivamente por sua chave e seu tipo.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)">
          <source>Scripts with the same key and type are considered duplicates.</source>
          <target state="translated">Scripts com a mesma chave e tipo são considerados duplicatas.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)">
          <source>Only one script with a given type and key pair can be registered with the page.</source>
          <target state="translated">Somente um script com um determinado tipo e o par de chaves pode ser registrado com a página.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)">
          <source>Attempting to register a script that is already registered does not create a duplicate of the script.</source>
          <target state="translated">Tentativa de registrar um script que já está registrado não cria uma duplicata do script.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)">
          <source>Call the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A&gt;</ph> method to determine whether a client script with a given key and type pair is already registered and avoid unnecessarily attempting to add the script.</source>
          <target state="translated">Chamar o <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A&gt;</ph> método para determinar se um script de cliente com um determinado par de chave e tipo já está registrado e evitar desnecessariamente tentando adicionar o script.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)">
          <source>In this overload of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;</ph> method, you must make sure that the script provided in the <ph id="ph2">`script`</ph> parameter is wrapped in a <ph id="ph3">`&lt;script&gt;`</ph> element block.</source>
          <target state="translated">Esta sobrecarga do <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;</ph> método, você deve garantir que o script fornecido no <ph id="ph2">`script`</ph> parâmetro é encapsulado em um <ph id="ph3">`&lt;script&gt;`</ph> bloco de elemento.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;</ph> method adds a script block to the top of the rendered page.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;</ph> método adiciona um bloco de script na parte superior da página renderizada.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)">
          <source>The script blocks are not guaranteed to be output in the order they are registered.</source>
          <target state="translated">Não há garantia de blocos de script para a saída na ordem em que eles são registrados.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)">
          <source>If the order of the script blocks is important, use a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object to gather the scripts together in a single string, and then register them all in a single client script block.</source>
          <target state="translated">Se a ordem dos blocos de script é importante, use um <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> para reunir os scripts em uma única cadeia de caracteres do objeto e, em seguida, registrá-los em um bloco de script do cliente individual.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo de código a seguir demonstra o uso do <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)">
          <source>The type of the client script to register.</source>
          <target state="translated">O tipo do script de cliente que será registrado.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)">
          <source>The key of the client script to register.</source>
          <target state="translated">A chave do script de cliente a ser registrado.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)">
          <source>The client script literal to register.</source>
          <target state="translated">A literal de script de cliente a ser registrada.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)">
          <source>A Boolean value indicating whether to add script tags.</source>
          <target state="translated">Um valor booliano que indica se deverão ser adicionadas marcas de script.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)">
          <source>Registers the client script with the <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> object using a type, key, script literal, and Boolean value indicating whether to add script tags.</source>
          <target state="translated">Registra o script de cliente no objeto <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> usando um tipo, uma chave, um literal de script e um valor booliano indicando se devem ser adicionadas marcas de script.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)">
          <source>A client script is uniquely identified by its key and its type.</source>
          <target state="translated">Um script de cliente é identificado exclusivamente por sua chave e seu tipo.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)">
          <source>Scripts with the same key and type are considered duplicates.</source>
          <target state="translated">Scripts com a mesma chave e tipo são considerados duplicatas.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)">
          <source>Only one script with a given type and key pair can be registered with the page.</source>
          <target state="translated">Somente um script com um determinado tipo e o par de chaves pode ser registrado com a página.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)">
          <source>Attempting to register a script that is already registered does not create a duplicate of the script.</source>
          <target state="translated">Tentativa de registrar um script que já está registrado não cria uma duplicata do script.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)">
          <source>Call the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A&gt;</ph> method to determine whether a client script with a given key and type pair is already registered.</source>
          <target state="translated">Chamar o <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A&gt;</ph> método para determinar se um script de cliente com um determinado par de chave e tipo já está registrado.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)">
          <source>This lets you avoid unnecessarily attempting to add the script.</source>
          <target state="translated">Isso permite que você evite desnecessariamente tentando adicionar o script.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)">
          <source>In this overload of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;</ph> method, you can indicate whether the script provided in the <ph id="ph2">`script`</ph> parameter is wrapped with a <ph id="ph3">`&lt;script&gt;`</ph> element block by using the <ph id="ph4">`addScriptTags`</ph> parameter.</source>
          <target state="translated">Esta sobrecarga do <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;</ph> método, você pode indicar se o script fornecido no <ph id="ph2">`script`</ph> parâmetro é empacotado com um <ph id="ph3">`&lt;script&gt;`</ph> bloco de elemento usando o <ph id="ph4">`addScriptTags`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)">
          <source>Setting <ph id="ph1">`addScriptTags`</ph> to <ph id="ph2">`true`</ph> indicates that script tags will be added automatically.</source>
          <target state="translated">Configuração <ph id="ph1">`addScriptTags`</ph> para <ph id="ph2">`true`</ph> indica que as marcas de script serão adicionadas automaticamente.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;</ph> method adds a script block to the top of the rendered page.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;</ph> método adiciona um bloco de script na parte superior da página renderizada.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)">
          <source>The script blocks are not guaranteed to be output in the order they are registered.</source>
          <target state="translated">Não há garantia de blocos de script para a saída na ordem em que eles são registrados.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)">
          <source>If the order of the script blocks is important, use a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object to gather the scripts together in a single string, and then register them all in a single client script block.</source>
          <target state="translated">Se a ordem dos blocos de script é importante, use um <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> para reunir os scripts em uma única cadeia de caracteres do objeto e, em seguida, registrá-los em um bloco de script do cliente individual.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo de código a seguir demonstra o uso do <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)">
          <source>Note that the <ph id="ph1">`addScriptTags`</ph> parameter is set to <ph id="ph2">`true`</ph> so the beginning and closing script tags are not included with the <ph id="ph3">`script`</ph> parameter.</source>
          <target state="translated">Observe que o <ph id="ph1">`addScriptTags`</ph> parâmetro está definido como <ph id="ph2">`true`</ph> para o início e o script marcas de fechamento não são incluídos com o <ph id="ph3">`script`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)">
          <source>The client script block type is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O tipo do bloco de script de cliente é <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="T:System.Web.UI.ClientScriptManager">
          <source>Registers the client script include with the <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> object.</source>
          <target state="translated">Registra o script de cliente de inclusão com o objeto <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)">
          <source>The key of the client script include to register.</source>
          <target state="translated">A chave do script de cliente que será registrada.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)">
          <source>The URL of the client script include to register.</source>
          <target state="translated">A URL do script de cliente que será registrada.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)">
          <source>Registers the client script with the <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> object using a key and a URL, which enables the script to be called from the client.</source>
          <target state="translated">Registra o script de cliente com o objeto <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> usando uma chave e uma URL, que permite que o script seja chamado pelo cliente.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)">
          <source>A client script include is uniquely identified by its key and its type.</source>
          <target state="translated">Incluir um script de cliente é identificada exclusivamente por sua chave e seu tipo.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)">
          <source>Scripts with the same key and type are considered duplicates.</source>
          <target state="translated">Scripts com a mesma chave e tipo são considerados duplicatas.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)">
          <source>Only one script with a given type and key pair can be registered with the page.</source>
          <target state="translated">Somente um script com um determinado tipo e o par de chaves pode ser registrado com a página.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)">
          <source>Attempting to register a script that is already registered does not create a duplicate of the script.</source>
          <target state="translated">Tentativa de registrar um script que já está registrado não cria uma duplicata do script.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)">
          <source>Call the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A&gt;</ph> method to determine whether a client script include with a given key and type pair is already registered and avoid unnecessarily attempting to add the script.</source>
          <target state="translated">Chamar o <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A&gt;</ph> método para determinar se um script de cliente incluem com uma determinada chave e par de tipo já está registrado e evitar desnecessariamente tentando adicionar o script.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)">
          <source>To resolve the client URL, use the <ph id="ph1">&lt;xref:System.Web.UI.Control.ResolveClientUrl%2A&gt;</ph> method.</source>
          <target state="translated">Para resolver a URL de cliente, use o <ph id="ph1">&lt;xref:System.Web.UI.Control.ResolveClientUrl%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)">
          <source>This method uses the context of the URL on which it is called to resolve the path.</source>
          <target state="translated">Esse método usa o contexto da URL na qual ele é chamado para resolver o caminho.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)">
          <source>This overload of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A&gt;</ph> method calls the overload that takes a <ph id="ph2">`key`</ph>, a <ph id="ph3">`URL`</ph>, and a <ph id="ph4">`type`</ph> parameter.</source>
          <target state="translated">Esta sobrecarga do <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A&gt;</ph> método chama a sobrecarga que utiliza um <ph id="ph2">`key`</ph>, um <ph id="ph3">`URL`</ph>e um <ph id="ph4">`type`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)">
          <source>The method adds a script block at the top of the rendered page.</source>
          <target state="translated">O método adiciona um bloco de script na parte superior da página renderizada.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)">
          <source>For related information, including syntax, usage, and an example, see <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A&gt;</ph>.</source>
          <target state="translated">Para obter informações relacionadas, incluindo sintaxe, uso e um exemplo, consulte <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)">
          <source>The type of the client script include to register.</source>
          <target state="translated">O tipo do script de cliente que será registrado.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)">
          <source>The key of the client script include to register.</source>
          <target state="translated">A chave do script de cliente que será registrada.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)">
          <source>The URL of the client script include to register.</source>
          <target state="translated">A URL do script de cliente que será registrada.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)">
          <source>Registers the client script include with the <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> object using a type, a key, and a URL.</source>
          <target state="translated">Registra o script de cliente incluído no objeto <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> usando um tipo, uma chave e uma URL.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)">
          <source>This overload of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A&gt;</ph> method takes <bpt id="p1">*</bpt>key<ept id="p1">*</ept> and <bpt id="p2">*</bpt>url<ept id="p2">*</ept> parameters to identify the script, as well as a <ph id="ph2">`type`</ph> parameter to specify the identification of the client script include.</source>
          <target state="translated">Esta sobrecarga do <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A&gt;</ph> leva <bpt id="p1">*</bpt>chave<ept id="p1">*</ept> e <bpt id="p2">*</bpt>url<ept id="p2">*</ept> parâmetros para identificar o script, bem como um <ph id="ph2">`type`</ph> parâmetro para especificar a identificação do script de cliente incluem.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)">
          <source>You specify the type based on the object that will be accessing the resource.</source>
          <target state="translated">Você especificar o tipo com base no objeto que estarão acessando o recurso.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)">
          <source>For instance, when using a <ph id="ph1">`Page`</ph> instance to access the resource, you specify the <ph id="ph2">`Page`</ph> type.</source>
          <target state="translated">Por exemplo, ao usar um <ph id="ph1">`Page`</ph> instância para acessar o recurso, você especificar o <ph id="ph2">`Page`</ph> tipo.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)">
          <source>To resolve the client URL, use the <ph id="ph1">&lt;xref:System.Web.UI.Control.ResolveClientUrl%2A&gt;</ph> method.</source>
          <target state="translated">Para resolver a URL de cliente, use o <ph id="ph1">&lt;xref:System.Web.UI.Control.ResolveClientUrl%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)">
          <source>This method uses the context of the URL on which it is called to resolve the path.</source>
          <target state="translated">Esse método usa o contexto da URL na qual ele é chamado para resolver o caminho.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)">
          <source>This method adds a script block at the top of the rendered page.</source>
          <target state="translated">Este método adiciona um bloco de script na parte superior da página renderizada.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo de código a seguir demonstra o uso do <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)">
          <source>Note that if the logic to check for the existing client script include were removed, there would still not be duplicate client scripts in the rendered page because the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A&gt;</ph> method checks for duplicates.</source>
          <target state="translated">Observe que se a lógica de verificação de incluir o script de cliente existentes foram removida, ainda não haveria scripts de cliente duplicados na página renderizada porque o <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A&gt;</ph> método procura duplicatas.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)">
          <source>The benefit of checking is to reduce unnecessary computation.</source>
          <target state="translated">O benefício de verificação é reduzir a computação desnecessária.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)">
          <source>This example requires a JavaScript file named Script_include.js with the following contents:</source>
          <target state="translated">Este exemplo requer um arquivo JavaScript chamado Script_include.js com o seguinte conteúdo:</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)">
          <source>The client script include type is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O tipo do script de cliente de inclusão é <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)">
          <source>The URL is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">A URL é <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> ou -</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)">
          <source>The URL is empty.</source>
          <target state="translated">A URL está vazia.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)">
          <source>The type of the client script resource to register.</source>
          <target state="translated">O tipo do recurso de script de cliente a ser registrado.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)">
          <source>The name of the client script resource to register.</source>
          <target state="translated">O nome do recurso de script de cliente a ser registrado.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)">
          <source>Registers the client script resource with the <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> object using a type and a resource name.</source>
          <target state="translated">Registra o recurso de script de cliente com o objeto <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> usando um tipo e um nome de recurso.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A&gt;</ph> method is used when accessing compiled-in resources from assemblies through the WebResource.axd HTTP handler.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A&gt;</ph> método é usado ao acessar recursos compilados em assemblies por meio do manipulador HTTP WebResource.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A&gt;</ph> method registers the script with the <ph id="ph2">&lt;xref:System.Web.UI.Page&gt;</ph> object and prevents duplicate scripts.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A&gt;</ph> método registra o script com o <ph id="ph2">&lt;xref:System.Web.UI.Page&gt;</ph> de objeto e impede que scripts duplicados.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)">
          <source>This method wraps the contents of the resource URL with a <ph id="ph1">`&lt;script&gt;`</ph> element block.</source>
          <target state="translated">Este método envolve o conteúdo da URL de recurso com um <ph id="ph1">`&lt;script&gt;`</ph> bloco de elemento.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo de código a seguir demonstra o uso do <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)">
          <source>The following code example demonstrates how to programmatically apply the <ph id="ph1">&lt;xref:System.Web.UI.WebResourceAttribute&gt;</ph> metadata attribute to mark the assembly for the resources that will be served.</source>
          <target state="translated">O exemplo de código a seguir demonstra como aplicar programaticamente o <ph id="ph1">&lt;xref:System.Web.UI.WebResourceAttribute&gt;</ph> atributo de metadados para marcar o assembly para os recursos que será servido.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)">
          <source>This example requires a JavaScript file named <ph id="ph1">`Script_include.js`</ph>, with the following contents:</source>
          <target state="translated">Este exemplo requer um arquivo JavaScript chamado <ph id="ph1">`Script_include.js`</ph>, com o seguinte conteúdo:</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)">
          <source>Compile the <ph id="ph1">`Script_include.js`</ph> file as a resource in the <ph id="ph2">`Samples.AspNet.CS.Controls`</ph> assembly that contains the <ph id="ph3">`ClientScriptResourceLabel`</ph> class.</source>
          <target state="translated">Compile o <ph id="ph1">`Script_include.js`</ph> arquivo como um recurso no <ph id="ph2">`Samples.AspNet.CS.Controls`</ph> assembly que contém o <ph id="ph3">`ClientScriptResourceLabel`</ph> classe.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)">
          <source>The client resource name is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O nome de recurso do cliente é <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> ou -</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)">
          <source>The client resource name has a length of zero.</source>
          <target state="translated">O nome de recurso do cliente tem um tamanho de zero.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" uid="T:System.Web.UI.ClientScriptManager">
          <source>Registers a name/value pair as a custom (expando) attribute of the specified control.</source>
          <target state="translated">Registra um par nome/valor como um atributo personalizado (expando) do controle especificado.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> on the page that contains the custom attribute.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> na página que contém o atributo personalizado.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String)">
          <source>The name of the custom attribute to register.</source>
          <target state="translated">O nome do atributo personalizado a ser registrado.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String)">
          <source>The value of the custom attribute.</source>
          <target state="translated">O valor do atributo personalizado.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String)">
          <source>Registers a name/value pair as a custom (expando) attribute of the specified control given a control ID, attribute name, and attribute value.</source>
          <target state="translated">Registra um par nome/valor como um atributo personalizado (expando) do controle especificado, considerando uma ID de controle, um nome de atributo e um valor de atributo especificados.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A&gt;</ph> method registers a name/value pair as a custom (expando) attribute on the specified <ph id="ph2">&lt;xref:System.Web.UI.Control&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A&gt;</ph> método registra um par nome/valor como um atributo personalizado (expando) especificado <ph id="ph2">&lt;xref:System.Web.UI.Control&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String)">
          <source>The expando attribute is set dynamically from JavaScript to preserve XHTML compatibility for the rendered control's markup.</source>
          <target state="translated">O atributo expando é definido dinamicamente de JavaScript para preservar a compatibilidade XHTML para marcação do controle processado.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String)">
          <source>Quotes and backslashes in the custom (expando) attribute's values are escaped.</source>
          <target state="translated">As aspas e barras invertidas nos valores do atributo personalizado (expando) são ignoradas.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String)">
          <source>If you do not want to escape quotes and backslashes, call the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A&gt;</ph> overload method and set the <ph id="ph2">`encode`</ph> parameter to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Se você não quiser aspas e barras invertidas de escape, chame o <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A&gt;</ph> sobrecarregar o método e definir o <ph id="ph2">`encode`</ph> parâmetro <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String)">
          <source>If the expando attribute is not found or the control to add the expando attribute to is not found, the client script is still emitted, but it will not affect the control.</source>
          <target state="translated">Se o atributo expando não foi encontrado ou o controle para adicionar o atributo expando não for encontrado, o script de cliente ainda é emitido, mas isso não afetará o controle.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> on the page that contains the custom attribute.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> na página que contém o atributo personalizado.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String,System.Boolean)">
          <source>The name of the custom attribute to register.</source>
          <target state="translated">O nome do atributo personalizado a ser registrado.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String,System.Boolean)">
          <source>The value of the custom attribute.</source>
          <target state="translated">O valor do atributo personalizado.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String,System.Boolean)">
          <source>A Boolean value indicating whether to encode the custom attribute to register.</source>
          <target state="translated">Um valor booliano que indica se o atributo personalizado deve ser codificado para o registro.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String,System.Boolean)">
          <source>Registers a name/value pair as a custom (expando) attribute of the specified control given a control ID, an attribute name, an attribute value, and a Boolean value indicating whether to encode the attribute value.</source>
          <target state="translated">Registra um par nome/valor como um atributo personalizado (expando) do controle especificado considerando uma ID de controle, um nome de atributo, um valor de atributo e um valor booliano que indica se é necessário codificar o valor de atributo.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A&gt;</ph> method registers a name/value pair as a custom (expando) attribute on the specified <ph id="ph2">&lt;xref:System.Web.UI.Control&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A&gt;</ph> método registra um par nome/valor como um atributo personalizado (expando) especificado <ph id="ph2">&lt;xref:System.Web.UI.Control&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String,System.Boolean)">
          <source>The expando attribute is set dynamically from JavaScript to preserve XHTML compatibility for the rendered control's markup.</source>
          <target state="translated">O atributo expando é definido dinamicamente de JavaScript para preservar a compatibilidade XHTML para marcação do controle processado.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String,System.Boolean)">
          <source>Set the <ph id="ph1">`encode`</ph> parameter to <ph id="ph2">`true`</ph> if you need to escape quotes and backslashes in your expando attribute's value.</source>
          <target state="translated">Definir o <ph id="ph1">`encode`</ph> parâmetro <ph id="ph2">`true`</ph> se você precisa de escape aspas e barras invertidas no valor do seu atributo expando.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String,System.Boolean)">
          <source>If the expando attribute is not found or the control to add the expando attribute to is not found, the client script is still emitted, but it will not affect the control.</source>
          <target state="translated">Se o atributo expando não foi encontrado ou o controle para adicionar o atributo expando não for encontrado, o script de cliente ainda é emitido, mas isso não afetará o controle.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String,System.Boolean)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Web.UI.ClientScriptManager&gt;</ph> class.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar o <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A&gt;</ph> método o <ph id="ph2">&lt;xref:System.Web.UI.ClientScriptManager&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String,System.Boolean)">
          <source>The client script in the rendered page sets the <ph id="ph1">`title`</ph> attribute of a <ph id="ph2">`&lt;span&gt;`</ph> element.</source>
          <target state="translated">O script de cliente nos conjuntos de página renderizada o <ph id="ph1">`title`</ph> atributo de um <ph id="ph2">`&lt;span&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" uid="T:System.Web.UI.ClientScriptManager">
          <source>Registers an event reference for validation.</source>
          <target state="translated">Registra uma referência de evento para validação.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)">
          <source>A unique ID representing the client control generating the event.</source>
          <target state="translated">Uma ID exclusiva que representa o controle de cliente que gera o evento.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)">
          <source>Registers an event reference for validation with a unique control ID representing the client control generating the event.</source>
          <target state="translated">Registra uma referência de evento para validação com uma ID de controle exclusiva que representa o controle de cliente que gera o evento.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)">
          <source>For more information and examples, see the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A&gt;</ph> method.</source>
          <target state="translated">Para obter mais informações e exemplos, consulte o <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A&gt;</ph> method in order to register a callback for validation, and how to validate that the callback originated from the page.</source>
          <target state="translated">O exemplo a seguir mostra como usar o <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A&gt;</ph> método e o <ph id="ph2">&lt;xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A&gt;</ph> método para registrar um retorno de chamada para validação e como validar que o retorno de chamada foi originado da página.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.Web.UI.PostBackOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.UI.PostBackOptions" /&gt;</ph> object that specifies how client JavaScript is generated to initiate a postback event.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Web.UI.PostBackOptions" /&gt;</ph> que especifica como o cliente JavaScript é gerado para iniciar um evento de postback.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.Web.UI.PostBackOptions)">
          <source>Registers an event reference for validation with <ph id="ph1">&lt;see cref="T:System.Web.UI.PostBackOptions" /&gt;</ph>.</source>
          <target state="translated">Registra uma referência de evento para validação com <ph id="ph1">&lt;see cref="T:System.Web.UI.PostBackOptions" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.Web.UI.PostBackOptions)">
          <source>For more information and examples, see the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A&gt;</ph> method.</source>
          <target state="translated">Para obter mais informações e exemplos, consulte o <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)">
          <source>A unique ID representing the client control generating the event.</source>
          <target state="translated">Uma ID exclusiva que representa o controle de cliente que gera o evento.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)">
          <source>Event arguments passed with the client event.</source>
          <target state="translated">Argumentos de evento passados com o evento de cliente.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)">
          <source>Registers an event reference for validation with a unique control ID and event arguments representing the client control generating the event.</source>
          <target state="translated">Registra uma referência de evento para validação, com uma ID de controle exclusiva e argumentos do evento que representam o controle de cliente que gera o evento.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A&gt;</ph> method to register a callback for validation and to validate that the callback originated from the page.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar o <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A&gt;</ph> método e o <ph id="ph2">&lt;xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A&gt;</ph> método para registrar um retorno de chamada para validação e para validar que o retorno de chamada foi originado da página.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)">
          <source>To improve on the validation shown in the example, you could modify the validation <ph id="ph1">`argument`</ph> parameter to contain information specific to the user such as an identity or role</source>
          <target state="translated">Para melhorar a validação mostrada no exemplo, você pode modificar a validação <ph id="ph1">`argument`</ph> parâmetro para conter informações específicas do usuário, como uma identidade ou uma função</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A&gt;</ph> method to register a callback for validation.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar o <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A&gt;</ph> método para registrar um retorno de chamada para validação.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)">
          <source>The method is called prior to the <ph id="ph1">&lt;see cref="M:System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)" /&gt;</ph> method.</source>
          <target state="translated">O método é chamado antes do método <ph id="ph1">&lt;see cref="M:System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterHiddenField(System.String,System.String)">
          <source>The name of the hidden field to register.</source>
          <target state="translated">O nome do campo oculto a ser registrado.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterHiddenField(System.String,System.String)">
          <source>The initial value of the field to register.</source>
          <target state="translated">O valor inicial do campo a ser registrado.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterHiddenField(System.String,System.String)">
          <source>Registers a hidden value with the <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> object.</source>
          <target state="translated">Registra um valor oculto com o objeto <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterHiddenField(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A&gt;</ph> method creates a hidden <ph id="ph2">`&lt;input&gt;`</ph> element on the rendered HTML page.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A&gt;</ph> método cria oculto <ph id="ph2">`&lt;input&gt;`</ph> elemento na página HTML renderizada.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterHiddenField(System.String,System.String)">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A&gt;</ph> methods.</source>
          <target state="translated">O exemplo de código a seguir demonstra o uso do <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A&gt;</ph> métodos.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterHiddenField(System.String,System.String)">
          <source>The example registers an array and a hidden value and defines the <ph id="ph1">`OnClick`</ph> event of an <ph id="ph2">`&lt;input&gt;`</ph> button to calculate the sum of two values of the array and the hidden value.</source>
          <target state="translated">O exemplo registra uma matriz e um valor oculto e define o <ph id="ph1">`OnClick`</ph> eventos de um <ph id="ph2">`&lt;input&gt;`</ph> botão para calcular a soma dos dois valores da matriz e o valor hidden.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterHiddenField(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="hiddenFieldName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hiddenFieldName" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)">
          <source>The type of the OnSubmit statement to register.</source>
          <target state="translated">O tipo da instrução OnSubmit a ser registrada.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)">
          <source>The key of the OnSubmit statement to register.</source>
          <target state="translated">A chave da instrução OnSubmit a ser registrada.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)">
          <source>The script literal of the OnSubmit statement to register.</source>
          <target state="translated">O literal de script da instrução OnSubmit a ser registrada.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)">
          <source>Registers an OnSubmit statement with the <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> object using a type, a key, and a script literal.</source>
          <target state="translated">Registra a instrução OnSubmit com o objeto <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> usando um tipo, uma chave e um literal de script.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)">
          <source>The statement executes when the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlControls.HtmlForm" /&gt;</ph> is submitted.</source>
          <target state="translated">A instrução é executada quando o <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlControls.HtmlForm" /&gt;</ph> é enviado.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)">
          <source>An OnSubmit statement is uniquely identified by its key and its type.</source>
          <target state="translated">Uma instrução OnSubmit é identificada exclusivamente por sua chave e seu tipo.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)">
          <source>Statements with the same key and type are considered duplicates.</source>
          <target state="translated">Instruções com a mesma chave e tipo são consideradas duplicatas.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)">
          <source>Only one statement with a given type and key pair can be registered with the page.</source>
          <target state="translated">Apenas uma declaração com um tipo fornecido e o par de chaves pode ser registrada com a página.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)">
          <source>Attempting to register a statement that is already registered will not create a duplicate of the statement.</source>
          <target state="translated">Tentativa de registrar uma instrução que já está registrada não criará uma duplicata da instrução.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)">
          <source>Call the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A&gt;</ph> method to determine whether an OnSubmit statement is already registered with a given key and type pair and avoid unnecessarily attempting to add the script.</source>
          <target state="translated">Chamar o <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A&gt;</ph> método para determinar se uma instrução OnSubmit já está registrada com um determinado par de chave e tipo e evitar desnecessariamente tentando adicionar o script.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)">
          <source>The <ph id="ph1">`script`</ph> parameter of the <ph id="ph2">&lt;xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A&gt;</ph> method can contain multiple script commands as long as they are properly delimited with a semicolon (;).</source>
          <target state="translated">O <ph id="ph1">`script`</ph> parâmetro o <ph id="ph2">&lt;xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A&gt;</ph> método pode conter vários comandos de script, como eles são delimitados corretamente com um ponto e vírgula (;).</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A&gt;</ph> adds a script that is executed before the page is submitted and gives you an opportunity to cancel the submission.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A&gt;</ph> adiciona um script que é executado antes da página é enviada e lhe dá a oportunidade de cancelar o envio.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)">
          <source>For more information on HTML forms and the <ph id="ph1">`OnSubmit`</ph> attribute, see the <bpt id="p1">[</bpt>World Wide Web Consortium (W3C) Web site<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=37125)</ept>.</source>
          <target state="translated">Para obter mais informações sobre os formulários HTML e o <ph id="ph1">`OnSubmit`</ph> de atributo, consulte o <bpt id="p1">[</bpt>World Wide Web Consortium (W3C) Web site<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=37125)</ept>.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo de código a seguir demonstra o uso do <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="T:System.Web.UI.ClientScriptManager">
          <source>Registers the startup script with the <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> object.</source>
          <target state="translated">Registra o script de inicialização com o objeto <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)">
          <source>The type of the startup script to register.</source>
          <target state="translated">O tipo de script de inicialização a ser registrado.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)">
          <source>The key of the startup script to register.</source>
          <target state="translated">A chave do script de inicialização a ser registrada.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)">
          <source>The startup script literal to register.</source>
          <target state="translated">O literal do script de inicialização a ser registrado.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)">
          <source>Registers the startup script with the <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> object using a type, a key, and a script literal.</source>
          <target state="translated">Registra o script de inicialização no objeto <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> usando um tipo, uma chave e um literal de script.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)">
          <source>A client script is uniquely identified by its key and its type.</source>
          <target state="translated">Um script de cliente é identificado exclusivamente por sua chave e seu tipo.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)">
          <source>Scripts with the same key and type are considered duplicates.</source>
          <target state="translated">Scripts com a mesma chave e tipo são considerados duplicatas.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)">
          <source>Only one script with a given type and key pair can be registered with the page.</source>
          <target state="translated">Somente um script com um determinado tipo e o par de chaves pode ser registrado com a página.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)">
          <source>Attempting to register a script that is already registered does not create a duplicate of the script.</source>
          <target state="translated">Tentativa de registrar um script que já está registrado não cria uma duplicata do script.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)">
          <source>Call the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A&gt;</ph> method to determine whether a startup script with a given key and type pair is already registered and avoid unnecessarily attempting to add the script.</source>
          <target state="translated">Chamar o <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A&gt;</ph> método para determinar se um script de inicialização com um determinado par de chave e tipo já está registrado e evitar desnecessariamente tentando adicionar o script.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)">
          <source>In this overload of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt;</ph> method, you must make sure that the script provided in the <ph id="ph2">`script`</ph> parameter is wrapped with a <ph id="ph3">`&lt;script&gt;`</ph> element block.</source>
          <target state="translated">Esta sobrecarga do <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt;</ph> método, você deve garantir que o script fornecido no <ph id="ph2">`script`</ph> parâmetro é empacotado com um <ph id="ph3">`&lt;script&gt;`</ph> bloco de elemento.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)">
          <source>The script block added by the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt;</ph> method executes when the page finishes loading but before the page's <ph id="ph2">&lt;xref:System.Web.UI.Control.OnLoad%2A&gt;</ph> event is raised.</source>
          <target state="translated">O bloco de script adicionado pelo <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt;</ph> método é executado quando a página termina de ser carregada, mas antes da página <ph id="ph2">&lt;xref:System.Web.UI.Control.OnLoad%2A&gt;</ph> é gerado.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)">
          <source>The script blocks are not guaranteed to be output in the order they are registered.</source>
          <target state="translated">Não há garantia de blocos de script para a saída na ordem em que eles são registrados.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)">
          <source>If the order of the script blocks is important, use a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object to gather the scripts together in a single string, and then register them all in a single client script block.</source>
          <target state="translated">Se a ordem dos blocos de script é importante, use um <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> para reunir os scripts em uma única cadeia de caracteres do objeto e, em seguida, registrá-los em um bloco de script do cliente individual.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo de código a seguir demonstra o uso do <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)">
          <source>Note that the beginning and closing script tags are included within the <ph id="ph1">`script`</ph> parameter.</source>
          <target state="translated">Observe que o início e o script marcas de fechamento estão incluídas dentro de <ph id="ph1">`script`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)">
          <source>To have the script tags added based on an additional parameter setting, see the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt;</ph> method.</source>
          <target state="translated">Para que o script marcas adicionadas com base em uma configuração de parâmetros adicionais, consulte o <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)">
          <source>The type of the startup script to register.</source>
          <target state="translated">O tipo de script de inicialização a ser registrado.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)">
          <source>The key of the startup script to register.</source>
          <target state="translated">A chave do script de inicialização a ser registrada.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)">
          <source>The startup script literal to register.</source>
          <target state="translated">O literal do script de inicialização a ser registrado.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)">
          <source>A Boolean value indicating whether to add script tags.</source>
          <target state="translated">Um valor booliano que indica se deverão ser adicionadas marcas de script.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)">
          <source>Registers the startup script with the <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> object using a type, a key, a script literal, and a Boolean value indicating whether to add script tags.</source>
          <target state="translated">Registra o script de inicialização no objeto <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> usando um tipo, uma chave, um literal de script e um valor booliano indicando se devem ser adicionadas marcas de script.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)">
          <source>A startup script is uniquely identified by its key and its type.</source>
          <target state="translated">Um script de inicialização é identificado exclusivamente por sua chave e seu tipo.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)">
          <source>Scripts with the same key and type are considered duplicates.</source>
          <target state="translated">Scripts com a mesma chave e tipo são considerados duplicatas.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)">
          <source>Only one script with a given type and key pair can be registered with the page.</source>
          <target state="translated">Somente um script com um determinado tipo e o par de chaves pode ser registrado com a página.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)">
          <source>Attempting to register a script that is already registered does not create a duplicate of the script.</source>
          <target state="translated">Tentativa de registrar um script que já está registrado não cria uma duplicata do script.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)">
          <source>Call the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A&gt;</ph> method to determine whether a startup script with a given key and type pair is already registered and avoid unnecessarily attempting to add the script.</source>
          <target state="translated">Chamar o <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A&gt;</ph> método para determinar se um script de inicialização com um determinado par de chave e tipo já está registrado e evitar desnecessariamente tentando adicionar o script.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)">
          <source>In this overload of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt;</ph> method, you can indicate whether the script provided in the <ph id="ph2">`script`</ph> parameter is wrapped with a <ph id="ph3">`&lt;script&gt;`</ph> element block by using the <ph id="ph4">`addScriptTags`</ph> parameter.</source>
          <target state="translated">Esta sobrecarga do <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt;</ph> método, você pode indicar se o script fornecido no <ph id="ph2">`script`</ph> parâmetro é empacotado com um <ph id="ph3">`&lt;script&gt;`</ph> bloco de elemento usando o <ph id="ph4">`addScriptTags`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)">
          <source>Setting <ph id="ph1">`addScriptTags`</ph> to <ph id="ph2">`true`</ph> indicates that script tags will be added automatically.</source>
          <target state="translated">Configuração <ph id="ph1">`addScriptTags`</ph> para <ph id="ph2">`true`</ph> indica que as marcas de script serão adicionadas automaticamente.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)">
          <source>The script block added by the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt;</ph> method executes when the page finishes loading but before the page's <ph id="ph2">&lt;xref:System.Web.UI.Control.OnLoad%2A&gt;</ph> event is raised.</source>
          <target state="translated">O bloco de script adicionado pelo <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt;</ph> método é executado quando a página termina de ser carregada, mas antes da página <ph id="ph2">&lt;xref:System.Web.UI.Control.OnLoad%2A&gt;</ph> é gerado.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)">
          <source>The script blocks are not guaranteed to be output in the order they are registered.</source>
          <target state="translated">Não há garantia de blocos de script para a saída na ordem em que eles são registrados.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)">
          <source>If the order of the script blocks is important, use a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object to gather the scripts together in a single string, and then register them all in a single client script block.</source>
          <target state="translated">Se a ordem dos blocos de script é importante, use um <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> para reunir os scripts em uma única cadeia de caracteres do objeto e, em seguida, registrá-los em um bloco de script do cliente individual.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo de código a seguir demonstra o uso do <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)">
          <source>Note that the <ph id="ph1">`addScriptTags`</ph> parameter is set to <ph id="ph2">`false`</ph> so the beginning and closing script tags are included with the <ph id="ph3">`script`</ph> parameter.</source>
          <target state="translated">Observe que o <ph id="ph1">`addScriptTags`</ph> parâmetro está definido como <ph id="ph2">`false`</ph> para o início e o script marcas de fechamento estão incluídos com o <ph id="ph3">`script`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" uid="T:System.Web.UI.ClientScriptManager">
          <source>Validates a client event.</source>
          <target state="translated">Valida um evento de cliente.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String)">
          <source>A unique ID representing the client control generating the event.</source>
          <target state="translated">Uma ID exclusiva que representa o controle de cliente que gera o evento.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String)">
          <source>Validates a client event that was registered for event validation using the <ph id="ph1">&lt;see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)" /&gt;</ph> method.</source>
          <target state="translated">Valida um evento de cliente que foi registrado para a validação de evento usando o método <ph id="ph1">&lt;see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String,System.String)">
          <source>A unique ID representing the client control generating the event.</source>
          <target state="translated">Uma ID exclusiva que representa o controle de cliente que gera o evento.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String,System.String)">
          <source>The event arguments passed with the client event.</source>
          <target state="translated">Os argumentos de evento passados com o evento de cliente.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String,System.String)">
          <source>Validates a client event that was registered for event validation using the <ph id="ph1">&lt;see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)" /&gt;</ph> method.</source>
          <target state="translated">Valida um evento de cliente que foi registrado para a validação de evento usando o método <ph id="ph1">&lt;see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String,System.String)">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A&gt;</ph> method to register a callback for validation and to validate that the callback originated from the page.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar o <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A&gt;</ph> método e o <ph id="ph2">&lt;xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A&gt;</ph> método para registrar um retorno de chamada para validação e para validar que o retorno de chamada foi originado da página.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String,System.String)">
          <source>To improve on the validation shown here, you could modify the validation <ph id="ph1">`argument`</ph> parameter to contain information specific to the user such as an identity or role</source>
          <target state="translated">Para melhorar a validação mostrada aqui, você pode modificar a validação <ph id="ph1">`argument`</ph> parâmetro para conter informações específicas do usuário, como uma identidade ou uma função</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="uniqueId" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> or an empty string ("").</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uniqueId" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph> ou uma cadeia de caracteres vazia ("").</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>