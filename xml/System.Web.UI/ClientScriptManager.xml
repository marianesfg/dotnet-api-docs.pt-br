<Type Name="ClientScriptManager" FullName="System.Web.UI.ClientScriptManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e19ff5181caa07c458ad6ff38334f4d37a7d0917" />
    <Meta Name="ms.sourcegitcommit" Value="f9e3295b6cc303a611a73a84c4b27f9da792ad0d" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/26/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ClientScriptManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ClientScriptManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ClientScriptManager" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ClientScriptManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientScriptManager sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="30f86-101">Define métodos para gerenciar scripts de cliente em aplicativos Web.</span>
      <span class="sxs-lookup">
        <span data-stu-id="30f86-101">Defines methods for managing client scripts in Web applications.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30f86-102">O <xref:System.Web.UI.ClientScriptManager> classe é usada para gerenciar scripts de cliente e adicioná-las aos aplicativos da Web.</span><span class="sxs-lookup"><span data-stu-id="30f86-102">The <xref:System.Web.UI.ClientScriptManager> class is used to manage client scripts and add them to Web applications.</span></span> <span data-ttu-id="30f86-103">Você pode obter uma referência para o <xref:System.Web.UI.ClientScriptManager> classe o <xref:System.Web.UI.Page.ClientScript%2A> propriedade do <xref:System.Web.UI.Page> objeto.</span><span class="sxs-lookup"><span data-stu-id="30f86-103">You can get a reference to the <xref:System.Web.UI.ClientScriptManager> class from the <xref:System.Web.UI.Page.ClientScript%2A> property of the <xref:System.Web.UI.Page> object.</span></span>  
  
 <span data-ttu-id="30f86-104">Você pode adicionar um script de cliente para uma página da Web declarativamente, incluindo o script na marcação HTML da página.</span><span class="sxs-lookup"><span data-stu-id="30f86-104">You can add a client script to a Web page declaratively by including the script in the HTML markup of the page.</span></span> <span data-ttu-id="30f86-105">No entanto, há situações quando adicionar o script de cliente dinamicamente é necessária.</span><span class="sxs-lookup"><span data-stu-id="30f86-105">However, there are situations when adding client script dynamically is needed.</span></span> <span data-ttu-id="30f86-106">Para adicionar um script dinamicamente, use o <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> método, o <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> método, o <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> método, ou o <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> método, dependendo de quando e como você deseja adicionar o script.</span><span class="sxs-lookup"><span data-stu-id="30f86-106">To add a script dynamically, use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method, the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method, the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method, or the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method, depending on when and how you want to add the script.</span></span> <span data-ttu-id="30f86-107">Para obter mais informações, consulte [como: Adicionar cliente Script dinamicamente para páginas da Web do ASP.NET](http://msdn.microsoft.com/library/e89f1306-e43d-49ae-a66a-e18b71007666).</span><span class="sxs-lookup"><span data-stu-id="30f86-107">For more information, see [How to: Add Client Script Dynamically to ASP.NET Web Pages](http://msdn.microsoft.com/library/e89f1306-e43d-49ae-a66a-e18b71007666).</span></span>  
  
 <span data-ttu-id="30f86-108">O <xref:System.Web.UI.ClientScriptManager> classe scripts identifica exclusivamente por uma chave <xref:System.String> e um <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="30f86-108">The <xref:System.Web.UI.ClientScriptManager> class uniquely identifies scripts by a key <xref:System.String> and a <xref:System.Type>.</span></span> <span data-ttu-id="30f86-109">Scripts com a mesma chave e tipo são considerados duplicatas.</span><span class="sxs-lookup"><span data-stu-id="30f86-109">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="30f86-110">Usar o tipo de script ajuda a evitar confusos scripts semelhantes de controles de usuário diferentes que podem estar em uso na página.</span><span class="sxs-lookup"><span data-stu-id="30f86-110">Using the script type helps to avoid confusing similar scripts from different user controls that might be in use on the page.</span></span>  
  
 <span data-ttu-id="30f86-111">O <xref:System.Web.UI.ClientScriptManager> classe pode ser usada para invocar retornos de chamada de cliente em situações, é necessário para executar o código do servidor do cliente sem executar um postback.</span><span class="sxs-lookup"><span data-stu-id="30f86-111">The <xref:System.Web.UI.ClientScriptManager> class can be used to invoke client callbacks in situations when it is desirable to run server code from the client without performing a postback.</span></span> <span data-ttu-id="30f86-112">Isso é conhecido como executar um retorno de chamada fora de banda para o servidor.</span><span class="sxs-lookup"><span data-stu-id="30f86-112">This is referred to as performing an out-of-band callback to the server.</span></span> <span data-ttu-id="30f86-113">Em um retorno de chamada do cliente, uma função de script de cliente envia uma solicitação assíncrona para uma página da Web do ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="30f86-113">In a client callback, a client script function sends an asynchronous request to an ASP.NET Web page.</span></span> <span data-ttu-id="30f86-114">A página da Web executa uma versão modificada do seu ciclo de vida normal para processar o retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="30f86-114">The Web page runs a modified version of its normal life cycle to process the callback.</span></span> <span data-ttu-id="30f86-115">Use o <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> método para obter uma referência a uma função de cliente que, quando chamado, inicia um retorno de chamada do cliente para um evento de servidor.</span><span class="sxs-lookup"><span data-stu-id="30f86-115">Use the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method to obtain a reference to a client function that, when invoked, initiates a client callback to a server event.</span></span> <span data-ttu-id="30f86-116">Para obter mais informações, consulte [implementando retornos de chamada de cliente sem Postbacks](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span><span class="sxs-lookup"><span data-stu-id="30f86-116">For more information, see [Implementing Client Callbacks Without Postbacks](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="30f86-117">Retornos de chamada de script não funcionará em navegadores mais antigos que não oferecem suporte para o modelo de objeto de documento (DOM), e eles requerem que ECMAScript está habilitado no cliente.</span><span class="sxs-lookup"><span data-stu-id="30f86-117">Script callbacks will not work in older browsers that do not support the Document Object Model (DOM), and they require that ECMAScript is enabled on the client.</span></span> <span data-ttu-id="30f86-118">Para verificar se o navegador oferece suporte a retornos de chamada, use o <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> propriedade, o que pode ser acessada por meio de <xref:System.Web.HttpRequest.Browser%2A> propriedade do ASP.NET intrínseco <xref:System.Web.HttpContext.Request%2A> objeto.</span><span class="sxs-lookup"><span data-stu-id="30f86-118">To check if the browser supports callbacks, use the <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> property, which is accessible through the <xref:System.Web.HttpRequest.Browser%2A> property of the ASP.NET intrinsic <xref:System.Web.HttpContext.Request%2A> object.</span></span>  
  
 <span data-ttu-id="30f86-119">Use o <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> método e o <xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A> método para definir um evento de postback do cliente.</span><span class="sxs-lookup"><span data-stu-id="30f86-119">Use the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method and the <xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A> method to define a client postback event.</span></span> <span data-ttu-id="30f86-120">Esses métodos permitem que as funções de script de cliente, quando chamado, para fazer com que o servidor de volta para a página.</span><span class="sxs-lookup"><span data-stu-id="30f86-120">These methods enable client script functions, when invoked, to cause the server to post back to the page.</span></span> <span data-ttu-id="30f86-121">Um evento de postback do cliente é diferente de um retorno de chamada do cliente em que a página da Web concluir um ciclo de vida normal para processar o evento de postback do cliente.</span><span class="sxs-lookup"><span data-stu-id="30f86-121">A client postback event is different from a client callback in that the Web page completes a normal life cycle to process the client postback event.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="30f86-122">Se você estiver usando um <xref:System.Web.UI.WebControls.Button> controle e o <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> está definida como `false`, em seguida, você pode usar o <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> evento de postback de método para retornar o cliente o <xref:System.Web.UI.WebControls.Button> controle.</span><span class="sxs-lookup"><span data-stu-id="30f86-122">If you are using a <xref:System.Web.UI.WebControls.Button> control and the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is set to `false`, then you can use the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method to return the client postback event for the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 <span data-ttu-id="30f86-123">O <xref:System.Web.UI.WebControls.Button.OnClientClick%2A> propriedade o <xref:System.Web.UI.WebControls.Button> controle, <xref:System.Web.UI.WebControls.ImageButton> controle, e <xref:System.Web.UI.WebControls.LinkButton> controle pode ser usado para executar o script de cliente.</span><span class="sxs-lookup"><span data-stu-id="30f86-123">The <xref:System.Web.UI.WebControls.Button.OnClientClick%2A> property of the <xref:System.Web.UI.WebControls.Button> control, <xref:System.Web.UI.WebControls.ImageButton> control, and <xref:System.Web.UI.WebControls.LinkButton> control can be used to run client script.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30f86-124">O exemplo de código a seguir demonstra o uso do <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> método o <xref:System.Web.UI.ClientScriptManager> classe.</span><span class="sxs-lookup"><span data-stu-id="30f86-124">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="30f86-125">Dois scripts de cliente são definidas na página: `PopupScript`, que exibe uma mensagem de alerta quando a página for carregada, e `ButtonClickScript`, que define um manipulador de cliente para um botão HTML `onClick` eventos.</span><span class="sxs-lookup"><span data-stu-id="30f86-125">Two client scripts are defined in the page: `PopupScript`, which displays an alert message when the page is loaded, and `ButtonClickScript`, which defines a client handler for an HTML button's `onClick` event.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Page" />
    <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback" />
    <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp" />
  </Docs>
  <Members>
    <MemberGroup MemberName="GetCallbackEventReference">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="30f86-126">Obtém uma referência a uma função de cliente que, quando invocada, inicia um retorno de chamada do cliente para um evento de servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-126">Obtains a reference to a client function that, when invoked, initiates a client call back to a server event.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCallbackEventReference">
      <MemberSignature Language="C#" Value="public string GetCallbackEventReference (System.Web.UI.Control control, string argument, string clientCallback, string context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetCallbackEventReference(class System.Web.UI.Control control, string argument, string clientCallback, string context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackEventReference(System::Web::UI::Control ^ control, System::String ^ argument, System::String ^ clientCallback, System::String ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="clientCallback" Type="System.String" />
        <Parameter Name="context" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="30f86-127">O <see cref="T:System.Web.UI.Control" /> do servidor que manipula o retorno de chamada do cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-127">The server <see cref="T:System.Web.UI.Control" /> that handles the client callback.</span>
          </span>
          <span data-ttu-id="30f86-128">O controle deve implementar a interface <see cref="T:System.Web.UI.ICallbackEventHandler" /> e fornecer um método <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-128">The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="30f86-129">Um argumento passado do script de cliente para o servidor</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-129">An argument passed from the client script to the server</span>
          </span>
          <span data-ttu-id="30f86-130">Método <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-130">
              <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="clientCallback">
          <span data-ttu-id="30f86-131">O nome do manipulador de eventos do cliente que recebe o resultado do evento do servidor com êxito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-131">The name of the client event handler that receives the result of the successful server event.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="30f86-132">O script de cliente avaliado no cliente antes de iniciar o retorno de chamada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-132">The client script that is evaluated on the client prior to initiating the callback.</span>
          </span>
          <span data-ttu-id="30f86-133">O resultado do script é passado de volta para o manipulador de eventos do cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-133">The result of the script is passed back to the client event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30f86-134">Obtém uma referência a uma função de cliente que, quando invocada, inicia um retorno de chamada do cliente para um evento de servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-134">Obtains a reference to a client function that, when invoked, initiates a client call back to a server event.</span>
          </span>
          <span data-ttu-id="30f86-135">A função do cliente para esse método sobrecarregado inclui um controle, argumento, script de cliente e contexto especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-135">The client function for this overloaded method includes a specified control, argument, client script, and context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30f86-136">O nome de uma função de cliente que invoca o retorno de chamada do cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-136">The name of a client function that invokes the client callback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30f86-137">O <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%28System.Web.UI.Control%2CSystem.String%2CSystem.String%2CSystem.String%29> método executa um retorno de chamada fora de banda para o servidor que é uma versão modificada do ciclo de vida normal de uma página.</span><span class="sxs-lookup"><span data-stu-id="30f86-137">The <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%28System.Web.UI.Control%2CSystem.String%2CSystem.String%2CSystem.String%29> method performs an out-of-band callback to the server that is a modified version of a page's normal life cycle.</span></span> <span data-ttu-id="30f86-138">Para obter mais informações, consulte [implementando retornos de chamada de cliente sem Postbacks](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span><span class="sxs-lookup"><span data-stu-id="30f86-138">For more information, see [Implementing Client Callbacks Without Postbacks](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="30f86-139">Quando o navegador for o Microsoft Internet Explorer (versão 5.0 ou posterior), o mecanismo de retorno de chamada de script é implementado por meio do objeto Microsoft.XmlHttp COM e requer que o navegador ser definida para executar controles ActiveX.</span><span class="sxs-lookup"><span data-stu-id="30f86-139">When the browser is Microsoft Internet Explorer (version 5.0 or later), the script callback mechanism is implemented through the Microsoft.XmlHttp COM object and requires the browser to be set to run ActiveX controls.</span></span> <span data-ttu-id="30f86-140">Para outros navegadores, uma XMLHttpRequest usando local DOM do navegador Document Object Model () é usada.</span><span class="sxs-lookup"><span data-stu-id="30f86-140">For other browsers, an XMLHttpRequest using the browser's local Document Object Model (DOM) is used.</span></span> <span data-ttu-id="30f86-141">Para verificar se um navegador oferece suporte a retornos de chamada de cliente, use o <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="30f86-141">To check whether a browser supports client callbacks, use the <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> property.</span></span> <span data-ttu-id="30f86-142">Para verificar se um navegador oferece suporte a XML sobre HTTP, use o <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="30f86-142">To check whether a browser supports XML over HTTP, use the <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp%2A> property.</span></span> <span data-ttu-id="30f86-143">Ambas as propriedades são acessíveis por meio de <xref:System.Web.HttpRequest.Browser%2A> propriedade do ASP.NET intrínseco <xref:System.Web.HttpContext.Request%2A> objeto.</span><span class="sxs-lookup"><span data-stu-id="30f86-143">Both properties are accessible through the <xref:System.Web.HttpRequest.Browser%2A> property of the intrinsic ASP.NET <xref:System.Web.HttpContext.Request%2A> object.</span></span>  
  
 <span data-ttu-id="30f86-144">O <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> de sobrecarga do <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> método executa um retorno de chamada de maneira síncrona usando XML sobre HTTP.</span><span class="sxs-lookup"><span data-stu-id="30f86-144">The <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method performs a callback synchronously using XML over HTTP.</span></span> <span data-ttu-id="30f86-145">Ao enviar dados de forma síncrona em um cenário de retorno de chamada, retornos de chamada síncronos retornam imediatamente e não bloqueiam o navegador.</span><span class="sxs-lookup"><span data-stu-id="30f86-145">When sending data synchronously in a callback scenario, synchronous callbacks return immediately and do not block the browser.</span></span> <span data-ttu-id="30f86-146">Nenhum retorno de chamada de dois retornos de chamada síncrona pode executar ao mesmo tempo no navegador.</span><span class="sxs-lookup"><span data-stu-id="30f86-146">No two synchronous callbacks callback can execute at the same time in the browser.</span></span> <span data-ttu-id="30f86-147">Se um retorno de chamada síncrono segundo for acionado enquanto um está pendente no momento, o retorno de chamada síncrono segundo cancela a primeira e retornará apenas o retorno de chamada segundo.</span><span class="sxs-lookup"><span data-stu-id="30f86-147">If a second synchronous callback is fired while one is currently pending, the second synchronous callback cancels the first and only the second callback will return.</span></span>  
  
 <span data-ttu-id="30f86-148">Para enviar dados de forma assíncrona, use uma das sobrecargas que usa o `useAsync` parâmetro, que é um valor booleano valor controlar esse comportamento.</span><span class="sxs-lookup"><span data-stu-id="30f86-148">To send data asynchronously, use one of the overloads that takes the `useAsync` parameter, which is a Boolean value controlling this behavior.</span></span> <span data-ttu-id="30f86-149">No cenário assíncrono, você pode ter vários retornos de chamada pendentes; No entanto, a ordem em que elas retornam não é garantida para corresponder à ordem na qual elas foram iniciadas.</span><span class="sxs-lookup"><span data-stu-id="30f86-149">In the asynchronous scenario you can have multiple pending callbacks; however, the order in which they return is not guaranteed to match the order in which they were initiated.</span></span>  
  
 <span data-ttu-id="30f86-150">Além disso, essa sobrecarga do <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> método não especifica nenhuma função de cliente para lidar com o caso de uma condição de erro gerado pelo <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> método.</span><span class="sxs-lookup"><span data-stu-id="30f86-150">Additionally, this overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method specifies no client function to handle the case of an error condition generated by the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method.</span></span> <span data-ttu-id="30f86-151">Para especificar um manipulador de retorno de chamada de erro do cliente, use uma das sobrecargas que usa o `clientErrorCallback` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="30f86-151">To specify a client error callback handler, use one of the overloads that takes the `clientErrorCallback` parameter.</span></span>  
  
 <span data-ttu-id="30f86-152">O <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%28System.Web.UI.Control%2CSystem.String%2CSystem.String%2CSystem.String%29> método usa uma cadeia de caracteres opcional `argument` parâmetro e retorna uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="30f86-152">The <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%28System.Web.UI.Control%2CSystem.String%2CSystem.String%2CSystem.String%29> method takes an optional string `argument` parameter and returns a string.</span></span> <span data-ttu-id="30f86-153">Para passar ou receber vários valores, concatenar os valores na entrada ou retornar a cadeia de caracteres, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="30f86-153">To pass in or to receive multiple values, concatenate values in the input or return string, respectively.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="30f86-154">Evite usar o estado de exibição na implementação de controle ou página de propriedades que precisam ser atualizados durante operações de retorno de chamada de script.</span><span class="sxs-lookup"><span data-stu-id="30f86-154">Avoid using the view state in the implementation of page or control properties that need be updated during script callback operations.</span></span> <span data-ttu-id="30f86-155">Se as propriedades são sobreviver a solicitações de página, você pode usar o estado da sessão.</span><span class="sxs-lookup"><span data-stu-id="30f86-155">If the properties are to survive page requests, you can use session state.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30f86-156">O exemplo de código a seguir demonstra como usar duas sobrecargas do <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> método em um cenário de retorno de chamada de cliente com incrementos de números inteiros.</span><span class="sxs-lookup"><span data-stu-id="30f86-156">The following code example demonstrates how to use two overloads of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method in a client callback scenario that increments integers.</span></span>  
  
 <span data-ttu-id="30f86-157">Dois mecanismos de retorno de chamada são mostrados; a diferença entre eles é o uso do `context` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="30f86-157">Two callback mechanisms are shown; the difference between them is the use of the `context` parameter.</span></span> <span data-ttu-id="30f86-158">Um `ReceiveServerData1` função de retorno de chamada do cliente é fornecida usando o `context` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="30f86-158">A `ReceiveServerData1` client callback function is provided using the `context` parameter.</span></span> <span data-ttu-id="30f86-159">Em contraste, o `ReceiveServerData2` função de retorno de chamada do cliente é definida em um `<script>` bloco na página.</span><span class="sxs-lookup"><span data-stu-id="30f86-159">In contrast, the `ReceiveServerData2` client callback function is defined in a `<script>` block on the page.</span></span> <span data-ttu-id="30f86-160">Um <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> método é o manipulador de servidor que incrementa o valor que é passado para ele e o <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> método retorna o valor incrementado como uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="30f86-160">A <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method is the server handler that increments the value that is passed to it and the <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> method returns the incremented value as a string.</span></span> <span data-ttu-id="30f86-161">Se o <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> método retornará um erro, o `ProcessCallBackError` é chamada de função de cliente.</span><span class="sxs-lookup"><span data-stu-id="30f86-161">If the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method returns an error, then the `ProcessCallBackError` client function is called.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager7#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager7/cs/getcallbackeventreference.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager7#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager7/vb/getcallbackeventreference.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="30f86-162">O <see cref="T:System.Web.UI.Control" /> especificado é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-162">The <see cref="T:System.Web.UI.Control" /> specified is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="30f86-163">O <see cref="T:System.Web.UI.Control" /> especificado não implementa a interface <see cref="T:System.Web.UI.ICallbackEventHandler" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-163">The <see cref="T:System.Web.UI.Control" /> specified does not implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.ICallbackEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetCallbackEventReference">
      <MemberSignature Language="C#" Value="public string GetCallbackEventReference (System.Web.UI.Control control, string argument, string clientCallback, string context, bool useAsync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetCallbackEventReference(class System.Web.UI.Control control, string argument, string clientCallback, string context, bool useAsync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackEventReference(System::Web::UI::Control ^ control, System::String ^ argument, System::String ^ clientCallback, System::String ^ context, bool useAsync);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="clientCallback" Type="System.String" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="useAsync" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="30f86-164">O <see cref="T:System.Web.UI.Control" /> do servidor que manipula o retorno de chamada do cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-164">The server <see cref="T:System.Web.UI.Control" /> that handles the client callback.</span>
          </span>
          <span data-ttu-id="30f86-165">O controle deve implementar a interface <see cref="T:System.Web.UI.ICallbackEventHandler" /> e fornecer um método <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-165">The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="30f86-166">Um argumento passado do script de cliente para o servidor</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-166">An argument passed from the client script to the server</span>
          </span>
          <span data-ttu-id="30f86-167">Método <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-167">
              <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="clientCallback">
          <span data-ttu-id="30f86-168">O nome do manipulador de eventos do cliente que recebe o resultado do evento do servidor com êxito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-168">The name of the client event handler that receives the result of the successful server event.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="30f86-169">O script de cliente avaliado no cliente antes de iniciar o retorno de chamada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-169">The client script that is evaluated on the client prior to initiating the callback.</span>
          </span>
          <span data-ttu-id="30f86-170">O resultado do script é passado de volta para o manipulador de eventos do cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-170">The result of the script is passed back to the client event handler.</span>
          </span>
        </param>
        <param name="useAsync">
          <span data-ttu-id="30f86-171">
            <see langword="true" /> para executar o retorno de chamada de forma assíncrona; <see langword="false" /> para executar o retorno de chamada de forma síncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-171">
              <see langword="true" /> to perform the callback asynchronously; <see langword="false" /> to perform the callback synchronously.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30f86-172">Obtém uma referência a uma função de cliente que, quando invocada, inicia um retorno de chamada do cliente para eventos de servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-172">Obtains a reference to a client function that, when invoked, initiates a client call back to server events.</span>
          </span>
          <span data-ttu-id="30f86-173">A função do cliente para esse método sobrecarregado inclui um controle, um argumento, um script de cliente, um contexto e um valor booliano especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-173">The client function for this overloaded method includes a specified control, argument, client script, context, and Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30f86-174">O nome de uma função de cliente que invoca o retorno de chamada do cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-174">The name of a client function that invokes the client callback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30f86-175">Esta sobrecarga do <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> método exige um `useAsync` parâmetro, que permite que você executar o retorno de chamada do cliente de forma assíncrona, definindo o valor como `true`.</span><span class="sxs-lookup"><span data-stu-id="30f86-175">This overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method requires a `useAsync` parameter, which allows you to perform the client callback asynchronously by setting the value to `true`.</span></span> <span data-ttu-id="30f86-176">As versões de sobrecarga desse método que não exigem o `useAsync` parâmetro defina o valor como `false` por padrão.</span><span class="sxs-lookup"><span data-stu-id="30f86-176">The overload versions of this method that do not require the `useAsync` parameter set the value to `false` by default.</span></span>  
  
 <span data-ttu-id="30f86-177">Para obter mais informações sobre esse método, consulte os comentários para a sobrecarga <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> método.</span><span class="sxs-lookup"><span data-stu-id="30f86-177">For more information on this method, see the remarks for the overload <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="30f86-178">O <see cref="T:System.Web.UI.Control" /> especificado é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-178">The <see cref="T:System.Web.UI.Control" /> specified is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="30f86-179">O <see cref="T:System.Web.UI.Control" /> especificado não implementa a interface <see cref="T:System.Web.UI.ICallbackEventHandler" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-179">The <see cref="T:System.Web.UI.Control" /> specified does not implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.ICallbackEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetCallbackEventReference">
      <MemberSignature Language="C#" Value="public string GetCallbackEventReference (string target, string argument, string clientCallback, string context, string clientErrorCallback, bool useAsync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetCallbackEventReference(string target, string argument, string clientCallback, string context, string clientErrorCallback, bool useAsync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCallbackEventReference (target As String, argument As String, clientCallback As String, context As String, clientErrorCallback As String, useAsync As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackEventReference(System::String ^ target, System::String ^ argument, System::String ^ clientCallback, System::String ^ context, System::String ^ clientErrorCallback, bool useAsync);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="clientCallback" Type="System.String" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="clientErrorCallback" Type="System.String" />
        <Parameter Name="useAsync" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="30f86-180">O nome de um servidor <see cref="T:System.Web.UI.Control" /> que manipula o retorno de chamada do cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-180">The name of a server <see cref="T:System.Web.UI.Control" /> that handles the client callback.</span>
          </span>
          <span data-ttu-id="30f86-181">O controle deve implementar a interface <see cref="T:System.Web.UI.ICallbackEventHandler" /> e fornecer um método <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-181">The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="30f86-182">Um argumento passado do script de cliente para o servidor</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-182">An argument passed from the client script to the server</span>
          </span>
          <span data-ttu-id="30f86-183">Método <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-183">
              <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="clientCallback">
          <span data-ttu-id="30f86-184">O nome do manipulador de eventos do cliente que recebe o resultado do evento do servidor com êxito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-184">The name of the client event handler that receives the result of the successful server event.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="30f86-185">O script de cliente avaliado no cliente antes de iniciar o retorno de chamada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-185">The client script that is evaluated on the client prior to initiating the callback.</span>
          </span>
          <span data-ttu-id="30f86-186">O resultado do script é passado de volta para o manipulador de eventos do cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-186">The result of the script is passed back to the client event handler.</span>
          </span>
        </param>
        <param name="clientErrorCallback">
          <span data-ttu-id="30f86-187">O nome do manipulador de eventos do cliente que recebe o resultado quando ocorre um erro no manipulador de eventos do servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-187">The name of the client event handler that receives the result when an error occurs in the server event handler.</span>
          </span>
        </param>
        <param name="useAsync">
          <span data-ttu-id="30f86-188">
            <see langword="true" /> para executar o retorno de chamada de forma assíncrona; <see langword="false" /> para executar o retorno de chamada de forma síncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-188">
              <see langword="true" /> to perform the callback asynchronously; <see langword="false" /> to perform the callback synchronously.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30f86-189">Obtém uma referência a uma função de cliente que, quando invocada, inicia um retorno de chamada do cliente para eventos de servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-189">Obtains a reference to a client function that, when invoked, initiates a client call back to server events.</span>
          </span>
          <span data-ttu-id="30f86-190">A função do cliente para esse método sobrecarregado inclui um destino, argumento, script de cliente, contexto, manipulador de erro e valor booliano especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-190">The client function for this overloaded method includes a specified target, argument, client script, context, error handler, and Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30f86-191">O nome de uma função de cliente que invoca o retorno de chamada do cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-191">The name of a client function that invokes the client callback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30f86-192">Esta sobrecarga do <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> leva um `target` parâmetro em vez de cadeia de caracteres um <xref:System.Web.UI.Control> parâmetro.</span><span class="sxs-lookup"><span data-stu-id="30f86-192">This overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method takes a `target` string parameter instead of a <xref:System.Web.UI.Control> parameter.</span></span> <span data-ttu-id="30f86-193">Use essa sobrecarga quando desejar que o retorno de chamada para voltar para algo diferente de uma cadeia de caracteres que contém o <xref:System.Web.UI.Control.UniqueID%2A> do controle.</span><span class="sxs-lookup"><span data-stu-id="30f86-193">Use this overload when you want the callback to go back to something other than a string containing the <xref:System.Web.UI.Control.UniqueID%2A> of the control.</span></span>  
  
 <span data-ttu-id="30f86-194">Além disso, essa sobrecarga do <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> método exige um `useAsync` e um `clientErrorCallback` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="30f86-194">Additionally, this overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method requires a `useAsync` and a `clientErrorCallback` parameter.</span></span> <span data-ttu-id="30f86-195">O `useAsync` parâmetro permite que você executar o retorno de chamada do cliente de forma assíncrona, definindo o valor como `true`.</span><span class="sxs-lookup"><span data-stu-id="30f86-195">The `useAsync` parameter allows you to perform the client callback asynchronously by setting the value to `true`.</span></span> <span data-ttu-id="30f86-196">As versões de sobrecarga desse método que não exigem o `useAsync` parâmetro defina o valor como `false` por padrão.</span><span class="sxs-lookup"><span data-stu-id="30f86-196">The overload versions of this method that do not require the `useAsync` parameter set the value to `false` by default.</span></span> <span data-ttu-id="30f86-197">O `clientErrorCallback` parâmetro permite que você defina o nome da função de cliente que será chamado se o manipulador de servidor, o <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> método, retornará um erro.</span><span class="sxs-lookup"><span data-stu-id="30f86-197">The `clientErrorCallback` parameter allows you to define the name of the client function that is called if the server handler, the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method, returns an error.</span></span> <span data-ttu-id="30f86-198">As versões de sobrecarga desse método que não exigem o `clientErrorCallback` parâmetro definir o valor como nulo.</span><span class="sxs-lookup"><span data-stu-id="30f86-198">The overload versions of this method that do not require the `clientErrorCallback` parameter set the value to null.</span></span>  
  
 <span data-ttu-id="30f86-199">Para obter mais informações sobre esse método, consulte os comentários para a sobrecarga <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> método.</span><span class="sxs-lookup"><span data-stu-id="30f86-199">For more information on this method, see the remarks for the overload <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30f86-200">O exemplo de código a seguir demonstra como usar duas sobrecargas do <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> método em um cenário de retorno de chamada de cliente com incrementos de números inteiros.</span><span class="sxs-lookup"><span data-stu-id="30f86-200">The following code example demonstrates how to use two overloads of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method in a client callback scenario that increments integers.</span></span>  
  
 <span data-ttu-id="30f86-201">Dois mecanismos de retorno de chamada são mostrados; a diferença entre eles é o uso do `context` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="30f86-201">Two callback mechanisms are shown; the difference between them is the use of the `context` parameter.</span></span> <span data-ttu-id="30f86-202">Um `ReceiveServerData1` função de retorno de chamada do cliente é fornecida usando o `context` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="30f86-202">A `ReceiveServerData1` client callback function is provided using the `context` parameter.</span></span> <span data-ttu-id="30f86-203">Em contraste, o `ReceiveServerData2` função de retorno de chamada do cliente é definida em um `<script>` bloco na página.</span><span class="sxs-lookup"><span data-stu-id="30f86-203">In contrast, the `ReceiveServerData2` client callback function is defined in a `<script>` block on the page.</span></span> <span data-ttu-id="30f86-204">Um <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> método é o manipulador de servidor que incrementa o valor que é passado para ele e o <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> método retorna o valor incrementado como uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="30f86-204">A <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method is the server handler that increments the value that is passed to it and the <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> method returns the incremented value as a string.</span></span> <span data-ttu-id="30f86-205">Se o <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> método retornará um erro e, em seguida, a função cliente `ProcessCallBackError` é chamado.</span><span class="sxs-lookup"><span data-stu-id="30f86-205">If the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method returns an error, then the client function `ProcessCallBackError` is called.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager7#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager7/cs/getcallbackeventreference.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager7#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager7/vb/getcallbackeventreference.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ICallbackEventHandler" />
        <altmember cref="P:System.Web.UI.Control.UniqueID" />
      </Docs>
    </Member>
    <Member MemberName="GetCallbackEventReference">
      <MemberSignature Language="C#" Value="public string GetCallbackEventReference (System.Web.UI.Control control, string argument, string clientCallback, string context, string clientErrorCallback, bool useAsync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetCallbackEventReference(class System.Web.UI.Control control, string argument, string clientCallback, string context, string clientErrorCallback, bool useAsync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackEventReference(System::Web::UI::Control ^ control, System::String ^ argument, System::String ^ clientCallback, System::String ^ context, System::String ^ clientErrorCallback, bool useAsync);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="clientCallback" Type="System.String" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="clientErrorCallback" Type="System.String" />
        <Parameter Name="useAsync" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="30f86-206">O <see cref="T:System.Web.UI.Control" /> do servidor que manipula o retorno de chamada do cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-206">The server <see cref="T:System.Web.UI.Control" /> that handles the client callback.</span>
          </span>
          <span data-ttu-id="30f86-207">O controle deve implementar a interface <see cref="T:System.Web.UI.ICallbackEventHandler" /> e fornecer um método <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-207">The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="30f86-208">Um argumento passado do script de cliente para o método <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> do servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-208">An argument passed from the client script to the server <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="clientCallback">
          <span data-ttu-id="30f86-209">O nome do manipulador de eventos do cliente que recebe o resultado do evento do servidor com êxito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-209">The name of the client event handler that receives the result of the successful server event.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="30f86-210">O script de cliente avaliado no cliente antes de iniciar o retorno de chamada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-210">The client script that is evaluated on the client prior to initiating the callback.</span>
          </span>
          <span data-ttu-id="30f86-211">O resultado do script é passado de volta para o manipulador de eventos do cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-211">The result of the script is passed back to the client event handler.</span>
          </span>
        </param>
        <param name="clientErrorCallback">
          <span data-ttu-id="30f86-212">O nome do manipulador de eventos do cliente que recebe o resultado quando ocorre um erro no manipulador de eventos do servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-212">The name of the client event handler that receives the result when an error occurs in the server event handler.</span>
          </span>
        </param>
        <param name="useAsync">
          <span data-ttu-id="30f86-213">
            <see langword="true" /> para executar o retorno de chamada de forma assíncrona; <see langword="false" /> para executar o retorno de chamada de forma síncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-213">
              <see langword="true" /> to perform the callback asynchronously; <see langword="false" /> to perform the callback synchronously.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30f86-214">Obtém uma referência a uma função de cliente que, quando invocada, inicia um retorno de chamada do cliente para eventos de servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-214">Obtains a reference to a client function that, when invoked, initiates a client call back to server events.</span>
          </span>
          <span data-ttu-id="30f86-215">A função do cliente para esse método sobrecarregado inclui um controle, um argumento, um script de cliente, um contexto, um manipulador de erros e m valor booliano especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-215">The client function for this overloaded method includes a specified control, argument, client script, context, error handler, and Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30f86-216">O nome de uma função de cliente que invoca o retorno de chamada do cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-216">The name of a client function that invokes the client callback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30f86-217">Esta sobrecarga do <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> método exige um `useAsync` e um `clientErrorCallback` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="30f86-217">This overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method requires a `useAsync` and a `clientErrorCallback` parameter.</span></span> <span data-ttu-id="30f86-218">O `useAsync` parâmetro permite que você executar o retorno de chamada do cliente de forma assíncrona, definindo o valor como `true`.</span><span class="sxs-lookup"><span data-stu-id="30f86-218">The `useAsync` parameter allows you to perform the client callback asynchronously by setting the value to `true`.</span></span> <span data-ttu-id="30f86-219">As versões de sobrecarga desse método que não exigem o `useAsync` parâmetro defina o valor como `false` por padrão.</span><span class="sxs-lookup"><span data-stu-id="30f86-219">The overload versions of this method that do not require the `useAsync` parameter set the value to `false` by default.</span></span> <span data-ttu-id="30f86-220">O `clientErrorCallback` parâmetro permite que você defina o nome da função de cliente que será chamado se o manipulador de servidor (o <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> método) retornará um erro.</span><span class="sxs-lookup"><span data-stu-id="30f86-220">The `clientErrorCallback` parameter allows you to define the name of the client function that is called if the server handler (the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method) returns an error.</span></span> <span data-ttu-id="30f86-221">As versões de sobrecarga desse método que não exigem o `clientErrorCallback` parâmetro definir o valor como nulo.</span><span class="sxs-lookup"><span data-stu-id="30f86-221">The overload versions of this method that do not require the `clientErrorCallback` parameter set the value to null.</span></span>  
  
 <span data-ttu-id="30f86-222">Para obter mais informações sobre esse método, consulte os comentários para a sobrecarga <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> método.</span><span class="sxs-lookup"><span data-stu-id="30f86-222">For more information on this method, see the remarks for the overload <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="30f86-223">O <see cref="T:System.Web.UI.Control" /> especificado é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-223">The <see cref="T:System.Web.UI.Control" /> specified is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="30f86-224">O <see cref="T:System.Web.UI.Control" /> especificado não implementa a interface <see cref="T:System.Web.UI.ICallbackEventHandler" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-224">The <see cref="T:System.Web.UI.Control" /> specified does not implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.ICallbackEventHandler" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPostBackClientHyperlink">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="30f86-225">Obtém uma referência, com <see langword="javascript:" /> acrescentado ao início, que pode ser usada em um evento de cliente para postback ao servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-225">Gets a reference, with <see langword="javascript:" /> appended to the beginning of it, that can be used in a client event to post back to the server.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPostBackClientHyperlink">
      <MemberSignature Language="C#" Value="public string GetPostBackClientHyperlink (System.Web.UI.Control control, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackClientHyperlink(class System.Web.UI.Control control, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackClientHyperlink(System::Web::UI::Control ^ control, System::String ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="30f86-226">O controle de servidor para processar o postback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-226">The server control to process the postback.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="30f86-227">O parâmetro passado para o controle de servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-227">The parameter passed to the server control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30f86-228">Obtém uma referência, com <see langword="javascript:" /> acrescentado ao início, que pode ser usada em um evento de cliente para postback ao servidor do controle especificado e com os argumentos de evento especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-228">Gets a reference, with <see langword="javascript:" /> appended to the beginning of it, that can be used in a client event to post back to the server for the specified control and with the specified event arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30f86-229">Uma cadeia de caracteres que representa uma chamada de JavaScript à função de postback, que inclui os argumentos de evento e de ID do controle de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-229">A string representing a JavaScript call to the postback function that includes the target control's ID and event arguments.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30f86-230">Usando o <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> método requer que o controle que manipula a postagem para implementar o <xref:System.Web.UI.IPostBackEventHandler> interface.</span><span class="sxs-lookup"><span data-stu-id="30f86-230">Using the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method requires the control that handles the postback to implement the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span> <span data-ttu-id="30f86-231">Para implementar o <xref:System.Web.UI.IPostBackEventHandler> a interface para um <xref:System.Web.UI.Page>, use a diretiva.</span><span class="sxs-lookup"><span data-stu-id="30f86-231">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page>,  use the  directive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30f86-232">O exemplo de código a seguir demonstra o uso do <xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A> método.</span><span class="sxs-lookup"><span data-stu-id="30f86-232">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A> method.</span></span> <span data-ttu-id="30f86-233">O controle personalizado, `MyControl`, implementa o <xref:System.Web.UI.IPostBackEventHandler> interface.</span><span class="sxs-lookup"><span data-stu-id="30f86-233">The custom control, `MyControl`, implements the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span> <span data-ttu-id="30f86-234">Quando o elemento de âncora HTML da página é clicado, o <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> método do controle personalizado é chamado.</span><span class="sxs-lookup"><span data-stu-id="30f86-234">When the HTML anchor element on the page is clicked, the <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> method of the custom control is invoked.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager8#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/cs/getpostbackeventreferencecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager8#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/vb/getpostbackeventreferencevb.aspx#1)]  
  
 <span data-ttu-id="30f86-235">O exemplo de código a seguir tem a mesma funcionalidade que o anterior, exceto que, em vez de um controle personalizado, o <xref:System.Web.UI.Page> classe implementa o <xref:System.Web.UI.IPostBackEventHandler> interface.</span><span class="sxs-lookup"><span data-stu-id="30f86-235">The following code example has the same functionality as the preceding one, except that instead of a custom control, the <xref:System.Web.UI.Page> class implements the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager8#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/cs/getpostbackeventreference2cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager8#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/vb/getpostbackeventreference2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetPostBackEventReference" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetPostBackClientHyperlink">
      <MemberSignature Language="C#" Value="public string GetPostBackClientHyperlink (System.Web.UI.Control control, string argument, bool registerForEventValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackClientHyperlink(class System.Web.UI.Control control, string argument, bool registerForEventValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackClientHyperlink(System::Web::UI::Control ^ control, System::String ^ argument, bool registerForEventValidation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="registerForEventValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="30f86-236">O controle de servidor para processar o postback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-236">The server control to process the postback.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="30f86-237">O parâmetro passado para o controle de servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-237">The parameter passed to the server control.</span>
          </span>
        </param>
        <param name="registerForEventValidation">
          <span data-ttu-id="30f86-238">
            <see langword="true" /> para registrar o evento de postback para validação; <see langword="false" /> para não registrar o evento de postback para validação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-238">
              <see langword="true" /> to register the postback event for validation; <see langword="false" /> to not register the post back event for validation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30f86-239">Obtém uma referência, com <see langword="javascript:" /> acrescentado ao início, que pode ser usada em um evento de cliente para postback ao servidor do controle especificado com os argumentos de evento especificados, bem como com um indicação booliana especificando se é para registrar o postback para a validação de evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-239">Gets a reference, with <see langword="javascript:" /> appended to the beginning of it, that can be used in a client event to post back to the server for the specified control with the specified event arguments and Boolean indication whether to register the post back for event validation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30f86-240">Uma cadeia de caracteres que representa uma chamada de JavaScript à função de postback, que inclui os argumentos de evento e de ID do controle de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-240">A string representing a JavaScript call to the postback function that includes the target control's ID and event arguments.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30f86-241">Usando o <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> método requer que o controle que manipula a postagem para implementar o <xref:System.Web.UI.IPostBackEventHandler> interface.</span><span class="sxs-lookup"><span data-stu-id="30f86-241">Using the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method requires the control that handles the postback to implement the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span> <span data-ttu-id="30f86-242">Para implementar o <xref:System.Web.UI.IPostBackEventHandler> a interface para um <xref:System.Web.UI.Page>, use a diretiva.</span><span class="sxs-lookup"><span data-stu-id="30f86-242">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page>, use the  directive.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetPostBackEventReference" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPostBackEventReference">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="30f86-243">Retorna uma cadeia de caracteres que pode ser usada em um evento de cliente para fazer postback no servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-243">Returns a string that can be used in a client event to cause postback to the server.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPostBackEventReference">
      <MemberSignature Language="C#" Value="public string GetPostBackEventReference (System.Web.UI.PostBackOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackEventReference(class System.Web.UI.PostBackOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPostBackEventReference (options As PostBackOptions) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackEventReference(System::Web::UI::PostBackOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Web.UI.PostBackOptions" />
      </Parameters>
      <Docs>
        <param name="options">
          <span data-ttu-id="30f86-244">Um <see cref="T:System.Web.UI.PostBackOptions" /> que define o postback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-244">A <see cref="T:System.Web.UI.PostBackOptions" /> that defines the postback.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30f86-245">Retorna uma cadeia de caracteres que pode ser usada em um evento de cliente para fazer postback no servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-245">Returns a string that can be used in a client event to cause postback to the server.</span>
          </span>
          <span data-ttu-id="30f86-246">A cadeia de caracteres de referência é definida pela instância <see cref="T:System.Web.UI.PostBackOptions" /> especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-246">The reference string is defined by the specified <see cref="T:System.Web.UI.PostBackOptions" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30f86-247">Uma cadeia de caracteres que, quando tratada como script no cliente, inicia o postback do cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-247">A string that, when treated as script on the client, initiates the client postback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30f86-248">Para implementar o <xref:System.Web.UI.IPostBackEventHandler> a interface para um <xref:System.Web.UI.Page>, use a diretiva.</span><span class="sxs-lookup"><span data-stu-id="30f86-248">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page>,  use the  directive.</span></span>  
  
 <span data-ttu-id="30f86-249">O <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> método pode ser usado com o <xref:System.Web.UI.WebControls.Button> controlar quando o <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> é de propriedade `false`.</span><span class="sxs-lookup"><span data-stu-id="30f86-249">The <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method can be used with the <xref:System.Web.UI.WebControls.Button> control when the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is `false`.</span></span> <span data-ttu-id="30f86-250">Nesse cenário, o <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> método retorna o cliente executa postback eventos para o <xref:System.Web.UI.WebControls.Button> controle.</span><span class="sxs-lookup"><span data-stu-id="30f86-250">In this scenario, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method returns the client postback event for the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="30f86-251">O parâmetro <see cref="T:System.Web.UI.PostBackOptions" /> é <see langword="null" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-251">The <see cref="T:System.Web.UI.PostBackOptions" /> parameter is <see langword="null" /></span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
        <altmember cref="T:System.Web.UI.WebControls.Button" />
      </Docs>
    </Member>
    <Member MemberName="GetPostBackEventReference">
      <MemberSignature Language="C#" Value="public string GetPostBackEventReference (System.Web.UI.Control control, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackEventReference(class System.Web.UI.Control control, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackEventReference(System::Web::UI::Control ^ control, System::String ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="30f86-252">O servidor <see cref="T:System.Web.UI.Control" /> que processa o postback no servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-252">The server <see cref="T:System.Web.UI.Control" /> that processes the postback on the server.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="30f86-253">Uma cadeia de caracteres de argumentos opcionais para ser passada para o controle que processa o postback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-253">A string of optional arguments to pass to the control that processes the postback.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30f86-254">Retorna uma cadeia de caracteres que pode ser usada em um evento de cliente para fazer postback no servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-254">Returns a string that can be used in a client event to cause postback to the server.</span>
          </span>
          <span data-ttu-id="30f86-255">A cadeia de caracteres de referência é definida pelo controle especificado que manipula o postback e um argumento de cadeia de caracteres de informações de evento adicionais.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-255">The reference string is defined by the specified control that handles the postback and a string argument of additional event information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30f86-256">Uma cadeia de caracteres que, quando tratada como script no cliente, inicia o postback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-256">A string that, when treated as script on the client, initiates the postback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30f86-257">Para implementar o <xref:System.Web.UI.IPostBackEventHandler> a interface para um <xref:System.Web.UI.Page>, use a diretiva.</span><span class="sxs-lookup"><span data-stu-id="30f86-257">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page>,  use the  directive.</span></span>  
  
 <span data-ttu-id="30f86-258">O <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> método pode ser usado com o <xref:System.Web.UI.WebControls.Button> controlar quando o <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> é de propriedade `false`.</span><span class="sxs-lookup"><span data-stu-id="30f86-258">The <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method can be used with the <xref:System.Web.UI.WebControls.Button> control when the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is `false`.</span></span> <span data-ttu-id="30f86-259">Nesse cenário, o <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> método retorna o cliente executa postback eventos para o <xref:System.Web.UI.WebControls.Button> controle.</span><span class="sxs-lookup"><span data-stu-id="30f86-259">In this scenario, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method returns the client postback event for the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30f86-260">O exemplo de código a seguir demonstra o uso do <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> método.</span><span class="sxs-lookup"><span data-stu-id="30f86-260">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method.</span></span> <span data-ttu-id="30f86-261">O controle personalizado, `MyControl`, implementa o <xref:System.Web.UI.IPostBackEventHandler> interface.</span><span class="sxs-lookup"><span data-stu-id="30f86-261">The custom control, `MyControl`, implements the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span> <span data-ttu-id="30f86-262">Quando o botão na página é clicado, o <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> método do controle personalizado é chamado.</span><span class="sxs-lookup"><span data-stu-id="30f86-262">When the button on the page is clicked, the <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> method of the custom control is invoked.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager8#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/cs/getpostbackeventreferencecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager8#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/vb/getpostbackeventreferencevb.aspx#1)]  
  
 <span data-ttu-id="30f86-263">O exemplo de código a seguir tem a mesma funcionalidade que o anterior, exceto que, em vez de um controle personalizado, o <xref:System.Web.UI.Page> classe implementa o <xref:System.Web.UI.IPostBackEventHandler> interface.</span><span class="sxs-lookup"><span data-stu-id="30f86-263">The following code example has the same functionality as the preceding one, except that instead of a custom control, the <xref:System.Web.UI.Page> class implements the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager8#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/cs/getpostbackeventreference2cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager8#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/vb/getpostbackeventreference2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="30f86-264">O <see cref="T:System.Web.UI.Control" /> especificado é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-264">The specified <see cref="T:System.Web.UI.Control" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetPostBackEventReference">
      <MemberSignature Language="C#" Value="public string GetPostBackEventReference (System.Web.UI.PostBackOptions options, bool registerForEventValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackEventReference(class System.Web.UI.PostBackOptions options, bool registerForEventValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPostBackEventReference (options As PostBackOptions, registerForEventValidation As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackEventReference(System::Web::UI::PostBackOptions ^ options, bool registerForEventValidation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Web.UI.PostBackOptions" />
        <Parameter Name="registerForEventValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="options">
          <span data-ttu-id="30f86-265">Um <see cref="T:System.Web.UI.PostBackOptions" /> que define o postback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-265">A <see cref="T:System.Web.UI.PostBackOptions" /> that defines the postback.</span>
          </span>
        </param>
        <param name="registerForEventValidation">
          <span data-ttu-id="30f86-266">
            <see langword="true" /> para registrar a referência de evento para validação; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-266">
              <see langword="true" /> to register the event reference for validation; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30f86-267">Retorna uma cadeia de caracteres que pode ser usada em um evento de cliente para fazer postback no servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-267">Returns a string that can be used in a client event to cause postback to the server.</span>
          </span>
          <span data-ttu-id="30f86-268">A cadeia de caracteres de referência é definida pelo objeto <see cref="T:System.Web.UI.PostBackOptions" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-268">The reference string is defined by the specified <see cref="T:System.Web.UI.PostBackOptions" /> object.</span>
          </span>
          <span data-ttu-id="30f86-269">Opcionalmente, registra a referência de evento para validação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-269">Optionally, registers the event reference for validation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30f86-270">Uma cadeia de caracteres que, quando tratada como script no cliente, inicia o postback do cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-270">A string that, when treated as script on the client, initiates the client postback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30f86-271">Para implementar o <xref:System.Web.UI.IPostBackEventHandler> a interface para um <xref:System.Web.UI.Page> de objeto, use a diretiva.</span><span class="sxs-lookup"><span data-stu-id="30f86-271">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page> object, use the  directive.</span></span>  
  
 <span data-ttu-id="30f86-272">O <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> método pode ser usado com o <xref:System.Web.UI.WebControls.Button> controlar quando o <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> é de propriedade `false`.</span><span class="sxs-lookup"><span data-stu-id="30f86-272">The <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method can be used with the <xref:System.Web.UI.WebControls.Button> control when the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is `false`.</span></span> <span data-ttu-id="30f86-273">Nesse cenário, o <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> método retorna o cliente executa postback eventos para o <xref:System.Web.UI.WebControls.Button> controle.</span><span class="sxs-lookup"><span data-stu-id="30f86-273">In this scenario, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method returns the client postback event for the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 <span data-ttu-id="30f86-274">Se `registerForEventValidation` é `true`, o <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29> chamadas de método de <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29> método para registrar a referência de evento de validação com uma ID exclusiva do controle que representa o controle de cliente que está gerando o evento.</span><span class="sxs-lookup"><span data-stu-id="30f86-274">If `registerForEventValidation` is `true`, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29> method calls the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29> method to register the event reference for validation with a unique control ID that represents the client control that is generating the event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="30f86-275">O <see cref="T:System.Web.UI.PostBackOptions" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-275">The <see cref="T:System.Web.UI.PostBackOptions" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
        <altmember cref="T:System.Web.UI.WebControls.Button" />
      </Docs>
    </Member>
    <Member MemberName="GetPostBackEventReference">
      <MemberSignature Language="C#" Value="public string GetPostBackEventReference (System.Web.UI.Control control, string argument, bool registerForEventValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackEventReference(class System.Web.UI.Control control, string argument, bool registerForEventValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackEventReference(System::Web::UI::Control ^ control, System::String ^ argument, bool registerForEventValidation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="registerForEventValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="30f86-276">O servidor <see cref="T:System.Web.UI.Control" /> que processa o postback no servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-276">The server <see cref="T:System.Web.UI.Control" /> that processes the postback on the server.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="30f86-277">Uma cadeia de caracteres de argumentos opcionais a serem passados para <c>control</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-277">A string of optional arguments to pass to <c>control</c>.</span>
          </span>
        </param>
        <param name="registerForEventValidation">
          <span data-ttu-id="30f86-278">
            <see langword="true" /> para registrar a referência de evento para validação; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-278">
              <see langword="true" /> to register the event reference for validation; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30f86-279">Retorna uma cadeia de caracteres a ser usada em um evento de cliente para executar postback no servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-279">Returns a string to use in a client event to cause postback to the server.</span>
          </span>
          <span data-ttu-id="30f86-280">A cadeia de caracteres de referência é definida pelo controle especificado que manipula o postback e um argumento de cadeia de caracteres de informações de evento adicionais.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-280">The reference string is defined by the specified control that handles the postback and a string argument of additional event information.</span>
          </span>
          <span data-ttu-id="30f86-281">Opcionalmente, registra a referência de evento para validação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-281">Optionally, registers the event reference for validation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30f86-282">Uma cadeia de caracteres que, quando tratada como script no cliente, inicia o postback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-282">A string that, when treated as script on the client, initiates the postback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30f86-283">Para implementar o <xref:System.Web.UI.IPostBackEventHandler> a interface para um <xref:System.Web.UI.Page>, use a diretiva.</span><span class="sxs-lookup"><span data-stu-id="30f86-283">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page>, use the  directive.</span></span>  
  
 <span data-ttu-id="30f86-284">O <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> método pode ser usado com o <xref:System.Web.UI.WebControls.Button> controlar quando o <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> é de propriedade `false`.</span><span class="sxs-lookup"><span data-stu-id="30f86-284">The <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method can be used with the <xref:System.Web.UI.WebControls.Button> control when the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is `false`.</span></span> <span data-ttu-id="30f86-285">Nesse cenário, o <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> método retorna o cliente executa postback eventos para o <xref:System.Web.UI.WebControls.Button> controle.</span><span class="sxs-lookup"><span data-stu-id="30f86-285">In this scenario, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method returns the client postback event for the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 <span data-ttu-id="30f86-286">Se `registerForEventValidation` for true, o <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29> chamadas de método de <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29> método para registrar a referência de evento de validação com uma ID exclusiva do controle que representa o controle de cliente que está gerando o evento.</span><span class="sxs-lookup"><span data-stu-id="30f86-286">If `registerForEventValidation` is true, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29> method calls the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29> method to register the event reference for validation with a unique control ID that represents the client control that is generating the event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="30f86-287">O <see cref="T:System.Web.UI.Control" /> especificado é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-287">The specified <see cref="T:System.Web.UI.Control" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetWebResourceUrl">
      <MemberSignature Language="C#" Value="public string GetWebResourceUrl (Type type, string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetWebResourceUrl(class System.Type type, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetWebResourceUrl(Type ^ type, System::String ^ resourceName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="30f86-288">O tipo do recurso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-288">The type of the resource.</span>
          </span>
        </param>
        <param name="resourceName">
          <span data-ttu-id="30f86-289">O nome totalmente qualificado do recurso no assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-289">The fully qualified name of the resource in the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30f86-290">Obtém uma referência de URL para um recurso em um assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-290">Gets a URL reference to a resource in an assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30f86-291">A referência de URL para o recurso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-291">The URL reference to the resource.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30f86-292">O <xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> método retorna uma referência de URL para um recurso inserido em um assembly.</span><span class="sxs-lookup"><span data-stu-id="30f86-292">The <xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> method returns a URL reference to a resource embedded in an assembly.</span></span> <span data-ttu-id="30f86-293">A referência fornecida não é codificada de URL.</span><span class="sxs-lookup"><span data-stu-id="30f86-293">The returned reference is not URL encoded.</span></span> <span data-ttu-id="30f86-294">Recursos podem ser qualquer arquivo estático, imagens ou arquivos de script.</span><span class="sxs-lookup"><span data-stu-id="30f86-294">Resources can be script files, images, or any static file.</span></span> <span data-ttu-id="30f86-295">Você especificar o tipo com base no objeto que estarão acessando o recurso.</span><span class="sxs-lookup"><span data-stu-id="30f86-295">You specify the type based on the object that will be accessing the resource.</span></span>  
  
 <span data-ttu-id="30f86-296">Um recurso da Web registrado com a página é identificado exclusivamente por seu tipo e nome.</span><span class="sxs-lookup"><span data-stu-id="30f86-296">A Web resource registered with the page is uniquely identified by its type and name.</span></span> <span data-ttu-id="30f86-297">Somente um recurso com um par de nome e tipo fornecido pode ser registrado com a página.</span><span class="sxs-lookup"><span data-stu-id="30f86-297">Only one resource with a given type and name pair can be registered with the page.</span></span> <span data-ttu-id="30f86-298">Tentativa de registrar um recurso que já está registrado não cria uma cópia do recurso registrado.</span><span class="sxs-lookup"><span data-stu-id="30f86-298">Attempting to register a resource that is already registered does not create a duplicate of the registered resource.</span></span>  
  
 <span data-ttu-id="30f86-299">O <xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> método é usado em conjunto com o <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> método para acessar recursos incorporados em assemblies.</span><span class="sxs-lookup"><span data-stu-id="30f86-299">The <xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> method is used in conjunction with the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> method for accessing resources embedded in assemblies.</span></span> <span data-ttu-id="30f86-300">Para obter mais informações sobre o uso de recursos em aplicativos, consulte [visão geral de recursos de página da Web do ASP.NET](http://msdn.microsoft.com/library/0936b3b2-9e6e-4abe-9c06-364efef9dbbd).</span><span class="sxs-lookup"><span data-stu-id="30f86-300">For more information on using resources in applications, see [ASP.NET Web Page Resources Overview](http://msdn.microsoft.com/library/0936b3b2-9e6e-4abe-9c06-364efef9dbbd).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30f86-301">O exemplo de código a seguir demonstra o uso do <xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> método.</span><span class="sxs-lookup"><span data-stu-id="30f86-301">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> method.</span></span> <span data-ttu-id="30f86-302">O *tipo* parâmetro neste exemplo é definido como o tipo de classe no assembly que contém o recurso.</span><span class="sxs-lookup"><span data-stu-id="30f86-302">The *type* parameter in this example is set to the type of class in the assembly containing the resource.</span></span> <span data-ttu-id="30f86-303">O `resourceName` parâmetro for especificado com o caminho totalmente qualificado para o recurso, que inclui o namespace padrão.</span><span class="sxs-lookup"><span data-stu-id="30f86-303">The `resourceName` parameter is specified with the fully qualified path to the resource, which includes the default namespace.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/cs/clientscriptwebresource.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/vb/clientscriptwebresource.aspx#1)]  
  
 <span data-ttu-id="30f86-304">O exemplo de código a seguir demonstra como aplicar programaticamente o <xref:System.Web.UI.WebResourceAttribute> atributo de metadados para marcar o assembly para os recursos que será servido.</span><span class="sxs-lookup"><span data-stu-id="30f86-304">The following code example demonstrates how to programmatically apply the <xref:System.Web.UI.WebResourceAttribute> metadata attribute to mark the assembly for the resources that will be served.</span></span> <span data-ttu-id="30f86-305">Compile a seguinte classe em uma biblioteca de classe com um namespace padrão definido como `Samples.AspNet.CS.Controls` ou `Samples.AspNet.VB.Controls`, dependendo da linguagem em que você está usando.</span><span class="sxs-lookup"><span data-stu-id="30f86-305">Compile the following class in a class library with a default namespace set to `Samples.AspNet.CS.Controls` or `Samples.AspNet.VB.Controls`, depending on what language you are using.</span></span>  
  
 [!code-csharp[System.Web.UI.ClientScriptManager4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/cs/resource.cs#2)]
 [!code-vb[System.Web.UI.ClientScriptManager4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/vb/resource.vb#2)]  
  
 <span data-ttu-id="30f86-306">Este exemplo requer um arquivo JavaScript chamado `Script_include.js`.</span><span class="sxs-lookup"><span data-stu-id="30f86-306">This example requires a JavaScript file named `Script_include.js`.</span></span> <span data-ttu-id="30f86-307">O arquivo. js é um recurso incorporado no assembly que contém o `ClientScriptResourceLabel` objeto.</span><span class="sxs-lookup"><span data-stu-id="30f86-307">The .js file is an embedded resource in the assembly that contains the `ClientScriptResourceLabel` object.</span></span> <span data-ttu-id="30f86-308">Se você estiver usando o Visual Studio], na janela Propriedades do projeto de biblioteca de classe, defina **ação de compilação** para **recurso inserido** quando o arquivo de script estiver selecionado.</span><span class="sxs-lookup"><span data-stu-id="30f86-308">If you are using Visual Studio], in the Properties window of the class library project, set **Build Action** to **Embedded Resource** when the script file is selected.</span></span> <span data-ttu-id="30f86-309">Se você estiver compilando a biblioteca na linha de comando, use a opção para inserir o recurso.</span><span class="sxs-lookup"><span data-stu-id="30f86-309">If you are compiling the library at the command line, use the  switch to embed the resource.</span></span>  
  
```  
function DoClick() {Form1.Message.value='Text from resource script.'}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="30f86-310">O nome do recurso da Web é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-310">The web resource name is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="30f86-311">\- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-311">\- or -</span>
          </span>
          <span data-ttu-id="30f86-312">O nome do recurso da Web tem comprimento zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-312">The web resource name has a length of zero.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)" />
        <altmember cref="T:System.Web.UI.WebResourceAttribute" />
        <altmember cref="T:System.Web.Handlers.AssemblyResourceLoader" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsClientScriptBlockRegistered">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="30f86-313">Determina se o bloco de script de cliente está registrado com o objeto <see cref="T:System.Web.UI.Page" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-313">Determines whether the client script block is registered with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsClientScriptBlockRegistered">
      <MemberSignature Language="C#" Value="public bool IsClientScriptBlockRegistered (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsClientScriptBlockRegistered(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsClientScriptBlockRegistered (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsClientScriptBlockRegistered(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="30f86-314">A chave do bloco de script de cliente a ser pesquisada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-314">The key of the client script block to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30f86-315">Determina se o bloco de script de cliente está registrado com o objeto <see cref="T:System.Web.UI.Page" /> usando a chave especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-315">Determines whether the client script block is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30f86-316">
            <see langword="true" /> se o bloco de script de cliente estiver registrado; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-316">
              <see langword="true" /> if the client script block is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30f86-317">Chamar esse método antes de chamar o <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> método para evitar o registro duplicados scripts.</span><span class="sxs-lookup"><span data-stu-id="30f86-317">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method to avoid registering duplicate scripts.</span></span> <span data-ttu-id="30f86-318">Isso é particularmente importante se o script requer uma grande quantidade de recursos de servidor para criar.</span><span class="sxs-lookup"><span data-stu-id="30f86-318">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="30f86-319">Um script de cliente é identificado exclusivamente por sua chave e seu tipo.</span><span class="sxs-lookup"><span data-stu-id="30f86-319">A client script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="30f86-320">Scripts com a mesma chave e tipo são considerados duplicatas.</span><span class="sxs-lookup"><span data-stu-id="30f86-320">Scripts with the same key and type are considered duplicates.</span></span>  
  
 <span data-ttu-id="30f86-321">Esta sobrecarga do <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> método chama a sobrecarga que usa tanto uma `key` e um `type` parâmetro com o tipo é definido como um <xref:System.Web.UI.Page> objeto</span><span class="sxs-lookup"><span data-stu-id="30f86-321">This overload of the <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> method calls the overload that takes both a `key` and a `type` parameter with the type set as a <xref:System.Web.UI.Page> object</span></span>  
  
   
  
## Examples  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs2.aspx#2)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb2.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock" />
      </Docs>
    </Member>
    <Member MemberName="IsClientScriptBlockRegistered">
      <MemberSignature Language="C#" Value="public bool IsClientScriptBlockRegistered (Type type, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsClientScriptBlockRegistered(class System.Type type, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsClientScriptBlockRegistered(Type ^ type, System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="30f86-322">O tipo do bloco de script de cliente a ser pesquisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-322">The type of the client script block to search for.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="30f86-323">A chave do bloco de script de cliente a ser pesquisada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-323">The key of the client script block to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30f86-324">Determina se o bloco de script de cliente está registrado com o objeto <see cref="T:System.Web.UI.Page" /> usando uma chave e um tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-324">Determines whether the client script block is registered with the <see cref="T:System.Web.UI.Page" /> object using a key and type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30f86-325">
            <see langword="true" /> se o bloco de script de cliente estiver registrado; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-325">
              <see langword="true" /> if the client script block is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30f86-326">Chamar esse método antes de chamar o <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> método para evitar o registro duplicados scripts.</span><span class="sxs-lookup"><span data-stu-id="30f86-326">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method to avoid registering duplicate scripts.</span></span> <span data-ttu-id="30f86-327">Isso é particularmente importante se o script requer uma grande quantidade de recursos de servidor para criar.</span><span class="sxs-lookup"><span data-stu-id="30f86-327">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="30f86-328">Um script de cliente é identificado exclusivamente por sua chave e seu tipo.</span><span class="sxs-lookup"><span data-stu-id="30f86-328">A client script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="30f86-329">Scripts com a mesma chave e tipo são considerados duplicatas.</span><span class="sxs-lookup"><span data-stu-id="30f86-329">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="30f86-330">Você especificar o tipo com base no objeto que estarão acessando o recurso.</span><span class="sxs-lookup"><span data-stu-id="30f86-330">You specify the type based on the object that will be accessing the resource.</span></span> <span data-ttu-id="30f86-331">Por exemplo, ao usar um `Page` instância para acessar o recurso, você especificar o `Page` tipo.</span><span class="sxs-lookup"><span data-stu-id="30f86-331">For instance, when using a `Page` instance to access the resource, you specify the `Page` type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30f86-332">O exemplo de código a seguir demonstra o uso do <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> método.</span><span class="sxs-lookup"><span data-stu-id="30f86-332">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> method.</span></span> <span data-ttu-id="30f86-333">Observe que, se a lógica de verificação para o bloco de script de cliente existentes foram removida, não haveria dois scripts de cliente duplicados no código-fonte HTML da página renderizada porque o <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> método procura duplicatas.</span><span class="sxs-lookup"><span data-stu-id="30f86-333">Note that, if the logic to check for the existing client script block were removed, there would not be two duplicate client scripts in the HTML source code of the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method checks for duplicates.</span></span> <span data-ttu-id="30f86-334">O benefício de verificação é reduzir a computação desnecessária.</span><span class="sxs-lookup"><span data-stu-id="30f86-334">The benefit of checking is to reduce unnecessary computation.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="30f86-335">O tipo de script de cliente é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-335">The client script type is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsClientScriptIncludeRegistered">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="30f86-336">Determina se o script de cliente de inclusão está registrado com o objeto <see cref="T:System.Web.UI.Page" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-336">Determines whether the client script include is registered with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsClientScriptIncludeRegistered">
      <MemberSignature Language="C#" Value="public bool IsClientScriptIncludeRegistered (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsClientScriptIncludeRegistered(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsClientScriptIncludeRegistered (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsClientScriptIncludeRegistered(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="30f86-337">A chave do script de cliente de inclusão a ser pesquisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-337">The key of the client script include to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30f86-338">Determina se o script de cliente de inclusão está registrado com o objeto <see cref="T:System.Web.UI.Page" /> usando a chave especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-338">Determines whether the client script include is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30f86-339">
            <see langword="true" /> se o script de cliente de inclusão estiver registrado; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-339">
              <see langword="true" /> if the client script include is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30f86-340">Chamar esse método antes de chamar o <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> método para evitar o registro duplicados scripts.</span><span class="sxs-lookup"><span data-stu-id="30f86-340">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method to avoid registering duplicate scripts.</span></span> <span data-ttu-id="30f86-341">Isso é particularmente importante se o script requer uma grande quantidade de recursos de servidor para criar.</span><span class="sxs-lookup"><span data-stu-id="30f86-341">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="30f86-342">Incluir um script de cliente é identificada exclusivamente por sua chave e seu tipo.</span><span class="sxs-lookup"><span data-stu-id="30f86-342">A client script include is uniquely identified by its key and its type.</span></span> <span data-ttu-id="30f86-343">Scripts com a mesma chave e tipo são considerados duplicatas.</span><span class="sxs-lookup"><span data-stu-id="30f86-343">Scripts with the same key and type are considered duplicates.</span></span>  
  
 <span data-ttu-id="30f86-344">Esta sobrecarga do <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> método chama a sobrecarga que usa tanto uma `key` e um `type` parâmetro com o tipo é definido como um <xref:System.Web.UI.Page> objeto.</span><span class="sxs-lookup"><span data-stu-id="30f86-344">This overload of the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method calls the overload that takes both a `key` and a `type` parameter with the type set as a <xref:System.Web.UI.Page> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude" />
      </Docs>
    </Member>
    <Member MemberName="IsClientScriptIncludeRegistered">
      <MemberSignature Language="C#" Value="public bool IsClientScriptIncludeRegistered (Type type, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsClientScriptIncludeRegistered(class System.Type type, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsClientScriptIncludeRegistered(Type ^ type, System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="30f86-345">O tipo do script de cliente de inclusão a ser pesquisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-345">The type of the client script include to search for.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="30f86-346">A chave do script de cliente de inclusão a ser pesquisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-346">The key of the client script include to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30f86-347">Determina se o script de cliente de inclusão está registrado com o objeto <see cref="T:System.Web.UI.Page" /> usando uma chave e um tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-347">Determines whether the client script include is registered with the <see cref="T:System.Web.UI.Page" /> object using a key and type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30f86-348">
            <see langword="true" /> se o script de cliente de inclusão estiver registrado; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-348">
              <see langword="true" /> if the client script include is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30f86-349">Chamar esse método antes de chamar o <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> inclui o método para evitar o registro de script de cliente duplicados.</span><span class="sxs-lookup"><span data-stu-id="30f86-349">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method to avoid registering duplicate client script includes.</span></span> <span data-ttu-id="30f86-350">Isso é particularmente importante se o script requer uma grande quantidade de recursos de servidor para criar.</span><span class="sxs-lookup"><span data-stu-id="30f86-350">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="30f86-351">Incluir um script de cliente é identificada exclusivamente por sua chave e seu tipo.</span><span class="sxs-lookup"><span data-stu-id="30f86-351">A client script include is uniquely identified by its key and its type.</span></span> <span data-ttu-id="30f86-352">Scripts com a mesma chave e tipo são considerados duplicatas.</span><span class="sxs-lookup"><span data-stu-id="30f86-352">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="30f86-353">Você especificar o tipo com base no objeto que estarão acessando o recurso.</span><span class="sxs-lookup"><span data-stu-id="30f86-353">You specify the type based on the object that will be accessing the resource.</span></span> <span data-ttu-id="30f86-354">Por exemplo, ao usar uma instância de página para acessar o recurso, especifique o `Page` tipo.</span><span class="sxs-lookup"><span data-stu-id="30f86-354">For instance, when using a Page instance to access the resource, you specify the `Page` type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30f86-355">O exemplo de código a seguir demonstra o uso do <xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A> método.</span><span class="sxs-lookup"><span data-stu-id="30f86-355">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A> method.</span></span> <span data-ttu-id="30f86-356">Observe que, se a lógica de verificação de incluir o script de cliente existentes foram removida, não haveria dois scripts de cliente duplicados no código-fonte HTML da página renderizada porque o <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> método procura duplicatas.</span><span class="sxs-lookup"><span data-stu-id="30f86-356">Note that, if the logic to check for the existing client script include were removed, there would not be two duplicate client scripts in the HTML source code of the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method checks for duplicates.</span></span> <span data-ttu-id="30f86-357">O benefício de verificação é reduzir a computação desnecessária.</span><span class="sxs-lookup"><span data-stu-id="30f86-357">The benefit of checking is to reduce unnecessary computation.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager2/cs/clientscriptincludes.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager2/vb/clientscriptincludes.aspx#1)]  
  
 <span data-ttu-id="30f86-358">Este exemplo requer um arquivo JavaScript chamado `Script_include.js`, com o seguinte conteúdo:</span><span class="sxs-lookup"><span data-stu-id="30f86-358">This example requires a JavaScript file named `Script_include.js`, with the following contents:</span></span>  
  
```  
function DoClick() {Form1.Message.value='Text from include script.'}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="30f86-359">O tipo do script de cliente de inclusão é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-359">The client script include type is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsOnSubmitStatementRegistered">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="30f86-360">Determina se a instrução OnSubmit está registrada com o objeto <see cref="T:System.Web.UI.Page" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-360">Determines whether the OnSubmit statement is registered with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsOnSubmitStatementRegistered">
      <MemberSignature Language="C#" Value="public bool IsOnSubmitStatementRegistered (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOnSubmitStatementRegistered(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsOnSubmitStatementRegistered (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOnSubmitStatementRegistered(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="30f86-361">A chave da instrução OnSubmit a ser pesquisada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-361">The key of the OnSubmit statement to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30f86-362">Determina se a instrução OnSubmit está registrada com o objeto <see cref="T:System.Web.UI.Page" /> usando a chave especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-362">Determines whether the OnSubmit statement is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30f86-363">
            <see langword="true" /> se a instrução OnSubmit estiver registrada; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-363">
              <see langword="true" /> if the OnSubmit statement is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30f86-364">Chamar esse método antes de chamar o <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> método para evitar o registro de instruções de OnSubmit duplicadas.</span><span class="sxs-lookup"><span data-stu-id="30f86-364">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method to avoid registering duplicate OnSubmit statements.</span></span> <span data-ttu-id="30f86-365">Isso é particularmente importante se a instrução exige uma grande quantidade de recursos de servidor para criar.</span><span class="sxs-lookup"><span data-stu-id="30f86-365">This is particularly important if the statement requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="30f86-366">Uma instrução é identificada exclusivamente por sua chave e seu tipo.</span><span class="sxs-lookup"><span data-stu-id="30f86-366">A statement is uniquely identified by its key and its type.</span></span> <span data-ttu-id="30f86-367">Instruções com a mesma chave e tipo são consideradas duplicatas.</span><span class="sxs-lookup"><span data-stu-id="30f86-367">Statements with the same key and type are considered duplicates.</span></span>  
  
 <span data-ttu-id="30f86-368">Esta sobrecarga do <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> método chama a sobrecarga que usa tanto uma `key` e um `type` parâmetro com o tipo é definido como um <xref:System.Web.UI.Page> objeto</span><span class="sxs-lookup"><span data-stu-id="30f86-368">This overload of the <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> method calls the overload that takes both a `key` and a `type` parameter with the type set as a <xref:System.Web.UI.Page> object</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsOnSubmitStatementRegistered">
      <MemberSignature Language="C#" Value="public bool IsOnSubmitStatementRegistered (Type type, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOnSubmitStatementRegistered(class System.Type type, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOnSubmitStatementRegistered(Type ^ type, System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="30f86-369">O tipo da instrução OnSubmit a ser pesquisada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-369">The type of the OnSubmit statement to search for.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="30f86-370">A chave da instrução OnSubmit a ser pesquisada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-370">The key of the OnSubmit statement to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30f86-371">Determina se a instrução OnSubmit está registrada com o objeto <see cref="T:System.Web.UI.Page" /> usando a chave e o tipo especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-371">Determines whether the OnSubmit statement is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key and type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30f86-372">
            <see langword="true" /> se a instrução OnSubmit estiver registrada; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-372">
              <see langword="true" /> if the OnSubmit statement is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30f86-373">Chamar esse método antes de chamar o <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> método para evitar o registro duplicadas instruções.</span><span class="sxs-lookup"><span data-stu-id="30f86-373">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method to avoid registering duplicate statements.</span></span> <span data-ttu-id="30f86-374">Isso é particularmente importante se a instrução exige uma grande quantidade de recursos de servidor para criar.</span><span class="sxs-lookup"><span data-stu-id="30f86-374">This is particularly important if the statement requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="30f86-375">Uma instrução é identificada exclusivamente por sua chave e seu tipo.</span><span class="sxs-lookup"><span data-stu-id="30f86-375">A statement is uniquely identified by its key and its type.</span></span> <span data-ttu-id="30f86-376">Instruções com a mesma chave e tipo são consideradas duplicatas.</span><span class="sxs-lookup"><span data-stu-id="30f86-376">Statements with the same key and type are considered duplicates.</span></span> <span data-ttu-id="30f86-377">Você especificar o tipo com base no objeto que estarão acessando o recurso.</span><span class="sxs-lookup"><span data-stu-id="30f86-377">You specify the type based on the object that will be accessing the resource.</span></span> <span data-ttu-id="30f86-378">Por exemplo, ao usar um `Page` instância para acessar o recurso, você especificar o `Page` tipo.</span><span class="sxs-lookup"><span data-stu-id="30f86-378">For instance, when using a `Page` instance to access the resource, you specify the `Page` type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30f86-379">O exemplo de código a seguir demonstra o uso do <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> método.</span><span class="sxs-lookup"><span data-stu-id="30f86-379">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> method.</span></span> <span data-ttu-id="30f86-380">Um script chamado `OnSubmitScript` está registrado com o <xref:System.Web.UI.Page> para que quando o formulário da página é enviado ao script é invocado.</span><span class="sxs-lookup"><span data-stu-id="30f86-380">A script named `OnSubmitScript` is registered with the <xref:System.Web.UI.Page> so that when the page's form is submitted the script is invoked.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager3/cs/clientscriptonsubmit.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager3/vb/clientscriptonsubmit.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="30f86-381">O tipo da instrução OnSubmit é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-381">The OnSubmit statement type is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.String)" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsStartupScriptRegistered">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="30f86-382">Determina se o script de inicialização está registrado com o objeto <see cref="T:System.Web.UI.Page" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-382">Determines whether the startup script is registered with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsStartupScriptRegistered">
      <MemberSignature Language="C#" Value="public bool IsStartupScriptRegistered (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsStartupScriptRegistered(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsStartupScriptRegistered (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsStartupScriptRegistered(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="30f86-383">A chave de script de inicialização a ser pesquisada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-383">The key of the startup script to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30f86-384">Determina se o script de inicialização está registrado com o objeto <see cref="T:System.Web.UI.Page" /> usando a chave especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-384">Determines whether the startup script is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30f86-385">
            <see langword="true" /> se o script de inicialização está registrado; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-385">
              <see langword="true" /> if the startup script is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30f86-386">Chamar esse método antes de chamar o <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> método para evitar o registro duplicados scripts.</span><span class="sxs-lookup"><span data-stu-id="30f86-386">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method to avoid registering duplicate scripts.</span></span> <span data-ttu-id="30f86-387">Isso é particularmente importante se o script requer uma grande quantidade de recursos de servidor para criar.</span><span class="sxs-lookup"><span data-stu-id="30f86-387">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="30f86-388">Um script de inicialização é identificado exclusivamente por sua chave e seu tipo.</span><span class="sxs-lookup"><span data-stu-id="30f86-388">A startup script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="30f86-389">Scripts com a mesma chave e tipo são considerados duplicatas.</span><span class="sxs-lookup"><span data-stu-id="30f86-389">Scripts with the same key and type are considered duplicates.</span></span>  
  
 <span data-ttu-id="30f86-390">Esta sobrecarga do <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> método chama a sobrecarga que utiliza uma cadeia de caracteres `key` e um `type` parâmetro com o tipo é definido como um <xref:System.Web.UI.Page> objeto</span><span class="sxs-lookup"><span data-stu-id="30f86-390">This overload of the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method calls the overload that takes both a string `key` and a `type` parameter with the type set as a <xref:System.Web.UI.Page> object</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterStartupScript" />
      </Docs>
    </Member>
    <Member MemberName="IsStartupScriptRegistered">
      <MemberSignature Language="C#" Value="public bool IsStartupScriptRegistered (Type type, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsStartupScriptRegistered(class System.Type type, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsStartupScriptRegistered(Type ^ type, System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="30f86-391">O tipo de script de inicialização a ser pesquisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-391">The type of the startup script to search for.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="30f86-392">A chave de script de inicialização a ser pesquisada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-392">The key of the startup script to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30f86-393">Determina se script de inicialização está registrado com o objeto <see cref="T:System.Web.UI.Page" /> usando o tipo e a chave especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-393">Determines whether the startup script is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key and type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30f86-394">
            <see langword="true" /> se o script de inicialização está registrado; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-394">
              <see langword="true" /> if the startup script is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30f86-395">Chamar esse método antes de chamar o <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> método para evitar o registro duplicados scripts.</span><span class="sxs-lookup"><span data-stu-id="30f86-395">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method to avoid registering duplicate scripts.</span></span> <span data-ttu-id="30f86-396">Isso é particularmente importante se o script requer uma grande quantidade de recursos de servidor para criar.</span><span class="sxs-lookup"><span data-stu-id="30f86-396">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="30f86-397">Um script de inicialização do cliente é identificado exclusivamente por sua chave e seu tipo.</span><span class="sxs-lookup"><span data-stu-id="30f86-397">A client startup script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="30f86-398">Scripts com a mesma chave e tipo são considerados duplicatas.</span><span class="sxs-lookup"><span data-stu-id="30f86-398">Scripts with the same key and type are considered duplicates.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30f86-399">O exemplo de código a seguir demonstra o uso do <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> método.</span><span class="sxs-lookup"><span data-stu-id="30f86-399">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method.</span></span> <span data-ttu-id="30f86-400">Observe que, se a lógica de verificação para o bloco de script de inicialização existentes foram removida, não haveria dois scripts de inicialização duplicados no código-fonte HTML da página renderizada porque o <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> método procura duplicatas.</span><span class="sxs-lookup"><span data-stu-id="30f86-400">Note that, if the logic to check for the existing startup script block were removed, there would not be two duplicate startup scripts in the HTML source code of the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method checks for duplicates.</span></span> <span data-ttu-id="30f86-401">O benefício de verificação é reduzir a computação desnecessária.</span><span class="sxs-lookup"><span data-stu-id="30f86-401">The benefit of checking is to reduce unnecessary computation.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="30f86-402">O tipo de script de inicialização é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-402">The startup script type is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterStartupScript" />
      </Docs>
    </Member>
    <Member MemberName="RegisterArrayDeclaration">
      <MemberSignature Language="C#" Value="public void RegisterArrayDeclaration (string arrayName, string arrayValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterArrayDeclaration(string arrayName, string arrayValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterArrayDeclaration (arrayName As String, arrayValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterArrayDeclaration(System::String ^ arrayName, System::String ^ arrayValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrayName" Type="System.String" />
        <Parameter Name="arrayValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="arrayName">
          <span data-ttu-id="30f86-403">O nome da matriz a ser registrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-403">The array name to register.</span>
          </span>
        </param>
        <param name="arrayValue">
          <span data-ttu-id="30f86-404">O valor ou valores da matriz a serem registrados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-404">The array value or values to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30f86-405">Registra uma declaração de matriz JavaScript com o <see cref="T:System.Web.UI.Page" /> usando um nome de matriz e um valor de matriz do objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-405">Registers a JavaScript array declaration with the <see cref="T:System.Web.UI.Page" /> object using an array name and array value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30f86-406">O <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> verifica se uma matriz de marcas existe com o mesmo nome que o nome especificado no `arrayName` parâmetro e, nesse caso, adiciona os valores especificados no `arrayValue` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="30f86-406">The <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> checks to see whether a registered array exists with the same name as the name specified in the `arrayName` parameter and, if so, adds the values specified in the `arrayValue` parameter.</span></span> <span data-ttu-id="30f86-407">Como o mecanismo de armazenamento subjacente se baseia em um <xref:System.Collections.ArrayList>, são permitidas duplicatas.</span><span class="sxs-lookup"><span data-stu-id="30f86-407">Because the underlying storage mechanism is based on an <xref:System.Collections.ArrayList>, duplicates are allowed.</span></span> <span data-ttu-id="30f86-408">Se uma matriz registrada com o mesmo nome que o `arrayName` parâmetro não existe, ele é criado e os valores a `arrayValue` parâmetro adicionado a ele.</span><span class="sxs-lookup"><span data-stu-id="30f86-408">If a registered array with the same name as the `arrayName` parameter does not exist, it is created and the values in the `arrayValue` parameter added to it.</span></span>  
  
 <span data-ttu-id="30f86-409">Se você quiser literais de cadeia de caracteres na matriz resultante do JavaScript, incluir aspas simples (') ou aspas duplas de escape (\\") no `arrayValue` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="30f86-409">If you want string literals in the resulting JavaScript array, include single quotation marks (') or escaped double quotation marks (\\") in the `arrayValue` parameter.</span></span> <span data-ttu-id="30f86-410">O valor de `arrayValue` parâmetro deve ser um único elemento.</span><span class="sxs-lookup"><span data-stu-id="30f86-410">The value of the `arrayValue` parameter should be a single element.</span></span> <span data-ttu-id="30f86-411">Se precisar de mais de um valor a ser adicionada à matriz, fazer várias chamadas usando o <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> método.</span><span class="sxs-lookup"><span data-stu-id="30f86-411">If more than one value needs to be added to the array, make multiple calls using the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30f86-412">O exemplo de código a seguir demonstra o uso do <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> e <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="30f86-412">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> and <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> methods.</span></span> <span data-ttu-id="30f86-413">O exemplo registra uma matriz e um valor oculto e define o `OnClick` eventos de um `<input>` botão para calcular a soma dos dois valores da matriz e o valor hidden.</span><span class="sxs-lookup"><span data-stu-id="30f86-413">The example registers an array and a hidden value and defines the `OnClick` event of an `<input>` button to calculate the sum of two values of the array and the hidden value.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager5#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager5/cs/clientscriptregisterarray.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager5#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager5/vb/clientscriptregisterarray.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="30f86-414">
            <paramref name="arrayName" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-414">
              <paramref name="arrayName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.String.Split" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterClientScriptBlock">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="30f86-415">Registra o script de cliente com o objeto <see cref="T:System.Web.UI.Page" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-415">Registers the client script with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterClientScriptBlock">
      <MemberSignature Language="C#" Value="public void RegisterClientScriptBlock (Type type, string key, string script);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClientScriptBlock(class System.Type type, string key, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClientScriptBlock(Type ^ type, System::String ^ key, System::String ^ script);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="30f86-416">O tipo do script de cliente que será registrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-416">The type of the client script to register.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="30f86-417">A chave do script de cliente a ser registrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-417">The key of the client script to register.</span>
          </span>
        </param>
        <param name="script">
          <span data-ttu-id="30f86-418">A literal de script de cliente a ser registrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-418">The client script literal to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30f86-419">Registra o script de cliente com o objeto <see cref="T:System.Web.UI.Page" /> usando um tipo, uma chave e uma literal de script.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-419">Registers the client script with the <see cref="T:System.Web.UI.Page" /> object using a type, key, and script literal.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30f86-420">Um script de cliente é identificado exclusivamente por sua chave e seu tipo.</span><span class="sxs-lookup"><span data-stu-id="30f86-420">A client script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="30f86-421">Scripts com a mesma chave e tipo são considerados duplicatas.</span><span class="sxs-lookup"><span data-stu-id="30f86-421">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="30f86-422">Somente um script com um determinado tipo e o par de chaves pode ser registrado com a página.</span><span class="sxs-lookup"><span data-stu-id="30f86-422">Only one script with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="30f86-423">Tentativa de registrar um script que já está registrado não cria uma duplicata do script.</span><span class="sxs-lookup"><span data-stu-id="30f86-423">Attempting to register a script that is already registered does not create a duplicate of the script.</span></span>  
  
 <span data-ttu-id="30f86-424">Chamar o <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> método para determinar se um script de cliente com um determinado par de chave e tipo já está registrado e evitar desnecessariamente tentando adicionar o script.</span><span class="sxs-lookup"><span data-stu-id="30f86-424">Call the <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> method to determine whether a client script with a given key and type pair is already registered and avoid unnecessarily attempting to add the script.</span></span>  
  
 <span data-ttu-id="30f86-425">Esta sobrecarga do <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> método, você deve garantir que o script fornecido no `script` parâmetro é encapsulado em um `<script>` bloco de elemento.</span><span class="sxs-lookup"><span data-stu-id="30f86-425">In this overload of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method, you must make sure that the script provided in the `script` parameter is wrapped in a `<script>` element block.</span></span>  
  
 <span data-ttu-id="30f86-426">O <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> método adiciona um bloco de script na parte superior da página renderizada.</span><span class="sxs-lookup"><span data-stu-id="30f86-426">The <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method adds a script block to the top of the rendered page.</span></span> <span data-ttu-id="30f86-427">Não há garantia de blocos de script para a saída na ordem em que eles são registrados.</span><span class="sxs-lookup"><span data-stu-id="30f86-427">The script blocks are not guaranteed to be output in the order they are registered.</span></span> <span data-ttu-id="30f86-428">Se a ordem dos blocos de script é importante, use um <xref:System.Text.StringBuilder> para reunir os scripts em uma única cadeia de caracteres do objeto e, em seguida, registrá-los em um bloco de script do cliente individual.</span><span class="sxs-lookup"><span data-stu-id="30f86-428">If the order of the script blocks is important, use a <xref:System.Text.StringBuilder> object to gather the scripts together in a single string, and then register them all in a single client script block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30f86-429">O exemplo de código a seguir demonstra o uso do <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> método.</span><span class="sxs-lookup"><span data-stu-id="30f86-429">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager12#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.clientscriptmanager12/cs/default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager12#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.clientscriptmanager12/vb/default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterClientScriptBlock">
      <MemberSignature Language="C#" Value="public void RegisterClientScriptBlock (Type type, string key, string script, bool addScriptTags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClientScriptBlock(class System.Type type, string key, string script, bool addScriptTags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClientScriptBlock(Type ^ type, System::String ^ key, System::String ^ script, bool addScriptTags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
        <Parameter Name="addScriptTags" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="30f86-430">O tipo do script de cliente que será registrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-430">The type of the client script to register.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="30f86-431">A chave do script de cliente a ser registrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-431">The key of the client script to register.</span>
          </span>
        </param>
        <param name="script">
          <span data-ttu-id="30f86-432">A literal de script de cliente a ser registrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-432">The client script literal to register.</span>
          </span>
        </param>
        <param name="addScriptTags">
          <span data-ttu-id="30f86-433">Um valor booliano que indica se deverão ser adicionadas marcas de script.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-433">A Boolean value indicating whether to add script tags.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30f86-434">Registra o script de cliente no objeto <see cref="T:System.Web.UI.Page" /> usando um tipo, uma chave, um literal de script e um valor booliano indicando se devem ser adicionadas marcas de script.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-434">Registers the client script with the <see cref="T:System.Web.UI.Page" /> object using a type, key, script literal, and Boolean value indicating whether to add script tags.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30f86-435">Um script de cliente é identificado exclusivamente por sua chave e seu tipo.</span><span class="sxs-lookup"><span data-stu-id="30f86-435">A client script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="30f86-436">Scripts com a mesma chave e tipo são considerados duplicatas.</span><span class="sxs-lookup"><span data-stu-id="30f86-436">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="30f86-437">Somente um script com um determinado tipo e o par de chaves pode ser registrado com a página.</span><span class="sxs-lookup"><span data-stu-id="30f86-437">Only one script with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="30f86-438">Tentativa de registrar um script que já está registrado não cria uma duplicata do script.</span><span class="sxs-lookup"><span data-stu-id="30f86-438">Attempting to register a script that is already registered does not create a duplicate of the script.</span></span>  
  
 <span data-ttu-id="30f86-439">Chamar o <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> método para determinar se um script de cliente com um determinado par de chave e tipo já está registrado.</span><span class="sxs-lookup"><span data-stu-id="30f86-439">Call the <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> method to determine whether a client script with a given key and type pair is already registered.</span></span> <span data-ttu-id="30f86-440">Isso permite que você evite desnecessariamente tentando adicionar o script.</span><span class="sxs-lookup"><span data-stu-id="30f86-440">This lets you avoid unnecessarily attempting to add the script.</span></span>  
  
 <span data-ttu-id="30f86-441">Esta sobrecarga do <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> método, você pode indicar se o script fornecido no `script` parâmetro é empacotado com um `<script>` bloco de elemento usando o `addScriptTags` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="30f86-441">In this overload of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method, you can indicate whether the script provided in the `script` parameter is wrapped with a `<script>` element block by using the `addScriptTags` parameter.</span></span> <span data-ttu-id="30f86-442">Configuração `addScriptTags` para `true` indica que as marcas de script serão adicionadas automaticamente.</span><span class="sxs-lookup"><span data-stu-id="30f86-442">Setting `addScriptTags` to `true` indicates that script tags will be added automatically.</span></span>  
  
 <span data-ttu-id="30f86-443">O <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> método adiciona um bloco de script na parte superior da página renderizada.</span><span class="sxs-lookup"><span data-stu-id="30f86-443">The <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method adds a script block to the top of the rendered page.</span></span> <span data-ttu-id="30f86-444">Não há garantia de blocos de script para a saída na ordem em que eles são registrados.</span><span class="sxs-lookup"><span data-stu-id="30f86-444">The script blocks are not guaranteed to be output in the order they are registered.</span></span> <span data-ttu-id="30f86-445">Se a ordem dos blocos de script é importante, use um <xref:System.Text.StringBuilder> para reunir os scripts em uma única cadeia de caracteres do objeto e, em seguida, registrá-los em um bloco de script do cliente individual.</span><span class="sxs-lookup"><span data-stu-id="30f86-445">If the order of the script blocks is important, use a <xref:System.Text.StringBuilder> object to gather the scripts together in a single string, and then register them all in a single client script block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30f86-446">O exemplo de código a seguir demonstra o uso do <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> método.</span><span class="sxs-lookup"><span data-stu-id="30f86-446">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method.</span></span> <span data-ttu-id="30f86-447">Observe que o `addScriptTags` parâmetro está definido como `true` para o início e o script marcas de fechamento não são incluídos com o `script` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="30f86-447">Note that the `addScriptTags` parameter is set to `true` so the beginning and closing script tags are not included with the `script` parameter.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="30f86-448">O tipo do bloco de script de cliente é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-448">The client script block type is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterClientScriptInclude">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="30f86-449">Registra o script de cliente de inclusão com o objeto <see cref="T:System.Web.UI.Page" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-449">Registers the client script include with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterClientScriptInclude">
      <MemberSignature Language="C#" Value="public void RegisterClientScriptInclude (string key, string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClientScriptInclude(string key, string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterClientScriptInclude (key As String, url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClientScriptInclude(System::String ^ key, System::String ^ url);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="30f86-450">A chave do script de cliente que será registrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-450">The key of the client script include to register.</span>
          </span>
        </param>
        <param name="url">
          <span data-ttu-id="30f86-451">A URL do script de cliente que será registrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-451">The URL of the client script include to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30f86-452">Registra o script de cliente com o objeto <see cref="T:System.Web.UI.Page" /> usando uma chave e uma URL, que permite que o script seja chamado pelo cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-452">Registers the client script with the <see cref="T:System.Web.UI.Page" /> object using a key and a URL, which enables the script to be called from the client.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30f86-453">Incluir um script de cliente é identificada exclusivamente por sua chave e seu tipo.</span><span class="sxs-lookup"><span data-stu-id="30f86-453">A client script include is uniquely identified by its key and its type.</span></span> <span data-ttu-id="30f86-454">Scripts com a mesma chave e tipo são considerados duplicatas.</span><span class="sxs-lookup"><span data-stu-id="30f86-454">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="30f86-455">Somente um script com um determinado tipo e o par de chaves pode ser registrado com a página.</span><span class="sxs-lookup"><span data-stu-id="30f86-455">Only one script with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="30f86-456">Tentativa de registrar um script que já está registrado não cria uma duplicata do script.</span><span class="sxs-lookup"><span data-stu-id="30f86-456">Attempting to register a script that is already registered does not create a duplicate of the script.</span></span>  
  
 <span data-ttu-id="30f86-457">Chamar o <xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A> método para determinar se um script de cliente incluem com uma determinada chave e par de tipo já está registrado e evitar desnecessariamente tentando adicionar o script.</span><span class="sxs-lookup"><span data-stu-id="30f86-457">Call the <xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A> method to determine whether a client script include with a given key and type pair is already registered and avoid unnecessarily attempting to add the script.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="30f86-458">Para resolver a URL de cliente, use o <xref:System.Web.UI.Control.ResolveClientUrl%2A> método.</span><span class="sxs-lookup"><span data-stu-id="30f86-458">To resolve the client URL, use the <xref:System.Web.UI.Control.ResolveClientUrl%2A> method.</span></span> <span data-ttu-id="30f86-459">Esse método usa o contexto da URL na qual ele é chamado para resolver o caminho.</span><span class="sxs-lookup"><span data-stu-id="30f86-459">This method uses the context of the URL on which it is called to resolve the path.</span></span>  
  
 <span data-ttu-id="30f86-460">Esta sobrecarga do <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> método chama a sobrecarga que utiliza um `key`, um `URL`e um `type` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="30f86-460">This overload of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method calls the overload that takes a `key`, a `URL`, and a `type` parameter.</span></span>  
  
 <span data-ttu-id="30f86-461">O método adiciona um bloco de script na parte superior da página renderizada.</span><span class="sxs-lookup"><span data-stu-id="30f86-461">The method adds a script block at the top of the rendered page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30f86-462">Para obter informações relacionadas, incluindo sintaxe, uso e um exemplo, consulte <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>.</span><span class="sxs-lookup"><span data-stu-id="30f86-462">For related information, including syntax, usage, and an example, see <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered" />
      </Docs>
    </Member>
    <Member MemberName="RegisterClientScriptInclude">
      <MemberSignature Language="C#" Value="public void RegisterClientScriptInclude (Type type, string key, string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClientScriptInclude(class System.Type type, string key, string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClientScriptInclude(Type ^ type, System::String ^ key, System::String ^ url);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="30f86-463">O tipo do script de cliente que será registrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-463">The type of the client script include to register.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="30f86-464">A chave do script de cliente que será registrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-464">The key of the client script include to register.</span>
          </span>
        </param>
        <param name="url">
          <span data-ttu-id="30f86-465">A URL do script de cliente que será registrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-465">The URL of the client script include to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30f86-466">Registra o script de cliente incluído no objeto <see cref="T:System.Web.UI.Page" /> usando um tipo, uma chave e uma URL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-466">Registers the client script include with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, and a URL.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30f86-467">Esta sobrecarga do <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> leva *chave* e *url* parâmetros para identificar o script, bem como um `type` parâmetro para especificar a identificação do script de cliente incluem.</span><span class="sxs-lookup"><span data-stu-id="30f86-467">This overload of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method takes *key* and *url* parameters to identify the script, as well as a `type` parameter to specify the identification of the client script include.</span></span> <span data-ttu-id="30f86-468">Você especificar o tipo com base no objeto que estarão acessando o recurso.</span><span class="sxs-lookup"><span data-stu-id="30f86-468">You specify the type based on the object that will be accessing the resource.</span></span> <span data-ttu-id="30f86-469">Por exemplo, ao usar um `Page` instância para acessar o recurso, você especificar o `Page` tipo.</span><span class="sxs-lookup"><span data-stu-id="30f86-469">For instance, when using a `Page` instance to access the resource, you specify the `Page` type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="30f86-470">Para resolver a URL de cliente, use o <xref:System.Web.UI.Control.ResolveClientUrl%2A> método.</span><span class="sxs-lookup"><span data-stu-id="30f86-470">To resolve the client URL, use the <xref:System.Web.UI.Control.ResolveClientUrl%2A> method.</span></span> <span data-ttu-id="30f86-471">Esse método usa o contexto da URL na qual ele é chamado para resolver o caminho.</span><span class="sxs-lookup"><span data-stu-id="30f86-471">This method uses the context of the URL on which it is called to resolve the path.</span></span>  
  
 <span data-ttu-id="30f86-472">Este método adiciona um bloco de script na parte superior da página renderizada.</span><span class="sxs-lookup"><span data-stu-id="30f86-472">This method adds a script block at the top of the rendered page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30f86-473">O exemplo de código a seguir demonstra o uso do <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> método.</span><span class="sxs-lookup"><span data-stu-id="30f86-473">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method.</span></span> <span data-ttu-id="30f86-474">Observe que se a lógica de verificação de incluir o script de cliente existentes foram removida, ainda não haveria scripts de cliente duplicados na página renderizada porque o <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> método procura duplicatas.</span><span class="sxs-lookup"><span data-stu-id="30f86-474">Note that if the logic to check for the existing client script include were removed, there would still not be duplicate client scripts in the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method checks for duplicates.</span></span> <span data-ttu-id="30f86-475">O benefício de verificação é reduzir a computação desnecessária.</span><span class="sxs-lookup"><span data-stu-id="30f86-475">The benefit of checking is to reduce unnecessary computation.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager2/cs/clientscriptincludes.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager2/vb/clientscriptincludes.aspx#1)]  
  
 <span data-ttu-id="30f86-476">Este exemplo requer um arquivo JavaScript chamado Script_include.js com o seguinte conteúdo:</span><span class="sxs-lookup"><span data-stu-id="30f86-476">This example requires a JavaScript file named Script_include.js with the following contents:</span></span>  
  
```  
function DoClick() {Form1.Message.value='Text from include script.'}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="30f86-477">O tipo do script de cliente de inclusão é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-477">The client script include type is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="30f86-478">A URL é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-478">The URL is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="30f86-479">\- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-479">\- or -</span>
          </span>
          <span data-ttu-id="30f86-480">A URL está vazia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-480">The URL is empty.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered" />
      </Docs>
    </Member>
    <Member MemberName="RegisterClientScriptResource">
      <MemberSignature Language="C#" Value="public void RegisterClientScriptResource (Type type, string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClientScriptResource(class System.Type type, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClientScriptResource(Type ^ type, System::String ^ resourceName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="30f86-481">O tipo do recurso de script de cliente a ser registrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-481">The type of the client script resource to register.</span>
          </span>
        </param>
        <param name="resourceName">
          <span data-ttu-id="30f86-482">O nome do recurso de script de cliente a ser registrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-482">The name of the client script resource to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30f86-483">Registra o recurso de script de cliente com o objeto <see cref="T:System.Web.UI.Page" /> usando um tipo e um nome de recurso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-483">Registers the client script resource with the <see cref="T:System.Web.UI.Page" /> object using a type and a resource name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30f86-484">O <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> método é usado ao acessar recursos compilados em assemblies por meio do manipulador HTTP WebResource.</span><span class="sxs-lookup"><span data-stu-id="30f86-484">The <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> method is used when accessing compiled-in resources from assemblies through the WebResource.axd HTTP handler.</span></span> <span data-ttu-id="30f86-485">O <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> método registra o script com o <xref:System.Web.UI.Page> de objeto e impede que scripts duplicados.</span><span class="sxs-lookup"><span data-stu-id="30f86-485">The <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> method registers the script with the <xref:System.Web.UI.Page> object and prevents duplicate scripts.</span></span> <span data-ttu-id="30f86-486">Este método envolve o conteúdo da URL de recurso com um `<script>` bloco de elemento.</span><span class="sxs-lookup"><span data-stu-id="30f86-486">This method wraps the contents of the resource URL with a `<script>` element block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30f86-487">O exemplo de código a seguir demonstra o uso do <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> método.</span><span class="sxs-lookup"><span data-stu-id="30f86-487">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> method.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/cs/clientscriptwebresource.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/vb/clientscriptwebresource.aspx#1)]  
  
 <span data-ttu-id="30f86-488">O exemplo de código a seguir demonstra como aplicar programaticamente o <xref:System.Web.UI.WebResourceAttribute> atributo de metadados para marcar o assembly para os recursos que será servido.</span><span class="sxs-lookup"><span data-stu-id="30f86-488">The following code example demonstrates how to programmatically apply the <xref:System.Web.UI.WebResourceAttribute> metadata attribute to mark the assembly for the resources that will be served.</span></span>  
  
 [!code-csharp[System.Web.UI.ClientScriptManager4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/cs/resource.cs#2)]
 [!code-vb[System.Web.UI.ClientScriptManager4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/vb/resource.vb#2)]  
  
 <span data-ttu-id="30f86-489">Este exemplo requer um arquivo JavaScript chamado `Script_include.js`, com o seguinte conteúdo:</span><span class="sxs-lookup"><span data-stu-id="30f86-489">This example requires a JavaScript file named `Script_include.js`, with the following contents:</span></span>  
  
```  
function DoClick() {Form1.Message.value='Text from resource script.'}  
```  
  
 <span data-ttu-id="30f86-490">Compile o `Script_include.js` arquivo como um recurso no `Samples.AspNet.CS.Controls` assembly que contém o `ClientScriptResourceLabel` classe.</span><span class="sxs-lookup"><span data-stu-id="30f86-490">Compile the `Script_include.js` file as a resource in the `Samples.AspNet.CS.Controls` assembly that contains the `ClientScriptResourceLabel` class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="30f86-491">O nome de recurso do cliente é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-491">The client resource name is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="30f86-492">\- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-492">\- or -</span>
          </span>
          <span data-ttu-id="30f86-493">O nome de recurso do cliente tem um tamanho de zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-493">The client resource name has a length of zero.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude" />
        <altmember cref="T:System.Web.Handlers.AssemblyResourceLoader" />
        <altmember cref="T:System.Web.UI.WebResourceAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterExpandoAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="30f86-494">Registra um par nome/valor como um atributo personalizado (expando) do controle especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-494">Registers a name/value pair as a custom (expando) attribute of the specified control.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterExpandoAttribute">
      <MemberSignature Language="C#" Value="public void RegisterExpandoAttribute (string controlId, string attributeName, string attributeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterExpandoAttribute(string controlId, string attributeName, string attributeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterExpandoAttribute (controlId As String, attributeName As String, attributeValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterExpandoAttribute(System::String ^ controlId, System::String ^ attributeName, System::String ^ attributeValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlId" Type="System.String" />
        <Parameter Name="attributeName" Type="System.String" />
        <Parameter Name="attributeValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controlId">
          <span data-ttu-id="30f86-495">O <see cref="T:System.Web.UI.Control" /> na página que contém o atributo personalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-495">The <see cref="T:System.Web.UI.Control" /> on the page that contains the custom attribute.</span>
          </span>
        </param>
        <param name="attributeName">
          <span data-ttu-id="30f86-496">O nome do atributo personalizado a ser registrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-496">The name of the custom attribute to register.</span>
          </span>
        </param>
        <param name="attributeValue">
          <span data-ttu-id="30f86-497">O valor do atributo personalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-497">The value of the custom attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30f86-498">Registra um par nome/valor como um atributo personalizado (expando) do controle especificado, considerando uma ID de controle, um nome de atributo e um valor de atributo especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-498">Registers a name/value pair as a custom (expando) attribute of the specified control given a control ID, attribute name, and attribute value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30f86-499">O <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> método registra um par nome/valor como um atributo personalizado (expando) especificado <xref:System.Web.UI.Control>.</span><span class="sxs-lookup"><span data-stu-id="30f86-499">The <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> method registers a name/value pair as a custom (expando) attribute on the specified <xref:System.Web.UI.Control>.</span></span> <span data-ttu-id="30f86-500">O atributo expando é definido dinamicamente de JavaScript para preservar a compatibilidade XHTML para marcação do controle processado.</span><span class="sxs-lookup"><span data-stu-id="30f86-500">The expando attribute is set dynamically from JavaScript to preserve XHTML compatibility for the rendered control's markup.</span></span> <span data-ttu-id="30f86-501">As aspas e barras invertidas nos valores do atributo personalizado (expando) são ignoradas.</span><span class="sxs-lookup"><span data-stu-id="30f86-501">Quotes and backslashes in the custom (expando) attribute's values are escaped.</span></span> <span data-ttu-id="30f86-502">Se você não quiser aspas e barras invertidas de escape, chame o <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> sobrecarregar o método e definir o `encode` parâmetro `false`.</span><span class="sxs-lookup"><span data-stu-id="30f86-502">If you do not want to escape quotes and backslashes, call the <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> overload method and set the `encode` parameter to `false`.</span></span>  
  
 <span data-ttu-id="30f86-503">Se o atributo expando não foi encontrado ou o controle para adicionar o atributo expando não for encontrado, o script de cliente ainda é emitido, mas isso não afetará o controle.</span><span class="sxs-lookup"><span data-stu-id="30f86-503">If the expando attribute is not found or the control to add the expando attribute to is not found, the client script is still emitted, but it will not affect the control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.JScript.Expando" />
      </Docs>
    </Member>
    <Member MemberName="RegisterExpandoAttribute">
      <MemberSignature Language="C#" Value="public void RegisterExpandoAttribute (string controlId, string attributeName, string attributeValue, bool encode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterExpandoAttribute(string controlId, string attributeName, string attributeValue, bool encode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterExpandoAttribute (controlId As String, attributeName As String, attributeValue As String, encode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterExpandoAttribute(System::String ^ controlId, System::String ^ attributeName, System::String ^ attributeValue, bool encode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlId" Type="System.String" />
        <Parameter Name="attributeName" Type="System.String" />
        <Parameter Name="attributeValue" Type="System.String" />
        <Parameter Name="encode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="controlId">
          <span data-ttu-id="30f86-504">O <see cref="T:System.Web.UI.Control" /> na página que contém o atributo personalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-504">The <see cref="T:System.Web.UI.Control" /> on the page that contains the custom attribute.</span>
          </span>
        </param>
        <param name="attributeName">
          <span data-ttu-id="30f86-505">O nome do atributo personalizado a ser registrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-505">The name of the custom attribute to register.</span>
          </span>
        </param>
        <param name="attributeValue">
          <span data-ttu-id="30f86-506">O valor do atributo personalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-506">The value of the custom attribute.</span>
          </span>
        </param>
        <param name="encode">
          <span data-ttu-id="30f86-507">Um valor booliano que indica se o atributo personalizado deve ser codificado para o registro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-507">A Boolean value indicating whether to encode the custom attribute to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30f86-508">Registra um par nome/valor como um atributo personalizado (expando) do controle especificado considerando uma ID de controle, um nome de atributo, um valor de atributo e um valor booliano que indica se é necessário codificar o valor de atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-508">Registers a name/value pair as a custom (expando) attribute of the specified control given a control ID, an attribute name, an attribute value, and a Boolean value indicating whether to encode the attribute value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30f86-509">O <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> método registra um par nome/valor como um atributo personalizado (expando) especificado <xref:System.Web.UI.Control>.</span><span class="sxs-lookup"><span data-stu-id="30f86-509">The <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> method registers a name/value pair as a custom (expando) attribute on the specified <xref:System.Web.UI.Control>.</span></span> <span data-ttu-id="30f86-510">O atributo expando é definido dinamicamente de JavaScript para preservar a compatibilidade XHTML para marcação do controle processado.</span><span class="sxs-lookup"><span data-stu-id="30f86-510">The expando attribute is set dynamically from JavaScript to preserve XHTML compatibility for the rendered control's markup.</span></span> <span data-ttu-id="30f86-511">Definir o `encode` parâmetro `true` se você precisa de escape aspas e barras invertidas no valor do seu atributo expando.</span><span class="sxs-lookup"><span data-stu-id="30f86-511">Set the `encode` parameter to `true` if you need to escape quotes and backslashes in your expando attribute's value.</span></span>  
  
 <span data-ttu-id="30f86-512">Se o atributo expando não foi encontrado ou o controle para adicionar o atributo expando não for encontrado, o script de cliente ainda é emitido, mas isso não afetará o controle.</span><span class="sxs-lookup"><span data-stu-id="30f86-512">If the expando attribute is not found or the control to add the expando attribute to is not found, the client script is still emitted, but it will not affect the control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30f86-513">O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> método o <xref:System.Web.UI.ClientScriptManager> classe.</span><span class="sxs-lookup"><span data-stu-id="30f86-513">The following code example demonstrates how to use the <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="30f86-514">O script de cliente nos conjuntos de página renderizada o `title` atributo de um `<span>` elemento.</span><span class="sxs-lookup"><span data-stu-id="30f86-514">The client script in the rendered page sets the `title` attribute of a `<span>` element.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager6#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager6/cs/clientscriptexpando.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager6#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager6/vb/clientscriptexpando.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.JScript.Expando" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterForEventValidation">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="30f86-515">Registra uma referência de evento para validação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-515">Registers an event reference for validation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterForEventValidation">
      <MemberSignature Language="C#" Value="public void RegisterForEventValidation (string uniqueId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterForEventValidation(string uniqueId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterForEventValidation (uniqueId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterForEventValidation(System::String ^ uniqueId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uniqueId">
          <span data-ttu-id="30f86-516">Uma ID exclusiva que representa o controle de cliente que gera o evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-516">A unique ID representing the client control generating the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30f86-517">Registra uma referência de evento para validação com uma ID de controle exclusiva que representa o controle de cliente que gera o evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-517">Registers an event reference for validation with a unique control ID representing the client control generating the event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30f86-518">Para obter mais informações e exemplos, consulte o <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> método.</span><span class="sxs-lookup"><span data-stu-id="30f86-518">For more information and examples, see the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30f86-519">O exemplo a seguir mostra como usar o <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> método e o <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> método para registrar um retorno de chamada para validação e como validar que o retorno de chamada foi originado da página.</span><span class="sxs-lookup"><span data-stu-id="30f86-519">The following example shows how to use the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method and the <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> method in order to register a callback for validation, and how to validate that the callback originated from the page.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager9#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/cs/eventvalidation2cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager9#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/vb/eventvalidation2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterForEventValidation">
      <MemberSignature Language="C#" Value="public void RegisterForEventValidation (System.Web.UI.PostBackOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterForEventValidation(class System.Web.UI.PostBackOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.Web.UI.PostBackOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterForEventValidation (options As PostBackOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterForEventValidation(System::Web::UI::PostBackOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Web.UI.PostBackOptions" />
      </Parameters>
      <Docs>
        <param name="options">
          <span data-ttu-id="30f86-520">Um objeto <see cref="T:System.Web.UI.PostBackOptions" /> que especifica como o cliente JavaScript é gerado para iniciar um evento de postback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-520">A <see cref="T:System.Web.UI.PostBackOptions" /> object that specifies how client JavaScript is generated to initiate a postback event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30f86-521">Registra uma referência de evento para validação com <see cref="T:System.Web.UI.PostBackOptions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-521">Registers an event reference for validation with <see cref="T:System.Web.UI.PostBackOptions" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30f86-522">Para obter mais informações e exemplos, consulte o <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> método.</span><span class="sxs-lookup"><span data-stu-id="30f86-522">For more information and examples, see the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.ValidateEvent" />
      </Docs>
    </Member>
    <Member MemberName="RegisterForEventValidation">
      <MemberSignature Language="C#" Value="public void RegisterForEventValidation (string uniqueId, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterForEventValidation(string uniqueId, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterForEventValidation (uniqueId As String, argument As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterForEventValidation(System::String ^ uniqueId, System::String ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uniqueId">
          <span data-ttu-id="30f86-523">Uma ID exclusiva que representa o controle de cliente que gera o evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-523">A unique ID representing the client control generating the event.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="30f86-524">Argumentos de evento passados com o evento de cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-524">Event arguments passed with the client event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30f86-525">Registra uma referência de evento para validação, com uma ID de controle exclusiva e argumentos do evento que representam o controle de cliente que gera o evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-525">Registers an event reference for validation with a unique control ID and event arguments representing the client control generating the event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="30f86-526">O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> método e o <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> método para registrar um retorno de chamada para validação e para validar que o retorno de chamada foi originado da página.</span><span class="sxs-lookup"><span data-stu-id="30f86-526">The following code example demonstrates using the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method and the <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> method to register a callback for validation and to validate that the callback originated from the page.</span></span> <span data-ttu-id="30f86-527">Para melhorar a validação mostrada no exemplo, você pode modificar a validação `argument` parâmetro para conter informações específicas do usuário, como uma identidade ou uma função</span><span class="sxs-lookup"><span data-stu-id="30f86-527">To improve on the validation shown in the example, you could modify the validation `argument` parameter to contain information specific to the user such as an identity or role</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/cs/EventValidationCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/vb/EventValidationVB.aspx#1)]  
  
 <span data-ttu-id="30f86-528">O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> método para registrar um retorno de chamada para validação.</span><span class="sxs-lookup"><span data-stu-id="30f86-528">The following code example demonstrates using the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method to register a callback for validation.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.clientscriptmanager10/cs/default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.clientscriptmanager10/vb/default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="30f86-529">O método é chamado antes do método <see cref="M:System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-529">The method is called prior to the <see cref="M:System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)" /> method.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterHiddenField">
      <MemberSignature Language="C#" Value="public void RegisterHiddenField (string hiddenFieldName, string hiddenFieldInitialValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterHiddenField(string hiddenFieldName, string hiddenFieldInitialValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterHiddenField(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterHiddenField (hiddenFieldName As String, hiddenFieldInitialValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterHiddenField(System::String ^ hiddenFieldName, System::String ^ hiddenFieldInitialValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hiddenFieldName" Type="System.String" />
        <Parameter Name="hiddenFieldInitialValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hiddenFieldName">
          <span data-ttu-id="30f86-530">O nome do campo oculto a ser registrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-530">The name of the hidden field to register.</span>
          </span>
        </param>
        <param name="hiddenFieldInitialValue">
          <span data-ttu-id="30f86-531">O valor inicial do campo a ser registrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-531">The initial value of the field to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30f86-532">Registra um valor oculto com o objeto <see cref="T:System.Web.UI.Page" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-532">Registers a hidden value with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30f86-533">O <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> método cria oculto `<input>` elemento na página HTML renderizada.</span><span class="sxs-lookup"><span data-stu-id="30f86-533">The <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> method creates a hidden `<input>` element on the rendered HTML page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30f86-534">O exemplo de código a seguir demonstra o uso do <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> e <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="30f86-534">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> and <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> methods.</span></span> <span data-ttu-id="30f86-535">O exemplo registra uma matriz e um valor oculto e define o `OnClick` eventos de um `<input>` botão para calcular a soma dos dois valores da matriz e o valor hidden.</span><span class="sxs-lookup"><span data-stu-id="30f86-535">The example registers an array and a hidden value and defines the `OnClick` event of an `<input>` button to calculate the sum of two values of the array and the hidden value.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager5#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager5/cs/clientscriptregisterarray.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager5#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager5/vb/clientscriptregisterarray.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="30f86-536">
            <paramref name="hiddenFieldName" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-536">
              <paramref name="hiddenFieldName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.WebControls.HiddenField" />
      </Docs>
    </Member>
    <Member MemberName="RegisterOnSubmitStatement">
      <MemberSignature Language="C#" Value="public void RegisterOnSubmitStatement (Type type, string key, string script);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterOnSubmitStatement(class System.Type type, string key, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterOnSubmitStatement(Type ^ type, System::String ^ key, System::String ^ script);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="30f86-537">O tipo da instrução OnSubmit a ser registrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-537">The type of the OnSubmit statement to register.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="30f86-538">A chave da instrução OnSubmit a ser registrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-538">The key of the OnSubmit statement to register.</span>
          </span>
        </param>
        <param name="script">
          <span data-ttu-id="30f86-539">O literal de script da instrução OnSubmit a ser registrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-539">The script literal of the OnSubmit statement to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30f86-540">Registra a instrução OnSubmit com o objeto <see cref="T:System.Web.UI.Page" /> usando um tipo, uma chave e um literal de script.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-540">Registers an OnSubmit statement with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, and a script literal.</span>
          </span>
          <span data-ttu-id="30f86-541">A instrução é executada quando o <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> é enviado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-541">The statement executes when the <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> is submitted.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30f86-542">Uma instrução OnSubmit é identificada exclusivamente por sua chave e seu tipo.</span><span class="sxs-lookup"><span data-stu-id="30f86-542">An OnSubmit statement is uniquely identified by its key and its type.</span></span> <span data-ttu-id="30f86-543">Instruções com a mesma chave e tipo são consideradas duplicatas.</span><span class="sxs-lookup"><span data-stu-id="30f86-543">Statements with the same key and type are considered duplicates.</span></span> <span data-ttu-id="30f86-544">Apenas uma declaração com um tipo fornecido e o par de chaves pode ser registrada com a página.</span><span class="sxs-lookup"><span data-stu-id="30f86-544">Only one statement with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="30f86-545">Tentativa de registrar uma instrução que já está registrada não criará uma duplicata da instrução.</span><span class="sxs-lookup"><span data-stu-id="30f86-545">Attempting to register a statement that is already registered will not create a duplicate of the statement.</span></span>  
  
 <span data-ttu-id="30f86-546">Chamar o <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> método para determinar se uma instrução OnSubmit já está registrada com um determinado par de chave e tipo e evitar desnecessariamente tentando adicionar o script.</span><span class="sxs-lookup"><span data-stu-id="30f86-546">Call the <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> method to determine whether an OnSubmit statement is already registered with a given key and type pair and avoid unnecessarily attempting to add the script.</span></span>  
  
 <span data-ttu-id="30f86-547">O `script` parâmetro o <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> método pode conter vários comandos de script, como eles são delimitados corretamente com um ponto e vírgula (;).</span><span class="sxs-lookup"><span data-stu-id="30f86-547">The `script` parameter of the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method can contain multiple script commands as long as they are properly delimited with a semicolon (;).</span></span>  
  
 <span data-ttu-id="30f86-548">O <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> adiciona um script que é executado antes da página é enviada e lhe dá a oportunidade de cancelar o envio.</span><span class="sxs-lookup"><span data-stu-id="30f86-548">The <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> adds a script that is executed before the page is submitted and gives you an opportunity to cancel the submission.</span></span>  
  
 <span data-ttu-id="30f86-549">Para obter mais informações sobre os formulários HTML e o `OnSubmit` de atributo, consulte o [World Wide Web Consortium (W3C) Web site](http://go.microsoft.com/fwlink/?linkid=37125).</span><span class="sxs-lookup"><span data-stu-id="30f86-549">For more information on HTML forms and the `OnSubmit` attribute, see the [World Wide Web Consortium (W3C) Web site](http://go.microsoft.com/fwlink/?linkid=37125).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30f86-550">O exemplo de código a seguir demonstra o uso do <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> método.</span><span class="sxs-lookup"><span data-stu-id="30f86-550">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager3/cs/clientscriptonsubmit.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager3/vb/clientscriptonsubmit.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="30f86-551">
            <paramref name="type" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-551">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlForm" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterStartupScript">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="30f86-552">Registra o script de inicialização com o objeto <see cref="T:System.Web.UI.Page" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-552">Registers the startup script with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterStartupScript">
      <MemberSignature Language="C#" Value="public void RegisterStartupScript (Type type, string key, string script);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterStartupScript(class System.Type type, string key, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterStartupScript(Type ^ type, System::String ^ key, System::String ^ script);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="30f86-553">O tipo de script de inicialização a ser registrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-553">The type of the startup script to register.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="30f86-554">A chave do script de inicialização a ser registrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-554">The key of the startup script to register.</span>
          </span>
        </param>
        <param name="script">
          <span data-ttu-id="30f86-555">O literal do script de inicialização a ser registrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-555">The startup script literal to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30f86-556">Registra o script de inicialização no objeto <see cref="T:System.Web.UI.Page" /> usando um tipo, uma chave e um literal de script.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-556">Registers the startup script with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, and a script literal.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30f86-557">Um script de cliente é identificado exclusivamente por sua chave e seu tipo.</span><span class="sxs-lookup"><span data-stu-id="30f86-557">A client script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="30f86-558">Scripts com a mesma chave e tipo são considerados duplicatas.</span><span class="sxs-lookup"><span data-stu-id="30f86-558">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="30f86-559">Somente um script com um determinado tipo e o par de chaves pode ser registrado com a página.</span><span class="sxs-lookup"><span data-stu-id="30f86-559">Only one script with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="30f86-560">Tentativa de registrar um script que já está registrado não cria uma duplicata do script.</span><span class="sxs-lookup"><span data-stu-id="30f86-560">Attempting to register a script that is already registered does not create a duplicate of the script.</span></span>  
  
 <span data-ttu-id="30f86-561">Chamar o <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> método para determinar se um script de inicialização com um determinado par de chave e tipo já está registrado e evitar desnecessariamente tentando adicionar o script.</span><span class="sxs-lookup"><span data-stu-id="30f86-561">Call the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method to determine whether a startup script with a given key and type pair is already registered and avoid unnecessarily attempting to add the script.</span></span>  
  
 <span data-ttu-id="30f86-562">Esta sobrecarga do <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> método, você deve garantir que o script fornecido no `script` parâmetro é empacotado com um `<script>` bloco de elemento.</span><span class="sxs-lookup"><span data-stu-id="30f86-562">In this overload of the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method, you must make sure that the script provided in the `script` parameter is wrapped with a `<script>` element block.</span></span>  
  
 <span data-ttu-id="30f86-563">O bloco de script adicionado pelo <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> método é executado quando a página termina de ser carregada, mas antes da página <xref:System.Web.UI.Control.OnLoad%2A> é gerado.</span><span class="sxs-lookup"><span data-stu-id="30f86-563">The script block added by the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method executes when the page finishes loading but before the page's <xref:System.Web.UI.Control.OnLoad%2A> event is raised.</span></span> <span data-ttu-id="30f86-564">Não há garantia de blocos de script para a saída na ordem em que eles são registrados.</span><span class="sxs-lookup"><span data-stu-id="30f86-564">The script blocks are not guaranteed to be output in the order they are registered.</span></span> <span data-ttu-id="30f86-565">Se a ordem dos blocos de script é importante, use um <xref:System.Text.StringBuilder> para reunir os scripts em uma única cadeia de caracteres do objeto e, em seguida, registrá-los em um bloco de script do cliente individual.</span><span class="sxs-lookup"><span data-stu-id="30f86-565">If the order of the script blocks is important, use a <xref:System.Text.StringBuilder> object to gather the scripts together in a single string, and then register them all in a single client script block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30f86-566">O exemplo de código a seguir demonstra o uso do <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> método.</span><span class="sxs-lookup"><span data-stu-id="30f86-566">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method.</span></span> <span data-ttu-id="30f86-567">Observe que o início e o script marcas de fechamento estão incluídas dentro de `script` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="30f86-567">Note that the beginning and closing script tags are included within the `script` parameter.</span></span> <span data-ttu-id="30f86-568">Para que o script marcas adicionadas com base em uma configuração de parâmetros adicionais, consulte o <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> método.</span><span class="sxs-lookup"><span data-stu-id="30f86-568">To have the script tags added based on an additional parameter setting, see the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager11#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.clientscriptmanager11/cs/default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager11#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.clientscriptmanager11/vb/default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterStartupScript">
      <MemberSignature Language="C#" Value="public void RegisterStartupScript (Type type, string key, string script, bool addScriptTags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterStartupScript(class System.Type type, string key, string script, bool addScriptTags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterStartupScript(Type ^ type, System::String ^ key, System::String ^ script, bool addScriptTags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
        <Parameter Name="addScriptTags" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="30f86-569">O tipo de script de inicialização a ser registrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-569">The type of the startup script to register.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="30f86-570">A chave do script de inicialização a ser registrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-570">The key of the startup script to register.</span>
          </span>
        </param>
        <param name="script">
          <span data-ttu-id="30f86-571">O literal do script de inicialização a ser registrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-571">The startup script literal to register.</span>
          </span>
        </param>
        <param name="addScriptTags">
          <span data-ttu-id="30f86-572">Um valor booliano que indica se deverão ser adicionadas marcas de script.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-572">A Boolean value indicating whether to add script tags.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30f86-573">Registra o script de inicialização no objeto <see cref="T:System.Web.UI.Page" /> usando um tipo, uma chave, um literal de script e um valor booliano indicando se devem ser adicionadas marcas de script.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-573">Registers the startup script with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, a script literal, and a Boolean value indicating whether to add script tags.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30f86-574">Um script de inicialização é identificado exclusivamente por sua chave e seu tipo.</span><span class="sxs-lookup"><span data-stu-id="30f86-574">A startup script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="30f86-575">Scripts com a mesma chave e tipo são considerados duplicatas.</span><span class="sxs-lookup"><span data-stu-id="30f86-575">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="30f86-576">Somente um script com um determinado tipo e o par de chaves pode ser registrado com a página.</span><span class="sxs-lookup"><span data-stu-id="30f86-576">Only one script with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="30f86-577">Tentativa de registrar um script que já está registrado não cria uma duplicata do script.</span><span class="sxs-lookup"><span data-stu-id="30f86-577">Attempting to register a script that is already registered does not create a duplicate of the script.</span></span>  
  
 <span data-ttu-id="30f86-578">Chamar o <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> método para determinar se um script de inicialização com um determinado par de chave e tipo já está registrado e evitar desnecessariamente tentando adicionar o script.</span><span class="sxs-lookup"><span data-stu-id="30f86-578">Call the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method to determine whether a startup script with a given key and type pair is already registered and avoid unnecessarily attempting to add the script.</span></span>  
  
 <span data-ttu-id="30f86-579">Esta sobrecarga do <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> método, você pode indicar se o script fornecido no `script` parâmetro é empacotado com um `<script>` bloco de elemento usando o `addScriptTags` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="30f86-579">In this overload of the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method, you can indicate whether the script provided in the `script` parameter is wrapped with a `<script>` element block by using the `addScriptTags` parameter.</span></span> <span data-ttu-id="30f86-580">Configuração `addScriptTags` para `true` indica que as marcas de script serão adicionadas automaticamente.</span><span class="sxs-lookup"><span data-stu-id="30f86-580">Setting `addScriptTags` to `true` indicates that script tags will be added automatically.</span></span>  
  
 <span data-ttu-id="30f86-581">O bloco de script adicionado pelo <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> método é executado quando a página termina de ser carregada, mas antes da página <xref:System.Web.UI.Control.OnLoad%2A> é gerado.</span><span class="sxs-lookup"><span data-stu-id="30f86-581">The script block added by the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method executes when the page finishes loading but before the page's <xref:System.Web.UI.Control.OnLoad%2A> event is raised.</span></span> <span data-ttu-id="30f86-582">Não há garantia de blocos de script para a saída na ordem em que eles são registrados.</span><span class="sxs-lookup"><span data-stu-id="30f86-582">The script blocks are not guaranteed to be output in the order they are registered.</span></span> <span data-ttu-id="30f86-583">Se a ordem dos blocos de script é importante, use um <xref:System.Text.StringBuilder> para reunir os scripts em uma única cadeia de caracteres do objeto e, em seguida, registrá-los em um bloco de script do cliente individual.</span><span class="sxs-lookup"><span data-stu-id="30f86-583">If the order of the script blocks is important, use a <xref:System.Text.StringBuilder> object to gather the scripts together in a single string, and then register them all in a single client script block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30f86-584">O exemplo de código a seguir demonstra o uso do <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> método.</span><span class="sxs-lookup"><span data-stu-id="30f86-584">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method.</span></span> <span data-ttu-id="30f86-585">Observe que o `addScriptTags` parâmetro está definido como `false` para o início e o script marcas de fechamento estão incluídos com o `script` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="30f86-585">Note that the `addScriptTags` parameter is set to `false` so the beginning and closing script tags are included with the `script` parameter.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="30f86-586">
            <paramref name="type" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-586">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)" />
        <altmember cref="F:System.Web.UI.HtmlTextWriterTag.Script" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ValidateEvent">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="30f86-587">Valida um evento de cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-587">Validates a client event.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ValidateEvent">
      <MemberSignature Language="C#" Value="public void ValidateEvent (string uniqueId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateEvent(string uniqueId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateEvent (uniqueId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateEvent(System::String ^ uniqueId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uniqueId">
          <span data-ttu-id="30f86-588">Uma ID exclusiva que representa o controle de cliente que gera o evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-588">A unique ID representing the client control generating the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30f86-589">Valida um evento de cliente que foi registrado para a validação de evento usando o método <see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-589">Validates a client event that was registered for event validation using the <see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)" /> method.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ValidateEvent">
      <MemberSignature Language="C#" Value="public void ValidateEvent (string uniqueId, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateEvent(string uniqueId, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateEvent (uniqueId As String, argument As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateEvent(System::String ^ uniqueId, System::String ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uniqueId">
          <span data-ttu-id="30f86-590">Uma ID exclusiva que representa o controle de cliente que gera o evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-590">A unique ID representing the client control generating the event.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="30f86-591">Os argumentos de evento passados com o evento de cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-591">The event arguments passed with the client event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30f86-592">Valida um evento de cliente que foi registrado para a validação de evento usando o método <see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-592">Validates a client event that was registered for event validation using the <see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="30f86-593">O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> método e o <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> método para registrar um retorno de chamada para validação e para validar que o retorno de chamada foi originado da página.</span><span class="sxs-lookup"><span data-stu-id="30f86-593">The following code example demonstrates using the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method and the <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> method to register a callback for validation and to validate that the callback originated from the page.</span></span> <span data-ttu-id="30f86-594">Para melhorar a validação mostrada aqui, você pode modificar a validação `argument` parâmetro para conter informações específicas do usuário, como uma identidade ou uma função</span><span class="sxs-lookup"><span data-stu-id="30f86-594">To improve on the validation shown here, you could modify the validation `argument` parameter to contain information specific to the user such as an identity or role</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/cs/EventValidationCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/vb/EventValidationVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="30f86-595">
            <paramref name="uniqueId" /> é <see langword="null" /> ou uma cadeia de caracteres vazia ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="30f86-595">
              <paramref name="uniqueId" /> is <see langword="null" /> or an empty string ("").</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>