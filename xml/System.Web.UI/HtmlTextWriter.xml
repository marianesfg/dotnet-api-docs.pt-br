<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HtmlTextWriter.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac512a77ea598c1fb3af16632e6711c2fe49de157af.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">12a77ea598c1fb3af16632e6711c2fe49de157af</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Writes markup characters and text to an ASP.NET server control output stream.</source>
          <target state="translated">Grava caracteres de marcação e texto em um fluxo de saída do controle de servidor ASP.NET.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>This class provides formatting capabilities that ASP.NET server controls use when rendering markup to clients.</source>
          <target state="translated">Essa classe fornece recursos de formatação que os controles de servidor ASP.NET usam ao renderizar a marcação para os clientes.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HtmlTextWriter">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class is used to render HTML 4.0 to desktop browsers.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe é usada para renderizar HTML 4.0 para navegadores de desktop.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HtmlTextWriter">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> is also the base class for all markup writers in the <ph id="ph2">&lt;xref:System.Web.UI&gt;</ph> namespace, including the <ph id="ph3">&lt;xref:System.Web.UI.ChtmlTextWriter&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.UI.Html32TextWriter&gt;</ph>, and <ph id="ph5">&lt;xref:System.Web.UI.XhtmlTextWriter&gt;</ph> classes.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> também é a classe base para todos os gravadores de marcação no <ph id="ph2">&lt;xref:System.Web.UI&gt;</ph> namespace, incluindo o <ph id="ph3">&lt;xref:System.Web.UI.ChtmlTextWriter&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.UI.Html32TextWriter&gt;</ph>, e <ph id="ph5">&lt;xref:System.Web.UI.XhtmlTextWriter&gt;</ph> classes.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HtmlTextWriter">
          <source>These classes are used to write the elements, attributes, and style and layout information for different types of markup.</source>
          <target state="translated">Essas classes são usadas para gravar os elementos, atributos e as informações de layout e estilo para tipos diferentes de marcação.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HtmlTextWriter">
          <source>In addition, these classes are used by the page and control adapter classes that are associated with each markup language.</source>
          <target state="translated">Além disso, essas classes são usadas, as classes de adaptador de página e o controle que estão associadas a cada linguagem de marcação.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HtmlTextWriter">
          <source>In most circumstances, ASP.NET automatically uses the appropriate writer for the requesting device.</source>
          <target state="translated">Na maioria das circunstâncias, o ASP.NET usa automaticamente o gravador apropriado para o dispositivo solicitante.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HtmlTextWriter">
          <source>However, if you create a custom text writer or if you want to specify a particular writer to render a page for a specific device, you must map the writer to the page in the <ph id="ph1">`controlAdapters`</ph> section of the application .browser file.</source>
          <target state="translated">No entanto, se você criar um gravador de texto personalizado ou se você deseja especificar um gravador específico para renderizar uma página para um dispositivo específico, você deve mapear o gravador para a página de <ph id="ph1">`controlAdapters`</ph> seção do arquivo. browser do aplicativo.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HtmlTextWriter">
          <source>The following code example shows how to override the <ph id="ph1">&lt;xref:System.Web.UI.Control.Render%2A&gt;</ph> method of a custom control that is derived from the <ph id="ph2">&lt;xref:System.Web.UI.Control&gt;</ph> class.</source>
          <target state="translated">O exemplo de código a seguir mostra como substituir o <ph id="ph1">&lt;xref:System.Web.UI.Control.Render%2A&gt;</ph> método de um controle personalizado que é derivado de <ph id="ph2">&lt;xref:System.Web.UI.Control&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HtmlTextWriter">
          <source>The code example illustrates how to use various <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> methods, properties, and fields.</source>
          <target state="translated">O exemplo de código demonstra como usar vários <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> métodos, propriedades e campos.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> instance that renders the markup content.</source>
          <target state="translated">A instância de <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> que renderiza o conteúdo de marcação.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> class that uses a default tab string.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> que usa uma cadeia de caracteres de tabulação padrão.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29&gt;</ph> constructor uses the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.DefaultTabString&gt;</ph> constant when indentation of a line is necessary.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%2A&gt;</ph> de sobrecarga do <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29&gt;</ph> construtor usa o <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.DefaultTabString&gt;</ph> constante quando recuo de uma linha é necessário.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter)">
          <source>It calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29&gt;</ph> overload to initialize the new instance.</source>
          <target state="translated">Ele chama o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29&gt;</ph> sobrecarga para inicializar a nova instância.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29&gt;</ph> constructor to create a custom <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> object named <ph id="ph3">`StyledLabelHtmlWriter.`</ph> When the <ph id="ph4">`MyPage`</ph> custom class, which is derived from the <ph id="ph5">&lt;xref:System.Web.UI.Page&gt;</ph> class, is requested by a client browser, it uses the <ph id="ph6">`StyledLabelHtmlWriter`</ph> class to render its content to the output stream.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29&gt;</ph> construtor para criar um personalizado <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> objeto chamado <ph id="ph3">`StyledLabelHtmlWriter.`</ph> quando o <ph id="ph4">`MyPage`</ph> classe personalizada, que é derivado do <ph id="ph5">&lt;xref:System.Web.UI.Page&gt;</ph> da classe, é solicitado por um cliente navegador, ele usa o <ph id="ph6">`StyledLabelHtmlWriter`</ph> classe para processar seu conteúdo para o fluxo de saída.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> that renders the markup content.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> que renderiza o conteúdo de marcação.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter,System.String)">
          <source>The string to use to render a line indentation.</source>
          <target state="translated">A cadeia de caracteres a ser usada para renderizar um recuo de linha.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> class with a specified tab string character.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> com um caractere de cadeia de caracteres de tabulação especificado.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29&gt;</ph> constructor uses <ph id="ph3">`tabString`</ph> when indentation of a line is necessary.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%2A&gt;</ph> de sobrecarga do <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29&gt;</ph> construtor usa <ph id="ph3">`tabString`</ph> quando o recuo de uma linha é necessário.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter,System.String)">
          <source>It calls the <ph id="ph1">&lt;xref:System.IO.TextWriter.%23ctor%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> base constructor to initialize the new instance.</source>
          <target state="translated">Ele chama o <ph id="ph1">&lt;xref:System.IO.TextWriter.%23ctor%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> construtor base para inicializar a nova instância.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter,System.String)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29&gt;</ph> constructor to create a custom <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> object named <ph id="ph3">`StyledLabelHtmlWriter.`</ph> When the <ph id="ph4">`MyPage`</ph> custom class, which is derived from the <ph id="ph5">&lt;xref:System.Web.UI.Page&gt;</ph> class, is requested by a client browser, it uses the <ph id="ph6">`StyledLabelHtmlWriter`</ph> class to render its content to the output stream.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29&gt;</ph> construtor para criar um personalizado <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> objeto chamado <ph id="ph3">`StyledLabelHtmlWriter.`</ph> quando o <ph id="ph4">`MyPage`</ph> classe personalizada, que é derivado do <ph id="ph5">&lt;xref:System.Web.UI.Page&gt;</ph> da classe, é solicitado por um cliente navegador, ele usa o <ph id="ph6">`StyledLabelHtmlWriter`</ph> classe para processar seu conteúdo para o fluxo de saída.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Adds the specified markup attribute and value to the opening tag of the element that the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object creates with a subsequent call to the <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated">Adiciona o atributo e valor de marcação especificados à marca de abertura do elemento que o objeto <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> cria com uma chamada posterior ao método <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>A string containing the name of the attribute to add.</source>
          <target state="translated">Uma cadeia de caracteres que contém o nome do atributo a ser adicionado.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>A string containing the value to assign to the attribute.</source>
          <target state="translated">Uma cadeia de caracteres que contém o valor a ser atribuído ao atributo.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>Adds the specified markup attribute and value to the opening tag of the element that the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object creates with a subsequent call to the <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated">Adiciona o atributo e valor de marcação especificados à marca de abertura do elemento que o objeto <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> cria com uma chamada posterior ao método <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29&gt;</ph> method if the attribute is not one of the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> values, or if the attribute is not known until run time.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> de sobrecarga do <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29&gt;</ph> método se o atributo não é uma da <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> valores, ou se o atributo não é conhecido até o tempo de execução.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>For an instance of any given markup element, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class maintains a list of attributes for that element.</source>
          <target state="translated">Para uma instância de qualquer elemento de marcação determinada, o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe mantém uma lista de atributos desse elemento.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method is called, any attributes added by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method are rendered to the opening tag of the element.</source>
          <target state="translated">Quando o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> método é chamado, todos os atributos adicionados pelo <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> método são renderizados para a marca de abertura do elemento.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>The list of attributes is then cleared from the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> object.</source>
          <target state="translated">A lista de atributos, em seguida, é limpo do <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>The coding pattern for rendering markup elements is as follows:</source>
          <target state="translated">O codificação padrão para renderizar elementos de marcação é o seguinte:</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method to add any attributes to the element.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> método para adicionar todos os atributos para o elemento.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method.</source>
          <target state="translated">Use o método <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>Use other methods as needed to render the content found between the element's opening and closing tags.</source>
          <target state="translated">Use outros métodos conforme necessário para renderizar o conteúdo entre o elemento marcas de abertura e fechamento.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method.</source>
          <target state="translated">Use o método <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>The following code example demonstrates how to call the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method before calling the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo de código a seguir demonstra como chamar o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> método antes de chamar o <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>The code calls two different overloads of <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> and two different overloads of <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> before it calls the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method to render a <ph id="ph4">`&lt;span&gt;`</ph> element to the output stream.</source>
          <target state="translated">O código chama duas sobrecargas diferentes de <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> e duas sobrecargas diferentes de <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> antes de chamar o <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> método para renderizar um <ph id="ph4">`&lt;span&gt;`</ph> elemento para o fluxo de saída.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29&gt;</ph> method is used to define the custom attribute named <ph id="ph2">`CustomAttribute`</ph> and the custom value named <ph id="ph3">`CustomAttributeValue`</ph> for the <ph id="ph4">`&lt;span&gt;`</ph> element that this code renders.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29&gt;</ph> método é usado para definir o atributo personalizado chamado <ph id="ph2">`CustomAttribute`</ph> e o valor personalizado chamado <ph id="ph3">`CustomAttributeValue`</ph> para o <ph id="ph4">`&lt;span&gt;`</ph> elemento esse código processa.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> that represents the markup attribute to add to the output stream.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> que representa o atributo de marcação a ser adicionado ao fluxo de saída.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>A string containing the value to assign to the attribute.</source>
          <target state="translated">Uma cadeia de caracteres que contém o valor a ser atribuído ao atributo.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>Adds the markup attribute and the attribute value to the opening tag of the element that the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object creates with a subsequent call to the <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated">Adiciona o atributo de marcação e o valor de atributo à marca de abertura do elemento que o objeto <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> cria com uma chamada posterior ao método <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29&gt;</ph> method to render a standard markup attribute.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> de sobrecarga do <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29&gt;</ph> método para processar um atributo de marcação padrão.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>For an instance of any given markup element, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class maintains a list of attributes for that element.</source>
          <target state="translated">Para uma instância de qualquer elemento de marcação determinada, o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe mantém uma lista de atributos desse elemento.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method is called, any attributes that are added by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method are rendered to the opening tag of the element.</source>
          <target state="translated">Quando o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> método é chamado, todos os atributos que são adicionados com o <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> método são renderizados para a marca de abertura do elemento.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>The list of attributes is then cleared from the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>.</source>
          <target state="translated">A lista de atributos, em seguida, é limpo do <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>The coding pattern for rendering markup elements is as follows:</source>
          <target state="translated">O codificação padrão para renderizar elementos de marcação é o seguinte:</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method to add any attributes to the element.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> método para adicionar todos os atributos para o elemento.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method.</source>
          <target state="translated">Use o método <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>Use other methods as needed to render the content found between the element's opening and closing tags.</source>
          <target state="translated">Use outros métodos conforme necessário para renderizar o conteúdo entre o elemento marcas de abertura e fechamento.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method.</source>
          <target state="translated">Use o método <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29&gt;</ph> method to add an <ph id="ph3">`Onclick`</ph> attribute to a markup element, and then set its value to the following ECMAScript code:</source>
          <target state="translated">O exemplo de código a seguir mostra como usar o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> de sobrecarga do <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29&gt;</ph> método para adicionar um <ph id="ph3">`Onclick`</ph> a um elemento de marcação de atributo e, em seguida, defina seu valor para o código a seguir ECMAScript:</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>A string containing the name of the attribute to add.</source>
          <target state="translated">Uma cadeia de caracteres que contém o nome do atributo a ser adicionado.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>A string containing the value to assign to the attribute.</source>
          <target state="translated">Uma cadeia de caracteres que contém o valor a ser atribuído ao atributo.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to encode the attribute and its value; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para codificar o atributo e seu valor; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>Adds the specified markup attribute and value to the opening tag of the element that the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object creates with a subsequent call to the <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method, with optional encoding.</source>
          <target state="translated">Adiciona o valor e o atributo de marcação especificados à marca de abertura do elemento que o objeto <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> cria com uma chamada subsequente ao método <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph>, com codificação opcional.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> method if the attribute is not one of the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> values, or if the attribute is not known until run time and encoding is needed.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> de sobrecarga do <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> método se o atributo não é uma da <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> valores, ou se o atributo não é conhecido até o tempo de execução e a codificação é necessária.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>For an instance of any given markup element, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class maintains a list of attributes for that element.</source>
          <target state="translated">Para uma instância de qualquer elemento de marcação determinada, o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe mantém uma lista de atributos desse elemento.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method is called, any attributes added by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method are rendered to the opening tag of the element.</source>
          <target state="translated">Quando o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> método é chamado, todos os atributos adicionados pelo <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> método são renderizados para a marca de abertura do elemento.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>The list of attributes is then cleared from the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> object.</source>
          <target state="translated">A lista de atributos, em seguida, é limpo do <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> method with <ph id="ph2">`fEncode`</ph> set to <ph id="ph3">`true`</ph>, if the attribute can possibly contain a quotation mark ("), a less than sign (&lt;), or an ampersand (&amp;).</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> método com <ph id="ph2">`fEncode`</ph> definida como <ph id="ph3">`true`</ph>, se o atributo possivelmente pode conter aspas ("), um sinal de menor que (&lt;), ou um e comercial (&amp;).</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>The method call will encode the attribute to meet the requirements of the requesting device.</source>
          <target state="translated">A chamada do método codificará o atributo para atender aos requisitos do dispositivo solicitante.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>You can set <ph id="ph1">`fEncode`</ph> to <ph id="ph2">`false`</ph>, if you know that none of these characters will be generated, or if you know that the attribute is already encoded.</source>
          <target state="translated">Você pode definir <ph id="ph1">`fEncode`</ph> para <ph id="ph2">`false`</ph>, se você souber que nenhum desses caracteres será gerado ou se você souber que o atributo já é codificado.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>The coding pattern for rendering markup elements is as follows:</source>
          <target state="translated">O codificação padrão para renderizar elementos de marcação é o seguinte:</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method to add any attributes to the element.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> método para adicionar todos os atributos para o elemento.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method.</source>
          <target state="translated">Use o método <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>Use other methods as needed to render the content found between the element's opening and closing tags.</source>
          <target state="translated">Use outros métodos conforme necessário para renderizar o conteúdo entre o elemento marcas de abertura e fechamento.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method.</source>
          <target state="translated">Use o método <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> method to ensure that a custom attribute, named <ph id="ph3">`myattribute`</ph>, and its value are not encoded for an <ph id="ph4">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">O exemplo de código a seguir mostra como usar o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> de sobrecarga do <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> método para garantir que um atributo personalizado, chamado <ph id="ph3">`myattribute`</ph>, e seu valor não são codificados para um <ph id="ph4">`&lt;img&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>A string containing the name of the attribute to add.</source>
          <target state="translated">Uma cadeia de caracteres que contém o nome do atributo a ser adicionado.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>A string containing the value to assign to the attribute.</source>
          <target state="translated">Uma cadeia de caracteres que contém o valor a ser atribuído ao atributo.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> that represents the attribute.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> que representa o atributo.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>Adds the specified markup attribute and value, along with an <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> enumeration value, to the opening tag of the element that the <ph id="ph2">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object creates with a subsequent call to the <ph id="ph3">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated">Adiciona o atributo e valor de marcação especificados, juntamente com um valor de enumeração <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph>, à marca de abertura do elemento que o objeto <ph id="ph2">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> cria com uma chamada subsequente ao método <ph id="ph3">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterAttribute%29&gt;</ph> method only when inheriting from the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> de sobrecarga do <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterAttribute%29&gt;</ph> método apenas ao herdar do <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>It enables you to create new <ph id="ph1">`name`</ph> and <ph id="ph2">`key`</ph> pairs for attributes.</source>
          <target state="translated">Ele permite que você crie novos <ph id="ph1">`name`</ph> e <ph id="ph2">`key`</ph> pares de atributos.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> that represents the markup attribute to add to the output stream.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> que representa o atributo de marcação a ser adicionado ao fluxo de saída.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>A string containing the value to assign to the attribute.</source>
          <target state="translated">Uma cadeia de caracteres que contém o valor a ser atribuído ao atributo.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to encode the attribute and its value; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para codificar o atributo e seu valor; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>Adds the markup attribute and the attribute value to the opening tag of the element that the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object creates with a subsequent call to the <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method, with optional encoding.</source>
          <target state="translated">Adiciona o atributo de marcação e o valor de atributo à marca de abertura do elemento criado pelo objeto <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> com uma chamada posterior ao método <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph>, com codificação opcional.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29&gt;</ph> method to render a standard markup attribute, with optional encoding.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> de sobrecarga do <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29&gt;</ph> método para processar um atributo de marcação padrão, com codificação opcional.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>For an instance of any given markup element, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class maintains a list of attributes for that element.</source>
          <target state="translated">Para uma instância de qualquer elemento de marcação determinada, o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe mantém uma lista de atributos desse elemento.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method is called, any attributes added by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> are rendered to the opening tag of the element.</source>
          <target state="translated">Quando o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> método é chamado, todos os atributos adicionados pelo <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> são renderizados para a marca de abertura do elemento.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>The list of attributes is then cleared from the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> object.</source>
          <target state="translated">A lista de atributos, em seguida, é limpo do <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29&gt;</ph> method with <ph id="ph2">`fEncode`</ph> set to <ph id="ph3">`true`</ph>, if the attribute can possibly contain a quotation mark ("), a less than sign (&lt;), or an ampersand (&amp;).</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29&gt;</ph> método com <ph id="ph2">`fEncode`</ph> definida como <ph id="ph3">`true`</ph>, se o atributo possivelmente pode conter aspas ("), um sinal de menor que (&lt;), ou um e comercial (&amp;).</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>The method call will encode the attribute to meet the requirements of the requesting device.</source>
          <target state="translated">A chamada do método codificará o atributo para atender aos requisitos do dispositivo solicitante.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>You can set <ph id="ph1">`fEncode`</ph> to <ph id="ph2">`false`</ph>, if you know that none of these characters will be generated, or if you know that the attribute is already encoded.</source>
          <target state="translated">Você pode definir <ph id="ph1">`fEncode`</ph> para <ph id="ph2">`false`</ph>, se você souber que nenhum desses caracteres será gerado ou se você souber que o atributo já é codificado.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>The coding pattern for rendering markup elements is as follows:</source>
          <target state="translated">O codificação padrão para renderizar elementos de marcação é o seguinte:</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method to add any attributes to the element.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> método para adicionar todos os atributos para o elemento.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method.</source>
          <target state="translated">Use o método <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>Use other methods as needed to render the content found between the element's opening and closing tags.</source>
          <target state="translated">Use outros métodos conforme necessário para renderizar o conteúdo entre o elemento marcas de abertura e fechamento.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method.</source>
          <target state="translated">Use o método <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29&gt;</ph> method to ensure that the string value that is assigned to an <ph id="ph2">`Alt`</ph> attribute for an <ph id="ph3">`&lt;img&gt;`</ph> element is encoded for the requesting device.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29&gt;</ph> método para garantir que o valor de cadeia de caracteres que é atribuído a um <ph id="ph2">`Alt`</ph> de atributo para um <ph id="ph3">`&lt;img&gt;`</ph> elemento é codificado para o dispositivo solicitante.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Adds a markup style attribute to the opening tag of the element that the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object creates with a subsequent call to the <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated">Adiciona um atributo de estilo de marcação à marca de abertura do elemento que o objeto <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> cria com uma chamada subsequente ao método <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>A string that contains the style attribute to add.</source>
          <target state="translated">Uma cadeia de caracteres que contém o atributo de estilo para adicionar.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>A string that contains the value to assign to the attribute.</source>
          <target state="translated">Uma cadeia de caracteres que contém o valor a ser atribuído ao atributo.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>Adds the specified markup style attribute and the attribute value to the opening markup tag created by a subsequent call to the <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated">Adiciona o atributo de estilo de marcação especificado e o valor do atributo para a marcação de abertura criada por uma chamada subsequente para o método <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29&gt;</ph> method when the style is not a member of the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> enumeration or is not known until run time.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> de sobrecarga do <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29&gt;</ph> método quando o estilo não é um membro do <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> enumeração ou não é conhecido até o tempo de execução.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class maintains a list of styles for the markup elements it renders.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe mantém uma lista de estilos para os elementos de marcação, ele será renderizado.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method is called, any styles that are added by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> method are rendered to the opening tag of the element.</source>
          <target state="translated">Quando o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> método é chamado, todos os estilos que são adicionados pelo <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> método são renderizados para a marca de abertura do elemento.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>The list of styles is then cleared.</source>
          <target state="translated">A lista de estilos, em seguida, está desmarcada.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>The coding pattern for rendering markup elements is as follows:</source>
          <target state="translated">O codificação padrão para renderizar elementos de marcação é o seguinte:</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> method to add any style attributes to the element.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> atributos de método para adicionar um estilo para o elemento.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method.</source>
          <target state="translated">Use o método <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>Use other methods as needed to render the content found between the element opening and closing tags.</source>
          <target state="translated">Use outros métodos conforme necessário para renderizar o conteúdo entre o elemento marcas de abertura e fechamento.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method.</source>
          <target state="translated">Use o método <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29&gt;</ph> method to render <ph id="ph3">`font-size`</ph> and <ph id="ph4">`color`</ph> style attributes on a <ph id="ph5">`&lt;p&gt;`</ph> element.</source>
          <target state="translated">O exemplo de código a seguir mostra como usar o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> de sobrecarga do <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29&gt;</ph> método renderizar <ph id="ph3">`font-size`</ph> e <ph id="ph4">`color`</ph> atributos de estilo em uma <ph id="ph5">`&lt;p&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>This code example uses the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class to render the contents of the control.</source>
          <target state="translated">Este exemplo de código usa a <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe para renderizar o conteúdo do controle.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> that represents the style attribute to add to the output stream.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> que representa o atributo de estilo a ser adicionado ao fluxo de saída.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>A string that contains the value to assign to the attribute.</source>
          <target state="translated">Uma cadeia de caracteres que contém o valor a ser atribuído ao atributo.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>Adds the markup style attribute associated with the specified <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> value and the attribute value to the opening markup tag created by a subsequent call to the <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated">Adiciona o atributo de estilo de marcação associado ao valor <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> especificado e o valor do atributo para a marcação de abertura criada por uma chamada subsequente para o método <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%29&gt;</ph> method when the style is a member of the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> enumeration and is known before run time.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> de sobrecarga do <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%29&gt;</ph> método quando o estilo for um membro do <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> enumeração e é conhecido antes do tempo de execução.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class maintains a list of styles for the markup elements it renders.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe mantém uma lista de estilos para os elementos de marcação, ele será renderizado.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method is called, any styles added by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> method are rendered to the opening tag of the element.</source>
          <target state="translated">Quando o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> método é chamado, todos os estilos adicionados pelo <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> método são renderizados para a marca de abertura do elemento.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>The list of styles is then cleared.</source>
          <target state="translated">A lista de estilos, em seguida, está desmarcada.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>The coding pattern for rendering markup elements is as follows:</source>
          <target state="translated">O codificação padrão para renderizar elementos de marcação é o seguinte:</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> method to add any style attributes to the element.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> atributos de método para adicionar um estilo para o elemento.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method.</source>
          <target state="translated">Use o método <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>Use other methods as needed to render the content found between the element opening and closing tags.</source>
          <target state="translated">Use outros métodos conforme necessário para renderizar o conteúdo entre o elemento marcas de abertura e fechamento.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method.</source>
          <target state="translated">Use o método <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>The following code example demonstrates how to use part of an override of the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method in a class derived from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar parte de uma substituição do <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> método em uma classe derivada do <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>The code checks whether a <ph id="ph1">`&lt;Label&gt;`</ph> element is being rendered.</source>
          <target state="translated">O código verifica se um <ph id="ph1">`&lt;Label&gt;`</ph> elemento está sendo processado.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>If so, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A&gt;</ph> method is called to check whether a <ph id="ph2">`Color`</ph> style attribute has been defined for the <ph id="ph3">`&lt;Label&gt;`</ph> element.</source>
          <target state="translated">Nesse caso, o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A&gt;</ph> método é chamado para verificar se um <ph id="ph2">`Color`</ph> atributo de estilo foi definido para o <ph id="ph3">`&lt;Label&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>If a <ph id="ph1">`Color`</ph> attribute has not been defined, the code calls this overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> method to add the <ph id="ph3">`Color`</ph> attribute to the style attribute, and then set its value to <ph id="ph4">`red`</ph>.</source>
          <target state="translated">Se um <ph id="ph1">`Color`</ph> atributo não foi definido, o código chama essa sobrecarga do <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> método para adicionar o <ph id="ph3">`Color`</ph> de atributos para o atributo de estilo e, em seguida, defina seu valor como <ph id="ph4">`red`</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>A string that contains the style attribute to be added.</source>
          <target state="translated">Uma cadeia de caracteres que contém o atributo de estilo a adicionar.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>A string that contains the value to assign to the attribute.</source>
          <target state="translated">Uma cadeia de caracteres que contém o valor a ser atribuído ao atributo.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> that represents the style attribute to add.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> que representa o atributo de estilo a adicionar.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>Adds the specified markup style attribute and the attribute value, along with an <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> enumeration value, to the opening markup tag created by a subsequent call to the <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated">Adiciona o atributo de estilo de marcação especificado e o valor do atributo, juntamente com um valor de enumeração <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph>, à marcação de abertura criada por uma chamada subsequente para o método <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterStyle%29&gt;</ph> method only when inheriting from the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> de sobrecarga do <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterStyle%29&gt;</ph> método apenas ao herdar do <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>It enables you to create new <ph id="ph1">`name`</ph> and <ph id="ph2">`value`</ph> pairs for <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> attributes.</source>
          <target state="translated">Ele permite que você crie novos <ph id="ph1">`name`</ph> e <ph id="ph2">`value`</ph> pares para <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> atributos.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.BeginRender">
          <source>Notifies an <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object, or an object of a derived class, that a control is about to be rendered.</source>
          <target state="translated">Notifica um objeto <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> ou um objeto de uma classe derivada de que um controle está prestes a ser renderizado.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.BeginRender">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class implementation of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.BeginRender%2A&gt;</ph> method has no functionality.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> implementação da classe de <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.BeginRender%2A&gt;</ph> método não tem nenhuma funcionalidade.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.BeginRender">
          <source>You must override the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.BeginRender%2A&gt;</ph> method in a class derived from <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> to provide your own rendering functionality.</source>
          <target state="translated">Você deve substituir o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.BeginRender%2A&gt;</ph> método em uma classe derivada de <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> para fornecer sua própria funcionalidade de renderização.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.BeginRender">
          <source>For example, in a markup language that might require <ph id="ph1">`&lt;p&gt;`</ph> elements to be rendered immediately ahead of a control, but where the need for the <ph id="ph2">`&lt;p&gt;`</ph> element is determined earlier, you could use the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.BeginRender%2A&gt;</ph> override.</source>
          <target state="translated">Por exemplo, em uma linguagem de marcação que pode exigir <ph id="ph1">`&lt;p&gt;`</ph> elementos a serem renderizados imediatamente à frente de um controle, mas que a necessidade do <ph id="ph2">`&lt;p&gt;`</ph> elemento é determinado anteriormente, você pode usar o <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.BeginRender%2A&gt;</ph> substituir.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Close">
          <source>Closes the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object and releases any system resources associated with it.</source>
          <target state="translated">Fecha o objeto <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> e libera os recursos do sistema associados a ele.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Close">
          <source>This implementation of the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Close%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Close%2A?displayProperty=nameWithType&gt;</ph> base method.</source>
          <target state="translated">Essa implementação do <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Close%2A&gt;</ph> chamadas de método de <ph id="ph2">&lt;xref:System.IO.TextWriter.Close%2A?displayProperty=nameWithType&gt;</ph> método de base.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Close">
          <source>Following a call to the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Close%2A&gt;</ph> method, any operations on the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> object might throw exceptions because all its resources have been released.</source>
          <target state="translated">Após uma chamada para o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Close%2A&gt;</ph> método, as operações na <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> objeto pode lançar exceções porque todos os seus recursos foram liberados.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.DefaultTabString">
          <source>Represents a single tab character.</source>
          <target state="translated">Representa um único caractere de tabulação.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.DefaultTabString">
          <source>The single tab is represented by the ASCII 9 character.</source>
          <target state="translated">Na guia único é representada pelo caractere ASCII 9.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.DefaultTabString">
          <source>The following code example demonstrates how to create a constructor that takes a <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> object as a parameter and passes the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.DefaultTabString&gt;</ph> field as a parameter argument to a second version of the constructor.</source>
          <target state="translated">O exemplo de código a seguir demonstra como criar um construtor que aceita um <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> objeto como um parâmetro e passa o <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.DefaultTabString&gt;</ph> campo como um argumento de parâmetro para uma segunda versão do construtor.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.DefaultTabString">
          <source>When this constructor is called from code, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.DefaultTabString&gt;</ph> field defines the indentation policy for the instance of the markup writer that is used by a page or an adapter.</source>
          <target state="translated">Quando este construtor é chamado de código, o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.DefaultTabString&gt;</ph> campo define a política de recuo para a instância do gravador de marcação que é usada por uma página ou um adaptador.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.DoubleQuoteChar">
          <source>Represents the quotation mark (") character.</source>
          <target state="translated">Representa o caractere de aspas (").</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.DoubleQuoteChar">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar&gt;</ph> field is used by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> method to close an attribute.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar&gt;</ph> campo é usado pelo <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> método para fechar um atributo.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.DoubleQuoteChar">
          <source>The following code example shows how to render a <ph id="ph1">`border`</ph> attribute for a <ph id="ph2">`&lt;table&gt;`</ph> element.</source>
          <target state="translated">O exemplo de código a seguir mostra como renderizar um <ph id="ph1">`border`</ph> de atributo para um <ph id="ph2">`&lt;table&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.DoubleQuoteChar">
          <source>The code calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render the attribute and its value and uses the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString&gt;</ph> and <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar&gt;</ph> fields.</source>
          <target state="translated">O código chama o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> método para processar o atributo e seu valor e usa o <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> método para renderizar o <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString&gt;</ph> e <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar&gt;</ph> campos.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.DoubleQuoteChar">
          <source>This code example renders the following markup:</source>
          <target state="translated">Este exemplo de código renderiza a marcação a seguir:</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Encodes the value of the specified markup attribute based on the requirements of the <ph id="ph1">&lt;see cref="T:System.Web.HttpRequest" /&gt;</ph> object of the current context.</source>
          <target state="translated">Codifica o valor de atributo de marcação especificado com base nos requisitos do objeto <ph id="ph1">&lt;see cref="T:System.Web.HttpRequest" /&gt;</ph> do contexto atual.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)">
          <source>A string containing the attribute value to encode.</source>
          <target state="translated">Uma cadeia de caracteres que contém o valor de atributo a codificar.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to encode the attribute value; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para codificar o valor de atributo; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)">
          <source>Encodes the value of the specified markup attribute based on the requirements of the <ph id="ph1">&lt;see cref="T:System.Web.HttpRequest" /&gt;</ph> object of the current context.</source>
          <target state="translated">Codifica o valor de atributo de marcação especificado com base nos requisitos do objeto <ph id="ph1">&lt;see cref="T:System.Web.HttpRequest" /&gt;</ph> do contexto atual.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)">
          <source>A string containing the encoded attribute value, <ph id="ph1">&lt;see langword="null" /&gt;</ph> if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is empty, or the unencoded attribute value if <ph id="ph3">&lt;paramref name="fEncode" /&gt;</ph> is <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Uma cadeia de caracteres que contém o valor do atributo codificado, <ph id="ph1">&lt;see langword="null" /&gt;</ph> se <ph id="ph2">&lt;paramref name="value" /&gt;</ph> está vazio, ou então o valor do atributo não codificado se <ph id="ph3">&lt;paramref name="fEncode" /&gt;</ph> é <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29&gt;</ph> method if the attribute is not an <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> enumeration value or is not known until run time.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A&gt;</ph> de sobrecarga do <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29&gt;</ph> método se o atributo não é um <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> valor de enumeração ou não é conhecido até o tempo de execução.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A&gt;</ph> method removes double quotation marks ("), ampersands (&amp;), and less than signs (&lt;) so that invalid tags are not generated, regardless of the input.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A&gt;</ph> método Remove aspas duplas ("), e comercial (&amp;) e menor que (&lt;) para marcas que inválidas de sinais não são gerados, independentemente da entrada.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)">
          <source>The actual encoding is performed by the <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlAttributeEncode%2A&gt;</ph> method.</source>
          <target state="translated">A codificação real é executada pelo <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlAttributeEncode%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)">
          <source>The following code example shows how to call the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A&gt;</ph> method as a parameter in an <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method call, and then encodes a <ph id="ph3">`color:blue`</ph> style attribute value.</source>
          <target state="translated">O exemplo de código a seguir mostra como chamar o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A&gt;</ph> método como um parâmetro em uma <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> chamada de método e, em seguida, codifica um <ph id="ph3">`color:blue`</ph> valor do atributo de estilo.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> representing the markup attribute.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> que representa o atributo de marcação.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>A string containing the attribute value to encode.</source>
          <target state="translated">Uma cadeia de caracteres que contém o valor de atributo a codificar.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>Encodes the value of the specified markup attribute based on the requirements of the <ph id="ph1">&lt;see cref="T:System.Web.HttpRequest" /&gt;</ph> object of the current context.</source>
          <target state="translated">Codifica o valor de atributo de marcação especificado com base nos requisitos do objeto <ph id="ph1">&lt;see cref="T:System.Web.HttpRequest" /&gt;</ph> do contexto atual.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>A string containing the encoded attribute value.</source>
          <target state="translated">Uma cadeia de caracteres que contém o valor de atributo codificado.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A&gt;</ph> method removes double quotation marks ("), ampersands (&amp;), and less than signs (&lt;) so that invalid tags are not generated, regardless of the input.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A&gt;</ph> método Remove aspas duplas ("), e comercial (&amp;) e menor que (&lt;) para marcas que inválidas de sinais não são gerados, independentemente da entrada.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>The actual encoding is performed by the <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlAttributeEncode%2A&gt;</ph> method.</source>
          <target state="translated">A codificação real é executada pelo <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlAttributeEncode%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EncodeUrl(System.String)">
          <source>A string containing the URL to encode.</source>
          <target state="translated">Uma cadeia de caracteres contendo a URL a codificar.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EncodeUrl(System.String)">
          <source>Performs minimal URL encoding by converting spaces in the specified URL to the string "%20".</source>
          <target state="translated">Executa a codificação de URL mínima convertendo espaços existentes na URL especificada para a cadeia de caracteres "%20".</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EncodeUrl(System.String)">
          <source>A string containing the encoded URL.</source>
          <target state="translated">Uma cadeia de caracteres que contém a URL codificada.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EncodeUrl(System.String)">
          <source>URL encoding of a character consists of a percent symbol (%), followed by the two-digit hexadecimal representation (case-insensitive) of the ISO-Latin code point for the character.</source>
          <target state="translated">Codificação de URL de um caractere consiste em um símbolo de porcentagem (%), seguido de dois dígitos representação hexadecimal (diferencia maiusculas de minúsculas) do ponto de código ISO-latino para o caractere.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EncodeUrl(System.String)">
          <source>The hexadecimal representation of a space is 20.</source>
          <target state="translated">A representação hexadecimal de um espaço é 20.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EncodeUrl(System.String)">
          <source>The following code example demonstrates how to call the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EncodeUrl%2A&gt;</ph> method to convert any spaces in the URL that is passed as a parameter in an <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method call.</source>
          <target state="translated">O exemplo de código a seguir demonstra como chamar o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EncodeUrl%2A&gt;</ph> método para converter espaços na URL que é passado como um parâmetro em um <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> chamada de método.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="P:System.Web.UI.HtmlTextWriter.Encoding">
          <source>Gets the encoding that the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object uses to write content to the page.</source>
          <target state="translated">Obtém a codificação que o objeto <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> usa para gravar conteúdo na página.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.Encoding">
          <source>The <ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph> in which the markup is written to the page.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph> segundo o qual a marcação é gravada na página.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.Encoding">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Encoding%2A&gt;</ph> property obtains its value from the base <ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph> object.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Encoding%2A&gt;</ph> propriedade obtém seu valor de base de <ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.Encoding">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Encoding%2A&gt;</ph> property to write the type of encoding that a custom control uses to render text to the page that contains it.</source>
          <target state="translated">O exemplo de código a seguir mostra como usar o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Encoding%2A&gt;</ph> propriedade para gravar o tipo de codificação que um controle personalizado usa para processar texto para a página que o contém.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EndRender">
          <source>Notifies an <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object, or an object of a derived class, that a control has finished rendering.</source>
          <target state="translated">Notifica um objeto <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> ou um objeto de uma classe derivada de que a renderização de um controle foi concluída.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EndRender">
          <source>You can use this method to close any markup elements opened in the <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.BeginRender" /&gt;</ph> method.</source>
          <target state="translated">Você pode usar esse método para fechar os elementos de marcação abertos no método <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.BeginRender" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EndRender">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class implementation of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EndRender%2A&gt;</ph> method has no functionality.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> implementação da classe de <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EndRender%2A&gt;</ph> método não tem nenhuma funcionalidade.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EndRender">
          <source>You must override <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EndRender%2A&gt;</ph> in a class derived from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class to provide your own rendering functionality.</source>
          <target state="translated">Você deve substituir <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EndRender%2A&gt;</ph> em uma classe derivada do <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe para fornecer sua própria funcionalidade de renderização.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EndRender">
          <source>You can use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EndRender%2A&gt;</ph> method to close any markup elements opened in the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.BeginRender%2A&gt;</ph> method.</source>
          <target state="translated">Você pode usar o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EndRender%2A&gt;</ph> método para fechar os elementos de marcação aberto no <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.BeginRender%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.EndTagLeftChars">
          <source>Represents the left angle bracket and slash mark (<ph id="ph1">&amp;lt;</ph>/) of the closing tag of a markup element.</source>
          <target state="translated">Representa a marca de colchete angular esquerdo e barra (<ph id="ph1">&amp;lt;</ph>/) da marca de fechamento de um elemento de marcação.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.EndTagLeftChars">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars&gt;</ph> field is used by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method to construct markup element end tags.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars&gt;</ph> campo é usado pelo <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> método para construir marcas de fim do elemento de marcação.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.EndTagLeftChars">
          <source>The following code example shows how to render the closing tag of a <ph id="ph1">`&lt;table&gt;`</ph> markup element by using the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars&gt;</ph> and the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.TagRightChar&gt;</ph> fields as parameter values in calls to the <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo de código a seguir mostra como renderizar a marcação de fechamento de um <ph id="ph1">`&lt;table&gt;`</ph> elemento de marcação usando o <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars&gt;</ph> e <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.TagRightChar&gt;</ph> campos como valores de parâmetro em chamadas para o <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.EndTagLeftChars">
          <source>This code example renders the following markup:</source>
          <target state="translated">Este exemplo de código renderiza a marcação a seguir:</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Writes the opening tag of a markup element that contains attributes that implement the layout and character formatting of the specified style.</source>
          <target state="translated">Grava a marca de abertura de um elemento de marcação que contém atributos que implementam o layout e formatação de caracteres do estilo especificado.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.Style" /&gt;</ph> that specifies the layout and formatting to begin applying to the block of markup.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.Style" /&gt;</ph> que especifica o layout e formatação para começar a aplicar ao bloco de marcação.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)">
          <source>Writes the opening tag of a <ph id="ph1">&lt;see langword="&amp;lt;span&amp;gt;" /&gt;</ph> element that contains attributes that implement the layout and character formatting of the specified style.</source>
          <target state="translated">Grava a marca de abertura de um elemento <ph id="ph1">&lt;see langword="&amp;lt;span&amp;gt;" /&gt;</ph> que contém atributos que implementam o layout e formatação de caracteres do estilo especificado.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method to apply styles, such as background color or border width, to a block of markup.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> método para aplicar estilos, como largura de borda ou cor de plano de fundo, para um bloco de marcação.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> methods allow a device adapter or control to create markup that uses the character formatting of the specified style.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> métodos permitem que um adaptador de dispositivo ou o controle para criar marcação que usa a formatação de caractere do estilo especificado.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)">
          <source>Use the same value for <ph id="ph1">`style`</ph> in the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method that you use in the corresponding <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> method.</source>
          <target state="translated">Use o mesmo valor para <ph id="ph1">`style`</ph> no <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> método que você usa no correspondente <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29&gt;</ph> method renders the opening tag of a <ph id="ph3">`&lt;span&gt;`</ph> element.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> de sobrecarga do <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29&gt;</ph> método renderiza a marca de abertura de um <ph id="ph3">`&lt;span&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)">
          <source>This method then adds the necessary attributes and style attributes to the opening tag of the <ph id="ph1">`&lt;span&gt;`</ph> element to display the settings specified by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Style&gt;</ph> object.</source>
          <target state="translated">Este método adiciona os atributos necessários e os atributos de estilo para a marca de abertura do <ph id="ph1">`&lt;span&gt;`</ph> elemento para exibir as configurações especificadas pelo <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Style&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)">
          <source>If you want to render a different markup element to contain the attributes and style attributes, use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29&gt;</ph> overload.</source>
          <target state="translated">Se você deseja renderizar um elemento de marcação diferente para conter os atributos e os atributos de estilo, use o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29&gt;</ph> de sobrecarga.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)">
          <source>The following code example demonstrates how to use a custom class named <ph id="ph1">`TextSample`</ph>, derived from the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebControl&gt;</ph> class, that uses the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method to apply a <ph id="ph4">&lt;xref:System.Web.UI.WebControls.Style.ForeColor%2A&gt;</ph> style to a string of text.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar uma classe personalizada chamada <ph id="ph1">`TextSample`</ph>, derivada do <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebControl&gt;</ph> classe, que usa o <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> método para aplicar um <ph id="ph4">&lt;xref:System.Web.UI.WebControls.Style.ForeColor%2A&gt;</ph> estilo em uma cadeia de caracteres de texto.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method renders the HTML <ph id="ph2">`&lt;span style="color:Navy;"&gt;`</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> método renderiza HTML <ph id="ph2">`&lt;span style="color:Navy;"&gt;`</ph>.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> method call closes the <ph id="ph2">`&lt;span&gt;`</ph> element after the text has been rendered.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> chamada de método fecha o <ph id="ph2">`&lt;span&gt;`</ph> elemento depois que o texto é processado.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.Style" /&gt;</ph> that specifies the layout and formatting to begin applying to the block of markup.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.Style" /&gt;</ph> que especifica o layout e formatação para começar a aplicar ao bloco de marcação.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> that specifies the opening tag of the markup element that will contain the style object specified in <bpt id="p1">&lt;c&gt;</bpt>style<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> que especifica a marca de abertura do elemento de marcação que contém o objeto de estilo especificado em <bpt id="p1">&lt;c&gt;</bpt>style<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>Writes the opening tag of a markup element that contains attributes that implement the layout and character formatting of the specified style.</source>
          <target state="translated">Grava a marca de abertura de um elemento de marcação que contém atributos que implementam o layout e formatação de caracteres do estilo especificado.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method to apply styles, such as background color or border width, to a block of markup.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> método para aplicar estilos, como largura de borda ou cor de plano de fundo, para um bloco de marcação.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> methods allow a device adapter or control to create markup that uses the character formatting of the specified style.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> métodos permitem que um adaptador de dispositivo ou o controle para criar marcação que usa a formatação de caractere do estilo especificado.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>Use the same value for <ph id="ph1">`style`</ph> in the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method that you use in the corresponding <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> method.</source>
          <target state="translated">Use o mesmo valor para <ph id="ph1">`style`</ph> no <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> método que você usa no correspondente <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29&gt;</ph> method renders the opening tag of the element specified by the <ph id="ph3">`tag`</ph> parameter.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> de sobrecarga do <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29&gt;</ph> método renderiza a marca de abertura do elemento especificado pelo <ph id="ph3">`tag`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29&gt;</ph> method then adds the necessary attributes and style attributes to the opening tag of the element to display the settings that are specified by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Style&gt;</ph> object.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29&gt;</ph> método, em seguida, adiciona os atributos necessários e os atributos de estilo para a marca de abertura do elemento para exibir as configurações especificadas pelo <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Style&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29&gt;</ph> overload to render the opening tag of a <ph id="ph2">`&lt;span&gt;`</ph> element.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29&gt;</ph> sobrecarga para renderizar a marca de abertura de um <ph id="ph2">`&lt;span&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>The following code example demonstrates how to use a custom class named <ph id="ph1">`TextSample`</ph>, derived from the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebControl&gt;</ph> class, that uses the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method to apply a <ph id="ph4">&lt;xref:System.Web.UI.WebControls.Style.ForeColor%2A&gt;</ph> style to a string of text.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar uma classe personalizada chamada <ph id="ph1">`TextSample`</ph>, derivada do <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebControl&gt;</ph> classe, que usa o <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> método para aplicar um <ph id="ph4">&lt;xref:System.Web.UI.WebControls.Style.ForeColor%2A&gt;</ph> estilo em uma cadeia de caracteres de texto.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method renders the HTML<ph id="ph2">`&lt;span style="color:Navy;"&gt;`</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> método renderiza HTML<ph id="ph2">`&lt;span style="color:Navy;"&gt;`</ph>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> method call closes the <ph id="ph2">`&lt;span&gt;`</ph> element after the text has been rendered.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> chamada de método fecha o <ph id="ph2">`&lt;span&gt;`</ph> elemento depois que o texto é processado.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.EqualsChar">
          <source>Represents the equal sign (<ph id="ph1">&lt;see langword="=" /&gt;</ph>).</source>
          <target state="translated">Representa o sinal de igual (<ph id="ph1">&lt;see langword="=" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.EqualsChar">
          <source>You might want to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString&gt;</ph> field instead of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EqualsChar&gt;</ph> field when constructing the opening delimiter of an attribute value.</source>
          <target state="translated">Talvez você queira usar o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString&gt;</ph> campo em vez do <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EqualsChar&gt;</ph> campo ao construir o delimitador de abertura de um valor de atributo.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.EqualsChar">
          <source>The following code example shows how to render the <ph id="ph1">`src`</ph> attribute and part of its value for an <ph id="ph2">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">O exemplo de código a seguir mostra como renderizar o <ph id="ph1">`src`</ph> atributo e é parte de seu valor para um <ph id="ph2">`&lt;img&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.EqualsChar">
          <source>The code uses the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EqualsChar&gt;</ph> field in a <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method call to render the equal sign (=) between the <ph id="ph3">`src`</ph> attribute and its value.</source>
          <target state="translated">O código usa o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EqualsChar&gt;</ph> campo um <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> chamada de método para processar o sinal de igual (=) entre o <ph id="ph3">`src`</ph> atributo e seu valor.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.EqualsChar">
          <source>This code example renders the following markup:</source>
          <target state="translated">Este exemplo de código renderiza a marcação a seguir:</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString">
          <source>Represents an equal sign (=) and a double quotation mark (") together in a string (=").</source>
          <target state="translated">Representa um sinal de igual (=) e aspas duplas (") juntos em uma cadeia de caracteres (=").</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString&gt;</ph> field is used by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> methods to construct the opening delimiter of attribute values.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString&gt;</ph> campo é usado pelo <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> e <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> métodos para construir o delimitador de abertura de valores de atributo.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString">
          <source>The following code example shows how to render a <ph id="ph1">`border`</ph> attribute for a <ph id="ph2">`&lt;table&gt;`</ph> element.</source>
          <target state="translated">O exemplo de código a seguir mostra como renderizar um <ph id="ph1">`border`</ph> de atributo para um <ph id="ph2">`&lt;table&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString">
          <source>The code calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render the attribute and its value and uses the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString&gt;</ph> and <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar&gt;</ph> fields.</source>
          <target state="translated">O código chama o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> método para processar o atributo e seu valor e usa o <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> método para renderizar o <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString&gt;</ph> e <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar&gt;</ph> campos.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString">
          <source>This code example renders the following markup:</source>
          <target state="translated">Este exemplo de código renderiza a marcação a seguir:</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Writes the closing tag of a markup element to end the specified layout and character formatting.</source>
          <target state="translated">Grava a marca de fechamento de um elemento de marcação para encerrar o layout e a formatação de caracteres especificados.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.Style" /&gt;</ph> that specifies the layout and formatting to close.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.Style" /&gt;</ph> que especifica o layout e a formatação para fechar.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)">
          <source>Writes the closing tag of a <ph id="ph1">&lt;see langword="&amp;lt;span&amp;gt;" /&gt;</ph> element to end the specified layout and character formatting.</source>
          <target state="translated">Grava a marca de fechamento de um elemento <ph id="ph1">&lt;see langword="&amp;lt;span&amp;gt;" /&gt;</ph> para encerrar o layout e a formatação de caracteres especificados.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%29&gt;</ph> method renders the closing tag of a <ph id="ph3">`&lt;span&gt;`</ph> element after the closing tag of the control, closing the element opened by the corresponding <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> call.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> de sobrecarga do <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%29&gt;</ph> método renderiza a marca de fechamento de um <ph id="ph3">`&lt;span&gt;`</ph> elemento após a marca de fechamento do controle, o elemento de fechamento aberto por correspondente <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> chamar.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> methods allow a device adapter or control to create markup that begins and ends a block by using the character formatting of the specified style.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> métodos permitem que um adaptador de dispositivo ou o controle para criar marcação que começa e termina um bloco usando a formatação de caractere do estilo especificado.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)">
          <source>Use the same value for <ph id="ph1">`style`</ph> in the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method that you use in the corresponding <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> method.</source>
          <target state="translated">Use o mesmo valor para <ph id="ph1">`style`</ph> no <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> método que você usa no correspondente <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)">
          <source>The following code example demonstrates how to use a custom class named <ph id="ph1">`TextSample`</ph>, derived from the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebControl&gt;</ph> class, that uses the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method to apply a <ph id="ph4">&lt;xref:System.Web.UI.WebControls.Style.ForeColor%2A&gt;</ph> style to a string of text.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar uma classe personalizada chamada <ph id="ph1">`TextSample`</ph>, derivada do <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebControl&gt;</ph> classe, que usa o <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> método para aplicar um <ph id="ph4">&lt;xref:System.Web.UI.WebControls.Style.ForeColor%2A&gt;</ph> estilo em uma cadeia de caracteres de texto.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method renders the HTML <ph id="ph2">`&lt;span style="color:Navy;"&gt;`</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> método renderiza HTML <ph id="ph2">`&lt;span style="color:Navy;"&gt;`</ph>.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> method call closes the <ph id="ph2">`&lt;span&gt;`</ph> element after the text has been rendered.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> chamada de método fecha o <ph id="ph2">`&lt;span&gt;`</ph> elemento depois que o texto é processado.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.Style" /&gt;</ph> that specifies the layout and formatting to stop applying to the output text.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.Style" /&gt;</ph> que especifica o layout e a formatação cuja aplicação ao texto de saída deve ser interrompida.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> that specifies the closing tag of the markup element that contained the attributes that applied the specified style.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> que especifica a marca de fechamento do elemento de marcação que continha os atributos que aplicaram o estilo especificado.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>This must match the key passed in the corresponding <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.EnterStyle" /&gt;</ph> call.</source>
          <target state="translated">Isso deve corresponder à chave passada na chamada <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.EnterStyle" /&gt;</ph> correspondente.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>Writes the closing tag of the specified markup element to end the specified layout and character formatting.</source>
          <target state="translated">Grava a marca de fechamento do elemento de marcação especificado para encerrar o layout e a formatação de caracteres especificados.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29&gt;</ph> method renders the closing tag of the element that is specified by <ph id="ph3">`tag`</ph> after the closing tag of the control, closing the element that was opened by the corresponding <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29&gt;</ph> method call.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> de sobrecarga do <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29&gt;</ph> método renderiza a marca de fechamento do elemento que é especificado pelo <ph id="ph3">`tag`</ph> após a marca de fechamento do controle, fechando o elemento que tenha sido aberto por correspondente <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29&gt;</ph> chamada de método.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> methods allow a device adapter or control to create markup that begins and ends a block by using the character formatting of the specified style.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> métodos permitem que um adaptador de dispositivo ou o controle para criar marcação que começa e termina um bloco usando a formatação de caractere do estilo especificado.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>Use the same value for <ph id="ph1">`style`</ph> in the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method that you use in the corresponding <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> method.</source>
          <target state="translated">Use o mesmo valor para <ph id="ph1">`style`</ph> no <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> método que você usa no correspondente <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>The following code example demonstrates how to use a custom class named <ph id="ph1">`TextSample`</ph>, derived from the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebControl&gt;</ph> class, that uses the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method to apply a <ph id="ph4">&lt;xref:System.Web.UI.WebControls.Style.ForeColor%2A&gt;</ph> style to a string of text.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar uma classe personalizada chamada <ph id="ph1">`TextSample`</ph>, derivada do <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebControl&gt;</ph> classe, que usa o <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> método para aplicar um <ph id="ph4">&lt;xref:System.Web.UI.WebControls.Style.ForeColor%2A&gt;</ph> estilo em uma cadeia de caracteres de texto.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method renders the HTML <ph id="ph2">`&lt;span style="color:Navy;"&gt;`</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> método renderiza HTML <ph id="ph2">`&lt;span style="color:Navy;"&gt;`</ph>.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> method call closes the <ph id="ph2">`&lt;span&gt;`</ph> element after the text has been rendered.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> chamada de método fecha o <ph id="ph2">`&lt;span&gt;`</ph> elemento depois que o texto é processado.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.FilterAttributes">
          <source>Removes all the markup and style attributes on all properties of the page or Web server control.</source>
          <target state="translated">Remove todos os atributos de estilo e marcação em todas as propriedades da página ou controle de servidor Web.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.FilterAttributes">
          <source>Before attributes are rendered on a markup element, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> method is called.</source>
          <target state="translated">Antes de atributos são renderizados em um elemento de marcação, o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> método é chamado.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.FilterAttributes">
          <source>In turn, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A&gt;</ph> methods for each attribute and style to render.</source>
          <target state="translated">Por sua vez, o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> chamadas de método de <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A&gt;</ph> e <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A&gt;</ph> métodos para cada atributo e um estilo para processar.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.FilterAttributes">
          <source>The following code example shows how to use a custom class, derived from the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class, that overrides the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo de código a seguir mostra como usar uma classe personalizada, derivada de <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe, que substitui o <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.FilterAttributes">
          <source>When called, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> override checks whether the text writer renders any <ph id="ph2">`&lt;label&gt;`</ph> or <ph id="ph3">`&lt;a&gt;`</ph> elements:</source>
          <target state="translated">Quando chamado, o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> substituição verifica se o gravador de texto processa qualquer <ph id="ph2">`&lt;label&gt;`</ph> ou <ph id="ph3">`&lt;a&gt;`</ph> elementos:</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.FilterAttributes">
          <source>If a <ph id="ph1">`&lt;label&gt;`</ph> element is being rendered, the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> method checks whether a <ph id="ph3">`style`</ph> attribute is rendered on the element and, if not, creates a <ph id="ph4">`style`</ph> attribute and sets it to <ph id="ph5">`color: blue`</ph>.</source>
          <target state="translated">Se um <ph id="ph1">`&lt;label&gt;`</ph> elemento está sendo processado, o <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> método verifica se um <ph id="ph3">`style`</ph> atributo é renderizado no elemento e, se não, cria um <ph id="ph4">`style`</ph> de atributo e o configura para <ph id="ph5">`color: blue`</ph>.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.FilterAttributes">
          <source>If an <ph id="ph1">`&lt;a&gt;`</ph> element is being rendered, the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> method determines whether an <ph id="ph3">`href`</ph> attribute is included and, if not, adds an <ph id="ph4">`href`</ph> to the URL <ph id="ph5">http://www.cohowinery.com</ph>.</source>
          <target state="translated">Se um <ph id="ph1">`&lt;a&gt;`</ph> elemento está sendo processado, o <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> método determina se um <ph id="ph3">`href`</ph> atributo está incluído e, se não, adiciona um <ph id="ph4">`href`</ph> para a URL <ph id="ph5">http://www.cohowinery.com</ph>.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Flush">
          <source>Clears all buffers for the current <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object and causes any buffered data to be written to the output stream.</source>
          <target state="translated">Limpa todos os buffers para o objeto <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> atual e faz com que todos os dados armazenados em buffer sejam gravados no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Flush">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class implementation of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Flush%2A&gt;</ph> method just calls the <ph id="ph3">&lt;xref:System.IO.TextWriter.Flush%2A&gt;</ph> base method.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> implementação da classe a <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Flush%2A&gt;</ph> método apenas chama o <ph id="ph3">&lt;xref:System.IO.TextWriter.Flush%2A&gt;</ph> método de base.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)">
          <source>A string that contains the attribute for which to obtain the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph>.</source>
          <target state="translated">Uma cadeia de caracteres que contém o atributo para o qual obter o <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)">
          <source>Obtains the corresponding <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> enumeration value for the specified attribute.</source>
          <target state="translated">Obtém o valor de enumeração <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> correspondente para o atributo especificado.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> enumeration value for the specified attribute; otherwise, an invalid <ph id="ph2">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> value if the attribute is not a member of the enumeration.</source>
          <target state="translated">O valor de enumeração <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> para o atributo especificado; caso contrário, um valor <ph id="ph2">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> inválido se o atributo não é um membro da enumeração.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)">
          <source>If <ph id="ph1">`attrName`</ph> is <ph id="ph2">`null`</ph> or an empty string (""), or cannot be found in the table of attribute names, the value -1, typed to an <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> object, is returned.</source>
          <target state="translated">Se <ph id="ph1">`attrName`</ph> é <ph id="ph2">`null`</ph> ou uma cadeia de caracteres vazia (""), ou não foi encontrado na tabela de nomes de atributo, o valor -1, digitada para uma <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> de objeto, é retornado.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)">
          <source>The following code example demonstrates how to use a class, derived from the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class, that overrides the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar uma classe derivada do <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe, que substitui o <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)">
          <source>The override checks whether <ph id="ph1">`tagKey`</ph> is equal to the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterTag.Font&gt;</ph> field, which indicates that a <ph id="ph3">`&lt;font&gt;`</ph> markup element will be rendered.</source>
          <target state="translated">As verificações de substituição se <ph id="ph1">`tagKey`</ph> é igual de <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterTag.Font&gt;</ph> campo, o que indica que um <ph id="ph3">`&lt;font&gt;`</ph> elemento marcação será renderizado.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)">
          <source>If so, the override calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A&gt;</ph> method to find out whether the <ph id="ph2">`&lt;font&gt;`</ph> element contains a <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> attribute.</source>
          <target state="translated">Se assim, a substituição chama o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A&gt;</ph> método para descobrir se o <ph id="ph2">`&lt;font&gt;`</ph> elemento contém um <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> atributo.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A&gt;</ph> returns <ph id="ph2">`false`</ph>, the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method calls the <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A&gt;</ph> method, which defines the <ph id="ph5">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> and sets its value to <ph id="ph6">`30pt`</ph>.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A&gt;</ph> retorna <ph id="ph2">`false`</ph>, o <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> chamadas de método de <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A&gt;</ph> método, que define o <ph id="ph5">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> e define seu valor como <ph id="ph6">`30pt`</ph>.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeName(System.Web.UI.HtmlTextWriterAttribute)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> to obtain the markup attribute name for.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> para o qual obter o nome de atributo de marcação.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeName(System.Web.UI.HtmlTextWriterAttribute)">
          <source>Obtains the name of the markup attribute associated with the specified <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> value.</source>
          <target state="translated">Obtém o nome do atributo de marcação associado ao valor <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeName(System.Web.UI.HtmlTextWriterAttribute)">
          <source>A string containing the name of the markup attribute.</source>
          <target state="translated">Uma cadeia de caracteres que contém o nome do atributo de marcação.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeName(System.Web.UI.HtmlTextWriterAttribute)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A&gt;</ph> method returns an empty string (""), if <ph id="ph2">`attrKey`</ph> is not a valid <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> value.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A&gt;</ph> método retorna uma cadeia de caracteres vazia (""), se <ph id="ph2">`attrKey`</ph> não é válido <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> valor.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeName(System.Web.UI.HtmlTextWriterAttribute)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A&gt;</ph> method to convert a <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> enumeration value to its string name.</source>
          <target state="translated">O exemplo de código a seguir mostra como usar o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A&gt;</ph> método para converter um <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> valor de enumeração para seu nome de cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetStyleKey(System.String)">
          <source>The style attribute for which to obtain the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph>.</source>
          <target state="translated">O atributo de estilo para o qual obter o <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetStyleKey(System.String)">
          <source>Obtains the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> enumeration value for the specified style.</source>
          <target state="translated">Obtém o valor de enumeração <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> do estilo especificado.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetStyleKey(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> enumeration value corresponding to <ph id="ph2">&lt;paramref name="styleName" /&gt;</ph>.</source>
          <target state="translated">O valor de enumeração <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> correspondente a <ph id="ph2">&lt;paramref name="styleName" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetStyleKey(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A&gt;</ph> method returns the value -1 typed as a <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> value, if <ph id="ph3">`styleName`</ph> does not correspond to any <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> enumeration value.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A&gt;</ph> método retorna o valor -1 digitado como um <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> valor, se <ph id="ph3">`styleName`</ph> não corresponde a nenhum <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> valor de enumeração.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetStyleKey(System.String)">
          <source>The following code example demonstrates how to override the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method in a class derived from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class.</source>
          <target state="translated">O exemplo de código a seguir demonstra como substituir o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> método em uma classe derivada do <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetStyleKey(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> override determines whether a <ph id="ph2">`&lt;label&gt;`</ph> markup will be rendered, and, if so, checks the element for a <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> attribute.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> substituição determina se um <ph id="ph2">`&lt;label&gt;`</ph> marcação será renderizada e, nesse caso, verifica se o elemento para uma <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> atributo.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetStyleKey(System.String)">
          <source>If a <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> attribute has not been defined, the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A&gt;</ph> method is used as the first parameter in a call to the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> method to add a <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> attribute to a <ph id="ph5">`&lt;label&gt;`</ph> markup element and set the <ph id="ph6">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> attribute to <ph id="ph7">`red`</ph>.</source>
          <target state="translated">Se um <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> atributo não tiver sido definido, o <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A&gt;</ph> método é usado como o primeiro parâmetro em uma chamada para o <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> método para adicionar um <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> de atributo para um <ph id="ph5">`&lt;label&gt;`</ph> elemento de marcação e o conjunto a <ph id="ph6">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> atributo <ph id="ph7">`red`</ph>.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetStyleName(System.Web.UI.HtmlTextWriterStyle)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> to obtain the style attribute name for.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> para o qual obter o nome de atributo de estilo.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetStyleName(System.Web.UI.HtmlTextWriterStyle)">
          <source>Obtains the markup style attribute name associated with the specified <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> enumeration value.</source>
          <target state="translated">Obtém o nome de atributo de estilo de marcação associado ao valor de enumeração <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetStyleName(System.Web.UI.HtmlTextWriterStyle)">
          <source>The style attribute name associated with the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> enumeration value specified in <ph id="ph2">&lt;paramref name="styleKey" /&gt;</ph>.</source>
          <target state="translated">O nome do atributo de estilo associado ao valor de enumeração <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> especificado em <ph id="ph2">&lt;paramref name="styleKey" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetStyleName(System.Web.UI.HtmlTextWriterStyle)">
          <source>If <ph id="ph1">`styleKey`</ph> is not a valid <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> object, the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A&gt;</ph> method returns an empty string ("").</source>
          <target state="translated">Se <ph id="ph1">`styleKey`</ph> não é válido <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> objeto, o <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A&gt;</ph> método retorna uma cadeia de caracteres vazia ("").</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetStyleName(System.Web.UI.HtmlTextWriterStyle)">
          <source>The following code example shows how to check whether a <ph id="ph1">`&lt;label&gt;`</ph> element is being rendered.</source>
          <target state="translated">O exemplo de código a seguir mostra como verificar se um <ph id="ph1">`&lt;label&gt;`</ph> elemento está sendo processado.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetStyleName(System.Web.UI.HtmlTextWriterStyle)">
          <source>If so, it checks whether a <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> style attribute has been defined on the element.</source>
          <target state="translated">Se assim, ele verifica se um <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> atributo de estilo foi definido no elemento.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetStyleName(System.Web.UI.HtmlTextWriterStyle)">
          <source>If the attribute has not been defined, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> method is called and the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A&gt;</ph> method converts the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> enumeration member into its string representation to pass to the <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> method.</source>
          <target state="translated">Se o atributo não tiver sido definido, o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> método é chamado e o <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A&gt;</ph> método converte o <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> membro de enumeração em sua representação de cadeia de caracteres para passar para o <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetTagKey(System.String)">
          <source>The markup element for which to obtain the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph>.</source>
          <target state="translated">O elemento de marcação para o qual obter o <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetTagKey(System.String)">
          <source>Obtains the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> enumeration value associated with the specified markup element.</source>
          <target state="translated">Obtém o valor de enumeração <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> associado ao elemento de marcação especificado.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetTagKey(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> enumeration value; otherwise, if <ph id="ph2">&lt;paramref name="tagName" /&gt;</ph> is not associated with a specific <ph id="ph3">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> value, <ph id="ph4">&lt;see cref="F:System.Web.UI.HtmlTextWriterTag.Unknown" /&gt;</ph>.</source>
          <target state="translated">O valor de enumeração <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph>; caso contrário, se <ph id="ph2">&lt;paramref name="tagName" /&gt;</ph> não está associado um valor <ph id="ph3">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> específico, <ph id="ph4">&lt;see cref="F:System.Web.UI.HtmlTextWriterTag.Unknown" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetTagKey(System.String)">
          <source>If <ph id="ph1">`tagName`</ph> is <ph id="ph2">`null`</ph>, an empty string (""), or cannot be found in the table of markup tag names, the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A&gt;</ph> method returns the <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriterTag.Unknown&gt;</ph> field.</source>
          <target state="translated">Se <ph id="ph1">`tagName`</ph> é <ph id="ph2">`null`</ph>, uma cadeia de caracteres vazia (""), ou não foi encontrado na tabela de nomes de marca de marcação, o <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A&gt;</ph> método retorna o <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriterTag.Unknown&gt;</ph> campo.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetTagKey(System.String)">
          <source>The following code example shows how to override the overload of the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method that takes a string as its parameter.</source>
          <target state="translated">O exemplo de código a seguir mostra como substituir a sobrecarga do <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> método que utiliza uma cadeia de caracteres como seu parâmetro.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetTagKey(System.String)">
          <source>The string is passed to the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A&gt;</ph> method, which converts it to the corresponding <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterTag&gt;</ph> enumeration member, and then passes that to the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> overload that takes a <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriterTag&gt;</ph> enumeration value as a parameter.</source>
          <target state="translated">A cadeia de caracteres é passada para o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A&gt;</ph> método, que converte correspondente <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterTag&gt;</ph> membro de enumeração e, em seguida, passa para o <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> sobrecarga que utiliza um <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriterTag&gt;</ph> valor de enumeração como um parâmetro.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> to obtain the markup element for.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> para o qual obter o elemento de marcação.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)">
          <source>Obtains the markup element associated with the specified <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> enumeration value.</source>
          <target state="translated">Obtém o elemento de marcação associado ao valor de enumeração <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)">
          <source>A string representing the markup element.</source>
          <target state="translated">Uma cadeia de caracteres que representa o elemento de marcação.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)">
          <source>If <ph id="ph1">`tagKey`</ph> is not a valid <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterTag&gt;</ph> value, the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.GetTagName%2A&gt;</ph> method returns an empty string ("").</source>
          <target state="translated">Se <ph id="ph1">`tagKey`</ph> não é válido <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterTag&gt;</ph> valor, o <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.GetTagName%2A&gt;</ph> método retorna uma cadeia de caracteres vazia ("").</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)">
          <source>The following code example demonstrates how to close a <ph id="ph1">`&lt;font&gt;`</ph> element by using the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo de código a seguir demonstra como fechar uma <ph id="ph1">`&lt;font&gt;`</ph> elemento usando o <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.GetTagName%2A&gt;</ph> method to convert the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterTag.Font&gt;</ph> value to a string.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> chamadas de método de <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.GetTagName%2A&gt;</ph> método para converter o <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterTag.Font&gt;</ph> valor em uma cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="P:System.Web.UI.HtmlTextWriter.Indent">
          <source>Gets or sets the number of tab positions to indent the beginning of each line of markup.</source>
          <target state="translated">Obtém ou define o número de posições de tabulação para recuar o início de cada linha de marcação.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.Indent">
          <source>The number of tab positions to indent each line.</source>
          <target state="translated">O número de posições de tabulação de recuo de cada linha.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.Indent">
          <source>Indentation is performed by writing the string that is specified by the <ph id="ph1">`tabString`</ph> parameter of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29&gt;</ph> constructor the number of times that are specified by the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.Indent%2A&gt;</ph> property.</source>
          <target state="translated">Recuo é executado por gravar a cadeia de caracteres que é especificada pelo <ph id="ph1">`tabString`</ph> parâmetro o <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29&gt;</ph> construtor o número de vezes que são especificados pelo <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.Indent%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.Indent">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Indent%2A&gt;</ph> property is set to a negative value, it is changed to 0 before being saved.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Indent%2A&gt;</ph> propriedade for definida como um valor negativo, ele é alterado para 0 antes de serem salvas.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.Indent">
          <source>The following code example demonstrates how to increment the value that is assigned to the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Indent%2A&gt;</ph> property when attributes have been added to the opening tag of a <ph id="ph2">`&lt;span&gt;`</ph> element and the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method has been called.</source>
          <target state="translated">O exemplo de código a seguir demonstra como incrementar o valor que é atribuído para o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Indent%2A&gt;</ph> propriedade quando os atributos foram adicionados para a marca de abertura de um <ph id="ph2">`&lt;span&gt;`</ph> elemento e o <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> método foi chamado.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.Indent">
          <source>This increases the indentation for any markup that is rendered inside the <ph id="ph1">`&lt;span&gt;`</ph> element.</source>
          <target state="translated">Isso aumenta o recuo para qualquer marcação que é renderizado dentro do <ph id="ph1">`&lt;span&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="P:System.Web.UI.HtmlTextWriter.InnerWriter">
          <source>Gets or sets the text writer that writes the inner content of the markup element.</source>
          <target state="translated">Obtém ou define o gravador de texto que grava o conteúdo interno do elemento de marcação.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.InnerWriter">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> that writes the inner markup content.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> que grava o conteúdo de marcação interna.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.InnerWriter">
          <source>Inner markup content is the text found between the opening and closing tags of a markup language element.</source>
          <target state="translated">Conteúdo de marcação interna é o texto entre as marcas de abertura e fechamento de um elemento de linguagem de marcação.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.InnerWriter">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A&gt;</ph> property is set to a <ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph> object that is an instance of the <ph id="ph3">&lt;xref:System.Web.HttpWriter&gt;</ph> class, this fact is noted and a separate reference is saved.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A&gt;</ph> está definida como um <ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph> objeto é uma instância do <ph id="ph3">&lt;xref:System.Web.HttpWriter&gt;</ph> classe, esse fato é observado e uma referência separada é salvo.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.InnerWriter">
          <source>The following code example shows how to use a custom Web server control, derived from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebControl&gt;</ph> class, that overrides the <ph id="ph2">&lt;xref:System.Web.UI.Control.Render%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo de código a seguir mostra como usar um controle de servidor Web personalizado, derivado de <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebControl&gt;</ph> classe, que substitui o <ph id="ph2">&lt;xref:System.Web.UI.Control.Render%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.InnerWriter">
          <source>It uses the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class to write a <ph id="ph2">`&lt;font&gt;`</ph> element.</source>
          <target state="translated">Ele usa o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe para gravar um <ph id="ph2">`&lt;font&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.InnerWriter">
          <source>After it writes the opening tag of the element, it uses the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A&gt;</ph> property to write the string <ph id="ph2">`"&lt;br&gt; The time on the server:"`</ph> and concatenates this string with the value of the <ph id="ph3">&lt;xref:System.DateTime.Now%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Depois que ele grava a marca de abertura do elemento, ele usa o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A&gt;</ph> propriedade para gravar a cadeia de caracteres <ph id="ph2">`"&lt;br&gt; The time on the server:"`</ph> e concatena essa cadeia de caracteres com o valor da <ph id="ph3">&lt;xref:System.DateTime.Now%2A?displayProperty=nameWithType&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Determines whether the specified markup attribute and its value are rendered during the next call to the <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated">Determina se o atributo de marcação especificado e seu valor são renderizados durante a próxima chamada para o método <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> associated with the markup attribute.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> associado ao atributo de marcação.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)">
          <source>Determines whether the specified markup attribute and its value are rendered during the next call to the <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated">Determina se o atributo de marcação especificado e seu valor são renderizados durante a próxima chamada para o método <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the attribute is rendered during the next call to the <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o atributo é renderizado durante a próxima chamada para o método <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph>; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)">
          <source>To obtain the value to be assigned to the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> object, use the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%40%29&gt;</ph> overload instead of this one.</source>
          <target state="translated">Para obter o valor a ser atribuído para o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> do objeto, use o <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%40%29&gt;</ph> de sobrecarga em vez deste.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)">
          <source>The following code example shows how to use an override of the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method in a class that inherits from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class.</source>
          <target state="translated">O exemplo de código a seguir mostra como usar uma substituição do <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> método em uma classe que herda de <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> override checks whether a <ph id="ph2">`&lt;font&gt;`</ph> markup element will be rendered.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> substituir verifica se um <ph id="ph2">`&lt;font&gt;`</ph> elemento marcação será renderizado.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)">
          <source>If so, the override calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A&gt;</ph> method to check whether the <ph id="ph2">`&lt;font&gt;`</ph> element contains a <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> attribute.</source>
          <target state="translated">Se assim, a substituição chama o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A&gt;</ph> método para verificar se o <ph id="ph2">`&lt;font&gt;`</ph> elemento contém um <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> atributo.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)">
          <source>If not, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A&gt;</ph> method, which defines the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> attribute and sets its value to <ph id="ph4">`30pt`</ph>.</source>
          <target state="translated">Se não, o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> chamadas de método de <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A&gt;</ph> método, que define o <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> de atributos e define seu valor como <ph id="ph4">`30pt`</ph>.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute,System.String@)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> associated with the markup attribute.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> associado ao atributo de marcação.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute,System.String@)">
          <source>The value assigned to the attribute.</source>
          <target state="translated">O valor atribuído ao atributo.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute,System.String@)">
          <source>Determines whether the specified markup attribute and its value are rendered during the next call to the <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated">Determina se o atributo de marcação especificado e seu valor são renderizados durante a próxima chamada para o método <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute,System.String@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the attribute is rendered during the next call to the <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o atributo é renderizado durante a próxima chamada para o método <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph>; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute,System.String@)">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A&gt;</ph> method returns <ph id="ph2">`true`</ph>, the value to be assigned to the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> object is returned in the <ph id="ph4">`value`</ph> parameter.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A&gt;</ph> método retorna <ph id="ph2">`true`</ph>, o valor a ser atribuído para o <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> objeto é retornado no <ph id="ph4">`value`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Determines whether a markup style attribute is rendered during the next call to the <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated">Determina se um atributo de estilo de marcação é renderizado durante a próxima chamada para o método <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> associated with the attribute.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> associado ao atributo.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)">
          <source>Determines whether the specified markup style attribute is rendered during the next call to the <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated">Determina se o atributo de estilo de marcação especificado é renderizado durante a próxima chamada para o método <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the attribute will be rendered during the next call to the <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o atributo será renderizado durante a próxima chamada para o método <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph>; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)">
          <source>To get the value that will be rendered with the specified style attribute, use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%40%29&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A&gt;</ph> method.</source>
          <target state="translated">Para obter o valor que será processado com o atributo de estilo especificado, use o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%40%29&gt;</ph> de sobrecarga do <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)">
          <source>The following code example shows how to check whether a <ph id="ph1">`&lt;label&gt;`</ph> element is being rendered.</source>
          <target state="translated">O exemplo de código a seguir mostra como verificar se um <ph id="ph1">`&lt;label&gt;`</ph> elemento está sendo processado.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)">
          <source>If so, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A&gt;</ph> method checks whether a <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> style attribute has been defined on the element.</source>
          <target state="translated">Nesse caso, o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A&gt;</ph> método verifica se um <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> atributo de estilo foi definido no elemento.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> attribute has not been defined, the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> method defines the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> attribute and sets its value to <ph id="ph4">`red`</ph>.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> atributo não tiver sido definido, o <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> método define o <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> de atributos e define seu valor como <ph id="ph4">`red`</ph>.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle,System.String@)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> associated with the attribute.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> associado ao atributo.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle,System.String@)">
          <source>The value assigned to the style attribute.</source>
          <target state="translated">O valor atribuído ao atributo de estilo.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle,System.String@)">
          <source>Determines whether the specified markup style attribute and its value are rendered during the next call to the <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated">Determina se o atributo de estilo de marcação especificado e seu valor são renderizados durante a próxima chamada para o método <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle,System.String@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the attribute and its value will be rendered during the next call to the <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o atributo e seu valor serão renderizados durante a próxima chamada para o método <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph>; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle,System.String@)">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A&gt;</ph> method returns <ph id="ph2">`true`</ph>, the value to be assigned to the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> attribute is returned in the <ph id="ph4">`value`</ph> parameter.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A&gt;</ph> método retorna <ph id="ph2">`true`</ph>, o valor a ser atribuído para o <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> atributo é retornado no <ph id="ph4">`value`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)">
          <source>A string that contains the name of the attribute to check.</source>
          <target state="translated">Uma cadeia de caracteres que contém o nome do atributo a verificar.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)">
          <source>Checks an attribute to ensure that it can be rendered in the opening tag of a <ph id="ph1">&lt;see langword="&amp;lt;form&amp;gt;" /&gt;</ph> markup element.</source>
          <target state="translated">Verifica se um atributo para garantir que ele pode ser renderizado na marca de abertura de um elemento de marcação <ph id="ph1">&lt;see langword="&amp;lt;form&amp;gt;" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)">
          <source>Always <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Sempre <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class implementation of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A&gt;</ph> method returns <ph id="ph3">`true`</ph> for all attributes.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> implementação da classe a <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A&gt;</ph> método retorna <ph id="ph3">`true`</ph> para todos os atributos.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)">
          <source>Override the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A&gt;</ph> to limit the attributes that can be rendered in the opening tag of a <ph id="ph2">`&lt;form&gt;`</ph> element.</source>
          <target state="translated">Substituir o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A&gt;</ph> para limitar os atributos que podem ser renderizados na marca de abertura de um <ph id="ph2">`&lt;form&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)">
          <source>Override the <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)" /&gt;</ph> method to return <ph id="ph2">&lt;see langword="true" /&gt;</ph> only for those attributes that can be included in the <ph id="ph3">&lt;see langword="&amp;lt;form&amp;gt;" /&gt;</ph> element of the markup for which the class derived from the <ph id="ph4">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> class is intended.</source>
          <target state="translated">Substituir o <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)" /&gt;</ph> método para retornar <ph id="ph2">&lt;see langword="true" /&gt;</ph> somente para aqueles atributos que podem ser incluídos no <ph id="ph3">&lt;see langword="&amp;lt;form&amp;gt;" /&gt;</ph> elemento da marcação para o qual a classe derivada do <ph id="ph4">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> classe é destinada.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="P:System.Web.UI.HtmlTextWriter.NewLine">
          <source>Gets or sets the line terminator string used by the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object.</source>
          <target state="translated">Obtém ou define a cadeia de caracteres de terminador de linha usada pelo objeto <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.NewLine">
          <source>The line terminator string used by the current <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph>.</source>
          <target state="translated">A cadeia de caracteres de terminador de linha usada pelo <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.NewLine">
          <source>The default line terminator string is a carriage return, followed by a line feed ("\r\n").</source>
          <target state="translated">A cadeia de caracteres do terminador de linha padrão é um retorno de carro, seguido por uma alimentação de linha ("\r\n").</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.NewLine">
          <source>The line terminator string is written to the output stream whenever one of the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> methods is called.</source>
          <target state="translated">A cadeia de caracteres de terminador de linha é gravada para o fluxo de saída sempre que uma da <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> métodos é chamado.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.NewLine">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.NewLine%2A&gt;</ph> property is set to <ph id="ph2">`null`</ph>, the default new line character is used.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.NewLine%2A&gt;</ph> está definida como <ph id="ph2">`null`</ph>, o caractere de nova linha padrão é usado.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.NewLine">
          <source>The following code example shows how to use a custom class, derived from the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class, that overrides the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo de código a seguir mostra como usar uma classe personalizada, derivada de <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe, que substitui o <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.NewLine">
          <source>When called, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> override checks whether the text writer renders any <ph id="ph2">`&lt;label&gt;`</ph> or <ph id="ph3">`&lt;a&gt;`</ph> elements.</source>
          <target state="translated">Quando chamado, o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> substituição verifica se o gravador de texto processa qualquer <ph id="ph2">`&lt;label&gt;`</ph> ou <ph id="ph3">`&lt;a&gt;`</ph> elementos.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.NewLine">
          <source>If so, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> method determines whether a style attribute is defined for the label.</source>
          <target state="translated">Nesse caso, o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> método determina se um atributo de estilo é definido para o rótulo.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.NewLine">
          <source>If no style is defined, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> method sets the default value for the <ph id="ph2">`style:color`</ph> attribute to blue.</source>
          <target state="translated">Se nenhum estilo for definido, o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> método define o valor padrão para o <ph id="ph2">`style:color`</ph> atributo como azul.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.NewLine">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> method then uses the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.NewLine%2A&gt;</ph> property to insert a line break in the markup tag and writes any other defined attributes.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> , em seguida, usa o método de <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.NewLine%2A&gt;</ph> propriedade para inserir uma linha de quebra na marca de marcação e grava outros atributos definidos.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>A string containing the name of the attribute to render.</source>
          <target state="translated">Uma cadeia de caracteres que contém o nome do atributo a renderizar.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>A string containing the value that is assigned to the attribute.</source>
          <target state="translated">Uma cadeia de caracteres que contém o valor atribuído ao atributo.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> associated with the markup attribute.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> associado ao atributo de marcação.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>Determines whether the specified markup attribute and its value can be rendered to the current markup element.</source>
          <target state="translated">Determina se o atributo de marcação especificado e seu valor podem ser renderizados para o elemento atual da marcação.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>Always <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Sempre <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class implementation of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A&gt;</ph> method always returns <ph id="ph3">`true`</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> implementação da classe a <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A&gt;</ph> método sempre retornará <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A&gt;</ph> overrides can determine whether an attribute will be rendered to the page.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A&gt;</ph> substituições podem determinar se um atributo será renderizado para a página.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>The following code example shows how to override the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo de código a seguir mostra como substituir o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>If a <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> attribute is rendered, but the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> value is not <ph id="ph3">`30pt`</ph>, the <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A&gt;</ph> override calls the <ph id="ph5">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method to add a <ph id="ph6">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> attribute and set its value to <ph id="ph7">`30pt`</ph>.</source>
          <target state="translated">Se um <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> atributo é processado, mas o <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> valor não é <ph id="ph3">`30pt`</ph>, o <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A&gt;</ph> substituir chamadas a <ph id="ph5">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> método para adicionar um <ph id="ph6">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> de atributos e defina seu valor como <ph id="ph7">`30pt`</ph>.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>If you inherit from the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> class, you can override the <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /&gt;</ph> method to return <ph id="ph3">&lt;see langword="false" /&gt;</ph> to prevent an attribute from being rendered at all, being rendered on a particular element, or being rendered for a particular markup.</source>
          <target state="translated">Se você herdar o <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> classe, você pode substituir o <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /&gt;</ph> método para retornar <ph id="ph3">&lt;see langword="false" /&gt;</ph> para impedir que um atributo que está sendo renderizado em todos os, sendo processada em um determinado elemento ou sendo processada por uma marca específica.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>For example, if you do not want the object derived from <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> to render the <ph id="ph2">&lt;see langword="bgcolor" /&gt;</ph> attribute to <ph id="ph3">&lt;see langword="&amp;lt;table&amp;gt;" /&gt;</ph> elements, you can override the <ph id="ph4">&lt;see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /&gt;</ph> and return <ph id="ph5">&lt;see langword="false" /&gt;</ph> when <ph id="ph6">&lt;paramref name="name" /&gt;</ph> passes <ph id="ph7">&lt;see langword="bgcolor" /&gt;</ph> and the <ph id="ph8">&lt;see cref="P:System.Web.UI.HtmlTextWriter.TagName" /&gt;</ph> property value is <ph id="ph9">&lt;see langword="table" /&gt;</ph>.</source>
          <target state="translated">Por exemplo, se você não quiser que o objeto derivado de <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> para renderizar o <ph id="ph2">&lt;see langword="bgcolor" /&gt;</ph> atributo <ph id="ph3">&lt;see langword="&amp;lt;table&amp;gt;" /&gt;</ph> elementos, você pode substituir o <ph id="ph4">&lt;see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /&gt;</ph> e retornar <ph id="ph5">&lt;see langword="false" /&gt;</ph> quando <ph id="ph6">&lt;paramref name="name" /&gt;</ph> passa <ph id="ph7">&lt;see langword="bgcolor" /&gt;</ph> e o <ph id="ph8">&lt;see cref="P:System.Web.UI.HtmlTextWriter.TagName" /&gt;</ph> é o valor da propriedade <ph id="ph9">&lt;see langword="table" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>A string containing the name of the style attribute to render.</source>
          <target state="translated">Uma cadeia de caracteres que contém o atributo de estilo a ser renderizado.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>A string containing the value that is assigned to the style attribute.</source>
          <target state="translated">Uma cadeia de caracteres que contém o valor atribuído ao atributo de estilo.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> associated with the style attribute.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> associado ao atributo de estilo.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>Determines whether the specified markup style attribute and its value can be rendered to the current markup element.</source>
          <target state="translated">Determina se o atributo de estilo de marcação especificado e seu valor podem ser renderizados para o elemento da marcação atual.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>Always <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Sempre <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class implementation of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A&gt;</ph> method always returns <ph id="ph3">`true`</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> implementação da classe a <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A&gt;</ph> método sempre retornará <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A&gt;</ph> overrides can determine whether a style attribute will be rendered to the page.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A&gt;</ph> substituições podem determinar se um atributo de estilo será renderizado para a página.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>The following code example shows how to override the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo de código a seguir mostra como substituir o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>If a <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> style attribute is rendered, but the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> value is not <ph id="ph3">`purple`</ph>, the <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A&gt;</ph> override uses the <ph id="ph5">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> method to set the <ph id="ph6">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> attribute to <ph id="ph7">`purple`</ph>.</source>
          <target state="translated">Se um <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> atributo style é processado, mas o <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> valor não é <ph id="ph3">`purple`</ph>, o <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A&gt;</ph> substituir usa o <ph id="ph5">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> método para definir o <ph id="ph6">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> atributo <ph id="ph7">`purple`</ph>.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>If you inherit from the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> class, you can override the <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" /&gt;</ph> method to return <ph id="ph3">&lt;see langword="false" /&gt;</ph> to prevent a style attribute from being rendered at all, being rendered on a particular element, or being rendered for a particular markup language.</source>
          <target state="translated">Se você herdar o <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> classe, você pode substituir o <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" /&gt;</ph> método para retornar <ph id="ph3">&lt;see langword="false" /&gt;</ph> para impedir que um atributo de estilo que está sendo renderizado em todos os, que está sendo processada em um determinado elemento ou sendo processada por uma linguagem de marcação específica.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>For example, if you do not want the object that is derived from <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> to render the <ph id="ph2">&lt;see langword="color" /&gt;</ph> style attribute to a <ph id="ph3">&lt;see langword="&amp;lt;p&amp;gt;" /&gt;</ph> element, you can override the <ph id="ph4">&lt;see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" /&gt;</ph> and return <ph id="ph5">&lt;see langword="false" /&gt;</ph> when <ph id="ph6">&lt;paramref name="name" /&gt;</ph> passes <ph id="ph7">&lt;see langword="color" /&gt;</ph> and the <ph id="ph8">&lt;see cref="P:System.Web.UI.HtmlTextWriter.TagName" /&gt;</ph> property value is <ph id="ph9">&lt;see langword="p" /&gt;</ph>.</source>
          <target state="translated">Por exemplo, se você não quiser que o objeto que é derivado de <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> para renderizar o <ph id="ph2">&lt;see langword="color" /&gt;</ph> atributo de estilo para um <ph id="ph3">&lt;see langword="&amp;lt;p&amp;gt;" /&gt;</ph> elemento, você pode substituir o <ph id="ph4">&lt;see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" /&gt;</ph> e retornar <ph id="ph5">&lt;see langword="false" /&gt;</ph> quando <ph id="ph6">&lt;paramref name="name" /&gt;</ph> passa <ph id="ph7">&lt;see langword="color" /&gt;</ph>e <ph id="ph8">&lt;see cref="P:System.Web.UI.HtmlTextWriter.TagName" /&gt;</ph> é o valor da propriedade <ph id="ph9">&lt;see langword="p" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>A string containing the name of the element to render.</source>
          <target state="translated">Uma cadeia de caracteres que contém o nome do elemento a renderizar.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> associated with the element.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> associado ao elemento.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>Determines whether the specified markup element will be rendered to the requesting page.</source>
          <target state="translated">Determina se o elemento de marcação especificado será renderizado para a página solicitante.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>Always <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Sempre <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class implementation of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A&gt;</ph> method always returns <ph id="ph3">`true`</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> implementação da classe a <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A&gt;</ph> método sempre retornará <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A&gt;</ph> overrides can determine whether an element will be rendered to the page.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A&gt;</ph> substituições podem determinar se um elemento será renderizado para a página.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>The following code example shows how to override the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo de código a seguir mostra como substituir o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>If a <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterTag.Font&gt;</ph> element is being rendered, the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A&gt;</ph> override uses the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A&gt;</ph> method to determine whether a <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> attribute is being rendered.</source>
          <target state="translated">Se um <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterTag.Font&gt;</ph> elemento está sendo processado, o <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A&gt;</ph> substituir usa o <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A&gt;</ph> método para determinar se um <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> atributo está sendo processado.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>If not, it uses the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method to create a <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> attribute and set its value to <ph id="ph3">`20pt`</ph>.</source>
          <target state="translated">Se não, ele usa o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> método para criar um <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> de atributos e defina seu valor como <ph id="ph3">`20pt`</ph>.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>If you inherit from the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> class, you can override the <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" /&gt;</ph> method to return <ph id="ph3">&lt;see langword="false" /&gt;</ph> to prevent a markup element from being rendered at all or for a particular markup language.</source>
          <target state="translated">Se você herdar o <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> classe, você pode substituir o <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" /&gt;</ph> método para retornar <ph id="ph3">&lt;see langword="false" /&gt;</ph> para impedir que um elemento de marcação seja renderizada de ou para um idioma específico de marcação.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>For example, if you do not want the object that is derived from <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> to render the <ph id="ph2">&lt;see langword="&amp;lt;font&amp;gt;" /&gt;</ph> element, you can override the <ph id="ph3">&lt;see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" /&gt;</ph> method to return <ph id="ph4">&lt;see langword="false" /&gt;</ph> when a page is requested that contains a <ph id="ph5">&lt;see langword="&amp;lt;font&amp;gt;" /&gt;</ph> element.</source>
          <target state="translated">Por exemplo, se você não quiser que o objeto que é derivado de <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> para renderizar o <ph id="ph2">&lt;see langword="&amp;lt;font&amp;gt;" /&gt;</ph> elemento, você pode substituir o <ph id="ph3">&lt;see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" /&gt;</ph> método para retornar <ph id="ph4">&lt;see langword="false" /&gt;</ph> quando uma página é solicitada que contém um <ph id="ph5">&lt;see langword="&amp;lt;font&amp;gt;" /&gt;</ph> elemento.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OutputTabs">
          <source>Writes a series of tab strings that represent the indentation level for a line of markup characters.</source>
          <target state="translated">Grava uma série de cadeias de caracteres de guia que representam o nível de recuo de uma linha de caracteres de marcação.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OutputTabs">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A&gt;</ph> method uses the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Indent%2A&gt;</ph> property to determine how many tab strings to write to obtain the desired indentation.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A&gt;</ph> método usa o <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Indent%2A&gt;</ph> propriedade para determinar quantas cadeias de caracteres de guia gravar obter o recuo desejado.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OutputTabs">
          <source>The tab string is specified with the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">A cadeia de caracteres de guia é especificada com o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%2A&gt;</ph> construtor.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OutputTabs">
          <source>If no tab string is specified, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.DefaultTabString&gt;</ph> constant (<ph id="ph2">`\t`</ph>) is used.</source>
          <target state="translated">Se nenhuma cadeia de caracteres de tabulação for especificada, o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.DefaultTabString&gt;</ph> constante (<ph id="ph2">`\t`</ph>) é usado.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OutputTabs">
          <source>The following code example shows how to override the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A&gt;</ph> method in a class that is derived from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class.</source>
          <target state="translated">O exemplo de código a seguir mostra como substituir o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A&gt;</ph> método em uma classe que deriva de <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OutputTabs">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A&gt;</ph> override always uses the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.DefaultTabString&gt;</ph> constant to perform the indentation.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A&gt;</ph> substituir sempre usa o <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.DefaultTabString&gt;</ph> constante para executar o recuo.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.PopEndTag">
          <source>Removes the most recently saved markup element from the list of rendered elements.</source>
          <target state="translated">Remove o elemento de marcação salvo mais recentemente na lista de elementos renderizados.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.PopEndTag">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the most recently rendered markup element.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contém o elemento de marcação renderizado mais recentemente.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.PopEndTag">
          <source>Elements are added to the list of rendered markup elements by the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method.</source>
          <target state="translated">Os elementos são adicionados à lista de elementos de marcação renderizada, o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.PopEndTag">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method removes markup elements from the list by calling the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.PopEndTag%2A&gt;</ph> method.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> método remove elementos de marcação da lista chamando o <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.PopEndTag%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.PopEndTag">
          <source>The list of rendered elements is empty.</source>
          <target state="translated">A lista de elementos renderizados está vazia.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.PushEndTag(System.String)">
          <source>The closing tag of the markup element.</source>
          <target state="translated">A marca de fechamento do elemento de marcação.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.PushEndTag(System.String)">
          <source>Saves the specified markup element for later use when generating the end tag for a markup element.</source>
          <target state="translated">Salva o elemento de marcação especificado para uso posterior ao gerar a marca de fim de um elemento de marcação.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.PushEndTag(System.String)">
          <source>Elements are added to the list of rendered markup elements when the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.PushEndTag%2A&gt;</ph> method.</source>
          <target state="translated">Os elementos são adicionados à lista de elementos de marcação renderizada quando o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> chamadas de método de <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.PushEndTag%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.PushEndTag(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method removes markup elements from the list after it renders the end tag for the element.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> método Remove da lista de elementos de marcação depois que ele renderiza a marca de fim do elemento.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RegisterAttribute(System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>A string containing the name of the markup attribute to register.</source>
          <target state="translated">Uma cadeia de caracteres que contém o nome do atributo de marcação a registrar.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RegisterAttribute(System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> that corresponds with the attribute name.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> que corresponde ao nome do atributo.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RegisterAttribute(System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>Registers markup attributes, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client.</source>
          <target state="translated">Registra os atributos de marcação, literais ou dinamicamente gerados, do arquivo de origem para que eles possam ser renderizados adequadamente para o cliente solicitante.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RegisterAttribute(System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>The predefined attributes of the HTML markup language are registered by calls to the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A&gt;</ph> method when the first <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> object is created.</source>
          <target state="translated">Os atributos predefinidos da linguagem HTML são registrados por chamadas para o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A&gt;</ph> método quando o primeiro <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> objeto é criado.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RegisterAttribute(System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>Dynamic attributes can be registered by using the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A&gt;</ph> method at other times.</source>
          <target state="translated">Atributos dinâmicos podem ser registrados usando o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A&gt;</ph> método em outros momentos.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RegisterAttribute(System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>The registration table used by the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A&gt;</ph> method is <ph id="ph2">`static`</ph>, so registration of attributes applies to all <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> objects on the host computer.</source>
          <target state="translated">A tabela de registro usada pelo <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A&gt;</ph> método <ph id="ph2">`static`</ph>, portanto, o registro de atributos se aplica a todos os <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> objetos no computador host.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RegisterStyle(System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>The string passed from the source file specifying the style name.</source>
          <target state="translated">A cadeia de caracteres passada do arquivo de origem especificando o nome do estilo.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RegisterStyle(System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> that corresponds with the specified style.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> que corresponde ao estilo especificado.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RegisterStyle(System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>Registers markup style properties, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client.</source>
          <target state="translated">Registra as propriedades de estilo de marcação, literais ou dinamicamente geradas, do arquivo de origem para que eles possa ser renderizado adequadamente para o cliente solicitante.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RegisterStyle(System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>The predefined cascading style sheet (CSS) attributes of the HTML markup language are registered by calls to the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A&gt;</ph> method when the first <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> object is created.</source>
          <target state="translated">Os atributos de CSS (folha) de estilo em cascata predefinidas da linguagem HTML são registrados por chamadas para o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A&gt;</ph> método quando o primeiro <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> objeto é criado.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RegisterStyle(System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>Dynamic style attributes can be registered by using the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A&gt;</ph> method at other times.</source>
          <target state="translated">Atributos de estilo dinâmico podem ser registrados usando o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A&gt;</ph> método em outros momentos.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RegisterStyle(System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>The registration table used by the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A&gt;</ph> method is <ph id="ph2">`static`</ph>, so registration of attributes applies to all <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> objects on the host computer.</source>
          <target state="translated">A tabela de registro usada pelo <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A&gt;</ph> método <ph id="ph2">`static`</ph>, portanto, o registro de atributos se aplica a todos os <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> objetos no computador host.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RegisterTag(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>A string that contains the HTML tag.</source>
          <target state="translated">Uma cadeia de caracteres que contém a marca HTML.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RegisterTag(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> that specifies which element to render.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> que especifica qual elemento renderizar.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RegisterTag(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>Registers markup tags, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client.</source>
          <target state="translated">Registra marcas de marcação, literais ou dinamicamente geradas, do arquivo de origem para que elas possam ser renderizadas adequadamente para o cliente solicitante.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RegisterTag(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>The predefined markup tags of the HTML language are registered by calls to the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A&gt;</ph> method when the first <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> object is created.</source>
          <target state="translated">As marcas de marcação predefinidas da linguagem HTML são registradas por chamadas para o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A&gt;</ph> método quando o primeiro <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> objeto é criado.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RegisterTag(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>Dynamic markup tags can be registered by using the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A&gt;</ph> method at other times.</source>
          <target state="translated">Marcas dinâmico podem ser registradas usando o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A&gt;</ph> método em outros momentos.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RegisterTag(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>The registration table used by the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A&gt;</ph> method is <ph id="ph2">`static`</ph>, so registration of tags applies to all <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> objects on the host computer.</source>
          <target state="translated">A tabela de registro usada pelo <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A&gt;</ph> método <ph id="ph2">`static`</ph>, portanto, o registro de marcas se aplica a todos os <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> objetos no computador host.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterContent">
          <source>Writes any text or spacing that occurs after the content and before the closing tag of the markup element to the markup output stream.</source>
          <target state="translated">Grava qualquer texto ou espaçamento que ocorre após o conteúdo e antes da marca de fechamento do elemento de marcação no fluxo de saída de marcação.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterContent">
          <source>A string that contains the spacing or text to write after the content of the element.</source>
          <target state="translated">Uma cadeia de caracteres que contém o espaçamento ou o texto a ser gravado após o conteúdo do elemento.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterContent">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A&gt;</ph> method can be useful if you want to insert child elements into the current markup element.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A&gt;</ph> método pode ser útil se você quiser inserir elementos filho do elemento atual da marcação.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterContent">
          <source>The following code example shows how to override the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A&gt;</ph> method in a class derived from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class to determine whether a <ph id="ph3">`&lt;label&gt;`</ph> element is being rendered.</source>
          <target state="translated">O exemplo de código a seguir mostra como substituir o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A&gt;</ph> método em uma classe derivada do <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe para determinar se um <ph id="ph3">`&lt;label&gt;`</ph> elemento está sendo processado.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterContent">
          <source>If so, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A&gt;</ph> override inserts the closing tag of a <ph id="ph2">`&lt;font&gt;`</ph> element immediately before the closing tag of the <ph id="ph3">`&lt;label&gt;`</ph> element.</source>
          <target state="translated">Nesse caso, o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A&gt;</ph> substituição insere a marca de fechamento de um <ph id="ph2">`&lt;font&gt;`</ph> elemento imediatamente antes da marca de fechamento do <ph id="ph3">`&lt;label&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterContent">
          <source>If an element other than <ph id="ph1">`&lt;label&gt;`</ph> is being rendered, the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A&gt;</ph> base method is used.</source>
          <target state="translated">Se um elemento diferente de <ph id="ph1">`&lt;label&gt;`</ph> está sendo processado, o <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A&gt;</ph> método base é usado.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterContent">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> class implementation of the <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" /&gt;</ph> method returns <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> implementação da classe a <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" /&gt;</ph> método retornará <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterContent">
          <source>Override <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" /&gt;</ph> if you want to write text or spacing after the element content but before the closing tag.</source>
          <target state="translated">Substituir <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" /&gt;</ph> se deseja escrever texto ou espaçamento depois do conteúdo de elemento, mas antes da marca de fechamento.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterTag">
          <source>Writes any spacing or text that occurs after the closing tag for a markup element.</source>
          <target state="translated">Grava o espaçamento ou texto que ocorre após a marca de fechamento de um elemento de marcação.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterTag">
          <source>The spacing or text to write after the closing tag of the element.</source>
          <target state="translated">O espaçamento ou o texto a ser gravado após a marca de fechamento do elemento.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterTag">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A&gt;</ph> method can be useful if you want to render additional closing tags after the element tag.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A&gt;</ph> método pode ser útil se você deseja processar as marcas de fechamento adicional após a marca do elemento.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterTag">
          <source>The following code example shows how to override the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A&gt;</ph> method to determine whether a class derived from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class is rendering a <ph id="ph3">`&lt;label&gt;`</ph> element.</source>
          <target state="translated">O exemplo de código a seguir mostra como substituir o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A&gt;</ph> método para determinar se uma classe derivada do <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe estiver renderizando um <ph id="ph3">`&lt;label&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterTag">
          <source>If so, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A&gt;</ph> override inserts the closing tag of a <ph id="ph2">`&lt;font&gt;`</ph> element immediately after the <ph id="ph3">`&lt;label&gt;`</ph> element.</source>
          <target state="translated">Nesse caso, o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A&gt;</ph> substituição insere a marca de fechamento de um <ph id="ph2">`&lt;font&gt;`</ph> elemento imediatamente após o <ph id="ph3">`&lt;label&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterTag">
          <source>If it is not a <ph id="ph1">`&lt;label&gt;`</ph> element, the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A&gt;</ph> base method is used.</source>
          <target state="translated">Se não for um <ph id="ph1">`&lt;label&gt;`</ph> elemento, o <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A&gt;</ph> método base é usado.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterTag">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> class implementation of the <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" /&gt;</ph> method returns <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> implementação da classe a <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" /&gt;</ph> método retornará <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterTag">
          <source>Override <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" /&gt;</ph> if you want to write text or spacing after the element closing tag.</source>
          <target state="translated">Substituir <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" /&gt;</ph> se você quiser escrever texto ou espaçamento depois do elemento de marca de fechamento.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent">
          <source>Writes any text or spacing before the content and after the opening tag of a markup element.</source>
          <target state="translated">Grava qualquer texto ou espaçamento antes do conteúdo e após a marca de abertura de um elemento de marcação.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent">
          <source>The text or spacing to write prior to the content of the element.</source>
          <target state="translated">O texto ou espaçamento a gravar antes do conteúdo do elemento.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent">
          <source>If not overridden, <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /&gt;</ph> returns <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Se não for substituído, <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /&gt;</ph> retorna <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A&gt;</ph> method can be useful if you want to insert child elements into the current markup element before the inner markup.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A&gt;</ph> método pode ser útil se você quiser inserir elementos filho do elemento de marcação atual antes da marcação interna.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent">
          <source>The following code example shows how to override the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A&gt;</ph> method to determine whether a class derived from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class is about to render a <ph id="ph3">`&lt;label&gt;`</ph> element.</source>
          <target state="translated">O exemplo de código a seguir mostra como substituir o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A&gt;</ph> método para determinar se uma classe derivada do <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe está prestes a renderizar um <ph id="ph3">`&lt;label&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent">
          <source>If so, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A&gt;</ph> override inserts the opening tag of a <ph id="ph2">`&lt;font&gt;`</ph> element immediately after the opening tag of the <ph id="ph3">`&lt;label&gt;`</ph> element.</source>
          <target state="translated">Nesse caso, o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A&gt;</ph> substituição insere a marca de abertura de um <ph id="ph2">`&lt;font&gt;`</ph> elemento imediatamente após a marca de abertura do <ph id="ph3">`&lt;label&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent">
          <source>If it is not a <ph id="ph1">`&lt;label&gt;`</ph> element, the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A&gt;</ph> base method is used.</source>
          <target state="translated">Se não for um <ph id="ph1">`&lt;label&gt;`</ph> elemento, o <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A&gt;</ph> método base é usado.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> class implementation of the <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /&gt;</ph> method returns <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> implementação da classe a <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /&gt;</ph> método retornará <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent">
          <source>Override <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /&gt;</ph> if you want to write text or spacing after the opening tag but ahead of the element content.</source>
          <target state="translated">Substituir <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /&gt;</ph> se deseja escrever texto ou espaçamento após a marca de abertura, mas antes do conteúdo do elemento.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag">
          <source>Writes any text or spacing that occurs before the opening tag of a markup element.</source>
          <target state="translated">Grava qualquer texto ou espaçamento que ocorre antes da marca de abertura de um elemento de marcação.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag">
          <source>The text or spacing to write before the markup element opening tag.</source>
          <target state="translated">O texto ou espaçamento para gravar antes da marca de abertura do elemento de marcação.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag">
          <source>If not overridden, <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Se não for substituído, será <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A&gt;</ph> method can be useful if you want to render additional opening tags before the opening tag of the intended element.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A&gt;</ph> método pode ser útil se você deseja processar as marcas de abertura adicionais antes da marca de abertura do elemento pretendido.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag">
          <source>The following code example shows how to override the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A&gt;</ph> method to determine whether a class that is derived from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class is about to render a <ph id="ph3">`&lt;label&gt;`</ph> element.</source>
          <target state="translated">O exemplo de código a seguir mostra como substituir o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A&gt;</ph> método para determinar se uma classe que deriva de <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe está prestes a renderizar um <ph id="ph3">`&lt;label&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag">
          <source>If so, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A&gt;</ph> override inserts the opening tag of a <ph id="ph2">`&lt;font&gt;`</ph> element immediately before the <ph id="ph3">`&lt;label&gt;`</ph> element.</source>
          <target state="translated">Nesse caso, o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A&gt;</ph> substituição insere a marca de abertura de um <ph id="ph2">`&lt;font&gt;`</ph> elemento imediatamente antes do <ph id="ph3">`&lt;label&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag">
          <source>If it is not rendering a <ph id="ph1">`&lt;label&gt;`</ph> element, the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A&gt;</ph> base method is used.</source>
          <target state="translated">Se não estiver renderizando um <ph id="ph1">`&lt;label&gt;`</ph> elemento, o <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A&gt;</ph> método base é usado.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> class implementation of the <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" /&gt;</ph> method returns <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> implementação da classe a <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" /&gt;</ph> método retornará <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag">
          <source>Override <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" /&gt;</ph> if you want to write text or spacing ahead of the element opening tag.</source>
          <target state="translated">Substituir <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" /&gt;</ph> se você quiser escrever texto ou espaçamento antes do elemento de marca de abertura.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Writes the opening tag of a markup element to the output stream.</source>
          <target state="translated">Grava a marca de abertura de um elemento de marcação no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)">
          <source>A string containing the name of the markup element for which to render the opening tag.</source>
          <target state="translated">Uma cadeia de caracteres que contém o nome do elemento de marcação para o qual a marca de abertura será renderizada.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)">
          <source>Writes the opening tag of the specified markup element to the output stream.</source>
          <target state="translated">Grava a marca de abertura do elemento de marcação especificado no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> override of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.String%29&gt;</ph> method, if the markup element is not one of the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterTag&gt;</ph> enumeration values.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> substituição do <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.String%29&gt;</ph> método, se o elemento de marcação não é uma da <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterTag&gt;</ph> valores de enumeração.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)">
          <source>To generate a markup element by using the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method, first call the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> and the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> methods, as necessary, to specify any element attributes or style attributes that are to appear in the opening tag of the element.</source>
          <target state="translated">Para gerar um elemento de marcação usando o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> método, chame primeiro o <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> e <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> métodos, conforme necessário, para especificar atributos de elementos ou atributos de estilo que devem aparecer na marca de abertura do elemento.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)">
          <source>After generating the inner markup, call the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method to generate the closing tag.</source>
          <target state="translated">Depois de gerar a marcação interna, chame o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> método para gerar a marca de fechamento.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)">
          <source>The following code example shows how to call the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method in a custom control to render the opening tag of a non-standard <ph id="ph2">`MyTag`</ph> element.</source>
          <target state="translated">O exemplo de código a seguir mostra como chamar o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> método em um controle personalizado para renderizar a marca de abertura de não-padrão <ph id="ph2">`MyTag`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)">
          <source>The code example then calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render inner markup, and then calls the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method to close the element.</source>
          <target state="translated">O exemplo de código, em seguida, chama o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> método para processar marcação interna e, em seguida, chama o <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> método para fechar o elemento.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)">
          <source>This code example generates the following markup:</source>
          <target state="translated">Este exemplo de código gera a seguinte marcação:</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> values that defines the opening tag of the markup element to render.</source>
          <target state="translated">Um dos valores <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> que definem a marca de abertura do elemento de marcação a ser renderizado.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)">
          <source>Writes the opening tag of the markup element associated with the specified <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> enumeration value to the output stream.</source>
          <target state="translated">Grava a marca de abertura do elemento de marcação associado ao valor de enumeração <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> especificado no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.Web.UI.HtmlTextWriterTag%29&gt;</ph> method if the markup element is of a known type that is one of the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterTag&gt;</ph> enumeration values.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> de sobrecarga do <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.Web.UI.HtmlTextWriterTag%29&gt;</ph> método se o elemento de marcação for de um tipo conhecido que é uma da <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterTag&gt;</ph> valores de enumeração.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)">
          <source>To generate a markup element by using the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method, first call the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> and the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> methods, as necessary, to specify any element attributes or style attributes that are to appear in the opening tag of the element.</source>
          <target state="translated">Para gerar um elemento de marcação usando o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> método, chame primeiro o <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> e <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> métodos, conforme necessário, para especificar atributos de elementos ou atributos de estilo que devem aparecer na marca de abertura do elemento.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)">
          <source>After generating the inner markup, call the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method to generate the closing tag.</source>
          <target state="translated">Depois de gerar a marcação interna, chame o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> método para gerar a marca de fechamento.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method to output the opening tag of an <ph id="ph2">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">O exemplo de código a seguir mostra como usar o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> método para a saída da marca de abertura de um <ph id="ph2">`&lt;img&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)">
          <source>The attributes that are added to the element by the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method will be in the opening <ph id="ph2">`&lt;img&gt;`</ph> tag.</source>
          <target state="translated">Os atributos que são adicionados ao elemento, o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> método estará na abertura <ph id="ph2">`&lt;img&gt;`</ph> marca.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method is used to generate the closing tag.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> método é usado para gerar a marca de fechamento.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)">
          <source>This code example generates the following markup:</source>
          <target state="translated">Este exemplo de código gera a seguinte marcação:</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderEndTag">
          <source>Writes the end tag of a markup element to the output stream.</source>
          <target state="translated">Grava a marca de fim de um elemento de marcação no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderEndTag">
          <source>Call the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method after the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> overload is called and after all content between the opening and closing tags (inner markup) of the element has been rendered.</source>
          <target state="translated">Chamar o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> método após o <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> sobrecarga é chamada e depois que todo o conteúdo entre as marcas de abertura e fechamento (marcação interna) do elemento é processado.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderEndTag">
          <source>The following code example demonstrates how to call the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method after both the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method that generates the opening tag and the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method that renders the inner markup between the opening and closing tags of the custom <ph id="ph4">`MyTag`</ph> element have been called.</source>
          <target state="translated">O exemplo de código a seguir demonstra como chamar o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> método após ambos os <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> método que gera a marca de abertura e o <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> método que renderiza a marcação interna entre as marcas de abertura e fechamento personalizado<ph id="ph4">`MyTag`</ph> elemento ter sido chamado.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderEndTag">
          <source>This code example generates the following markup:</source>
          <target state="translated">Este exemplo de código gera a seguinte marcação:</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.SelfClosingChars">
          <source>Represents a space and the self-closing slash mark (/) of a markup tag.</source>
          <target state="translated">Representa um espaço e a marca de barra (/) de autofechamento de uma marca de marcação.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SelfClosingChars">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SelfClosingChars&gt;</ph> field is used in markup elements that are self-closed.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SelfClosingChars&gt;</ph> campo é usado em elementos de marcação que são automaticamente fechados.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SelfClosingChars">
          <source>For example:</source>
          <target state="translated">Por exemplo:</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd">
          <source>Represents the closing slash mark and right angle bracket (/<ph id="ph1">&amp;gt;</ph>) of a self-closing markup element.</source>
          <target state="translated">Representa a marca de barra de fechamento e o colchete angular direito (/<ph id="ph1">&amp;gt;</ph>) de um elemento de marcação de autofechamento.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd&gt;</ph> field is used by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method when constructing self-closing markup elements.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd&gt;</ph> campo é usado pelo <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> método ao construir elementos de marcação de fechamento automático.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd">
          <source>The following code example shows how to render the value of a custom <ph id="ph1">`FileName`</ph> property followed by a quotation mark and the characters represented by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd&gt;</ph> field.</source>
          <target state="translated">O exemplo de código a seguir mostra como renderizar o valor de um personalizado <ph id="ph1">`FileName`</ph> propriedade seguido por um sinal de aspas e caracteres representados pelo <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd&gt;</ph> campo.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd">
          <source>The code example calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method and passes the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd&gt;</ph> field as the parameter argument to close the element.</source>
          <target state="translated">O exemplo de código chama o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> método e passa o <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd&gt;</ph> campo como o argumento de parâmetro para fechar o elemento.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd">
          <source>This code example renders the <ph id="ph1">`FileName`</ph> property value, and then the following markup:</source>
          <target state="translated">Este exemplo de código renderiza o <ph id="ph1">`FileName`</ph> o valor da propriedade e, em seguida, a seguinte marcação:</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.SemicolonChar">
          <source>Represents the semicolon (;).</source>
          <target state="translated">Representa o ponto e vírgula (;).</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SemicolonChar">
          <source>Pass the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SemicolonChar&gt;</ph> field as the parameter argument in a <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method call when you want to render a semicolon from a custom control or adapter.</source>
          <target state="translated">Passar o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SemicolonChar&gt;</ph> campo como o argumento de parâmetro em um <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> chamada de método quando você deseja processar um ponto e vírgula de um controle personalizado ou um adaptador.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SemicolonChar">
          <source>The following code example demonstrates how to manually render a series of styles on a markup element.</source>
          <target state="translated">O exemplo de código a seguir demonstra como processar manualmente uma série de estilos em um elemento de marcação.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SemicolonChar">
          <source>The code example uses the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render <ph id="ph2">`font-size`</ph> and <ph id="ph3">`border-style`</ph> style attributes.</source>
          <target state="translated">O exemplo de código usa o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> método renderizar <ph id="ph2">`font-size`</ph> e <ph id="ph3">`border-style`</ph> atributos de estilo.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SemicolonChar">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SemicolonChar&gt;</ph> field is used as a parameter of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to separate the value of the <ph id="ph3">`font-size`</ph> attribute from the beginning of the <ph id="ph4">`border-style`</ph> attribute.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SemicolonChar&gt;</ph> campo é usado como um parâmetro do <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> método para separar o valor da <ph id="ph3">`font-size`</ph> atributo desde o início do <ph id="ph4">`border-style`</ph> atributo.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SemicolonChar">
          <source>This code example renders the following markup:</source>
          <target state="translated">Este exemplo de código renderiza a marcação a seguir:</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.SingleQuoteChar">
          <source>Represents an apostrophe (').</source>
          <target state="translated">Representa um apóstrofo (').</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SingleQuoteChar">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SingleQuoteChar&gt;</ph> field when it is necessary to render an apostrophe.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SingleQuoteChar&gt;</ph> campo quando é necessário processar um apóstrofo.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.SlashChar">
          <source>Represents the slash mark (/).</source>
          <target state="translated">Representa a marca de barra (/).</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SlashChar">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SlashChar&gt;</ph> field to render the slash marks when you write a URL.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SlashChar&gt;</ph> marca de campo para renderizar a barra quando você escreve uma URL.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SlashChar">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> method uses the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.SlashChar&gt;</ph> field when writing the closing tag of a markup element.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> método usa o <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.SlashChar&gt;</ph> campo ao gravar a marca de fechamento de um elemento de marcação.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SlashChar">
          <source>The following code example demonstrates how to manually render the <ph id="ph1">`src`</ph> attribute of an <ph id="ph2">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">O exemplo de código a seguir demonstra como processar manualmente o <ph id="ph1">`src`</ph> atributo de um <ph id="ph2">`&lt;img&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SlashChar">
          <source>The code example uses the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method with the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.SlashChar&gt;</ph> field as its parameter to render slash marks in the path that is applied to the <ph id="ph3">`src`</ph> attribute.</source>
          <target state="translated">O exemplo de código usa o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> método com o <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.SlashChar&gt;</ph> marca de campo como seu parâmetro para renderizar a barra no caminho que é aplicado para o <ph id="ph3">`src`</ph> atributo.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SlashChar">
          <source>This code example renders the following markup:</source>
          <target state="translated">Este exemplo de código renderiza a marcação a seguir:</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.SpaceChar">
          <source>Represents a space ( ) character.</source>
          <target state="translated">Representa um caractere de espaço ( ).</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SpaceChar">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SpaceChar&gt;</ph> field is used by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> methods when writing separators between elements and attributes.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SpaceChar&gt;</ph> campo é usado pelo <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> e <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> métodos ao escrever separadores entre elementos e atributos.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SpaceChar">
          <source>This section provides two code examples.</source>
          <target state="translated">Esta seção fornece dois exemplos de código.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SpaceChar">
          <source>The first one demonstrates how to create a character array.</source>
          <target state="translated">O primeiro deles demonstra como criar uma matriz de caracteres.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SpaceChar">
          <source>The second one demonstrates how to use the array.</source>
          <target state="translated">Segunda demonstra como usar a matriz.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SpaceChar">
          <source>These code examples generate the following markup:</source>
          <target state="translated">Esses exemplos de código geram a seguinte marcação:</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SpaceChar">
          <source>The following code example shows how to create a <ph id="ph1">&lt;xref:System.Char&gt;</ph> array that contains the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.SpaceChar&gt;</ph> field.</source>
          <target state="translated">O exemplo de código a seguir mostra como criar um <ph id="ph1">&lt;xref:System.Char&gt;</ph> matriz que contém o <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.SpaceChar&gt;</ph> campo.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SpaceChar">
          <source>The following code example shows how to use the array that was created in the preceding code example as a parameter when calling the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo de código a seguir mostra como usar a matriz que foi criada no exemplo de código anterior como um parâmetro ao chamar o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.StyleEqualsChar">
          <source>Represents the style equals (<ph id="ph1">&lt;see langword=":" /&gt;</ph>) character used to set style attributes equal to values.</source>
          <target state="translated">Representa o caractere de igual para estilo (<ph id="ph1">&lt;see langword=":" /&gt;</ph>) usado para definir atributos de estilo como iguais a determinados valores.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.StyleEqualsChar">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar&gt;</ph> field is used by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A&gt;</ph> method to delimit style names and values.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar&gt;</ph> campo é usado pelo <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A&gt;</ph> método para delimitar nomes e valores.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.StyleEqualsChar">
          <source>The following code example demonstrates how to render a <ph id="ph1">`FontWeight`</ph> attribute and value of <ph id="ph2">`bold`</ph> to the opening tag of an element.</source>
          <target state="translated">O exemplo de código a seguir demonstra como renderizar um <ph id="ph1">`FontWeight`</ph> atributo e valor de <ph id="ph2">`bold`</ph> para a marca de abertura de um elemento.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.StyleEqualsChar">
          <source>The code example uses the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method with the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar&gt;</ph> field as the parameter to render the character that sets the value of each style attribute.</source>
          <target state="translated">O exemplo de código usa o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> método com o <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar&gt;</ph> campo como o parâmetro para renderizar o caractere que define o valor de cada atributo de estilo.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.StyleEqualsChar">
          <source>This code example renders the following markup:</source>
          <target state="translated">Este exemplo de código renderiza a marcação a seguir:</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" uid="P:System.Web.UI.HtmlTextWriter.TagKey">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> value for the specified markup element.</source>
          <target state="translated">Obtém ou define o valor <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> para o elemento de marcação especificado.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagKey">
          <source>The markup element that is having its opening tag rendered.</source>
          <target state="translated">O elemento de marcação que tem sua marca de abertura processada.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagKey">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagKey%2A&gt;</ph> property is of use only to classes that inherit from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagKey%2A&gt;</ph> propriedade será usado somente para classes que herdam o <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagKey">
          <source>You should read or set the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagKey%2A&gt;</ph> property only in a call to the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method; this is the only time it is set to a consistent value.</source>
          <target state="translated">Você deve ler ou definir o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagKey%2A&gt;</ph> propriedade somente em uma chamada para o <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> método; este é o único momento em que ele é definido como um valor consistente.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagKey">
          <source>The following code example demonstrates an overridden version of the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A&gt;</ph> method in a class that derives from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class.</source>
          <target state="translated">O exemplo de código a seguir demonstra uma versão de substituição de <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A&gt;</ph> método em uma classe que deriva de <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagKey">
          <source>It uses the value of the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagKey%2A&gt;</ph> property to determine whether a server control using the custom <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> object is rendering a <ph id="ph3">`&lt;label&gt;`</ph> markup element.</source>
          <target state="translated">Ele usa o valor da <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagKey%2A&gt;</ph> propriedade para determinar se um controle de servidor usando personalizado <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> objeto estiver renderizando um <ph id="ph3">`&lt;label&gt;`</ph> elemento de marcação.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagKey">
          <source>If it is, a <ph id="ph1">`&lt;font&gt;`</ph> element with a <ph id="ph2">`color`</ph> attribute set to <ph id="ph3">`red`</ph> is returned to modify the formatting of the <ph id="ph4">`&lt;label&gt;`</ph> element's text.</source>
          <target state="translated">Se for, um <ph id="ph1">`&lt;font&gt;`</ph> elemento com um <ph id="ph2">`color`</ph> atributo definido como <ph id="ph3">`red`</ph> é retornado para modificar a formatação do <ph id="ph4">`&lt;label&gt;`</ph> texto do elemento.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" uid="P:System.Web.UI.HtmlTextWriter.TagKey">
          <source>The property value cannot be set.</source>
          <target state="translated">O valor da propriedade não pode ser definido.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.TagLeftChar">
          <source>Represents the opening angle bracket (<ph id="ph1">&amp;lt;</ph>) of a markup tag.</source>
          <target state="translated">Representa o colchete angular de abertura (<ph id="ph1">&amp;lt;</ph>) de uma marca de marcação.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.TagLeftChar">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagLeftChar&gt;</ph> field is used by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> methods when writing markup tags.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagLeftChar&gt;</ph> campo é usado pelo <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A&gt;</ph>, e <ph id="ph5">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> métodos durante a gravação de marcas.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.TagLeftChar">
          <source>The following code example renders the first character of the opening tag of a <ph id="ph1">`&lt;table&gt;`</ph> element with the element name.</source>
          <target state="translated">O exemplo de código a seguir processa o primeiro caractere da tag de abertura de um <ph id="ph1">`&lt;table&gt;`</ph> elemento com o nome do elemento.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.TagLeftChar">
          <source>The code example uses the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method with the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.TagLeftChar&gt;</ph> field as a parameter.</source>
          <target state="translated">O exemplo de código usa o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> método com o <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.TagLeftChar&gt;</ph> campo como um parâmetro.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.TagLeftChar">
          <source>This code example renders the following markup:</source>
          <target state="translated">Este exemplo de código renderiza a marcação a seguir:</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" uid="P:System.Web.UI.HtmlTextWriter.TagName">
          <source>Gets or sets the tag name of the markup element being rendered.</source>
          <target state="translated">Obtém ou define o nome da marca do elemento de marcação que está sendo renderizado.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagName">
          <source>The tag name of the markup element being rendered.</source>
          <target state="translated">O nome da marca do elemento de marcação que está sendo processado.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagName">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagName%2A&gt;</ph> property is of use only to classes that inherit from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagName%2A&gt;</ph> propriedade será usado somente para classes que herdam o <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagName">
          <source>You should read or set the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagName%2A&gt;</ph> property only in <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method calls; this is the only time it is set to a consistent value.</source>
          <target state="translated">Você deve ler ou definir o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagName%2A&gt;</ph> propriedade apenas no <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> chamadas de método; este é o único momento em que ele é definido como um valor consistente.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagName">
          <source>The following code example demonstrates an overridden version of the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A&gt;</ph> method in a class that derives from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class.</source>
          <target state="translated">O exemplo de código a seguir demonstra uma versão de substituição de <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A&gt;</ph> método em uma classe que deriva de <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagName">
          <source>The code example checks whether the element to render is a <ph id="ph1">`&lt;label&gt;`</ph> element by calling the <ph id="ph2">&lt;xref:System.String.Compare%2A?displayProperty=nameWithType&gt;</ph> method, and then passing the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.TagName%2A&gt;</ph> property value and a string, <ph id="ph4">`"label"`</ph>, as the parameter arguments.</source>
          <target state="translated">O exemplo de código verifica se o elemento para renderizar um <ph id="ph1">`&lt;label&gt;`</ph> elemento chamando o <ph id="ph2">&lt;xref:System.String.Compare%2A?displayProperty=nameWithType&gt;</ph> método e, em seguida, passando o <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.TagName%2A&gt;</ph> o valor da propriedade e uma cadeia de caracteres <ph id="ph4">`"label"`</ph>, como os argumentos de parâmetro.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagName">
          <source>If a <ph id="ph1">`&lt;label&gt;`</ph> element is about to be rendered, the opening tag of a <ph id="ph2">`&lt;font&gt;`</ph> element, with a <ph id="ph3">`color`</ph> attribute set to <ph id="ph4">`red`</ph>, is rendered before the <ph id="ph5">`&lt;label&gt;`</ph> element's opening tag.</source>
          <target state="translated">Se um <ph id="ph1">`&lt;label&gt;`</ph> elemento está prestes a ser renderizado, a marca de abertura de um <ph id="ph2">`&lt;font&gt;`</ph> elemento, com um <ph id="ph3">`color`</ph> atributo definido como <ph id="ph4">`red`</ph>, é processada antes do <ph id="ph5">`&lt;label&gt;`</ph> marcas de abertura do elemento.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagName">
          <source>If the element to render is not a <ph id="ph1">`&lt;label&gt;`</ph> element, the base class's version of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A&gt;</ph> method is called.</source>
          <target state="translated">Se o elemento para renderizar não é um <ph id="ph1">`&lt;label&gt;`</ph> elemento, a versão da classe base do <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A&gt;</ph> método é chamado.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.TagRightChar">
          <source>Represents the closing angle bracket (<ph id="ph1">&amp;gt;</ph>) of a markup tag.</source>
          <target state="translated">Representa o colchete angular de fechamento (<ph id="ph1">&amp;gt;</ph>) de uma marca de marcação.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.TagRightChar">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagRightChar&gt;</ph> field is used by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> methods when writing markup tags.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagRightChar&gt;</ph> campo é usado pelo <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A&gt;</ph>, e <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> métodos durante a gravação de marcas.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.TagRightChar">
          <source>The following code example shows how to render the closing tag of a <ph id="ph1">`&lt;table&gt;`</ph> element by making calls to overloads of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo de código a seguir mostra como renderizar a marcação de fechamento de um <ph id="ph1">`&lt;table&gt;`</ph> elemento fazendo chamadas para as sobrecargas do <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.TagRightChar">
          <source>To render the final character of the tag, the code example uses the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method with the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.TagRightChar&gt;</ph> field as a parameter.</source>
          <target state="translated">Para renderizar o caractere final da marca, o exemplo de código usa o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> método com o <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.TagRightChar&gt;</ph> campo como um parâmetro.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.TagRightChar">
          <source>This code example renders the following markup:</source>
          <target state="translated">Este exemplo de código renderiza a marcação a seguir:</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Writes the specified data type to the output stream, along with any pending tab spacing.</source>
          <target state="translated">Grava o tipo de dados especificado no fluxo de saída, juntamente a qualquer espaçamento de tabulação pendente.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> to write to the output stream.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> a gravar no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Boolean)">
          <source>Writes the text representation of a Boolean value to the output stream, along with any pending tab spacing.</source>
          <target state="translated">Grava a representação de texto de um valor booliano no fluxo de saída, juntamente com qualquer espaçamento de guia pendente.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> método gera qualquer guias que estão pendentes e, em seguida, chama o <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> método de base.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char)">
          <source>The Unicode character to write to the output stream.</source>
          <target state="translated">O caractere Unicode a gravar no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char)">
          <source>Writes the text representation of a Unicode character to the output stream, along with any pending tab spacing.</source>
          <target state="translated">Grava a representação de texto de um caractere Unicode no fluxo de saída, juntamente com qualquer espaçamento de guia pendente.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> método gera qualquer guias que estão pendentes e, em seguida, chama o <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> método de base.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char)">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to end the opening tag of an <ph id="ph2">`&lt;img&gt;`</ph> element by using the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.TagRightChar&gt;</ph> constant.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> método para encerrar a marca de abertura de um <ph id="ph2">`&lt;img&gt;`</ph> elemento usando o <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.TagRightChar&gt;</ph> constante.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char)">
          <source>This code example renders the following markup:</source>
          <target state="translated">Este exemplo de código renderiza a marcação a seguir:</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])">
          <source>The array of Unicode characters to write to the output stream.</source>
          <target state="translated">A matriz de caracteres Unicode a gravar no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])">
          <source>Writes the text representation of an array of Unicode characters to the output stream, along with any pending tab spacing.</source>
          <target state="translated">Grava a representação de texto de uma matriz de caracteres Unicode no fluxo de saída, juntamente com qualquer espaçamento de guia pendente.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> método gera qualquer guias que estão pendentes e, em seguida, chama o <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> método de base.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])">
          <source>This section provides two code examples.</source>
          <target state="translated">Esta seção fornece dois exemplos de código.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])">
          <source>The first one demonstrates how to create an array of characters.</source>
          <target state="translated">O primeiro deles demonstra como criar uma matriz de caracteres.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])">
          <source>The second one demonstrates how to use the array.</source>
          <target state="translated">Segunda demonstra como usar a matriz.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])">
          <source>These code examples generate the following markup:</source>
          <target state="translated">Esses exemplos de código geram a seguinte marcação:</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])">
          <source>The following code example demonstrates how to create an array of characters that spell out <ph id="ph1">`hello world`</ph>.</source>
          <target state="translated">O exemplo de código a seguir demonstra como criar uma matriz de caracteres que digitar <ph id="ph1">`hello world`</ph>.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])">
          <source>Included in the array is the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SpaceChar&gt;</ph> field, which creates a space between the two words.</source>
          <target state="translated">Incluído na matriz é o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SpaceChar&gt;</ph> campo, o que cria um espaço entre as duas palavras.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render the <ph id="ph2">`hello world`</ph> character array created in the preceding code example to a page, when the control that contains this example code is included in a page.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> método para renderizar o <ph id="ph2">`hello world`</ph> matriz de caracteres criada no exemplo de código anterior para uma página, quando o controle que contém esse código de exemplo é incluído em uma página.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Double)">
          <source>The double-precision floating-point number to write to the output stream.</source>
          <target state="translated">O número de ponto flutuante de precisão dupla para gravar no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Double)">
          <source>Writes the text representation of a double-precision floating-point number to the output stream, along with any pending tab spacing.</source>
          <target state="translated">Grava a representação de texto de um número de ponto flutuante de precisão dupla no fluxo de saída, juntamente com qualquer espaçamento de guia pendente.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Double)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> método gera qualquer guias que estão pendentes e, em seguida, chama o <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> método de base.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Double)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render the value of the <ph id="ph2">&lt;xref:System.Double.MaxValue?displayProperty=nameWithType&gt;</ph> field.</source>
          <target state="translated">O exemplo de código a seguir mostra como usar o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> método para renderizar o valor da <ph id="ph2">&lt;xref:System.Double.MaxValue?displayProperty=nameWithType&gt;</ph> campo.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Double)">
          <source>This code example generates the following markup:</source>
          <target state="translated">Este exemplo de código gera a seguinte marcação:</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Int32)">
          <source>The 32-byte signed integer to write to the output stream.</source>
          <target state="translated">O inteiro com sinal de 32 bytes a gravar no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Int32)">
          <source>Writes the text representation of a 32-byte signed integer to the output stream, along with any pending tab spacing.</source>
          <target state="translated">Grava a representação de texto de um inteiro com sinal de 32 bytes no fluxo de saída, juntamente com qualquer espaçamento de guia pendente.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> método gera qualquer guias que estão pendentes e, em seguida, chama o <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> método de base.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Int64)">
          <source>The 64-byte signed integer to write to the output stream.</source>
          <target state="translated">O inteiro com sinal de 64 bytes a gravar no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Int64)">
          <source>Writes the text representation of a 64-byte signed integer to the output stream, along with any pending tab spacing.</source>
          <target state="translated">Grava a representação de texto de um inteiro com sinal de 64 bytes no fluxo de saída, juntamente com qualquer espaçamento de guia pendente.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Int64)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> método gera qualquer guias que estão pendentes e, em seguida, chama o <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> método de base.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Object)">
          <source>The object to write to the output stream.</source>
          <target state="translated">O objeto a ser gravado no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Object)">
          <source>Writes the text representation of an object to the output stream, along with any pending tab spacing.</source>
          <target state="translated">Grava a representação de texto de um objeto no fluxo de saída, juntamente com qualquer espaçamento de guia pendente.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> método gera qualquer guias que estão pendentes e, em seguida, chama o <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> método de base.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Object)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render the value of the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">O exemplo de código a seguir mostra como usar o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> método para renderizar o valor da <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Object)">
          <source>This code example generates the following markup:</source>
          <target state="translated">Este exemplo de código gera a seguinte marcação:</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Object)">
          <source>The value of the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph> property:</source>
          <target state="translated">O valor de <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph> propriedade:</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Single)">
          <source>The single-precision floating-point number to write to the output stream.</source>
          <target state="translated">O número de ponto flutuante de precisão simples para gravar no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Single)">
          <source>Writes the text representation of a single-precision floating-point number to the output stream, along with any pending tab spacing.</source>
          <target state="translated">Grava a representação de texto de um número de ponto flutuante de precisão simples no fluxo de saída, juntamente com qualquer espaçamento de guia pendente.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Single)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> método gera qualquer guias que estão pendentes e, em seguida, chama o <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> método de base.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Single)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render the value of the <ph id="ph2">&lt;xref:System.Single.Epsilon?displayProperty=nameWithType&gt;</ph> field, which is the smallest possible value of the <ph id="ph3">&lt;xref:System.Single&gt;</ph> structure.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> método para renderizar o valor da <ph id="ph2">&lt;xref:System.Single.Epsilon?displayProperty=nameWithType&gt;</ph> campo, que é o menor valor possível do <ph id="ph3">&lt;xref:System.Single&gt;</ph> estrutura.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Single)">
          <source>This code example generates the following markup:</source>
          <target state="translated">Este exemplo de código gera a seguinte marcação:</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String)">
          <source>The string to write to the output stream.</source>
          <target state="translated">A cadeia de caracteres a ser gravada no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String)">
          <source>Writes the specified string to the output stream, along with any pending tab spacing.</source>
          <target state="translated">Grava a cadeia de caracteres especificada no fluxo de saída, juntamente a qualquer espaçamento de tabulação pendente.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> método gera qualquer guias que estão pendentes e, em seguida, chama o <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> método de base.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render a string between the opening and closing tags of a custom markup element.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> método para processar uma cadeia de caracteres entre a marcas de abertura e fechamento de um elemento de marcação personalizada.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String)">
          <source>This code example generates the following markup:</source>
          <target state="translated">Este exemplo de código gera a seguinte marcação:</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object)">
          <source>A string that contains zero or more format items.</source>
          <target state="translated">Uma cadeia de caracteres que contém zero ou mais itens de formato.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object)">
          <source>An object to format.</source>
          <target state="translated">Um objeto a ser formatado.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object)">
          <source>Writes a tab string and a formatted string to the output stream, using the same semantics as the <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object)" /&gt;</ph> method, along with any pending tab spacing.</source>
          <target state="translated">Grava uma cadeia de caracteres de guia e uma cadeia de caracteres formatada no fluxo de saída, usando a mesma semântica do método <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object)" /&gt;</ph>, juntamente com qualquer espaçamento de guia pendente.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> método gera qualquer guias que estão pendentes e, em seguida, chama o <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> método de base.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render a formatted string with the value of the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph> property.</source>
          <target state="translated">O exemplo de código a seguir mostra como usar o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> método para processar uma cadeia de caracteres formatada com o valor de <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])">
          <source>A string that contains zero or more format items.</source>
          <target state="translated">Uma cadeia de caracteres que contém zero ou mais itens de formato.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])">
          <source>An object array to format.</source>
          <target state="translated">Uma matriz de objeto a ser formatada.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])">
          <source>Writes a formatted string that contains the text representation of an object array to the output stream, along with any pending tab spacing.</source>
          <target state="translated">Grava uma cadeia de caracteres formatada que contém a representação de texto de uma matriz de objeto para o fluxo de saída, juntamente com qualquer espaçamento de guia pendente.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])">
          <source>This method uses the same semantics as the <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object[])" /&gt;</ph> method.</source>
          <target state="translated">Esse método usa a mesma semântica do método <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object[])" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> método gera qualquer guias que estão pendentes e, em seguida, chama o <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> método de base.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])">
          <source>This section contains two code examples.</source>
          <target state="translated">Esta seção contém dois exemplos de código.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])">
          <source>The first one demonstrates how to render a formatted string and the contents of an array.</source>
          <target state="translated">O primeiro deles demonstra como renderizar o conteúdo de uma matriz e de uma cadeia de caracteres formatada.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])">
          <source>The second one demonstrates how to declare the array.</source>
          <target state="translated">Segunda demonstra como declarar a matriz.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render a formatted string and the contents of an object array, named <ph id="ph2">`curPriceTime`</ph>.</source>
          <target state="translated">O exemplo de código a seguir mostra como usar o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> método para processar uma cadeia de caracteres formatada e o conteúdo de uma matriz de objetos, denominado <ph id="ph2">`curPriceTime`</ph>.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])">
          <source>The method call renders the second member of the array before it renders the first member.</source>
          <target state="translated">A chamada do método renderiza o segundo membro de matriz antes de ele processa o primeiro membro.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])">
          <source>The following code example demonstrates declaring the <ph id="ph1">`curPriceTime`</ph> object array.</source>
          <target state="translated">O exemplo de código a seguir demonstra declarando o <ph id="ph1">`curPriceTime`</ph> matriz de objetos.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The array of characters from which to write text to the output stream.</source>
          <target state="translated">A matriz de caracteres da qual gravar texto no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The index location in the array where writing begins.</source>
          <target state="translated">O local do índice na matriz no qual a leitura começa.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to write to the output stream.</source>
          <target state="translated">O número de caracteres a gravar no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>Writes the text representation of a subarray of Unicode characters to the output stream, along with any pending tab spacing.</source>
          <target state="translated">Grava a representação de texto de uma submatriz de caracteres Unicode no fluxo de saída, juntamente com qualquer espaçamento de guia pendente.</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> método gera qualquer guias que estão pendentes e, em seguida, chama o <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> método de base.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>This section provides two code examples.</source>
          <target state="translated">Esta seção fornece dois exemplos de código.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The first one demonstrates how to create a character array.</source>
          <target state="translated">O primeiro deles demonstra como criar uma matriz de caracteres.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The second one demonstrates how to use the array.</source>
          <target state="translated">Segunda demonstra como usar a matriz.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>These code examples generate the following markup:</source>
          <target state="translated">Esses exemplos de código geram a seguinte marcação:</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The following code example shows how to create an array of characters that spell out <ph id="ph1">`hello world`</ph>.</source>
          <target state="translated">O exemplo de código a seguir mostra como criar uma matriz de caracteres que digitar <ph id="ph1">`hello world`</ph>.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>Included in the array is the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SpaceChar&gt;</ph> field, which creates a space between the two words.</source>
          <target state="translated">Incluído na matriz é o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SpaceChar&gt;</ph> campo, o que cria um espaço entre as duas palavras.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The following portion of the code example uses the <ph id="ph1">`index`</ph> and <ph id="ph2">`count`</ph> parameters of the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render the first five characters of the array created in the preceding example.</source>
          <target state="translated">A parte seguinte do exemplo de código usa o <ph id="ph1">`index`</ph> e <ph id="ph2">`count`</ph> parâmetros o <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> método para processar os primeiros cinco caracteres da matriz criada no exemplo anterior.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object,System.Object)">
          <source>A string that contains zero or more format items.</source>
          <target state="translated">Uma cadeia de caracteres que contém zero ou mais itens de formato.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object,System.Object)">
          <source>An object to format.</source>
          <target state="translated">Um objeto a ser formatado.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object,System.Object)">
          <source>An object to format.</source>
          <target state="translated">Um objeto a ser formatado.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object,System.Object)">
          <source>Writes a formatted string that contains the text representation of two objects to the output stream, along with any pending tab spacing.</source>
          <target state="translated">Grava uma cadeia de caracteres formatada que contém a representação de texto de dois objetos no fluxo de saída, juntamente com qualquer espaçamento de guia pendente.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object,System.Object)">
          <source>This method uses the same semantics as the <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object,System.Object)" /&gt;</ph> method.</source>
          <target state="translated">Esse método usa a mesma semântica do método <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> método gera qualquer guias que estão pendentes e, em seguida, chama o <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> método de base.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object,System.Object)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render a formatted string and the values of the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.DateTime.Today%2A&gt;</ph> properties.</source>
          <target state="translated">O exemplo de código a seguir mostra como usar o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> método para processar uma cadeia de caracteres formatada e os valores de <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph> e <ph id="ph3">&lt;xref:System.DateTime.Today%2A&gt;</ph> propriedades.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Writes a markup attribute and its value to the output stream.</source>
          <target state="translated">Grava um atributo de marcação e seu valor no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>The attribute to write to the output stream.</source>
          <target state="translated">O atributo a ser gravado no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>The value assigned to the attribute.</source>
          <target state="translated">O valor atribuído ao atributo.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>Writes the specified markup attribute and value to the output stream.</source>
          <target state="translated">Grava o atributo de marcação e o valor especificados no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> method to write markup attributes and their values with no encoding.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> método grave marcação atributos e seus valores sem codificação.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> method writes the attribute value enclosed in double quotation marks (").</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> método grava o valor de atributo entre aspas duplas (").</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>If <ph id="ph1">`value`</ph> is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> method writes only the attribute name.</source>
          <target state="translated">Se <ph id="ph1">`value`</ph> é <ph id="ph2">`null`</ph>, o <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> método grava apenas o nome do atributo.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>The following code example demonstrates rendering an <ph id="ph1">`&lt;img&gt;`</ph> element in which both overloads of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> method are called.</source>
          <target state="translated">O exemplo de código a seguir demonstra o processamento de um <ph id="ph1">`&lt;img&gt;`</ph> elemento no qual as duas sobrecargas do <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> são chamadas de método.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>The code example uses the following process:</source>
          <target state="translated">O exemplo de código usa o seguinte processo:</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> method, which renders the opening characters of the element.</source>
          <target state="translated">Chama o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> método, que renderiza os caracteres de abertura do elemento.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29&gt;</ph> overload, which writes an <ph id="ph2">`alt`</ph> attribute and its value to the <ph id="ph3">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">Chamadas de <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29&gt;</ph> sobrecarga, que grava um <ph id="ph2">`alt`</ph> atributo e seu valor para o <ph id="ph3">`&lt;img&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> overload to render a custom <ph id="ph2">`myattribute`</ph> attribute, with a value of <ph id="ph3">`No "encoding" required`</ph>, and then sets <ph id="ph4">`fEncode`</ph> to <ph id="ph5">`false`</ph>.</source>
          <target state="translated">Chamadas de <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> sobrecarga para renderizar um personalizado <ph id="ph2">`myattribute`</ph> atributo, com um valor de <ph id="ph3">`No "encoding" required`</ph>e, em seguida, define <ph id="ph4">`fEncode`</ph> para <ph id="ph5">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>Closes the opening tag of the element, and then calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> method to close the <ph id="ph2">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">Fecha a marca de abertura do elemento e, em seguida, chama o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> método para fechar o <ph id="ph2">`&lt;img&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>This code example generates the following markup:</source>
          <target state="translated">Este exemplo de código gera a seguinte marcação:</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>In derived classes, you can override the <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" /&gt;</ph> method to define custom rules for writing attributes and their values.</source>
          <target state="translated">Em classes derivadas, você pode substituir o <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" /&gt;</ph> método para definir regras personalizadas para gravar os atributos e seus valores.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>For example, you could write code that allowed the <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" /&gt;</ph> method to write an attribute with an empty value.</source>
          <target state="translated">Por exemplo, você poderia escrever código que é permitido o <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" /&gt;</ph> método gravar um atributo com um valor vazio.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>The markup attribute to write to the output stream.</source>
          <target state="translated">O atributo de marcação a gravar no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>The value assigned to the attribute.</source>
          <target state="translated">O valor atribuído ao atributo.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to encode the attribute and its assigned value; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para codificar o atributo e seu valor atribuído; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>Writes the specified markup attribute and value to the output stream, and, if specified, writes the value encoded.</source>
          <target state="translated">Grava o atributo de marcação e o valor especificados no fluxo de saída e, se especificado, grava o valor codificado.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> method to write markup attributes and their values with or without encoding.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> método para gravar os atributos de marcação e seus valores, com ou sem codificação.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> method uses the <ph id="ph2">&lt;xref:System.Web.HttpUtility.HtmlAttributeEncode%2A&gt;</ph> method to do the encoding.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> método usa o <ph id="ph2">&lt;xref:System.Web.HttpUtility.HtmlAttributeEncode%2A&gt;</ph> método para fazer a codificação.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> method writes the attribute value enclosed in double quotation marks (").</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> método grava o valor de atributo entre aspas duplas (").</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>If <ph id="ph1">`value`</ph> is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> method writes only the attribute name.</source>
          <target state="translated">Se <ph id="ph1">`value`</ph> é <ph id="ph2">`null`</ph>, o <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> método grava apenas o nome do atributo.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>The following code example demonstrates rendering an <ph id="ph1">`&lt;img&gt;`</ph> element in which both overloads of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> method are called.</source>
          <target state="translated">O exemplo de código a seguir demonstra o processamento de um <ph id="ph1">`&lt;img&gt;`</ph> elemento no qual as duas sobrecargas do <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> são chamadas de método.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>The code example uses the following process:</source>
          <target state="translated">O exemplo de código usa o seguinte processo:</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> method, which renders the opening characters of the element.</source>
          <target state="translated">Chama o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> método, que renderiza os caracteres de abertura do elemento.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29&gt;</ph> overload, which writes an <ph id="ph2">`alt`</ph> attribute and its value to the <ph id="ph3">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">Chamadas de <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29&gt;</ph> sobrecarga, que grava um <ph id="ph2">`alt`</ph> atributo e seu valor para o <ph id="ph3">`&lt;img&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> overload to render a custom <ph id="ph2">`myattribute`</ph> attribute, with a value of <ph id="ph3">`No "encoding" required`</ph>, and then sets <ph id="ph4">`fEncode`</ph> to <ph id="ph5">`false`</ph>.</source>
          <target state="translated">Chamadas de <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> sobrecarga para renderizar um personalizado <ph id="ph2">`myattribute`</ph> atributo, com um valor de <ph id="ph3">`No "encoding" required`</ph>e, em seguida, define <ph id="ph4">`fEncode`</ph> para <ph id="ph5">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>Closes the opening tag of the element, and then calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> method to close the <ph id="ph2">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">Fecha a marca de abertura do elemento e, em seguida, chama o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> método para fechar o <ph id="ph2">`&lt;img&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>This code example generates the following markup:</source>
          <target state="translated">Este exemplo de código gera a seguinte marcação:</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>In derived classes, you can override the <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" /&gt;</ph> method to define custom rules for writing attributes and their values.</source>
          <target state="translated">Em classes derivadas, você pode substituir o <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" /&gt;</ph> método para definir regras personalizadas para gravar os atributos e seus valores.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>For example, you could write code that allowed the <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" /&gt;</ph> method to write an attribute with an empty value.</source>
          <target state="translated">Por exemplo, você poderia escrever código que é permitido o <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" /&gt;</ph> método gravar um atributo com um valor vazio.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>The markup element of which to write the opening tag.</source>
          <target state="translated">O elemento de marcação do qual gravar a marca de abertura.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>Writes any tab spacing and the opening tag of the specified markup element to the output stream.</source>
          <target state="translated">Grava qualquer espaçamento de tabulação e a marca de abertura do elemento de marcação especificado no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> method does not write the closing angle bracket (&gt;) of the markup element's opening tag.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> método não grava o colchete (&gt;) da tag de abertura do elemento de marcação.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>This allows the writing of markup attributes to the opening tag of the element.</source>
          <target state="translated">Isso permite que a gravação de atributos de marcação para a marca de abertura do elemento.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagRightChar&gt;</ph> constant to close the opening tag when calling the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> method.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagRightChar&gt;</ph> constante para fechar a marca de abertura ao chamar o <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> method with the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd&gt;</ph> constant when you write markup elements that are self-closing.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> método com o <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd&gt;</ph> constante quando você escreve os elementos de marcação auto-encerramento.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> method is used by custom server controls that do not allow tag or attribute mapping and render markup elements in the same way for each request.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> método é usado por controles de servidor personalizado que não permite o mapeamento de atributo ou marca e renderizar elementos de marcação da mesma forma para cada solicitação.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>The following code example demonstrates rendering an <ph id="ph1">`&lt;img&gt;`</ph> element in which both overloads of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> method are called.</source>
          <target state="translated">O exemplo de código a seguir demonstra o processamento de um <ph id="ph1">`&lt;img&gt;`</ph> elemento no qual as duas sobrecargas do <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> são chamadas de método.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>The code example uses the following process:</source>
          <target state="translated">O exemplo de código usa o seguinte processo:</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> method, which renders the opening characters of the element.</source>
          <target state="translated">Chama o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> método, que renderiza os caracteres de abertura do elemento.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29&gt;</ph> overload, which writes an <ph id="ph2">`alt`</ph> attribute and its value to the <ph id="ph3">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">Chamadas de <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29&gt;</ph> sobrecarga, que grava um <ph id="ph2">`alt`</ph> atributo e seu valor para o <ph id="ph3">`&lt;img&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> overload to render a custom <ph id="ph2">`myattribute`</ph> attribute, with a value of <ph id="ph3">`No "encoding" required`</ph>, and then sets <ph id="ph4">`fEncode`</ph> to <ph id="ph5">`false`</ph>.</source>
          <target state="translated">Chamadas de <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> sobrecarga para renderizar um personalizado <ph id="ph2">`myattribute`</ph> atributo, com um valor de <ph id="ph3">`No "encoding" required`</ph>e, em seguida, define <ph id="ph4">`fEncode`</ph> para <ph id="ph5">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>Closes the opening tag of the element, and then calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> method to close the <ph id="ph2">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">Fecha a marca de abertura do elemento e, em seguida, chama o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> método para fechar o <ph id="ph2">`&lt;img&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>This code example generates the following markup:</source>
          <target state="translated">Este exemplo de código gera a seguinte marcação:</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteBreak">
          <source>Writes a <ph id="ph1">&lt;see langword="&amp;lt;br /&amp;gt;" /&gt;</ph> markup element to the output stream.</source>
          <target state="translated">Grava um elemento de marcação <ph id="ph1">&lt;see langword="&amp;lt;br /&amp;gt;" /&gt;</ph> no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBreak">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A&gt;</ph> method to render line breaks in custom control or adapter markup.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A&gt;</ph> método para processar a linha de quebra na marcação de controle ou o adaptador personalizada.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBreak">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A&gt;</ph> method writes a space between the <ph id="ph2">`br`</ph> and <ph id="ph3">`/`</ph> for improved HTML compatibility.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A&gt;</ph> método grava um espaço entre o <ph id="ph2">`br`</ph> e <ph id="ph3">`/`</ph> para maior compatibilidade HTML.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBreak">
          <source>The following code example shows how to call the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A&gt;</ph> method to write a <ph id="ph2">`&lt;br /&gt;`</ph> element to the requesting browser after the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A&gt;</ph> method writes the encoded <ph id="ph4">`&amp;lt;custID&amp;gt; &amp;amp; &amp;lt;invoice#&amp;gt;`</ph> markup.</source>
          <target state="translated">O exemplo de código a seguir mostra como chamar o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A&gt;</ph> método grave um <ph id="ph2">`&lt;br /&gt;`</ph> elemento para o navegador solicitante após o <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A&gt;</ph> método grava o codificado <ph id="ph4">`&amp;lt;custID&amp;gt; &amp;amp; &amp;lt;invoice#&amp;gt;`</ph> marcação.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)">
          <source>The text string to encode and write to the output stream.</source>
          <target state="translated">A cadeia de caracteres de texto a ser codificada e gravada no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)">
          <source>Encodes the specified text for the requesting device, and then writes it to the output stream.</source>
          <target state="translated">Codifica o texto especificado para o dispositivo solicitante e, em seguida, grava-o no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A&gt;</ph> method when a string contains angle brackets (<ph id="ph2">\&lt;</ph> or &gt;) or an ampersand (&amp;).</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A&gt;</ph> método quando uma cadeia de caracteres contiver colchetes angulares (<ph id="ph2">\&lt;</ph> ou &gt;) ou um e comercial (&amp;).</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A&gt;</ph> method uses the <ph id="ph2">&lt;xref:System.Web.HttpUtility.HtmlEncode%2A&gt;</ph> method to perform the encoding and also converts Unicode character <ph id="ph3">`00A0`</ph> to <ph id="ph4">`&amp;nbsp;`</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A&gt;</ph> método usa o <ph id="ph2">&lt;xref:System.Web.HttpUtility.HtmlEncode%2A&gt;</ph> método para executar a codificação e também converte caracteres Unicode <ph id="ph3">`00A0`</ph> para <ph id="ph4">`&amp;nbsp;`</ph>.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A&gt;</ph> method to write the encoded markup <ph id="ph2">`&amp;lt;custID&amp;gt; &amp;amp; &amp;lt;invoice#&amp;gt;`</ph> to the output stream.</source>
          <target state="translated">O exemplo de código a seguir mostra como usar o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A&gt;</ph> método grave a marcação codificada <ph id="ph2">`&amp;lt;custID&amp;gt; &amp;amp; &amp;lt;invoice#&amp;gt;`</ph> ao fluxo de saída.</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A&gt;</ph> method writes <ph id="ph2">`&lt;br /&gt;`</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A&gt;</ph> gravações de método <ph id="ph2">`&lt;br /&gt;`</ph>.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)">
          <source><ph id="ph1">&lt;paramref name="text" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="text" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)">
          <source>The URL string to encode and write to the output stream.</source>
          <target state="translated">A cadeia de caracteres de URL a codificar e a gravar no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)">
          <source>Encodes the specified URL, and then writes it to the output stream.</source>
          <target state="translated">Codifica a URL especificada e grava-a no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)">
          <source>The URL might include parameters.</source>
          <target state="translated">A URL pode incluir parâmetros.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A&gt;</ph> method encodes the string in the <ph id="ph2">`url`</ph> parameter in accordance with the specification for URL encoding.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A&gt;</ph> método codifica a cadeia de caracteres no <ph id="ph2">`url`</ph> parâmetro de acordo com a especificação de codificação de URL.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)">
          <source>The parameters that follow the question mark (?) delimiter are not encoded.</source>
          <target state="translated">Os parâmetros que seguem o delimitador de ponto de interrogação (?) não são codificados.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A&gt;</ph> method, which generates the following output:</source>
          <target state="translated">O exemplo de código a seguir mostra como usar o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A&gt;</ph> método, que gera a seguinte saída:</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(System.String)">
          <source>The URL parameter string to encode and write to the output stream.</source>
          <target state="translated">A cadeia de caracteres de parâmetro de URL a codificar e a gravar no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(System.String)">
          <source>Encodes the specified URL parameter for the requesting device, and then writes it to the output stream.</source>
          <target state="translated">Codifica o parâmetro de URL especificado para o dispositivo solicitante e, em seguida, grava-o no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(System.String)">
          <source>Spaces in the parameter part of a URL are encoded as plus signs (+), and equal signs (=) are encoded as <ph id="ph1">`%3d`</ph>.</source>
          <target state="translated">Os espaços na parte do parâmetro de URL são codificados como sinais de adição (+) e sinais de igual (=) são codificados como <ph id="ph1">`%3d`</ph>.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(System.String)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A&gt;</ph> method, which generates the following output:</source>
          <target state="translated">O exemplo de código a seguir mostra como usar o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A&gt;</ph> método, que gera a seguinte saída:</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)">
          <source>The element to write the closing tag for.</source>
          <target state="translated">O elemento para o qual gravar a marca de fechamento.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)">
          <source>Writes any tab spacing and the closing tag of the specified markup element.</source>
          <target state="translated">Grava qualquer espaçamento de tabulação e a marca de fechamento do elemento de marcação especificado.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)">
          <source>Unlike the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> method has no logic to make the element end tag match the corresponding opening tag.</source>
          <target state="translated">Ao contrário de <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> método, o <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> método não tem lógica para fazer com que a marca de fim do elemento corresponde à marca de abertura correspondente.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)">
          <source>The following code example demonstrates rendering an <ph id="ph1">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">O exemplo de código a seguir demonstra o processamento de um <ph id="ph1">`&lt;img&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)">
          <source>The code example uses the following process:</source>
          <target state="translated">O exemplo de código usa o seguinte processo:</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> method to render the opening characters of the element.</source>
          <target state="translated">Chama o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> método para processar os caracteres de abertura do elemento.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)">
          <source>Calls the two overloads of the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> method to write attributes to the <ph id="ph2">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">Chama as duas sobrecargas do <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> método gravar atributos para o <ph id="ph2">`&lt;img&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> method to close the <ph id="ph2">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">Chamadas de <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> método para fechar o <ph id="ph2">`&lt;img&gt;`</ph> elemento.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)">
          <source>The element to write to the output stream.</source>
          <target state="translated">O elemento a gravar no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)">
          <source>Writes any tab spacing and the opening tag of the specified markup element to the output stream.</source>
          <target state="translated">Grava qualquer espaçamento de tabulação e a marca de abertura do elemento de marcação especificado no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A&gt;</ph> method automatically writes the closing angle bracket (&gt;) of the opening tag of the element, unlike the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> method, which does not write the closing angle bracket.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A&gt;</ph> automaticamente método grava o colchete angular de fechamento (&gt;) da tag de abertura do elemento, ao contrário de <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> método, que não grava o colchete angular de fechamento.</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)">
          <source>Use <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A&gt;</ph> for markup elements that have no attributes.</source>
          <target state="translated">Use <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A&gt;</ph> para elementos de marcação que não apresentam atributos.</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Writes data to an <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> output stream, as specified by the overloaded parameters, followed by a line terminator string.</source>
          <target state="translated">Grava dados em um fluxo de saída <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph>, conforme especificado pelos parâmetros sobrecarregados, seguidos por uma cadeia de caracteres de terminador de linha.</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>All versions of this method write any pending tab spacing to the output stream.</source>
          <target state="translated">Todas as versões desse método gravam qualquer espaçamento de guia pendente no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HtmlTextWriter">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">A cadeia de caracteres do terminador de linha padrão é um retorno de carro seguido por uma linha de feed ("\r\n").</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HtmlTextWriter">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> método base é usado para gravar o <ph id="ph2">`value`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine">
          <source>Writes a line terminator string to the output stream.</source>
          <target state="translated">Grava uma cadeia de caracteres de terminador de linha no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">A cadeia de caracteres do terminador de linha padrão é um retorno de carro seguido por uma linha de feed ("\r\n").</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine">
          <source>For more information, see <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph>.</source>
          <target state="translated">Para obter mais informações, consulte <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method to insert a line after an <ph id="ph2">`&lt;img&gt;`</ph> element is rendered.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> método para inserir uma linha após um <ph id="ph2">`&lt;img&gt;`</ph> elemento é processado.</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Boolean)">
          <source>The Boolean to write to the output stream.</source>
          <target state="translated">O booliano para gravar no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Boolean)">
          <source>Writes any pending tab spacing and the text representation of a Boolean value, followed by a line terminator string, to the output stream.</source>
          <target state="translated">Grava qualquer espaçamento de guia pendente e a representação de texto de um valor booliano, seguidos por uma cadeia de caracteres de terminador de linha, no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Boolean)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">A cadeia de caracteres do terminador de linha padrão é um retorno de carro seguido por uma linha de feed ("\r\n").</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> método base é usado para gravar o <ph id="ph2">`value`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char)">
          <source>The character to write to the output stream.</source>
          <target state="translated">O caractere a gravar no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char)">
          <source>Writes any pending tab spacing and a Unicode character, followed by a line terminator string, to the output stream.</source>
          <target state="translated">Grava qualquer espaçamento de guia pendente e um caractere Unicode, seguidos por uma cadeia de caracteres de terminador de linha, no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">A cadeia de caracteres do terminador de linha padrão é um retorno de carro seguido por uma linha de feed ("\r\n").</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> método base é usado para gravar o <ph id="ph2">`value`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])">
          <source>The character array to write to the output stream.</source>
          <target state="translated">A matriz de caracteres a gravar no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])">
          <source>Writes any pending tab spacing and an array of Unicode characters, followed by a line terminator string, to the output stream.</source>
          <target state="translated">Grava qualquer espaçamento de guia pendente e uma matriz de caracteres Unicode, seguidos por uma cadeia de caracteres de terminador de linha, no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">A cadeia de caracteres do terminador de linha padrão é um retorno de carro seguido por uma linha de feed ("\r\n").</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> método base é usado para gravar o <ph id="ph2">`value`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])">
          <source>This section provides two code examples.</source>
          <target state="translated">Esta seção fornece dois exemplos de código.</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])">
          <source>The first one demonstrates how to create an array.</source>
          <target state="translated">O primeiro deles demonstra como criar uma matriz.</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])">
          <source>The second one demonstrates how to use that array.</source>
          <target state="translated">Segunda demonstra como usar essa matriz.</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])">
          <source>These code examples generate the following markup:</source>
          <target state="translated">Esses exemplos de código geram a seguinte marcação:</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])">
          <source>The following code example shows how to create an array of characters that spell out <ph id="ph1">`hello world`</ph>.</source>
          <target state="translated">O exemplo de código a seguir mostra como criar uma matriz de caracteres que digitar <ph id="ph1">`hello world`</ph>.</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])">
          <source>Included in the array is the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SpaceChar&gt;</ph> field, which creates a space between the two words.</source>
          <target state="translated">Incluído na matriz é o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SpaceChar&gt;</ph> campo, o que cria um espaço entre as duas palavras.</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])">
          <source>The following code example renders the <ph id="ph1">`hello world`</ph> character array that was created in the preceding example by using the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method.</source>
          <target state="translated">O código a seguir exemplo processa o <ph id="ph1">`hello world`</ph> matriz de caracteres que foi criado no exemplo anterior usando o <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Double)">
          <source>The double-precision floating-point number to write to the output stream.</source>
          <target state="translated">O número de ponto flutuante de precisão dupla para gravar no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Double)">
          <source>Writes any pending tab spacing and the text representation of a double-precision floating-point number, followed by a line terminator string, to the output stream.</source>
          <target state="translated">Grava qualquer espaçamento de guia pendente e a representação de texto de um número de ponto flutuante de precisão dupla, seguidos por uma cadeia de caracteres de terminador de linha, no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Double)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">A cadeia de caracteres do terminador de linha padrão é um retorno de carro seguido por uma linha de feed ("\r\n").</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Double)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> método base é usado para gravar o <ph id="ph2">`value`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Double)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method to render the value of the <ph id="ph2">&lt;xref:System.Double.MaxValue?displayProperty=nameWithType&gt;</ph> field.</source>
          <target state="translated">O exemplo de código a seguir mostra como usar o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> método para renderizar o valor da <ph id="ph2">&lt;xref:System.Double.MaxValue?displayProperty=nameWithType&gt;</ph> campo.</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Double)">
          <source>This code example generates the following markup:</source>
          <target state="translated">Este exemplo de código gera a seguinte marcação:</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int32)">
          <source>The 32-byte signed integer to write to the output stream.</source>
          <target state="translated">O inteiro com sinal de 32 bytes a gravar no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int32)">
          <source>Writes any pending tab spacing and the text representation of a 32-byte signed integer, followed by a line terminator string, to the output stream.</source>
          <target state="translated">Grava qualquer espaçamento de guia pendente e a representação de texto de um inteiro com sinal de 32 bytes, seguidos por uma cadeia de caracteres de terminador de linha, no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int32)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">A cadeia de caracteres do terminador de linha padrão é um retorno de carro seguido por uma linha de feed ("\r\n").</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> método base é usado para gravar o <ph id="ph2">`value`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int64)">
          <source>The 64-byte signed integer to write to the output stream.</source>
          <target state="translated">O inteiro com sinal de 64 bytes a gravar no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int64)">
          <source>Writes any pending tab spacing and the text representation of a 64-byte signed integer, followed by a line terminator string, to the output stream.</source>
          <target state="translated">Grava qualquer espaçamento de guia pendente e a representação de texto de um inteiro com sinal de 64 bytes, seguidos por uma cadeia de caracteres de terminador de linha, no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int64)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">A cadeia de caracteres do terminador de linha padrão é um retorno de carro seguido por uma linha de feed ("\r\n").</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int64)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> método base é usado para gravar o <ph id="ph2">`value`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Object)">
          <source>The object to write to the output stream.</source>
          <target state="translated">O objeto a ser gravado no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Object)">
          <source>Writes any pending tab spacing and the text representation of an object, followed by a line terminator string, to the output stream.</source>
          <target state="translated">Grava qualquer espaçamento de guia pendente e a representação de texto de um objeto, seguidos por uma cadeia de caracteres de terminador de linha, no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Object)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">A cadeia de caracteres do terminador de linha padrão é um retorno de carro seguido por uma linha de feed ("\r\n").</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> método base é usado para gravar o <ph id="ph2">`value`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Object)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method to render the value of the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType&gt;</ph> property to a control.</source>
          <target state="translated">O exemplo de código a seguir mostra como usar o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> método para renderizar o valor da <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType&gt;</ph> propriedade para um controle.</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Single)">
          <source>The single-precision floating point number to write to the output stream.</source>
          <target state="translated">O número de ponto flutuante de precisão simples para gravar no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Single)">
          <source>Writes any pending tab spacing and the text representation of a single-precision floating-point number, followed by a line terminator string, to the output stream.</source>
          <target state="translated">Grava qualquer espaçamento de guia pendente e a representação de texto de um número de ponto flutuante de precisão simples, seguidos por uma cadeia de caracteres de terminador de linha, no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Single)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">A cadeia de caracteres do terminador de linha padrão é um retorno de carro seguido por uma linha de feed ("\r\n").</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Single)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> método base é usado para gravar o <ph id="ph2">`value`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Single)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method to render the value of the <ph id="ph2">&lt;xref:System.Single.Epsilon?displayProperty=nameWithType&gt;</ph> field, which is the smallest possible value of the <ph id="ph3">&lt;xref:System.Single&gt;</ph> structure.</source>
          <target state="translated">O exemplo de código a seguir mostra como usar o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> método para renderizar o valor da <ph id="ph2">&lt;xref:System.Single.Epsilon?displayProperty=nameWithType&gt;</ph> campo, que é o menor valor possível do <ph id="ph3">&lt;xref:System.Single&gt;</ph> estrutura.</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Single)">
          <source>This code example generates the following markup:</source>
          <target state="translated">Este exemplo de código gera a seguinte marcação:</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String)">
          <source>The string to write to the output stream.</source>
          <target state="translated">A cadeia de caracteres a ser gravada no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String)">
          <source>Writes any pending tab spacing and a text string, followed by a line terminator string, to the output stream.</source>
          <target state="translated">Grava qualquer espaçamento de guia pendente e uma cadeia de caracteres de texto, seguidos por uma cadeia de caracteres de terminador de linha, no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">A cadeia de caracteres do terminador de linha padrão é um retorno de carro seguido por uma linha de feed ("\r\n").</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> método base é usado para gravar o <ph id="ph2">`value`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.UInt32)">
          <source>The 4-byte unsigned integer to write to the output stream.</source>
          <target state="translated">O inteiro sem sinal de 4 bytes a gravar no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.UInt32)">
          <source>Writes any pending tab spacing and the text representation of a 4-byte unsigned integer, followed by a line terminator string, to the output stream.</source>
          <target state="translated">Grava qualquer espaçamento de guia pendente e a representação de texto de um inteiro sem sinal de 4 bytes, seguidos por uma cadeia de caracteres de terminador de linha, no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.UInt32)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">A cadeia de caracteres do terminador de linha padrão é um retorno de carro seguido por uma linha de feed ("\r\n").</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.UInt32)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> método base é usado para gravar o <ph id="ph2">`value`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object)">
          <source>A string containing zero or more format items.</source>
          <target state="translated">Uma cadeia de caracteres que contém zero ou mais itens de formato.</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object)">
          <source>An object to format.</source>
          <target state="translated">Um objeto a ser formatado.</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object)">
          <source>Writes any pending tab spacing and a formatted string containing the text representation of an object, followed by a line terminator string, to the output stream.</source>
          <target state="translated">Grava qualquer espaçamento de guia pendente e uma cadeia de caracteres formatada contendo a representação de texto de um objeto, seguidos por uma cadeia de caracteres de terminador de linha, no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">A cadeia de caracteres do terminador de linha padrão é um retorno de carro seguido por uma linha de feed ("\r\n").</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method uses the same semantics as the <ph id="ph2">&lt;xref:System.String.Format%28System.String%2CSystem.Object%29&gt;</ph> method.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> método usa a mesma semântica de <ph id="ph2">&lt;xref:System.String.Format%28System.String%2CSystem.Object%29&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> método base é usado para gravar o <ph id="ph2">`value`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method to render a formatted string with the value of the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph> property.</source>
          <target state="translated">O exemplo de código a seguir mostra como usar o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> método para processar uma cadeia de caracteres formatada com o valor de <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])">
          <source>A string containing zero or more format items.</source>
          <target state="translated">Uma cadeia de caracteres que contém zero ou mais itens de formato.</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])">
          <source>An object array to format.</source>
          <target state="translated">Uma matriz de objeto a ser formatada.</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])">
          <source>Writes any pending tab spacing and a formatted string that contains the text representation of an object array, followed by a line terminator string, to the output stream.</source>
          <target state="translated">Grava qualquer espaçamento de guia pendente e uma cadeia de caracteres formatada contendo a representação de texto de uma matriz de objetos, seguidos por uma cadeia de caracteres de terminador de linha, no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">A cadeia de caracteres do terminador de linha padrão é um retorno de carro seguido por uma linha de feed ("\r\n").</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method uses the same semantics as the <ph id="ph2">&lt;xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29&gt;</ph> method.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> método usa a mesma semântica de <ph id="ph2">&lt;xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> method.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> método base é usado para gravar o <ph id="ph2">`value`</ph> método.</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])">
          <source>This section contains two code examples.</source>
          <target state="translated">Esta seção contém dois exemplos de código.</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])">
          <source>The first one demonstrates how to render a string and an array to the output stream.</source>
          <target state="translated">O primeiro deles demonstra como renderizar uma cadeia de caracteres e uma matriz para o fluxo de saída.</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])">
          <source>The second one shows how to declare the array.</source>
          <target state="translated">Segunda mostra como declarar a matriz.</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method to render a formatted string and the contents of an object array to the output stream.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> método para processar uma cadeia de caracteres formatada e o conteúdo de uma matriz de objeto para o fluxo de saída.</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])">
          <source>The following code example shows how to declare the object array that was rendered in the preceding code example.</source>
          <target state="translated">O exemplo de código a seguir mostra como declarar a matriz de objeto que foi processada no exemplo de código anterior.</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The character array from which to write text to the output stream.</source>
          <target state="translated">A matriz de caracteres da qual gravar texto no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The location in the character array where writing begins.</source>
          <target state="translated">A localização na matriz de caracteres em que a gravação começa.</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters in the array to write to the output stream.</source>
          <target state="translated">O número de caracteres na matriz a gravar no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>Writes any pending tab spacing and a subarray of Unicode characters, followed by a line terminator string, to the output stream.</source>
          <target state="translated">Grava qualquer espaçamento de guia pendente e uma submatriz de caracteres Unicode, seguidos por uma cadeia de caracteres de terminador de linha, no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">A cadeia de caracteres do terminador de linha padrão é um retorno de carro seguido por uma linha de feed ("\r\n").</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> método base é usado para gravar o <ph id="ph2">`value`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>This section contains two code examples.</source>
          <target state="translated">Esta seção contém dois exemplos de código.</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The first one demonstrates how to create a character array.</source>
          <target state="translated">O primeiro deles demonstra como criar uma matriz de caracteres.</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The second one demonstrates how to use the array.</source>
          <target state="translated">Segunda demonstra como usar a matriz.</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>These code examples generate the following markup:</source>
          <target state="translated">Esses exemplos de código geram a seguinte marcação:</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The following code example demonstrates how to create an array of characters that spell out <ph id="ph1">`hello world`</ph>.</source>
          <target state="translated">O exemplo de código a seguir demonstra como criar uma matriz de caracteres que digitar <ph id="ph1">`hello world`</ph>.</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>Included in the array is the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SpaceChar&gt;</ph> field, which creates a space between the two words.</source>
          <target state="translated">Incluído na matriz é o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SpaceChar&gt;</ph> campo, o que cria um espaço entre as duas palavras.</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The following code example uses the <ph id="ph1">`index`</ph> and <ph id="ph2">`count`</ph> parameters of the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method to render the first five characters of the array created in the preceding code example.</source>
          <target state="translated">O seguinte exemplo de código usa o <ph id="ph1">`index`</ph> e <ph id="ph2">`count`</ph> parâmetros o <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> método para processar os primeiros cinco caracteres da matriz criada no exemplo de código anterior.</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>A string containing zero or more format items.</source>
          <target state="translated">Uma cadeia de caracteres que contém zero ou mais itens de formato.</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>An object to format.</source>
          <target state="translated">Um objeto a ser formatado.</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>An object to format.</source>
          <target state="translated">Um objeto a ser formatado.</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>Writes any pending tab spacing and a formatted string that contains the text representation of two objects, followed by a line terminator string, to the output stream.</source>
          <target state="translated">Grava qualquer espaçamento de guia pendente e uma cadeia de caracteres formatada contendo a representação de texto de dois objetos, seguidos por uma cadeia de caracteres de terminador de linha, no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">A cadeia de caracteres do terminador de linha padrão é um retorno de carro seguido por uma linha de feed ("\r\n").</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method uses the same semantics as the <ph id="ph2">&lt;xref:System.String.Format%28System.String%2CSystem.Object%2CSystem.Object%29&gt;</ph> method.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> método usa a mesma semântica de <ph id="ph2">&lt;xref:System.String.Format%28System.String%2CSystem.Object%2CSystem.Object%29&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> método base é usado para gravar o <ph id="ph2">`value`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method to render a formatted string and the values of the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph> property and the <ph id="ph3">&lt;xref:System.DateTime.Today%2A&gt;</ph> property.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> método para processar uma cadeia de caracteres formatada e os valores a <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph> propriedade e o <ph id="ph3">&lt;xref:System.DateTime.Today%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLineNoTabs(System.String)">
          <source>The string to write to the output stream.</source>
          <target state="translated">A cadeia de caracteres a ser gravada no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLineNoTabs(System.String)">
          <source>Writes a string, followed by a line terminator string, to the output stream.</source>
          <target state="translated">Grava uma cadeia de caracteres seguida por uma cadeia de caracteres de terminador de linha, no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLineNoTabs(System.String)">
          <source>This method ignores any specified tab spacing.</source>
          <target state="translated">Este método ignora qualquer espaçamento de tabulação especificado.</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLineNoTabs(System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLineNoTabs%2A&gt;</ph> method rather than the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method when you do not want to render any tab spacing ahead of the rendered string <ph id="ph3">`s`</ph>.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLineNoTabs%2A&gt;</ph> método em vez de <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> método quando você não deseja processar qualquer espaçamento guia à frente a cadeia de caracteres renderizado <ph id="ph3">`s`</ph>.</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLineNoTabs(System.String)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">A cadeia de caracteres do terminador de linha padrão é um retorno de carro seguido por uma linha de feed ("\r\n").</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLineNoTabs(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> método base é usado para gravar o <ph id="ph2">`value`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Writes a style attribute and its value to the output stream.</source>
          <target state="translated">Grava um atributo de estilo e seu valor no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)">
          <source>The style attribute to write to the output stream.</source>
          <target state="translated">O atributo de estilo a gravar no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)">
          <source>The value assigned to the style attribute.</source>
          <target state="translated">O valor atribuído ao atributo de estilo.</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)">
          <source>Writes the specified style attribute to the output stream.</source>
          <target state="translated">Grava o atributo de estilo especificado no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A&gt;</ph> method writes the style attribute in the following form:</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A&gt;</ph> método grava o atributo de estilo no seguinte formato:</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)">
          <source><ph id="ph1">`name`</ph> <ph id="ph2">`=`</ph> <ph id="ph3">`value`</ph> <ph id="ph4">`;`</ph></source>
          <target state="translated"><ph id="ph1">`name`</ph> <ph id="ph2">`=`</ph> <ph id="ph3">`value`</ph> <ph id="ph4">`;`</ph></target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)">
          <source>The style attribute to write to the output stream.</source>
          <target state="translated">O atributo de estilo a gravar no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)">
          <source>The value assigned to the style attribute.</source>
          <target state="translated">O valor atribuído ao atributo de estilo.</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to encode the style attribute and its assigned value; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para codificar o atributo de estilo e seu valor atribuído; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)">
          <source>Writes the specified style attribute and value to the output stream, and encodes the value, if specified.</source>
          <target state="translated">Grava o atributo de estilo e o valor especificados no fluxo de saída e, se especificado, codifica o valor.</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A&gt;</ph> method writes the style attribute in the following form:</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A&gt;</ph> método grava o atributo de estilo no seguinte formato:</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)">
          <source><ph id="ph1">`name`</ph> <ph id="ph2">`=`</ph> <ph id="ph3">`value`</ph> <ph id="ph4">`;`</ph></source>
          <target state="translated"><ph id="ph1">`name`</ph> <ph id="ph2">`=`</ph> <ph id="ph3">`value`</ph> <ph id="ph4">`;`</ph></target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlAttributeEncode%2A&gt;</ph> method is used to encode the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlAttributeEncode%2A&gt;</ph> método é usado para codificar o <ph id="ph2">`value`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)">
          <source>The string to encode and write to the output stream.</source>
          <target state="translated">A cadeia de caracteres de texto a ser codificada e gravada no fluxo de saída.</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to encode the string as a part of the parameter section of the URL; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to encode the string as part of the path section of the URL.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para codificar a cadeia de caracteres como parte da seção de parâmetro da URL; <ph id="ph2">&lt;see langword="false" /&gt;</ph> para codificar a cadeia de caracteres como parte da seção do caminho da URL.</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)">
          <source>Writes the specified string, encoding it according to URL requirements.</source>
          <target state="translated">Grava a cadeia de caracteres especificada, codificando-a de acordo com os requisitos de URL.</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A&gt;</ph> method encodes characters that could be considered URL delimiters (dependent on the setting of <ph id="ph2">`argument`</ph>) into strings of the form <ph id="ph3">`%xx`</ph>, if the ASCII code is less than 128; otherwise, <ph id="ph4">`%uxxxx`</ph>, where <ph id="ph5">`x`</ph> is a hexadecimal digit.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A&gt;</ph> método codifica caracteres que podem ser consideradas delimitadores de URL (dependente da configuração de <ph id="ph2">`argument`</ph>) em cadeias de caracteres do formulário <ph id="ph3">`%xx`</ph>, se o código ASCII é menor que 128; caso contrário, <ph id="ph4">`%uxxxx`</ph>, onde <ph id="ph5">`x`</ph> é um dígito hexadecimal.</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A&gt;</ph> methods use the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A&gt;</ph> method as a utility method.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A&gt;</ph> métodos usam o <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A&gt;</ph> método como um método de utilitário.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>