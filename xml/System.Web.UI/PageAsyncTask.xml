<Type Name="PageAsyncTask" FullName="System.Web.UI.PageAsyncTask">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d1079f4cbaf4f9bde92409a2b96155ff21afa4a7" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39813310" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class PageAsyncTask" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PageAsyncTask extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.PageAsyncTask" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PageAsyncTask" />
  <TypeSignature Language="C++ CLI" Value="public ref class PageAsyncTask sealed" />
  <TypeSignature Language="F#" Value="type PageAsyncTask = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="8a705-101">Contém informações sobre uma tarefa assíncrona registrada em uma página.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8a705-101">Contains information about an asynchronous task registered to a page.</span>
      </span>
      <span data-ttu-id="8a705-102">Essa classe não pode ser herdada.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8a705-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a705-103">Versão do ASP.NET 2.0 permite que você registre várias tarefas para uma página e executá-los de forma assíncrona antes da renderização da página.</span><span class="sxs-lookup"><span data-stu-id="8a705-103">ASP.NET version 2.0 allows you to register multiple tasks to a page and run them asynchronously prior to rendering the page.</span></span> <span data-ttu-id="8a705-104">Você pode especificar que uma tarefa ser executada assincronamente se ele é um processo lento e você não quiser que outros processos para ser vinculados enquanto ele está em execução.</span><span class="sxs-lookup"><span data-stu-id="8a705-104">You might specify that a task be run asynchronously if it is a slow process and you do not want other processes to be tied up while it is executing.</span></span> <span data-ttu-id="8a705-105">Tarefas assíncronas podem ser executadas em paralelo ou sequencialmente.</span><span class="sxs-lookup"><span data-stu-id="8a705-105">The asynchronous tasks can be executed in parallel or sequentially.</span></span>  
  
 <span data-ttu-id="8a705-106">Um <xref:System.Web.UI.PageAsyncTask> objeto deve ser registrado para a página por meio de <xref:System.Web.UI.Page.RegisterAsyncTask%2A> método.</span><span class="sxs-lookup"><span data-stu-id="8a705-106">A <xref:System.Web.UI.PageAsyncTask> object must be registered to the page through the <xref:System.Web.UI.Page.RegisterAsyncTask%2A> method.</span></span> <span data-ttu-id="8a705-107">A página propriamente dita não precisa ser processadas de forma assíncrona para executar tarefas assíncronas.</span><span class="sxs-lookup"><span data-stu-id="8a705-107">The page itself does not have to be processed asynchronously to execute asynchronous tasks.</span></span> <span data-ttu-id="8a705-108">Você pode definir as `Async` de atributo para um `true` (conforme mostrado no exemplo de código a seguir) ou `false` na página de diretiva e tarefas assíncronas ainda serão processadas assincronamente:</span><span class="sxs-lookup"><span data-stu-id="8a705-108">You can set the `Async` attribute to either `true` (as shown in the following code example) or `false` on the page directive and the asynchronous tasks will still be processed asynchronously:</span></span>  
  
 `<%@ Page Async="true" %>`  
  
 <span data-ttu-id="8a705-109">Quando o `Async` atributo é definido como `false`, o thread que executa a página será bloqueado até que todas as tarefas assíncronas sejam concluídas.</span><span class="sxs-lookup"><span data-stu-id="8a705-109">When the `Async` attribute is set to `false`, the thread that executes the page will be blocked until all asynchronous tasks are complete.</span></span>  
  
 <span data-ttu-id="8a705-110">Nenhuma tarefa assíncrona registrada antes do <xref:System.Web.UI.Page.PreRenderComplete> evento será executado automaticamente pela página se elas já não foi executadas.</span><span class="sxs-lookup"><span data-stu-id="8a705-110">Any asynchronous tasks registered before the <xref:System.Web.UI.Page.PreRenderComplete> event will be executed automatically by the page if they have not already been executed.</span></span> <span data-ttu-id="8a705-111">Essas tarefas assíncronas registrada após o <xref:System.Web.UI.Page.PreRenderComplete> evento deve ser executado explicitamente por meio de <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> método.</span><span class="sxs-lookup"><span data-stu-id="8a705-111">Those asynchronous tasks registered after the <xref:System.Web.UI.Page.PreRenderComplete> event must be executed explicitly through the <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> method.</span></span> <span data-ttu-id="8a705-112">O <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> método também pode ser usado para iniciar tarefas antes do <xref:System.Web.UI.Page.PreRenderComplete> eventos.</span><span class="sxs-lookup"><span data-stu-id="8a705-112">The <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> method can also be used to start tasks before the <xref:System.Web.UI.Page.PreRenderComplete> event.</span></span> <span data-ttu-id="8a705-113">O <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> método executa todas as tarefas assíncronas registradas na página que não foram executadas.</span><span class="sxs-lookup"><span data-stu-id="8a705-113">The <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> method executes all the registered asynchronous tasks on the page that have not been executed.</span></span>  
  
 <span data-ttu-id="8a705-114">Por padrão, uma tarefa assíncrona atingirá o tempo limite se não tiver sido concluída dentro de 45 segundos.</span><span class="sxs-lookup"><span data-stu-id="8a705-114">By default, an asynchronous task will time out if it has not completed within 45 seconds.</span></span> <span data-ttu-id="8a705-115">Você pode especificar um valor de tempo limite diferente no arquivo Web. config ou a diretiva de página.</span><span class="sxs-lookup"><span data-stu-id="8a705-115">You can specify a different time-out value in either the Web.config file or the page directive.</span></span> <span data-ttu-id="8a705-116">O `<pages>` seção do arquivo Web. config contém um `asyncTimeout` de atributo, conforme mostrado abaixo.</span><span class="sxs-lookup"><span data-stu-id="8a705-116">The `<pages>` section of the Web.config file contains an `asyncTimeout` attribute, as shown below.</span></span>  
  
 `<system.web>`  
  
 `<pages asyncTimeout="30">`  
  
 `</pages>`  
  
 `</system.web>`  
  
 <span data-ttu-id="8a705-117">A diretiva de página contém um `AsyncTimeout` atributo.</span><span class="sxs-lookup"><span data-stu-id="8a705-117">The page directive contains an `AsyncTimeout` attribute.</span></span>  
  
 `<%@ Page AsyncTimeout="30" %>`  
  
   
  
## Examples  
 <span data-ttu-id="8a705-118">O exemplo de código a seguir registra três tarefas assíncronas para uma página e executa-los em paralelo.</span><span class="sxs-lookup"><span data-stu-id="8a705-118">The following code example registers three asynchronous tasks to a page and executes them in parallel.</span></span> <span data-ttu-id="8a705-119">Cada tarefa chama um método que simplesmente faz com que o thread em suspensão por 5 segundos.</span><span class="sxs-lookup"><span data-stu-id="8a705-119">Each task calls a method that merely causes the thread to sleep for 5 seconds.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.PageAsyncTask#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#1)]
 [!code-aspx-vb[System.Web.UI.PageAsyncTask#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#1)]  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/App_Code/SlowTask.cs#2)]
 [!code-vb[System.Web.UI.PageAsyncTask#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/App_Code/SlowTask.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8a705-120">Inicializa uma nova instância da classe <see cref="T:System.Web.UI.PageAsyncTask" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a705-120">Initializes a new instance of the <see cref="T:System.Web.UI.PageAsyncTask" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageAsyncTask (Func&lt;System.Threading.CancellationToken,System.Threading.Tasks.Task&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;valuetype System.Threading.CancellationToken, class System.Threading.Tasks.Task&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageAsyncTask.#ctor(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handler As Func(Of CancellationToken, Task))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageAsyncTask(Func&lt;System::Threading::CancellationToken, System::Threading::Tasks::Task ^&gt; ^ handler);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.PageAsyncTask : Func&lt;System.Threading.CancellationToken, System.Threading.Tasks.Task&gt; -&gt; System.Web.UI.PageAsyncTask" Usage="new System.Web.UI.PageAsyncTask handler" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handler" Type="System.Func&lt;System.Threading.CancellationToken,System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <param name="handler">
          <span data-ttu-id="8a705-121">Um manipulador de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a705-121">An event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a705-122">Inicializa uma nova instância da classe <see cref="T:System.Web.UI.PageAsyncTask" /> usando um manipulador de eventos que permite que a tarefa seja cancelada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a705-122">Initializes a new instance of the <see cref="T:System.Web.UI.PageAsyncTask" /> class using an event handler that enables the task to be canceled.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a705-123">Este construtor encapsula uma <xref:System.Web.TaskEventHandler> delegar para que o <xref:System.Web.UI.PageAsyncTask> objeto pode integrar o código assíncrono (com base em <xref:System.Threading.Tasks.Task> objetos) com o recurso de páginas assíncronas do ASP.NET Web Forms existente.</span><span class="sxs-lookup"><span data-stu-id="8a705-123">This constructor wraps a <xref:System.Web.TaskEventHandler> delegate so that the <xref:System.Web.UI.PageAsyncTask> object can integrate asynchronous code (based on <xref:System.Threading.Tasks.Task> objects) with the existing ASP.NET Web Forms asynchronous pages feature.</span></span> <span data-ttu-id="8a705-124">ASP.NET sinalizará o <xref:System.Threading.CancellationToken> objeto que é passado para um <xref:System.Web.TaskEventHandler> delegado para o cancelamento com base no <xref:System.Web.UI.Page.AsyncTimeout%2A> atributo definido no `@ Page` diretiva da página da Web.</span><span class="sxs-lookup"><span data-stu-id="8a705-124">ASP.NET will signal the <xref:System.Threading.CancellationToken> object that is passed to a <xref:System.Web.TaskEventHandler> delegate for cancellation based on the <xref:System.Web.UI.Page.AsyncTimeout%2A> attribute set in the `@ Page` directive of the Web page.</span></span> <span data-ttu-id="8a705-125">Quando o <xref:System.Web.UI.Page.AsyncTimeout%2A> valor tiver sido atingido, o <xref:System.Threading.CancellationToken> objeto será sinalizado.</span><span class="sxs-lookup"><span data-stu-id="8a705-125">When the <xref:System.Web.UI.Page.AsyncTimeout%2A> value has been reached, the <xref:System.Threading.CancellationToken> object will be signaled.</span></span> <span data-ttu-id="8a705-126">O `CancellationToken` parâmetro deve ser passado para qualquer APIs assíncronas que são chamados por sua implementação do <xref:System.Web.TaskEventHandler> classe.</span><span class="sxs-lookup"><span data-stu-id="8a705-126">The `CancellationToken` parameter must be passed to any asynchronous APIs that are called by your implementation of the <xref:System.Web.TaskEventHandler> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageAsyncTask (Func&lt;System.Threading.Tasks.Task&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`1&lt;class System.Threading.Tasks.Task&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageAsyncTask.#ctor(System.Func{System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handler As Func(Of Task))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageAsyncTask(Func&lt;System::Threading::Tasks::Task ^&gt; ^ handler);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.PageAsyncTask : Func&lt;System.Threading.Tasks.Task&gt; -&gt; System.Web.UI.PageAsyncTask" Usage="new System.Web.UI.PageAsyncTask handler" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handler" Type="System.Func&lt;System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <param name="handler">
          <span data-ttu-id="8a705-127">Um manipulador de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a705-127">An event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a705-128">Inicializa uma nova instância da classe <see cref="T:System.Web.UI.PageAsyncTask" /> usando um manipulador de eventos que permite que a tarefa seja manipulada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a705-128">Initializes a new instance of the <see cref="T:System.Web.UI.PageAsyncTask" /> class using an event handler that enables the task to be handled.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageAsyncTask (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, System.Web.EndEventHandler timeoutHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, class System.Web.EndEventHandler timeoutHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageAsyncTask.#ctor(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (beginHandler As BeginEventHandler, endHandler As EndEventHandler, timeoutHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageAsyncTask(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Web::EndEventHandler ^ timeoutHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.PageAsyncTask : System.Web.BeginEventHandler * System.Web.EndEventHandler * System.Web.EndEventHandler * obj -&gt; System.Web.UI.PageAsyncTask" Usage="new System.Web.UI.PageAsyncTask (beginHandler, endHandler, timeoutHandler, state)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="timeoutHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <span data-ttu-id="8a705-129">O manipulador a chamar ao iniciar uma tarefa assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a705-129">The handler to call when beginning an asynchronous task.</span>
          </span>
        </param>
        <param name="endHandler">
          <span data-ttu-id="8a705-130">O manipulador a chamar quando a tarefa foi concluída com êxito dentro do período de tempo limite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a705-130">The handler to call when the task is completed successfully within the time-out period.</span>
          </span>
        </param>
        <param name="timeoutHandler">
          <span data-ttu-id="8a705-131">O manipulador a chamar quando a tarefa não foi concluída com êxito dentro do período de tempo limite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a705-131">The handler to call when the task is not completed successfully within the time-out period.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8a705-132">O objeto que representa o estado da tarefa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a705-132">The object that represents the state of the task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a705-133">Inicializa uma nova instância da classe <see cref="T:System.Web.UI.PageAsyncTask" /> usando o valor padrão para a execução em paralelo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a705-133">Initializes a new instance of the <see cref="T:System.Web.UI.PageAsyncTask" /> class using the default value for executing in parallel.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a705-134">Essa implementação do construtor define a <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> propriedade para `false` para que a tarefa assíncrona não é processada em paralelo com outras tarefas na página.</span><span class="sxs-lookup"><span data-stu-id="8a705-134">This implementation of the constructor sets the <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> property to `false` so the asynchronous task is not processed in parallel with other tasks on the page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a705-135">O parâmetro <paramref name="beginHandler" /> ou o parâmetro <paramref name="endHandler" /> não é especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a705-135">The <paramref name="beginHandler" /> parameter or <paramref name="endHandler" /> parameter is not specified.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageAsyncTask (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, System.Web.EndEventHandler timeoutHandler, object state, bool executeInParallel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, class System.Web.EndEventHandler timeoutHandler, object state, bool executeInParallel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageAsyncTask.#ctor(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Web.EndEventHandler,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (beginHandler As BeginEventHandler, endHandler As EndEventHandler, timeoutHandler As EndEventHandler, state As Object, executeInParallel As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageAsyncTask(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Web::EndEventHandler ^ timeoutHandler, System::Object ^ state, bool executeInParallel);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.PageAsyncTask : System.Web.BeginEventHandler * System.Web.EndEventHandler * System.Web.EndEventHandler * obj * bool -&gt; System.Web.UI.PageAsyncTask" Usage="new System.Web.UI.PageAsyncTask (beginHandler, endHandler, timeoutHandler, state, executeInParallel)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="timeoutHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="executeInParallel" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <span data-ttu-id="8a705-136">O manipulador a chamar ao iniciar uma tarefa assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a705-136">The handler to call when beginning an asynchronous task.</span>
          </span>
        </param>
        <param name="endHandler">
          <span data-ttu-id="8a705-137">O manipulador a chamar quando a tarefa foi concluída com êxito dentro do período de tempo limite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a705-137">The handler to call when the task is completed successfully within the time-out period.</span>
          </span>
        </param>
        <param name="timeoutHandler">
          <span data-ttu-id="8a705-138">O manipulador a chamar quando a tarefa não foi concluída com êxito dentro do período de tempo limite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a705-138">The handler to call when the task is not completed successfully within the time-out period.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8a705-139">O objeto que representa o estado da tarefa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a705-139">The object that represents the state of the task.</span>
          </span>
        </param>
        <param name="executeInParallel">
          <span data-ttu-id="8a705-140">O valor que indica se a tarefa pode ser processada em paralelo a outras tarefas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a705-140">The value that indicates whether the task can be processed in parallel with other tasks.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a705-141">Inicializa uma nova instância da classe <see cref="T:System.Web.UI.PageAsyncTask" /> usando o valor especificado para a execução em paralelo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a705-141">Initializes a new instance of the <see cref="T:System.Web.UI.PageAsyncTask" /> class using the specified value for executing in parallel.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a705-142">Essa implementação do construtor permite que você defina se a tarefa assíncrona será processada em paralelo com outras tarefas na página.</span><span class="sxs-lookup"><span data-stu-id="8a705-142">This implementation of the constructor allows you to set whether the asynchronous task will be processed in parallel with other tasks on the page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a705-143">O exemplo de código a seguir cria três tarefas assíncronas que são processadas em paralelo entre si.</span><span class="sxs-lookup"><span data-stu-id="8a705-143">The following code example creates three asynchronous tasks that are processed in parallel to each other.</span></span> <span data-ttu-id="8a705-144">Este exemplo é parte de um exemplo maior encontrado no <xref:System.Web.UI.PageAsyncTask> visão geral da classe.</span><span class="sxs-lookup"><span data-stu-id="8a705-144">This example is part of a larger example found in the <xref:System.Web.UI.PageAsyncTask> class overview.</span></span>  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#3)]
 [!code-vb[System.Web.UI.PageAsyncTask#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8a705-145">O parâmetro <paramref name="beginHandler" /> ou o parâmetro <paramref name="endHandler" /> não é especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a705-145">The <paramref name="beginHandler" /> parameter or <paramref name="endHandler" /> parameter is not specified.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginHandler">
      <MemberSignature Language="C#" Value="public System.Web.BeginEventHandler BeginHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.BeginEventHandler BeginHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageAsyncTask.BeginHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BeginHandler As BeginEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::BeginEventHandler ^ BeginHandler { System::Web::BeginEventHandler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BeginHandler : System.Web.BeginEventHandler" Usage="System.Web.UI.PageAsyncTask.BeginHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.BeginEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a705-146">Obtém o método a ser chamado ao iniciar uma tarefa assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a705-146">Gets the method to call when beginning an asynchronous task.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8a705-147">Um <see cref="T:System.Web.BeginEventHandler" /> delegado que representa o método a chamar ao iniciar a tarefa assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a705-147">A <see cref="T:System.Web.BeginEventHandler" /> delegate that represents the method to call when beginning the asynchronous task.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a705-148">O <xref:System.Web.UI.PageAsyncTask.BeginHandler%2A> delegado é definido no construtor.</span><span class="sxs-lookup"><span data-stu-id="8a705-148">The <xref:System.Web.UI.PageAsyncTask.BeginHandler%2A> delegate is set in the constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a705-149">O exemplo de código a seguir registra três tarefas assíncronas para uma página e executa-los em paralelo.</span><span class="sxs-lookup"><span data-stu-id="8a705-149">The following code example registers three asynchronous tasks to a page and executes them in parallel.</span></span> <span data-ttu-id="8a705-150">Cada tarefa chama um método que simplesmente faz com que o thread em suspensão por 5 segundos.</span><span class="sxs-lookup"><span data-stu-id="8a705-150">Each task calls a method that merely causes the thread to sleep for 5 seconds.</span></span> <span data-ttu-id="8a705-151">Um <xref:System.Web.UI.PageAsyncTask.BeginHandler%2A> delegado é especificado para cada tarefa.</span><span class="sxs-lookup"><span data-stu-id="8a705-151">A <xref:System.Web.UI.PageAsyncTask.BeginHandler%2A> delegate is specified for each task.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.PageAsyncTask#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#1)]
 [!code-aspx-vb[System.Web.UI.PageAsyncTask#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#1)]  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/App_Code/SlowTask.cs#2)]
 [!code-vb[System.Web.UI.PageAsyncTask#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/App_Code/SlowTask.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndHandler">
      <MemberSignature Language="C#" Value="public System.Web.EndEventHandler EndHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.EndEventHandler EndHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageAsyncTask.EndHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndHandler As EndEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::EndEventHandler ^ EndHandler { System::Web::EndEventHandler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EndHandler : System.Web.EndEventHandler" Usage="System.Web.UI.PageAsyncTask.EndHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.EndEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a705-152">Obtém o método a ser chamado quando a tarefa for concluída com êxito dentro do período de tempo limite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a705-152">Gets the method to call when the task completes successfully within the time-out period.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8a705-153">Um <see cref="T:System.Web.EndEventHandler" /> delegado que representa o método a ser chamado quando a tarefa for concluída com êxito dentro do período de tempo limite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a705-153">An <see cref="T:System.Web.EndEventHandler" /> delegate that represents the method to call when the task completes successfully within the time-out period.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a705-154">O <xref:System.Web.UI.PageAsyncTask.EndHandler%2A> delegado é definido no construtor.</span><span class="sxs-lookup"><span data-stu-id="8a705-154">The <xref:System.Web.UI.PageAsyncTask.EndHandler%2A> delegate is set in the constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a705-155">O exemplo de código a seguir registra três tarefas assíncronas para uma página e executa-los em paralelo.</span><span class="sxs-lookup"><span data-stu-id="8a705-155">The following code example registers three asynchronous tasks to a page and executes them in parallel.</span></span> <span data-ttu-id="8a705-156">Cada tarefa chama um método que simplesmente faz com que o thread em suspensão por 5 segundos.</span><span class="sxs-lookup"><span data-stu-id="8a705-156">Each task calls a method that merely causes the thread to sleep for 5 seconds.</span></span> <span data-ttu-id="8a705-157">Um <xref:System.Web.UI.PageAsyncTask.EndHandler%2A> delegado é especificado para cada tarefa.</span><span class="sxs-lookup"><span data-stu-id="8a705-157">An <xref:System.Web.UI.PageAsyncTask.EndHandler%2A> delegate is specified for each task.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.PageAsyncTask#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#1)]
 [!code-aspx-vb[System.Web.UI.PageAsyncTask#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#1)]  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/App_Code/SlowTask.cs#2)]
 [!code-vb[System.Web.UI.PageAsyncTask#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/App_Code/SlowTask.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteInParallel">
      <MemberSignature Language="C#" Value="public bool ExecuteInParallel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExecuteInParallel" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageAsyncTask.ExecuteInParallel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExecuteInParallel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExecuteInParallel { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ExecuteInParallel : bool" Usage="System.Web.UI.PageAsyncTask.ExecuteInParallel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a705-158">Obtém um valor que indica se a tarefa pode ser processada em paralelo a outras tarefas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a705-158">Gets a value that indicates whether the task can be processed in parallel with other tasks.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8a705-159">
            <see langword="true" /> Se a tarefa deve ser processada em paralelo com outras tarefas; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a705-159">
              <see langword="true" /> if the task should be processed in parallel with other tasks; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a705-160">O <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> propriedade é definida no construtor.</span><span class="sxs-lookup"><span data-stu-id="8a705-160">The <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> property is set in the constructor.</span></span> <span data-ttu-id="8a705-161">Quando várias tarefas são registradas em uma página e o <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> estiver definida como `true`, em seguida, essas tarefas são processadas simultaneamente.</span><span class="sxs-lookup"><span data-stu-id="8a705-161">When multiple tasks are registered in a page and the <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> property is set to `true`, then those tasks are processed concurrently.</span></span> <span data-ttu-id="8a705-162">No entanto, se o <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> estiver definida como `false`, em seguida, essas tarefas são processadas sequencialmente.</span><span class="sxs-lookup"><span data-stu-id="8a705-162">However, if the <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> property is set to `false`, then those tasks are processed sequentially.</span></span> <span data-ttu-id="8a705-163">Por exemplo, se uma página que continha as duas assíncrona tarefas que cada levou 5 segundos para ser concluído e <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> é definido como `true`, ambas as tarefas serão concluída em 5 segundos.</span><span class="sxs-lookup"><span data-stu-id="8a705-163">For example, if a page contained two asynchronous tasks that each took 5 seconds to complete and <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> is set to `true`, both tasks will complete in 5 seconds.</span></span> <span data-ttu-id="8a705-164">Se <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> é definido como `false` para esses mesmos as duas tarefas, em seguida, a primeira tarefa será concluída em 5 segundos e a segunda tarefa será concluída em 5 segundos após a conclusão da primeira tarefa.</span><span class="sxs-lookup"><span data-stu-id="8a705-164">If <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> is set to `false` for these same two tasks, then the first task will complete in 5 seconds and the second task will complete 5 seconds after the completion of the first task.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a705-165">O exemplo de código a seguir define três tarefas assíncronas que são cada conjunto a ser processado em paralelo.</span><span class="sxs-lookup"><span data-stu-id="8a705-165">The following code example defines three asynchronous tasks that are each set to be processed in parallel.</span></span> <span data-ttu-id="8a705-166">Este exemplo é parte de um exemplo maior encontrado no <xref:System.Web.UI.PageAsyncTask> visão geral da classe.</span><span class="sxs-lookup"><span data-stu-id="8a705-166">This example is part of a larger example found in the <xref:System.Web.UI.PageAsyncTask> class overview.</span></span>  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#3)]
 [!code-vb[System.Web.UI.PageAsyncTask#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public object State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object State" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageAsyncTask.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ State { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.State : obj" Usage="System.Web.UI.PageAsyncTask.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a705-167">Obtém um objeto que representa o estado da tarefa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a705-167">Gets an object that represents the state of the task.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8a705-168">Um <see cref="T:System.Object" /> que representa o estado da tarefa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a705-168">An <see cref="T:System.Object" /> that represents the state of the task.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a705-169">O <xref:System.Web.UI.PageAsyncTask.State%2A> propriedade é definida no construtor e não pode ser modificada durante a execução da tarefa assíncrona.</span><span class="sxs-lookup"><span data-stu-id="8a705-169">The <xref:System.Web.UI.PageAsyncTask.State%2A> property is set in the constructor and cannot be modified during execution of the asynchronous task.</span></span> <span data-ttu-id="8a705-170">Você pode diferenciar tarefas assíncronas em uma página, atribuindo valores de cadeia de caracteres exclusiva para suas respectivas <xref:System.Web.UI.PageAsyncTask.State%2A> propriedades.</span><span class="sxs-lookup"><span data-stu-id="8a705-170">You can differentiate asynchronous tasks in a page by assigning unique string values to their respective <xref:System.Web.UI.PageAsyncTask.State%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a705-171">O exemplo de código a seguir cria três tarefas assíncronas e lhes valores exclusivos para suas <xref:System.Web.UI.PageAsyncTask.State%2A> propriedades.</span><span class="sxs-lookup"><span data-stu-id="8a705-171">The following code example creates three asynchronous tasks and gives them unique values for their <xref:System.Web.UI.PageAsyncTask.State%2A> properties.</span></span> <span data-ttu-id="8a705-172">Este exemplo é parte de um exemplo maior encontrado no <xref:System.Web.UI.PageAsyncTask> visão geral da classe.</span><span class="sxs-lookup"><span data-stu-id="8a705-172">This example is part of a larger example found in the <xref:System.Web.UI.PageAsyncTask> class overview.</span></span>  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#3)]
 [!code-vb[System.Web.UI.PageAsyncTask#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeoutHandler">
      <MemberSignature Language="C#" Value="public System.Web.EndEventHandler TimeoutHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.EndEventHandler TimeoutHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageAsyncTask.TimeoutHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeoutHandler As EndEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::EndEventHandler ^ TimeoutHandler { System::Web::EndEventHandler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TimeoutHandler : System.Web.EndEventHandler" Usage="System.Web.UI.PageAsyncTask.TimeoutHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.EndEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a705-173">Obtém o método a ser chamado quando a tarefa não for concluída com êxito dentro do período de tempo limite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a705-173">Gets the method to call when the task does not complete successfully within the time-out period.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8a705-174">Um <see cref="T:System.Web.EndEventHandler" /> delegado que representa o método a ser chamado quando a tarefa não for concluída com êxito dentro do período de tempo limite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a705-174">An <see cref="T:System.Web.EndEventHandler" /> delegate that represents the method to call when the task does not complete successfully within the time-out period.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a705-175">O <xref:System.Web.UI.PageAsyncTask.TimeoutHandler%2A> delegado é definido no construtor.</span><span class="sxs-lookup"><span data-stu-id="8a705-175">The <xref:System.Web.UI.PageAsyncTask.TimeoutHandler%2A> delegate is set in the constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a705-176">O exemplo de código a seguir registra três tarefas assíncronas para uma página e executa-los em paralelo.</span><span class="sxs-lookup"><span data-stu-id="8a705-176">The following code example registers three asynchronous tasks to a page and executes them in parallel.</span></span> <span data-ttu-id="8a705-177">Cada tarefa chama um método que simplesmente faz com que o thread em suspensão por 5 segundos.</span><span class="sxs-lookup"><span data-stu-id="8a705-177">Each task calls a method that merely causes the thread to sleep for 5 seconds.</span></span> <span data-ttu-id="8a705-178">Um <xref:System.Web.UI.PageAsyncTask.TimeoutHandler%2A> delegado é especificado para cada tarefa.</span><span class="sxs-lookup"><span data-stu-id="8a705-178">A <xref:System.Web.UI.PageAsyncTask.TimeoutHandler%2A> delegate is specified for each task.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.PageAsyncTask#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#1)]
 [!code-aspx-vb[System.Web.UI.PageAsyncTask#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#1)]  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/App_Code/SlowTask.cs#2)]
 [!code-vb[System.Web.UI.PageAsyncTask#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/App_Code/SlowTask.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>