<Type Name="UpdatePanel" FullName="System.Web.UI.UpdatePanel">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="27a673a51395ee0512b10e11a15c17991d27315a" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37529722" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class UpdatePanel : System.Web.UI.Control, System.Web.UI.IAttributeAccessor, System.Web.UI.IUpdatePanel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UpdatePanel extends System.Web.UI.Control implements class System.Web.UI.IAttributeAccessor, class System.Web.UI.IUpdatePanel" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.UpdatePanel" />
  <TypeSignature Language="VB.NET" Value="Public Class UpdatePanel&#xA;Inherits Control&#xA;Implements IAttributeAccessor, IUpdatePanel" />
  <TypeSignature Language="C++ CLI" Value="public ref class UpdatePanel : System::Web::UI::Control, System::Web::UI::IAttributeAccessor, System::Web::UI::IUpdatePanel" />
  <TypeSignature Language="F#" Value="type UpdatePanel = class&#xA;    inherit Control&#xA;    interface IAttributeAccessor&#xA;    interface IUpdatePanel" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IAttributeAccessor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IUpdatePanel</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Triggers")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.UpdatePanelDesigner, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(EmbeddedResourceFinder), "System.Web.Resources.UpdatePanel.bmp")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Enables sections of a page to be partially rendered without a postback.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Neste tópico:  
  
-   [Introdução](#introduction)  
  
-   [Atualizando conteúdo UpdatePanel](#refreshing_updatepanel_content)  
  
-   [Uso de UpdatePanel](#updatepanel_usage)  
  
-   [Aplicando estilos](#applying_styles)  
  
-   [Sintaxe declarativa](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Introdução  
 <xref:System.Web.UI.UpdatePanel> controles são uma parte central da funcionalidade do AJAX no ASP.NET. Eles são usados com o <xref:System.Web.UI.ScriptManager> controle para habilitar a renderização parcial da página. Renderização parcial da página reduz a necessidade de postagens síncronas e atualizações de página completa quando apenas parte da página deve ser atualizada. Renderização parcial da página melhora a experiência do usuário, pois ele reduz a cintilação de tela que ocorre durante um postback de página inteira e melhora a interatividade de página da Web.  
  
<a name="refreshing_updatepanel_content"></a>   
## <a name="refreshing-updatepanel-content"></a>Atualizando conteúdo UpdatePanel  
 Quando a renderização parcial da página estiver habilitada, um controle pode executar um postback que atualiza a página inteira ou um postback assíncrono que atualiza o conteúdo de um ou mais <xref:System.Web.UI.UpdatePanel> controles. Se um controle faz com que um postback assíncrono e atualizações de um <xref:System.Web.UI.UpdatePanel> controle depende do seguinte:  
  
-   Se o <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> propriedade do <xref:System.Web.UI.UpdatePanel> controle é definida como <xref:System.Web.UI.UpdatePanelUpdateMode.Always>, o <xref:System.Web.UI.UpdatePanel> conteúdo do controle é atualizado em cada postagem que se origina de página. Isso inclui os postbacks assíncronos de controles que estão dentro de outros <xref:System.Web.UI.UpdatePanel> controles e postagens de controles que não estão dentro <xref:System.Web.UI.UpdatePanel> controles.  
  
-   Se o <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> estiver definida como <xref:System.Web.UI.UpdatePanelUpdateMode.Conditional>, o <xref:System.Web.UI.UpdatePanel> conteúdo do controle é atualizado nas seguintes circunstâncias:  
  
    -   Quando você chama o <xref:System.Web.UI.UpdatePanel.Update%2A> método o <xref:System.Web.UI.UpdatePanel> controlar explicitamente.  
  
    -   Quando o <xref:System.Web.UI.UpdatePanel> controle está aninhado em outro <xref:System.Web.UI.UpdatePanel> controle e o painel pai é atualizada.  
  
    -   Quando um postback é causado por um controle que é definido como um gatilho usando o `Triggers` propriedade do <xref:System.Web.UI.UpdatePanel> controle. Nesse cenário, o controle explicitamente dispara uma atualização do conteúdo do painel. O controle pode ser interno ou externo a <xref:System.Web.UI.UpdatePanel> controle que o gatilho está associado.  
  
    -   Quando o <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> estiver definida como `true` e um controle filho a <xref:System.Web.UI.UpdatePanel> controle causa um postback. Controles filho de aninhados <xref:System.Web.UI.UpdatePanel> controles não causam uma atualização para o exterior <xref:System.Web.UI.UpdatePanel> de controle, a menos que eles estejam explicitamente definidos como disparadores.  
  
 A combinação de configuração a <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> propriedade para `false` e o <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> propriedade para <xref:System.Web.UI.UpdatePanelUpdateMode.Always> não é permitida e lançará uma exceção.  
  
 Quando o <xref:System.Web.UI.UpdatePanel> controle executa um post assíncrono, ele adiciona um cabeçalho HTTP personalizado. Alguns proxies remover esse cabeçalho HTTP personalizado. Se isso ocorrer, o servidor processa a solicitação como um postback regular, o que causa um erro de cliente. Para resolver esse problema, inserir um campo de formulário personalizado quando você executar postagens assíncronas. Em seguida, verifique o cabeçalho ou o campo de formulário personalizadas no código do servidor.  
  
<a name="updatepanel_usage"></a>   
## <a name="updatepanel-usage"></a>Uso de UpdatePanel  
 Você pode usar várias <xref:System.Web.UI.UpdatePanel> controles para atualizar diferentes regiões de página independentemente. Quando a página que contém um ou mais <xref:System.Web.UI.UpdatePanel> controles é renderizado primeiro, todo o conteúdo de todos os <xref:System.Web.UI.UpdatePanel> controles são renderizados e enviados ao navegador. Em postagens assíncronas subsequentes, o conteúdo de cada <xref:System.Web.UI.UpdatePanel> controle não pode ser atualizado, dependendo das configurações do painel e na lógica do cliente ou servidor para painéis individuais.  
  
 Você também pode usar <xref:System.Web.UI.UpdatePanel> controles nos seguintes cenários:  
  
-   Em controles de usuário.  
  
-   Nas páginas mestras e de conteúdo.  
  
-   Aninhado em outro <xref:System.Web.UI.UpdatePanel> controles.  
  
-   Com modelo de dentro de controles, como o <xref:System.Web.UI.WebControls.GridView> ou <xref:System.Web.UI.WebControls.Repeater> controles.  
  
 <xref:System.Web.UI.UpdatePanel> controles podem ser adicionados de forma declarativa ou programaticamente.  
  
 Você pode adicionar um <xref:System.Web.UI.UpdatePanel> controlar programaticamente, mas não é possível adicionar gatilhos de forma programática. Para criar o comportamento do tipo de gatilho, você pode registrar um controle na página como um controle de postback assíncrono. Você pode fazer isso chamando o <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> método da <xref:System.Web.UI.ScriptManager> controle. Em seguida, você pode criar um manipulador de eventos que é executado em resposta a postback assíncrono e, no manipulador, chamada a <xref:System.Web.UI.UpdatePanel.Update%2A> método da <xref:System.Web.UI.UpdatePanel> controle.  
  
<a name="applying_styles"></a>   
## <a name="applying-styles"></a>Aplicando estilos  
 O <xref:System.Web.UI.UpdatePanel> controle aceita atributos expando. Isso permite que você defina uma classe CSS para o HTMLelements que os controles de renderização. Por exemplo, você pode criar a marcação mostrada no exemplo a seguir:  
  
```  
<asp:UpdatePanel runat="server" class="myStyle">  
</asp:UpdatePanel>   
```  
  
 A marcação no exemplo anterior renderiza HTML semelhante ao seguinte quando a página é executada:  
  
```  
<div id="ctl00_MainContent_UpdatePanel1" class="MyStyle">  
</div>  
```  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Sintaxe declarativa  
  
```  
<asp:UpdatePanel  
    ChildrenAsTriggers="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    RenderMode="Block|Inline"  
    runat="server"  
    SkinID="string"  
    UpdateMode="Always|Conditional"  
    Visible="True|False"  
>  
    <ContentTemplate>  
        <!-- child controls -->  
    </ContentTemplate>  
    <Triggers>  
        <asp:AsyncPostBackTrigger   
            ControlID="string"  
            EventName="string"  
        />  
        <asp:PostBackTrigger   
            ControlID="string"  
        />  
    </Triggers>  
</asp:UpdatePanel>  
```  
  
   
  
## Examples  
 Os exemplos a seguir mostram diferentes usos do <xref:System.Web.UI.UpdatePanel> controle.  
  
 **Controles dentro de um controle UpdatePanel**  
  
 O exemplo a seguir mostra como colocar os controles dentro de um <xref:System.Web.UI.UpdatePanel> controle para reduzir a cintilação da tela quando você envia para o servidor. Neste exemplo, uma <xref:System.Web.UI.WebControls.Calendar> e uma <xref:System.Web.UI.WebControls.DropDownList> controle estão dentro de um <xref:System.Web.UI.UpdatePanel> controle. Por padrão, o <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> é de propriedade <xref:System.Web.UI.UpdatePanelUpdateMode.Always> e o <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> é de propriedade `true`. Portanto, os controles filho do painel de causam um postback assíncrono.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/CS/UpdatePanelExample1CS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/VB/UpdatePanelExample1VB.aspx#1)]  
  
 **Cenário de mestre/detalhes com controles UpdatePanel**  
  
 No exemplo a seguir, um <xref:System.Web.UI.UpdatePanel> controle é usado em um cenário mestre/detalhes que mostra de pedidos e detalhes do pedido do banco de dados Northwind. Uma <xref:System.Web.UI.UpdatePanel> controle contiver o <xref:System.Web.UI.WebControls.GridView> controle que exibe uma lista de pedidos. Um segundo <xref:System.Web.UI.UpdatePanel> controle contiver um <xref:System.Web.UI.WebControls.DetailsView> controle que exibe os detalhes de uma única ordem. Quando você seleciona uma ordem da primeira tabela, os detalhes do pedido são exibidos na segunda tabela. A segunda tabela é atualizada de forma assíncrona, com base na seleção na primeira tabela. As operações de classificação e paginação na tabela de pedidos Resumo também causam atualizações parciais.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/CS/UpdatePanelExample2CS.aspx#2)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/VB/UpdatePanelExample2VB.aspx#2)]  
  
 Se você colocar uma <xref:System.Web.UI.WebControls.GridView> controlar dentro de um <xref:System.Web.UI.UpdatePanel> configuração de controle, o <xref:System.Web.UI.WebControls.GridView> do controle <xref:System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks%2A> propriedade para `true` não tem suporte. No entanto, porque o <xref:System.Web.UI.UpdatePanel> controle dá suporte a postbacks assíncronos, quaisquer postagens que alteram o <xref:System.Web.UI.WebControls.GridView> controlar dentro de um <xref:System.Web.UI.UpdatePanel> controle causa o mesmo comportamento de classificação e paginação retornos de chamada.  
  
 **Usando um controle UpdatePanel em um modelo**  
  
 No exemplo a seguir, uma <xref:System.Web.UI.UpdatePanel> controle é usado no modelo de item de um <xref:System.Web.UI.WebControls.GridView> controle. <xref:System.Web.UI.UpdatePanel> controles em cada linha de dados são gerados automaticamente. Cada linha <xref:System.Web.UI.UpdatePanel> controle contiver um <xref:System.Web.UI.WebControls.Label> controle para exibir a quantidade do item nessa linha e um <xref:System.Web.UI.WebControls.Button> controle diminuir e aumentar a quantidade.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/CS/UpdatePanelExample3CS.aspx#3)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel#3](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/VB/UpdatePanelExample3VB.aspx#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.ScriptManager" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UpdatePanel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UpdatePanel();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.UI.UpdatePanel" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usar esse construtor para inicializar uma nova instância do <xref:System.Web.UI.UpdatePanel> classe. Adicionar dinamicamente uma <xref:System.Web.UI.UpdatePanel> o controle para uma página, crie um novo <xref:System.Web.UI.UpdatePanel> da instância e, em seguida, adicionar controles filho para o objeto de controle que é exposto pela instância de <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> propriedade.  
  
   
  
## Examples  
 O exemplo a seguir mostra como criar dinamicamente uma <xref:System.Web.UI.UpdatePanel> controlar e adicioná-lo a uma página. Quando você clica no botão dentro de <xref:System.Web.UI.UpdatePanel> controle, a mensagem é atualizado com a data e hora. Controles filho são adicionados usando o <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> propriedade.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.Constructor#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.Constructor/CS/UpdatePanelConstructorCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.Constructor/VB/UpdatePanelConstructorVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdatePanel.UpdateMode" />
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Web.UI.AttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.AttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::AttributeCollection ^ Attributes { System::Web::UI::AttributeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Web.UI.AttributeCollection" Usage="System.Web.UI.UpdatePanel.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.WebSysDescription("WebControl_Attributes")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.AttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the cascading style sheet (CSS) attributes collection of the <see cref="T:System.Web.UI.UpdatePanel" /> control.</summary>
        <value>Os nomes da folha regras de estilo da coleção de atributos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.UpdatePanel.Attributes%2A> propriedade contém uma coleção de atributos de estilo CSS que pode ser usado no fechamento `div` elemento da <xref:System.Web.UI.UpdatePanel> controle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildrenAsTriggers">
      <MemberSignature Language="C#" Value="public bool ChildrenAsTriggers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ChildrenAsTriggers" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.ChildrenAsTriggers" />
      <MemberSignature Language="VB.NET" Value="Public Property ChildrenAsTriggers As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ChildrenAsTriggers { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ChildrenAsTriggers : bool with get, set" Usage="System.Web.UI.UpdatePanel.ChildrenAsTriggers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether postbacks from immediate child controls of an <see cref="T:System.Web.UI.UpdatePanel" /> control update the panel's content.</summary>
        <value>
          <see langword="true" /> se postbacks dos controles filho imediatos do controle <see cref="T:System.Web.UI.UpdatePanel" /> atualizarem o conteúdo do painel; caso contrário, <see langword="false" />. O padrão é <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Defina a <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> propriedade para `true` se desejar que os postbacks de controles filho imediatos do <xref:System.Web.UI.UpdatePanel> controle para fazer com que uma atualização de conteúdo do painel. Controles filho de aninhados <xref:System.Web.UI.UpdatePanel> controles não fará com que uma atualização do pai <xref:System.Web.UI.UpdatePanel> conteúdo do controle, a menos que você chame o <xref:System.Web.UI.UpdatePanel.Update%2A> método explicitamente ou definir os controles filho como disparadores.  
  
> [!NOTE]
>  Quando o <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> estiver definida como <xref:System.Web.UI.UpdatePanelUpdateMode.Always> e o <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> estiver definida como `false`, um <xref:System.InvalidOperationException> exceção é lançada durante a <xref:System.Web.UI.UpdatePanel.OnPreRender%2A> método. Essa combinação de propriedades não é permitida para o <xref:System.Web.UI.UpdatePanel> controle.  
  
 Um cenário onde você pode definir <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> à `false` é quando você tem duas <xref:System.Web.UI.UpdatePanel> controles e você desejar que um postback do primeiro painel para atualizar o conteúdo do segundo painel, mas não atualizar seu próprio conteúdo. Por exemplo, o primeiro painel pode ser uma lista de produtos para comprar e o segundo painel pode ser um carrinho de compras.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdatePanel.UpdateMode" />
        <altmember cref="M:System.Web.UI.UpdatePanel.OnPreRender(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ContentTemplate">
      <MemberSignature Language="C#" Value="public System.Web.UI.ITemplate ContentTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ContentTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.ContentTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ITemplate ^ ContentTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.UpdatePanel.ContentTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateInstance</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the template that defines the content of the <see cref="T:System.Web.UI.UpdatePanel" /> control.</summary>
        <value>Uma instância de <see cref="T:System.Web.UI.ITemplate" /> que define o conteúdo do controle <see cref="T:System.Web.UI.UpdatePanel" />. O padrão é <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.UpdatePanel.ContentTemplate%2A> propriedade contém o conteúdo exibido dentro de um <xref:System.Web.UI.UpdatePanel> controle quando ele é renderizado. Você pode criar o conteúdo do modelo de forma declarativa ou programaticamente. O modelo de conteúdo de um <xref:System.Web.UI.UpdatePanel> controle é um modelo de instância única. Portanto, as propriedades de controles que ele contém podem ser acessadas diretamente na página sem usar o <xref:System.Web.UI.Page.FindControl%2A> método. Para obter mais informações, consulte o <xref:System.Web.UI.TemplateInstanceAttribute> visão geral da classe.  
  
 Para adicionar itens à <xref:System.Web.UI.UpdatePanel> controlar de forma declarativa, adicione uma `<ContentTemplate>` elemento entre as marcas de abertura e fechamento do <xref:System.Web.UI.UpdatePanel> controle. Dentro de `<ContentTemplate>` marcas de elemento, declarar outros controles e elementos HTML.  
  
 Para adicionar itens para o <xref:System.Web.UI.UpdatePanel> controlar dinamicamente, use o <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> propriedade, que permite que você adicione controles filho sem precisar criar um modelo personalizado que implementa o <xref:System.Web.UI.ITemplate> interface.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.UI.UpdatePanel.ContentTemplate" /> property of the <see cref="T:System.Web.UI.UpdatePanel" /> control is set after an instance of the template is created or after the content template container is created.</exception>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />
        <altmember cref="T:System.Web.UI.TemplateInstanceAttribute" />
        <altmember cref="T:System.Web.UI.ITemplate" />
      </Docs>
    </Member>
    <Member MemberName="ContentTemplateContainer">
      <MemberSignature Language="C#" Value="public System.Web.UI.Control ContentTemplateContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control ContentTemplateContainer" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentTemplateContainer As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::Control ^ ContentTemplateContainer { System::Web::UI::Control ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentTemplateContainer : System.Web.UI.Control" Usage="System.Web.UI.UpdatePanel.ContentTemplateContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a control object to which you can programmatically add child controls.</summary>
        <value>Um objeto <see cref="T:System.Web.UI.Control" /> que define o conteúdo do controle <see cref="T:System.Web.UI.UpdatePanel" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> propriedade permite que você adicionar programaticamente os controles filho para o <xref:System.Web.UI.UpdatePanel> controle sem ter que definir um modelo personalizado que herda o <xref:System.Web.UI.ITemplate> interface. Se você estiver adicionando o conteúdo para o <xref:System.Web.UI.UpdatePanel> controlar de forma declarativa ou por meio de um designer, você deve adicionar o conteúdo para o <xref:System.Web.UI.UpdatePanel.ContentTemplate%2A> propriedade usando um `<ContentTemplate>` elemento.  
  
   
  
## Examples  
 O exemplo a seguir mostra como especificar de forma programática as <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> propriedade de um <xref:System.Web.UI.UpdatePanel> controle. O <xref:System.Web.UI.WebControls.Label.Text%2A> propriedade de um <xref:System.Web.UI.WebControls.Label> controle é definida quando `Button1` é clicado.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.Constructor#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.Constructor/CS/UpdatePanelConstructorCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.Constructor/VB/UpdatePanelConstructorVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplate" />
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override sealed System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Controls : System.Web.UI.ControlCollection" Usage="System.Web.UI.UpdatePanel.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Web.UI.ControlCollection" /> object that contains the child controls for the <see cref="T:System.Web.UI.UpdatePanel" /> control.</summary>
        <value>A coleção de controles filho para o controle <see cref="T:System.Web.UI.UpdatePanel" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.UpdatePanel.Controls%2A> propriedade seja substituída da base <xref:System.Web.UI.Control> classe e lacradas para evitar derivação adicional. Para adicionar controles para o <xref:System.Web.UI.UpdatePanel> controlar de forma declarativa, crie uma `<ContentTemplate>` elemento dentro a <xref:System.Web.UI.UpdatePanel> marcação de controle. Para adicionar controles para o <xref:System.Web.UI.UpdatePanel> controlar programaticamente, use o <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> propriedade.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Web.UI.ControlCollection.Add(System.Web.UI.Control)" />, <see cref="M:System.Web.UI.ControlCollection.AddAt(System.Int32,System.Web.UI.Control)" />, <see cref="M:System.Web.UI.ControlCollection.Clear" />, <see cref="M:System.Web.UI.ControlCollection.Remove(System.Web.UI.Control)" />, or <see cref="M:System.Web.UI.ControlCollection.RemoveAt(System.Int32)" /> method of the <see cref="T:System.Web.UI.ControlCollection" /> class has been called. To change the content of the <see cref="T:System.Web.UI.UpdatePanel" /> control, modify the child controls of the <see cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" /> property.</exception>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />
      </Docs>
    </Member>
    <Member MemberName="CreateContentTemplateContainer">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.Control CreateContentTemplateContainer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.Control CreateContentTemplateContainer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.CreateContentTemplateContainer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateContentTemplateContainer () As Control" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::Control ^ CreateContentTemplateContainer();" />
      <MemberSignature Language="F#" Value="abstract member CreateContentTemplateContainer : unit -&gt; System.Web.UI.Control&#xA;override this.CreateContentTemplateContainer : unit -&gt; System.Web.UI.Control" Usage="updatePanel.CreateContentTemplateContainer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a <see cref="T:System.Web.UI.Control" /> object that acts as a container for child controls that define the <see cref="T:System.Web.UI.UpdatePanel" /> control's content.</summary>
        <returns>A <see cref="T:System.Web.UI.Control" /> container for the <see cref="T:System.Web.UI.UpdatePanel" /> control's content.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método é destinado ao uso por desenvolvedores de controle que desejam estender o <xref:System.Web.UI.UpdatePanel> controle. Por exemplo, em classes derivadas, você pode fornecer um controle diferente de raiz que atua como um contêiner para seu <xref:System.Web.UI.UpdatePanel> conteúdo do controle. A implementação padrão retorna um <xref:System.Web.UI.Control> objeto.  
  
   
  
## Examples  
 O exemplo a seguir mostra como substituir a <xref:System.Web.UI.UpdatePanel.CreateContentTemplateContainer%2A> método em um personalizado <xref:System.Web.UI.UpdatePanel> controle sempre processar a `<fieldset>` e `<legend>` elementos para de conteúdo o painel. O custom <xref:System.Web.UI.UpdatePanel> controle define uma propriedade pública denominada `GroupingText` que é uma cadeia de caracteres literal dentro a `<legend>` elemento.  
  
 Um personalizado <xref:System.Web.UI.UpdatePanel> controle chamado `CustomUpdatePanel` deriva <xref:System.Web.UI.UpdatePanel> e substitui o <xref:System.Web.UI.UpdatePanel.CreateContentTemplateContainer%2A> método. Coloque o `CustomUpdatePanel` código-fonte na pasta App_Code do site de Web de classe.  
  
 [!code-csharp[System.Web.UI.UpdatePanel.CreateContentTemplateContainer#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.CreateContentTemplateContainer/CS/App_Code/CustomUpdatePanel.cs#2)]
 [!code-vb[System.Web.UI.UpdatePanel.CreateContentTemplateContainer#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.CreateContentTemplateContainer/VB/App_Code/CustomUpdatePanel.vb#2)]  
  
 Personalizado <xref:System.Web.UI.UpdatePanel> controle é usado na página assim como o <xref:System.Web.UI.UpdatePanel> controle está. O exemplo a seguir mostra uma página que contém o personalizado <xref:System.Web.UI.UpdatePanel> controle.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.CreateContentTemplateContainer#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.CreateContentTemplateContainer/CS/UpdatePanelCreateContentTemplateContainerCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.CreateContentTemplateContainer#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.CreateContentTemplateContainer/VB/UpdatePanelCreateContentTemplateContainerVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplate" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override sealed System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="abstract member CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection&#xA;override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="updatePanel.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the collection of all controls that are contained in the <see cref="T:System.Web.UI.UpdatePanel" /> control.</summary>
        <returns>A <see cref="T:System.Web.UI.ControlCollection" /> object that consists of all controls that define the content of the <see cref="T:System.Web.UI.UpdatePanel" /> control.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.UpdatePanel.CreateControlCollection%2A> método é usado por desenvolvedores de controle.  
  
 Porque esse método é protegido e selado, ele fica visível para classes que herdam a <xref:System.Web.UI.UpdatePanel> classe, mas ele não pode ser substituído. Esse método substitui a implementação base para retornar um especializado <xref:System.Web.UI.ControlCollection> objeto que gera uma <xref:System.InvalidOperationException> quando o <xref:System.Web.UI.ControlCollection.Add%2A>, <xref:System.Web.UI.ControlCollection.AddAt%2A>, <xref:System.Web.UI.ControlCollection.Clear%2A>, <xref:System.Web.UI.ControlCollection.Remove%2A>, ou <xref:System.Web.UI.ControlCollection.RemoveAt%2A> método do <xref:System.Web.UI.ControlCollection> classe é invocado. Para alterar o conteúdo do controle <xref:System.Web.UI.UpdatePanel>, modifique os controles filho da propriedade <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected internal virtual void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Initialize();" />
      <MemberSignature Language="F#" Value="abstract member Initialize : unit -&gt; unit&#xA;override this.Initialize : unit -&gt; unit" Usage="updatePanel.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Initializes the <see cref="T:System.Web.UI.UpdatePanel" /> control trigger collection if partial-page rendering is enabled.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se a renderização parcial da página não estiver habilitada, os gatilhos que são definidos na <xref:System.Web.UI.UpdatePanel.Triggers%2A> propriedade não são inicializados, porque eles não têm nenhum efeito. O <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> propriedade do <xref:System.Web.UI.ScriptManager> controle obtém ou define um valor que indica se a renderização parcial da página está habilitada. O <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> propriedade do <xref:System.Web.UI.ScriptManager> controle obtém ou define um valor que indica se a renderização parcial da página é compatível.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Quando você substitui o <see cref="M:System.Web.UI.UpdatePanel.Initialize" /> método, certifique-se de chamar a classe base para que os gatilhos são registrados, se a renderização parcial da página estiver habilitada.</para>
        </block>
        <altmember cref="P:System.Web.UI.ScriptManager.EnablePartialRendering" />
        <altmember cref="P:System.Web.UI.ScriptManager.SupportsPartialRendering" />
      </Docs>
    </Member>
    <Member MemberName="IsInPartialRendering">
      <MemberSignature Language="C#" Value="public bool IsInPartialRendering { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInPartialRendering" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.IsInPartialRendering" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInPartialRendering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInPartialRendering { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInPartialRendering : bool" Usage="System.Web.UI.UpdatePanel.IsInPartialRendering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the <see cref="T:System.Web.UI.UpdatePanel" /> control is being updated as a result of an asynchronous postback.</summary>
        <value>
          <see langword="true" /> Se o atual <see cref="T:System.Web.UI.UpdatePanel" /> controle está sendo atualizado como resultado de um postback assíncrono; caso contrário, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.UpdatePanel.IsInPartialRendering%2A> propriedade destina para uso por desenvolvedores de controle que desejam saber quando um <xref:System.Web.UI.UpdatePanel> controle está sendo atualizado como resultado de um postback assíncrono. Em cenários de desenvolvimento de página, use o <xref:System.Web.UI.ScriptManager.IsInAsyncPostBack%2A> propriedade para determinar se uma página está processando como resultado de um postback assíncrono.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.ScriptManager.IsInAsyncPostBack" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnInit : EventArgs -&gt; unit&#xA;override this.OnInit : EventArgs -&gt; unit" Usage="updatePanel.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">An <see cref="T:System.EventArgs" /> object that contains the event data.</param>
        <summary>Raises the <see cref="E:System.Web.UI.Control.Init" /> event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.UpdatePanel> do controle <xref:System.Web.UI.UpdatePanel.ContentTemplate%2A> propriedade é instanciada durante o <xref:System.Web.UI.UpdatePanel.OnInit%2A> método.  
  
 O <xref:System.Web.UI.UpdatePanel.OnInit%2A> método é usado por desenvolvedores de controle para estender a funcionalidade do <xref:System.Web.UI.UpdatePanel> controle.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.UI.UpdatePanel.ContentTemplate" /> property is being defined when the <see cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" /> property has already been created.</exception>
        <block subset="none" type="overrides">
          <para>Quando você substitui o <see cref="M:System.Web.UI.UpdatePanel.OnInit(System.EventArgs)" /> método em uma classe derivada, certifique-se de chamar o <see cref="M:System.Web.UI.UpdatePanel.OnInit(System.EventArgs)" /> método da classe base, de modo que delegados registrados pode receber o evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnLoad">
      <MemberSignature Language="C#" Value="protected internal override void OnLoad (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnLoad(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.OnLoad(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnLoad (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnLoad(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLoad : EventArgs -&gt; unit&#xA;override this.OnLoad : EventArgs -&gt; unit" Usage="updatePanel.OnLoad e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">An <see cref="T:System.EventArgs" /> object that contains the event data.</param>
        <summary>Raises the <see cref="E:System.Web.UI.Control.Load" /> event for the <see cref="T:System.Web.UI.UpdatePanel" /> control and invokes the <see cref="M:System.Web.UI.UpdatePanel.Initialize" /> method when partial-page rendering is not enabled.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>Se você substituir a <see cref="M:System.Web.UI.UpdatePanel.OnLoad(System.EventArgs)" /> método, certifique-se de chamar a classe base para que o <see cref="E:System.Web.UI.Control.Load" /> evento será gerado.</para>
        </block>
        <altmember cref="M:System.Web.UI.UpdatePanel.Initialize" />
        <altmember cref="P:System.Web.UI.ScriptManager.EnablePartialRendering" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreRender : EventArgs -&gt; unit&#xA;override this.OnPreRender : EventArgs -&gt; unit" Usage="updatePanel.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">An <see cref="T:System.EventArgs" /> object that contains the event data.</param>
        <summary>Raises the <see cref="E:System.Web.UI.Control.PreRender" /> event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.UpdatePanel.OnPreRender%2A> método é usado por desenvolvedores de controle para estender a funcionalidade do <xref:System.Web.UI.UpdatePanel> controle.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.UI.UpdatePanel.ChildrenAsTriggers" /> property is set to <see langword="false" />, and the <see cref="P:System.Web.UI.UpdatePanel.UpdateMode" /> property is set to <see cref="F:System.Web.UI.UpdatePanelUpdateMode.Always" />.</exception>
        <altmember cref="P:System.Web.UI.UpdatePanel.ChildrenAsTriggers" />
        <altmember cref="P:System.Web.UI.UpdatePanel.UpdateMode" />
      </Docs>
    </Member>
    <Member MemberName="OnUnload">
      <MemberSignature Language="C#" Value="protected internal override void OnUnload (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnUnload(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.OnUnload(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnUnload (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnUnload(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUnload : EventArgs -&gt; unit&#xA;override this.OnUnload : EventArgs -&gt; unit" Usage="updatePanel.OnUnload e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">An <see cref="T:System.EventArgs" /> object that contains event data.</param>
        <summary>Raises the base <see cref="E:System.Web.UI.Control.Unload" /> event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.UpdatePanel.OnUnload%2A> método é usado por desenvolvedores de controle para estender a funcionalidade do <xref:System.Web.UI.UpdatePanel> controle  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member Render : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="updatePanel.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">An <see cref="T:System.Web.UI.HtmlTextWriter" /> object that represents the output stream for rendering HTML content.</param>
        <summary>Raises the <see cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" /> event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.UpdatePanel.Render%2A> método é usado por desenvolvedores de controle para estender a funcionalidade do <xref:System.Web.UI.UpdatePanel> controle.  
  
 O <xref:System.Web.UI.UpdatePanel.Render%2A> método grava o conteúdo renderizado do <xref:System.Web.UI.UpdatePanel> controle para o navegador usando fornecido <xref:System.Web.UI.HtmlTextWriter> objeto. Quando você substitui o <xref:System.Web.UI.UpdatePanel.Render%2A> método em uma classe derivada, certifique-se de chamar o <xref:System.Web.UI.UpdatePanel.Render%2A> método da base de classe, de modo que os controles filho do <xref:System.Web.UI.UpdatePanel> controle são renderizadas.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderChildren">
      <MemberSignature Language="C#" Value="protected internal override void RenderChildren (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderChildren(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.RenderChildren(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderChildren (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderChildren(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderChildren : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderChildren : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="updatePanel.RenderChildren writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">An <see cref="T:System.Web.UI.HtmlTextWriter" /> object that represents the output stream for rendering HTML content.</param>
        <summary>Raises the <see cref="M:System.Web.UI.UpdatePanel.RenderChildren(System.Web.UI.HtmlTextWriter)" /> event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.UpdatePanel.RenderChildren%2A> método é usado por desenvolvedores de controle para estender a funcionalidade do <xref:System.Web.UI.UpdatePanel> controle.  
  
 O <xref:System.Web.UI.UpdatePanel.RenderChildren%2A> método grava o conteúdo renderizado do <xref:System.Web.UI.UpdatePanel> controle para o navegador usando fornecido <xref:System.Web.UI.HtmlTextWriter> objeto. Quando você substitui o <xref:System.Web.UI.UpdatePanel.RenderChildren%2A> método em uma classe derivada, certifique-se de chamar o <xref:System.Web.UI.UpdatePanel.RenderChildren%2A> método da base de classe, de modo que os controles filho do <xref:System.Web.UI.UpdatePanel> controle são renderizadas.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.UpdatePanelRenderMode RenderMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.UpdatePanelRenderMode RenderMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.RenderMode" />
      <MemberSignature Language="VB.NET" Value="Public Property RenderMode As UpdatePanelRenderMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::UpdatePanelRenderMode RenderMode { System::Web::UI::UpdatePanelRenderMode get(); void set(System::Web::UI::UpdatePanelRenderMode value); };" />
      <MemberSignature Language="F#" Value="member this.RenderMode : System.Web.UI.UpdatePanelRenderMode with get, set" Usage="System.Web.UI.UpdatePanel.RenderMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.UpdatePanelRenderMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether an <see cref="T:System.Web.UI.UpdatePanel" /> control's content is enclosed in an HTML <see langword="&lt;div&gt;" /> or <see langword="&lt;span&gt;" /> element.</summary>
        <value>Um dos valores de <see cref="T:System.Web.UI.UpdatePanelRenderMode" />. O padrão é <see cref="F:System.Web.UI.UpdatePanelRenderMode.Block" />, para que o conteúdo do painel seja circunscrito em um elemento HTML <see langword="&lt;div&gt;" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o <xref:System.Web.UI.UpdatePanel.RenderMode%2A> estiver definida como <xref:System.Web.UI.UpdatePanelRenderMode.Inline>, o conteúdo de um <xref:System.Web.UI.UpdatePanel> controle é renderizado dentro de uma marca HTML `<span>` elemento. Se o <xref:System.Web.UI.UpdatePanel.RenderMode%2A> estiver definida como <xref:System.Web.UI.UpdatePanelRenderMode.Block>, ele é renderizado dentro de uma marca HTML `<div>` elemento.  
  
   
  
## Examples  
 O exemplo a seguir mostra como definir o <xref:System.Web.UI.UpdatePanel.RenderMode%2A> propriedade declarativamente. O <xref:System.Web.UI.UpdatePanel> controle chamado `UpdatePanel1` é renderizado em um HTML `<span>` elemento. Se o <xref:System.Web.UI.UpdatePanel.RenderMode%2A> definida como <xref:System.Web.UI.UpdatePanelRenderMode.Block>, o parágrafo resultante seria exibido retirado por causa da maneira em que o HTML `<div>` elemento é renderizado.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.RenderMode#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.RenderMode/CS/UpdatePanelRenderModeCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.RenderMode#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.RenderMode/VB/UpdatePanelRenderModeVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.UpdatePanelRenderMode" />
      </Docs>
    </Member>
    <Member MemberName="RequiresUpdate">
      <MemberSignature Language="C#" Value="protected internal virtual bool RequiresUpdate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUpdate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.RequiresUpdate" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property RequiresUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool RequiresUpdate { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresUpdate : bool" Usage="System.Web.UI.UpdatePanel.RequiresUpdate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the content of the <see cref="T:System.Web.UI.UpdatePanel" /> control will be updated.</summary>
        <value>
          <see langword="true" /> Se o <see cref="T:System.Web.UI.UpdatePanel" /> conteúdo do controle será atualizado; caso contrário, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Por padrão, o <xref:System.Web.UI.UpdatePanel.RequiresUpdate%2A> propriedade retorna `true` se o <xref:System.Web.UI.UpdatePanel.Update%2A> método foi chamado explicitamente ou se o <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> estiver definida como <xref:System.Web.UI.UpdatePanelUpdateMode.Always>.  
  
 Esta propriedade destina para uso por desenvolvedores de controle que desejam estender o <xref:System.Web.UI.UpdatePanel> controle. Por exemplo, em classes derivadas, você pode fornecer a lógica adicional para determinar se um <xref:System.Web.UI.UpdatePanel> controle deve ser atualizado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IAttributeAccessor.GetAttribute">
      <MemberSignature Language="C#" Value="string IAttributeAccessor.GetAttribute (string key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Web.UI.IAttributeAccessor.GetAttribute(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetAttribute (key As String) As String Implements IAttributeAccessor.GetAttribute" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Web.UI.IAttributeAccessor.GetAttribute(System::String ^ key) = System::Web::UI::IAttributeAccessor::GetAttribute;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">The name of the attribute.</param>
        <summary>Returns an attribute of a Web control by using a specified name.</summary>
        <returns>The value of the attribute.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este membro é uma implementação do membro de interface explícita. Ele só pode ser usado quando a instância de <xref:System.Web.UI.UpdatePanel> é convertida em uma interface de <xref:System.Web.UI.IAttributeAccessor>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IAttributeAccessor.SetAttribute">
      <MemberSignature Language="C#" Value="void IAttributeAccessor.SetAttribute (string key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IAttributeAccessor.SetAttribute(string key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub SetAttribute (key As String, value As String) Implements IAttributeAccessor.SetAttribute" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IAttributeAccessor.SetAttribute(System::String ^ key, System::String ^ value) = System::Web::UI::IAttributeAccessor::SetAttribute;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">The name of the attribute to set.</param>
        <param name="value">The value of the attribute to set.</param>
        <summary>Sets the value of the specified control attribute.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este membro é uma implementação do membro de interface explícita. Ele só pode ser usado quando a instância de <xref:System.Web.UI.UpdatePanel> é convertida em uma interface de <xref:System.Web.UI.IAttributeAccessor>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Triggers">
      <MemberSignature Language="C#" Value="public System.Web.UI.UpdatePanelTriggerCollection Triggers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.UpdatePanelTriggerCollection Triggers" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.Triggers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Triggers As UpdatePanelTriggerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::UpdatePanelTriggerCollection ^ Triggers { System::Web::UI::UpdatePanelTriggerCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Triggers : System.Web.UI.UpdatePanelTriggerCollection" Usage="System.Web.UI.UpdatePanel.Triggers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UpdatePanelTriggerCollectionEditor, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.UpdatePanelTriggerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an <see cref="T:System.Web.UI.UpdatePanelTriggerCollection" /> object that contains <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> and <see cref="T:System.Web.UI.PostBackTrigger" /> objects that were registered declaratively for the <see cref="T:System.Web.UI.UpdatePanel" /> control.</summary>
        <value>Uma coleção de objetos do tipo <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> e <see cref="T:System.Web.UI.PostBackTrigger" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.UpdatePanel.Triggers%2A> propriedade obtém uma coleção de todos os gatilhos que foram definidos para o <xref:System.Web.UI.UpdatePanel> controle. (Você pode definir gatilhos declarativamente usando o **Coleção UpdatePanelTrigger** caixa de diálogo no designer ou usando o `<Triggers>` elemento do <xref:System.Web.UI.UpdatePanel> controle.) A coleção inclui <xref:System.Web.UI.AsyncPostBackTrigger> e <xref:System.Web.UI.PostBackTrigger> objetos.  
  
 Gatilhos declarativos que são definidos na <xref:System.Web.UI.UpdatePanel.Triggers%2A> coleção não são rastreadas no estado de exibição.  
  
 Quando um controle que é um contêiner de nomenclatura é usado como um disparador, todos os seus controles filho que podem causar postbacks se comportarão como disparadores.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.UpdatePanelTriggerCollection" />
        <altmember cref="T:System.Web.UI.UpdatePanelTrigger" />
        <altmember cref="T:System.Web.UI.AsyncPostBackTrigger" />
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl(System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterPostBackControl(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public void Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.Update" />
      <MemberSignature Language="VB.NET" Value="Public Sub Update ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Update();" />
      <MemberSignature Language="F#" Value="member this.Update : unit -&gt; unit" Usage="updatePanel.Update " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Causes an update of the content of an <see cref="T:System.Web.UI.UpdatePanel" /> control.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se a página está habilitada para a renderização parcial da página, quando você invoca o <xref:System.Web.UI.UpdatePanel.Update%2A> método, o <xref:System.Web.UI.UpdatePanel> conteúdo do controle é atualizado no navegador. Chame o <xref:System.Web.UI.UpdatePanel.Update%2A> método se você tiver um código de servidor que deve ser executada para determinar se um <xref:System.Web.UI.UpdatePanel> controle deve ser atualizado. Se você planeja usar o <xref:System.Web.UI.UpdatePanel.Update%2A> método, defina a <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> propriedade <xref:System.Web.UI.UpdatePanelUpdateMode.Conditional>. Se você quiser que a decisão para atualizar o painel na lógica de servidor, verifique se o <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> é de propriedade `false` e que nenhum gatilho explícito é definido para o painel.  
  
 Em um cenário de desenvolvimento típico de página, se você definir os gatilhos ou se o <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> é de propriedade `true` para o <xref:System.Web.UI.UpdatePanel> controle, o <xref:System.Web.UI.UpdatePanel.Update%2A> método é chamado automaticamente durante o ciclo de vida da página.  
  
 Se o <xref:System.Web.UI.UpdatePanel.ContentTemplate%2A> propriedade não está definida para o <xref:System.Web.UI.UpdatePanel> controlar, nenhuma atualização do painel ocorrerá.  
  
   
  
## Examples  
 O exemplo a seguir usa o <xref:System.Web.UI.UpdatePanel.Update%2A> método para atualizar o conteúdo de um <xref:System.Web.UI.UpdatePanel> controlar quando mais de cinco segundos decorridos desde a última atualização.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.UpdateMode#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.UpdateMode/CS/UpdatePanelUpdateModeCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.UpdateMode#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.UpdateMode/VB/UpdatePanelUpdateModeVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.UI.UpdatePanel.UpdateMode" /> property is set to <see cref="F:System.Web.UI.UpdatePanelUpdateMode.Always" />.  \- or –  The <see cref="M:System.Web.UI.UpdatePanel.Update" /> method is called during or after the page's <see cref="M:System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)" /> event.</exception>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplate" />
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="UpdateMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.UpdatePanelUpdateMode UpdateMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.UpdatePanelUpdateMode UpdateMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.UpdateMode" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateMode As UpdatePanelUpdateMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::UpdatePanelUpdateMode UpdateMode { System::Web::UI::UpdatePanelUpdateMode get(); void set(System::Web::UI::UpdatePanelUpdateMode value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateMode : System.Web.UI.UpdatePanelUpdateMode with get, set" Usage="System.Web.UI.UpdatePanel.UpdateMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.UpdatePanelUpdateMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates when an <see cref="T:System.Web.UI.UpdatePanel" /> control's content is updated.</summary>
        <value>Um dos valores de <see cref="T:System.Web.UI.UpdatePanelUpdateMode" />. O padrão é <see cref="F:System.Web.UI.UpdatePanelUpdateMode.Always" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando um <xref:System.Web.UI.UpdatePanel> controle não está dentro de outra <xref:System.Web.UI.UpdatePanel> controle, o painel é atualizado de acordo com as configurações da <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> e <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> propriedades, junto com a coleção de disparadores. Quando um <xref:System.Web.UI.UpdatePanel> controle está dentro de outro <xref:System.Web.UI.UpdatePanel> controle, o painel filho é atualizado automaticamente quando o painel pai é atualizado.  
  
 O conteúdo de um <xref:System.Web.UI.UpdatePanel> controle será atualizado nas seguintes circunstâncias:  
  
-   Se o <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> estiver definida como <xref:System.Web.UI.UpdatePanelUpdateMode.Always>, o <xref:System.Web.UI.UpdatePanel> conteúdo do controle é atualizado em cada postagem que se origina em qualquer lugar na página. Isso inclui os postbacks assíncronos de controles que estão dentro de outros <xref:System.Web.UI.UpdatePanel> controles e postagens de controles que não estão dentro <xref:System.Web.UI.UpdatePanel> controles.  
  
-   Se o <xref:System.Web.UI.UpdatePanel> controle está aninhado em outro <xref:System.Web.UI.UpdatePanel> controle e o painel de atualização do pai é atualizada.  
  
-   Se o <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> estiver definida como <xref:System.Web.UI.UpdatePanelUpdateMode.Conditional>, e uma das seguintes condições ocorre:  
  
    -   Você chama o <xref:System.Web.UI.UpdatePanel.Update%2A> método o <xref:System.Web.UI.UpdatePanel> controlar explicitamente.  
  
    -   A postagem é causada por um controle que é definido como um gatilho usando o <xref:System.Web.UI.UpdatePanel.Triggers%2A> propriedade do <xref:System.Web.UI.UpdatePanel> controle. Nesse cenário, o controle explicitamente dispara uma atualização do conteúdo do painel. O controle pode ser interno ou externo a <xref:System.Web.UI.UpdatePanel> controle que define o gatilho.  
  
    -   O <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> estiver definida como `true` e um controle filho a <xref:System.Web.UI.UpdatePanel> controle causa um postback. Um controle filho aninhado <xref:System.Web.UI.UpdatePanel> controle não faz com que uma atualização para o exterior <xref:System.Web.UI.UpdatePanel> de controle, a menos que seja explicitamente definido como um gatilho.  
  
   
  
## Examples  
 O exemplo a seguir mostra como usar o <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> propriedade. O exemplo declara dois <xref:System.Web.UI.UpdatePanel> controles. No primeiro painel, o <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> estiver definida como <xref:System.Web.UI.UpdatePanelUpdateMode.Conditional>. No painel de segunda <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> é definido como <xref:System.Web.UI.UpdatePanelUpdateMode.Always>. Um botão fora os dois painéis está registrado como um controle de postback assíncrono, chamando o <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> método da <xref:System.Web.UI.ScriptManager> controle. O botão `Click` manipulador de eventos, o <xref:System.Web.UI.UpdatePanel.Update%2A> método do primeiro painel é chamado se mais de cinco segundos decorridos desde sua última atualização. Nesse cenário, de conteúdo o painel é atualizado apenas se a última atualização do painel foi há mais de cinco segundos. O conteúdo do segundo painel esteja sempre atualizado.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.UpdateMode#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.UpdateMode/CS/UpdatePanelUpdateModeCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.UpdateMode#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.UpdateMode/VB/UpdatePanelUpdateModeVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The specified type is not one of the <see cref="T:System.Web.UI.UpdatePanelUpdateMode" /> values.</exception>
        <altmember cref="T:System.Web.UI.UpdatePanelUpdateMode" />
        <altmember cref="M:System.Web.UI.UpdatePanel.Update" />
        <altmember cref="P:System.Web.UI.UpdatePanel.ChildrenAsTriggers" />
      </Docs>
    </Member>
  </Members>
</Type>