<Type Name="RoleServiceManager" FullName="System.Web.UI.RoleServiceManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="afc4ed173416efb51717d0cb2baf2d3744f29c40" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37530309" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RoleServiceManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RoleServiceManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.RoleServiceManager" />
  <TypeSignature Language="VB.NET" Value="Public Class RoleServiceManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class RoleServiceManager" />
  <TypeSignature Language="F#" Value="type RoleServiceManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Path")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.EmptyStringExpandableObjectConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Configura o local de uma implementação personalizada do serviço de função.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.RoleServiceManager> classe corresponde à <xref:System.Web.UI.ScriptManager.RoleService%2A> propriedade da <xref:System.Web.UI.ScriptManager> ou <xref:System.Web.UI.ScriptManagerProxy> controle.  
  
 A função do serviço Web é usada por aplicativos habilitados para AJAX para recuperar informações de função para o usuário autenticado atual usando uma chamada de serviço da Web assíncrona. Você pode usar <xref:System.Web.UI.RoleServiceManager> para fornecer o caminho de uma implementação alternativa da função de serviço da Web em vez de usar o serviço da Web interno.  
  
 Para usar o serviço de função em seu aplicativo, você deve habilitá-lo no arquivo de configuração e declará-la na página. Se você usar a função interna do serviço Web, você precisa habilitá-lo, mas você não precisa declarar explicitamente a função do service manager na página.  
  
 Para criar um serviço de função personalizada, você deve implementar um serviço Web que tem dois métodos: `GetRolesForCurrentUser` e `IsCurrentUserInRole`. Esses métodos devem ter a mesma assinatura que os métodos correspondentes da função interna de serviço Web.  
  
 O exemplo a seguir mostra a estrutura de classe básica que deve ser implementada em uma classe de serviço Web de função personalizada.  
  
  
  
 Para usar uma função personalizada de serviço da Web, você pode adicionar o serviço declarativamente na marcação, colocando uma `RoleService` elemento dentro do <xref:System.Web.UI.ScriptManager> controle, conforme mostrado no exemplo a seguir.  
  
```  
<asp:ScriptManager ID="SM1" runat="server">  
  <RoleService Path="MyRoleService.asmx" LoadRoles="true" />  
</asp:ScriptManager>  
```  
  
 Você pode definir também programaticamente o <xref:System.Web.UI.RoleServiceManager.Path%2A> propriedade para usar uma função personalizada de serviço Web.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Configuration.ScriptingRoleServiceSection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RoleServiceManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.RoleServiceManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RoleServiceManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.UI.RoleServiceManager" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadRoles">
      <MemberSignature Language="C#" Value="public bool LoadRoles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LoadRoles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.RoleServiceManager.LoadRoles" />
      <MemberSignature Language="VB.NET" Value="Public Property LoadRoles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LoadRoles { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.LoadRoles : bool with get, set" Usage="System.Web.UI.RoleServiceManager.LoadRoles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se a lista de funções do usuário conectado no momento deve ser recuperada.</summary>
        <value>
          <see langword="true" /> Se a lista de funções deve ser recuperada. Caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o <xref:System.Web.UI.RoleServiceManager.LoadRoles%2A> estiver definida como `true`, a lista de funções é recuperada pela <xref:System.Web.UI.RoleServiceManager> classe usando o <xref:System.Web.Security.Roles.GetRolesForUser%2A?displayProperty=nameWithType> método. A lista, em seguida, é serializada em marcação da página.  
  
> [!NOTE]
>  Quando <xref:System.Web.UI.RoleServiceManager.LoadRoles%2A> é `true`, todas as funções que o usuário autenticado atual pertence a são enviadas para o navegador. Como os usuários potencialmente podem ver as informações de função, isso pode ser um problema de segurança.  
  
 O <xref:System.Web.UI.RoleServiceManager.LoadRoles%2A> propriedade pode ser especificada em de <xref:System.Web.UI.ScriptManager> controle ou em um tipo de <xref:System.Web.UI.ScriptManagerProxy> controle. Se <xref:System.Web.UI.RoleServiceManager.LoadRoles%2A> é definido como `true` para uma instância de proxy, a lista de funções é recuperada e adicionada à página. Se <xref:System.Web.UI.RoleServiceManager.LoadRoles%2A> é `false`, as funções não são adicionadas à marcação da página. Nesse caso, você pode usar o método para armazenar informações de função na memória no navegador.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ScriptManager" />
        <altmember cref="T:System.Web.UI.ScriptManagerProxy" />
        <altmember cref="M:System.Web.Security.Roles.GetRolesForUser" />
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.RoleServiceManager.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.Web.UI.RoleServiceManager.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o caminho do serviço de função.</summary>
        <value>O caminho do serviço Web de função personalizada.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o <xref:System.Web.UI.RoleServiceManager.Path%2A> não está definida, o valor de retorno é <xref:System.String.Empty?displayProperty=nameWithType>. Nesse caso, o ASP.NET usa a autenticação integrada do serviço Web que corresponde ao seguinte caminho interno padrão: ~ / RolesService.svc. O mesmo comportamento ocorre se você definir <xref:System.Web.UI.RoleServiceManager.Path%2A> para uma cadeia de caracteres vazia ou `null`.  
  
 <xref:System.Web.UI.RoleServiceManager.Path%2A> pode ser especificado na <xref:System.Web.UI.ScriptManager> controle ou em um tipo de <xref:System.Web.UI.ScriptManagerProxy> controle. Quando <xref:System.Web.UI.RoleServiceManager.Path%2A> é definida como o <xref:System.Web.UI.ScriptManagerProxy> nível, as seguintes condições forem verdadeiras:  
  
-   Se houver vários objetos de proxy na hierarquia de controle, <xref:System.Web.UI.RoleServiceManager.Path%2A> não precisa ser definido para cada instância do proxy.  
  
-   Se <xref:System.Web.UI.RoleServiceManager.Path%2A> é explicitamente definido para um objeto de proxy, o valor deve ser o mesmo para todos os outro proxy objetos que essa propriedade é definida para. Se você definir caminhos diferentes para objetos de proxy diferente na hierarquia de controle, um <xref:System.ArgumentException> exceção é lançada.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Mais de um caminho exclusivo foi definido na hierarquia do controle.</exception>
      </Docs>
    </Member>
  </Members>
</Type>