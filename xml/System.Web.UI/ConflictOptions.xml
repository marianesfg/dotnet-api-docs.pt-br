<Type Name="ConflictOptions" FullName="System.Web.UI.ConflictOptions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dff7dbbe50196456c8014e8d0eee632fceedaa6b" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37588921" /></Metadata><TypeSignature Language="C#" Value="public enum ConflictOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ConflictOptions extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ConflictOptions" />
  <TypeSignature Language="VB.NET" Value="Public Enum ConflictOptions" />
  <TypeSignature Language="C++ CLI" Value="public enum class ConflictOptions" />
  <TypeSignature Language="F#" Value="type ConflictOptions = " />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="4f973-101">Determina como os controles de fonte de dados do ASP.NET lida com conflitos ao atualizar ou excluir dados.</span><span class="sxs-lookup"><span data-stu-id="4f973-101">Determines how ASP.NET data source controls handle data conflicts when updating or deleting data.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f973-102">Controle de simultaneidade é uma técnica de armazenamentos de dados usam para controlar como os dados são lidos e alterados no repositório quando vários clientes estão acessando e manipulando os mesmos dados.</span><span class="sxs-lookup"><span data-stu-id="4f973-102">Concurrency control is a technique that data stores use to control how data is read and changed in the store when multiple clients are accessing and manipulating the same data.</span></span> <span data-ttu-id="4f973-103">Por exemplo, um cliente lê os dados e apresenta-as para um usuário, enquanto outro cliente lê os mesmos dados e apresenta-as para um usuário diferente.</span><span class="sxs-lookup"><span data-stu-id="4f973-103">For example, one client reads data and presents it to a user, while another client reads the same data, and presents it to a different user.</span></span> <span data-ttu-id="4f973-104">Se ambos os usuários atualizam os dados e enviá-lo para o armazenamento de dados, alguns resultados inesperados poderão ocorrer, pois os clientes podem atualizar diferentes valores para os mesmos dados.</span><span class="sxs-lookup"><span data-stu-id="4f973-104">If both users update the data and submit it to the data storage, some unexpected result might occur, because the clients might update different values for the same data.</span></span> <span data-ttu-id="4f973-105">Isso é considerado um conflito.</span><span class="sxs-lookup"><span data-stu-id="4f973-105">This is considered a conflict.</span></span>  
  
 <span data-ttu-id="4f973-106">O `ConflictDetection` propriedade que é definida para controles de fonte de dados do ASP.NET é usada para determinar como um controle manipula conflitos de dados no armazenamento de dados subjacente ao armazenamento de dados subjacente está usando a simultaneidade otimista e uma exclusão ou operação de atualização executada.</span><span class="sxs-lookup"><span data-stu-id="4f973-106">The `ConflictDetection` property that is defined for ASP.NET data source controls is used to determine how a control handles data conflicts in the underlying data storage when the underlying data storage is using optimistic concurrency and a delete or update operation is performed.</span></span>  
  
 <span data-ttu-id="4f973-107">Por padrão, o `ConflictDetection` estiver definida como OverwriteChanges, o que significa que o controle de fonte de dados substituirá as alterações feitas em uma linha de dados entre a hora em que o controle de fonte de dados primeiro ler dados da linha e a hora em que a linha é atualizada.</span><span class="sxs-lookup"><span data-stu-id="4f973-107">By default, the `ConflictDetection` property is set to OverwriteChanges, which means the data source control will overwrite any changes made to a data row between the time the data source control first read data from the row and the time that the row is updated.</span></span> <span data-ttu-id="4f973-108">A chave primária é usada para localizar a linha de dados que será atualizada ou excluída, mas nenhuma outra comparação dos dados é executada.</span><span class="sxs-lookup"><span data-stu-id="4f973-108">The primary key is used for locating the data row that will be updated or deleted, but no other comparison of the data is performed.</span></span> <span data-ttu-id="4f973-109">Se o controle de fonte de dados estiver configurado para usar a opção CompareAllValues, no entanto, o controle passa os dados originais na `oldValues` coleções do `Update` e `Delete` métodos para que você possa escrever lógica para atualizar ou excluir dados somente se Esses valores correspondem aos valores no momento no armazenamento de dados.</span><span class="sxs-lookup"><span data-stu-id="4f973-109">If the data source control is configured to use the CompareAllValues option, however, the control passes the original data in the `oldValues` collections of the `Update` and `Delete` methods so that you can write logic to update or delete data only if these values match the values currently in the data storage.</span></span> <span data-ttu-id="4f973-110">Os valores correspondentes indicam que os dados não foi alterado desde a hora em que foi lido.</span><span class="sxs-lookup"><span data-stu-id="4f973-110">The matching values indicate that the data has not changed since the time it was read.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection" />
    <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" />
    <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" />
    <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ConflictDetection" />
  </Docs>
  <Members>
    <Member MemberName="CompareAllValues">
      <MemberSignature Language="C#" Value="CompareAllValues" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.UI.ConflictOptions CompareAllValues = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.ConflictOptions.CompareAllValues" />
      <MemberSignature Language="VB.NET" Value="CompareAllValues" />
      <MemberSignature Language="C++ CLI" Value="CompareAllValues" />
      <MemberSignature Language="F#" Value="CompareAllValues = 1" Usage="System.Web.UI.ConflictOptions.CompareAllValues" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ConflictOptions</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="4f973-111">Um controle de fonte de dados usa a coleção <paramref name="oldValues" /> dos métodos <see langword="Update" /> e <see langword="Delete" /> para determinar se os dados foram alterados por outro processo.</span><span class="sxs-lookup"><span data-stu-id="4f973-111">A data source control uses the <paramref name="oldValues" /> collection of the <see langword="Update" /> and <see langword="Delete" /> methods to determine whether the data has been changed by another process.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="OverwriteChanges">
      <MemberSignature Language="C#" Value="OverwriteChanges" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.UI.ConflictOptions OverwriteChanges = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.ConflictOptions.OverwriteChanges" />
      <MemberSignature Language="VB.NET" Value="OverwriteChanges" />
      <MemberSignature Language="C++ CLI" Value="OverwriteChanges" />
      <MemberSignature Language="F#" Value="OverwriteChanges = 0" Usage="System.Web.UI.ConflictOptions.OverwriteChanges" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ConflictOptions</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="4f973-112">Um controle de fonte de dados substitui todos os valores em uma linha de dados com seus próprios valores para a linha.</span><span class="sxs-lookup"><span data-stu-id="4f973-112">A data source control overwrites all values in a data row with its own values for the row.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>