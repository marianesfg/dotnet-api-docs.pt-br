<Type Name="IBindableTemplate" FullName="System.Web.UI.IBindableTemplate">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c9a6dbfe48dcaff93c88cfbf3ef377466040ef32" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37531409" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IBindableTemplate : System.Web.UI.ITemplate" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IBindableTemplate implements class System.Web.UI.ITemplate" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IBindableTemplate" />
  <TypeSignature Language="VB.NET" Value="Public Interface IBindableTemplate&#xA;Implements ITemplate" />
  <TypeSignature Language="C++ CLI" Value="public interface class IBindableTemplate : System::Web::UI::ITemplate" />
  <TypeSignature Language="F#" Value="type IBindableTemplate = interface&#xA;    interface ITemplate" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.ITemplate</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Fornece uma maneira para os controles associados a dados do ASP.NET, como <see cref="T:System.Web.UI.WebControls.DetailsView" /> e <see cref="T:System.Web.UI.WebControls.FormView" />, se associarem automaticamente a um controle de fonte de dados do ASP.NET dentro das seções de conteúdo de modelo.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.IBindableTemplate> interface fornece uma maneira para controles de associação de dados do ASP.NET, como <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.GridView>, e <xref:System.Web.UI.WebControls.FormView>, para associar a dados fornecidos por um controle de fonte de dados do ASP.NET, como <xref:System.Web.UI.WebControls.ObjectDataSource> ou <xref:System.Web.UI.WebControls.SqlDataSource>, quando o controle de associação de dados inclui o conteúdo com modelo.  
  
> [!NOTE]
>  Os desenvolvedores de páginas não implementam a <xref:System.Web.UI.IBindableTemplate> interface. Os desenvolvedores que criam controles ligados a dados personalizados podem manipular <xref:System.Web.UI.IBindableTemplate> objetos em implementações do <xref:System.Web.UI.WebControls.DataBoundControl.PerformDataBinding%2A> e <xref:System.Web.UI.WebControls.GridView.ExtractRowValues%2A> métodos, mas não implementam seus próprios <xref:System.Web.UI.IBindableTemplate> objetos.  
  
 Controles ligados a dados, como <xref:System.Web.UI.WebControls.GridView> normalmente estão cientes de suas árvores de controle filho e pode, portanto, associar valores a eles, extrair valores deles e passar esses valores entre o controle associado a dados e um controle de fonte de dados sempre que ocorre a associação de dados . No entanto, quando um desenvolvedor de página define o conteúdo de modelo para um controle associado a dados, os controles filho dentro do modelo não são visíveis para o controle de associação de dados pai: o pai pode renderizar o filho de conteúdo (porque os controles com eficiência se renderizar sozinhos), mas ele não é possível extrair os valores desses controles filho para passar para a operação de exclusão, inserção ou atualização do controle do código-fonte um dado associado. Em cenários de vinculação de dados, o conteúdo com modelo é opaco para um controle de associação de dados pai. O `Bind` sintaxe possibilita o controle associado a dados extrair os valores de um controle associado a dados dentro de um <xref:System.Web.UI.IBindableTemplate> instância.  
  
 A associação de dados pode ser unidirecional ou bidirecional. (Essas instruções de associação são definidas pelo <xref:System.ComponentModel.BindingDirection> enumeração.) Associação de dados unidirecional é que qualquer associação de dados realizadas em uma direção de saída, de controle de fonte de dados para controle de associação de dados. Por exemplo, qualquer cenário de leitura de dados envolve a associação de dados unidirecional. Para associação de dados unidirecional, você pode usar a sintaxe de associação de dados unidirecional (`<%# Eval("fieldname") %>`) dentro do conteúdo do modelo e não precisa usar a sintaxe de vinculação de dados bidirecional do ASP.NET. Associação de dados bidirecional descreve a vinculação de dados na direção de entrada, do controle de associação de dados para o controle de fonte de dados. Associação de dados de edição automática, inserção e cenários de exclusão usando o ASP.NET e controles de fonte de dados são os cenários de associação de dados bidirecionais. Esses cenários usam expressões de associação de dados bidirecionais (`<%# Bind("fieldname") %>`). O <xref:System.Web.UI.IBindableTemplate> interface e a infra-estrutura do ASP.NET dão suporte à vinculação de dados automática, declarativa e bidirecional entre controles de fonte de dados do ASP.NET e o conteúdo com modelo. Para obter mais informações sobre expressões de associação de dados do ASP.NET e a sintaxe, consulte [aos bancos de dados de associação](http://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742) e [visão geral de expressões de associação de dados](http://msdn.microsoft.com/library/14cdd57d-0f82-4667-b503-73e1a96f136a).  
  
 Conteúdo de modelo para controles ligados a dados com mais frequência é definido declarativamente. A tabela a seguir descreve os processos mais comumente usados para associar dados de modelo para controles ligados a dados.  
  
|Controle de associação de dados|Processo|  
|-------------------------|-------------|  
|<xref:System.Web.UI.WebControls.DetailsView>|O controle associado a dados está associado a dados usando o `DataSourceID` propriedade de controle de fonte de dados e o conteúdo do modelo é definida em um <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A>, <xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A> ou <xref:System.Web.UI.WebControls.TemplateField.InsertItemTemplate%2A> propriedade.|  
|<xref:System.Web.UI.WebControls.GridView>|O controle associado a dados está associado a dados usando o `DataSourceID` propriedade de controle de fonte de dados e o conteúdo do modelo é definida em um <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A> ou <xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A> propriedade. O <xref:System.Web.UI.WebControls.GridView> controle não dá suporte a uma operação de inserção.|  
|<xref:System.Web.UI.WebControls.FormView>|O controle associado a dados está associado a dados usando o `DataSourceID` propriedade e o conteúdo de modelo é definido em um <xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>, <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>, ou <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> propriedade, ou em um <xref:System.Web.UI.WebControls.TemplateField> objeto.|  
  
 O <xref:System.Web.UI.WebControls.DataList> e <xref:System.Web.UI.WebControls.Repeater> controles não dão suporte a cenários de vinculação de dados bidirecionais automática.  
  
 ASP.NET cria implicitamente um <xref:System.Web.UI.IBindableTemplate> quando analisa o conteúdo de modelo que é associado a um controle de fonte de dados do ASP.NET dentro do modelo de objeto. Especificamente, o analisador do ASP.NET cria uma instância da <xref:System.Web.UI.CompiledBindableTemplateBuilder> classe quando ele analisa o conteúdo de modelo que usa a sintaxe de vinculação de dados do ASP.NET e contém controles de servidor Web do ASP.NET que dão suporte à vinculação de dados. Esses ASP.NET controles de servidor são marcados pelo <xref:System.ComponentModel.BindableAttribute> atributo.  
  
 O <xref:System.Web.UI.IBindableTemplate> interface define um método, <xref:System.Web.UI.IBindableTemplate.ExtractValues%2A>. Esse método é definido para a associação de dados bidirecional, para que um controle associado a dados pode extrair pares nome/valor de conteúdo com modelo e passar os pares para um controle de fonte de dados em tempo de execução automaticamente. Para associação de dados automática seja bem-sucedida, os nomes de campo extraídas do conteúdo com modelo pelo <xref:System.Web.UI.IBindableTemplate.ExtractValues%2A> método deve corresponder aos nomes de parâmetro em um controle de fonte de dados associado. Controlar os desenvolvedores chamada a <xref:System.Web.UI.IBindableTemplate.ExtractValues%2A> método explicitamente somente dentro de suas implementações de <xref:System.Web.UI.WebControls.FormView.ExtractRowValues%2A> ou algum outro método semelhante de um controle associado a dados personalizado.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como um <xref:System.Web.UI.WebControls.FormView> controle declarativamente pode definir o conteúdo com modelo, associar a dados fornecidos por um <xref:System.Web.UI.WebControls.SqlDataSource> controlar e exibir e editar os registros existentes. O analisador do ASP.NET analisa o conteúdo do modelo e cria um <xref:System.Web.UI.IBindableTemplate> objeto em tempo de execução que é capaz de associar valores da <xref:System.Web.UI.WebControls.SqlDataSource> controle para as áreas de vinculação de dados definidos no modelo por ambos os unidirecional sintaxe de vinculação de dados do ASP.NET (`<%# Eval("fieldname") %>`) e a sintaxe de vinculação de dados bidirecional (`<%# Bind("fieldname") %>`).  
  
> [!IMPORTANT]
>  Esse controle tem uma caixa de texto que aceita entrada do usuário, que é uma potencial ameaça de segurança. Por padrão, as páginas da Web do ASP.NET validam que a entrada do usuário não inclui elementos HTML ou script. Para obter mais informações, consulte [Visão geral de explorações de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[FormView#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormView/CS/formvieweditcs.aspx#1)]
 [!code-aspx-vb[FormView#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormView/VB/formvieweditvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.ITemplate" />
    <altmember cref="T:System.Web.UI.CompiledBindableTemplateBuilder" />
    <altmember cref="T:System.Web.UI.ExtractTemplateValuesMethod" />
    <altmember cref="T:System.ComponentModel.BindableAttribute" />
    <altmember cref="T:System.ComponentModel.BindingDirection" />
  </Docs>
  <Members>
    <Member MemberName="ExtractValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary ExtractValues (System.Web.UI.Control container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Specialized.IOrderedDictionary ExtractValues(class System.Web.UI.Control container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExtractValues (container As Control) As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Specialized::IOrderedDictionary ^ ExtractValues(System::Web::UI::Control ^ container);" />
      <MemberSignature Language="F#" Value="abstract member ExtractValues : System.Web.UI.Control -&gt; System.Collections.Specialized.IOrderedDictionary" Usage="iBindableTemplate.ExtractValues container" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="container">O <see cref="T:System.Web.UI.Control" /> do qual extrair pares nome/valor, que são passados pelo controle associado a dados para um controle de fonte de dados associado em cenários de associação de dados bidirecionais.</param>
        <summary>Quando implementado por uma classe, recupera um conjunto de pares nome-valor para valores associados usando a sintaxe de associação de dados bidirecional do ASP.NET dentro do conteúdo com modelo.</summary>
        <returns>Um <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> de pares nome/valor. O nome representa o nome de um controle dentro do conteúdo com modelo e o valor é o valor atual de um valor da propriedade associado usando a sintaxe de associação de dados bidirecional do ASP.NET.</returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>Um <see cref="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)" /> método deve estar de acordo com as seguintes regras: - se mais de uma associação existe para um determinado campo, a última associação que encontrou é usado.  -Para referenciar o identificador do controle no <see cref="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)" /> método, o controle também deve ter uma propriedade de ID definida pelo usuário no momento da análise. Se não existe uma ID, isso resulta em um erro de análise.  -A sintaxe de vinculação de dados bidirecional do ASP.NET só é válido em uma <see cref="T:System.Web.UI.ITemplate" /> ou <see cref="T:System.Web.UI.IBindableTemplate" /> propriedade de um controle associado a dados.</para>
        </block>
        <altmember cref="T:System.Web.UI.CompiledBindableTemplateBuilder" />
        <altmember cref="T:System.Web.UI.ExtractTemplateValuesMethod" />
      </Docs>
    </Member>
  </Members>
</Type>