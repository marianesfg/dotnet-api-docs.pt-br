<Type Name="DocumentPaginator" FullName="System.Windows.Documents.DocumentPaginator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="048a68363397559370c5e3ed6a38e3c61f08936d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DocumentPaginator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DocumentPaginator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.DocumentPaginator" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DocumentPaginator" />
  <TypeSignature Language="C++ CLI" Value="public ref class DocumentPaginator abstract" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="8ad81-101">Fornece uma classe base abstrata que dá suporte à criação de elementos de várias páginas com base em um único documento.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8ad81-101">Provides an abstract base class that supports creation of multiple-page elements from a single document.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ad81-102">Se você precisar repaginação automática em segundo plano em resposta a eventos como alterar o tamanho da página de um <xref:System.Windows.Documents.FlowDocument>, em seguida, use <xref:System.Windows.Documents.DynamicDocumentPaginator> como sua classe base.</span><span class="sxs-lookup"><span data-stu-id="8ad81-102">If you need automatic background repagination in response to events such as changing the page size of a <xref:System.Windows.Documents.FlowDocument>, then use <xref:System.Windows.Documents.DynamicDocumentPaginator> as your base class.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DocumentPaginator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.DocumentPaginator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DocumentPaginator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ad81-103">Inicializa uma nova instância da classe <see cref="T:System.Windows.Documents.DocumentPaginator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ad81-103">Initializes a new instance of the <see cref="T:System.Windows.Documents.DocumentPaginator" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelAsync">
      <MemberSignature Language="C#" Value="public virtual void CancelAsync (object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelAsync(object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.DocumentPaginator.CancelAsync(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CancelAsync (userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CancelAsync(System::Object ^ userState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userState">
          <span data-ttu-id="8ad81-104">O <c>userState</c> passado para <see cref="Overload:System.Windows.Documents.DocumentPaginator.GetPageAsync" />, <see cref="Overload:System.Windows.Documents.DynamicDocumentPaginator.GetPageNumberAsync" /> ou <see cref="Overload:System.Windows.Documents.DocumentPaginator.ComputePageCountAsync" /> que identifica a tarefa assíncrona a ser cancelada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ad81-104">The original <c>userState</c> passed to <see cref="Overload:System.Windows.Documents.DocumentPaginator.GetPageAsync" />, <see cref="Overload:System.Windows.Documents.DynamicDocumentPaginator.GetPageNumberAsync" />, or <see cref="Overload:System.Windows.Documents.DocumentPaginator.ComputePageCountAsync" /> that identifies the asynchronous task to cancel.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ad81-105">Cancela uma operação <see cref="Overload:System.Windows.Documents.DocumentPaginator.GetPageAsync" /> ou <see cref="Overload:System.Windows.Documents.DynamicDocumentPaginator.GetPageNumberAsync" /> anterior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ad81-105">Cancels a previous <see cref="Overload:System.Windows.Documents.DocumentPaginator.GetPageAsync" /> or <see cref="Overload:System.Windows.Documents.DynamicDocumentPaginator.GetPageNumberAsync" /> operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ad81-106">Se `userState` é `null`, em seguida, todas as tarefas assíncronas são canceladas.</span><span class="sxs-lookup"><span data-stu-id="8ad81-106">If `userState` is `null`, then all asynchronous tasks are cancelled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComputePageCount">
      <MemberSignature Language="C#" Value="public virtual void ComputePageCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComputePageCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.DocumentPaginator.ComputePageCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ComputePageCount ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ComputePageCount();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ad81-107">Força uma paginação do conteúdo, atualiza <see cref="P:System.Windows.Documents.DocumentPaginator.PageCount" /> com o novo total e define <see cref="P:System.Windows.Documents.DocumentPaginator.IsPageCountValid" /> como <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ad81-107">Forces a pagination of the content, updates <see cref="P:System.Windows.Documents.DocumentPaginator.PageCount" /> with the new total, and sets <see cref="P:System.Windows.Documents.DocumentPaginator.IsPageCountValid" /> to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ad81-108"><xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid%2A> será `true` imediatamente depois que isso é chamado.</span><span class="sxs-lookup"><span data-stu-id="8ad81-108"><xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid%2A> will be `true` immediately after this is called.</span></span> <span data-ttu-id="8ad81-109">Se o conteúdo for modificado ou <xref:System.Windows.Documents.DocumentPaginator.PageSize%2A> for alterado depois que este método é chamado, <xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid%2A> provavelmente será revertido para `false`.</span><span class="sxs-lookup"><span data-stu-id="8ad81-109">If content is modified or <xref:System.Windows.Documents.DocumentPaginator.PageSize%2A> is changed after this method is called, <xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid%2A> will likely revert to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ComputePageCountAsync">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8ad81-110">De forma assíncrona, força uma paginação do conteúdo, atualiza <see cref="P:System.Windows.Documents.DocumentPaginator.PageCount" /> com o novo total e define <see cref="P:System.Windows.Documents.DocumentPaginator.IsPageCountValid" /> como <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ad81-110">Asynchronously, forces a pagination of the content, updates <see cref="P:System.Windows.Documents.DocumentPaginator.PageCount" /> with the new total, and sets <see cref="P:System.Windows.Documents.DocumentPaginator.IsPageCountValid" /> to <see langword="true" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ComputePageCountAsync">
      <MemberSignature Language="C#" Value="public virtual void ComputePageCountAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComputePageCountAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.DocumentPaginator.ComputePageCountAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ComputePageCountAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ComputePageCountAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ad81-111">De forma assíncrona, força uma paginação do conteúdo, atualiza <see cref="P:System.Windows.Documents.DocumentPaginator.PageCount" /> com o novo total e define <see cref="P:System.Windows.Documents.DocumentPaginator.IsPageCountValid" /> como <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ad81-111">Asynchronously, forces a pagination of the content, updates <see cref="P:System.Windows.Documents.DocumentPaginator.PageCount" /> with the new total, and sets <see cref="P:System.Windows.Documents.DocumentPaginator.IsPageCountValid" /> to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ad81-112">É a única maneira de cancelar a operação assíncrona do método Cancelar todas as operações assíncronas.</span><span class="sxs-lookup"><span data-stu-id="8ad81-112">The only way to cancel the asynchronous operation of this method is to cancel all asynchronous operations.</span></span> <span data-ttu-id="8ad81-113">Compare isso com a outra sobrecarga desse método: <xref:System.Windows.Documents.DocumentPaginator.ComputePageCountAsync%28System.Object%29>.</span><span class="sxs-lookup"><span data-stu-id="8ad81-113">Contrast this with the other overload of this method: <xref:System.Windows.Documents.DocumentPaginator.ComputePageCountAsync%28System.Object%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComputePageCountAsync">
      <MemberSignature Language="C#" Value="public virtual void ComputePageCountAsync (object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComputePageCountAsync(object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.DocumentPaginator.ComputePageCountAsync(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ComputePageCountAsync (userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ComputePageCountAsync(System::Object ^ userState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userState">
          <span data-ttu-id="8ad81-114">Um identificador exclusivo para a tarefa assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ad81-114">A unique identifier for the asynchronous task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ad81-115">De forma assíncrona, força uma paginação do conteúdo, atualiza <see cref="P:System.Windows.Documents.DocumentPaginator.PageCount" /> com o novo total, define <see cref="P:System.Windows.Documents.DocumentPaginator.IsPageCountValid" /> como <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ad81-115">Asynchronously, forces a pagination of the content, updates <see cref="P:System.Windows.Documents.DocumentPaginator.PageCount" /> with the new total, sets <see cref="P:System.Windows.Documents.DocumentPaginator.IsPageCountValid" /> to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ad81-116">A ID especificada é atribuída para a tarefa assíncrona.</span><span class="sxs-lookup"><span data-stu-id="8ad81-116">The specified ID is assigned to the asynchronous task.</span></span>  
  
 <span data-ttu-id="8ad81-117">Esta sobrecarga do método torna possível cancelar essa operação assíncrona sem cancelar todas as operações assíncronas.</span><span class="sxs-lookup"><span data-stu-id="8ad81-117">This overload of the method makes it possible to cancel this asynchronous operation without cancelling all asynchronous operations.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComputePageCountCompleted">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.AsyncCompletedEventHandler ComputePageCountCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.AsyncCompletedEventHandler ComputePageCountCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Documents.DocumentPaginator.ComputePageCountCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Event ComputePageCountCompleted As AsyncCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::AsyncCompletedEventHandler ^ ComputePageCountCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AsyncCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ad81-118">Ocorre quando uma operação <see cref="Overload:System.Windows.Documents.DocumentPaginator.ComputePageCountAsync" /> foi concluída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ad81-118">Occurs when a <see cref="Overload:System.Windows.Documents.DocumentPaginator.ComputePageCountAsync" /> operation has finished.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPage">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Documents.DocumentPage GetPage (int pageNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Documents.DocumentPage GetPage(int32 pageNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.DocumentPaginator.GetPage(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetPage (pageNumber As Integer) As DocumentPage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Documents::DocumentPage ^ GetPage(int pageNumber);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.DocumentPage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pageNumber">
          <span data-ttu-id="8ad81-119">O número de páginas com base em zero da página do documento que é necessária.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ad81-119">The zero-based page number of the document page that is needed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ad81-120">Quando substituído em uma classe derivada, obtém o <see cref="T:System.Windows.Documents.DocumentPage" /> para o número de páginas especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ad81-120">When overridden in a derived class, gets the <see cref="T:System.Windows.Documents.DocumentPage" /> for the specified page number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ad81-121">O <see cref="T:System.Windows.Documents.DocumentPage" /> para o <paramref name="pageNumber" /> especificado ou <see cref="F:System.Windows.Documents.DocumentPage.Missing" /> se a página não existe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ad81-121">The <see cref="T:System.Windows.Documents.DocumentPage" /> for the specified <paramref name="pageNumber" />, or <see cref="F:System.Windows.Documents.DocumentPage.Missing" /> if the page does not exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ad81-122">Se páginas anteriores ao `pageNumber` não foram formatados, eles serão ser paginados síncrona antes de retornar a página solicitada.</span><span class="sxs-lookup"><span data-stu-id="8ad81-122">If pages prior to `pageNumber` have not been formatted, they will be paginated synchronously prior to returning the requested page.</span></span>  
  
 <span data-ttu-id="8ad81-123"><xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%2A> fornece funcionalidade semelhante ao <xref:System.Windows.Documents.DocumentPaginator.GetPage%2A>, mas a operação assíncrona.</span><span class="sxs-lookup"><span data-stu-id="8ad81-123"><xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%2A> provides similar functionality as <xref:System.Windows.Documents.DocumentPaginator.GetPage%2A>, but for asynchronous operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8ad81-124">
            <paramref name="pageNumber" /> é negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ad81-124">
              <paramref name="pageNumber" /> is negative.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPageAsync">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8ad81-125">Retorna de maneira assíncrona a <see cref="T:System.Windows.Documents.DocumentPage" /> para o número de página especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ad81-125">Asynchronously returns the <see cref="T:System.Windows.Documents.DocumentPage" /> for the specified page number.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPageAsync">
      <MemberSignature Language="C#" Value="public virtual void GetPageAsync (int pageNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetPageAsync(int32 pageNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetPageAsync (pageNumber As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetPageAsync(int pageNumber);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pageNumber">
          <span data-ttu-id="8ad81-126">O número de páginas com base em zero da página do documento que é necessária.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ad81-126">The zero-based page number of the document page that is needed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ad81-127">Retorna de maneira assíncrona (por meio do evento <see cref="E:System.Windows.Documents.DocumentPaginator.GetPageCompleted" />) a <see cref="T:System.Windows.Documents.DocumentPage" /> para o número de página especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ad81-127">Asynchronously returns (through the <see cref="E:System.Windows.Documents.DocumentPaginator.GetPageCompleted" /> event) the <see cref="T:System.Windows.Documents.DocumentPage" /> for the specified page number.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ad81-128">É a única maneira de cancelar a operação assíncrona do método Cancelar todas as operações assíncronas.</span><span class="sxs-lookup"><span data-stu-id="8ad81-128">The only way to cancel the asynchronous operation of this method is to cancel all asynchronous operations.</span></span> <span data-ttu-id="8ad81-129">Compare isso com a outra sobrecarga desse método: <xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%28System.Int32%2CSystem.Object%29>.</span><span class="sxs-lookup"><span data-stu-id="8ad81-129">Contrast this with the other overload of this method: <xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%28System.Int32%2CSystem.Object%29>.</span></span>  
  
 <span data-ttu-id="8ad81-130">Este método gera o <xref:System.Windows.Documents.DocumentPaginator.GetPageCompleted> evento.</span><span class="sxs-lookup"><span data-stu-id="8ad81-130">This method raises the <xref:System.Windows.Documents.DocumentPaginator.GetPageCompleted> event.</span></span> <span data-ttu-id="8ad81-131">O <xref:System.Windows.Documents.DocumentPage> é passado para o evento como um dos argumentos do evento.</span><span class="sxs-lookup"><span data-stu-id="8ad81-131">The <xref:System.Windows.Documents.DocumentPage> is passed to the event as one of the event arguments.</span></span> <span data-ttu-id="8ad81-132">Consulte <xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%28System.Int32%2CSystem.Object%29> sobre como usar esse método para a página.</span><span class="sxs-lookup"><span data-stu-id="8ad81-132">See <xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%28System.Int32%2CSystem.Object%29> for how to use this method to get the page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8ad81-133">
            <paramref name="pageNumber" /> é negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ad81-133">
              <paramref name="pageNumber" /> is negative.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPageAsync">
      <MemberSignature Language="C#" Value="public virtual void GetPageAsync (int pageNumber, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetPageAsync(int32 pageNumber, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetPageAsync (pageNumber As Integer, userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetPageAsync(int pageNumber, System::Object ^ userState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageNumber" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pageNumber">
          <span data-ttu-id="8ad81-134">O número da página com base em zero do <see cref="T:System.Windows.Documents.DocumentPage" /> a ser obtido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ad81-134">The zero-based page number of the <see cref="T:System.Windows.Documents.DocumentPage" /> to get.</span>
          </span>
        </param>
        <param name="userState">
          <span data-ttu-id="8ad81-135">Um identificador exclusivo para a tarefa assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ad81-135">A unique identifier for the asynchronous task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ad81-136">Retorna de maneira assíncrona (por meio do evento <see cref="E:System.Windows.Documents.DocumentPaginator.GetPageCompleted" />) a <see cref="T:System.Windows.Documents.DocumentPage" /> para o número de página especificado e atribui a ID especificada à tarefa assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ad81-136">Asynchronously returns (through the <see cref="E:System.Windows.Documents.DocumentPaginator.GetPageCompleted" /> event) the <see cref="T:System.Windows.Documents.DocumentPage" /> for the specified page number and assigns the specified ID to the asynchronous task.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ad81-137">Esta sobrecarga do método torna possível cancelar essa operação assíncrona sem cancelar todas as operações assíncronas.</span><span class="sxs-lookup"><span data-stu-id="8ad81-137">This overload of the method makes it possible to cancel this asynchronous operation without cancelling all asynchronous operations.</span></span>  
  
 <span data-ttu-id="8ad81-138">Este método gera o <xref:System.Windows.Documents.DocumentPaginator.GetPageCompleted> evento.</span><span class="sxs-lookup"><span data-stu-id="8ad81-138">This method raises the <xref:System.Windows.Documents.DocumentPaginator.GetPageCompleted> event.</span></span> <span data-ttu-id="8ad81-139">O <xref:System.Windows.Documents.DocumentPage> é passado para o evento como um dos argumentos do evento.</span><span class="sxs-lookup"><span data-stu-id="8ad81-139">The <xref:System.Windows.Documents.DocumentPage> is passed to the event as one of the event arguments.</span></span>  
  
 <span data-ttu-id="8ad81-140">As etapas a seguir ilustram como recuperar um <xref:System.Windows.Documents.DocumentPage> assíncrona:</span><span class="sxs-lookup"><span data-stu-id="8ad81-140">The following steps illustrate how to retrieve a <xref:System.Windows.Documents.DocumentPage> asynchronously:</span></span>  
  
1.  <span data-ttu-id="8ad81-141">Criar um <xref:System.Windows.Documents.GetPageCompletedEventHandler> delegar e adicioná-lo para ser notificado sobre <xref:System.Windows.Documents.DocumentPaginator.GetPageCompleted> eventos.</span><span class="sxs-lookup"><span data-stu-id="8ad81-141">Create a <xref:System.Windows.Documents.GetPageCompletedEventHandler> delegate and add it to be notified of <xref:System.Windows.Documents.DocumentPaginator.GetPageCompleted> events.</span></span>  
  
2.  <span data-ttu-id="8ad81-142">Chamar <xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%28System.Int32%2CSystem.Object%29> especificando o `pageNumber` desejado e um exclusivo `userState`, que será usado para identificar a conclusão do evento assíncrono.</span><span class="sxs-lookup"><span data-stu-id="8ad81-142">Call <xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%28System.Int32%2CSystem.Object%29> specifying the `pageNumber` desired and a unique `userState`, which will be used to identify the completion of the asynchronous event.</span></span>  
  
3.  <span data-ttu-id="8ad81-143">Quando o evento ocorre e o representante é chamado, compare o evento <xref:System.Windows.Documents.GetPageCompletedEventArgs>.<xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A></span><span class="sxs-lookup"><span data-stu-id="8ad81-143">When the event occurs and the delegate is called, compare the event's <xref:System.Windows.Documents.GetPageCompletedEventArgs>.<xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A></span></span> <span data-ttu-id="8ad81-144">propriedade com o original <xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%28System.Int32%2CSystem.Object%29> `userState` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="8ad81-144">property with the original <xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%28System.Int32%2CSystem.Object%29> `userState` parameter.</span></span>  <span data-ttu-id="8ad81-145">(O <xref:System.Windows.Documents.GetPageCompletedEventArgs>.<xref:System.Windows.Documents.GetPageCompletedEventArgs.PageNumber%2A></span><span class="sxs-lookup"><span data-stu-id="8ad81-145">(The <xref:System.Windows.Documents.GetPageCompletedEventArgs>.<xref:System.Windows.Documents.GetPageCompletedEventArgs.PageNumber%2A></span></span> <span data-ttu-id="8ad81-146">propriedade também serão compatíveis com o `pageNumber` especificado no <xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%28System.Int32%2CSystem.Object%29> chame.)</span><span class="sxs-lookup"><span data-stu-id="8ad81-146">property will also match the `pageNumber` specified in the <xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%28System.Int32%2CSystem.Object%29> call.)</span></span>  
  
4.  <span data-ttu-id="8ad81-147">Quando o <xref:System.Windows.Documents.GetPageCompletedEventArgs>.<xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A></span><span class="sxs-lookup"><span data-stu-id="8ad81-147">When the <xref:System.Windows.Documents.GetPageCompletedEventArgs>.<xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A></span></span> <span data-ttu-id="8ad81-148">propriedade corresponde ao original <xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%28System.Int32%2CSystem.Object%29> `userState`, a operação for concluída e a página está pronta.</span><span class="sxs-lookup"><span data-stu-id="8ad81-148">property matches the original <xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%28System.Int32%2CSystem.Object%29> `userState`, the operation is complete and the page is ready.</span></span>  
  
5.  <span data-ttu-id="8ad81-149">Chamar <xref:System.Windows.Documents.DocumentPaginator.GetPage%2A> para recuperar o formatado <xref:System.Windows.Documents.DocumentPage>.</span><span class="sxs-lookup"><span data-stu-id="8ad81-149">Call <xref:System.Windows.Documents.DocumentPaginator.GetPage%2A> to retrieve the formatted <xref:System.Windows.Documents.DocumentPage>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8ad81-150">
            <paramref name="pageNumber" /> é negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ad81-150">
              <paramref name="pageNumber" /> is negative.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPageCompleted">
      <MemberSignature Language="C#" Value="public event System.Windows.Documents.GetPageCompletedEventHandler GetPageCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Documents.GetPageCompletedEventHandler GetPageCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Documents.DocumentPaginator.GetPageCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Event GetPageCompleted As GetPageCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Documents::GetPageCompletedEventHandler ^ GetPageCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.GetPageCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ad81-151">Ocorre quando <see cref="Overload:System.Windows.Documents.DocumentPaginator.GetPageAsync" /> é concluído.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ad81-151">Occurs when <see cref="Overload:System.Windows.Documents.DocumentPaginator.GetPageAsync" /> has completed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Documents.GetPageCompletedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="IsPageCountValid">
      <MemberSignature Language="C#" Value="public abstract bool IsPageCountValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPageCountValid" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.DocumentPaginator.IsPageCountValid" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsPageCountValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsPageCountValid { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ad81-152">Quando substituído em uma classe derivada, obtém um valor que indica se <see cref="P:System.Windows.Documents.DocumentPaginator.PageCount" /> é o número total de páginas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ad81-152">When overridden in a derived class, gets a value indicating whether <see cref="P:System.Windows.Documents.DocumentPaginator.PageCount" /> is the total number of pages.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ad81-153">
            <see langword="true" /> Se a paginação estiver concluída e <see cref="P:System.Windows.Documents.DocumentPaginator.PageCount" /> é o total de número de páginas; caso contrário, <see langword="false" />, se a paginação está em processo e <see cref="P:System.Windows.Documents.DocumentPaginator.PageCount" /> é o número de páginas atualmente formatada (não o total).</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ad81-153">
              <see langword="true" /> if pagination is complete and <see cref="P:System.Windows.Documents.DocumentPaginator.PageCount" /> is the total number of pages; otherwise, <see langword="false" />, if pagination is in process and <see cref="P:System.Windows.Documents.DocumentPaginator.PageCount" /> is the number of pages currently formatted (not the total).</span>
          </span>
          <span data-ttu-id="8ad81-154">Esse valor pode ser revertida para <see langword="false" />, depois de ser <see langword="true" />, se <see cref="P:System.Windows.Documents.DocumentPaginator.PageSize" /> ou conteúdo alterações; porque esses eventos forçaria uma repaginação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ad81-154">This value may revert to <see langword="false" />, after being <see langword="true" />, if <see cref="P:System.Windows.Documents.DocumentPaginator.PageSize" /> or content changes; because those events would force a repagination.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Documents.DocumentPaginator.PageCount" />
      </Docs>
    </Member>
    <Member MemberName="OnComputePageCountCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnComputePageCountCompleted (System.ComponentModel.AsyncCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnComputePageCountCompleted(class System.ComponentModel.AsyncCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.DocumentPaginator.OnComputePageCountCompleted(System.ComponentModel.AsyncCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnComputePageCountCompleted (e As AsyncCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnComputePageCountCompleted(System::ComponentModel::AsyncCompletedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.AsyncCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="8ad81-155">Um <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ad81-155">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ad81-156">Aciona o evento <see cref="E:System.Windows.Documents.DocumentPaginator.ComputePageCountCompleted" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ad81-156">Raises the <see cref="E:System.Windows.Documents.DocumentPaginator.ComputePageCountCompleted" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGetPageCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnGetPageCompleted (System.Windows.Documents.GetPageCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGetPageCompleted(class System.Windows.Documents.GetPageCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.DocumentPaginator.OnGetPageCompleted(System.Windows.Documents.GetPageCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGetPageCompleted (e As GetPageCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGetPageCompleted(System::Windows::Documents::GetPageCompletedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Documents.GetPageCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="8ad81-157">Um <see cref="T:System.Windows.Documents.GetPageCompletedEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ad81-157">A <see cref="T:System.Windows.Documents.GetPageCompletedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ad81-158">Aciona o evento <see cref="E:System.Windows.Documents.DocumentPaginator.GetPageCompleted" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ad81-158">Raises the <see cref="E:System.Windows.Documents.DocumentPaginator.GetPageCompleted" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPagesChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPagesChanged (System.Windows.Documents.PagesChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPagesChanged(class System.Windows.Documents.PagesChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.DocumentPaginator.OnPagesChanged(System.Windows.Documents.PagesChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPagesChanged (e As PagesChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPagesChanged(System::Windows::Documents::PagesChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Documents.PagesChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="8ad81-159">Um <see cref="T:System.Windows.Documents.PagesChangedEventArgs" /> que contém os dados do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ad81-159">A <see cref="T:System.Windows.Documents.PagesChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ad81-160">Aciona o evento <see cref="E:System.Windows.Documents.DocumentPaginator.PagesChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ad81-160">Raises the <see cref="E:System.Windows.Documents.DocumentPaginator.PagesChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PageCount">
      <MemberSignature Language="C#" Value="public abstract int PageCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.DocumentPaginator.PageCount" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property PageCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int PageCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ad81-161">Quando substituído em uma classe derivada, obtém uma contagem do número de páginas atualmente formatadas</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ad81-161">When overridden in a derived class, gets a count of the number of pages currently formatted</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ad81-162">Uma contagem do número de páginas que foram formatados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ad81-162">A count of the number of pages that have been formatted.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ad81-163">Se <xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid%2A> é `true`, a paginação está concluída e <xref:System.Windows.Documents.DocumentPaginator.PageCount%2A> é o número total de páginas do documento.</span><span class="sxs-lookup"><span data-stu-id="8ad81-163">If <xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid%2A> is `true`, pagination is complete and <xref:System.Windows.Documents.DocumentPaginator.PageCount%2A> is the total number of pages in the document.</span></span>  
  
 <span data-ttu-id="8ad81-164">Se <xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid%2A> é `false`, a paginação está em processo e <xref:System.Windows.Documents.DocumentPaginator.PageCount%2A> é o número de páginas atualmente formatada (não o total).</span><span class="sxs-lookup"><span data-stu-id="8ad81-164">If <xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid%2A> is `false`, pagination is in process and <xref:System.Windows.Documents.DocumentPaginator.PageCount%2A> is the number of pages currently formatted (not the total).</span></span>  
  
 <span data-ttu-id="8ad81-165">Esse valor pode ser alterado se <xref:System.Windows.Documents.DocumentPaginator.PageSize%2A> ou conteúdo de alterações, porque esses eventos forçaria uma repaginação.</span><span class="sxs-lookup"><span data-stu-id="8ad81-165">This value may change if <xref:System.Windows.Documents.DocumentPaginator.PageSize%2A> or content changes, because those events would force a repagination.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Documents.DynamicDocumentPaginator.PaginationCompleted" />
      </Docs>
    </Member>
    <Member MemberName="PagesChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Documents.PagesChangedEventHandler PagesChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Documents.PagesChangedEventHandler PagesChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Documents.DocumentPaginator.PagesChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event PagesChanged As PagesChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Documents::PagesChangedEventHandler ^ PagesChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.PagesChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ad81-166">Ocorre quando o conteúdo do documento é alterado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ad81-166">Occurs when the document content is changed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Documents.PagesChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="PageSize">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Size PageSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Size PageSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.DocumentPaginator.PageSize" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property PageSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Windows::Size PageSize { System::Windows::Size get(); void set(System::Windows::Size value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ad81-167">Quando substituído em uma classe derivada, obtém ou define a largura e altura sugeridas de cada página.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ad81-167">When overridden in a derived class, gets or sets the suggested width and height of each page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ad81-168">Um <see cref="T:System.Windows.Size" /> que representa a largura e altura de cada página.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ad81-168">A <see cref="T:System.Windows.Size" /> representing the width and height of each page.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ad81-169">O <xref:System.Windows.Documents.DocumentPaginator> pode substituir o valor dessa propriedade.</span><span class="sxs-lookup"><span data-stu-id="8ad81-169">The <xref:System.Windows.Documents.DocumentPaginator> may override the value of this property.</span></span> <span data-ttu-id="8ad81-170">Os usuários devem verificar <xref:System.Windows.Documents.DocumentPage.Size%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="8ad81-170">Users should check <xref:System.Windows.Documents.DocumentPage.Size%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ad81-171">O exemplo a seguir mostra como definir o <xref:System.Windows.Documents.DocumentPaginator.PageSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="8ad81-171">The following example shows how to set the <xref:System.Windows.Documents.DocumentPaginator.PageSize%2A>.</span></span>  
  
 [!code-csharp[XpsSave#CreateFixedDocument](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsSave/CSharp/XpfContent.cs#createfixeddocument)]
 [!code-vb[XpsSave#CreateFixedDocument](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsSave/visualbasic/xpfcontent.vb#createfixeddocument)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Documents.IDocumentPaginatorSource Source { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.IDocumentPaginatorSource Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.DocumentPaginator.Source" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Source As IDocumentPaginatorSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Windows::Documents::IDocumentPaginatorSource ^ Source { System::Windows::Documents::IDocumentPaginatorSource ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.IDocumentPaginatorSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ad81-172">Quando substituído em uma classe derivada, retorna o elemento sendo paginado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ad81-172">When overridden in a derived class, returns the element being paginated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ad81-173">Um <see cref="T:System.Windows.Documents.IDocumentPaginatorSource" /> que representa o elemento que está sendo paginado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ad81-173">An <see cref="T:System.Windows.Documents.IDocumentPaginatorSource" /> representing the element being paginated.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ad81-174">O objeto retornado tem isso <xref:System.Windows.Documents.DocumentPaginator> como o valor do seu <xref:System.Windows.Documents.IDocumentPaginatorSource.DocumentPaginator%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="8ad81-174">The object returned has this <xref:System.Windows.Documents.DocumentPaginator> as the value of its <xref:System.Windows.Documents.IDocumentPaginatorSource.DocumentPaginator%2A> property.</span></span> <span data-ttu-id="8ad81-175">É garantido que ele tem essa propriedade porque ele implementa <xref:System.Windows.Documents.IDocumentPaginatorSource>.</span><span class="sxs-lookup"><span data-stu-id="8ad81-175">It is guaranteed to have such a property because it implements <xref:System.Windows.Documents.IDocumentPaginatorSource>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>