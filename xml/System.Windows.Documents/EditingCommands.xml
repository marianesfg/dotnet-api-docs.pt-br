<Type Name="EditingCommands" FullName="System.Windows.Documents.EditingCommands">
  <Metadata><Meta Name="ms.openlocfilehash" Value="84b5572cf9ba0ae76ee1c5c3bb7375f8ce499c04" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37521557" /></Metadata><TypeSignature Language="C#" Value="public static class EditingCommands" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit EditingCommands extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.EditingCommands" />
  <TypeSignature Language="VB.NET" Value="Public Class EditingCommands" />
  <TypeSignature Language="C++ CLI" Value="public ref class EditingCommands abstract sealed" />
  <TypeSignature Language="F#" Value="type EditingCommands = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="c1b12-101">Fornece um conjunto padrão de comandos relacionados à edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-101">Provides a standard set of editing related commands.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b12-102">A tabela a seguir mostra os comandos de edição e o padrão associado principais gestos (com nomes de chave do <xref:System.Windows.Input.Key> e <xref:System.Windows.Input.ModifierKeys> enumerações).</span><span class="sxs-lookup"><span data-stu-id="c1b12-102">The following table shows the editing commands and the associated default key gestures (with key names from the <xref:System.Windows.Input.Key> and <xref:System.Windows.Input.ModifierKeys> enumerations).</span></span>  
  
|<span data-ttu-id="c1b12-103">Comando de edição</span><span class="sxs-lookup"><span data-stu-id="c1b12-103">Editing command</span></span>|<span data-ttu-id="c1b12-104">Gesto de chave padrão</span><span class="sxs-lookup"><span data-stu-id="c1b12-104">Default key gesture</span></span>|  
|---------------------|-------------------------|  
|<xref:System.Windows.Documents.EditingCommands.AlignCenter%2A>|`Ctrl`+`E`|  
|<xref:System.Windows.Documents.EditingCommands.AlignJustify%2A>|`Ctrl`+`J`|  
|<xref:System.Windows.Documents.EditingCommands.AlignLeft%2A>|`Ctrl`+`L`|  
|<xref:System.Windows.Documents.EditingCommands.AlignRight%2A>|`Ctrl`+`R`|  
|<xref:System.Windows.Documents.EditingCommands.Backspace%2A>|`Backspace`|  
|<xref:System.Windows.Documents.EditingCommands.CorrectSpellingError%2A>|<span data-ttu-id="c1b12-105">Nenhum gesto de chave padrão</span><span class="sxs-lookup"><span data-stu-id="c1b12-105">no default key gesture</span></span>|  
|<xref:System.Windows.Documents.EditingCommands.DecreaseFontSize%2A>|`Ctrl`+`OemOpenBrackets`|  
|<xref:System.Windows.Documents.EditingCommands.DecreaseIndentation%2A>|`Ctrl`+`Shift`+`T`|  
|<xref:System.Windows.Documents.EditingCommands.Delete%2A>|`Delete`|  
|<xref:System.Windows.Documents.EditingCommands.DeleteNextWord%2A>|`Ctrl`+`Delete`|  
|<xref:System.Windows.Documents.EditingCommands.DeletePreviousWord%2A>|`Ctrl`+`Backspace`|  
|<xref:System.Windows.Documents.EditingCommands.EnterLineBreak%2A>|`Shift`+`Enter`|  
|<xref:System.Windows.Documents.EditingCommands.EnterParagraphBreak%2A>|`Enter`|  
|<xref:System.Windows.Documents.EditingCommands.IgnoreSpellingError%2A>|<span data-ttu-id="c1b12-106">Nenhum gesto de chave padrão</span><span class="sxs-lookup"><span data-stu-id="c1b12-106">no default key gesture</span></span>|  
|<xref:System.Windows.Documents.EditingCommands.IncreaseFontSize%2A>|`Ctrl`+`OemCloseBrackets`|  
|<xref:System.Windows.Documents.EditingCommands.IncreaseIndentation%2A>|`Ctrl`+`T`|  
|<xref:System.Windows.Documents.EditingCommands.MoveDownByLine%2A>|`Down`|  
|<xref:System.Windows.Documents.EditingCommands.MoveDownByPage%2A>|`PageDown`|  
|<xref:System.Windows.Documents.EditingCommands.MoveDownByParagraph%2A>|`Ctrl`+`Down`|  
|<xref:System.Windows.Documents.EditingCommands.MoveLeftByCharacter%2A>|`Left`|  
|<xref:System.Windows.Documents.EditingCommands.MoveLeftByWord%2A>|`Ctrl`+`Left`|  
|<xref:System.Windows.Documents.EditingCommands.MoveRightByCharacter%2A>|`Right`|  
|<xref:System.Windows.Documents.EditingCommands.MoveRightByWord%2A>|`Ctrl`+`Right`|  
|<xref:System.Windows.Documents.EditingCommands.MoveToDocumentEnd%2A>|`Ctrl`+`End`|  
|<xref:System.Windows.Documents.EditingCommands.MoveToDocumentStart%2A>|`Ctrl`+`Home`|  
|<xref:System.Windows.Documents.EditingCommands.MoveToLineEnd%2A>|`End`|  
|<xref:System.Windows.Documents.EditingCommands.MoveToLineStart%2A>|`Home`|  
|<xref:System.Windows.Documents.EditingCommands.MoveUpByLine%2A>|`Up`|  
|<xref:System.Windows.Documents.EditingCommands.MoveUpByPage%2A>|`PageUp`|  
|<xref:System.Windows.Documents.EditingCommands.MoveUpByParagraph%2A>|`Ctrl`+`Up`|  
|<xref:System.Windows.Documents.EditingCommands.SelectDownByLine%2A>|`Shift`+`Down`|  
|<xref:System.Windows.Documents.EditingCommands.SelectDownByPage%2A>|`Shift`+`PageDown`|  
|<xref:System.Windows.Documents.EditingCommands.SelectDownByParagraph%2A>|`Ctrl`+`Shift`+`Down`|  
|<xref:System.Windows.Documents.EditingCommands.SelectLeftByCharacter%2A>|`Shift`+`Left`|  
|<xref:System.Windows.Documents.EditingCommands.SelectLeftByWord%2A>|`Ctrl`+`Shift`+`Left`|  
|<xref:System.Windows.Documents.EditingCommands.SelectRightByCharacter%2A>|`Shift`+`Right`|  
|<xref:System.Windows.Documents.EditingCommands.SelectRightByWord%2A>|`Ctrl`+`Shift`+`Right`|  
|<xref:System.Windows.Documents.EditingCommands.SelectToDocumentEnd%2A>|`Ctrl`+`Shift`+`End`|  
|<xref:System.Windows.Documents.EditingCommands.SelectToDocumentStart%2A>|`Ctrl`+`Shift`+`Home`|  
|<xref:System.Windows.Documents.EditingCommands.SelectToLineEnd%2A>|`Shift`+`End`|  
|<xref:System.Windows.Documents.EditingCommands.SelectToLineStart%2A>|`Shift`+`Home`|  
|<xref:System.Windows.Documents.EditingCommands.SelectUpByLine%2A>|`Shift`+`Up`|  
|<xref:System.Windows.Documents.EditingCommands.SelectUpByPage%2A>|`Shift`+`PageUp`|  
|<xref:System.Windows.Documents.EditingCommands.SelectUpByParagraph%2A>|`Ctrl`+`Shift`+`Up`|  
|<xref:System.Windows.Documents.EditingCommands.TabBackward%2A>|`Shift`+`Tab`|  
|<xref:System.Windows.Documents.EditingCommands.TabForward%2A>|`Tab`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleBold%2A>|`Ctrl`+`B`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleBullets%2A>|`Ctrl`+`Shift`+`L`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleInsert%2A>|`Insert`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleItalic%2A>|`Ctrl`+`I`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleNumbering%2A>|`Ctrl`+`Shift`+`N`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleSubscript%2A>|`Ctrl`+`OemPlus`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleSuperscript%2A>|`Ctrl`+`Shift+OemPlus`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleUnderline%2A>|`Ctrl`+`U`|  
  
 <span data-ttu-id="c1b12-107">Comandos de movimentação do cursor e seleção de expansão comandos compartilham um conjunto comum de gestos de chave padrão, geral que a diferença é a adição do <xref:System.Windows.Input.ModifierKeys.Shift> chave para diferenciar os comandos de seleção de comandos de movimentação do cursor.</span><span class="sxs-lookup"><span data-stu-id="c1b12-107">Caret movement commands and selection expanding commands share a common set of default key gestures, the general difference being the addition of the <xref:System.Windows.Input.ModifierKeys.Shift> key to differentiate selection commands from caret movement commands.</span></span>  <span data-ttu-id="c1b12-108">Por exemplo, o <xref:System.Windows.Documents.EditingCommands.MoveLeftByCharacter%2A> comando tem um gesto de chave padrão do <xref:System.Windows.Input.Key.Left>e o correspondente <xref:System.Windows.Documents.EditingCommands.SelectLeftByCharacter%2A> comando tem um gesto de chave padrão de <xref:System.Windows.Input.ModifierKeys.Shift> + <xref:System.Windows.Input.Key.Left>.</span><span class="sxs-lookup"><span data-stu-id="c1b12-108">For example, the <xref:System.Windows.Documents.EditingCommands.MoveLeftByCharacter%2A> command has a default key gesture of <xref:System.Windows.Input.Key.Left>, and the corresponding <xref:System.Windows.Documents.EditingCommands.SelectLeftByCharacter%2A> command has a default key gesture of <xref:System.Windows.Input.ModifierKeys.Shift>+<xref:System.Windows.Input.Key.Left>.</span></span>  
  
 <span data-ttu-id="c1b12-109">Em geral, as definições de comando fornecida pelo <xref:System.Windows.Documents.EditingCommands> classe não faça uso de parâmetros de comando (o `parameter` parâmetro esperado pelo <xref:System.Windows.Input.ICommand.Execute%2A> método).</span><span class="sxs-lookup"><span data-stu-id="c1b12-109">In general, the command definitions provided by the <xref:System.Windows.Documents.EditingCommands> class do not make use of command parameters (the `parameter` parameter expected by the <xref:System.Windows.Input.ICommand.Execute%2A> method).</span></span>  
  
 <span data-ttu-id="c1b12-110">Para obter mais informações sobre comandos e comandos, consulte [visão geral de entrada](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="c1b12-110">For more information on commands and commanding, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1b12-111">O exemplo a seguir demonstra como invocar um comando de edição em um objeto que suporta o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-111">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c1b12-112">Neste exemplo, um <xref:System.Windows.Controls.RichTextBox> serve como o destino do comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-112">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c1b12-113">Observe que <xref:System.Windows.Controls.RichTextBox> implementa o <xref:System.Windows.IInputElement> interface (herdado de <xref:System.Windows.FrameworkElement>), e que ele inclui suporte nativo para muitos comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-113">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-114">O primeiro argumento para o <xref:System.Windows.Input.RoutedCommand.Execute%2A> método é um parâmetro de comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-114">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c1b12-115">Comandos de edição mais ignorar o parâmetro de comando; em geral, esse parâmetro deve ser `null` para comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-115">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-116">O segundo argumento especifica o objeto ao qual o comando será roteado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-116">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c1b12-117">Este objeto deve implementar a <xref:System.Windows.IInputElement> de interface e deve incluir um manipulador para o comando especificado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-117">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c1b12-118">Em geral, um comando é ignorado quando invocado em um objeto que não lida com o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-118">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.MediaCommands" />
    <altmember cref="T:System.Windows.Input.ApplicationCommands" />
    <altmember cref="T:System.Windows.Input.ComponentCommands" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
    <altmember cref="T:System.Windows.Input.RoutedUICommand" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.CommandManager" />
    <altmember cref="T:System.Windows.Input.NavigationCommands" />
  </Docs>
  <Members>
    <Member MemberName="AlignCenter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand AlignCenter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand AlignCenter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.AlignCenter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AlignCenter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ AlignCenter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlignCenter : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.AlignCenter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1b12-119">Representa o comando <see cref="P:System.Windows.Documents.EditingCommands.AlignCenter" />, que solicita que o parágrafo atual ou uma seleção de parágrafos sejam centralizada.</span><span class="sxs-lookup"><span data-stu-id="c1b12-119">Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignCenter" /> command, which requests that the current paragraph or a selection of paragraphs be centered.</span></span></summary>
        <value><span data-ttu-id="c1b12-120">O comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-120">The requested command.</span></span>  <span data-ttu-id="c1b12-121">O gesto de chave padrão para esse comando é <see langword="Ctrl" /> + <see langword="E" />.</span><span class="sxs-lookup"><span data-stu-id="c1b12-121">The default key gesture for this command is <see langword="Ctrl" />+<see langword="E" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b12-122">Esse comando opera com o <xref:System.Windows.Documents.Paragraph> nível.</span><span class="sxs-lookup"><span data-stu-id="c1b12-122">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="c1b12-123">Se esse comando é invocado em uma seleção parcial de conteúdo dentro de um parágrafo (incluindo uma seleção vazia no qual o cursor está dentro de um parágrafo), o efeito solicitado é aplicado ao parágrafo inteiro.</span><span class="sxs-lookup"><span data-stu-id="c1b12-123">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="c1b12-124">Se esse comando é invocado em uma seleção que abrange vários parágrafos, o efeito é aplicado a todo o conteúdo de cada parágrafo que participa da seleção.</span><span class="sxs-lookup"><span data-stu-id="c1b12-124">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="c1b12-125">A figura a seguir mostra um exemplo de conteúdo centralizado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-125">The following figure shows an example of centered content.</span></span>  
  
 <span data-ttu-id="c1b12-126">![Captura de tela: Valor da propriedade TextAlign do Centro](~/add/media/flowdoc-textalign-center.png "captura de tela: valor da propriedade TextAlign do Centro")</span><span class="sxs-lookup"><span data-stu-id="c1b12-126">![Screenshot: TextAlign property value of Center](~/add/media/flowdoc-textalign-center.png "Screenshot: TextAlign property value of Center")</span></span>  
  
 <span data-ttu-id="c1b12-127">Esse comando tem suporte nativo pelo <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="c1b12-127">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_AlignCenter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c1b12-128">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="c1b12-128">XAML Attribute Usage</span></span>  
  
```  
<object property="AlignCenter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c1b12-129">O exemplo a seguir demonstra como invocar um comando de edição em um objeto que suporta o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-129">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c1b12-130">Neste exemplo, um <xref:System.Windows.Controls.RichTextBox> serve como o destino do comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-130">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c1b12-131">Observe que <xref:System.Windows.Controls.RichTextBox> implementa o <xref:System.Windows.IInputElement> interface (herdado de <xref:System.Windows.FrameworkElement>), e que ele inclui suporte nativo para muitos comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-131">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-132">O primeiro argumento para o <xref:System.Windows.Input.RoutedCommand.Execute%2A> método é um parâmetro de comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-132">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c1b12-133">Comandos de edição mais ignorar o parâmetro de comando; em geral, esse parâmetro deve ser `null` para comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-133">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-134">O segundo argumento especifica o objeto ao qual o comando será roteado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-134">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c1b12-135">Este objeto deve implementar a <xref:System.Windows.IInputElement> de interface e deve incluir um manipulador para o comando especificado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-135">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c1b12-136">Em geral, um comando é ignorado quando invocado em um objeto que não lida com o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-136">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignJustify" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignLeft" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignRight" />
      </Docs>
    </Member>
    <Member MemberName="AlignJustify">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand AlignJustify { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand AlignJustify" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.AlignJustify" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AlignJustify As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ AlignJustify { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlignJustify : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.AlignJustify" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1b12-137">Representa o comando <see cref="P:System.Windows.Documents.EditingCommands.AlignJustify" />, que solicita que o parágrafo atual ou uma seleção de parágrafos sejam justificados.</span><span class="sxs-lookup"><span data-stu-id="c1b12-137">Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignJustify" /> command, which requests that the current paragraph or a selection of paragraphs be justified.</span></span></summary>
        <value><span data-ttu-id="c1b12-138">O comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-138">The requested command.</span></span>  <span data-ttu-id="c1b12-139">O gesto de chave padrão para esse comando é <see langword="Ctrl" /> + <see langword="J" />.</span><span class="sxs-lookup"><span data-stu-id="c1b12-139">The default key gesture for this command is <see langword="Ctrl" />+<see langword="J" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b12-140">Esse comando opera com o <xref:System.Windows.Documents.Paragraph> nível.</span><span class="sxs-lookup"><span data-stu-id="c1b12-140">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="c1b12-141">Se esse comando é invocado em uma seleção parcial de conteúdo dentro de um parágrafo (incluindo uma seleção vazia no qual o cursor está dentro de um parágrafo), o efeito solicitado é aplicado ao parágrafo inteiro.</span><span class="sxs-lookup"><span data-stu-id="c1b12-141">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="c1b12-142">Se esse comando é invocado em uma seleção que abrange vários parágrafos, o efeito é aplicado a todos os parágrafos na seleção.</span><span class="sxs-lookup"><span data-stu-id="c1b12-142">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to all the paragraphs in the selection.</span></span>  
  
 <span data-ttu-id="c1b12-143">Quando o conteúdo é justificado, o espaçamento horizontal dentro de cada linha de conteúdo é ajustado para que as linhas justificadas são de largura igual ou quase igual.</span><span class="sxs-lookup"><span data-stu-id="c1b12-143">When content is justified, the horizontal spacing within each line of content is adjusted so that the justified lines are of equal or near-equal width.</span></span>  <span data-ttu-id="c1b12-144">Conteúdo normalmente é justificado para criar cantos arredondados nos lados do conteúdo.</span><span class="sxs-lookup"><span data-stu-id="c1b12-144">Content is typically justified to create smooth edges on the sides of the content.</span></span>  
  
 <span data-ttu-id="c1b12-145">Como normalmente é menor do que o restante, a última linha em um parágrafo pode permanecer não justificada depois que esse comando é invocado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-145">Because it is often shorter than the rest, the last line in a paragraph may remain unjustified after this command is invoked.</span></span>  
  
 <span data-ttu-id="c1b12-146">A figura a seguir mostra o conteúdo justificado (alinhado à esquerda).</span><span class="sxs-lookup"><span data-stu-id="c1b12-146">The following figure shows unjustified (left-aligned) content.</span></span>  
  
 <span data-ttu-id="c1b12-147">![Captura de tela: O conteúdo não está justificado](~/add/media/content-unjustified.png "captura de tela: conteúdo não está justificado")</span><span class="sxs-lookup"><span data-stu-id="c1b12-147">![Screenshot: Content is unjustified](~/add/media/content-unjustified.png "Screenshot: Content is unjustified")</span></span>  
  
 <span data-ttu-id="c1b12-148">A figura a seguir mostra o mesmo conteúdo depois que ele tiver sido justificado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-148">The following figure shows the same content after it has been justified.</span></span>  
  
 <span data-ttu-id="c1b12-149">![Captura de tela de conteúdo de texto de justificado](~/add/media/content-justified.png "justificado de captura de tela de conteúdo de texto")</span><span class="sxs-lookup"><span data-stu-id="c1b12-149">![Screenshot of content justified text](~/add/media/content-justified.png "Screenshot of content justified text")</span></span>  
  
 <span data-ttu-id="c1b12-150">Não há necessariamente uma implementação real que responde a este comando em um determinado objeto; em muitos casos, a implementação que responde a um comando é responsabilidade do gravador de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="c1b12-150">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c1b12-151">Esse comando tem suporte nativo pelo <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="c1b12-151">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_AlignJustify"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c1b12-152">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="c1b12-152">XAML Attribute Usage</span></span>  
  
```  
<object property="AlignJustify"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c1b12-153">O exemplo a seguir demonstra como invocar um comando de edição em um objeto que suporta o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-153">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c1b12-154">Neste exemplo, um <xref:System.Windows.Controls.RichTextBox> serve como o destino do comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-154">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c1b12-155">Observe que <xref:System.Windows.Controls.RichTextBox> implementa o <xref:System.Windows.IInputElement> interface (herdado de <xref:System.Windows.FrameworkElement>), e que ele inclui suporte nativo para muitos comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-155">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-156">O primeiro argumento para o <xref:System.Windows.Input.RoutedCommand.Execute%2A> método é um parâmetro de comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-156">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c1b12-157">Comandos de edição mais ignorar o parâmetro de comando; em geral, esse parâmetro deve ser `null` para comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-157">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-158">O segundo argumento especifica o objeto ao qual o comando será roteado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-158">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c1b12-159">Este objeto deve implementar a <xref:System.Windows.IInputElement> de interface e deve incluir um manipulador para o comando especificado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-159">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c1b12-160">Em geral, um comando é ignorado quando invocado em um objeto que não lida com o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-160">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignCenter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignLeft" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignRight" />
      </Docs>
    </Member>
    <Member MemberName="AlignLeft">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand AlignLeft { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand AlignLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.AlignLeft" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AlignLeft As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ AlignLeft { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlignLeft : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.AlignLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1b12-161">Representa o comando <see cref="P:System.Windows.Documents.EditingCommands.AlignLeft" />, que solicita que uma seleção de conteúdo seja alinhada à esquerda.</span><span class="sxs-lookup"><span data-stu-id="c1b12-161">Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignLeft" /> command, which requests that a selection of content be aligned left.</span></span></summary>
        <value><span data-ttu-id="c1b12-162">O comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-162">The requested command.</span></span>  <span data-ttu-id="c1b12-163">O gesto de chave padrão para esse comando é <see langword="Ctrl" /> + <see langword="L" />.</span><span class="sxs-lookup"><span data-stu-id="c1b12-163">The default key gesture for this command is <see langword="Ctrl" />+<see langword="L" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b12-164">Esse comando opera com o <xref:System.Windows.Documents.Paragraph> nível.</span><span class="sxs-lookup"><span data-stu-id="c1b12-164">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="c1b12-165">Se esse comando é invocado em uma seleção parcial de conteúdo dentro de um parágrafo (incluindo uma seleção vazia no qual o cursor está dentro de um parágrafo), o efeito solicitado é aplicado ao parágrafo inteiro.</span><span class="sxs-lookup"><span data-stu-id="c1b12-165">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="c1b12-166">Se esse comando é invocado em uma seleção que abrange vários parágrafos, o efeito é aplicado a todo o conteúdo de cada parágrafo que participa da seleção.</span><span class="sxs-lookup"><span data-stu-id="c1b12-166">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="c1b12-167">A figura a seguir mostra um exemplo de conteúdo alinhado à esquerda.</span><span class="sxs-lookup"><span data-stu-id="c1b12-167">The following figure shows an example of left-aligned content.</span></span>  
  
 <span data-ttu-id="c1b12-168">![Captura de tela: Valor Left da propriedade TextAlign](~/add/media/flowdoc-textalign-left.png "captura de tela: valor da propriedade TextAlign da esquerda")</span><span class="sxs-lookup"><span data-stu-id="c1b12-168">![Screenshot: TextAlign property value of Left](~/add/media/flowdoc-textalign-left.png "Screenshot: TextAlign property value of Left")</span></span>  
  
 <span data-ttu-id="c1b12-169">Não há necessariamente uma implementação real que responde a este comando em um determinado objeto; em muitos casos, a implementação que responde a um comando é responsabilidade do gravador de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="c1b12-169">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c1b12-170">Esse comando tem suporte nativo pelo <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="c1b12-170">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_AlignLeft"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c1b12-171">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="c1b12-171">XAML Attribute Usage</span></span>  
  
```  
<object property="AlignLeft"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c1b12-172">O exemplo a seguir demonstra como invocar um comando de edição em um objeto que suporta o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-172">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c1b12-173">Neste exemplo, um <xref:System.Windows.Controls.RichTextBox> serve como o destino do comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-173">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c1b12-174">Observe que <xref:System.Windows.Controls.RichTextBox> implementa o <xref:System.Windows.IInputElement> interface (herdado de <xref:System.Windows.FrameworkElement>), e que ele inclui suporte nativo para muitos comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-174">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-175">O primeiro argumento para o <xref:System.Windows.Input.RoutedCommand.Execute%2A> método é um parâmetro de comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-175">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c1b12-176">Comandos de edição mais ignorar o parâmetro de comando; em geral, esse parâmetro deve ser `null` para comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-176">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-177">O segundo argumento especifica o objeto ao qual o comando será roteado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-177">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c1b12-178">Este objeto deve implementar a <xref:System.Windows.IInputElement> de interface e deve incluir um manipulador para o comando especificado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-178">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c1b12-179">Em geral, um comando é ignorado quando invocado em um objeto que não lida com o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-179">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignCenter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignJustify" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignRight" />
      </Docs>
    </Member>
    <Member MemberName="AlignRight">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand AlignRight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand AlignRight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.AlignRight" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AlignRight As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ AlignRight { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlignRight : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.AlignRight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1b12-180">Representa o comando <see cref="P:System.Windows.Documents.EditingCommands.AlignRight" />, que solicita que uma seleção de conteúdo seja alinhada à direita.</span><span class="sxs-lookup"><span data-stu-id="c1b12-180">Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignRight" /> command, which requests that a selection of content be aligned right.</span></span></summary>
        <value><span data-ttu-id="c1b12-181">O comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-181">The requested command.</span></span>  <span data-ttu-id="c1b12-182">O gesto de chave padrão para esse comando é <see langword="Ctrl" /> + <see langword="R" />.</span><span class="sxs-lookup"><span data-stu-id="c1b12-182">The default key gesture for this command is <see langword="Ctrl" />+<see langword="R" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b12-183">Esse comando opera com o <xref:System.Windows.Documents.Paragraph> nível.</span><span class="sxs-lookup"><span data-stu-id="c1b12-183">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="c1b12-184">Se esse comando é invocado em uma seleção parcial de conteúdo dentro de um parágrafo (incluindo uma seleção vazia no qual o cursor está dentro de um parágrafo), o efeito solicitado é aplicado ao parágrafo inteiro.</span><span class="sxs-lookup"><span data-stu-id="c1b12-184">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="c1b12-185">Se esse comando é invocado em uma seleção que abrange vários parágrafos, o efeito é aplicado a todo o conteúdo de cada parágrafo que participa da seleção.</span><span class="sxs-lookup"><span data-stu-id="c1b12-185">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="c1b12-186">A figura a seguir mostra um exemplo de conteúdo alinhado à direita.</span><span class="sxs-lookup"><span data-stu-id="c1b12-186">The following figure shows an example of right-aligned content.</span></span>  
  
 <span data-ttu-id="c1b12-187">![Captura de tela: Valor de TextAlign de direito](~/add/media/flowdoc-textalign-right.png "captura de tela: valor da direita TextAlign")</span><span class="sxs-lookup"><span data-stu-id="c1b12-187">![Screenshot: TextAlign value of Right](~/add/media/flowdoc-textalign-right.png "Screenshot: TextAlign value of Right")</span></span>  
  
 <span data-ttu-id="c1b12-188">Não há necessariamente uma implementação real que responde a este comando em um determinado objeto; em muitos casos, a implementação que responde a um comando é responsabilidade do gravador de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="c1b12-188">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c1b12-189">Esse comando tem suporte nativo pelo <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="c1b12-189">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_AlignRight"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c1b12-190">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="c1b12-190">XAML Attribute Usage</span></span>  
  
```  
<object property="AlignRight"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c1b12-191">O exemplo a seguir demonstra como invocar um comando de edição em um objeto que suporta o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-191">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c1b12-192">Neste exemplo, um <xref:System.Windows.Controls.RichTextBox> serve como o destino do comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-192">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c1b12-193">Observe que <xref:System.Windows.Controls.RichTextBox> implementa o <xref:System.Windows.IInputElement> interface (herdado de <xref:System.Windows.FrameworkElement>), e que ele inclui suporte nativo para muitos comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-193">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-194">O primeiro argumento para o <xref:System.Windows.Input.RoutedCommand.Execute%2A> método é um parâmetro de comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-194">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c1b12-195">Comandos de edição mais ignorar o parâmetro de comando; em geral, esse parâmetro deve ser `null` para comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-195">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-196">O segundo argumento especifica o objeto ao qual o comando será roteado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-196">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c1b12-197">Este objeto deve implementar a <xref:System.Windows.IInputElement> de interface e deve incluir um manipulador para o comando especificado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-197">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c1b12-198">Em geral, um comando é ignorado quando invocado em um objeto que não lida com o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-198">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignCenter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignJustify" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignRight" />
      </Docs>
    </Member>
    <Member MemberName="Backspace">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Backspace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Backspace" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.Backspace" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Backspace As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Backspace { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Backspace : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.Backspace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1b12-199">Representa o comando <see cref="P:System.Windows.Documents.EditingCommands.Backspace" />, que solicita que um backspace seja inserido na posição atual ou sobre a seleção atual.</span><span class="sxs-lookup"><span data-stu-id="c1b12-199">Represents the <see cref="P:System.Windows.Documents.EditingCommands.Backspace" /> command, which requests that a backspace be entered at the current position or over the current selection.</span></span></summary>
        <value><span data-ttu-id="c1b12-200">O comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-200">The requested command.</span></span>  <span data-ttu-id="c1b12-201">O gesto de chave padrão para esse comando é <see langword="Backspace" />.</span><span class="sxs-lookup"><span data-stu-id="c1b12-201">The default key gesture for this command is <see langword="Backspace" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b12-202">Quando invocado em uma seleção vazia, esse comando exclui o separador de caractere ou de parágrafo antes do cursor.</span><span class="sxs-lookup"><span data-stu-id="c1b12-202">When invoked on an empty selection, this command deletes the character or paragraph separator just before the caret.</span></span> <span data-ttu-id="c1b12-203">Quando invocado em uma seleção de não vazio, esse comando exclui a seleção.</span><span class="sxs-lookup"><span data-stu-id="c1b12-203">When invoked on a non-empty selection, this command deletes the selection.</span></span>  
  
 <span data-ttu-id="c1b12-204">Esse comando manterá qualquer formatação da seleção excluída para o conteúdo inserido imediatamente no mesmo local depois que esse comando é invocado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-204">This command retains any formatting from the deleted selection for content immediately inserted at the same location after this command is invoked.</span></span>  <span data-ttu-id="c1b12-205">Compare com o <xref:System.Windows.Documents.EditingCommands.Delete%2A> comando, que não mantém a formatação anterior.</span><span class="sxs-lookup"><span data-stu-id="c1b12-205">Contrast with the <xref:System.Windows.Documents.EditingCommands.Delete%2A> command, which does not retain previous formatting.</span></span>  
  
 <span data-ttu-id="c1b12-206">Não há necessariamente uma implementação real que responde a este comando em um determinado objeto; em muitos casos, a implementação que responde a um comando é responsabilidade do gravador de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="c1b12-206">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c1b12-207">Esse comando tem suporte nativo pelos <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, e <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="c1b12-207">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_Backspace"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c1b12-208">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="c1b12-208">XAML Attribute Usage</span></span>  
  
```  
<object property="Backspace"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c1b12-209">O exemplo a seguir demonstra como invocar um comando de edição em um objeto que suporta o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-209">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c1b12-210">Neste exemplo, um <xref:System.Windows.Controls.RichTextBox> serve como o destino do comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-210">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c1b12-211">Observe que <xref:System.Windows.Controls.RichTextBox> implementa o <xref:System.Windows.IInputElement> interface (herdado de <xref:System.Windows.FrameworkElement>), e que ele inclui suporte nativo para muitos comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-211">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-212">O primeiro argumento para o <xref:System.Windows.Input.RoutedCommand.Execute%2A> método é um parâmetro de comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-212">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c1b12-213">Comandos de edição mais ignorar o parâmetro de comando; em geral, esse parâmetro deve ser `null` para comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-213">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-214">O segundo argumento especifica o objeto ao qual o comando será roteado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-214">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c1b12-215">Este objeto deve implementar a <xref:System.Windows.IInputElement> de interface e deve incluir um manipulador para o comando especificado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-215">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c1b12-216">Em geral, um comando é ignorado quando invocado em um objeto que não lida com o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-216">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CorrectSpellingError">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand CorrectSpellingError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand CorrectSpellingError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.CorrectSpellingError" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CorrectSpellingError As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ CorrectSpellingError { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CorrectSpellingError : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.CorrectSpellingError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1b12-217">Representa o comando <see cref="P:System.Windows.Documents.EditingCommands.CorrectSpellingError" />, que solicita que todas as palavras escritas incorretamente na posição sejam corrigidas.</span><span class="sxs-lookup"><span data-stu-id="c1b12-217">Represents the <see cref="P:System.Windows.Documents.EditingCommands.CorrectSpellingError" /> command, which requests that any misspelled word at the current position be corrected.</span></span></summary>
        <value><span data-ttu-id="c1b12-218">O comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-218">The requested command.</span></span>  <span data-ttu-id="c1b12-219">Esse comando não tem nenhum gesto de chave padrão.</span><span class="sxs-lookup"><span data-stu-id="c1b12-219">This command has no default key gesture.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b12-220">Não há necessariamente uma implementação real que responde a este comando em um determinado objeto; em muitos casos, a implementação que responde a um comando é responsabilidade do gravador de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="c1b12-220">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_CorrectSpellingError"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c1b12-221">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="c1b12-221">XAML Attribute Usage</span></span>  
  
```  
<object property="CorrectSpellingError"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError" />
      </Docs>
    </Member>
    <Member MemberName="DecreaseFontSize">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand DecreaseFontSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand DecreaseFontSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.DecreaseFontSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DecreaseFontSize As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ DecreaseFontSize { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DecreaseFontSize : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.DecreaseFontSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1b12-222">Representa o comando <see cref="P:System.Windows.Documents.EditingCommands.DecreaseFontSize" />, que solicita que o tamanho da fonte para a seleção atual ser diminuído em 1 ponto.</span><span class="sxs-lookup"><span data-stu-id="c1b12-222">Represents the <see cref="P:System.Windows.Documents.EditingCommands.DecreaseFontSize" /> command, which requests that the font size for the current selection be decreased by 1 point.</span></span></summary>
        <value><span data-ttu-id="c1b12-223">O comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-223">The requested command.</span></span>  <span data-ttu-id="c1b12-224">O gesto de chave padrão para esse comando é <see langword="Ctrl" /> + <see langword="OemOpenBrackets" />.</span><span class="sxs-lookup"><span data-stu-id="c1b12-224">The default key gesture for this command is <see langword="Ctrl" />+<see langword="OemOpenBrackets" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b12-225">Se esse comando é invocado em uma seleção vazia no qual o cursor está dentro de uma palavra, a seleção é expandida automaticamente para aplicar o comando para a palavra inteira.</span><span class="sxs-lookup"><span data-stu-id="c1b12-225">If this command is invoked on an empty selection where the caret is within a word, the selection is automatically expanded to apply the command to the entire word.</span></span>  
  
 <span data-ttu-id="c1b12-226">Não há necessariamente uma implementação real que responde a este comando em um determinado objeto; em muitos casos, a implementação que responde a um comando é responsabilidade do gravador de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="c1b12-226">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c1b12-227">Esse comando tem suporte nativo pelo <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="c1b12-227">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_DecreaseFontSize"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c1b12-228">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="c1b12-228">XAML Attribute Usage</span></span>  
  
```  
<object property="DecreaseFontSize"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c1b12-229">O exemplo a seguir demonstra como invocar um comando de edição em um objeto que suporta o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-229">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c1b12-230">Neste exemplo, um <xref:System.Windows.Controls.RichTextBox> serve como o destino do comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-230">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c1b12-231">Observe que <xref:System.Windows.Controls.RichTextBox> implementa o <xref:System.Windows.IInputElement> interface (herdado de <xref:System.Windows.FrameworkElement>), e que ele inclui suporte nativo para muitos comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-231">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-232">O primeiro argumento para o <xref:System.Windows.Input.RoutedCommand.Execute%2A> método é um parâmetro de comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-232">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c1b12-233">Comandos de edição mais ignorar o parâmetro de comando; em geral, esse parâmetro deve ser `null` para comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-233">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-234">O segundo argumento especifica o objeto ao qual o comando será roteado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-234">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c1b12-235">Este objeto deve implementar a <xref:System.Windows.IInputElement> de interface e deve incluir um manipulador para o comando especificado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-235">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c1b12-236">Em geral, um comando é ignorado quando invocado em um objeto que não lida com o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-236">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.IncreaseFontSize" />
      </Docs>
    </Member>
    <Member MemberName="DecreaseIndentation">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand DecreaseIndentation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand DecreaseIndentation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.DecreaseIndentation" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DecreaseIndentation As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ DecreaseIndentation { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DecreaseIndentation : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.DecreaseIndentation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1b12-237">Representa o comando <see cref="P:System.Windows.Documents.EditingCommands.DecreaseIndentation" />, que solicita que o recuo do parágrafo atual seja diminuído em uma tabulação.</span><span class="sxs-lookup"><span data-stu-id="c1b12-237">Represents the <see cref="P:System.Windows.Documents.EditingCommands.DecreaseIndentation" /> command, which requests that indentation for the current paragraph be decreased by one tab stop.</span></span></summary>
        <value><span data-ttu-id="c1b12-238">O comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-238">The requested command.</span></span>  <span data-ttu-id="c1b12-239">O gesto de chave padrão para esse comando é <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="T" />.</span><span class="sxs-lookup"><span data-stu-id="c1b12-239">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="T" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b12-240">Não há necessariamente uma implementação real que responde a este comando em um determinado objeto; em muitos casos, a implementação que responde a um comando é responsabilidade do gravador de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="c1b12-240">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c1b12-241">Esse comando tem suporte nativo pelo <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="c1b12-241">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c1b12-242">Esse comando não tem nenhum efeito em um elemento de texto, a menos que o <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> propriedade do elemento de texto é definida como `true`.</span><span class="sxs-lookup"><span data-stu-id="c1b12-242">This command has no effect on a text element unless the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> property of the text element is set to `true`.</span></span>  
  
<a name="xamlAttributeUsage_DecreaseIndentation"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c1b12-243">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="c1b12-243">XAML Attribute Usage</span></span>  
  
```  
<object property="DecreaseIndentation"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c1b12-244">O exemplo a seguir demonstra como invocar um comando de edição em um objeto que suporta o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-244">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c1b12-245">Neste exemplo, um <xref:System.Windows.Controls.RichTextBox> serve como o destino do comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-245">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c1b12-246">Observe que <xref:System.Windows.Controls.RichTextBox> implementa o <xref:System.Windows.IInputElement> interface (herdado de <xref:System.Windows.FrameworkElement>), e que ele inclui suporte nativo para muitos comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-246">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-247">O primeiro argumento para o <xref:System.Windows.Input.RoutedCommand.Execute%2A> método é um parâmetro de comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-247">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c1b12-248">Comandos de edição mais ignorar o parâmetro de comando; em geral, esse parâmetro deve ser `null` para comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-248">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-249">O segundo argumento especifica o objeto ao qual o comando será roteado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-249">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c1b12-250">Este objeto deve implementar a <xref:System.Windows.IInputElement> de interface e deve incluir um manipulador para o comando especificado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-250">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c1b12-251">Em geral, um comando é ignorado quando invocado em um objeto que não lida com o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-251">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.IncreaseIndentation" />
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Delete { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Delete" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Delete As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Delete { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Delete : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.Delete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1b12-252">Representa o comando <see cref="P:System.Windows.Documents.EditingCommands.Delete" />, que solicita que a seleção atual seja excluída.</span><span class="sxs-lookup"><span data-stu-id="c1b12-252">Represents the <see cref="P:System.Windows.Documents.EditingCommands.Delete" /> command, which requests that the current selection be deleted.</span></span></summary>
        <value><span data-ttu-id="c1b12-253">O comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-253">The requested command.</span></span>  <span data-ttu-id="c1b12-254">O gesto de chave padrão para esse comando é <see langword="Delete" />.</span><span class="sxs-lookup"><span data-stu-id="c1b12-254">The default key gesture for this command is <see langword="Delete" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b12-255">Esse comando descarta qualquer formatação da seleção excluída.</span><span class="sxs-lookup"><span data-stu-id="c1b12-255">This command discards any formatting from the deleted selection.</span></span>  <span data-ttu-id="c1b12-256">Compare com o <xref:System.Windows.Documents.EditingCommands.Backspace%2A> de comando, que manterá qualquer formatação da seleção excluída para o conteúdo inserido imediatamente no mesmo local depois que esse comando é invocado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-256">Contrast with the <xref:System.Windows.Documents.EditingCommands.Backspace%2A> command, which retains any formatting from the deleted selection for content immediately inserted at the same location after this command is invoked.</span></span>  
  
 <span data-ttu-id="c1b12-257">Não há necessariamente uma implementação real que responde a este comando em um determinado objeto; em muitos casos, a implementação que responde a um comando é responsabilidade do gravador de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="c1b12-257">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c1b12-258">Esse comando tem suporte nativo pelos <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, e <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="c1b12-258">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_Delete"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c1b12-259">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="c1b12-259">XAML Attribute Usage</span></span>  
  
```  
<object property="Delete"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c1b12-260">O exemplo a seguir demonstra como invocar um comando de edição em um objeto que suporta o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-260">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c1b12-261">Neste exemplo, um <xref:System.Windows.Controls.RichTextBox> serve como o destino do comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-261">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c1b12-262">Observe que <xref:System.Windows.Controls.RichTextBox> implementa o <xref:System.Windows.IInputElement> interface (herdado de <xref:System.Windows.FrameworkElement>), e que ele inclui suporte nativo para muitos comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-262">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-263">O primeiro argumento para o <xref:System.Windows.Input.RoutedCommand.Execute%2A> método é um parâmetro de comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-263">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c1b12-264">Comandos de edição mais ignorar o parâmetro de comando; em geral, esse parâmetro deve ser `null` para comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-264">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-265">O segundo argumento especifica o objeto ao qual o comando será roteado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-265">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c1b12-266">Este objeto deve implementar a <xref:System.Windows.IInputElement> de interface e deve incluir um manipulador para o comando especificado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-266">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c1b12-267">Em geral, um comando é ignorado quando invocado em um objeto que não lida com o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-267">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteNextWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand DeleteNextWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand DeleteNextWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.DeleteNextWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DeleteNextWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ DeleteNextWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeleteNextWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.DeleteNextWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1b12-268">Representa o comando <see cref="P:System.Windows.Documents.EditingCommands.DeleteNextWord" />, que solicita que a próxima palavra (em relação à posição atual) seja excluída.</span><span class="sxs-lookup"><span data-stu-id="c1b12-268">Represents the <see cref="P:System.Windows.Documents.EditingCommands.DeleteNextWord" /> command, which requests that the next word (relative to a current position) be deleted.</span></span></summary>
        <value><span data-ttu-id="c1b12-269">O comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-269">The requested command.</span></span>  <span data-ttu-id="c1b12-270">O gesto de chave padrão para esse comando é <see langword="Ctrl" /> + <see langword="Delete" />.</span><span class="sxs-lookup"><span data-stu-id="c1b12-270">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Delete" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b12-271">Se o cursor estiver dentro de uma palavra, o resto da palavra entre a posição atual e o fim da palavra é excluído.</span><span class="sxs-lookup"><span data-stu-id="c1b12-271">If the caret is within a word, the remainder of the word between the current position and the end of the word is deleted.</span></span>  
  
 <span data-ttu-id="c1b12-272">Não há necessariamente uma implementação real que responde a este comando em um determinado objeto; em muitos casos, a implementação que responde a um comando é responsabilidade do gravador de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="c1b12-272">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c1b12-273">Esse comando tem suporte nativo pelos <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, e <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="c1b12-273">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_DeleteNextWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c1b12-274">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="c1b12-274">XAML Attribute Usage</span></span>  
  
```  
<object property="DeleteNextWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c1b12-275">O exemplo a seguir demonstra como invocar um comando de edição em um objeto que suporta o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-275">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c1b12-276">Neste exemplo, um <xref:System.Windows.Controls.RichTextBox> serve como o destino do comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-276">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c1b12-277">Observe que <xref:System.Windows.Controls.RichTextBox> implementa o <xref:System.Windows.IInputElement> interface (herdado de <xref:System.Windows.FrameworkElement>), e que ele inclui suporte nativo para muitos comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-277">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-278">O primeiro argumento para o <xref:System.Windows.Input.RoutedCommand.Execute%2A> método é um parâmetro de comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-278">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c1b12-279">Comandos de edição mais ignorar o parâmetro de comando; em geral, esse parâmetro deve ser `null` para comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-279">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-280">O segundo argumento especifica o objeto ao qual o comando será roteado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-280">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c1b12-281">Este objeto deve implementar a <xref:System.Windows.IInputElement> de interface e deve incluir um manipulador para o comando especificado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-281">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c1b12-282">Em geral, um comando é ignorado quando invocado em um objeto que não lida com o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-282">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.DeletePreviousWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
      </Docs>
    </Member>
    <Member MemberName="DeletePreviousWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand DeletePreviousWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand DeletePreviousWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.DeletePreviousWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DeletePreviousWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ DeletePreviousWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeletePreviousWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.DeletePreviousWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1b12-283">Representa o comando <see cref="P:System.Windows.Documents.EditingCommands.DeletePreviousWord" />, que solicita que a palavra anterior (em relação à posição atual) seja excluída.</span><span class="sxs-lookup"><span data-stu-id="c1b12-283">Represents the <see cref="P:System.Windows.Documents.EditingCommands.DeletePreviousWord" /> command, which requests that the previous word (relative to a current position) be deleted.</span></span></summary>
        <value><span data-ttu-id="c1b12-284">O comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-284">The requested command.</span></span>  <span data-ttu-id="c1b12-285">O gesto de chave padrão para esse comando é <see langword="Ctrl" /> + <see langword="Backspace" />.</span><span class="sxs-lookup"><span data-stu-id="c1b12-285">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Backspace" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b12-286">Se o cursor estiver dentro de uma palavra, o resto da palavra entre a posição atual e o início da palavra é excluído.</span><span class="sxs-lookup"><span data-stu-id="c1b12-286">If the caret is within a word, the remainder of the word between the current position and the beginning of the word is deleted.</span></span>  
  
 <span data-ttu-id="c1b12-287">Não há necessariamente uma implementação real que responde a este comando em um determinado objeto; em muitos casos, a implementação que responde a um comando é responsabilidade do gravador de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="c1b12-287">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c1b12-288">Esse comando tem suporte nativo pelos <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, e <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="c1b12-288">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_DeletePreviousWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c1b12-289">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="c1b12-289">XAML Attribute Usage</span></span>  
  
```  
<object property="DeletePreviousWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c1b12-290">O exemplo a seguir demonstra como invocar um comando de edição em um objeto que suporta o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-290">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c1b12-291">Neste exemplo, um <xref:System.Windows.Controls.RichTextBox> serve como o destino do comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-291">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c1b12-292">Observe que <xref:System.Windows.Controls.RichTextBox> implementa o <xref:System.Windows.IInputElement> interface (herdado de <xref:System.Windows.FrameworkElement>), e que ele inclui suporte nativo para muitos comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-292">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-293">O primeiro argumento para o <xref:System.Windows.Input.RoutedCommand.Execute%2A> método é um parâmetro de comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-293">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c1b12-294">Comandos de edição mais ignorar o parâmetro de comando; em geral, esse parâmetro deve ser `null` para comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-294">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-295">O segundo argumento especifica o objeto ao qual o comando será roteado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-295">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c1b12-296">Este objeto deve implementar a <xref:System.Windows.IInputElement> de interface e deve incluir um manipulador para o comando especificado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-296">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c1b12-297">Em geral, um comando é ignorado quando invocado em um objeto que não lida com o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-297">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.DeleteNextWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
      </Docs>
    </Member>
    <Member MemberName="EnterLineBreak">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand EnterLineBreak { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand EnterLineBreak" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.EnterLineBreak" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EnterLineBreak As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ EnterLineBreak { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EnterLineBreak : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.EnterLineBreak" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1b12-298">Representa o comando <see cref="P:System.Windows.Documents.EditingCommands.EnterLineBreak" />, que solicita que uma quebra de linha seja inserida na posição atual ou sobre a seleção atual.</span><span class="sxs-lookup"><span data-stu-id="c1b12-298">Represents the <see cref="P:System.Windows.Documents.EditingCommands.EnterLineBreak" /> command, which requests that a line break be inserted at the current position or over the current selection.</span></span></summary>
        <value><span data-ttu-id="c1b12-299">O comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-299">The requested command.</span></span>  <span data-ttu-id="c1b12-300">O gesto de chave padrão para esse comando é <see langword="Shift" /> + <see langword="Enter" />.</span><span class="sxs-lookup"><span data-stu-id="c1b12-300">The default key gesture for this command is <see langword="Shift" />+<see langword="Enter" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b12-301">Para editores que dão suporte a conteúdo de fluxo, como <xref:System.Windows.Controls.RichTextBox>, esse comando faz com que um <xref:System.Windows.Documents.LineBreak> elemento a ser inserido na posição atual.</span><span class="sxs-lookup"><span data-stu-id="c1b12-301">For editors that support flow content, such as <xref:System.Windows.Controls.RichTextBox>, this command causes a <xref:System.Windows.Documents.LineBreak> element to be inserted at the current position.</span></span>  
  
 <span data-ttu-id="c1b12-302">Não há necessariamente uma implementação real que responde a este comando em um determinado objeto; em muitos casos, a implementação que responde a um comando é responsabilidade do gravador de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="c1b12-302">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c1b12-303">Esse comando tem suporte nativo pelos <xref:System.Windows.Controls.RichTextBox> e <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="c1b12-303">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_EnterLineBreak"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c1b12-304">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="c1b12-304">XAML Attribute Usage</span></span>  
  
```  
<object property="EnterLineBreak"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c1b12-305">O exemplo a seguir demonstra como invocar um comando de edição em um objeto que suporta o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-305">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c1b12-306">Neste exemplo, um <xref:System.Windows.Controls.RichTextBox> serve como o destino do comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-306">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c1b12-307">Observe que <xref:System.Windows.Controls.RichTextBox> implementa o <xref:System.Windows.IInputElement> interface (herdado de <xref:System.Windows.FrameworkElement>), e que ele inclui suporte nativo para muitos comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-307">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-308">O primeiro argumento para o <xref:System.Windows.Input.RoutedCommand.Execute%2A> método é um parâmetro de comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-308">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c1b12-309">Comandos de edição mais ignorar o parâmetro de comando; em geral, esse parâmetro deve ser `null` para comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-309">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-310">O segundo argumento especifica o objeto ao qual o comando será roteado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-310">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c1b12-311">Este objeto deve implementar a <xref:System.Windows.IInputElement> de interface e deve incluir um manipulador para o comando especificado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-311">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c1b12-312">Em geral, um comando é ignorado quando invocado em um objeto que não lida com o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-312">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak" />
      </Docs>
    </Member>
    <Member MemberName="EnterParagraphBreak">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand EnterParagraphBreak { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand EnterParagraphBreak" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EnterParagraphBreak As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ EnterParagraphBreak { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EnterParagraphBreak : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.EnterParagraphBreak" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1b12-313">Representa o comando <see cref="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak" />, que solicita que uma quebra de parágrafo seja inserida na posição atual ou sobre a seleção atual.</span><span class="sxs-lookup"><span data-stu-id="c1b12-313">Represents the <see cref="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak" /> command, which requests that a paragraph break be inserted at the current position or over the current selection.</span></span></summary>
        <value><span data-ttu-id="c1b12-314">O comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-314">The requested command.</span></span>  <span data-ttu-id="c1b12-315">O gesto de chave padrão para esse comando é <see langword="Enter" />.</span><span class="sxs-lookup"><span data-stu-id="c1b12-315">The default key gesture for this command is <see langword="Enter" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b12-316">Esse comando é equivalente a usuário ao pressionar a tecla ENTER.</span><span class="sxs-lookup"><span data-stu-id="c1b12-316">This command is equivalent to the user pressing the ENTER key.</span></span>  
  
 <span data-ttu-id="c1b12-317">Não há necessariamente uma implementação real que responde a este comando em um determinado objeto; em muitos casos, a implementação que responde a um comando é responsabilidade do gravador de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="c1b12-317">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c1b12-318">Esse comando tem suporte nativo pelos <xref:System.Windows.Controls.RichTextBox> e <xref:System.Windows.Controls.TextBox> (quando o <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn%2A> é de propriedade `true`).</span><span class="sxs-lookup"><span data-stu-id="c1b12-318">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox> (when the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn%2A> property is `true`).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c1b12-319">Esse comando não tem nenhum efeito em um elemento de texto, a menos que o <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn%2A> propriedade do elemento de texto é definida como `true`.</span><span class="sxs-lookup"><span data-stu-id="c1b12-319">This command has no effect on a text element unless the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn%2A> property of the text element is set to `true`.</span></span>  
  
<a name="xamlAttributeUsage_EnterParagraphBreak"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c1b12-320">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="c1b12-320">XAML Attribute Usage</span></span>  
  
```  
<object property="EnterParagraphBreak"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c1b12-321">O exemplo a seguir demonstra como invocar um comando de edição em um objeto que suporta o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-321">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c1b12-322">Neste exemplo, um <xref:System.Windows.Controls.RichTextBox> serve como o destino do comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-322">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c1b12-323">Observe que <xref:System.Windows.Controls.RichTextBox> implementa o <xref:System.Windows.IInputElement> interface (herdado de <xref:System.Windows.FrameworkElement>), e que ele inclui suporte nativo para muitos comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-323">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-324">O primeiro argumento para o <xref:System.Windows.Input.RoutedCommand.Execute%2A> método é um parâmetro de comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-324">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c1b12-325">Comandos de edição mais ignorar o parâmetro de comando; em geral, esse parâmetro deve ser `null` para comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-325">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-326">O segundo argumento especifica o objeto ao qual o comando será roteado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-326">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c1b12-327">Este objeto deve implementar a <xref:System.Windows.IInputElement> de interface e deve incluir um manipulador para o comando especificado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-327">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c1b12-328">Em geral, um comando é ignorado quando invocado em um objeto que não lida com o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-328">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.EnterLineBreak" />
      </Docs>
    </Member>
    <Member MemberName="IgnoreSpellingError">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand IgnoreSpellingError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand IgnoreSpellingError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IgnoreSpellingError As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ IgnoreSpellingError { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreSpellingError : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.IgnoreSpellingError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1b12-329">Representa o comando <see cref="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError" />, que solicita que qualquer instância de palavras escritas incorretamente na posição atual ou na seleção atual seja ignorada.</span><span class="sxs-lookup"><span data-stu-id="c1b12-329">Represents the <see cref="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError" /> command, which requests that any instances of misspelled words at the current position or in the current selection be ignored.</span></span></summary>
        <value><span data-ttu-id="c1b12-330">O comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-330">The requested command.</span></span>  <span data-ttu-id="c1b12-331">Esse comando não tem nenhum gesto de chave padrão.</span><span class="sxs-lookup"><span data-stu-id="c1b12-331">This command has no default key gesture.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b12-332">Não há necessariamente uma implementação real que responde a este comando em um determinado objeto; em muitos casos, a implementação que responde a um comando é responsabilidade do gravador de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="c1b12-332">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_IgnoreSpellingError"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c1b12-333">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="c1b12-333">XAML Attribute Usage</span></span>  
  
```  
<object property="IgnoreSpellingError"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.CorrectSpellingError" />
      </Docs>
    </Member>
    <Member MemberName="IncreaseFontSize">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand IncreaseFontSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand IncreaseFontSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.IncreaseFontSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IncreaseFontSize As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ IncreaseFontSize { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IncreaseFontSize : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.IncreaseFontSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1b12-334">Representa o comando <see cref="P:System.Windows.Documents.EditingCommands.IncreaseFontSize" />, que solicita que o tamanho da fonte para a seleção atual ser aumentado em 1 ponto.</span><span class="sxs-lookup"><span data-stu-id="c1b12-334">Represents the <see cref="P:System.Windows.Documents.EditingCommands.IncreaseFontSize" /> command, which requests that the font size for the current selection be increased by 1 point.</span></span></summary>
        <value><span data-ttu-id="c1b12-335">O comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-335">The requested command.</span></span>  <span data-ttu-id="c1b12-336">O gesto de chave padrão para esse comando é <see langword="Ctrl" /> + <see langword="OemCloseBrackets" />.</span><span class="sxs-lookup"><span data-stu-id="c1b12-336">The default key gesture for this command is <see langword="Ctrl" />+<see langword="OemCloseBrackets" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b12-337">Se esse comando é invocado em uma seleção vazia no qual o cursor está dentro de uma palavra, a seleção será expandida para aplicar o comando para a palavra inteira.</span><span class="sxs-lookup"><span data-stu-id="c1b12-337">If this command is invoked on an empty selection where the caret is within a word, the selection is expanded to apply the command to the entire word.</span></span>  
  
 <span data-ttu-id="c1b12-338">Não há necessariamente uma implementação real que responde a este comando em um determinado objeto; em muitos casos, a implementação que responde a um comando é responsabilidade do gravador de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="c1b12-338">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c1b12-339">Esse comando tem suporte nativo pelo <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="c1b12-339">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_IncreaseFontSize"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c1b12-340">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="c1b12-340">XAML Attribute Usage</span></span>  
  
```  
<object property="IncreaseFontSize"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c1b12-341">O exemplo a seguir demonstra como invocar um comando de edição em um objeto que suporta o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-341">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c1b12-342">Neste exemplo, um <xref:System.Windows.Controls.RichTextBox> serve como o destino do comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-342">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c1b12-343">Observe que <xref:System.Windows.Controls.RichTextBox> implementa o <xref:System.Windows.IInputElement> interface (herdado de <xref:System.Windows.FrameworkElement>), e que ele inclui suporte nativo para muitos comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-343">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-344">O primeiro argumento para o <xref:System.Windows.Input.RoutedCommand.Execute%2A> método é um parâmetro de comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-344">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c1b12-345">Comandos de edição mais ignorar o parâmetro de comando; em geral, esse parâmetro deve ser `null` para comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-345">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-346">O segundo argumento especifica o objeto ao qual o comando será roteado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-346">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c1b12-347">Este objeto deve implementar a <xref:System.Windows.IInputElement> de interface e deve incluir um manipulador para o comando especificado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-347">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c1b12-348">Em geral, um comando é ignorado quando invocado em um objeto que não lida com o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-348">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.DecreaseFontSize" />
      </Docs>
    </Member>
    <Member MemberName="IncreaseIndentation">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand IncreaseIndentation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand IncreaseIndentation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.IncreaseIndentation" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IncreaseIndentation As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ IncreaseIndentation { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IncreaseIndentation : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.IncreaseIndentation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1b12-349">Representa o comando <see cref="P:System.Windows.Documents.EditingCommands.IncreaseIndentation" />, que solicita que o recuo do parágrafo atual seja aumentado em uma tabulação.</span><span class="sxs-lookup"><span data-stu-id="c1b12-349">Represents the <see cref="P:System.Windows.Documents.EditingCommands.IncreaseIndentation" /> command, which requests that indentation for the current paragraph be increased by one tab stop.</span></span></summary>
        <value><span data-ttu-id="c1b12-350">O comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-350">The requested command.</span></span>  <span data-ttu-id="c1b12-351">O gesto de chave padrão para esse comando é <see langword="Ctrl" /> + <see langword="T" />.</span><span class="sxs-lookup"><span data-stu-id="c1b12-351">The default key gesture for this command is <see langword="Ctrl" />+<see langword="T" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b12-352">Não há necessariamente uma implementação real que responde a este comando em um determinado objeto; em muitos casos, a implementação que responde a um comando é responsabilidade do gravador de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="c1b12-352">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c1b12-353">Esse comando tem suporte nativo pelo <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="c1b12-353">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c1b12-354">Esse comando não tem nenhum efeito em um elemento de texto, a menos que o <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> propriedade do elemento de texto é definida como `true`.</span><span class="sxs-lookup"><span data-stu-id="c1b12-354">This command has no effect on a text element unless the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> property of the text element is set to `true`.</span></span>  
  
<a name="xamlAttributeUsage_IncreaseIndentation"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c1b12-355">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="c1b12-355">XAML Attribute Usage</span></span>  
  
```  
<object property="IncreaseIndentation"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c1b12-356">O exemplo a seguir demonstra como invocar um comando de edição em um objeto que suporta o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-356">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c1b12-357">Neste exemplo, um <xref:System.Windows.Controls.RichTextBox> serve como o destino do comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-357">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c1b12-358">Observe que <xref:System.Windows.Controls.RichTextBox> implementa o <xref:System.Windows.IInputElement> interface (herdado de <xref:System.Windows.FrameworkElement>), e que ele inclui suporte nativo para muitos comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-358">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-359">O primeiro argumento para o <xref:System.Windows.Input.RoutedCommand.Execute%2A> método é um parâmetro de comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-359">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c1b12-360">Comandos de edição mais ignorar o parâmetro de comando; em geral, esse parâmetro deve ser `null` para comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-360">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-361">O segundo argumento especifica o objeto ao qual o comando será roteado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-361">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c1b12-362">Este objeto deve implementar a <xref:System.Windows.IInputElement> de interface e deve incluir um manipulador para o comando especificado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-362">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c1b12-363">Em geral, um comando é ignorado quando invocado em um objeto que não lida com o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-363">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.DecreaseIndentation" />
      </Docs>
    </Member>
    <Member MemberName="MoveDownByLine">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveDownByLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveDownByLine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveDownByLine As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveDownByLine { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveDownByLine : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveDownByLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1b12-364">Representa o comando <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />, que solicita que o cursor mova para baixo em uma linha.</span><span class="sxs-lookup"><span data-stu-id="c1b12-364">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" /> command, which requests that the caret move down by one line.</span></span></summary>
        <value><span data-ttu-id="c1b12-365">O comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-365">The requested command.</span></span>  <span data-ttu-id="c1b12-366">O gesto de chave padrão para esse comando é <see langword="Down" />.</span><span class="sxs-lookup"><span data-stu-id="c1b12-366">The default key gesture for this command is <see langword="Down" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b12-367">Não há necessariamente uma implementação real que responde a este comando em um determinado objeto; em muitos casos, a implementação que responde a um comando é responsabilidade do gravador de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="c1b12-367">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c1b12-368">Esse comando tem suporte nativo pelos <xref:System.Windows.Controls.RichTextBox> e <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="c1b12-368">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveDownByLine"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c1b12-369">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="c1b12-369">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveDownByLine"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c1b12-370">O exemplo a seguir demonstra como invocar um comando de edição em um objeto que suporta o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-370">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c1b12-371">Neste exemplo, um <xref:System.Windows.Controls.RichTextBox> serve como o destino do comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-371">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c1b12-372">Observe que <xref:System.Windows.Controls.RichTextBox> implementa o <xref:System.Windows.IInputElement> interface (herdado de <xref:System.Windows.FrameworkElement>), e que ele inclui suporte nativo para muitos comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-372">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-373">O primeiro argumento para o <xref:System.Windows.Input.RoutedCommand.Execute%2A> método é um parâmetro de comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-373">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c1b12-374">Comandos de edição mais ignorar o parâmetro de comando; em geral, esse parâmetro deve ser `null` para comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-374">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-375">O segundo argumento especifica o objeto ao qual o comando será roteado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-375">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c1b12-376">Este objeto deve implementar a <xref:System.Windows.IInputElement> de interface e deve incluir um manipulador para o comando especificado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-376">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c1b12-377">Em geral, um comando é ignorado quando invocado em um objeto que não lida com o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-377">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
      </Docs>
    </Member>
    <Member MemberName="MoveDownByPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveDownByPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveDownByPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveDownByPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveDownByPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveDownByPage : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveDownByPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1b12-378">Representa o comando <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />, que solicita que o cursor mova para baixo em uma página.</span><span class="sxs-lookup"><span data-stu-id="c1b12-378">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" /> command, which requests that the caret move down by one page.</span></span></summary>
        <value><span data-ttu-id="c1b12-379">O comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-379">The requested command.</span></span>  <span data-ttu-id="c1b12-380">O gesto de chave padrão para esse comando é <see langword="PageDown" />.</span><span class="sxs-lookup"><span data-stu-id="c1b12-380">The default key gesture for this command is <see langword="PageDown" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b12-381">Não há necessariamente uma implementação real que responde a este comando em um determinado objeto; em muitos casos, a implementação que responde a um comando é responsabilidade do gravador de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="c1b12-381">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c1b12-382">Esse comando tem suporte nativo pelos <xref:System.Windows.Controls.RichTextBox> e <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="c1b12-382">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveDownByPage"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c1b12-383">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="c1b12-383">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveDownByPage"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c1b12-384">O exemplo a seguir demonstra como invocar um comando de edição em um objeto que suporta o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-384">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c1b12-385">Neste exemplo, um <xref:System.Windows.Controls.RichTextBox> serve como o destino do comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-385">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c1b12-386">Observe que <xref:System.Windows.Controls.RichTextBox> implementa o <xref:System.Windows.IInputElement> interface (herdado de <xref:System.Windows.FrameworkElement>), e que ele inclui suporte nativo para muitos comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-386">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-387">O primeiro argumento para o <xref:System.Windows.Input.RoutedCommand.Execute%2A> método é um parâmetro de comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-387">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c1b12-388">Comandos de edição mais ignorar o parâmetro de comando; em geral, esse parâmetro deve ser `null` para comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-388">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-389">O segundo argumento especifica o objeto ao qual o comando será roteado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-389">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c1b12-390">Este objeto deve implementar a <xref:System.Windows.IInputElement> de interface e deve incluir um manipulador para o comando especificado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-390">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c1b12-391">Em geral, um comando é ignorado quando invocado em um objeto que não lida com o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-391">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
      </Docs>
    </Member>
    <Member MemberName="MoveDownByParagraph">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveDownByParagraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveDownByParagraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveDownByParagraph As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveDownByParagraph { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveDownByParagraph : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1b12-392">Representa o comando <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />, que solicita que o cursor mova para baixo em um parágrafo.</span><span class="sxs-lookup"><span data-stu-id="c1b12-392">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" /> command, which requests that the caret move down by one paragraph.</span></span></summary>
        <value><span data-ttu-id="c1b12-393">O comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-393">The requested command.</span></span>  <span data-ttu-id="c1b12-394">O gesto de chave padrão para esse comando é <see langword="Ctrl" /> + <see langword="Down" />.</span><span class="sxs-lookup"><span data-stu-id="c1b12-394">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Down" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b12-395">Esse comando posiciona o cursor no início do próximo parágrafo.</span><span class="sxs-lookup"><span data-stu-id="c1b12-395">This command positions the caret at the beginning of the next paragraph.</span></span>  
  
 <span data-ttu-id="c1b12-396">Esse comando se comporta como <xref:System.Windows.Documents.EditingCommands.MoveToDocumentEnd%2A> quando invocado em um <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="c1b12-396">This command behaves like <xref:System.Windows.Documents.EditingCommands.MoveToDocumentEnd%2A> when invoked on a <xref:System.Windows.Controls.TextBox>.</span></span>  
  
 <span data-ttu-id="c1b12-397">Não há necessariamente uma implementação real que responde a este comando em um determinado objeto; em muitos casos, a implementação que responde a um comando é responsabilidade do gravador de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="c1b12-397">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c1b12-398">Esse comando tem suporte nativo pelos <xref:System.Windows.Controls.RichTextBox> e <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="c1b12-398">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveDownByParagraph"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c1b12-399">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="c1b12-399">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveDownByParagraph"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c1b12-400">O exemplo a seguir demonstra como invocar um comando de edição em um objeto que suporta o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-400">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c1b12-401">Neste exemplo, um <xref:System.Windows.Controls.RichTextBox> serve como o destino do comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-401">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c1b12-402">Observe que <xref:System.Windows.Controls.RichTextBox> implementa o <xref:System.Windows.IInputElement> interface (herdado de <xref:System.Windows.FrameworkElement>), e que ele inclui suporte nativo para muitos comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-402">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-403">O primeiro argumento para o <xref:System.Windows.Input.RoutedCommand.Execute%2A> método é um parâmetro de comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-403">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c1b12-404">Comandos de edição mais ignorar o parâmetro de comando; em geral, esse parâmetro deve ser `null` para comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-404">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-405">O segundo argumento especifica o objeto ao qual o comando será roteado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-405">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c1b12-406">Este objeto deve implementar a <xref:System.Windows.IInputElement> de interface e deve incluir um manipulador para o comando especificado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-406">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c1b12-407">Em geral, um comando é ignorado quando invocado em um objeto que não lida com o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-407">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
      </Docs>
    </Member>
    <Member MemberName="MoveLeftByCharacter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveLeftByCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveLeftByCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveLeftByCharacter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveLeftByCharacter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveLeftByCharacter : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1b12-408">Representa o comando <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />, que solicita que o cursor mova um caractere para a esquerda.</span><span class="sxs-lookup"><span data-stu-id="c1b12-408">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" /> command, which requests that the caret move one character left.</span></span></summary>
        <value><span data-ttu-id="c1b12-409">O comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-409">The requested command.</span></span>  <span data-ttu-id="c1b12-410">O gesto de chave padrão para esse comando é <see langword="Left" />.</span><span class="sxs-lookup"><span data-stu-id="c1b12-410">The default key gesture for this command is <see langword="Left" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b12-411">Não há necessariamente uma implementação real que responde a este comando em um determinado objeto; em muitos casos, a implementação que responde a um comando é responsabilidade do gravador de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="c1b12-411">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c1b12-412">Esse comando tem suporte nativo pelos <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, e <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="c1b12-412">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveLeftByCharacter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c1b12-413">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="c1b12-413">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveLeftByCharacter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c1b12-414">O exemplo a seguir demonstra como invocar um comando de edição em um objeto que suporta o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-414">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c1b12-415">Neste exemplo, um <xref:System.Windows.Controls.RichTextBox> serve como o destino do comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-415">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c1b12-416">Observe que <xref:System.Windows.Controls.RichTextBox> implementa o <xref:System.Windows.IInputElement> interface (herdado de <xref:System.Windows.FrameworkElement>), e que ele inclui suporte nativo para muitos comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-416">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-417">O primeiro argumento para o <xref:System.Windows.Input.RoutedCommand.Execute%2A> método é um parâmetro de comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-417">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c1b12-418">Comandos de edição mais ignorar o parâmetro de comando; em geral, esse parâmetro deve ser `null` para comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-418">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-419">O segundo argumento especifica o objeto ao qual o comando será roteado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-419">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c1b12-420">Este objeto deve implementar a <xref:System.Windows.IInputElement> de interface e deve incluir um manipulador para o comando especificado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-420">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c1b12-421">Em geral, um comando é ignorado quando invocado em um objeto que não lida com o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-421">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
      </Docs>
    </Member>
    <Member MemberName="MoveLeftByWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveLeftByWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveLeftByWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveLeftByWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveLeftByWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveLeftByWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveLeftByWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1b12-422">Representa o comando <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />, que solicita que o cursor mova uma palavra para a esquerda.</span><span class="sxs-lookup"><span data-stu-id="c1b12-422">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" /> command, which requests that the caret move one word left.</span></span></summary>
        <value><span data-ttu-id="c1b12-423">O comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-423">The requested command.</span></span>  <span data-ttu-id="c1b12-424">O gesto de chave padrão para esse comando é <see langword="Ctrl" /> + <see langword="Left" />.</span><span class="sxs-lookup"><span data-stu-id="c1b12-424">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Left" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b12-425">Se o cursor estiver dentro de uma palavra, este comando move o cursor para o início da palavra.</span><span class="sxs-lookup"><span data-stu-id="c1b12-425">If the caret is within a word, this command moves the caret to the beginning of that word.</span></span>  <span data-ttu-id="c1b12-426">Caso contrário, este comando move o cursor para o início da palavra anterior.</span><span class="sxs-lookup"><span data-stu-id="c1b12-426">Otherwise, this command moves the caret to the beginning of the previous word.</span></span>  
  
 <span data-ttu-id="c1b12-427">Não há necessariamente uma implementação real que responde a este comando em um determinado objeto; em muitos casos, a implementação que responde a um comando é responsabilidade do gravador de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="c1b12-427">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c1b12-428">Esse comando tem suporte nativo pelos <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, e <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="c1b12-428">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveLeftByWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c1b12-429">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="c1b12-429">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveLeftByWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c1b12-430">O exemplo a seguir demonstra como invocar um comando de edição em um objeto que suporta o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-430">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c1b12-431">Neste exemplo, um <xref:System.Windows.Controls.RichTextBox> serve como o destino do comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-431">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c1b12-432">Observe que <xref:System.Windows.Controls.RichTextBox> implementa o <xref:System.Windows.IInputElement> interface (herdado de <xref:System.Windows.FrameworkElement>), e que ele inclui suporte nativo para muitos comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-432">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-433">O primeiro argumento para o <xref:System.Windows.Input.RoutedCommand.Execute%2A> método é um parâmetro de comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-433">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c1b12-434">Comandos de edição mais ignorar o parâmetro de comando; em geral, esse parâmetro deve ser `null` para comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-434">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-435">O segundo argumento especifica o objeto ao qual o comando será roteado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-435">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c1b12-436">Este objeto deve implementar a <xref:System.Windows.IInputElement> de interface e deve incluir um manipulador para o comando especificado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-436">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c1b12-437">Em geral, um comando é ignorado quando invocado em um objeto que não lida com o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-437">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
      </Docs>
    </Member>
    <Member MemberName="MoveRightByCharacter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveRightByCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveRightByCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveRightByCharacter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveRightByCharacter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveRightByCharacter : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1b12-438">Representa o comando <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" />, que solicita que o cursor mova um caractere para a direita.</span><span class="sxs-lookup"><span data-stu-id="c1b12-438">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" /> command, which requests that the caret move one character right.</span></span></summary>
        <value><span data-ttu-id="c1b12-439">O comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-439">The requested command.</span></span>  <span data-ttu-id="c1b12-440">O gesto de chave padrão para esse comando é <see langword="Right" />.</span><span class="sxs-lookup"><span data-stu-id="c1b12-440">The default key gesture for this command is <see langword="Right" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b12-441">Não há necessariamente uma implementação real que responde a este comando em um determinado objeto; em muitos casos, a implementação que responde a um comando é responsabilidade do gravador de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="c1b12-441">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c1b12-442">Esse comando tem suporte nativo pelos <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, e <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="c1b12-442">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveRightByCharacter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c1b12-443">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="c1b12-443">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveRightByCharacter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c1b12-444">O exemplo a seguir demonstra como invocar um comando de edição em um objeto que suporta o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-444">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c1b12-445">Neste exemplo, um <xref:System.Windows.Controls.RichTextBox> serve como o destino do comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-445">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c1b12-446">Observe que <xref:System.Windows.Controls.RichTextBox> implementa o <xref:System.Windows.IInputElement> interface (herdado de <xref:System.Windows.FrameworkElement>), e que ele inclui suporte nativo para muitos comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-446">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-447">O primeiro argumento para o <xref:System.Windows.Input.RoutedCommand.Execute%2A> método é um parâmetro de comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-447">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c1b12-448">Comandos de edição mais ignorar o parâmetro de comando; em geral, esse parâmetro deve ser `null` para comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-448">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-449">O segundo argumento especifica o objeto ao qual o comando será roteado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-449">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c1b12-450">Este objeto deve implementar a <xref:System.Windows.IInputElement> de interface e deve incluir um manipulador para o comando especificado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-450">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c1b12-451">Em geral, um comando é ignorado quando invocado em um objeto que não lida com o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-451">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
      </Docs>
    </Member>
    <Member MemberName="MoveRightByWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveRightByWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveRightByWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveRightByWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveRightByWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveRightByWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveRightByWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1b12-452">Representa o comando <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />, que solicita que o cursor mova uma palavra para a direita.</span><span class="sxs-lookup"><span data-stu-id="c1b12-452">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" /> command, which requests that the caret move right by one word.</span></span></summary>
        <value><span data-ttu-id="c1b12-453">O comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-453">The requested command.</span></span>  <span data-ttu-id="c1b12-454">O gesto de chave padrão para esse comando é <see langword="Ctrl" /> + <see langword="Right" />.</span><span class="sxs-lookup"><span data-stu-id="c1b12-454">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Right" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b12-455">Se o cursor estiver dentro de uma palavra, este comando move o cursor até o final da palavra.</span><span class="sxs-lookup"><span data-stu-id="c1b12-455">If the caret is within a word, this command moves the caret to the end of that word.</span></span>  <span data-ttu-id="c1b12-456">Caso contrário, este comando move o cursor para o início da próxima palavra.</span><span class="sxs-lookup"><span data-stu-id="c1b12-456">Otherwise, this command moves the caret to the beginning of the next word.</span></span>  
  
 <span data-ttu-id="c1b12-457">Não há necessariamente uma implementação real que responde a este comando em um determinado objeto; em muitos casos, a implementação que responde a um comando é responsabilidade do gravador de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="c1b12-457">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c1b12-458">Esse comando tem suporte nativo pelos <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, e <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="c1b12-458">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveRightByWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c1b12-459">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="c1b12-459">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveRightByWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c1b12-460">O exemplo a seguir demonstra como invocar um comando de edição em um objeto que suporta o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-460">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c1b12-461">Neste exemplo, um <xref:System.Windows.Controls.RichTextBox> serve como o destino do comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-461">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c1b12-462">Observe que <xref:System.Windows.Controls.RichTextBox> implementa o <xref:System.Windows.IInputElement> interface (herdado de <xref:System.Windows.FrameworkElement>), e que ele inclui suporte nativo para muitos comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-462">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-463">O primeiro argumento para o <xref:System.Windows.Input.RoutedCommand.Execute%2A> método é um parâmetro de comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-463">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c1b12-464">Comandos de edição mais ignorar o parâmetro de comando; em geral, esse parâmetro deve ser `null` para comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-464">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-465">O segundo argumento especifica o objeto ao qual o comando será roteado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-465">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c1b12-466">Este objeto deve implementar a <xref:System.Windows.IInputElement> de interface e deve incluir um manipulador para o comando especificado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-466">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c1b12-467">Em geral, um comando é ignorado quando invocado em um objeto que não lida com o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-467">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
      </Docs>
    </Member>
    <Member MemberName="MoveToDocumentEnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveToDocumentEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveToDocumentEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveToDocumentEnd As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveToDocumentEnd { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveToDocumentEnd : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveToDocumentEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1b12-468">Representa o comando <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" />, que solicita que o cursor mova para o final do conteúdo.</span><span class="sxs-lookup"><span data-stu-id="c1b12-468">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" /> command, which requests that the caret move to the very end of content.</span></span></summary>
        <value><span data-ttu-id="c1b12-469">O comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-469">The requested command.</span></span>  <span data-ttu-id="c1b12-470">O gesto de chave padrão para esse comando é <see langword="Ctrl" /> + <see langword="End" />.</span><span class="sxs-lookup"><span data-stu-id="c1b12-470">The default key gesture for this command is <see langword="Ctrl" />+<see langword="End" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b12-471">Um *contêiner de texto* é o elemento de que forma a borda final para o conteúdo em questão.</span><span class="sxs-lookup"><span data-stu-id="c1b12-471">A *text container* is the element that forms the ultimate border for the content at hand.</span></span>  <span data-ttu-id="c1b12-472"><xref:System.Windows.Controls.TextBlock> e <xref:System.Windows.Documents.FlowDocument> são exemplos de contêineres de texto.</span><span class="sxs-lookup"><span data-stu-id="c1b12-472"><xref:System.Windows.Controls.TextBlock> and <xref:System.Windows.Documents.FlowDocument> are examples of text containers.</span></span>  <span data-ttu-id="c1b12-473">O conteúdo contido coletivamente dentro de um contêiner de texto é conhecido como um *documento*.</span><span class="sxs-lookup"><span data-stu-id="c1b12-473">The content collectively contained within a text container is referred to as a *document*.</span></span>  
  
 <span data-ttu-id="c1b12-474">Não há necessariamente uma implementação real que responde a este comando em um determinado objeto; em muitos casos, a implementação que responde a um comando é responsabilidade do gravador de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="c1b12-474">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c1b12-475">Esse comando tem suporte nativo pelos <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, e <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="c1b12-475">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveToDocumentEnd"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c1b12-476">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="c1b12-476">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveToDocumentEnd"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c1b12-477">O exemplo a seguir demonstra como invocar um comando de edição em um objeto que suporta o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-477">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c1b12-478">Neste exemplo, um <xref:System.Windows.Controls.RichTextBox> serve como o destino do comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-478">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c1b12-479">Observe que <xref:System.Windows.Controls.RichTextBox> implementa o <xref:System.Windows.IInputElement> interface (herdado de <xref:System.Windows.FrameworkElement>), e que ele inclui suporte nativo para muitos comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-479">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-480">O primeiro argumento para o <xref:System.Windows.Input.RoutedCommand.Execute%2A> método é um parâmetro de comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-480">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c1b12-481">Comandos de edição mais ignorar o parâmetro de comando; em geral, esse parâmetro deve ser `null` para comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-481">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-482">O segundo argumento especifica o objeto ao qual o comando será roteado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-482">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c1b12-483">Este objeto deve implementar a <xref:System.Windows.IInputElement> de interface e deve incluir um manipulador para o comando especificado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-483">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c1b12-484">Em geral, um comando é ignorado quando invocado em um objeto que não lida com o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-484">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" />
      </Docs>
    </Member>
    <Member MemberName="MoveToDocumentStart">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveToDocumentStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveToDocumentStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveToDocumentStart As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveToDocumentStart { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveToDocumentStart : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveToDocumentStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1b12-485">Representa o comando <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart" />, que solicita que o cursor mova para o início do conteúdo.</span><span class="sxs-lookup"><span data-stu-id="c1b12-485">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart" /> command, which requests that the caret move to the very beginning of content.</span></span></summary>
        <value><span data-ttu-id="c1b12-486">O comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-486">The requested command.</span></span>  <span data-ttu-id="c1b12-487">O gesto de chave padrão para esse comando é <see langword="Ctrl" /> + <see langword="Home" />.</span><span class="sxs-lookup"><span data-stu-id="c1b12-487">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Home" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b12-488">Um *contêiner de texto* é o elemento de que forma a borda final para o conteúdo em questão.</span><span class="sxs-lookup"><span data-stu-id="c1b12-488">A *text container* is the element that forms the ultimate border for the content at hand.</span></span>  <span data-ttu-id="c1b12-489"><xref:System.Windows.Controls.TextBlock> e <xref:System.Windows.Documents.FlowDocument> são exemplos de contêineres de texto.</span><span class="sxs-lookup"><span data-stu-id="c1b12-489"><xref:System.Windows.Controls.TextBlock> and <xref:System.Windows.Documents.FlowDocument> are examples of text containers.</span></span>  <span data-ttu-id="c1b12-490">O conteúdo contido coletivamente dentro de um contêiner de texto é conhecido como um *documento*.</span><span class="sxs-lookup"><span data-stu-id="c1b12-490">The content collectively contained within a text container is referred to as a *document*.</span></span>  
  
 <span data-ttu-id="c1b12-491">Não há necessariamente uma implementação real que responde a este comando em um determinado objeto; em muitos casos, a implementação que responde a um comando é responsabilidade do gravador de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="c1b12-491">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c1b12-492">Esse comando tem suporte nativo pelos <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, e <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="c1b12-492">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveToDocumentStart"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c1b12-493">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="c1b12-493">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveToDocumentStart"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c1b12-494">O exemplo a seguir demonstra como invocar um comando de edição em um objeto que suporta o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-494">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c1b12-495">Neste exemplo, um <xref:System.Windows.Controls.RichTextBox> serve como o destino do comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-495">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c1b12-496">Observe que <xref:System.Windows.Controls.RichTextBox> implementa o <xref:System.Windows.IInputElement> interface (herdado de <xref:System.Windows.FrameworkElement>), e que ele inclui suporte nativo para muitos comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-496">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-497">O primeiro argumento para o <xref:System.Windows.Input.RoutedCommand.Execute%2A> método é um parâmetro de comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-497">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c1b12-498">Comandos de edição mais ignorar o parâmetro de comando; em geral, esse parâmetro deve ser `null` para comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-498">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-499">O segundo argumento especifica o objeto ao qual o comando será roteado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-499">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c1b12-500">Este objeto deve implementar a <xref:System.Windows.IInputElement> de interface e deve incluir um manipulador para o comando especificado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-500">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c1b12-501">Em geral, um comando é ignorado quando invocado em um objeto que não lida com o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-501">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
      </Docs>
    </Member>
    <Member MemberName="MoveToLineEnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveToLineEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveToLineEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveToLineEnd As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveToLineEnd { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveToLineEnd : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveToLineEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1b12-502">Representa o comando <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" />, que solicita que o cursor mova para o final da linha atual.</span><span class="sxs-lookup"><span data-stu-id="c1b12-502">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" /> command, which requests that the caret move to the end of the current line.</span></span></summary>
        <value><span data-ttu-id="c1b12-503">O comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-503">The requested command.</span></span>  <span data-ttu-id="c1b12-504">O gesto de chave padrão para esse comando é <see langword="End" />.</span><span class="sxs-lookup"><span data-stu-id="c1b12-504">The default key gesture for this command is <see langword="End" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b12-505">Não há necessariamente uma implementação real que responde a este comando em um determinado objeto; em muitos casos, a implementação que responde a um comando é responsabilidade do gravador de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="c1b12-505">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c1b12-506">Esse comando tem suporte nativo pelos <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, e <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="c1b12-506">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveToLineEnd"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c1b12-507">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="c1b12-507">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveToLineEnd"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c1b12-508">O exemplo a seguir demonstra como invocar um comando de edição em um objeto que suporta o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-508">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c1b12-509">Neste exemplo, um <xref:System.Windows.Controls.RichTextBox> serve como o destino do comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-509">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c1b12-510">Observe que <xref:System.Windows.Controls.RichTextBox> implementa o <xref:System.Windows.IInputElement> interface (herdado de <xref:System.Windows.FrameworkElement>), e que ele inclui suporte nativo para muitos comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-510">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-511">O primeiro argumento para o <xref:System.Windows.Input.RoutedCommand.Execute%2A> método é um parâmetro de comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-511">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c1b12-512">Comandos de edição mais ignorar o parâmetro de comando; em geral, esse parâmetro deve ser `null` para comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-512">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-513">O segundo argumento especifica o objeto ao qual o comando será roteado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-513">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c1b12-514">Este objeto deve implementar a <xref:System.Windows.IInputElement> de interface e deve incluir um manipulador para o comando especificado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-514">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c1b12-515">Em geral, um comando é ignorado quando invocado em um objeto que não lida com o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-515">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToLineStart" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" />
      </Docs>
    </Member>
    <Member MemberName="MoveToLineStart">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveToLineStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveToLineStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveToLineStart" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveToLineStart As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveToLineStart { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveToLineStart : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveToLineStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1b12-516">Representa o comando <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineStart" />, que solicita que o cursor mova para o início da linha atual.</span><span class="sxs-lookup"><span data-stu-id="c1b12-516">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineStart" /> command, which requests that the caret move to the beginning of the current line.</span></span></summary>
        <value><span data-ttu-id="c1b12-517">O comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-517">The requested command.</span></span>  <span data-ttu-id="c1b12-518">O gesto de chave padrão para esse comando é <see langword="Home" />.</span><span class="sxs-lookup"><span data-stu-id="c1b12-518">The default key gesture for this command is <see langword="Home" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b12-519">Não há necessariamente uma implementação real que responde a este comando em um determinado objeto; em muitos casos, a implementação que responde a um comando é responsabilidade do gravador de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="c1b12-519">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c1b12-520">Esse comando tem suporte nativo pelos <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, e <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="c1b12-520">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveToLineStart"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c1b12-521">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="c1b12-521">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveToLineStart"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c1b12-522">O exemplo a seguir demonstra como invocar um comando de edição em um objeto que suporta o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-522">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c1b12-523">Neste exemplo, um <xref:System.Windows.Controls.RichTextBox> serve como o destino do comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-523">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c1b12-524">Observe que <xref:System.Windows.Controls.RichTextBox> implementa o <xref:System.Windows.IInputElement> interface (herdado de <xref:System.Windows.FrameworkElement>), e que ele inclui suporte nativo para muitos comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-524">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-525">O primeiro argumento para o <xref:System.Windows.Input.RoutedCommand.Execute%2A> método é um parâmetro de comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-525">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c1b12-526">Comandos de edição mais ignorar o parâmetro de comando; em geral, esse parâmetro deve ser `null` para comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-526">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-527">O segundo argumento especifica o objeto ao qual o comando será roteado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-527">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c1b12-528">Este objeto deve implementar a <xref:System.Windows.IInputElement> de interface e deve incluir um manipulador para o comando especificado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-528">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c1b12-529">Em geral, um comando é ignorado quando invocado em um objeto que não lida com o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-529">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" />
      </Docs>
    </Member>
    <Member MemberName="MoveUpByLine">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveUpByLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveUpByLine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveUpByLine As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveUpByLine { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveUpByLine : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveUpByLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1b12-530">Representa o comando <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />, que solicita que o cursor mova para cima em uma linha.</span><span class="sxs-lookup"><span data-stu-id="c1b12-530">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" /> command, which requests that the caret move up by one line.</span></span></summary>
        <value><span data-ttu-id="c1b12-531">O comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-531">The requested command.</span></span>  <span data-ttu-id="c1b12-532">O gesto de chave padrão para esse comando é <see langword="Up" />.</span><span class="sxs-lookup"><span data-stu-id="c1b12-532">The default key gesture for this command is <see langword="Up" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b12-533">Não há necessariamente uma implementação real que responde a este comando em um determinado objeto; em muitos casos, a implementação que responde a um comando é responsabilidade do gravador de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="c1b12-533">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c1b12-534">Esse comando tem suporte nativo pelos <xref:System.Windows.Controls.RichTextBox> e <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="c1b12-534">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveUpByLine"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c1b12-535">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="c1b12-535">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveUpByLine"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c1b12-536">O exemplo a seguir demonstra como invocar um comando de edição em um objeto que suporta o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-536">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c1b12-537">Neste exemplo, um <xref:System.Windows.Controls.RichTextBox> serve como o destino do comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-537">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c1b12-538">Observe que <xref:System.Windows.Controls.RichTextBox> implementa o <xref:System.Windows.IInputElement> interface (herdado de <xref:System.Windows.FrameworkElement>), e que ele inclui suporte nativo para muitos comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-538">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-539">O primeiro argumento para o <xref:System.Windows.Input.RoutedCommand.Execute%2A> método é um parâmetro de comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-539">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c1b12-540">Comandos de edição mais ignorar o parâmetro de comando; em geral, esse parâmetro deve ser `null` para comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-540">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-541">O segundo argumento especifica o objeto ao qual o comando será roteado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-541">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c1b12-542">Este objeto deve implementar a <xref:System.Windows.IInputElement> de interface e deve incluir um manipulador para o comando especificado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-542">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c1b12-543">Em geral, um comando é ignorado quando invocado em um objeto que não lida com o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-543">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
      </Docs>
    </Member>
    <Member MemberName="MoveUpByPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveUpByPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveUpByPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveUpByPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveUpByPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveUpByPage : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveUpByPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1b12-544">Representa o comando <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />, que solicita que o cursor mova para cima em uma página.</span><span class="sxs-lookup"><span data-stu-id="c1b12-544">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" /> command, which requests that the caret move up by one page.</span></span></summary>
        <value><span data-ttu-id="c1b12-545">O comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-545">The requested command.</span></span>  <span data-ttu-id="c1b12-546">O gesto de chave padrão para esse comando é <see langword="PageUp" />.</span><span class="sxs-lookup"><span data-stu-id="c1b12-546">The default key gesture for this command is <see langword="PageUp" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b12-547">Não há necessariamente uma implementação real que responde a este comando em um determinado objeto; em muitos casos, a implementação que responde a um comando é responsabilidade do gravador de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="c1b12-547">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c1b12-548">Esse comando tem suporte nativo pelos <xref:System.Windows.Controls.RichTextBox> e <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="c1b12-548">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveUpByPage"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c1b12-549">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="c1b12-549">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveUpByPage"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c1b12-550">O exemplo a seguir demonstra como invocar um comando de edição em um objeto que suporta o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-550">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c1b12-551">Neste exemplo, um <xref:System.Windows.Controls.RichTextBox> serve como o destino do comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-551">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c1b12-552">Observe que <xref:System.Windows.Controls.RichTextBox> implementa o <xref:System.Windows.IInputElement> interface (herdado de <xref:System.Windows.FrameworkElement>), e que ele inclui suporte nativo para muitos comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-552">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-553">O primeiro argumento para o <xref:System.Windows.Input.RoutedCommand.Execute%2A> método é um parâmetro de comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-553">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c1b12-554">Comandos de edição mais ignorar o parâmetro de comando; em geral, esse parâmetro deve ser `null` para comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-554">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-555">O segundo argumento especifica o objeto ao qual o comando será roteado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-555">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c1b12-556">Este objeto deve implementar a <xref:System.Windows.IInputElement> de interface e deve incluir um manipulador para o comando especificado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-556">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c1b12-557">Em geral, um comando é ignorado quando invocado em um objeto que não lida com o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-557">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
      </Docs>
    </Member>
    <Member MemberName="MoveUpByParagraph">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveUpByParagraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveUpByParagraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveUpByParagraph As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveUpByParagraph { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveUpByParagraph : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1b12-558">Representa o comando <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />, que solicita que o cursor mova para cima em um parágrafo.</span><span class="sxs-lookup"><span data-stu-id="c1b12-558">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" /> command, which requests that the caret move up by one paragraph.</span></span></summary>
        <value><span data-ttu-id="c1b12-559">O comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-559">The requested command.</span></span>  <span data-ttu-id="c1b12-560">O gesto de chave padrão para esse comando é <see langword="Ctrl" /> + <see langword="Up" />.</span><span class="sxs-lookup"><span data-stu-id="c1b12-560">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Up" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b12-561">Esse comando posiciona o cursor no início do próximo parágrafo.</span><span class="sxs-lookup"><span data-stu-id="c1b12-561">This command positions the caret at the beginning of the next paragraph.</span></span>  
  
 <span data-ttu-id="c1b12-562">Esse comando se comporta como <xref:System.Windows.Documents.EditingCommands.MoveToDocumentStart%2A> quando invocado em um <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="c1b12-562">This command behaves like <xref:System.Windows.Documents.EditingCommands.MoveToDocumentStart%2A> when invoked on a <xref:System.Windows.Controls.TextBox>.</span></span>  
  
 <span data-ttu-id="c1b12-563">Não há necessariamente uma implementação real que responde a este comando em um determinado objeto; em muitos casos, a implementação que responde a um comando é responsabilidade do gravador de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="c1b12-563">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c1b12-564">Esse comando tem suporte nativo pelos <xref:System.Windows.Controls.RichTextBox> e <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="c1b12-564">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveUpByParagraph"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c1b12-565">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="c1b12-565">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveUpByParagraph"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c1b12-566">O exemplo a seguir demonstra como invocar um comando de edição em um objeto que suporta o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-566">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c1b12-567">Neste exemplo, um <xref:System.Windows.Controls.RichTextBox> serve como o destino do comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-567">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c1b12-568">Observe que <xref:System.Windows.Controls.RichTextBox> implementa o <xref:System.Windows.IInputElement> interface (herdado de <xref:System.Windows.FrameworkElement>), e que ele inclui suporte nativo para muitos comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-568">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-569">O primeiro argumento para o <xref:System.Windows.Input.RoutedCommand.Execute%2A> método é um parâmetro de comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-569">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c1b12-570">Comandos de edição mais ignorar o parâmetro de comando; em geral, esse parâmetro deve ser `null` para comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-570">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-571">O segundo argumento especifica o objeto ao qual o comando será roteado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-571">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c1b12-572">Este objeto deve implementar a <xref:System.Windows.IInputElement> de interface e deve incluir um manipulador para o comando especificado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-572">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c1b12-573">Em geral, um comando é ignorado quando invocado em um objeto que não lida com o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-573">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
      </Docs>
    </Member>
    <Member MemberName="SelectDownByLine">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectDownByLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectDownByLine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectDownByLine As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectDownByLine { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectDownByLine : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectDownByLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1b12-574">Representa o comando <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />, que solicita que a seleção atual seja expandida para baixo em uma linha.</span><span class="sxs-lookup"><span data-stu-id="c1b12-574">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" /> command, which requests that the current selection be expanded down by one line.</span></span></summary>
        <value><span data-ttu-id="c1b12-575">O comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-575">The requested command.</span></span>  <span data-ttu-id="c1b12-576">O gesto de chave padrão para esse comando é <see langword="Shift" /> + <see langword="Down" />.</span><span class="sxs-lookup"><span data-stu-id="c1b12-576">The default key gesture for this command is <see langword="Shift" />+<see langword="Down" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b12-577">Não há necessariamente uma implementação real que responde a este comando em um determinado objeto; em muitos casos, a implementação que responde a um comando é responsabilidade do gravador de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="c1b12-577">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c1b12-578">Esse comando tem suporte nativo pelos <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, e <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="c1b12-578">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectDownByLine"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c1b12-579">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="c1b12-579">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectDownByLine"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c1b12-580">O exemplo a seguir demonstra como invocar um comando de edição em um objeto que suporta o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-580">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c1b12-581">Neste exemplo, um <xref:System.Windows.Controls.RichTextBox> serve como o destino do comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-581">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c1b12-582">Observe que <xref:System.Windows.Controls.RichTextBox> implementa o <xref:System.Windows.IInputElement> interface (herdado de <xref:System.Windows.FrameworkElement>), e que ele inclui suporte nativo para muitos comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-582">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-583">O primeiro argumento para o <xref:System.Windows.Input.RoutedCommand.Execute%2A> método é um parâmetro de comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-583">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c1b12-584">Comandos de edição mais ignorar o parâmetro de comando; em geral, esse parâmetro deve ser `null` para comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-584">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-585">O segundo argumento especifica o objeto ao qual o comando será roteado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-585">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c1b12-586">Este objeto deve implementar a <xref:System.Windows.IInputElement> de interface e deve incluir um manipulador para o comando especificado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-586">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c1b12-587">Em geral, um comando é ignorado quando invocado em um objeto que não lida com o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-587">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
      </Docs>
    </Member>
    <Member MemberName="SelectDownByPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectDownByPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectDownByPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectDownByPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectDownByPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectDownByPage : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectDownByPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1b12-588">Representa o comando <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />, que solicita que a seleção atual seja expandida para baixo em uma página.</span><span class="sxs-lookup"><span data-stu-id="c1b12-588">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" /> command, which requests that the current selection be expanded down by one page.</span></span></summary>
        <value><span data-ttu-id="c1b12-589">O comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-589">The requested command.</span></span>  <span data-ttu-id="c1b12-590">O gesto de chave padrão para esse comando é <see langword="Shift" /> + <see langword="PageDown" />.</span><span class="sxs-lookup"><span data-stu-id="c1b12-590">The default key gesture for this command is <see langword="Shift" />+<see langword="PageDown" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b12-591">Não há necessariamente uma implementação real que responde a este comando em um determinado objeto; em muitos casos, a implementação que responde a um comando é responsabilidade do gravador de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="c1b12-591">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c1b12-592">Esse comando tem suporte nativo pelos <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, e <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="c1b12-592">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectDownByPage"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c1b12-593">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="c1b12-593">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectDownByPage"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c1b12-594">O exemplo a seguir demonstra como invocar um comando de edição em um objeto que suporta o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-594">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c1b12-595">Neste exemplo, um <xref:System.Windows.Controls.RichTextBox> serve como o destino do comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-595">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c1b12-596">Observe que <xref:System.Windows.Controls.RichTextBox> implementa o <xref:System.Windows.IInputElement> interface (herdado de <xref:System.Windows.FrameworkElement>), e que ele inclui suporte nativo para muitos comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-596">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-597">O primeiro argumento para o <xref:System.Windows.Input.RoutedCommand.Execute%2A> método é um parâmetro de comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-597">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c1b12-598">Comandos de edição mais ignorar o parâmetro de comando; em geral, esse parâmetro deve ser `null` para comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-598">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-599">O segundo argumento especifica o objeto ao qual o comando será roteado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-599">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c1b12-600">Este objeto deve implementar a <xref:System.Windows.IInputElement> de interface e deve incluir um manipulador para o comando especificado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-600">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c1b12-601">Em geral, um comando é ignorado quando invocado em um objeto que não lida com o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-601">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
      </Docs>
    </Member>
    <Member MemberName="SelectDownByParagraph">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectDownByParagraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectDownByParagraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectDownByParagraph As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectDownByParagraph { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectDownByParagraph : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1b12-602">Representa o comando <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />, que solicita que a seleção atual seja expandida para baixo em um parágrafo.</span><span class="sxs-lookup"><span data-stu-id="c1b12-602">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" /> command, which requests that the current selection be expanded down by one paragraph.</span></span></summary>
        <value><span data-ttu-id="c1b12-603">O comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-603">The requested command.</span></span>  <span data-ttu-id="c1b12-604">O gesto de chave padrão para esse comando é <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="Down" />.</span><span class="sxs-lookup"><span data-stu-id="c1b12-604">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Down" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b12-605">Esse comando se expande a seleção para o início do próximo parágrafo.</span><span class="sxs-lookup"><span data-stu-id="c1b12-605">This command expands the selection to the beginning of the next paragraph.</span></span>  <span data-ttu-id="c1b12-606">Caso contrário, esse comando expande a seleção até o final do parágrafo atual.</span><span class="sxs-lookup"><span data-stu-id="c1b12-606">Otherwise, this command expands the selection to the end of the current paragraph.</span></span>  <span data-ttu-id="c1b12-607">A seleção expandida inclui a quebra de parágrafo que marca o fim do parágrafo.</span><span class="sxs-lookup"><span data-stu-id="c1b12-607">The expanded selection includes the paragraph break that marks the end of the paragraph.</span></span>  
  
 <span data-ttu-id="c1b12-608">Não há necessariamente uma implementação real que responde a este comando em um determinado objeto; em muitos casos, a implementação que responde a um comando é responsabilidade do gravador de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="c1b12-608">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c1b12-609">Esse comando tem suporte nativo pelos <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, e <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="c1b12-609">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectDownByParagraph"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c1b12-610">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="c1b12-610">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectDownByParagraph"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c1b12-611">O exemplo a seguir demonstra como invocar um comando de edição em um objeto que suporta o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-611">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c1b12-612">Neste exemplo, um <xref:System.Windows.Controls.RichTextBox> serve como o destino do comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-612">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c1b12-613">Observe que <xref:System.Windows.Controls.RichTextBox> implementa o <xref:System.Windows.IInputElement> interface (herdado de <xref:System.Windows.FrameworkElement>), e que ele inclui suporte nativo para muitos comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-613">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-614">O primeiro argumento para o <xref:System.Windows.Input.RoutedCommand.Execute%2A> método é um parâmetro de comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-614">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c1b12-615">Comandos de edição mais ignorar o parâmetro de comando; em geral, esse parâmetro deve ser `null` para comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-615">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-616">O segundo argumento especifica o objeto ao qual o comando será roteado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-616">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c1b12-617">Este objeto deve implementar a <xref:System.Windows.IInputElement> de interface e deve incluir um manipulador para o comando especificado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-617">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c1b12-618">Em geral, um comando é ignorado quando invocado em um objeto que não lida com o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-618">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
      </Docs>
    </Member>
    <Member MemberName="SelectLeftByCharacter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectLeftByCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectLeftByCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectLeftByCharacter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectLeftByCharacter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectLeftByCharacter : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1b12-619">Representa o comando <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />, que solicita que a seleção atual seja expandida para a esquerda em um caractere.</span><span class="sxs-lookup"><span data-stu-id="c1b12-619">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" /> command, which requests that the current selection be expanded left by one character.</span></span></summary>
        <value><span data-ttu-id="c1b12-620">O comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-620">The requested command.</span></span>  <span data-ttu-id="c1b12-621">O gesto de chave padrão para esse comando é <see langword="Shift" /> + <see langword="Left" />.</span><span class="sxs-lookup"><span data-stu-id="c1b12-621">The default key gesture for this command is <see langword="Shift" />+<see langword="Left" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b12-622">Não há necessariamente uma implementação real que responde a este comando em um determinado objeto; em muitos casos, a implementação que responde a um comando é responsabilidade do gravador de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="c1b12-622">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c1b12-623">Esse comando tem suporte nativo pelos <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, e <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="c1b12-623">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectLeftByCharacter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c1b12-624">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="c1b12-624">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectLeftByCharacter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c1b12-625">O exemplo a seguir demonstra como invocar um comando de edição em um objeto que suporta o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-625">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c1b12-626">Neste exemplo, um <xref:System.Windows.Controls.RichTextBox> serve como o destino do comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-626">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c1b12-627">Observe que <xref:System.Windows.Controls.RichTextBox> implementa o <xref:System.Windows.IInputElement> interface (herdado de <xref:System.Windows.FrameworkElement>), e que ele inclui suporte nativo para muitos comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-627">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-628">O primeiro argumento para o <xref:System.Windows.Input.RoutedCommand.Execute%2A> método é um parâmetro de comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-628">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c1b12-629">Comandos de edição mais ignorar o parâmetro de comando; em geral, esse parâmetro deve ser `null` para comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-629">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-630">O segundo argumento especifica o objeto ao qual o comando será roteado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-630">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c1b12-631">Este objeto deve implementar a <xref:System.Windows.IInputElement> de interface e deve incluir um manipulador para o comando especificado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-631">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c1b12-632">Em geral, um comando é ignorado quando invocado em um objeto que não lida com o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-632">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
      </Docs>
    </Member>
    <Member MemberName="SelectLeftByWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectLeftByWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectLeftByWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectLeftByWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectLeftByWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectLeftByWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectLeftByWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1b12-633">Representa o comando <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />, que solicita que a seleção atual seja expandida para a esquerda em uma palavra.</span><span class="sxs-lookup"><span data-stu-id="c1b12-633">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" /> command, which requests that the current selection be expanded left by one word.</span></span></summary>
        <value><span data-ttu-id="c1b12-634">O comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-634">The requested command.</span></span>  <span data-ttu-id="c1b12-635">O gesto de chave padrão para esse comando é <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="Left" />.</span><span class="sxs-lookup"><span data-stu-id="c1b12-635">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Left" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b12-636">Se o cursor estiver dentro de uma palavra, este comando expande a seleção para o início da palavra.</span><span class="sxs-lookup"><span data-stu-id="c1b12-636">If the caret is within a word, this command expands the selection to the beginning of that word.</span></span>  <span data-ttu-id="c1b12-637">Caso contrário, esse comando expande a seleção para o início da palavra anterior.</span><span class="sxs-lookup"><span data-stu-id="c1b12-637">Otherwise, this command expands the selection to the beginning of the previous word.</span></span>  
  
 <span data-ttu-id="c1b12-638">A seleção expandida não inclui o delimitador de palavra.</span><span class="sxs-lookup"><span data-stu-id="c1b12-638">The expanded selection does not include the word delimiter.</span></span>  <span data-ttu-id="c1b12-639">Compare com <xref:System.Windows.Documents.EditingCommands.SelectRightByWord%2A>, que inclui o delimitador de palavra da seleção expandida.</span><span class="sxs-lookup"><span data-stu-id="c1b12-639">Contrast with <xref:System.Windows.Documents.EditingCommands.SelectRightByWord%2A>, which does include the word delimiter in the expanded selection.</span></span>  
  
 <span data-ttu-id="c1b12-640">Não há necessariamente uma implementação real que responde a este comando em um determinado objeto; em muitos casos, a implementação que responde a um comando é responsabilidade do gravador de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="c1b12-640">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c1b12-641">Esse comando tem suporte nativo pelos <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, e <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="c1b12-641">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectLeftByWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c1b12-642">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="c1b12-642">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectLeftByWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c1b12-643">O exemplo a seguir demonstra como invocar um comando de edição em um objeto que suporta o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-643">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c1b12-644">Neste exemplo, um <xref:System.Windows.Controls.RichTextBox> serve como o destino do comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-644">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c1b12-645">Observe que <xref:System.Windows.Controls.RichTextBox> implementa o <xref:System.Windows.IInputElement> interface (herdado de <xref:System.Windows.FrameworkElement>), e que ele inclui suporte nativo para muitos comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-645">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-646">O primeiro argumento para o <xref:System.Windows.Input.RoutedCommand.Execute%2A> método é um parâmetro de comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-646">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c1b12-647">Comandos de edição mais ignorar o parâmetro de comando; em geral, esse parâmetro deve ser `null` para comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-647">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-648">O segundo argumento especifica o objeto ao qual o comando será roteado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-648">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c1b12-649">Este objeto deve implementar a <xref:System.Windows.IInputElement> de interface e deve incluir um manipulador para o comando especificado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-649">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c1b12-650">Em geral, um comando é ignorado quando invocado em um objeto que não lida com o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-650">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
      </Docs>
    </Member>
    <Member MemberName="SelectRightByCharacter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectRightByCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectRightByCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectRightByCharacter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectRightByCharacter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectRightByCharacter : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1b12-651">Representa o comando <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" />, que solicita que a seleção atual seja expandida para a direita em um caractere.</span><span class="sxs-lookup"><span data-stu-id="c1b12-651">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" /> command, which requests that the current selection be expanded right by one character.</span></span></summary>
        <value><span data-ttu-id="c1b12-652">O comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-652">The requested command.</span></span>  <span data-ttu-id="c1b12-653">O gesto de chave padrão para esse comando é <see langword="Shift" /> + <see langword="Right" />.</span><span class="sxs-lookup"><span data-stu-id="c1b12-653">The default key gesture for this command is <see langword="Shift" />+<see langword="Right" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b12-654">Não há necessariamente uma implementação real que responde a este comando em um determinado objeto; em muitos casos, a implementação que responde a um comando é responsabilidade do gravador de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="c1b12-654">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c1b12-655">Esse comando tem suporte nativo pelos <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, e <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="c1b12-655">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectRightByCharacter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c1b12-656">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="c1b12-656">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectRightByCharacter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c1b12-657">O exemplo a seguir demonstra como invocar um comando de edição em um objeto que suporta o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-657">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c1b12-658">Neste exemplo, um <xref:System.Windows.Controls.RichTextBox> serve como o destino do comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-658">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c1b12-659">Observe que <xref:System.Windows.Controls.RichTextBox> implementa o <xref:System.Windows.IInputElement> interface (herdado de <xref:System.Windows.FrameworkElement>), e que ele inclui suporte nativo para muitos comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-659">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-660">O primeiro argumento para o <xref:System.Windows.Input.RoutedCommand.Execute%2A> método é um parâmetro de comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-660">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c1b12-661">Comandos de edição mais ignorar o parâmetro de comando; em geral, esse parâmetro deve ser `null` para comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-661">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-662">O segundo argumento especifica o objeto ao qual o comando será roteado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-662">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c1b12-663">Este objeto deve implementar a <xref:System.Windows.IInputElement> de interface e deve incluir um manipulador para o comando especificado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-663">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c1b12-664">Em geral, um comando é ignorado quando invocado em um objeto que não lida com o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-664">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
      </Docs>
    </Member>
    <Member MemberName="SelectRightByWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectRightByWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectRightByWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectRightByWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectRightByWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectRightByWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectRightByWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1b12-665">Representa o comando <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />, que solicita que a seleção atual seja expandida para a direita em uma palavra.</span><span class="sxs-lookup"><span data-stu-id="c1b12-665">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" /> command, which requests that the current selection be expanded right by one word.</span></span></summary>
        <value><span data-ttu-id="c1b12-666">O comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-666">The requested command.</span></span>  <span data-ttu-id="c1b12-667">O gesto de chave padrão para esse comando é <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="Right" />.</span><span class="sxs-lookup"><span data-stu-id="c1b12-667">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Right" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b12-668">Se o cursor estiver dentro de uma palavra, este comando expande a seleção até o final da palavra.</span><span class="sxs-lookup"><span data-stu-id="c1b12-668">If the caret is within a word, this command expands the selection to the end of that word.</span></span>  <span data-ttu-id="c1b12-669">Caso contrário, esse comando expande a seleção até o final da próxima palavra.</span><span class="sxs-lookup"><span data-stu-id="c1b12-669">Otherwise, this command expands the selection to the end of the next word.</span></span>  
  
 <span data-ttu-id="c1b12-670">A seleção expandida inclui o delimitador de palavra.</span><span class="sxs-lookup"><span data-stu-id="c1b12-670">The expanded selection includes the word delimiter.</span></span>  <span data-ttu-id="c1b12-671">Compare com <xref:System.Windows.Documents.EditingCommands.SelectLeftByWord%2A> que não inclui o delimitador de palavra da seleção expandida.</span><span class="sxs-lookup"><span data-stu-id="c1b12-671">Contrast with <xref:System.Windows.Documents.EditingCommands.SelectLeftByWord%2A> which does not include the word delimiter in the expanded selection.</span></span>  
  
 <span data-ttu-id="c1b12-672">Não há necessariamente uma implementação real que responde a este comando em um determinado objeto; em muitos casos, a implementação que responde a um comando é responsabilidade do gravador de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="c1b12-672">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c1b12-673">Esse comando tem suporte nativo pelos <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, e <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="c1b12-673">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectRightByWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c1b12-674">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="c1b12-674">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectRightByWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c1b12-675">O exemplo a seguir demonstra como invocar um comando de edição em um objeto que suporta o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-675">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c1b12-676">Neste exemplo, um <xref:System.Windows.Controls.RichTextBox> serve como o destino do comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-676">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c1b12-677">Observe que <xref:System.Windows.Controls.RichTextBox> implementa o <xref:System.Windows.IInputElement> interface (herdado de <xref:System.Windows.FrameworkElement>), e que ele inclui suporte nativo para muitos comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-677">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-678">O primeiro argumento para o <xref:System.Windows.Input.RoutedCommand.Execute%2A> método é um parâmetro de comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-678">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c1b12-679">Comandos de edição mais ignorar o parâmetro de comando; em geral, esse parâmetro deve ser `null` para comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-679">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-680">O segundo argumento especifica o objeto ao qual o comando será roteado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-680">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c1b12-681">Este objeto deve implementar a <xref:System.Windows.IInputElement> de interface e deve incluir um manipulador para o comando especificado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-681">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c1b12-682">Em geral, um comando é ignorado quando invocado em um objeto que não lida com o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-682">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
      </Docs>
    </Member>
    <Member MemberName="SelectToDocumentEnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectToDocumentEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectToDocumentEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectToDocumentEnd As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectToDocumentEnd { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectToDocumentEnd : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectToDocumentEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1b12-683">Representa o comando <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" />, que solicita que a seleção atual seja expandida até o final do conteúdo.</span><span class="sxs-lookup"><span data-stu-id="c1b12-683">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" /> command, which requests that the current selection be expanded to the very end of content.</span></span></summary>
        <value><span data-ttu-id="c1b12-684">O comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-684">The requested command.</span></span>  <span data-ttu-id="c1b12-685">O gesto de chave padrão para esse comando é <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="End" />.</span><span class="sxs-lookup"><span data-stu-id="c1b12-685">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="End" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b12-686">Um *contêiner de texto* é o elemento de que forma a borda final para o conteúdo em questão.</span><span class="sxs-lookup"><span data-stu-id="c1b12-686">A *text container* is the element that forms the ultimate border for the content at hand.</span></span>  <span data-ttu-id="c1b12-687"><xref:System.Windows.Controls.TextBlock> e <xref:System.Windows.Documents.FlowDocument> são exemplos de contêineres de texto.</span><span class="sxs-lookup"><span data-stu-id="c1b12-687"><xref:System.Windows.Controls.TextBlock> and <xref:System.Windows.Documents.FlowDocument> are examples of text containers.</span></span>  <span data-ttu-id="c1b12-688">O conteúdo contido coletivamente dentro de um contêiner de texto é conhecido como um *documento*.</span><span class="sxs-lookup"><span data-stu-id="c1b12-688">The content collectively contained within a text container is referred to as a *document*.</span></span>  
  
 <span data-ttu-id="c1b12-689">Não há necessariamente uma implementação real que responde a este comando em um determinado objeto; em muitos casos, a implementação que responde a um comando é responsabilidade do gravador de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="c1b12-689">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c1b12-690">Esse comando tem suporte nativo pelos <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, e <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="c1b12-690">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectToDocumentEnd"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c1b12-691">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="c1b12-691">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectToDocumentEnd"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c1b12-692">O exemplo a seguir demonstra como invocar um comando de edição em um objeto que suporta o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-692">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c1b12-693">Neste exemplo, um <xref:System.Windows.Controls.RichTextBox> serve como o destino do comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-693">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c1b12-694">Observe que <xref:System.Windows.Controls.RichTextBox> implementa o <xref:System.Windows.IInputElement> interface (herdado de <xref:System.Windows.FrameworkElement>), e que ele inclui suporte nativo para muitos comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-694">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-695">O primeiro argumento para o <xref:System.Windows.Input.RoutedCommand.Execute%2A> método é um parâmetro de comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-695">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c1b12-696">Comandos de edição mais ignorar o parâmetro de comando; em geral, esse parâmetro deve ser `null` para comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-696">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-697">O segundo argumento especifica o objeto ao qual o comando será roteado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-697">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c1b12-698">Este objeto deve implementar a <xref:System.Windows.IInputElement> de interface e deve incluir um manipulador para o comando especificado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-698">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c1b12-699">Em geral, um comando é ignorado quando invocado em um objeto que não lida com o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-699">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" />
      </Docs>
    </Member>
    <Member MemberName="SelectToDocumentStart">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectToDocumentStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectToDocumentStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectToDocumentStart As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectToDocumentStart { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectToDocumentStart : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1b12-700">Representa o comando <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" />, que solicita que a seleção atual seja expandida até o início do conteúdo.</span><span class="sxs-lookup"><span data-stu-id="c1b12-700">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" /> command, which requests that the current selection be expanded to the very beginning of content.</span></span></summary>
        <value><span data-ttu-id="c1b12-701">O comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-701">The requested command.</span></span>  <span data-ttu-id="c1b12-702">O gesto de chave padrão para esse comando é <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="Home" />.</span><span class="sxs-lookup"><span data-stu-id="c1b12-702">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Home" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b12-703">Um *contêiner de texto* é o elemento de que forma a borda final para o conteúdo em questão.</span><span class="sxs-lookup"><span data-stu-id="c1b12-703">A *text container* is the element that forms the ultimate border for the content at hand.</span></span>  <span data-ttu-id="c1b12-704"><xref:System.Windows.Controls.TextBlock> e <xref:System.Windows.Documents.FlowDocument> são exemplos de contêineres de texto.</span><span class="sxs-lookup"><span data-stu-id="c1b12-704"><xref:System.Windows.Controls.TextBlock> and <xref:System.Windows.Documents.FlowDocument> are examples of text containers.</span></span>  <span data-ttu-id="c1b12-705">O conteúdo contido coletivamente dentro de um contêiner de texto é conhecido como um *documento*.</span><span class="sxs-lookup"><span data-stu-id="c1b12-705">The content collectively contained within a text container is referred to as a *document*.</span></span>  
  
 <span data-ttu-id="c1b12-706">Não há necessariamente uma implementação real que responde a este comando em um determinado objeto; em muitos casos, a implementação que responde a um comando é responsabilidade do gravador de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="c1b12-706">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c1b12-707">Esse comando tem suporte nativo pelos <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, e <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="c1b12-707">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectToDocumentStart"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c1b12-708">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="c1b12-708">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectToDocumentStart"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c1b12-709">O exemplo a seguir demonstra como invocar um comando de edição em um objeto que suporta o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-709">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c1b12-710">Neste exemplo, um <xref:System.Windows.Controls.RichTextBox> serve como o destino do comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-710">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c1b12-711">Observe que <xref:System.Windows.Controls.RichTextBox> implementa o <xref:System.Windows.IInputElement> interface (herdado de <xref:System.Windows.FrameworkElement>), e que ele inclui suporte nativo para muitos comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-711">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-712">O primeiro argumento para o <xref:System.Windows.Input.RoutedCommand.Execute%2A> método é um parâmetro de comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-712">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c1b12-713">Comandos de edição mais ignorar o parâmetro de comando; em geral, esse parâmetro deve ser `null` para comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-713">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-714">O segundo argumento especifica o objeto ao qual o comando será roteado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-714">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c1b12-715">Este objeto deve implementar a <xref:System.Windows.IInputElement> de interface e deve incluir um manipulador para o comando especificado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-715">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c1b12-716">Em geral, um comando é ignorado quando invocado em um objeto que não lida com o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-716">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart" />
      </Docs>
    </Member>
    <Member MemberName="SelectToLineEnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectToLineEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectToLineEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectToLineEnd As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectToLineEnd { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectToLineEnd : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectToLineEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1b12-717">Representa o comando <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" />, que solicita que a seleção atual seja expandida até o final da linha atual.</span><span class="sxs-lookup"><span data-stu-id="c1b12-717">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" /> command, which requests that the current selection be expanded to the end of the current line.</span></span></summary>
        <value><span data-ttu-id="c1b12-718">O comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-718">The requested command.</span></span>  <span data-ttu-id="c1b12-719">O gesto de chave padrão para esse comando é <see langword="Shift" /> + <see langword="End" />.</span><span class="sxs-lookup"><span data-stu-id="c1b12-719">The default key gesture for this command is <see langword="Shift" />+<see langword="End" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b12-720">Não há necessariamente uma implementação real que responde a este comando em um determinado objeto; em muitos casos, a implementação que responde a um comando é responsabilidade do gravador de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="c1b12-720">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c1b12-721">Esse comando tem suporte nativo pelos <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, e <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="c1b12-721">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectToLineEnd"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c1b12-722">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="c1b12-722">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectToLineEnd"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c1b12-723">O exemplo a seguir demonstra como invocar um comando de edição em um objeto que suporta o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-723">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c1b12-724">Neste exemplo, um <xref:System.Windows.Controls.RichTextBox> serve como o destino do comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-724">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c1b12-725">Observe que <xref:System.Windows.Controls.RichTextBox> implementa o <xref:System.Windows.IInputElement> interface (herdado de <xref:System.Windows.FrameworkElement>), e que ele inclui suporte nativo para muitos comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-725">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-726">O primeiro argumento para o <xref:System.Windows.Input.RoutedCommand.Execute%2A> método é um parâmetro de comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-726">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c1b12-727">Comandos de edição mais ignorar o parâmetro de comando; em geral, esse parâmetro deve ser `null` para comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-727">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-728">O segundo argumento especifica o objeto ao qual o comando será roteado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-728">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c1b12-729">Este objeto deve implementar a <xref:System.Windows.IInputElement> de interface e deve incluir um manipulador para o comando especificado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-729">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c1b12-730">Em geral, um comando é ignorado quando invocado em um objeto que não lida com o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-730">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToLineStart" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" />
      </Docs>
    </Member>
    <Member MemberName="SelectToLineStart">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectToLineStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectToLineStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectToLineStart" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectToLineStart As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectToLineStart { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectToLineStart : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectToLineStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1b12-731">Representa o comando <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineStart" />, que solicita que a seleção atual seja expandida até o início da linha atual.</span><span class="sxs-lookup"><span data-stu-id="c1b12-731">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineStart" /> command, which requests that the current selection be expanded to the beginning of the current line.</span></span></summary>
        <value><span data-ttu-id="c1b12-732">O comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-732">The requested command.</span></span>  <span data-ttu-id="c1b12-733">O gesto de chave padrão para esse comando é <see langword="Shift" /> + <see langword="Home" />.</span><span class="sxs-lookup"><span data-stu-id="c1b12-733">The default key gesture for this command is <see langword="Shift" />+<see langword="Home" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b12-734">Não há necessariamente uma implementação real que responde a este comando em um determinado objeto; em muitos casos, a implementação que responde a um comando é responsabilidade do gravador de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="c1b12-734">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c1b12-735">Esse comando tem suporte nativo pelos <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, e <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="c1b12-735">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectToLineStart"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c1b12-736">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="c1b12-736">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectToLineStart"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c1b12-737">O exemplo a seguir demonstra como invocar um comando de edição em um objeto que suporta o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-737">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c1b12-738">Neste exemplo, um <xref:System.Windows.Controls.RichTextBox> serve como o destino do comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-738">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c1b12-739">Observe que <xref:System.Windows.Controls.RichTextBox> implementa o <xref:System.Windows.IInputElement> interface (herdado de <xref:System.Windows.FrameworkElement>), e que ele inclui suporte nativo para muitos comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-739">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-740">O primeiro argumento para o <xref:System.Windows.Input.RoutedCommand.Execute%2A> método é um parâmetro de comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-740">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c1b12-741">Comandos de edição mais ignorar o parâmetro de comando; em geral, esse parâmetro deve ser `null` para comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-741">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-742">O segundo argumento especifica o objeto ao qual o comando será roteado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-742">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c1b12-743">Este objeto deve implementar a <xref:System.Windows.IInputElement> de interface e deve incluir um manipulador para o comando especificado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-743">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c1b12-744">Em geral, um comando é ignorado quando invocado em um objeto que não lida com o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-744">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToLineStart" />
      </Docs>
    </Member>
    <Member MemberName="SelectUpByLine">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectUpByLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectUpByLine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectUpByLine As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectUpByLine { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectUpByLine : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectUpByLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1b12-745">Representa o comando <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />, que solicita que a seleção atual seja expandida para cima em uma linha.</span><span class="sxs-lookup"><span data-stu-id="c1b12-745">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" /> command, which requests that the current selection be expanded up by one line.</span></span></summary>
        <value><span data-ttu-id="c1b12-746">O comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-746">The requested command.</span></span>  <span data-ttu-id="c1b12-747">O gesto de chave padrão para esse comando é <see langword="Shift" /> + <see langword="Up" />.</span><span class="sxs-lookup"><span data-stu-id="c1b12-747">The default key gesture for this command is <see langword="Shift" />+<see langword="Up" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b12-748">Não há necessariamente uma implementação real que responde a este comando em um determinado objeto; em muitos casos, a implementação que responde a um comando é responsabilidade do gravador de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="c1b12-748">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c1b12-749">Esse comando tem suporte nativo pelos <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, e <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="c1b12-749">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectUpByLine"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c1b12-750">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="c1b12-750">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectUpByLine"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c1b12-751">O exemplo a seguir demonstra como invocar um comando de edição em um objeto que suporta o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-751">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c1b12-752">Neste exemplo, um <xref:System.Windows.Controls.RichTextBox> serve como o destino do comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-752">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c1b12-753">Observe que <xref:System.Windows.Controls.RichTextBox> implementa o <xref:System.Windows.IInputElement> interface (herdado de <xref:System.Windows.FrameworkElement>), e que ele inclui suporte nativo para muitos comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-753">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-754">O primeiro argumento para o <xref:System.Windows.Input.RoutedCommand.Execute%2A> método é um parâmetro de comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-754">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c1b12-755">Comandos de edição mais ignorar o parâmetro de comando; em geral, esse parâmetro deve ser `null` para comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-755">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-756">O segundo argumento especifica o objeto ao qual o comando será roteado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-756">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c1b12-757">Este objeto deve implementar a <xref:System.Windows.IInputElement> de interface e deve incluir um manipulador para o comando especificado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-757">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c1b12-758">Em geral, um comando é ignorado quando invocado em um objeto que não lida com o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-758">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
      </Docs>
    </Member>
    <Member MemberName="SelectUpByPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectUpByPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectUpByPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectUpByPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectUpByPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectUpByPage : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectUpByPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1b12-759">Representa o comando <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />, que solicita que a seleção atual seja expandida para cima em uma página.</span><span class="sxs-lookup"><span data-stu-id="c1b12-759">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" /> command, which requests that the current selection be expanded  up by one page.</span></span></summary>
        <value><span data-ttu-id="c1b12-760">O comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-760">The requested command.</span></span>  <span data-ttu-id="c1b12-761">O gesto de chave padrão para esse comando é <see langword="Shift" /> + <see langword="PageUp" />.</span><span class="sxs-lookup"><span data-stu-id="c1b12-761">The default key gesture for this command is <see langword="Shift" />+<see langword="PageUp" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b12-762">Não há necessariamente uma implementação real que responde a este comando em um determinado objeto; em muitos casos, a implementação que responde a um comando é responsabilidade do gravador de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="c1b12-762">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c1b12-763">Esse comando tem suporte nativo pelos <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, e <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="c1b12-763">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectUpByPage"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c1b12-764">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="c1b12-764">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectUpByPage"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c1b12-765">O exemplo a seguir demonstra como invocar um comando de edição em um objeto que suporta o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-765">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c1b12-766">Neste exemplo, um <xref:System.Windows.Controls.RichTextBox> serve como o destino do comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-766">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c1b12-767">Observe que <xref:System.Windows.Controls.RichTextBox> implementa o <xref:System.Windows.IInputElement> interface (herdado de <xref:System.Windows.FrameworkElement>), e que ele inclui suporte nativo para muitos comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-767">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-768">O primeiro argumento para o <xref:System.Windows.Input.RoutedCommand.Execute%2A> método é um parâmetro de comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-768">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c1b12-769">Comandos de edição mais ignorar o parâmetro de comando; em geral, esse parâmetro deve ser `null` para comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-769">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-770">O segundo argumento especifica o objeto ao qual o comando será roteado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-770">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c1b12-771">Este objeto deve implementar a <xref:System.Windows.IInputElement> de interface e deve incluir um manipulador para o comando especificado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-771">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c1b12-772">Em geral, um comando é ignorado quando invocado em um objeto que não lida com o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-772">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
      </Docs>
    </Member>
    <Member MemberName="SelectUpByParagraph">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectUpByParagraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectUpByParagraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectUpByParagraph As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectUpByParagraph { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectUpByParagraph : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1b12-773">Representa o comando <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />, que solicita que a seleção atual seja expandida para cima em um parágrafo.</span><span class="sxs-lookup"><span data-stu-id="c1b12-773">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" /> command, which requests that the current selection be expanded up by one paragraph.</span></span></summary>
        <value><span data-ttu-id="c1b12-774">O comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-774">The requested command.</span></span>  <span data-ttu-id="c1b12-775">O gesto de chave padrão para esse comando é <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="Up" />.</span><span class="sxs-lookup"><span data-stu-id="c1b12-775">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Up" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b12-776">Se o cursor estiver no início de um parágrafo, esse comando expande a seleção para o início do parágrafo anterior.</span><span class="sxs-lookup"><span data-stu-id="c1b12-776">If the caret is at the beginning of a paragraph, this command expands the selection to the beginning of the previous paragraph.</span></span>  <span data-ttu-id="c1b12-777">Caso contrário, esse comando expande a seleção para o início do parágrafo atual.</span><span class="sxs-lookup"><span data-stu-id="c1b12-777">Otherwise, this command expands the selection to the beginning of the current paragraph.</span></span>  
  
 <span data-ttu-id="c1b12-778">Não há necessariamente uma implementação real que responde a este comando em um determinado objeto; em muitos casos, a implementação que responde a um comando é responsabilidade do gravador de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="c1b12-778">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c1b12-779">Esse comando tem suporte nativo pelos <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, e <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="c1b12-779">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectUpByParagraph"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c1b12-780">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="c1b12-780">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectUpByParagraph"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c1b12-781">O exemplo a seguir demonstra como invocar um comando de edição em um objeto que suporta o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-781">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c1b12-782">Neste exemplo, um <xref:System.Windows.Controls.RichTextBox> serve como o destino do comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-782">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c1b12-783">Observe que <xref:System.Windows.Controls.RichTextBox> implementa o <xref:System.Windows.IInputElement> interface (herdado de <xref:System.Windows.FrameworkElement>), e que ele inclui suporte nativo para muitos comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-783">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-784">O primeiro argumento para o <xref:System.Windows.Input.RoutedCommand.Execute%2A> método é um parâmetro de comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-784">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c1b12-785">Comandos de edição mais ignorar o parâmetro de comando; em geral, esse parâmetro deve ser `null` para comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-785">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-786">O segundo argumento especifica o objeto ao qual o comando será roteado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-786">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c1b12-787">Este objeto deve implementar a <xref:System.Windows.IInputElement> de interface e deve incluir um manipulador para o comando especificado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-787">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c1b12-788">Em geral, um comando é ignorado quando invocado em um objeto que não lida com o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-788">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
      </Docs>
    </Member>
    <Member MemberName="TabBackward">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand TabBackward { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand TabBackward" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.TabBackward" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TabBackward As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ TabBackward { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TabBackward : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.TabBackward" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1b12-789">Representa o comando <see cref="P:System.Windows.Documents.EditingCommands.TabBackward" />.</span><span class="sxs-lookup"><span data-stu-id="c1b12-789">Represents the <see cref="P:System.Windows.Documents.EditingCommands.TabBackward" /> command.</span></span></summary>
        <value><span data-ttu-id="c1b12-790">O comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-790">The requested command.</span></span>  <span data-ttu-id="c1b12-791">O gesto de chave padrão para esse comando é <see langword="Shift" /> + <see langword="Tab" />.</span><span class="sxs-lookup"><span data-stu-id="c1b12-791">The default key gesture for this command is <see langword="Shift" />+<see langword="Tab" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b12-792">O comportamento desse comando depende da seleção atual.</span><span class="sxs-lookup"><span data-stu-id="c1b12-792">The behavior for this command depends on the current selection.</span></span> <span data-ttu-id="c1b12-793">Se a seleção não estiver vazio, esse comando é equivalente a <xref:System.Windows.Documents.EditingCommands.DecreaseIndentation%2A>.</span><span class="sxs-lookup"><span data-stu-id="c1b12-793">If the selection is non-empty, this command is equivalent to <xref:System.Windows.Documents.EditingCommands.DecreaseIndentation%2A>.</span></span> <span data-ttu-id="c1b12-794">Se o cursor estiver em uma célula de tabela (representado pelo <xref:System.Windows.Documents.TableCell> elemento), este comando move o cursor para a célula anterior.</span><span class="sxs-lookup"><span data-stu-id="c1b12-794">If the caret is in a table cell (represented by the <xref:System.Windows.Documents.TableCell> element), this command moves the caret to the previous cell.</span></span> <span data-ttu-id="c1b12-795">Caso contrário, um caractere de tabulação é inserido na posição atual.</span><span class="sxs-lookup"><span data-stu-id="c1b12-795">Otherwise, a tab character is inserted in current position.</span></span>  
  
 <span data-ttu-id="c1b12-796">Não há necessariamente uma implementação real que responde a este comando em um determinado objeto; em muitos casos, a implementação que responde a um comando é responsabilidade do gravador de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="c1b12-796">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c1b12-797">Esse comando tem suporte nativo pelos <xref:System.Windows.Controls.RichTextBox> e <xref:System.Windows.Controls.TextBox> (quando o <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> é de propriedade `true`).</span><span class="sxs-lookup"><span data-stu-id="c1b12-797">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox> (when the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> property is `true`).</span></span>  
  
<a name="xamlAttributeUsage_TabBackward"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c1b12-798">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="c1b12-798">XAML Attribute Usage</span></span>  
  
```  
<object property="TabBackward"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c1b12-799">O exemplo a seguir demonstra como invocar um comando de edição em um objeto que suporta o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-799">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c1b12-800">Neste exemplo, um <xref:System.Windows.Controls.RichTextBox> serve como o destino do comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-800">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c1b12-801">Observe que <xref:System.Windows.Controls.RichTextBox> implementa o <xref:System.Windows.IInputElement> interface (herdado de <xref:System.Windows.FrameworkElement>), e que ele inclui suporte nativo para muitos comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-801">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-802">O primeiro argumento para o <xref:System.Windows.Input.RoutedCommand.Execute%2A> método é um parâmetro de comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-802">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c1b12-803">Comandos de edição mais ignorar o parâmetro de comando; em geral, esse parâmetro deve ser `null` para comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-803">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-804">O segundo argumento especifica o objeto ao qual o comando será roteado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-804">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c1b12-805">Este objeto deve implementar a <xref:System.Windows.IInputElement> de interface e deve incluir um manipulador para o comando especificado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-805">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c1b12-806">Em geral, um comando é ignorado quando invocado em um objeto que não lida com o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-806">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
```csharp  
RichTextBox rTB = new RichTextBox();  
  
EditingCommands.ToggleInsert.Execute(null, rTB);  
  
```  
  
```vb  
            Dim rTB As New RichTextBox()  
  
            EditingCommands.ToggleInsert.Execute(Nothing, rTB)  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.TabForward" />
      </Docs>
    </Member>
    <Member MemberName="TabForward">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand TabForward { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand TabForward" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.TabForward" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TabForward As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ TabForward { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TabForward : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.TabForward" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1b12-807">Representa o comando <see cref="P:System.Windows.Documents.EditingCommands.TabForward" />.</span><span class="sxs-lookup"><span data-stu-id="c1b12-807">Represents the <see cref="P:System.Windows.Documents.EditingCommands.TabForward" /> command.</span></span></summary>
        <value><span data-ttu-id="c1b12-808">O comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-808">The requested command.</span></span>  <span data-ttu-id="c1b12-809">O gesto de chave padrão para esse comando é <see langword="Tab" />.</span><span class="sxs-lookup"><span data-stu-id="c1b12-809">The default key gesture for this command is <see langword="Tab" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b12-810">O comportamento desse comando depende da seleção atual.</span><span class="sxs-lookup"><span data-stu-id="c1b12-810">The behavior for this command depends on the current selection.</span></span> <span data-ttu-id="c1b12-811">Se a seleção não estiver vazia ou se a seleção estiver vazia e a posição do cursor atual está no início de um parágrafo, esse comando é equivalente a <xref:System.Windows.Documents.EditingCommands.IncreaseIndentation%2A>.</span><span class="sxs-lookup"><span data-stu-id="c1b12-811">If the selection is non-empty, or if the selection is empty and the current caret position is at the beginning of a  paragraph, this command is equivalent to <xref:System.Windows.Documents.EditingCommands.IncreaseIndentation%2A>.</span></span> <span data-ttu-id="c1b12-812">Se o cursor estiver em uma célula de tabela (representado pelo <xref:System.Windows.Documents.TableCell> elemento), este comando move o cursor para a próxima célula.</span><span class="sxs-lookup"><span data-stu-id="c1b12-812">If the caret is in a table cell (represented by the <xref:System.Windows.Documents.TableCell> element), this command moves the caret to the next cell.</span></span> <span data-ttu-id="c1b12-813">Se o cursor estiver na última célula de uma tabela, esse comando faz com que uma nova linha a ser acrescentada à tabela, com o cursor posicionado na primeira célula da nova linha.</span><span class="sxs-lookup"><span data-stu-id="c1b12-813">If the caret is in the last cell of a table, this command causes a new row to be appended to the table, with the caret positioned in the first cell of the new row.</span></span>  <span data-ttu-id="c1b12-814">Caso contrário, um caractere de tabulação é inserido na posição atual.</span><span class="sxs-lookup"><span data-stu-id="c1b12-814">Otherwise, a tab character is inserted in current position.</span></span>  
  
 <span data-ttu-id="c1b12-815">Não há necessariamente uma implementação real que responde a este comando em um determinado objeto; em muitos casos, a implementação que responde a um comando é responsabilidade do gravador de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="c1b12-815">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c1b12-816">Esse comando tem suporte nativo pelos <xref:System.Windows.Controls.RichTextBox> e <xref:System.Windows.Controls.TextBox> (quando o <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> é de propriedade `true`).</span><span class="sxs-lookup"><span data-stu-id="c1b12-816">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox> (when the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> property is `true`).</span></span>  
  
<a name="xamlAttributeUsage_TabForward"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c1b12-817">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="c1b12-817">XAML Attribute Usage</span></span>  
  
```  
<object property="TabForward"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c1b12-818">O exemplo a seguir demonstra como invocar um comando de edição em um objeto que suporta o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-818">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c1b12-819">Neste exemplo, um <xref:System.Windows.Controls.RichTextBox> serve como o destino do comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-819">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c1b12-820">Observe que <xref:System.Windows.Controls.RichTextBox> implementa o <xref:System.Windows.IInputElement> interface (herdado de <xref:System.Windows.FrameworkElement>), e que ele inclui suporte nativo para muitos comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-820">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-821">O primeiro argumento para o <xref:System.Windows.Input.RoutedCommand.Execute%2A> método é um parâmetro de comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-821">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c1b12-822">Comandos de edição mais ignorar o parâmetro de comando; em geral, esse parâmetro deve ser `null` para comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-822">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-823">O segundo argumento especifica o objeto ao qual o comando será roteado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-823">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c1b12-824">Este objeto deve implementar a <xref:System.Windows.IInputElement> de interface e deve incluir um manipulador para o comando especificado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-824">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c1b12-825">Em geral, um comando é ignorado quando invocado em um objeto que não lida com o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-825">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
```csharp  
RichTextBox rTB = new RichTextBox();  
  
EditingCommands.ToggleInsert.Execute(null, rTB);  
  
```  
  
```vb  
            Dim rTB As New RichTextBox()  
  
            EditingCommands.ToggleInsert.Execute(Nothing, rTB)  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.TabBackward" />
      </Docs>
    </Member>
    <Member MemberName="ToggleBold">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleBold { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleBold" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleBold" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleBold As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleBold { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleBold : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleBold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1b12-826">Representa o comando <see cref="P:System.Windows.Documents.EditingCommands.ToggleBold" />, que solicita que a formatação de <see cref="T:System.Windows.Documents.Bold" /> seja alternada na seleção atual.</span><span class="sxs-lookup"><span data-stu-id="c1b12-826">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleBold" /> command, which requests that <see cref="T:System.Windows.Documents.Bold" /> formatting be toggled on the current selection.</span></span></summary>
        <value><span data-ttu-id="c1b12-827">O comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-827">The requested command.</span></span>  <span data-ttu-id="c1b12-828">O gesto de chave padrão para esse comando é <see langword="Ctrl" /> + <see langword="B" />.</span><span class="sxs-lookup"><span data-stu-id="c1b12-828">The default key gesture for this command is <see langword="Ctrl" />+<see langword="B" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b12-829">Se o <xref:System.Windows.FontWeight> para a seleção atual está no intervalo entre <xref:System.Windows.FontWeights.Thin%2A> à <xref:System.Windows.FontWeights.SemiBold%2A>, <xref:System.Windows.FontWeights.Bold%2A> é aplicada à seleção atual.</span><span class="sxs-lookup"><span data-stu-id="c1b12-829">If the <xref:System.Windows.FontWeight> for the current selection is in the range from <xref:System.Windows.FontWeights.Thin%2A> to <xref:System.Windows.FontWeights.SemiBold%2A>, <xref:System.Windows.FontWeights.Bold%2A> is applied to the current selection.</span></span>  <span data-ttu-id="c1b12-830">Caso contrário, <xref:System.Windows.FontWeights.Normal%2A> é aplicado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-830">Otherwise, <xref:System.Windows.FontWeights.Normal%2A> is applied.</span></span>  <span data-ttu-id="c1b12-831">Para obter uma lista comparativa de <xref:System.Windows.FontWeight> valores, consulte <xref:System.Windows.FontWeights>.</span><span class="sxs-lookup"><span data-stu-id="c1b12-831">For a comparative list of <xref:System.Windows.FontWeight> values, see <xref:System.Windows.FontWeights>.</span></span>  
  
 <span data-ttu-id="c1b12-832">Quando a seleção estiver vazia e o cursor está dentro de uma palavra, a seleção é expandida para incluir a palavra inteira.</span><span class="sxs-lookup"><span data-stu-id="c1b12-832">When the selection is empty and the caret is within a word, the selection is expanded to include the entire word.</span></span>  
  
 <span data-ttu-id="c1b12-833">Não há necessariamente uma implementação real que responde a este comando em um determinado objeto; em muitos casos, a implementação que responde a um comando é responsabilidade do gravador de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="c1b12-833">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c1b12-834">Esse comando tem suporte nativo pelo <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="c1b12-834">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleBold"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c1b12-835">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="c1b12-835">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleBold"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c1b12-836">O exemplo a seguir demonstra como invocar um comando de edição em um objeto que suporta o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-836">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c1b12-837">Neste exemplo, um <xref:System.Windows.Controls.RichTextBox> serve como o destino do comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-837">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c1b12-838">Observe que <xref:System.Windows.Controls.RichTextBox> implementa o <xref:System.Windows.IInputElement> interface (herdado de <xref:System.Windows.FrameworkElement>), e que ele inclui suporte nativo para muitos comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-838">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-839">O primeiro argumento para o <xref:System.Windows.Input.RoutedCommand.Execute%2A> método é um parâmetro de comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-839">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c1b12-840">Comandos de edição mais ignorar o parâmetro de comando; em geral, esse parâmetro deve ser `null` para comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-840">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-841">O segundo argumento especifica o objeto ao qual o comando será roteado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-841">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c1b12-842">Este objeto deve implementar a <xref:System.Windows.IInputElement> de interface e deve incluir um manipulador para o comando especificado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-842">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c1b12-843">Em geral, um comando é ignorado quando invocado em um objeto que não lida com o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-843">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleUnderline" />
      </Docs>
    </Member>
    <Member MemberName="ToggleBullets">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleBullets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleBullets" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleBullets" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleBullets As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleBullets { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleBullets : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleBullets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1b12-844">Representa o comando <see cref="P:System.Windows.Documents.EditingCommands.ToggleBullets" />, que solicita que a formatação da lista não ordenada (também chamada de lista com marcadores) seja alternada na seleção atual.</span><span class="sxs-lookup"><span data-stu-id="c1b12-844">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleBullets" /> command, which requests that unordered list (also referred to as bulleted list) formatting be toggled on the current selection.</span></span></summary>
        <value><span data-ttu-id="c1b12-845">O comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-845">The requested command.</span></span>  <span data-ttu-id="c1b12-846">O gesto de chave padrão para esse comando é <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="L" />.</span><span class="sxs-lookup"><span data-stu-id="c1b12-846">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="L" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b12-847">Esse comando opera com o <xref:System.Windows.Documents.Paragraph> nível.</span><span class="sxs-lookup"><span data-stu-id="c1b12-847">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="c1b12-848">Se esse comando é invocado em uma seleção parcial de conteúdo dentro de um parágrafo (incluindo uma seleção vazia no qual o cursor está dentro de um parágrafo), o efeito solicitado é aplicado ao parágrafo inteiro.</span><span class="sxs-lookup"><span data-stu-id="c1b12-848">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="c1b12-849">Se esse comando é invocado em uma seleção que abrange vários parágrafos, o efeito é aplicado a todo o conteúdo de cada parágrafo que participa da seleção.</span><span class="sxs-lookup"><span data-stu-id="c1b12-849">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="c1b12-850">Não há necessariamente uma implementação real que responde a este comando em um determinado objeto; em muitos casos, a implementação que responde a um comando é responsabilidade do gravador de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="c1b12-850">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c1b12-851">Esse comando tem suporte nativo pelo <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="c1b12-851">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleBullets"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c1b12-852">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="c1b12-852">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleBullets"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c1b12-853">O exemplo a seguir demonstra como invocar um comando de edição em um objeto que suporta o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-853">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c1b12-854">Neste exemplo, um <xref:System.Windows.Controls.RichTextBox> serve como o destino do comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-854">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c1b12-855">Observe que <xref:System.Windows.Controls.RichTextBox> implementa o <xref:System.Windows.IInputElement> interface (herdado de <xref:System.Windows.FrameworkElement>), e que ele inclui suporte nativo para muitos comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-855">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-856">O primeiro argumento para o <xref:System.Windows.Input.RoutedCommand.Execute%2A> método é um parâmetro de comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-856">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c1b12-857">Comandos de edição mais ignorar o parâmetro de comando; em geral, esse parâmetro deve ser `null` para comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-857">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-858">O segundo argumento especifica o objeto ao qual o comando será roteado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-858">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c1b12-859">Este objeto deve implementar a <xref:System.Windows.IInputElement> de interface e deve incluir um manipulador para o comando especificado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-859">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c1b12-860">Em geral, um comando é ignorado quando invocado em um objeto que não lida com o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-860">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleNumbering" />
      </Docs>
    </Member>
    <Member MemberName="ToggleInsert">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleInsert { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleInsert" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleInsert" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleInsert As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleInsert { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleInsert : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleInsert" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1b12-861">Representa o comando <see cref="P:System.Windows.Documents.EditingCommands.ToggleInsert" />, que alterna o modo de digitação entre Inserir e Sobrescrever.</span><span class="sxs-lookup"><span data-stu-id="c1b12-861">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleInsert" /> command, which toggles the typing mode between Insert and Overtype.</span></span></summary>
        <value><span data-ttu-id="c1b12-862">O comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-862">The requested command.</span></span>  <span data-ttu-id="c1b12-863">O gesto de chave padrão para esse comando é <see langword="Insert" />.</span><span class="sxs-lookup"><span data-stu-id="c1b12-863">The default key gesture for this command is <see langword="Insert" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b12-864">Não há necessariamente uma implementação real que responde a este comando em um determinado objeto; em muitos casos, a implementação que responde a um comando é responsabilidade do gravador de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="c1b12-864">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c1b12-865">Esse comando tem suporte nativo pelos <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, e <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="c1b12-865">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleInsert"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c1b12-866">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="c1b12-866">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleInsert"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c1b12-867">O exemplo a seguir demonstra como invocar um comando de edição em um objeto que suporta o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-867">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c1b12-868">Neste exemplo, um <xref:System.Windows.Controls.RichTextBox> serve como o destino do comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-868">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c1b12-869">Observe que <xref:System.Windows.Controls.RichTextBox> implementa o <xref:System.Windows.IInputElement> interface (herdado de <xref:System.Windows.FrameworkElement>), e que ele inclui suporte nativo para muitos comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-869">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-870">O primeiro argumento para o <xref:System.Windows.Input.RoutedCommand.Execute%2A> método é um parâmetro de comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-870">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c1b12-871">Comandos de edição mais ignorar o parâmetro de comando; em geral, esse parâmetro deve ser `null` para comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-871">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-872">O segundo argumento especifica o objeto ao qual o comando será roteado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-872">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c1b12-873">Este objeto deve implementar a <xref:System.Windows.IInputElement> de interface e deve incluir um manipulador para o comando especificado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-873">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c1b12-874">Em geral, um comando é ignorado quando invocado em um objeto que não lida com o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-874">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleItalic">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleItalic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleItalic" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleItalic" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleItalic As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleItalic { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleItalic : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleItalic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1b12-875">Representa o comando <see cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" />, que solicita que a formatação de <see cref="T:System.Windows.Documents.Italic" /> seja alternada na seleção atual.</span><span class="sxs-lookup"><span data-stu-id="c1b12-875">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" /> command, which requests that <see cref="T:System.Windows.Documents.Italic" /> formatting be toggled on the current selection.</span></span></summary>
        <value><span data-ttu-id="c1b12-876">O comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-876">The requested command.</span></span>  <span data-ttu-id="c1b12-877">O gesto de chave padrão para esse comando é <see langword="Ctrl" /> + <see langword="I" />.</span><span class="sxs-lookup"><span data-stu-id="c1b12-877">The default key gesture for this command is <see langword="Ctrl" />+<see langword="I" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b12-878">Se o <xref:System.Windows.FontStyle> para a seleção atual está <xref:System.Windows.FontStyles.Normal%2A>, <xref:System.Windows.FontStyles.Italic%2A> é aplicada à seleção atual.</span><span class="sxs-lookup"><span data-stu-id="c1b12-878">If the <xref:System.Windows.FontStyle> for the current selection is <xref:System.Windows.FontStyles.Normal%2A>, <xref:System.Windows.FontStyles.Italic%2A> is applied to the current selection.</span></span>  <span data-ttu-id="c1b12-879">Caso contrário, <xref:System.Windows.FontStyles.Normal%2A> é aplicado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-879">Otherwise, <xref:System.Windows.FontStyles.Normal%2A> is applied.</span></span>  
  
 <span data-ttu-id="c1b12-880">Quando a seleção estiver vazia e o cursor está dentro de uma palavra, a seleção é expandida para incluir a palavra inteira.</span><span class="sxs-lookup"><span data-stu-id="c1b12-880">When the selection is empty and the caret is within a word, the selection is expanded to include the entire word.</span></span>  
  
 <span data-ttu-id="c1b12-881">Não há necessariamente uma implementação real que responde a este comando em um determinado objeto; em muitos casos, a implementação que responde a um comando é responsabilidade do gravador de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="c1b12-881">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c1b12-882">Esse comando tem suporte nativo pelo <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="c1b12-882">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleItalic"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c1b12-883">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="c1b12-883">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleItalic"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c1b12-884">O exemplo a seguir demonstra como invocar um comando de edição em um objeto que suporta o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-884">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c1b12-885">Neste exemplo, um <xref:System.Windows.Controls.RichTextBox> serve como o destino do comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-885">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c1b12-886">Observe que <xref:System.Windows.Controls.RichTextBox> implementa o <xref:System.Windows.IInputElement> interface (herdado de <xref:System.Windows.FrameworkElement>), e que ele inclui suporte nativo para muitos comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-886">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-887">O primeiro argumento para o <xref:System.Windows.Input.RoutedCommand.Execute%2A> método é um parâmetro de comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-887">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c1b12-888">Comandos de edição mais ignorar o parâmetro de comando; em geral, esse parâmetro deve ser `null` para comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-888">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-889">O segundo argumento especifica o objeto ao qual o comando será roteado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-889">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c1b12-890">Este objeto deve implementar a <xref:System.Windows.IInputElement> de interface e deve incluir um manipulador para o comando especificado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-890">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c1b12-891">Em geral, um comando é ignorado quando invocado em um objeto que não lida com o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-891">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleBold" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleUnderline" />
      </Docs>
    </Member>
    <Member MemberName="ToggleNumbering">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleNumbering { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleNumbering" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleNumbering" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleNumbering As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleNumbering { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleNumbering : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleNumbering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1b12-892">Representa o comando <see cref="P:System.Windows.Documents.EditingCommands.ToggleNumbering" />, que solicita que a formatação da lista ordenada (também chamada de lista numerada) seja alternada na seleção atual.</span><span class="sxs-lookup"><span data-stu-id="c1b12-892">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleNumbering" /> command, which requests that ordered list (also referred to as numbered list) formatting be toggled on the current selection.</span></span></summary>
        <value><span data-ttu-id="c1b12-893">O comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-893">The requested command.</span></span>  <span data-ttu-id="c1b12-894">O gesto de chave padrão para esse comando é <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="N" />.</span><span class="sxs-lookup"><span data-stu-id="c1b12-894">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="N" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b12-895">Esse comando opera com o <xref:System.Windows.Documents.Paragraph> nível.</span><span class="sxs-lookup"><span data-stu-id="c1b12-895">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="c1b12-896">Se esse comando é invocado em uma seleção parcial de conteúdo dentro de um parágrafo (incluindo uma seleção vazia no qual o cursor está dentro de um parágrafo), o efeito solicitado é aplicado ao parágrafo inteiro.</span><span class="sxs-lookup"><span data-stu-id="c1b12-896">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="c1b12-897">Se esse comando é invocado em uma seleção que abrange vários parágrafos, o efeito é aplicado a todo o conteúdo de cada parágrafo que participa da seleção.</span><span class="sxs-lookup"><span data-stu-id="c1b12-897">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="c1b12-898">Não há necessariamente uma implementação real que responde a este comando em um determinado objeto; em muitos casos, a implementação que responde a um comando é responsabilidade do gravador de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="c1b12-898">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c1b12-899">Esse comando tem suporte nativo pelo <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="c1b12-899">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleNumbering"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c1b12-900">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="c1b12-900">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleNumbering"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c1b12-901">O exemplo a seguir demonstra como invocar um comando de edição em um objeto que suporta o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-901">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c1b12-902">Neste exemplo, um <xref:System.Windows.Controls.RichTextBox> serve como o destino do comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-902">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c1b12-903">Observe que <xref:System.Windows.Controls.RichTextBox> implementa o <xref:System.Windows.IInputElement> interface (herdado de <xref:System.Windows.FrameworkElement>), e que ele inclui suporte nativo para muitos comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-903">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-904">O primeiro argumento para o <xref:System.Windows.Input.RoutedCommand.Execute%2A> método é um parâmetro de comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-904">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c1b12-905">Comandos de edição mais ignorar o parâmetro de comando; em geral, esse parâmetro deve ser `null` para comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-905">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-906">O segundo argumento especifica o objeto ao qual o comando será roteado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-906">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c1b12-907">Este objeto deve implementar a <xref:System.Windows.IInputElement> de interface e deve incluir um manipulador para o comando especificado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-907">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c1b12-908">Em geral, um comando é ignorado quando invocado em um objeto que não lida com o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-908">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" />
      </Docs>
    </Member>
    <Member MemberName="ToggleSubscript">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleSubscript { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleSubscript" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleSubscript" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleSubscript As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleSubscript { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleSubscript : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleSubscript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1b12-909">Representa o comando <see cref="P:System.Windows.Documents.EditingCommands.ToggleSubscript" />, que solicita que a formatação de subscrito seja alternada na seleção atual.</span><span class="sxs-lookup"><span data-stu-id="c1b12-909">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleSubscript" /> command, which requests that subscript formatting be toggled on the current selection.</span></span></summary>
        <value><span data-ttu-id="c1b12-910">O comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-910">The requested command.</span></span>  <span data-ttu-id="c1b12-911">O gesto de chave padrão para esse comando é <see langword="Ctrl" /> + <see langword="OemPlus" />.</span><span class="sxs-lookup"><span data-stu-id="c1b12-911">The default key gesture for this command is <see langword="Ctrl" />+<see langword="OemPlus" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b12-912">Não há necessariamente uma implementação real que responde a este comando em um determinado objeto; em muitos casos, a implementação que responde a um comando é responsabilidade do gravador de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="c1b12-912">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_ToggleSubscript"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c1b12-913">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="c1b12-913">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleSubscript"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c1b12-914">O exemplo a seguir demonstra como invocar um comando de edição em um objeto que suporta o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-914">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c1b12-915">Neste exemplo, um <xref:System.Windows.Controls.RichTextBox> serve como o destino do comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-915">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c1b12-916">Observe que <xref:System.Windows.Controls.RichTextBox> implementa o <xref:System.Windows.IInputElement> interface (herdado de <xref:System.Windows.FrameworkElement>), e que ele inclui suporte nativo para muitos comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-916">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-917">O primeiro argumento para o <xref:System.Windows.Input.RoutedCommand.Execute%2A> método é um parâmetro de comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-917">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c1b12-918">Comandos de edição mais ignorar o parâmetro de comando; em geral, esse parâmetro deve ser `null` para comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-918">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-919">O segundo argumento especifica o objeto ao qual o comando será roteado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-919">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c1b12-920">Este objeto deve implementar a <xref:System.Windows.IInputElement> de interface e deve incluir um manipulador para o comando especificado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-920">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c1b12-921">Em geral, um comando é ignorado quando invocado em um objeto que não lida com o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-921">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleSuperscript" />
      </Docs>
    </Member>
    <Member MemberName="ToggleSuperscript">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleSuperscript { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleSuperscript" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleSuperscript" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleSuperscript As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleSuperscript { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleSuperscript : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleSuperscript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1b12-922">Representa o comando <see cref="P:System.Windows.Documents.EditingCommands.ToggleSuperscript" />, que solicita que a formatação de sobrescrito seja alternada na seleção atual.</span><span class="sxs-lookup"><span data-stu-id="c1b12-922">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleSuperscript" /> command, which requests that superscript formatting be toggled on the current selection.</span></span></summary>
        <value><span data-ttu-id="c1b12-923">O comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-923">The requested command.</span></span>  <span data-ttu-id="c1b12-924">O gesto de chave padrão para esse comando é <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="OemPlus" />.</span><span class="sxs-lookup"><span data-stu-id="c1b12-924">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="OemPlus" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b12-925">Não há necessariamente uma implementação real que responde a este comando em um determinado objeto; em muitos casos, a implementação que responde a um comando é responsabilidade do gravador de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="c1b12-925">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_ToggleSuperscript"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c1b12-926">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="c1b12-926">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleSuperscript"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c1b12-927">O exemplo a seguir demonstra como invocar um comando de edição em um objeto que suporta o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-927">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c1b12-928">Neste exemplo, um <xref:System.Windows.Controls.RichTextBox> serve como o destino do comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-928">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c1b12-929">Observe que <xref:System.Windows.Controls.RichTextBox> implementa o <xref:System.Windows.IInputElement> interface (herdado de <xref:System.Windows.FrameworkElement>), e que ele inclui suporte nativo para muitos comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-929">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-930">O primeiro argumento para o <xref:System.Windows.Input.RoutedCommand.Execute%2A> método é um parâmetro de comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-930">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c1b12-931">Comandos de edição mais ignorar o parâmetro de comando; em geral, esse parâmetro deve ser `null` para comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-931">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-932">O segundo argumento especifica o objeto ao qual o comando será roteado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-932">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c1b12-933">Este objeto deve implementar a <xref:System.Windows.IInputElement> de interface e deve incluir um manipulador para o comando especificado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-933">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c1b12-934">Em geral, um comando é ignorado quando invocado em um objeto que não lida com o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-934">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleSubscript" />
      </Docs>
    </Member>
    <Member MemberName="ToggleUnderline">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleUnderline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleUnderline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleUnderline" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleUnderline As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleUnderline { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleUnderline : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleUnderline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1b12-935">Representa o comando <see cref="P:System.Windows.Documents.EditingCommands.ToggleUnderline" />, que solicita que a formatação de <see cref="T:System.Windows.Documents.Underline" /> seja alternada na seleção atual.</span><span class="sxs-lookup"><span data-stu-id="c1b12-935">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleUnderline" /> command, which requests that <see cref="T:System.Windows.Documents.Underline" /> formatting be toggled on the current selection.</span></span></summary>
        <value><span data-ttu-id="c1b12-936">O comando solicitado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-936">The requested command.</span></span>  <span data-ttu-id="c1b12-937">O gesto de chave padrão para esse comando é <see langword="Ctrl" /> + <see langword="U" />.</span><span class="sxs-lookup"><span data-stu-id="c1b12-937">The default key gesture for this command is <see langword="Ctrl" />+<see langword="U" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1b12-938">Quando a seleção estiver vazia e o cursor está dentro de uma palavra, a seleção é expandida para incluir a palavra inteira.</span><span class="sxs-lookup"><span data-stu-id="c1b12-938">When the selection is empty and the caret is within a word, the selection is expanded to include the entire word.</span></span>  
  
 <span data-ttu-id="c1b12-939">Não há necessariamente uma implementação real que responde a este comando em um determinado objeto; em muitos casos, a implementação que responde a um comando é responsabilidade do gravador de aplicativos.</span><span class="sxs-lookup"><span data-stu-id="c1b12-939">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c1b12-940">Esse comando tem suporte nativo pelo <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="c1b12-940">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleUnderline"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c1b12-941">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="c1b12-941">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleUnderline"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c1b12-942">O exemplo a seguir demonstra como invocar um comando de edição em um objeto que suporta o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-942">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c1b12-943">Neste exemplo, um <xref:System.Windows.Controls.RichTextBox> serve como o destino do comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-943">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c1b12-944">Observe que <xref:System.Windows.Controls.RichTextBox> implementa o <xref:System.Windows.IInputElement> interface (herdado de <xref:System.Windows.FrameworkElement>), e que ele inclui suporte nativo para muitos comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-944">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-945">O primeiro argumento para o <xref:System.Windows.Input.RoutedCommand.Execute%2A> método é um parâmetro de comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-945">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c1b12-946">Comandos de edição mais ignorar o parâmetro de comando; em geral, esse parâmetro deve ser `null` para comandos de edição.</span><span class="sxs-lookup"><span data-stu-id="c1b12-946">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c1b12-947">O segundo argumento especifica o objeto ao qual o comando será roteado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-947">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c1b12-948">Este objeto deve implementar a <xref:System.Windows.IInputElement> de interface e deve incluir um manipulador para o comando especificado.</span><span class="sxs-lookup"><span data-stu-id="c1b12-948">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c1b12-949">Em geral, um comando é ignorado quando invocado em um objeto que não lida com o comando.</span><span class="sxs-lookup"><span data-stu-id="c1b12-949">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleBold" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" />
      </Docs>
    </Member>
  </Members>
</Type>