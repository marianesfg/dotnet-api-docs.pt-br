<Type Name="TextPointer" FullName="System.Windows.Documents.TextPointer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="78ff844e35266523e6ae9c280abf018a54b675de" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39877526" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TextPointer : System.Windows.Documents.ContentPosition" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TextPointer extends System.Windows.Documents.ContentPosition" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.TextPointer" />
  <TypeSignature Language="VB.NET" Value="Public Class TextPointer&#xA;Inherits ContentPosition" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextPointer : System::Windows::Documents::ContentPosition" />
  <TypeSignature Language="F#" Value="type TextPointer = class&#xA;    inherit ContentPosition" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Documents.ContentPosition</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="53179-101">Representa uma posição dentro de um <see cref="T:System.Windows.Documents.FlowDocument" /> ou <see cref="T:System.Windows.Controls.TextBlock" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="53179-101">Represents a position within a <see cref="T:System.Windows.Documents.FlowDocument" /> or <see cref="T:System.Windows.Controls.TextBlock" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53179-102">O <xref:System.Windows.Documents.TextPointer> classe apresenta a seguinte terminologia:</span><span class="sxs-lookup"><span data-stu-id="53179-102">The <xref:System.Windows.Documents.TextPointer> class introduces the following terminology:</span></span>  
  
-   <span data-ttu-id="53179-103">Posicione - inerentemente, um <xref:System.Windows.Documents.TextPointer> sempre aponta para um *posição* no conteúdo.</span><span class="sxs-lookup"><span data-stu-id="53179-103">Position - Inherently, a <xref:System.Windows.Documents.TextPointer> always points to a *position* in content.</span></span>  <span data-ttu-id="53179-104">Essas posições de qualquer um se enquadram entre caracteres de conteúdo, ou entre o fluxo de conteúdo de elemento de marcas que definem a estrutura do conteúdo.</span><span class="sxs-lookup"><span data-stu-id="53179-104">Such positions either fall between characters in the content, or between flow content element tags that define structure for the content.</span></span>  
  
-   <span data-ttu-id="53179-105">Posição atual - porque um <xref:System.Windows.Documents.TextPointer> sempre indica uma posição e porque muitas das operações que podem ser executadas por meio de um <xref:System.Windows.Documents.TextPointer> são relativas a posição no momento apontada pelo <xref:System.Windows.Documents.TextPointer>, faz sentido simplesmente se referem à posição indicada por uma <xref:System.Windows.Documents.TextPointer> como o *posição atual*.</span><span class="sxs-lookup"><span data-stu-id="53179-105">Current Position - Because a <xref:System.Windows.Documents.TextPointer> always indicates a position, and because many of the operations that can be performed through a <xref:System.Windows.Documents.TextPointer> are relative to the position currently pointed to by the <xref:System.Windows.Documents.TextPointer>, it makes sense to simply refer to the position indicated by a <xref:System.Windows.Documents.TextPointer> as the *current position*.</span></span>  
  
-   <span data-ttu-id="53179-106">Posição de inserção - um *posição de inserção* é uma posição em que o novo conteúdo pode ser adicionado sem interromper todas as regras semânticas para o conteúdo associado.</span><span class="sxs-lookup"><span data-stu-id="53179-106">Insertion Position - An *insertion position* is a position where new content may be added without breaking any semantic rules for the associated content.</span></span>  <span data-ttu-id="53179-107">Na prática, um ponto de inserção é em qualquer lugar no conteúdo em que um cursor do sistema pode ser posicionado.</span><span class="sxs-lookup"><span data-stu-id="53179-107">In practice, an insertion position is anywhere in content where a caret may be positioned.</span></span>  <span data-ttu-id="53179-108">Um exemplo de válida <xref:System.Windows.Documents.TextPointer> posição que não é um ponto de inserção é a posição entre dois adjacentes <xref:System.Windows.Documents.Paragraph> marcas (ou seja, entre a marca de fechamento do parágrafo anterior e a marca de abertura do próximo parágrafo).</span><span class="sxs-lookup"><span data-stu-id="53179-108">An example of a valid <xref:System.Windows.Documents.TextPointer> position that is not an insertion position is the position between two adjacent <xref:System.Windows.Documents.Paragraph> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</span></span>  
  
-   <span data-ttu-id="53179-109">Símbolo - para as finalidades <xref:System.Windows.Documents.TextPointer> operações que envolvem símbolos, qualquer um dos seguintes é considerado uma *símbolo*:</span><span class="sxs-lookup"><span data-stu-id="53179-109">Symbol - For the purposes of <xref:System.Windows.Documents.TextPointer> operations that involve symbols, any of the following is considered to be a *symbol*:</span></span>  
  
    -   <span data-ttu-id="53179-110">Uma marca de abertura ou para um <xref:System.Windows.Documents.TextElement> elemento.</span><span class="sxs-lookup"><span data-stu-id="53179-110">An opening or closing tag for a <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
    -   <span data-ttu-id="53179-111">Um <xref:System.Windows.UIElement> elemento contido em um <xref:System.Windows.Documents.InlineUIContainer> ou <xref:System.Windows.Documents.BlockUIContainer>.</span><span class="sxs-lookup"><span data-stu-id="53179-111">A <xref:System.Windows.UIElement> element contained within an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="53179-112">Observe que essas uma <xref:System.Windows.UIElement> sempre são contados como exatamente um símbolo; qualquer conteúdo adicional ou elementos contidos pelo <xref:System.Windows.UIElement> não são contadas como símbolos.</span><span class="sxs-lookup"><span data-stu-id="53179-112">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
    -   <span data-ttu-id="53179-113">Cada 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] caractere dentro de um texto <xref:System.Windows.Documents.Run> elemento.</span><span class="sxs-lookup"><span data-stu-id="53179-113">Each 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
-   <span data-ttu-id="53179-114">Contêiner de texto – *contêiner de texto* é o elemento de que forma a borda final para o conteúdo de fluxo em questão, a posição indicada por um <xref:System.Windows.Documents.TextPointer> sempre está dentro de um contêiner de texto.</span><span class="sxs-lookup"><span data-stu-id="53179-114">Text Container - A *text container* is the element that forms the ultimate border for the flow content at hand; the position indicated by a <xref:System.Windows.Documents.TextPointer> always falls within a text container.</span></span>  <span data-ttu-id="53179-115">Atualmente, um contêiner de texto deve ser um <xref:System.Windows.Documents.FlowDocument> ou um <xref:System.Windows.Controls.TextBlock>.</span><span class="sxs-lookup"><span data-stu-id="53179-115">Currently, a text container must be either a <xref:System.Windows.Documents.FlowDocument> or a <xref:System.Windows.Controls.TextBlock>.</span></span>  <span data-ttu-id="53179-116">Em termos gerais, as operações entre <xref:System.Windows.Documents.TextPointer> não há suporte para instâncias em contêineres de texto diferente.</span><span class="sxs-lookup"><span data-stu-id="53179-116">Generally speaking, operations between <xref:System.Windows.Documents.TextPointer> instances in different text containers are not supported.</span></span>  
  
-   <span data-ttu-id="53179-117">Documento – o conteúdo em um contêiner de texto é conhecido como um *documento*, como na <xref:System.Windows.Documents.TextPointer.IsInSameDocument%2A> método e o <xref:System.Windows.Documents.TextPointer.DocumentStart%2A> e <xref:System.Windows.Documents.TextPointer.DocumentEnd%2A> propriedades.</span><span class="sxs-lookup"><span data-stu-id="53179-117">Document - The content in a text container is referred to as a *document*, as in the <xref:System.Windows.Documents.TextPointer.IsInSameDocument%2A> method and the <xref:System.Windows.Documents.TextPointer.DocumentStart%2A> and <xref:System.Windows.Documents.TextPointer.DocumentEnd%2A> properties.</span></span>  
  
 <span data-ttu-id="53179-118">O <xref:System.Windows.Documents.TextPointer> classe destina-se para facilitar a passagem e a manipulação de conteúdo que é representado por [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] elementos de conteúdo de fluxo; em geral, esses elementos derivam <xref:System.Windows.Documents.TextElement>.</span><span class="sxs-lookup"><span data-stu-id="53179-118">The <xref:System.Windows.Documents.TextPointer> class is intended to facilitate traversal and manipulation of content that is represented by [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] flow content elements; in general, such elements derive from <xref:System.Windows.Documents.TextElement>.</span></span>  <span data-ttu-id="53179-119">Algumas das operações que <xref:System.Windows.Documents.TextPointer> facilita incluem o seguinte:</span><span class="sxs-lookup"><span data-stu-id="53179-119">Some of the operations that <xref:System.Windows.Documents.TextPointer> facilitates include the following:</span></span>  
  
-   <span data-ttu-id="53179-120">Execute uma comparação ordinal da posição atual com uma segunda posição especificada.</span><span class="sxs-lookup"><span data-stu-id="53179-120">Perform an ordinal comparison of the current position with a second specified position.</span></span>  <span data-ttu-id="53179-121">Consulte o <xref:System.Windows.Documents.TextPointer.CompareTo%2A> método.</span><span class="sxs-lookup"><span data-stu-id="53179-121">See the <xref:System.Windows.Documents.TextPointer.CompareTo%2A> method.</span></span>  
  
-   <span data-ttu-id="53179-122">Determine o tipo de conteúdo adjacente à posição atual em uma direção especificada.</span><span class="sxs-lookup"><span data-stu-id="53179-122">Determine the type of content adjacent to the current position in a specified direction.</span></span>  <span data-ttu-id="53179-123">Consulte a <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> método e <xref:System.Windows.Documents.TextPointerContext> enumeração.</span><span class="sxs-lookup"><span data-stu-id="53179-123">See the <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> method and <xref:System.Windows.Documents.TextPointerContext> enumeration.</span></span>  
  
-   <span data-ttu-id="53179-124">Obter o <xref:System.Windows.Documents.TextElement> que tem como escopo ou adjacente à posição atual.</span><span class="sxs-lookup"><span data-stu-id="53179-124">Get the <xref:System.Windows.Documents.TextElement> that scopes or is adjacent to the current position.</span></span>  <span data-ttu-id="53179-125">Ver <xref:System.Windows.Documents.Paragraph> e o <xref:System.Windows.Documents.TextPointer.GetAdjacentElement%2A> método.</span><span class="sxs-lookup"><span data-stu-id="53179-125">See <xref:System.Windows.Documents.Paragraph> and the <xref:System.Windows.Documents.TextPointer.GetAdjacentElement%2A> method.</span></span>  
  
-   <span data-ttu-id="53179-126">Obter o contêiner de texto que tem como escopo o documento atual.</span><span class="sxs-lookup"><span data-stu-id="53179-126">Get the text container that scopes the current document.</span></span>  <span data-ttu-id="53179-127">Consulte a propriedade <xref:System.Windows.Documents.TextPointer.Parent%2A>.</span><span class="sxs-lookup"><span data-stu-id="53179-127">See the <xref:System.Windows.Documents.TextPointer.Parent%2A> property.</span></span>  
  
-   <span data-ttu-id="53179-128">Obter um número especificado de caracteres precede ou segue a posição atual.</span><span class="sxs-lookup"><span data-stu-id="53179-128">Get a specified number of characters preceding or following the current position.</span></span>  <span data-ttu-id="53179-129">Consulte o <xref:System.Windows.Documents.TextPointer.GetTextInRun%2A> método.</span><span class="sxs-lookup"><span data-stu-id="53179-129">See the <xref:System.Windows.Documents.TextPointer.GetTextInRun%2A> method.</span></span>  
  
-   <span data-ttu-id="53179-130">Insira uma cadeia de caracteres da posição atual.</span><span class="sxs-lookup"><span data-stu-id="53179-130">Insert a string of characters at the current position.</span></span>  <span data-ttu-id="53179-131">Consulte o <xref:System.Windows.Documents.TextPointer.InsertTextInRun%2A> método.</span><span class="sxs-lookup"><span data-stu-id="53179-131">See the <xref:System.Windows.Documents.TextPointer.InsertTextInRun%2A> method.</span></span>  
  
-   <span data-ttu-id="53179-132">Encontre os limites de linha no conteúdo.</span><span class="sxs-lookup"><span data-stu-id="53179-132">Find line boundaries in content.</span></span>  <span data-ttu-id="53179-133">Consulte a <xref:System.Windows.Documents.TextPointer.GetLineStartPosition%2A> método e <xref:System.Windows.Documents.TextPointer.IsAtLineStartPosition%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="53179-133">See the <xref:System.Windows.Documents.TextPointer.GetLineStartPosition%2A> method and <xref:System.Windows.Documents.TextPointer.IsAtLineStartPosition%2A> property.</span></span>  
  
-   <span data-ttu-id="53179-134">Converter entre <xref:System.Windows.Documents.TextPointer> deslocamentos de posições e o símbolo em conteúdo.</span><span class="sxs-lookup"><span data-stu-id="53179-134">Translate between <xref:System.Windows.Documents.TextPointer> positions and symbol offsets into content.</span></span>  <span data-ttu-id="53179-135">Consulte a <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> e <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="53179-135">See the <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> and <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> methods.</span></span>  
  
-   <span data-ttu-id="53179-136">Executar o teste de clique visual ao converter entre um <xref:System.Windows.Documents.TextPointer> posição e um <xref:System.Windows.Point> que representa as coordenadas relativas.</span><span class="sxs-lookup"><span data-stu-id="53179-136">Perform visual hit testing by translating between a <xref:System.Windows.Documents.TextPointer> position and a <xref:System.Windows.Point> representing relative coordinates.</span></span>  
  
-   <span data-ttu-id="53179-137">Localize uma posição de inserção mais próximos ou verifique se a posição atual é um ponto de inserção.</span><span class="sxs-lookup"><span data-stu-id="53179-137">Find a nearby insertion position, or check whether the current position is an insertion position.</span></span>  <span data-ttu-id="53179-138">Consulte a <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> e <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A> métodos e as <xref:System.Windows.Documents.TextPointer.IsAtInsertionPosition%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="53179-138">See the <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> and <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A> methods and the <xref:System.Windows.Documents.TextPointer.IsAtInsertionPosition%2A> property.</span></span>  
  
 <span data-ttu-id="53179-139">A posição e <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> indicado por um <xref:System.Windows.Documents.TextPointer> objeto são imutáveis.</span><span class="sxs-lookup"><span data-stu-id="53179-139">The position and <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> indicated by a <xref:System.Windows.Documents.TextPointer> object are immutable.</span></span>  <span data-ttu-id="53179-140">Quando o conteúdo é editado ou alterado, a posição indicada por um <xref:System.Windows.Documents.TextPointer> não é alterado em relação ao texto ao redor; em vez disso, o deslocamento da posição desde o início do conteúdo é ajustado de forma correspondente para refletir a nova posição relativa na conteúdo.</span><span class="sxs-lookup"><span data-stu-id="53179-140">When content is edited or modified, the position indicated by a <xref:System.Windows.Documents.TextPointer> does not change relative to the surrounding text; rather the offset of that position from the beginning of content is adjusted correspondingly to reflect the new relative position in content.</span></span>  <span data-ttu-id="53179-141">Por exemplo, um <xref:System.Windows.Documents.TextPointer> que indica uma posição no início de um determinado parágrafo continua a apontar para o início do parágrafo, mesmo quando o conteúdo é inserido ou excluído antes ou depois do parágrafo.</span><span class="sxs-lookup"><span data-stu-id="53179-141">For example, a <xref:System.Windows.Documents.TextPointer> that indicates a position at the beginning of a given paragraph continues to point to the beginning of that paragraph even when content is inserted or deleted before or after the paragraph.</span></span>  
  
 <span data-ttu-id="53179-142">O <xref:System.Windows.Documents.TextPointer> classe fornece construtores públicos.</span><span class="sxs-lookup"><span data-stu-id="53179-142">The <xref:System.Windows.Documents.TextPointer> class does not provide any public constructors.</span></span>  <span data-ttu-id="53179-143">Uma instância do <xref:System.Windows.Documents.TextPointer> é criado usando as propriedades ou métodos de outros objetos (incluindo outros <xref:System.Windows.Documents.TextPointer> objetos).</span><span class="sxs-lookup"><span data-stu-id="53179-143">An instance of <xref:System.Windows.Documents.TextPointer> is created by using properties or methods of other objects (including other <xref:System.Windows.Documents.TextPointer> objects).</span></span> <span data-ttu-id="53179-144">A lista a seguir fornece alguns exemplos de métodos e propriedades que criar e retornam um <xref:System.Windows.Documents.TextPointer>.</span><span class="sxs-lookup"><span data-stu-id="53179-144">The following list provides a few examples of methods and properties that create and return a <xref:System.Windows.Documents.TextPointer>.</span></span>  <span data-ttu-id="53179-145">Esta lista não é completa:</span><span class="sxs-lookup"><span data-stu-id="53179-145">This list is not exhaustive:</span></span>  
  
-   <span data-ttu-id="53179-146">De um <xref:System.Windows.Documents.TextRange>: <xref:System.Windows.Documents.TextRange.Start%2A> e <xref:System.Windows.Documents.TextRange.End%2A>.</span><span class="sxs-lookup"><span data-stu-id="53179-146">From a <xref:System.Windows.Documents.TextRange>: <xref:System.Windows.Documents.TextRange.Start%2A> and <xref:System.Windows.Documents.TextRange.End%2A>.</span></span>  
  
-   <span data-ttu-id="53179-147">De um <xref:System.Windows.Documents.TextElement>: <xref:System.Windows.Documents.TextElement.ContentStart%2A>, <xref:System.Windows.Documents.TextElement.ContentEnd%2A>, <xref:System.Windows.Documents.TextElement.ElementStart%2A>, e <xref:System.Windows.Documents.TextElement.ElementEnd%2A>.</span><span class="sxs-lookup"><span data-stu-id="53179-147">From a <xref:System.Windows.Documents.TextElement>:  <xref:System.Windows.Documents.TextElement.ContentStart%2A>, <xref:System.Windows.Documents.TextElement.ContentEnd%2A>, <xref:System.Windows.Documents.TextElement.ElementStart%2A>, and <xref:System.Windows.Documents.TextElement.ElementEnd%2A>.</span></span>  
  
-   <span data-ttu-id="53179-148">De um <xref:System.Windows.Controls.TextBlock> (contêiner de texto): <xref:System.Windows.Controls.TextBlock.ContentStart%2A>, <xref:System.Windows.Controls.TextBlock.ContentEnd%2A>, e <xref:System.Windows.Controls.TextBlock.GetPositionFromPoint%2A>.</span><span class="sxs-lookup"><span data-stu-id="53179-148">From a <xref:System.Windows.Controls.TextBlock> (text container): <xref:System.Windows.Controls.TextBlock.ContentStart%2A>, <xref:System.Windows.Controls.TextBlock.ContentEnd%2A>, and <xref:System.Windows.Controls.TextBlock.GetPositionFromPoint%2A>.</span></span>  
  
-   <span data-ttu-id="53179-149">De um <xref:System.Windows.Documents.FlowDocument> (contêiner de texto): <xref:System.Windows.Documents.FlowDocument.ContentStart%2A>, e <xref:System.Windows.Documents.FlowDocument.ContentEnd%2A></span><span class="sxs-lookup"><span data-stu-id="53179-149">From a <xref:System.Windows.Documents.FlowDocument> (text container): <xref:System.Windows.Documents.FlowDocument.ContentStart%2A>, and <xref:System.Windows.Documents.FlowDocument.ContentEnd%2A></span></span>  
  
-   <span data-ttu-id="53179-150">De uma já existente <xref:System.Windows.Documents.TextPointer>: <xref:System.Windows.Documents.TextPointer.DocumentStart%2A>, <xref:System.Windows.Documents.TextPointer.DocumentEnd%2A>, <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A>, e <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A>.</span><span class="sxs-lookup"><span data-stu-id="53179-150">From an existing <xref:System.Windows.Documents.TextPointer>: <xref:System.Windows.Documents.TextPointer.DocumentStart%2A>, <xref:System.Windows.Documents.TextPointer.DocumentEnd%2A>, <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A>, and <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="53179-151">O exemplo a seguir demonstra como usar um <xref:System.Windows.Documents.TextPointer> para localizar uma posição dentro do primeiro <xref:System.Windows.Documents.Run> elemento em um contêiner de texto especificado.</span><span class="sxs-lookup"><span data-stu-id="53179-151">The following example demonstrates how to use a <xref:System.Windows.Documents.TextPointer> to find a position just inside of the first <xref:System.Windows.Documents.Run> element in a specified text container.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_TextPointer1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_textpointer1)]
 [!code-vb[TextPointer_Snippets#_TextPointer_TextPointer1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_textpointer1)]  
  
 <span data-ttu-id="53179-152">O exemplo a seguir implementa um algoritmo find simplista usando <xref:System.Windows.Documents.TextPointer> instalações.</span><span class="sxs-lookup"><span data-stu-id="53179-152">The following example implements a simplistic find algorithm using <xref:System.Windows.Documents.TextPointer> facilities.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_TextPointer2](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_textpointer2)]
 [!code-vb[TextPointer_Snippets#_TextPointer_TextPointer2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_textpointer2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Documents.TextRange" />
    <altmember cref="T:System.Windows.Documents.TextPointerContext" />
    <altmember cref="T:System.Windows.Documents.TextElement" />
  </Docs>
  <Members>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (System.Windows.Documents.TextPointer position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CompareTo(class System.Windows.Documents.TextPointer position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.CompareTo(System.Windows.Documents.TextPointer)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (position As TextPointer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(System::Windows::Documents::TextPointer ^ position);" />
      <MemberSignature Language="F#" Value="member this.CompareTo : System.Windows.Documents.TextPointer -&gt; int" Usage="textPointer.CompareTo position" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Windows.Documents.TextPointer" />
      </Parameters>
      <Docs>
        <param name="position">
          <span data-ttu-id="53179-153">Um <see cref="T:System.Windows.Documents.TextPointer" /> que especifica uma posição para comparar à posição atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-153">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies a position to compare to the current position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="53179-154">Executa uma comparação ordinal entre as posições especificadas pelo <see cref="T:System.Windows.Documents.TextPointer" /> atual e um segundo <see cref="T:System.Windows.Documents.TextPointer" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-154">Performs an ordinal comparison between the positions specified by the current <see cref="T:System.Windows.Documents.TextPointer" /> and a second specified <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="53179-155">– 1 se o <see cref="T:System.Windows.Documents.TextPointer" /> atual preceder <paramref name="position" />, 0 se os locais forem iguais, +1 se o <see cref="T:System.Windows.Documents.TextPointer" /> atual seguir <paramref name="position" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-155">–1 if the current <see cref="T:System.Windows.Documents.TextPointer" /> precedes <paramref name="position" />; 0 if the locations are the same; +1 if the current <see cref="T:System.Windows.Documents.TextPointer" /> follows <paramref name="position" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53179-156">Um valor de -1 indica que a posição especificada pelo atual <xref:System.Windows.Documents.TextPointer> precede a posição especificada pela `position`.</span><span class="sxs-lookup"><span data-stu-id="53179-156">A value of –1 indicates that the position specified by the current <xref:System.Windows.Documents.TextPointer> precedes the position specified by `position`.</span></span>  <span data-ttu-id="53179-157">Um valor de 0 indica que o indicado posições são iguais.</span><span class="sxs-lookup"><span data-stu-id="53179-157">A value of 0 indicates that the indicated positions are equal.</span></span>  <span data-ttu-id="53179-158">Um valor de + 1 positivo indica que a posição especificada pelo atual <xref:System.Windows.Documents.TextPointer> segue a posição especificada pela `position`.</span><span class="sxs-lookup"><span data-stu-id="53179-158">A value of positive +1 indicates that the position specified by the current <xref:System.Windows.Documents.TextPointer> follows the position specified by `position`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="53179-159">O exemplo a seguir demonstra um uso para esse método.</span><span class="sxs-lookup"><span data-stu-id="53179-159">The following example demonstrates a use for this method.</span></span>  <span data-ttu-id="53179-160">No exemplo, o <xref:System.Windows.Documents.TextPointer.CompareTo%2A> método é usado em conjunto com o <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> método para testar se um especificado <xref:System.Windows.Documents.TextElement> está vazio.</span><span class="sxs-lookup"><span data-stu-id="53179-160">In the example, the <xref:System.Windows.Documents.TextPointer.CompareTo%2A> method is used in conjunction with the <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> method to test whether a specified <xref:System.Windows.Documents.TextElement> is empty.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetInsertionPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getinsertionposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetInsertionPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getinsertionposition)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="53179-161">
            <paramref name="position" /> especifica uma posição fora do contêiner de texto associado à posição atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-161">
              <paramref name="position" /> specifies a position outside of the text container associated with the current position.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteTextInRun">
      <MemberSignature Language="C#" Value="public int DeleteTextInRun (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 DeleteTextInRun(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeleteTextInRun (count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int DeleteTextInRun(int count);" />
      <MemberSignature Language="F#" Value="member this.DeleteTextInRun : int -&gt; int" Usage="textPointer.DeleteTextInRun count" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count">
          <span data-ttu-id="53179-162">O número de caracteres a serem excluídos, começando na posição atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-162">The number of characters to delete, starting at the current position.</span>
          </span>
          <span data-ttu-id="53179-163">Especifique um valor positivo para excluir os caracteres que seguem a posição atual; especifique um valor negativo para excluir caracteres que precedem a posição atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-163">Specify a positive value to delete characters that follow the current position; specify a negative value to delete characters that precede the current position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="53179-164">Exclui o número especificado de caracteres da posição indicada pelo <see cref="T:System.Windows.Documents.TextPointer" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-164">Deletes the specified number of characters from the position indicated by the current <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="53179-165">O número de caracteres de fato excluídos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-165">The number of characters actually deleted.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53179-166">Especifique um valor positivo para excluir caracteres que seguem a posição atual (como em <xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=nameWithType>); Especifique um valor negativo para excluir caracteres que precedem a posição atual (como em <xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="53179-166">Specify a positive value to delete characters that follow the current position (as in <xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=nameWithType>); specify a negative value to delete characters that precede the current position (as in <xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=nameWithType>).</span></span>  
  
 <span data-ttu-id="53179-167">O número de caracteres realmente excluído pode ser menor que o número especificado por `count`.</span><span class="sxs-lookup"><span data-stu-id="53179-167">The number of characters actually deleted may be less than the number specified by `count`.</span></span>  <span data-ttu-id="53179-168">Isso ocorre em casos onde `count` especifica mais caracteres do que existem para ser excluído.</span><span class="sxs-lookup"><span data-stu-id="53179-168">This happens in cases where `count` specifies more characters than exist to be deleted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="53179-169">O método é chamado em uma posição em que texto não é permitido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-169">The method is called at a position where text is not allowed.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Windows.Documents.TextPointer.GetTextInRun" />
        <altmember cref="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="DocumentEnd">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer DocumentEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.TextPointer DocumentEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.DocumentEnd" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentEnd As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::TextPointer ^ DocumentEnd { System::Windows::Documents::TextPointer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DocumentEnd : System.Windows.Documents.TextPointer" Usage="System.Windows.Documents.TextPointer.DocumentEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="53179-170">Obtém um <see cref="T:System.Windows.Documents.TextPointer" /> no fim do conteúdo no contêiner de texto associado à posição atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-170">Gets a <see cref="T:System.Windows.Documents.TextPointer" /> at the end of content in the text container associated with the current position.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="53179-171">Um <see cref="T:System.Windows.Documents.TextPointer" /> no final do conteúdo no contêiner de texto associado à posição atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-171">A <see cref="T:System.Windows.Documents.TextPointer" /> at the end of content in the text container associated with the current position.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53179-172">O <xref:System.Windows.Documents.TextPointer.Parent%2A> para retornado <xref:System.Windows.Documents.TextPointer> sempre é um contêiner de texto (<xref:System.Windows.Controls.TextBlock> ou <xref:System.Windows.Documents.FlowDocument>), em vez de um <xref:System.Windows.Documents.TextElement>.</span><span class="sxs-lookup"><span data-stu-id="53179-172">The <xref:System.Windows.Documents.TextPointer.Parent%2A> for the returned <xref:System.Windows.Documents.TextPointer> is always a text container (<xref:System.Windows.Controls.TextBlock> or <xref:System.Windows.Documents.FlowDocument>), rather than a <xref:System.Windows.Documents.TextElement>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.DocumentStart" />
      </Docs>
    </Member>
    <Member MemberName="DocumentStart">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer DocumentStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.TextPointer DocumentStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.DocumentStart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentStart As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::TextPointer ^ DocumentStart { System::Windows::Documents::TextPointer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DocumentStart : System.Windows.Documents.TextPointer" Usage="System.Windows.Documents.TextPointer.DocumentStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="53179-173">Obtém um <see cref="T:System.Windows.Documents.TextPointer" /> no início do conteúdo no contêiner de texto associado à posição atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-173">Gets a <see cref="T:System.Windows.Documents.TextPointer" /> at the beginning of content in the text container associated with the current position.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="53179-174">Um <see cref="T:System.Windows.Documents.TextPointer" /> no início do conteúdo no contêiner de texto associado à posição atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-174">A <see cref="T:System.Windows.Documents.TextPointer" /> at the beginning of content in the text container associated with the current position.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53179-175">Use a posição retornada por essa propriedade como uma posição de linha de base da qual trabalhar com deslocamentos relativos para outras posições.</span><span class="sxs-lookup"><span data-stu-id="53179-175">Use the position returned by this property as a baseline position from which to work with relative offsets to other positions.</span></span>  <span data-ttu-id="53179-176">O <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> e <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> métodos fornecem uma maneira de converter entre posições e posição deslocamentos.</span><span class="sxs-lookup"><span data-stu-id="53179-176">The <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> and <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> methods provide a way to translate between positions and position offsets.</span></span>  
  
 <span data-ttu-id="53179-177">O <xref:System.Windows.Documents.TextPointer.Parent%2A> para retornado <xref:System.Windows.Documents.TextPointer> sempre é um contêiner de texto (<xref:System.Windows.Controls.TextBlock> ou <xref:System.Windows.Documents.FlowDocument>), em vez de um <xref:System.Windows.Documents.TextElement>.</span><span class="sxs-lookup"><span data-stu-id="53179-177">The <xref:System.Windows.Documents.TextPointer.Parent%2A> for the returned <xref:System.Windows.Documents.TextPointer> is always a text container (<xref:System.Windows.Controls.TextBlock> or <xref:System.Windows.Documents.FlowDocument>), rather than a <xref:System.Windows.Documents.TextElement>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.DocumentEnd" />
      </Docs>
    </Member>
    <Member MemberName="GetAdjacentElement">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject GetAdjacentElement (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.DependencyObject GetAdjacentElement(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetAdjacentElement(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAdjacentElement (direction As LogicalDirection) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::DependencyObject ^ GetAdjacentElement(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetAdjacentElement : System.Windows.Documents.LogicalDirection -&gt; System.Windows.DependencyObject" Usage="textPointer.GetAdjacentElement direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="53179-178">Um dos valores <see cref="T:System.Windows.Documents.LogicalDirection" /> que especifica a direção lógica na qual pesquisar um elemento adjacente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-178">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for an adjacent element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="53179-179">Retorna o elemento, se houver, que limita o <see cref="T:System.Windows.Documents.TextPointer" /> atual na direção lógica especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-179">Returns the element, if any, that borders the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="53179-180">O elemento adjacente no <paramref name="direction" /> especificado ou <see langword="null" /> se nenhum elemento adjacente existir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-180">The adjacent element in the specified <paramref name="direction" />, or <see langword="null" /> if no adjacent element exists.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53179-181">O elemento retornado é geralmente um <xref:System.Windows.Documents.TextElement>.</span><span class="sxs-lookup"><span data-stu-id="53179-181">The returned element is typically a <xref:System.Windows.Documents.TextElement>.</span></span>  <span data-ttu-id="53179-182">Um <xref:System.Windows.UIElement> pode ser retornado quando o <xref:System.Windows.Documents.TextPointer> indica uma posição dentro de uma <xref:System.Windows.Documents.BlockUIContainer> elemento ou um <xref:System.Windows.Documents.InlineUIContainer> elemento.</span><span class="sxs-lookup"><span data-stu-id="53179-182">A <xref:System.Windows.UIElement> can be returned when the <xref:System.Windows.Documents.TextPointer> indicates a position inside a <xref:System.Windows.Documents.BlockUIContainer> element or an <xref:System.Windows.Documents.InlineUIContainer> element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.Parent" />
      </Docs>
    </Member>
    <Member MemberName="GetCharacterRect">
      <MemberSignature Language="C#" Value="public System.Windows.Rect GetCharacterRect (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Rect GetCharacterRect(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetCharacterRect(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCharacterRect (direction As LogicalDirection) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Rect GetCharacterRect(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetCharacterRect : System.Windows.Documents.LogicalDirection -&gt; System.Windows.Rect" Usage="textPointer.GetCharacterRect direction" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.GetCharacterRect(System.Windows.Documents.LogicalDirection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="53179-183">Um dos valores <see cref="T:System.Windows.Documents.LogicalDirection" /> que especifica a direção lógica na qual localizar uma caixa delimitadora de conteúdo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-183">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to find a content bounding box.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="53179-184">Retorna uma caixa delimitadora (<see cref="T:System.Windows.Rect" />) para o conteúdo que limita o <see cref="T:System.Windows.Documents.TextPointer" /> atual na direção lógica especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-184">Returns a bounding box (<see cref="T:System.Windows.Rect" />) for content that borders the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="53179-185">Uma caixa delimitadora para o conteúdo que limita o <see cref="T:System.Windows.Documents.TextPointer" /> atual na direção especificada ou <see cref="P:System.Windows.Rect.Empty" /> se informações de layout atuais e válidas não estiverem disponíveis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-185">A bounding box for content that borders the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified direction, or <see cref="P:System.Windows.Rect.Empty" /> if current, valid layout information is unavailable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53179-186"><xref:System.Windows.Documents.TextElement> as bordas não são consideradas conteúdo para os fins deste método.</span><span class="sxs-lookup"><span data-stu-id="53179-186"><xref:System.Windows.Documents.TextElement> edges are not considered content for the purposes of this method.</span></span>  <span data-ttu-id="53179-187">Se o <xref:System.Windows.Documents.TextPointer> é posicionado antes de uma <xref:System.Windows.Documents.TextElement> edge, o valor de retorno é uma caixa delimitadora para o próximo não -<xref:System.Windows.Documents.TextElement> conteúdo na direção especificada.</span><span class="sxs-lookup"><span data-stu-id="53179-187">If the <xref:System.Windows.Documents.TextPointer> is positioned before a <xref:System.Windows.Documents.TextElement> edge, the return value is a bounding box for the next non-<xref:System.Windows.Documents.TextElement> content in the specified direction.</span></span>  <span data-ttu-id="53179-188">Se não houver nenhum conteúdo na direção especificada, uma largura de zero <xref:System.Windows.Rect> é retornado com uma altura correspondente a altura das qualquer anteriores conteúda.</span><span class="sxs-lookup"><span data-stu-id="53179-188">If there is no content in the specified direction, a zero-width <xref:System.Windows.Rect> is returned with a height matching the height of any preceding content.</span></span>  
  
 <span data-ttu-id="53179-189">A operação executada por esse método depende de um layout válido.</span><span class="sxs-lookup"><span data-stu-id="53179-189">The operation performed by this method depends on a valid layout.</span></span>  <span data-ttu-id="53179-190">Quando necessário, esse método tenta gerar automaticamente um layout válido antes de continuar com a operação.</span><span class="sxs-lookup"><span data-stu-id="53179-190">When necessary, this method attempts to automatically regenerate a valid layout before proceeding with the operation.</span></span>  <span data-ttu-id="53179-191">Regenerar um layout pode ser uma operação relativamente cara.</span><span class="sxs-lookup"><span data-stu-id="53179-191">Regenerating a layout can be a relatively expensive operation.</span></span>  <span data-ttu-id="53179-192">Use o <xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> propriedade para verificar se há um layout válido antes de executar operações que podem regenerar o layout.</span><span class="sxs-lookup"><span data-stu-id="53179-192">Use the <xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> property to check for a valid layout before performing operations that may regenerate the layout.</span></span>  <span data-ttu-id="53179-193">Veja [Layout](~/docs/framework/wpf/advanced/layout.md) para obter mais informações.</span><span class="sxs-lookup"><span data-stu-id="53179-193">For more information, see [Layout](~/docs/framework/wpf/advanced/layout.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.HasValidLayout" />
      </Docs>
    </Member>
    <Member MemberName="GetInsertionPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetInsertionPosition (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetInsertionPosition(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertionPosition (direction As LogicalDirection) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetInsertionPosition(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetInsertionPosition : System.Windows.Documents.LogicalDirection -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetInsertionPosition direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="53179-194">Um dos valores <see cref="T:System.Windows.Documents.LogicalDirection" /> que especifica a direção lógica na qual pesquisar a posição de inserção mais próxima.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-194">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for the closest insertion position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="53179-195">Retorna um <see cref="T:System.Windows.Documents.TextPointer" /> para a posição de inserção mais próxima na direção lógica especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-195">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the closest insertion position in the specified logical direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="53179-196">Um <see cref="T:System.Windows.Documents.TextPointer" /> para a posição de inserção mais próxima na direção especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-196">A <see cref="T:System.Windows.Documents.TextPointer" /> to the closest insertion position in the specified direction.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53179-197">Um ponto de inserção é uma posição em que o novo conteúdo pode ser adicionado sem interromper todas as regras semânticas para o conteúdo associado.</span><span class="sxs-lookup"><span data-stu-id="53179-197">An insertion position is a position where new content may be added without breaking any semantic rules for the associated content.</span></span>  <span data-ttu-id="53179-198">Na prática, um ponto de inserção é em qualquer lugar no conteúdo em que um cursor do sistema pode ser posicionado.</span><span class="sxs-lookup"><span data-stu-id="53179-198">In practice, an insertion position is anywhere in content where a caret may be positioned.</span></span>  <span data-ttu-id="53179-199">Um exemplo de válida <xref:System.Windows.Documents.TextPointer> posição que não é um ponto de inserção é a posição entre dois adjacentes <xref:System.Windows.Documents.Paragraph> marcas (ou seja, entre a marca de fechamento do parágrafo anterior e a marca de abertura do próximo parágrafo).</span><span class="sxs-lookup"><span data-stu-id="53179-199">An example of a valid <xref:System.Windows.Documents.TextPointer> position that is not an insertion position is the position between two adjacent <xref:System.Windows.Documents.Paragraph> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</span></span>  
  
 <span data-ttu-id="53179-200">Se o <xref:System.Windows.Documents.TextPointer> já aponta para uma posição de inserção válido, mas a marca de fechamento para uma sequência de formatação vazio segue diretamente nessa posição na direção de determinado, em seguida, a <xref:System.Windows.Documents.TextPointer> retornado por este método é ajustado para apontar para a inserção posição logo após o fechamento da sequência de formatação.</span><span class="sxs-lookup"><span data-stu-id="53179-200">If the <xref:System.Windows.Documents.TextPointer> already points to a valid insertion position, but the closing tag for a non-empty formatting sequence directly follows that position in the given direction, then the <xref:System.Windows.Documents.TextPointer> returned by this method is adjusted to point to the insertion position just after the close of the formatting sequence.</span></span> <span data-ttu-id="53179-201">Por exemplo, considere a sequência de marcação `<Bold>a</Bold>b`.</span><span class="sxs-lookup"><span data-stu-id="53179-201">For example, consider the markup sequence `<Bold>a</Bold>b`.</span></span> <span data-ttu-id="53179-202">Observe que há duas posições de inserção entre as letras `a` e `b` — um que precede o `Bold` marca e um diretamente após o fechamento `Bold` marca.</span><span class="sxs-lookup"><span data-stu-id="53179-202">Note that there are two insertion positions between the letters `a` and `b` — one that precedes the closing `Bold` tag, and one directly following the closing `Bold` tag.</span></span> <span data-ttu-id="53179-203">Se <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> é chamado em um <xref:System.Windows.Documents.TextPointer> para a posição logo após a letra `a` e antes do fechamento `Bold` marca e com um `direction` de <xref:System.Windows.Documents.LogicalDirection.Forward>, retornado <xref:System.Windows.Documents.TextPointer> é ajustado para apontar para o posição imediatamente antes da letra `b`, após o fechamento `Bold` marca.</span><span class="sxs-lookup"><span data-stu-id="53179-203">If <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> is called on a <xref:System.Windows.Documents.TextPointer> to the position directly after the letter `a` and before of the closing `Bold` tag, and with a `direction` of <xref:System.Windows.Documents.LogicalDirection.Forward>, the returned <xref:System.Windows.Documents.TextPointer> is adjusted to point to the position just before the letter `b`, after the closing `Bold` tag.</span></span> <span data-ttu-id="53179-204">Um ajuste semelhante é feito para abrir as marcas de formatação ao trabalhar na direção lógica oposta.</span><span class="sxs-lookup"><span data-stu-id="53179-204">A similar adjustment is made for opening formatting tags when working in the opposite logical direction.</span></span> <span data-ttu-id="53179-205">Este método destina-se a fornecer um meio de desambiguidade entre as posições de inserção em casos semelhantes.</span><span class="sxs-lookup"><span data-stu-id="53179-205">This method is intended to provide a means of disambiguation between insertion positions in similar cases.</span></span>  
  
 <span data-ttu-id="53179-206">Esse método também pode ser usado para ser seletivo sobre pontos de inserção quando uma sequência de marcas estruturais está envolvida.</span><span class="sxs-lookup"><span data-stu-id="53179-206">This method can also be used to be selective about insertion points when a sequence of structural tags is involved.</span></span> <span data-ttu-id="53179-207">Por exemplo, quando estiver em uma posição entre as marcas de parágrafo de abertura e fechamento, a direção de parâmetro pode ser usada para selecionar o ponto de inserção mais próximo no início do parágrafo seguinte (especificando <xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=nameWithType>) ou no final no (parágrafo anterior especificando <xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="53179-207">For example, when at a position between closing and opening paragraph tags, the direction parameter can be used to select the closest insertion point at the beginning of the following paragraph (by specifying <xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=nameWithType>) or at the end of the preceding paragraph (by specifying <xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=nameWithType>).</span></span>  
  
 <span data-ttu-id="53179-208">Se o ponteiro já está na posição de inserção, e não há nenhuma marca de formatação adjacente especificado na `direction`, retornado <xref:System.Windows.Documents.TextPointer> aponta para a mesma posição que chamada <xref:System.Windows.Documents.TextPointer>.</span><span class="sxs-lookup"><span data-stu-id="53179-208">If the pointer is already at insertion position, and there are no adjacent formatting tags in the specified `direction`, the returned <xref:System.Windows.Documents.TextPointer> points to the same position as the calling <xref:System.Windows.Documents.TextPointer>.</span></span>  
  
 <span data-ttu-id="53179-209">É possível que nenhuma posição de inserção válido existe em relação à posição apontada to por um <xref:System.Windows.Documents.TextPointer>.</span><span class="sxs-lookup"><span data-stu-id="53179-209">It is possible that no valid insertion position exists relative to the position pointed to by a <xref:System.Windows.Documents.TextPointer>.</span></span>  <span data-ttu-id="53179-210">Isso pode acontecer se o conteúdo referenciado está estruturalmente incompleto, como em uma tabela vazia ou uma lista.</span><span class="sxs-lookup"><span data-stu-id="53179-210">This can happen if the referenced content is structurally incomplete, as in an empty table or list.</span></span>  <span data-ttu-id="53179-211">Nesses casos, esse método simplesmente retorna uma <xref:System.Windows.Documents.TextPointer> para a mesma posição que o <xref:System.Windows.Documents.TextPointer> do qual esse método foi chamado.</span><span class="sxs-lookup"><span data-stu-id="53179-211">In such cases, this method simply returns a <xref:System.Windows.Documents.TextPointer> to the same position as the <xref:System.Windows.Documents.TextPointer> from which this method was called.</span></span>  <span data-ttu-id="53179-212">Esse método sempre retorna válido <xref:System.Windows.Documents.TextPointer>.</span><span class="sxs-lookup"><span data-stu-id="53179-212">This method always returns a valid <xref:System.Windows.Documents.TextPointer>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="53179-213">Este exemplo mostra como usar o <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> método para verificar se determinado <xref:System.Windows.Documents.TextElement> está vazia de conteúdo imprimível.</span><span class="sxs-lookup"><span data-stu-id="53179-213">This example shows how to use the <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> method to check whether a specified <xref:System.Windows.Documents.TextElement> is empty of printable content.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetInsertionPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getinsertionposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetInsertionPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getinsertionposition)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetLineStartPosition">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="53179-214">Retorna um <see cref="T:System.Windows.Documents.TextPointer" /> para o início de uma linha especificada em relação ao <see cref="T:System.Windows.Documents.TextPointer" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-214">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning of a line that is specified relative to the current <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetLineStartPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetLineStartPosition (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetLineStartPosition(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLineStartPosition (count As Integer) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetLineStartPosition(int count);" />
      <MemberSignature Language="F#" Value="member this.GetLineStartPosition : int -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetLineStartPosition count" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count">
          <span data-ttu-id="53179-215">O número de marcadores de início de linha a serem ignorados ao determinar a linha para a qual a posição inicial será retornada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-215">The number of start-of-line markers to skip when determining the line for which to return the starting position.</span>
          </span>
          <span data-ttu-id="53179-216">Valores negativos especificam linhas precedentes, 0 especifica a linha atual e valores positivos especificam linhas subsequentes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-216">Negative values specify preceding lines, 0 specifies the current line, and positive values specify following lines.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="53179-217">Retorna um <see cref="T:System.Windows.Documents.TextPointer" /> para o início de uma linha especificada em relação ao <see cref="T:System.Windows.Documents.TextPointer" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-217">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning of a line that is specified relative to the current <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="53179-218">Um <see cref="T:System.Windows.Documents.TextPointer" /> que aponta para o início da linha especificada (com o <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> definido como <see cref="F:System.Windows.Documents.LogicalDirection.Forward" />) ou <see langword="null" /> se a linha especificada estiver fora do intervalo ou não puder ser localizada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-218">A <see cref="T:System.Windows.Documents.TextPointer" /> pointing to the beginning of the specified line (with the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> set to <see cref="F:System.Windows.Documents.LogicalDirection.Forward" />), or <see langword="null" /> if the specified line is out of range or otherwise cannot be located.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53179-219">Se o <xref:System.Windows.Documents.TextPointer> aponta para uma posição ambígua, por exemplo, entre duas linhas, a linha na direção especificada por <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> é selecionado como a linha de início relativa.</span><span class="sxs-lookup"><span data-stu-id="53179-219">If the <xref:System.Windows.Documents.TextPointer> points to an ambiguous position, for example, between two lines, the line in the direction specified by <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> is selected as the relative starting line.</span></span>  
  
 <span data-ttu-id="53179-220">A operação executada por esse método depende de um layout válido.</span><span class="sxs-lookup"><span data-stu-id="53179-220">The operation performed by this method depends on a valid layout.</span></span>  <span data-ttu-id="53179-221">Quando necessário, esse método tenta gerar automaticamente um layout válido antes de continuar com a operação.</span><span class="sxs-lookup"><span data-stu-id="53179-221">When necessary, this method attempts to automatically regenerate a valid layout before proceeding with the operation.</span></span>  <span data-ttu-id="53179-222">Regenerar um layout pode ser uma operação relativamente cara.</span><span class="sxs-lookup"><span data-stu-id="53179-222">Regenerating a layout can be a relatively expensive operation.</span></span>  <span data-ttu-id="53179-223">Use <xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> para verificar se há um layout válido antes de executar operações que podem regenerar o layout.</span><span class="sxs-lookup"><span data-stu-id="53179-223">Use <xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> to check for a valid layout before performing operations that may regenerate the layout.</span></span>  <span data-ttu-id="53179-224">Veja [Layout](~/docs/framework/wpf/advanced/layout.md) para obter mais informações.</span><span class="sxs-lookup"><span data-stu-id="53179-224">For more information, see [Layout](~/docs/framework/wpf/advanced/layout.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLineStartPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetLineStartPosition (int count, out int actualCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetLineStartPosition(int32 count, [out] int32&amp; actualCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLineStartPosition (count As Integer, ByRef actualCount As Integer) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetLineStartPosition(int count, [Runtime::InteropServices::Out] int % actualCount);" />
      <MemberSignature Language="F#" Value="member this.GetLineStartPosition : int *  -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetLineStartPosition (count, actualCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="actualCount" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="count">
          <span data-ttu-id="53179-225">O número de marcadores de início de linha a serem ignorados ao determinar a linha para a qual a posição inicial será retornada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-225">The number of start-of-line markers to skip when determining the line for which to return the starting position.</span>
          </span>
          <span data-ttu-id="53179-226">Valores negativos especificam linhas precedentes, 0 especifica a linha atual e valores positivos especificam linhas subsequentes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-226">Negative values specify preceding lines, 0 specifies the current line, and positive values specify following lines.</span>
          </span>
        </param>
        <param name="actualCount">
          <span data-ttu-id="53179-227">Quando este método retorna, contém o número real de marcadores de início de linha que foram ignorados ao determinar a linha para a qual retornar a posição inicial.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-227">When this method returns, contains the actual number of start-of-line markers that were skipped when determining the line for which to return the starting position.</span>
          </span>
          <span data-ttu-id="53179-228">Este valor poderá ser menor que <c>count</c> se o início ou final do conteúdo for encontrado antes que o número especificado de linhas seja ignorado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-228">This value may be less than <c>count</c> if the beginning or end of content is encountered before the specified number of lines are skipped.</span>
          </span>
          <span data-ttu-id="53179-229">Este parâmetro é passado não inicializado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-229">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="53179-230">Retorna um <see cref="T:System.Windows.Documents.TextPointer" /> para o início de uma linha especificada em relação ao <see cref="T:System.Windows.Documents.TextPointer" /> atual e informa quantas linhas foram ignoradas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-230">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning of a line that is specified relative to the current <see cref="T:System.Windows.Documents.TextPointer" />, and reports how many lines were skipped.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="53179-231">Um <see cref="T:System.Windows.Documents.TextPointer" /> que apontará para o início da linha especificada (com o <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> definido como <see cref="F:System.Windows.Documents.LogicalDirection.Forward" />) ou para o início da linha mais próxima à linha especificada se a linha especificada estiver fora do intervalo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-231">A <see cref="T:System.Windows.Documents.TextPointer" /> pointing to the beginning of the specified line (with the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> set to <see cref="F:System.Windows.Documents.LogicalDirection.Forward" />), or to the beginning of the line closest to the specified line if the specified line is out of range.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53179-232">Se o <xref:System.Windows.Documents.TextPointer> aponta para uma posição ambígua, por exemplo, entre duas linhas, a linha na direção especificada pelo <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> propriedade é selecionada como a linha de início relativa.</span><span class="sxs-lookup"><span data-stu-id="53179-232">If the <xref:System.Windows.Documents.TextPointer> points to an ambiguous position, for example, between two lines, the line in the direction specified by the <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> property is selected as the relative starting line.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextContextPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetNextContextPosition (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetNextContextPosition(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetNextContextPosition(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNextContextPosition (direction As LogicalDirection) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetNextContextPosition(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetNextContextPosition : System.Windows.Documents.LogicalDirection -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetNextContextPosition direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="53179-233">Um dos valores <see cref="T:System.Windows.Documents.LogicalDirection" /> que especifica a direção lógica na qual pesquisar o próximo símbolo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-233">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for the next symbol.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="53179-234">Retorna um ponteiro para o próximo símbolo na direção lógica especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-234">Returns a pointer to the next symbol in the specified logical direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="53179-235">Um <see cref="T:System.Windows.Documents.TextPointer" /> para o próximo símbolo na direção solicitada ou <see langword="null" /> se o <see cref="T:System.Windows.Documents.TextPointer" /> atual limitar o início ou o fim do conteúdo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-235">A <see cref="T:System.Windows.Documents.TextPointer" /> to the next symbol in the requested direction, or <see langword="null" /> if the current <see cref="T:System.Windows.Documents.TextPointer" /> borders the start or end of content.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53179-236">Qualquer um dos seguintes é considerado um símbolo:</span><span class="sxs-lookup"><span data-stu-id="53179-236">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="53179-237">Uma marca de abertura ou para um <xref:System.Windows.Documents.TextElement> elemento.</span><span class="sxs-lookup"><span data-stu-id="53179-237">An opening or closing tag for a <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="53179-238">Um <xref:System.Windows.UIElement> elemento contido em um <xref:System.Windows.Documents.InlineUIContainer> ou <xref:System.Windows.Documents.BlockUIContainer>.</span><span class="sxs-lookup"><span data-stu-id="53179-238">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="53179-239">Observe que essas uma <xref:System.Windows.UIElement> sempre são contados como exatamente um símbolo; qualquer conteúdo adicional ou elementos contidos pelo <xref:System.Windows.UIElement> não são contadas como símbolos.</span><span class="sxs-lookup"><span data-stu-id="53179-239">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="53179-240">De 16 bits [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] caractere dentro de um texto <xref:System.Windows.Documents.Run> elemento.</span><span class="sxs-lookup"><span data-stu-id="53179-240">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
 <span data-ttu-id="53179-241">Se o próximo símbolo é categorizado como <xref:System.Windows.Documents.TextPointerContext.EmbeddedElement>, <xref:System.Windows.Documents.TextPointerContext.ElementStart>, ou <xref:System.Windows.Documents.TextPointerContext.ElementEnd> (conforme identificado pela <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> método), em seguida, a <xref:System.Windows.Documents.TextPointer> retornado por este método é adiantado por exatamente um símbolo da posição atual.</span><span class="sxs-lookup"><span data-stu-id="53179-241">If the next symbol is categorized as <xref:System.Windows.Documents.TextPointerContext.EmbeddedElement>, <xref:System.Windows.Documents.TextPointerContext.ElementStart>, or <xref:System.Windows.Documents.TextPointerContext.ElementEnd> (as identified by the <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> method), then the <xref:System.Windows.Documents.TextPointer> returned by this method is advanced by exactly one symbol from the current position.</span></span>  
  
 <span data-ttu-id="53179-242">Se o próximo símbolo é categorizado como <xref:System.Windows.Documents.TextPointerContext.Text>, em seguida, a <xref:System.Windows.Documents.TextPointer> retornado por este método é ultrapassaram o texto para o próximo símbolo que não sejam de texto (ou seja, a próxima posição em que o <xref:System.Windows.Documents.TextPointerContext> não é <xref:System.Windows.Documents.TextPointerContext.Text>).</span><span class="sxs-lookup"><span data-stu-id="53179-242">If the next symbol is categorized as <xref:System.Windows.Documents.TextPointerContext.Text>, then the <xref:System.Windows.Documents.TextPointer> returned by this method is advanced past the text to the next non-text symbol (that is, the next position where the <xref:System.Windows.Documents.TextPointerContext> is not <xref:System.Windows.Documents.TextPointerContext.Text>).</span></span>  <span data-ttu-id="53179-243">A contagem exata de símbolo cruzada pode ser calculada com antecedência, chamando o <xref:System.Windows.Documents.TextPointer.GetTextRunLength%2A> método.</span><span class="sxs-lookup"><span data-stu-id="53179-243">The exact symbol count crossed can be calculated in advance by calling the <xref:System.Windows.Documents.TextPointer.GetTextRunLength%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="53179-244">O exemplo a seguir demonstra um uso para esse método.</span><span class="sxs-lookup"><span data-stu-id="53179-244">The following example demonstrates a use for this method.</span></span>  <span data-ttu-id="53179-245">O exemplo usa o <xref:System.Windows.Documents.TextPointer.GetNextContextPosition%2A> método em conjunto com o <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> método percorrer e extrair os símbolos em um especificado <xref:System.Windows.Documents.TextElement>.</span><span class="sxs-lookup"><span data-stu-id="53179-245">The example uses the <xref:System.Windows.Documents.TextPointer.GetNextContextPosition%2A> method in conjunction with the <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> method to traverse and extract the symbols in a specified <xref:System.Windows.Documents.TextElement>.</span></span>  
  
 <span data-ttu-id="53179-246">Embora o exemplo pode ser usado para extrair uma [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] estrutura para o conteúdo de um determinado <xref:System.Windows.Documents.TextElement>, ele é destinado apenas para fins ilustrativos e não deve ser usado no código de produção.</span><span class="sxs-lookup"><span data-stu-id="53179-246">While the example can be used to extract a [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] structure for the contents of a given <xref:System.Windows.Documents.TextElement>, it is intended for illustrative purposes only, and should not be used in production code.</span></span>  <span data-ttu-id="53179-247">Consulte o <xref:System.Xml> namespace para um rico conjunto de tipos projetados para trabalhar com e processamento de XML.</span><span class="sxs-lookup"><span data-stu-id="53179-247">See the <xref:System.Xml> namespace for a rich set of types designed for working with and processing XML.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetNextContextPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getnextcontextposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetNextContextPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getnextcontextposition)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextInsertionPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetNextInsertionPosition (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetNextInsertionPosition(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNextInsertionPosition (direction As LogicalDirection) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetNextInsertionPosition(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetNextInsertionPosition : System.Windows.Documents.LogicalDirection -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetNextInsertionPosition direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="53179-248">Um dos valores <see cref="T:System.Windows.Documents.LogicalDirection" /> que especifica a direção lógica na qual pesquisar a próxima posição de inserção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-248">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for the next insertion position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="53179-249">Retorna um <see cref="T:System.Windows.Documents.TextPointer" /> para a próxima posição de inserção na direção lógica especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-249">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the next insertion position in the specified logical direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="53179-250">Um <see cref="T:System.Windows.Documents.TextPointer" /> que identifica a próxima posição de inserção na direção solicitada ou <see langword="null" /> se a próxima posição de inserção não puder ser encontrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-250">A <see cref="T:System.Windows.Documents.TextPointer" /> that identifies the next insertion position in the requested direction, or <see langword="null" /> if no next insertion position can be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53179-251">Uma *posição de inserção* é uma posição em que o novo conteúdo pode ser adicionado sem interromper todas as regras semânticas para o conteúdo associado.</span><span class="sxs-lookup"><span data-stu-id="53179-251">An *insertion position* is a position where new content may be added without breaking any semantic rules for the associated content.</span></span>  <span data-ttu-id="53179-252">Na prática, um ponto de inserção é em qualquer lugar no conteúdo em que um cursor do sistema pode ser posicionado.</span><span class="sxs-lookup"><span data-stu-id="53179-252">In practice, an insertion position is anywhere in content where a caret may be positioned.</span></span>  <span data-ttu-id="53179-253">Um exemplo de válida <xref:System.Windows.Documents.TextPointer> posição que não é um ponto de inserção é a posição entre dois adjacentes <xref:System.Windows.Documents.Paragraph> marcas (ou seja, entre a marca de fechamento do parágrafo anterior e a marca de abertura do próximo parágrafo).</span><span class="sxs-lookup"><span data-stu-id="53179-253">An example of a valid <xref:System.Windows.Documents.TextPointer> position that is not an insertion position is the position between two adjacent <xref:System.Windows.Documents.Paragraph> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="53179-254">O exemplo a seguir demonstra um uso para esse método.</span><span class="sxs-lookup"><span data-stu-id="53179-254">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="53179-255">O exemplo usa o <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A> método para percorrer os limites do elemento de conteúdo para contar o número de <xref:System.Windows.Documents.Paragraph> elementos apresentam entre dois especificado <xref:System.Windows.Documents.TextPointer> instâncias.</span><span class="sxs-lookup"><span data-stu-id="53179-255">The example uses the <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A> method to traverse content element boundaries in order to count the number of <xref:System.Windows.Documents.Paragraph> elements present between two specified <xref:System.Windows.Documents.TextPointer> instances.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetNextInsertionPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getnextinsertionposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetNextInsertionPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getnextinsertionposition)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      </Docs>
    </Member>
    <Member MemberName="GetOffsetToPosition">
      <MemberSignature Language="C#" Value="public int GetOffsetToPosition (System.Windows.Documents.TextPointer position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetOffsetToPosition(class System.Windows.Documents.TextPointer position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOffsetToPosition (position As TextPointer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetOffsetToPosition(System::Windows::Documents::TextPointer ^ position);" />
      <MemberSignature Language="F#" Value="member this.GetOffsetToPosition : System.Windows.Documents.TextPointer -&gt; int" Usage="textPointer.GetOffsetToPosition position" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Windows.Documents.TextPointer" />
      </Parameters>
      <Docs>
        <param name="position">
          <span data-ttu-id="53179-256">Um <see cref="T:System.Windows.Documents.TextPointer" /> que especifica uma posição da qual encontrar a distância (em símbolos).</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-256">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies a position to find the distance (in symbols) to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="53179-257">Retorna a contagem de símbolos entre o <see cref="T:System.Windows.Documents.TextPointer" /> atual e um segundo <see cref="T:System.Windows.Documents.TextPointer" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-257">Returns the count of symbols between the current <see cref="T:System.Windows.Documents.TextPointer" /> and a second specified <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="53179-258">O número relativo de símbolos entre o <see cref="T:System.Windows.Documents.TextPointer" /> atual e <paramref name="position" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-258">The relative number of symbols between the current <see cref="T:System.Windows.Documents.TextPointer" /> and <paramref name="position" />.</span>
          </span>
          <span data-ttu-id="53179-259">Um valor negativo indica que o <see cref="T:System.Windows.Documents.TextPointer" /> atual segue a posição especificada por <paramref name="position" />, 0 indica que as posições são iguais e um valor positivo indica que o <see cref="T:System.Windows.Documents.TextPointer" /> atual precede a posição especificada por <paramref name="position" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-259">A negative value indicates that the current <see cref="T:System.Windows.Documents.TextPointer" /> follows the position specified by <paramref name="position" />, 0 indicates that the positions are equal, and a positive value indicates that the current <see cref="T:System.Windows.Documents.TextPointer" /> precedes the position specified by <paramref name="position" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53179-260">Qualquer um dos seguintes é considerado um símbolo:</span><span class="sxs-lookup"><span data-stu-id="53179-260">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="53179-261">Uma marca de abertura ou para um <xref:System.Windows.Documents.TextElement> elemento.</span><span class="sxs-lookup"><span data-stu-id="53179-261">An opening or closing tag for a <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="53179-262">Um <xref:System.Windows.UIElement> elemento contido em um <xref:System.Windows.Documents.InlineUIContainer> ou <xref:System.Windows.Documents.BlockUIContainer>.</span><span class="sxs-lookup"><span data-stu-id="53179-262">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="53179-263">Observe que essas uma <xref:System.Windows.UIElement> sempre são contados como exatamente um símbolo; qualquer conteúdo adicional ou elementos contidos pelo <xref:System.Windows.UIElement> não são contadas como símbolos.</span><span class="sxs-lookup"><span data-stu-id="53179-263">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="53179-264">De 16 bits [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] caractere dentro de um texto <xref:System.Windows.Documents.Run> elemento.</span><span class="sxs-lookup"><span data-stu-id="53179-264">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="53179-265">O exemplo a seguir demonstra um uso para esse método.</span><span class="sxs-lookup"><span data-stu-id="53179-265">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="53179-266">O exemplo usa o <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> método para encontrar os deslocamentos de dois <xref:System.Windows.Documents.TextPointer> instâncias e, em seguida, usa essas informações para salvar e restaurar a seleção em um <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="53179-266">The example uses the <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> method to find the offsets for two <xref:System.Windows.Documents.TextPointer> instances, and then uses this information to save and restore the selection in a <xref:System.Windows.Controls.RichTextBox>.</span></span>  <span data-ttu-id="53179-267">O exemplo supõe que o conteúdo do <xref:System.Windows.Controls.RichTextBox> não foram alterados entre uma seleção de salvamento e restauração de uma seleção.</span><span class="sxs-lookup"><span data-stu-id="53179-267">The example assumes that the contents of the <xref:System.Windows.Controls.RichTextBox> have not changed between a selection save and a selection restore.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetOffsetToPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getoffsettoposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetOffsetToPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getoffsettoposition)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="53179-268">
            <paramref name="position" /> especifica uma posição fora do contêiner de texto associado à posição atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-268">
              <paramref name="position" /> specifies a position outside of the text container associated with the current position.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Windows.Documents.TextPointer.GetPositionAtOffset" />
        <altmember cref="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)" />
      </Docs>
    </Member>
    <Member MemberName="GetPointerContext">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointerContext GetPointerContext (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Documents.TextPointerContext GetPointerContext(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetPointerContext(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPointerContext (direction As LogicalDirection) As TextPointerContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointerContext GetPointerContext(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetPointerContext : System.Windows.Documents.LogicalDirection -&gt; System.Windows.Documents.TextPointerContext" Usage="textPointer.GetPointerContext direction" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.GetPointerContext(System.Windows.Documents.LogicalDirection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointerContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="53179-269">Um dos valores <see cref="T:System.Windows.Documents.LogicalDirection" /> que especifica a direção lógica na qual determinar a categoria do conteúdo adjacente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-269">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to determine the category for adjacent content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="53179-270">Retorna um indicador de categoria para o conteúdo adjacente ao <see cref="T:System.Windows.Documents.TextPointer" /> atual na direção lógica especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-270">Returns a category indicator for the content adjacent to the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="53179-271">Um dos valores <see cref="T:System.Windows.Documents.TextPointerContext" /> que indica a categoria para o conteúdo adjacente na direção lógica especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-271">One of the <see cref="T:System.Windows.Documents.TextPointerContext" /> values that indicates the category for adjacent content in the specified logical direction.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="53179-272">O exemplo a seguir demonstra um uso para esse método.</span><span class="sxs-lookup"><span data-stu-id="53179-272">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="53179-273">O exemplo usa o <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> método para implementar um algoritmo para calcular o saldo de abertura e fechamento de marcas de elemento entre dois especificado <xref:System.Windows.Documents.TextPointer> posições.</span><span class="sxs-lookup"><span data-stu-id="53179-273">The example uses the <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> method to implement an algorithm for calculating the balance of opening and closing element tags between two specified <xref:System.Windows.Documents.TextPointer> positions.</span></span>  <span data-ttu-id="53179-274">Cada marca de elemento de abertura é contada como + 1 e cada elemento de marca de fechamento é contabilizada como -1.</span><span class="sxs-lookup"><span data-stu-id="53179-274">Each opening element tag is counted as +1, and each closing element tag is counted as –1.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetOffsetToPosition2](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getoffsettoposition2)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetOffsetToPosition2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getoffsettoposition2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPositionAtOffset">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="53179-275">Retorna um <see cref="T:System.Windows.Documents.TextPointer" /> à posição indicada pelo deslocamento especificado, em símbolos, do início do conteúdo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-275">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, in symbols, from the beginning of content.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPositionAtOffset">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetPositionAtOffset (int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetPositionAtOffset(int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPositionAtOffset (offset As Integer) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetPositionAtOffset(int offset);" />
      <MemberSignature Language="F#" Value="member this.GetPositionAtOffset : int -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetPositionAtOffset offset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="53179-276">Um deslocamento, em símbolos, para o qual calcular e retornar a posição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-276">An offset, in symbols, for which to calculate and return the position.</span>
          </span>
          <span data-ttu-id="53179-277">Se o deslocamento for negativo, a posição será calculada na direção lógica oposta àquela indicada pela propriedade <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-277">If the offset is negative, the position is calculated in the logical direction opposite of that indicated by the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="53179-278">Retorna um <see cref="T:System.Windows.Documents.TextPointer" /> à posição indicada pelo deslocamento especificado nos símbolos, desde o início do <see cref="T:System.Windows.Documents.TextPointer" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-278">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, in symbols, from the beginning of the current <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="53179-279">Um <see cref="T:System.Windows.Documents.TextPointer" /> para a posição indicada pelo deslocamento especificado ou <see langword="null" /> se nenhuma posição correspondente puder ser encontrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-279">A <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, or <see langword="null" /> if no corresponding position can be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53179-280">Qualquer um dos seguintes é considerado um símbolo:</span><span class="sxs-lookup"><span data-stu-id="53179-280">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="53179-281">Uma marca de abertura ou para o <xref:System.Windows.Documents.TextElement> elemento.</span><span class="sxs-lookup"><span data-stu-id="53179-281">An opening or closing tag for the <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="53179-282">Um <xref:System.Windows.UIElement> elemento contido em um <xref:System.Windows.Documents.InlineUIContainer> ou <xref:System.Windows.Documents.BlockUIContainer>.</span><span class="sxs-lookup"><span data-stu-id="53179-282">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="53179-283">Observe que essas uma <xref:System.Windows.UIElement> sempre são contados como exatamente um símbolo; qualquer conteúdo adicional ou elementos contidos pelo <xref:System.Windows.UIElement> não são contadas como símbolos.</span><span class="sxs-lookup"><span data-stu-id="53179-283">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="53179-284">De 16 bits [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] caractere dentro de um texto <xref:System.Windows.Documents.Run> elemento.</span><span class="sxs-lookup"><span data-stu-id="53179-284">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="53179-285">O exemplo a seguir demonstra um uso para esse método.</span><span class="sxs-lookup"><span data-stu-id="53179-285">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="53179-286">O exemplo usa o <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> método para implementar um par de métodos, um para calcular o deslocamento para uma posição especificada em relação a qualquer parágrafo de hospedagem e o outro para retornar um <xref:System.Windows.Documents.TextPointer> para um deslocamento especificado de um determinado parágrafo.</span><span class="sxs-lookup"><span data-stu-id="53179-286">The example uses the <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> method to implement a pair of methods, one to calculate the offset to a specified position relative to any hosting paragraph, and the other to return a <xref:System.Windows.Documents.TextPointer> to a specified offset in a specified paragraph.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetPositionAtOffset](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getpositionatoffset)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetPositionAtOffset](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getpositionatoffset)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)" />
      </Docs>
    </Member>
    <Member MemberName="GetPositionAtOffset">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetPositionAtOffset (int offset, System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetPositionAtOffset(int32 offset, valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32,System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPositionAtOffset (offset As Integer, direction As LogicalDirection) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetPositionAtOffset(int offset, System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetPositionAtOffset : int * System.Windows.Documents.LogicalDirection -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetPositionAtOffset (offset, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="53179-287">Um deslocamento, em símbolos, para o qual calcular e retornar a posição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-287">An offset, in symbols, for which to calculate and return the position.</span>
          </span>
          <span data-ttu-id="53179-288">Se o deslocamento for negativo, o <see cref="T:System.Windows.Documents.TextPointer" /> retornado precede o atual <see cref="T:System.Windows.Documents.TextPointer" />, caso contrário, ele sucede.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-288">If the offset is negative, the returned <see cref="T:System.Windows.Documents.TextPointer" /> precedes the current <see cref="T:System.Windows.Documents.TextPointer" />; otherwise, it follows.</span>
          </span>
        </param>
        <param name="direction">
          <span data-ttu-id="53179-289">Um dos valores <see cref="T:System.Windows.Documents.LogicalDirection" /> que especifica a direção da lógica do <see cref="T:System.Windows.Documents.TextPointer" /> retornado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-289">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction of the returned <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="53179-290">Retorna um <see cref="T:System.Windows.Documents.TextPointer" /> à posição indicada pelo deslocamento especificado nos símbolos, desde o início do <see cref="T:System.Windows.Documents.TextPointer" /> atual e na direção especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-290">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, in symbols, from the beginning of the current <see cref="T:System.Windows.Documents.TextPointer" /> and in the specified direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="53179-291">Um <see cref="T:System.Windows.Documents.TextPointer" /> para a posição indicada pelo deslocamento especificado ou <see langword="null" /> se o deslocamento ultrapassar o fim do conteúdo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-291">A <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, or <see langword="null" /> if the offset extends past the end of the content.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53179-292">Qualquer um dos seguintes é considerado um símbolo:</span><span class="sxs-lookup"><span data-stu-id="53179-292">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="53179-293">Uma marca de abertura ou para o <xref:System.Windows.Documents.TextElement> elemento.</span><span class="sxs-lookup"><span data-stu-id="53179-293">An opening or closing tag for the <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="53179-294">Um <xref:System.Windows.UIElement> elemento contido em um <xref:System.Windows.Documents.InlineUIContainer> ou <xref:System.Windows.Documents.BlockUIContainer>.</span><span class="sxs-lookup"><span data-stu-id="53179-294">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="53179-295">Observe que essas uma <xref:System.Windows.UIElement> sempre são contados como exatamente um símbolo; qualquer conteúdo adicional ou elementos contidos pelo <xref:System.Windows.UIElement> não são contadas como símbolos.</span><span class="sxs-lookup"><span data-stu-id="53179-295">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="53179-296">De 16 bits [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] caractere dentro de um texto <xref:System.Windows.Documents.Run> elemento.</span><span class="sxs-lookup"><span data-stu-id="53179-296">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTextInRun">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="53179-297">Retorna o texto adjacente ao <see cref="T:System.Windows.Documents.TextPointer" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-297">Returns text adjacent to the current <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTextInRun">
      <MemberSignature Language="C#" Value="public string GetTextInRun (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetTextInRun(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextInRun (direction As LogicalDirection) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetTextInRun(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetTextInRun : System.Windows.Documents.LogicalDirection -&gt; string" Usage="textPointer.GetTextInRun direction" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="53179-298">Um dos valores <see cref="T:System.Windows.Documents.LogicalDirection" /> que especifica a direção lógica na qual localizar e retornar qualquer texto adjacente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-298">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to find and return any adjacent text.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="53179-299">Retorna uma cadeia de caracteres que contém qualquer texto adjacente ao <see cref="T:System.Windows.Documents.TextPointer" /> atual na direção lógica especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-299">Returns a string containing any text adjacent to the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="53179-300">Uma cadeia de caracteres que contém qualquer texto adjacente na direção lógica especificada ou <see cref="F:System.String.Empty" /> se nenhum texto adjacente puder ser encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-300">A string containing any adjacent text in the specified logical direction, or <see cref="F:System.String.Empty" /> if no adjacent text can be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53179-301">Esse método retornará somente ininterruptas execuções de texto.</span><span class="sxs-lookup"><span data-stu-id="53179-301">This method returns only uninterrupted runs of text.</span></span>  <span data-ttu-id="53179-302">Nada será retornado se nenhum tipo de símbolo diferente de <xref:System.Windows.Documents.TextPointerContext.Text> adjacente ao atual <xref:System.Windows.Documents.TextPointer> na direção especificada.</span><span class="sxs-lookup"><span data-stu-id="53179-302">Nothing is returned if any symbol type other than <xref:System.Windows.Documents.TextPointerContext.Text> is adjacent to the current <xref:System.Windows.Documents.TextPointer> in the specified direction.</span></span>  <span data-ttu-id="53179-303">Da mesma forma, o texto será retornado apenas até o próximo símbolo que não sejam de texto.</span><span class="sxs-lookup"><span data-stu-id="53179-303">Similarly, text is returned only up to the next non-text symbol.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="53179-304">O exemplo a seguir demonstra um uso para esse método.</span><span class="sxs-lookup"><span data-stu-id="53179-304">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="53179-305">O exemplo usa o <xref:System.Windows.Documents.TextPointer.GetTextInRun%2A> método para implementar um extrator de texto simples.</span><span class="sxs-lookup"><span data-stu-id="53179-305">The example uses the <xref:System.Windows.Documents.TextPointer.GetTextInRun%2A> method to implement a simple text extractor.</span></span>  <span data-ttu-id="53179-306">O método retorna uma concatenação de cadeia de caracteres de todo o texto entre dois especificado <xref:System.Windows.Documents.TextPointer> instâncias.</span><span class="sxs-lookup"><span data-stu-id="53179-306">The method returns a string concatenation of all text between two specified <xref:System.Windows.Documents.TextPointer> instances.</span></span>  
  
 <span data-ttu-id="53179-307">Embora o exemplo pode ser usado para extrair qualquer texto entre dois <xref:System.Windows.Documents.TextPointer> instâncias, ele é destinado apenas para fins ilustrativos e não deve ser usado no código de produção.</span><span class="sxs-lookup"><span data-stu-id="53179-307">While the example can be used to extract any text between two <xref:System.Windows.Documents.TextPointer> instances, it is intended for illustrative purposes only, and should not be used in production code.</span></span>  <span data-ttu-id="53179-308">Use a propriedade <xref:System.Windows.Documents.TextRange.Text%2A?displayProperty=nameWithType> em seu lugar.</span><span class="sxs-lookup"><span data-stu-id="53179-308">Use the <xref:System.Windows.Documents.TextRange.Text%2A?displayProperty=nameWithType> property instead.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetTextInRun](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_gettextinrun)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetTextInRun](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_gettextinrun)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)" />
        <altmember cref="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetTextInRun">
      <MemberSignature Language="C#" Value="public int GetTextInRun (System.Windows.Documents.LogicalDirection direction, char[] textBuffer, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTextInRun(valuetype System.Windows.Documents.LogicalDirection direction, char[] textBuffer, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextInRun (direction As LogicalDirection, textBuffer As Char(), startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetTextInRun(System::Windows::Documents::LogicalDirection direction, cli::array &lt;char&gt; ^ textBuffer, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.GetTextInRun : System.Windows.Documents.LogicalDirection * char[] * int * int -&gt; int" Usage="textPointer.GetTextInRun (direction, textBuffer, startIndex, count)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection,System.Char[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
        <Parameter Name="textBuffer" Type="System.Char[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="53179-309">Um dos valores <see cref="T:System.Windows.Documents.LogicalDirection" /> que especifica a direção lógica na qual localizar e copiar qualquer texto adjacente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-309">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to find and copy any adjacent text.</span>
          </span>
        </param>
        <param name="textBuffer">
          <span data-ttu-id="53179-310">Um buffer em que qualquer texto é copiado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-310">A buffer into which any text is copied.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="53179-311">Um índice em <c>textBuffer</c> no qual começar a gravar o texto copiado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-311">An index into <c>textBuffer</c> at which to begin writing copied text.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="53179-312">O número máximo de caracteres a serem copiados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-312">The maximum number of characters to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="53179-313">Copia o número máximo especificado de caracteres de qualquer texto adjacente na direção especificada para uma matriz de caracteres fornecida pelo cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-313">Copies the specified maximum number of characters from any adjacent text in the specified direction into a caller-supplied character array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="53179-314">O número de caracteres de fato copiados para <paramref name="textBuffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-314">The number of characters actually copied into <paramref name="textBuffer" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53179-315">Esse método retornará somente ininterruptas execuções de texto.</span><span class="sxs-lookup"><span data-stu-id="53179-315">This method returns only uninterrupted runs of text.</span></span>  <span data-ttu-id="53179-316">Nada será retornado se nenhum tipo de símbolo diferente de <xref:System.Windows.Documents.TextPointerContext.Text> adjacente ao atual <xref:System.Windows.Documents.TextPointer> na direção especificada.</span><span class="sxs-lookup"><span data-stu-id="53179-316">Nothing is returned if any symbol type other than <xref:System.Windows.Documents.TextPointerContext.Text> is adjacent to the current <xref:System.Windows.Documents.TextPointer> in the specified direction.</span></span>  <span data-ttu-id="53179-317">Da mesma forma, o texto será retornado apenas até o próximo símbolo que não sejam de texto.</span><span class="sxs-lookup"><span data-stu-id="53179-317">Similarly, text is returned only up to the next non-text symbol.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="53179-318">
            <paramref name="startIndex" /> é menor que 0 ou maior que a propriedade <see cref="P:System.Array.Length" /> de <paramref name="textBuffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-318">
              <paramref name="startIndex" /> is less than 0 or greater than the <see cref="P:System.Array.Length" /> property of <paramref name="textBuffer" />.</span>
          </span>
          <span data-ttu-id="53179-319">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-319">-or-</span>
          </span>
          <span data-ttu-id="53179-320">
            <paramref name="count" /> é menor que 0 ou maior que o espaço restante em <paramref name="textBuffer" /> (<paramref name="textBuffer" />.<see cref="P:System.Array.Length" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-320">
              <paramref name="count" /> is less than 0 or greater than the remaining space in <paramref name="textBuffer" /> (<paramref name="textBuffer" />.<see cref="P:System.Array.Length" /></span>
          </span>
          <span data-ttu-id="53179-321">menos <paramref name="startIndex" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-321">minus <paramref name="startIndex" />).</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)" />
        <altmember cref="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetTextRunLength">
      <MemberSignature Language="C#" Value="public int GetTextRunLength (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTextRunLength(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetTextRunLength(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextRunLength (direction As LogicalDirection) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetTextRunLength(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetTextRunLength : System.Windows.Documents.LogicalDirection -&gt; int" Usage="textPointer.GetTextRunLength direction" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.GetTextRunLength(System.Windows.Documents.LogicalDirection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="53179-322">Um dos valores <see cref="T:System.Windows.Documents.LogicalDirection" /> que especifica a direção lógica na qual contar o número de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-322">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to count the number of characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="53179-323">Retorna o número de caracteres Unicode entre o <see cref="T:System.Windows.Documents.TextPointer" /> atual e o próximo símbolo que não é texto, na direção lógica especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-323">Returns the number of Unicode characters between the current <see cref="T:System.Windows.Documents.TextPointer" /> and the next non-text symbol, in the specified logical direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="53179-324">O número de caracteres Unicode entre o <see cref="T:System.Windows.Documents.TextPointer" /> atual e o próximo símbolo que não é texto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-324">The number of Unicode characters between the current <see cref="T:System.Windows.Documents.TextPointer" /> and the next non-text symbol.</span>
          </span>
          <span data-ttu-id="53179-325">Esse número poderá ser 0 se não houver nenhum texto adjacente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-325">This number may be 0 if there is no adjacent text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53179-326">Qualquer um dos seguintes é considerado um símbolo:</span><span class="sxs-lookup"><span data-stu-id="53179-326">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="53179-327">Uma marca de abertura ou para o <xref:System.Windows.Documents.TextElement> elemento.</span><span class="sxs-lookup"><span data-stu-id="53179-327">An opening or closing tag for the <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="53179-328">Um <xref:System.Windows.UIElement> elemento contido em um <xref:System.Windows.Documents.InlineUIContainer> ou <xref:System.Windows.Documents.BlockUIContainer>.</span><span class="sxs-lookup"><span data-stu-id="53179-328">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="53179-329">Observe que essas uma <xref:System.Windows.UIElement> sempre são contados como exatamente um símbolo; qualquer conteúdo adicional ou elementos contidos pelo <xref:System.Windows.UIElement> não são contadas como símbolos.</span><span class="sxs-lookup"><span data-stu-id="53179-329">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="53179-330">De 16 bits [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] caractere dentro de um texto <xref:System.Windows.Documents.Run> elemento.</span><span class="sxs-lookup"><span data-stu-id="53179-330">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasValidLayout">
      <MemberSignature Language="C#" Value="public bool HasValidLayout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValidLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.HasValidLayout" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasValidLayout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasValidLayout { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasValidLayout : bool" Usage="System.Windows.Documents.TextPointer.HasValidLayout" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Documents.ITextPointer.HasValidLayout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="53179-331">Obtém um valor que indica se o contêiner de texto associado à posição atual tem um layout válido (atualizado).</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-331">Gets a value that indicates whether the text container associated with the current position has a valid (up-to-date) layout.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="53179-332">
            <see langword="true" /> Se o layout é atuais e válidas. Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-332">
              <see langword="true" /> if the layout is current and valid; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53179-333">Quando necessário, as operações que dependem de um layout válido (como o <xref:System.Windows.Documents.TextPointer.GetLineStartPosition%2A> método, <xref:System.Windows.Documents.TextPointer.GetCharacterRect%2A> método, e <xref:System.Windows.Documents.TextPointer.IsAtLineStartPosition%2A> propriedade) tentar gerar automaticamente um layout válido antes de continuar com a operação.</span><span class="sxs-lookup"><span data-stu-id="53179-333">When necessary, operations that depend on a valid layout (such as the <xref:System.Windows.Documents.TextPointer.GetLineStartPosition%2A> method, <xref:System.Windows.Documents.TextPointer.GetCharacterRect%2A> method, and <xref:System.Windows.Documents.TextPointer.IsAtLineStartPosition%2A> property) attempt to automatically regenerate a valid layout before proceeding with the operation.</span></span>  <span data-ttu-id="53179-334">Regenerar um layout pode ser uma operação relativamente cara.</span><span class="sxs-lookup"><span data-stu-id="53179-334">Regenerating a layout can be a relatively expensive operation.</span></span>  <span data-ttu-id="53179-335">Use essa propriedade para verificar se há um layout válido antes de executar operações que podem regenerar o layout.</span><span class="sxs-lookup"><span data-stu-id="53179-335">Use this property to check for a valid layout before performing operations that may regenerate the layout.</span></span>  <span data-ttu-id="53179-336">Veja [Layout](~/docs/framework/wpf/advanced/layout.md) para obter mais informações.</span><span class="sxs-lookup"><span data-stu-id="53179-336">For more information, see [Layout](~/docs/framework/wpf/advanced/layout.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertLineBreak">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer InsertLineBreak ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer InsertLineBreak() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.InsertLineBreak" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertLineBreak () As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ InsertLineBreak();" />
      <MemberSignature Language="F#" Value="member this.InsertLineBreak : unit -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.InsertLineBreak " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="53179-337">Insere uma quebra de linha na posição atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-337">Inserts a line break at the current position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="53179-338">Um <see cref="T:System.Windows.Documents.TextPointer" /> posicionado imediatamente após o elemento <see cref="T:System.Windows.Documents.LineBreak" /> inserido por este método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-338">A <see cref="T:System.Windows.Documents.TextPointer" /> positioned immediately after the <see cref="T:System.Windows.Documents.LineBreak" /> element inserted by this method.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertParagraphBreak">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer InsertParagraphBreak ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer InsertParagraphBreak() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.InsertParagraphBreak" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertParagraphBreak () As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ InsertParagraphBreak();" />
      <MemberSignature Language="F#" Value="member this.InsertParagraphBreak : unit -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.InsertParagraphBreak " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="53179-339">Insere uma quebra de parágrafo na posição atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-339">Inserts a paragraph break at the current position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="53179-340">Um <see cref="T:System.Windows.Documents.TextPointer" /> no início (<see cref="P:System.Windows.Documents.TextElement.ContentStart" />) do novo parágrafo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-340">A <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning (<see cref="P:System.Windows.Documents.TextElement.ContentStart" />) of the new paragraph.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53179-341">Se esse método é chamado quando a posição atual está dentro de uma existente <xref:System.Windows.Documents.Paragraph> elemento, o parágrafo existente e qualquer conteúdo que ele contém são divididas em dois parágrafos na posição atual.</span><span class="sxs-lookup"><span data-stu-id="53179-341">If this method is called when the current position is inside of an existing <xref:System.Windows.Documents.Paragraph> element, the existing paragraph and any content it contains are split into two paragraphs at the current position.</span></span>  <span data-ttu-id="53179-342">Se esse método é chamado quando a posição atual não está dentro de um parágrafo existente, um novo parágrafo vazio é inserido.</span><span class="sxs-lookup"><span data-stu-id="53179-342">If this method is called when the current position is not inside of an existing paragraph, a new, empty paragraph is inserted.</span></span>  <span data-ttu-id="53179-343">Se esse método é chamado em uma posição inadequado para dividir ou inserindo um parágrafo (por exemplo, se a posição atual está dentro de um <xref:System.Windows.Documents.Hyperlink> elemento), uma exceção será lançada.</span><span class="sxs-lookup"><span data-stu-id="53179-343">If this method is called at a position unsuitable for splitting or inserting a paragraph (for example, if the current position is inside of a <xref:System.Windows.Documents.Hyperlink> element), an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="53179-344">Este método é chamado em uma posição que não pode ser dividida para acomodar um novo parágrafo, como no escopo de um <see cref="T:System.Windows.Documents.Hyperlink" /> ou <see cref="T:System.Windows.Documents.InlineUIContainer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-344">This method is called on a position that cannot be split to accommodate a new paragraph, such as in the scope of a <see cref="T:System.Windows.Documents.Hyperlink" /> or <see cref="T:System.Windows.Documents.InlineUIContainer" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InsertTextInRun">
      <MemberSignature Language="C#" Value="public void InsertTextInRun (string textData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertTextInRun(string textData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertTextInRun (textData As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertTextInRun(System::String ^ textData);" />
      <MemberSignature Language="F#" Value="member this.InsertTextInRun : string -&gt; unit" Usage="textPointer.InsertTextInRun textData" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.InsertTextInRun(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textData" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textData">
          <span data-ttu-id="53179-345">O texto a ser inserido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-345">The text to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="53179-346">Insere o texto especificado no <see cref="T:System.Windows.Documents.Run" /> de texto na posição atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-346">Inserts the specified text into the text <see cref="T:System.Windows.Documents.Run" /> at the current position.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53179-347">Se o <xref:System.Windows.Documents.TextPointer> não está no escopo por um <xref:System.Windows.Documents.Run> elemento, um <xref:System.Windows.Documents.Run> é inserido juntamente com o `textData`.</span><span class="sxs-lookup"><span data-stu-id="53179-347">If the <xref:System.Windows.Documents.TextPointer> is not scoped by a <xref:System.Windows.Documents.Run> element, a <xref:System.Windows.Documents.Run> is inserted along with the `textData`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="53179-348">A posição atual não está dentro de um elemento <see cref="T:System.Windows.Documents.Run" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-348">The current position is not within a <see cref="T:System.Windows.Documents.Run" /> element.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="53179-349">
            <paramref name="textData" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-349">
              <paramref name="textData" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsAtInsertionPosition">
      <MemberSignature Language="C#" Value="public bool IsAtInsertionPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAtInsertionPosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.IsAtInsertionPosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAtInsertionPosition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAtInsertionPosition { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAtInsertionPosition : bool" Usage="System.Windows.Documents.TextPointer.IsAtInsertionPosition" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Documents.ITextPointer.IsAtInsertionPosition</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="53179-350">Obtém um valor que indica se a posição atual é uma posição de inserção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-350">Gets a value that indicates whether the current position is an insertion position.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="53179-351">
            <see langword="true" /> Se a posição atual é um ponto de inserção; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-351">
              <see langword="true" /> if the current position is an insertion position; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53179-352">Um ponto de inserção é uma posição em que o novo conteúdo pode ser adicionado sem interromper todas as regras semânticas para o conteúdo associado.</span><span class="sxs-lookup"><span data-stu-id="53179-352">An insertion position is a position where new content may be added without breaking any semantic rules for the associated content.</span></span>  <span data-ttu-id="53179-353">Na prática, um ponto de inserção é em qualquer lugar no conteúdo em que um cursor do sistema pode ser posicionado.</span><span class="sxs-lookup"><span data-stu-id="53179-353">In practice, an insertion position is anywhere in content where a caret may be positioned.</span></span>  <span data-ttu-id="53179-354">Um exemplo de válida <xref:System.Windows.Documents.TextPointer> posição que não é um ponto de inserção é a posição entre dois adjacentes <xref:System.Windows.Documents.Paragraph> marcas (ou seja, entre a marca de fechamento do parágrafo anterior e a marca de abertura do próximo parágrafo).</span><span class="sxs-lookup"><span data-stu-id="53179-354">An example of a valid <xref:System.Windows.Documents.TextPointer> position that is not an insertion position is the position between two adjacent <xref:System.Windows.Documents.Paragraph> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)" />
        <altmember cref="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      </Docs>
    </Member>
    <Member MemberName="IsAtLineStartPosition">
      <MemberSignature Language="C#" Value="public bool IsAtLineStartPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAtLineStartPosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.IsAtLineStartPosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAtLineStartPosition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAtLineStartPosition { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAtLineStartPosition : bool" Usage="System.Windows.Documents.TextPointer.IsAtLineStartPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="53179-355">Obtém um valor que indica se a posição atual está no início de uma linha.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-355">Gets a value that indicates whether the current position is at the beginning of a line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="53179-356">
            <see langword="true" /> Se a posição atual está no início de uma linha; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-356">
              <see langword="true" /> if the current position is at the beginning of a line; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53179-357">Se o <xref:System.Windows.Documents.TextPointer> aponta para uma posição ambígua, por exemplo, entre duas linhas, a linha na direção especificada pelo <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> propriedade é selecionada como a linha de início relativa.</span><span class="sxs-lookup"><span data-stu-id="53179-357">If the <xref:System.Windows.Documents.TextPointer> points to an ambiguous position, for example, between two lines, the line in the direction specified by the <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> property is selected as the relative starting line.</span></span>  
  
 <span data-ttu-id="53179-358">A operação executada por esta propriedade depende de um layout válido.</span><span class="sxs-lookup"><span data-stu-id="53179-358">The operation performed by this property depends on a valid layout.</span></span>  <span data-ttu-id="53179-359">Quando necessário, esse método tenta gerar automaticamente um layout válido antes de continuar com a operação.</span><span class="sxs-lookup"><span data-stu-id="53179-359">When necessary, this method attempts to automatically regenerate a valid layout before proceeding with the operation.</span></span>  <span data-ttu-id="53179-360">Regenerar um layout pode ser uma operação relativamente cara.</span><span class="sxs-lookup"><span data-stu-id="53179-360">Regenerating a layout can be a relatively expensive operation.</span></span>  <span data-ttu-id="53179-361">Use o <xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> propriedade para verificar se há um layout válido antes de executar operações que podem regenerar o layout.</span><span class="sxs-lookup"><span data-stu-id="53179-361">Use the <xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> property to check for a valid layout before performing operations that may regenerate the layout.</span></span>  <span data-ttu-id="53179-362">Veja [Layout](~/docs/framework/wpf/advanced/layout.md) para obter mais informações.</span><span class="sxs-lookup"><span data-stu-id="53179-362">For more information, see [Layout](~/docs/framework/wpf/advanced/layout.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.IsAtLineStartPosition" />
      </Docs>
    </Member>
    <Member MemberName="IsInSameDocument">
      <MemberSignature Language="C#" Value="public bool IsInSameDocument (System.Windows.Documents.TextPointer textPosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsInSameDocument(class System.Windows.Documents.TextPointer textPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsInSameDocument (textPosition As TextPointer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsInSameDocument(System::Windows::Documents::TextPointer ^ textPosition);" />
      <MemberSignature Language="F#" Value="member this.IsInSameDocument : System.Windows.Documents.TextPointer -&gt; bool" Usage="textPointer.IsInSameDocument textPosition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textPosition" Type="System.Windows.Documents.TextPointer" />
      </Parameters>
      <Docs>
        <param name="textPosition">
          <span data-ttu-id="53179-363">Um <see cref="T:System.Windows.Documents.TextPointer" /> que especifica uma posição para comparar à posição atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-363">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies a position to compare to the current position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="53179-364">Indica se a posição especificada estiver no mesmo contêiner de texto que a posição atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-364">Indicates whether the specified position is in the same text container as the current position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="53179-365">
            <see langword="true" /> se <paramref name="textPosition" /> indicar uma posição que estiver no mesmo contêiner de texto que a posição atual; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-365">
              <see langword="true" /> if <paramref name="textPosition" /> indicates a position that is in the same text container as the current position; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53179-366">A maioria das operações que envolvem vários <xref:System.Windows.Documents.TextPointer> instâncias são válidas somente se as instâncias em questão indicarem posições em que estão no mesmo escopo de contêiner de texto.</span><span class="sxs-lookup"><span data-stu-id="53179-366">Most operations that involve multiple <xref:System.Windows.Documents.TextPointer> instances are only valid if the instances in question indicate positions that are in the same text container scope.</span></span>  <span data-ttu-id="53179-367">Por exemplo o <xref:System.Windows.Documents.TextPointer.CompareTo%2A> e <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> métodos não podem ser usados com um <xref:System.Windows.Documents.TextPointer> para uma posição fora do contêiner de texto associado à posição atual.</span><span class="sxs-lookup"><span data-stu-id="53179-367">For example the <xref:System.Windows.Documents.TextPointer.CompareTo%2A> and <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> methods cannot be used with a <xref:System.Windows.Documents.TextPointer> to a position outside of the text container associated with the current position.</span></span>  <span data-ttu-id="53179-368">Use esse método para verificar se determinado <xref:System.Windows.Documents.TextPointer> é compatível com a posição atual para essas operações.</span><span class="sxs-lookup"><span data-stu-id="53179-368">Use this method to verify that a specified <xref:System.Windows.Documents.TextPointer> is compatible with the current position for such operations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="53179-369">O exemplo a seguir demonstra um uso para esse método.</span><span class="sxs-lookup"><span data-stu-id="53179-369">The following example demonstrates a use for this method.</span></span>  <span data-ttu-id="53179-370">O exemplo usa o <xref:System.Windows.Documents.TextPointer.IsInSameDocument%2A> método para verificar se determinado <xref:System.Windows.Documents.TextPointer> posicionado entre dois outros especificado <xref:System.Windows.Documents.TextPointer> instâncias em uma situação em que não há nenhuma garantia de que todos os três posições pertençam ao mesmo contêiner de texto.</span><span class="sxs-lookup"><span data-stu-id="53179-370">The example uses the <xref:System.Windows.Documents.TextPointer.IsInSameDocument%2A> method to check whether a specified <xref:System.Windows.Documents.TextPointer> is positioned between two other specified <xref:System.Windows.Documents.TextPointer> instances in a situation when there is no guarantee that all three positions belong to the same text container.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_IsInSameDocument](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_isinsamedocument)]
 [!code-vb[TextPointer_Snippets#_TextPointer_IsInSameDocument](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_isinsamedocument)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="53179-371">
            <paramref name="textPosition" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-371">
              <paramref name="textPosition" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LogicalDirection">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.LogicalDirection LogicalDirection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Documents.LogicalDirection LogicalDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.LogicalDirection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogicalDirection As LogicalDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::LogicalDirection LogicalDirection { System::Windows::Documents::LogicalDirection get(); };" />
      <MemberSignature Language="F#" Value="member this.LogicalDirection : System.Windows.Documents.LogicalDirection" Usage="System.Windows.Documents.TextPointer.LogicalDirection" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Documents.ITextPointer.LogicalDirection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.LogicalDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="53179-372">Obtém a direção lógica associada à posição atual usada para resolver a ambiguidade do conteúdo associado à posição atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-372">Gets the logical direction associated with the current position which is used to disambiguate content associated with the current position.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="53179-373">O <see cref="T:System.Windows.Documents.LogicalDirection" /> valor associado com a posição atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-373">The <see cref="T:System.Windows.Documents.LogicalDirection" /> value that is associated with the current position.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="53179-374">Como um exemplo de como essa propriedade é usada, o <xref:System.Windows.Documents.LogicalDirection> do <xref:System.Windows.Documents.TextPointer> retornado por um teste de clique método fornece uma ocorrência entre dois caracteres de texto.</span><span class="sxs-lookup"><span data-stu-id="53179-374">As an example of how this property is used, the <xref:System.Windows.Documents.LogicalDirection> of the <xref:System.Windows.Documents.TextPointer> returned by a hit test method gives a hit that is between two characters of text.</span></span> <span data-ttu-id="53179-375">A direção lógica Especifica qual dos dois caracteres, na verdade, foi atingido — à esquerda ou à direita.</span><span class="sxs-lookup"><span data-stu-id="53179-375">The logical direction specifies which of the two characters was actually hit—the left or the right.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paragraph">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.Paragraph Paragraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.Paragraph Paragraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.Paragraph" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Paragraph As Paragraph" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::Paragraph ^ Paragraph { System::Windows::Documents::Paragraph ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Paragraph : System.Windows.Documents.Paragraph" Usage="System.Windows.Documents.TextPointer.Paragraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Paragraph</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="53179-376">Obtém o parágrafo que tem como escopo a posição atual, se houver.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-376">Gets the paragraph that scopes the current position, if any.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="53179-377">O <see cref="T:System.Windows.Documents.Paragraph" /> que tem como escopo a posição atual, ou <see langword="null" /> se tal parágrafo não existe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-377">The <see cref="T:System.Windows.Documents.Paragraph" /> that scopes the current position, or <see langword="null" /> if no such paragraph exists.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.Parent" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyObject Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyObject ^ Parent { System::Windows::DependencyObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Windows.DependencyObject" Usage="System.Windows.Documents.TextPointer.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="53179-378">Obtém o pai lógico que tem como escopo a posição atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-378">Gets the logical parent that scopes the current position.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="53179-379">O pai lógico que tem como escopo a posição atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-379">The logical parent that scopes the current position.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.Paragraph" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="textPointer.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="53179-380">Este tipo ou membro dá suporte à infraestrutura [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] e não se destina a ser usado diretamente do código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-380">This type or member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="53179-381">A cadeia de caracteres que representa o objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="53179-381">The string that represents the object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>