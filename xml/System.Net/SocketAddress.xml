<Type Name="SocketAddress" FullName="System.Net.SocketAddress">
  <TypeSignature Language="C#" Value="public class SocketAddress" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SocketAddress extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.SocketAddress" />
  <TypeSignature Language="VB.NET" Value="Public Class SocketAddress" />
  <TypeSignature Language="C++ CLI" Value="public ref class SocketAddress" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Primitives</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d041c-101">Armazena informações serializadas de classes derivadas de <see cref="T:System.Net.EndPoint" />.</span><span class="sxs-lookup"><span data-stu-id="d041c-101">Stores serialized information from <see cref="T:System.Net.EndPoint" /> derived classes.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d041c-102">Os primeiros 2 bytes do buffer subjacente são reservados para o <xref:System.Net.Sockets.AddressFamily> valor de enumeração.</span><span class="sxs-lookup"><span data-stu-id="d041c-102">The first 2 bytes of the underlying buffer are reserved for the <xref:System.Net.Sockets.AddressFamily> enumerated value.</span></span> <span data-ttu-id="d041c-103">Quando o <xref:System.Net.SocketAddress> é usado para armazenar um serializado <xref:System.Net.IPEndPoint>, o terceiro e quarto bytes é usado para armazenar informações de número de porta.</span><span class="sxs-lookup"><span data-stu-id="d041c-103">When the <xref:System.Net.SocketAddress> is used to store a serialized <xref:System.Net.IPEndPoint>, the third and fourth bytes are used to store port number information.</span></span> <span data-ttu-id="d041c-104">Os bytes são usados para armazenar o endereço IP.</span><span class="sxs-lookup"><span data-stu-id="d041c-104">The next bytes are used to store the IP address.</span></span> <span data-ttu-id="d041c-105">Você pode acessar todas as informações nesse buffer de bytes subjacente referindo-se à posição de índice; o buffer de bytes usa a indexação com base em zero.</span><span class="sxs-lookup"><span data-stu-id="d041c-105">You can access any information within this underlying byte buffer by referring to its index position; the byte buffer uses zero-based indexing.</span></span> <span data-ttu-id="d041c-106">Você também pode usar o <xref:System.Net.SocketAddress.Family%2A> e <xref:System.Net.SocketAddress.Size%2A> propriedades para obter o <xref:System.Net.Sockets.AddressFamily> valor e o buffer de tamanho, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="d041c-106">You can also use the <xref:System.Net.SocketAddress.Family%2A> and <xref:System.Net.SocketAddress.Size%2A> properties to get the <xref:System.Net.Sockets.AddressFamily> value and the buffer size, respectively.</span></span> <span data-ttu-id="d041c-107">Para exibir essas informações como uma cadeia de caracteres, use o <xref:System.Net.SocketAddress.ToString%2A> método.</span><span class="sxs-lookup"><span data-stu-id="d041c-107">To view any of this information as a string, use the <xref:System.Net.SocketAddress.ToString%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d041c-108">O exemplo a seguir demonstra como usar <xref:System.Net.SocketAddress> para serializar uma instância do <xref:System.Net.EndPoint> classe.</span><span class="sxs-lookup"><span data-stu-id="d041c-108">The following example demonstrates how to use <xref:System.Net.SocketAddress> to serialize an instance of the <xref:System.Net.EndPoint> class.</span></span> <span data-ttu-id="d041c-109">Após a serialização, o buffer de bytes subjacente do <xref:System.Net.SocketAddress> contém todos os <xref:System.Net.IPEndPoint> as informações de estado.</span><span class="sxs-lookup"><span data-stu-id="d041c-109">After serialization, the underlying byte buffer of the <xref:System.Net.SocketAddress> contains all of the <xref:System.Net.IPEndPoint> state information.</span></span>  
  
 [!code-cpp[Classic SocketAddressExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SocketAddressExample/CPP/source.cpp#1)]
 [!code-csharp[Classic SocketAddressExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SocketAddressExample/CS/source.cs#1)]
 [!code-vb[Classic SocketAddressExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SocketAddressExample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d041c-110">Cria uma nova instância da classe <see cref="T:System.Net.SocketAddress" />.</span><span class="sxs-lookup"><span data-stu-id="d041c-110">Creates a new instance of the <see cref="T:System.Net.SocketAddress" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SocketAddress (System.Net.Sockets.AddressFamily family);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Sockets.AddressFamily family) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (family As AddressFamily)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SocketAddress(System::Net::Sockets::AddressFamily family);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="family" Type="System.Net.Sockets.AddressFamily" />
      </Parameters>
      <Docs>
        <param name="family"><span data-ttu-id="d041c-111">Um valor enumerado <see cref="T:System.Net.Sockets.AddressFamily" />.</span><span class="sxs-lookup"><span data-stu-id="d041c-111">An <see cref="T:System.Net.Sockets.AddressFamily" /> enumerated value.</span></span></param>
        <summary><span data-ttu-id="d041c-112">Cria uma nova instância da classe <see cref="T:System.Net.SocketAddress" /> para a família de endereços determinada.</span><span class="sxs-lookup"><span data-stu-id="d041c-112">Creates a new instance of the <see cref="T:System.Net.SocketAddress" /> class for the given address family.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d041c-113">Essa sobrecarga define o tamanho do buffer subjacente para 32 bytes.</span><span class="sxs-lookup"><span data-stu-id="d041c-113">This overload sets the underlying buffer size to 32 bytes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SocketAddress (System.Net.Sockets.AddressFamily family, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Sockets.AddressFamily family, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (family As AddressFamily, size As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SocketAddress(System::Net::Sockets::AddressFamily family, int size);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="family" Type="System.Net.Sockets.AddressFamily" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="family"><span data-ttu-id="d041c-114">Um valor enumerado <see cref="T:System.Net.Sockets.AddressFamily" />.</span><span class="sxs-lookup"><span data-stu-id="d041c-114">An <see cref="T:System.Net.Sockets.AddressFamily" /> enumerated value.</span></span></param>
        <param name="size"><span data-ttu-id="d041c-115">O número de bytes a ser alocado para o buffer subjacente.</span><span class="sxs-lookup"><span data-stu-id="d041c-115">The number of bytes to allocate for the underlying buffer.</span></span></param>
        <summary><span data-ttu-id="d041c-116">Cria uma nova instância da classe <see cref="T:System.Net.SocketAddress" /> usando a família de endereços especificada e o tamanho do buffer.</span><span class="sxs-lookup"><span data-stu-id="d041c-116">Creates a new instance of the <see cref="T:System.Net.SocketAddress" /> class using the specified address family and buffer size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d041c-117">Use essa sobrecarga para criar uma nova instância do <xref:System.Net.SocketAddress> classe com um determinado tamanho de buffer subjacente.</span><span class="sxs-lookup"><span data-stu-id="d041c-117">Use this overload to create a new instance of the <xref:System.Net.SocketAddress> class with a particular underlying buffer size.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d041c-118"><paramref name="size" /> é menor que 2.</span><span class="sxs-lookup"><span data-stu-id="d041c-118"><paramref name="size" /> is less than 2.</span></span> <span data-ttu-id="d041c-119">Esses 2 bytes são necessários para armazenar <paramref name="family" />.</span><span class="sxs-lookup"><span data-stu-id="d041c-119">These 2 bytes are needed to store <paramref name="family" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object comparand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object comparand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.SocketAddress.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (comparand As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ comparand);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="comparand"><span data-ttu-id="d041c-120">O <see cref="T:System.Object" /> a ser comparado com o <see langword="Object" /> atual.</span><span class="sxs-lookup"><span data-stu-id="d041c-120">The <see cref="T:System.Object" /> to compare with the current <see langword="Object" />.</span></span></param>
        <summary><span data-ttu-id="d041c-121">Determina se o <see langword="Object" /> especificado é igual ao <see langword="Object" /> atual.</span><span class="sxs-lookup"><span data-stu-id="d041c-121">Determines whether the specified <see langword="Object" /> is equal to the current <see langword="Object" />.</span></span></summary>
        <returns>
          <span data-ttu-id="d041c-122"><see langword="true" /> se o <see langword="Object" /> especificado for igual ao <see langword="Object" /> atual; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d041c-122"><see langword="true" /> if the specified <see langword="Object" /> is equal to the current <see langword="Object" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Family">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.AddressFamily Family { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Sockets.AddressFamily Family" />
      <MemberSignature Language="DocId" Value="P:System.Net.SocketAddress.Family" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Family As AddressFamily" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::AddressFamily Family { System::Net::Sockets::AddressFamily get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.AddressFamily</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d041c-123">Obtém o valor enumerado <see cref="T:System.Net.Sockets.AddressFamily" /> do <see cref="T:System.Net.SocketAddress" /> atual.</span><span class="sxs-lookup"><span data-stu-id="d041c-123">Gets the <see cref="T:System.Net.Sockets.AddressFamily" /> enumerated value of the current <see cref="T:System.Net.SocketAddress" />.</span></span></summary>
        <value><span data-ttu-id="d041c-124">Um dos valores enumerados <see cref="T:System.Net.Sockets.AddressFamily" />.</span><span class="sxs-lookup"><span data-stu-id="d041c-124">One of the <see cref="T:System.Net.Sockets.AddressFamily" /> enumerated values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d041c-125">Esse método obtém o <xref:System.Net.Sockets.AddressFamily> enumerados valor que representa o esquema de endereçamento do atual <xref:System.Net.SocketAddress>.</span><span class="sxs-lookup"><span data-stu-id="d041c-125">This method gets the <xref:System.Net.Sockets.AddressFamily> enumerated value that represents the addressing scheme of the current <xref:System.Net.SocketAddress>.</span></span> <span data-ttu-id="d041c-126">Se você deseja exibir a representação de cadeia de caracteres correspondente de <xref:System.Net.Sockets.AddressFamily>, use o <xref:System.Net.SocketAddress.ToString%2A> método.</span><span class="sxs-lookup"><span data-stu-id="d041c-126">If you want to view the corresponding string representation of <xref:System.Net.Sockets.AddressFamily>, use the <xref:System.Net.SocketAddress.ToString%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.AddressFamily" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.SocketAddress.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d041c-127">Serve como uma função de hash para um tipo específico, adequada para uso em algoritmos de hash e estruturas de dados como uma tabela de hash.</span><span class="sxs-lookup"><span data-stu-id="d041c-127">Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.</span></span></summary>
        <returns><span data-ttu-id="d041c-128">Um código hash do <see cref="T:System.Object" /> atual.</span><span class="sxs-lookup"><span data-stu-id="d041c-128">A hash code for the current <see cref="T:System.Object" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public byte this[int offset] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Net.SocketAddress.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(offset As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte default[int] { System::Byte get(int offset); void set(int offset, System::Byte value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="d041c-129">O elemento de índice da matriz das informações desejadas.</span><span class="sxs-lookup"><span data-stu-id="d041c-129">The array index element of the desired information.</span></span></param>
        <summary><span data-ttu-id="d041c-130">Obtém ou define o elemento de índice especificado no buffer subjacente.</span><span class="sxs-lookup"><span data-stu-id="d041c-130">Gets or sets the specified index element in the underlying buffer.</span></span></summary>
        <value><span data-ttu-id="d041c-131">O valor do elemento de índice especificado no buffer subjacente.</span><span class="sxs-lookup"><span data-stu-id="d041c-131">The value of the specified index element in the underlying buffer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d041c-132">Esta propriedade obtém ou define a posição de byte especificado no buffer subjacente.</span><span class="sxs-lookup"><span data-stu-id="d041c-132">This property gets or sets the specified byte position in the underlying buffer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d041c-133">Certifique-se de chamar <xref:System.Net.SocketAddress.Size%2A> antes de fazer referência a elementos no buffer subjacente.</span><span class="sxs-lookup"><span data-stu-id="d041c-133">Be sure to call <xref:System.Net.SocketAddress.Size%2A> before referring to elements in the underlying buffer.</span></span> <span data-ttu-id="d041c-134">Referindo-se a um índice que não existe fará com que o <xref:System.Net.SocketAddress> para lançar uma <xref:System.IndexOutOfRangeException>.</span><span class="sxs-lookup"><span data-stu-id="d041c-134">Referring to an index that does not exist will cause the <xref:System.Net.SocketAddress> to throw an <xref:System.IndexOutOfRangeException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="d041c-135">O índice especificado não existe no buffer.</span><span class="sxs-lookup"><span data-stu-id="d041c-135">The specified index does not exist in the buffer.</span></span></exception>
        <altmember cref="P:System.Net.SocketAddress.Size" />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public int Size { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Size" />
      <MemberSignature Language="DocId" Value="P:System.Net.SocketAddress.Size" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Size As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Size { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d041c-136">Obtém o tamanho do buffer subjacente do <see cref="T:System.Net.SocketAddress" />.</span><span class="sxs-lookup"><span data-stu-id="d041c-136">Gets the underlying buffer size of the <see cref="T:System.Net.SocketAddress" />.</span></span></summary>
        <value><span data-ttu-id="d041c-137">O tamanho de buffer subjacente a <see cref="T:System.Net.SocketAddress" />.</span><span class="sxs-lookup"><span data-stu-id="d041c-137">The underlying buffer size of the <see cref="T:System.Net.SocketAddress" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d041c-138">Essa propriedade obtém o tamanho de buffer subjacente a <xref:System.Net.SocketAddress> em bytes.</span><span class="sxs-lookup"><span data-stu-id="d041c-138">This property gets the underlying buffer size of the <xref:System.Net.SocketAddress> in bytes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.SocketAddress.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d041c-139">Retorna informações sobre o endereço do soquete.</span><span class="sxs-lookup"><span data-stu-id="d041c-139">Returns information about the socket address.</span></span></summary>
        <returns><span data-ttu-id="d041c-140">Uma cadeia de caracteres que contém informações sobre o <see cref="T:System.Net.SocketAddress" />.</span><span class="sxs-lookup"><span data-stu-id="d041c-140">A string that contains information about the <see cref="T:System.Net.SocketAddress" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d041c-141">O <xref:System.Net.SocketAddress.ToString%2A> método retorna uma cadeia de caracteres que contém o <xref:System.Net.Sockets.AddressFamily> valor enumerado, o tamanho do buffer de subjacente a <xref:System.Net.SocketAddress> estrutura e o conteúdo restante do buffer.</span><span class="sxs-lookup"><span data-stu-id="d041c-141">The <xref:System.Net.SocketAddress.ToString%2A> method returns a string that contains the <xref:System.Net.Sockets.AddressFamily> enumerated value, the size of the underlying buffer of the <xref:System.Net.SocketAddress> structure, and the remaining contents of the buffer.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>