<Type Name="HttpListenerResponse" FullName="System.Net.HttpListenerResponse">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9992cdd75c59bfa136b8d2579ffe9d7ec8d8726f" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36472426" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpListenerResponse : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpListenerResponse extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.HttpListenerResponse" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpListenerResponse&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpListenerResponse sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type HttpListenerResponse = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.HttpListener</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="e49a2-101">Represents a response to a request being handled by an <see cref="T:System.Net.HttpListener" /> object.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e49a2-101">Represents a response to a request being handled by an <see cref="T:System.Net.HttpListener" /> object.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e49a2-102">Quando um cliente faz uma solicitação para um recurso tratado por um <xref:System.Net.HttpListener> do objeto, a solicitação e resposta são disponibilizadas para seu aplicativo em um <xref:System.Net.HttpListenerContext> objeto.</span><span class="sxs-lookup"><span data-stu-id="e49a2-102">When a client makes a request for a resource handled by an <xref:System.Net.HttpListener> object, the request and response are made available to your application in an <xref:System.Net.HttpListenerContext> object.</span></span> <span data-ttu-id="e49a2-103">A solicitação é representada por um <xref:System.Net.HttpListenerRequest> de objeto e está disponível na <xref:System.Net.HttpListenerContext.Request%2A?displayProperty=nameWithType> propriedade.</span><span class="sxs-lookup"><span data-stu-id="e49a2-103">The request is represented by an <xref:System.Net.HttpListenerRequest> object and is available in the <xref:System.Net.HttpListenerContext.Request%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="e49a2-104">A resposta é representada por um <xref:System.Net.HttpListenerResponse> de objeto e está disponível na <xref:System.Net.HttpListenerContext.Response%2A?displayProperty=nameWithType> propriedade.</span><span class="sxs-lookup"><span data-stu-id="e49a2-104">The response is represented by an <xref:System.Net.HttpListenerResponse> object and is available in the <xref:System.Net.HttpListenerContext.Response%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="e49a2-105">Você pode personalizar a resposta definindo várias propriedades, como <xref:System.Net.HttpListenerResponse.StatusCode%2A>, <xref:System.Net.HttpListenerResponse.StatusDescription%2A>, e <xref:System.Net.HttpListenerResponse.Cookies%2A>.</span><span class="sxs-lookup"><span data-stu-id="e49a2-105">You can customize the response by setting various properties, such as <xref:System.Net.HttpListenerResponse.StatusCode%2A>, <xref:System.Net.HttpListenerResponse.StatusDescription%2A>, and <xref:System.Net.HttpListenerResponse.Cookies%2A>.</span></span> <span data-ttu-id="e49a2-106">Use o <xref:System.Net.HttpListenerResponse.OutputStream%2A?displayProperty=nameWithType> propriedade para obter um <xref:System.IO.Stream> instância à qual resposta dados podem ser gravados.</span><span class="sxs-lookup"><span data-stu-id="e49a2-106">Use the <xref:System.Net.HttpListenerResponse.OutputStream%2A?displayProperty=nameWithType> property to obtain a <xref:System.IO.Stream> instance to which response data can be written.</span></span> <span data-ttu-id="e49a2-107">Por fim, enviar os dados de resposta ao cliente, chamando o <xref:System.Net.HttpListenerResponse.Close%2A> método.</span><span class="sxs-lookup"><span data-stu-id="e49a2-107">Finally, send the response data to the client by calling the <xref:System.Net.HttpListenerResponse.Close%2A> method.</span></span>  
 
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.HttpListener" />
    <altmember cref="T:System.Net.HttpListenerContext" />
    <altmember cref="T:System.Net.HttpListenerRequest" />
  </Docs>
  <Members>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerResponse.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort();" />
      <MemberSignature Language="F#" Value="member this.Abort : unit -&gt; unit" Usage="httpListenerResponse.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e49a2-108">Closes the connection to the client without sending a response.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-108">Closes the connection to the client without sending a response.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e49a2-109">Chamar este método em um objeto que já foi fechado não tem nenhum efeito.</span><span class="sxs-lookup"><span data-stu-id="e49a2-109">Calling this method on an object that has already been closed has no effect.</span></span> <span data-ttu-id="e49a2-110">Se a resposta não foi fechada, este método fecha-lo e associado <xref:System.Net.HttpListenerRequest> e <xref:System.Net.HttpListenerContext> objetos.</span><span class="sxs-lookup"><span data-stu-id="e49a2-110">If the response has not already been closed, this method closes it and the associated <xref:System.Net.HttpListenerRequest> and <xref:System.Net.HttpListenerContext> objects.</span></span> <span data-ttu-id="e49a2-111">A conexão para o cliente também é fechado, independentemente do <xref:System.Net.HttpListenerRequest.KeepAlive%2A> valor da propriedade de solicitação do cliente.</span><span class="sxs-lookup"><span data-stu-id="e49a2-111">The connection to the client is also closed, regardless of the <xref:System.Net.HttpListenerRequest.KeepAlive%2A> property value of the client request.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerRequest" />
      </Docs>
    </Member>
    <Member MemberName="AddHeader">
      <MemberSignature Language="C#" Value="public void AddHeader (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHeader(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerResponse.AddHeader(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddHeader (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddHeader(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddHeader : string * string -&gt; unit" Usage="httpListenerResponse.AddHeader (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="e49a2-112">The name of the HTTP header to set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-112">The name of the HTTP header to set.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="e49a2-113">The value for the <c>name</c> header.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-113">The value for the <c>name</c> header.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e49a2-114">Adds the specified header and value to the HTTP headers for this response.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-114">Adds the specified header and value to the HTTP headers for this response.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e49a2-115">Chamar esse método é equivalente a chamar o <xref:System.Net.WebHeaderCollection.Set%2A> método na coleção retornada pelo <xref:System.Net.HttpListenerResponse.Headers%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="e49a2-115">Calling this method is equivalent to calling the <xref:System.Net.WebHeaderCollection.Set%2A> method on the collection returned by the <xref:System.Net.HttpListenerResponse.Headers%2A> property.</span></span>  
  
 <span data-ttu-id="e49a2-116">Se o cabeçalho especificado em `name` não existir, esse método insere um novo cabeçalho para o <xref:System.Net.HttpListenerResponse.Headers%2A> coleção da propriedade.</span><span class="sxs-lookup"><span data-stu-id="e49a2-116">If the header specified in `name` does not exist, this method inserts a new header into the <xref:System.Net.HttpListenerResponse.Headers%2A> property's collection.</span></span> <span data-ttu-id="e49a2-117">Se `name` está presente na coleção, esse substitui o método existente de valor com `value`.</span><span class="sxs-lookup"><span data-stu-id="e49a2-117">If `name` is present in the collection, this method replaces the existing value with `value`.</span></span> <span data-ttu-id="e49a2-118">Para adicionar um valor a um cabeçalho existente sem substituir o valor existente, use o <xref:System.Net.HttpListenerResponse.AppendHeader%2A> método.</span><span class="sxs-lookup"><span data-stu-id="e49a2-118">To add a value to an existing header without replacing the existing value, use the <xref:System.Net.HttpListenerResponse.AppendHeader%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e49a2-119">O exemplo de código a seguir demonstra como adicionar um cabeçalho usando essa propriedade.</span><span class="sxs-lookup"><span data-stu-id="e49a2-119">The following code example demonstrates adding a header using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#26](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#26)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e49a2-120">
            <paramref name="name" /> is <see langword="null" /> or an empty string ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-120">
              <paramref name="name" /> is <see langword="null" /> or an empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e49a2-121">You are not allowed to specify a value for the specified header.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-121">You are not allowed to specify a value for the specified header.</span>
          </span>
          <span data-ttu-id="e49a2-122">-or-  <paramref name="name" /> or <paramref name="value" /> contains invalid characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-122">-or-  <paramref name="name" /> or <paramref name="value" /> contains invalid characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e49a2-123">The length of <paramref name="value" /> is greater than 65,535 characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-123">The length of <paramref name="value" /> is greater than 65,535 characters.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerRequest" />
        <altmember cref="T:System.Net.WebHeaderCollection" />
      </Docs>
    </Member>
    <Member MemberName="AppendCookie">
      <MemberSignature Language="C#" Value="public void AppendCookie (System.Net.Cookie cookie);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendCookie(class System.Net.Cookie cookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerResponse.AppendCookie(System.Net.Cookie)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendCookie(System::Net::Cookie ^ cookie);" />
      <MemberSignature Language="F#" Value="member this.AppendCookie : System.Net.Cookie -&gt; unit" Usage="httpListenerResponse.AppendCookie cookie" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cookie" Type="System.Net.Cookie" />
      </Parameters>
      <Docs>
        <param name="cookie">
          <span data-ttu-id="e49a2-124">The <see cref="T:System.Net.Cookie" /> to add to the collection to be sent with this response.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-124">The <see cref="T:System.Net.Cookie" /> to add to the collection to be sent with this response.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e49a2-125">Adds the specified <see cref="T:System.Net.Cookie" /> to the collection of cookies for this response.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-125">Adds the specified <see cref="T:System.Net.Cookie" /> to the collection of cookies for this response.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e49a2-126">Chamar esse método é equivalente a chamar o <xref:System.Net.CookieCollection.Add%2A> método na coleção retornada pelo <xref:System.Net.HttpListenerResponse.Cookies%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="e49a2-126">Calling this method is equivalent to calling the <xref:System.Net.CookieCollection.Add%2A> method on the collection returned by the <xref:System.Net.HttpListenerResponse.Cookies%2A> property.</span></span>  
  
 <span data-ttu-id="e49a2-127">Se o cookie especificado não existe no <xref:System.Net.HttpListenerResponse.Cookies%2A> coleção da propriedade `cookie` é adicionado.</span><span class="sxs-lookup"><span data-stu-id="e49a2-127">If the specified cookie does not exist in the <xref:System.Net.HttpListenerResponse.Cookies%2A> property's collection, `cookie` is added.</span></span> <span data-ttu-id="e49a2-128">Se o cookie existe na coleção, `cookie` substitui-lo.</span><span class="sxs-lookup"><span data-stu-id="e49a2-128">If the cookie exists in the collection, `cookie` replaces it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e49a2-129">O exemplo de código a seguir demonstra como adicionar um cookie para uma resposta</span><span class="sxs-lookup"><span data-stu-id="e49a2-129">The following code example demonstrates adding a cookie to a response</span></span>  
  
 [!code-csharp[Net_Listener_Basic#20](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e49a2-130">
            <paramref name="cookie" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-130">
              <paramref name="cookie" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerRequest" />
      </Docs>
    </Member>
    <Member MemberName="AppendHeader">
      <MemberSignature Language="C#" Value="public void AppendHeader (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendHeader(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerResponse.AppendHeader(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendHeader (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendHeader(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.AppendHeader : string * string -&gt; unit" Usage="httpListenerResponse.AppendHeader (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="e49a2-131">The name of the HTTP header to append <c>value</c> to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-131">The name of the HTTP header to append <c>value</c> to.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="e49a2-132">The value to append to the <c>name</c> header.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-132">The value to append to the <c>name</c> header.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e49a2-133">Appends a value to the specified HTTP header to be sent with this response.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-133">Appends a value to the specified HTTP header to be sent with this response.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e49a2-134">Chamar esse método é equivalente a chamar o <xref:System.Net.WebHeaderCollection.Add%2A> método na coleção retornada pelo <xref:System.Net.HttpListenerResponse.Headers%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="e49a2-134">Calling this method is equivalent to calling the <xref:System.Net.WebHeaderCollection.Add%2A> method on the collection returned by the <xref:System.Net.HttpListenerResponse.Headers%2A> property.</span></span>  
  
 <span data-ttu-id="e49a2-135">Se o cabeçalho especificado em `header` não existir, esse método insere um novo cabeçalho para o <xref:System.Net.HttpListenerResponse.Headers%2A> coleção da propriedade.</span><span class="sxs-lookup"><span data-stu-id="e49a2-135">If the header specified in `header` does not exist, this method inserts a new header into the <xref:System.Net.HttpListenerResponse.Headers%2A> property's collection.</span></span> <span data-ttu-id="e49a2-136">Se `header` está presente na coleção, este método adiciona `value` para os valores existentes.</span><span class="sxs-lookup"><span data-stu-id="e49a2-136">If `header` is present in the collection, this method adds `value` to the existing values.</span></span> <span data-ttu-id="e49a2-137">Para substituir o valor de um cabeçalho existente, use o <xref:System.Net.HttpListenerResponse.AddHeader%2A> método.</span><span class="sxs-lookup"><span data-stu-id="e49a2-137">To replace the value of an existing header, use the <xref:System.Net.HttpListenerResponse.AddHeader%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e49a2-138">
            <paramref name="name" /> is <see langword="null" /> or an empty string ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-138">
              <paramref name="name" /> is <see langword="null" /> or an empty string ("").</span>
          </span>
          <span data-ttu-id="e49a2-139">-or-  You are not allowed to specify a value for the specified header.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-139">-or-  You are not allowed to specify a value for the specified header.</span>
          </span>
          <span data-ttu-id="e49a2-140">-or-  <paramref name="name" /> or <paramref name="value" /> contains invalid characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-140">-or-  <paramref name="name" /> or <paramref name="value" /> contains invalid characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e49a2-141">The length of <paramref name="value" /> is greater than 65,535 characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-141">The length of <paramref name="value" /> is greater than 65,535 characters.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerRequest" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Close">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e49a2-142">Sends the response to the client and releases the resources held by this <see cref="T:System.Net.HttpListenerResponse" /> instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-142">Sends the response to the client and releases the resources held by this <see cref="T:System.Net.HttpListenerResponse" /> instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerResponse.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="httpListenerResponse.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e49a2-143">Sends the response to the client and releases the resources held by this <see cref="T:System.Net.HttpListenerResponse" /> instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-143">Sends the response to the client and releases the resources held by this <see cref="T:System.Net.HttpListenerResponse" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e49a2-144">Este método fecha o fluxo de resposta e o <xref:System.Net.HttpListenerRequest> associado à resposta.</span><span class="sxs-lookup"><span data-stu-id="e49a2-144">This method closes the response stream and the <xref:System.Net.HttpListenerRequest> associated with the response.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e49a2-145">O exemplo de código a seguir demonstra a chamar esse método para enviar um <xref:System.Net.HttpStatusCode.Forbidden> (403) resposta ao cliente.</span><span class="sxs-lookup"><span data-stu-id="e49a2-145">The following code example demonstrates calling this method to send a <xref:System.Net.HttpStatusCode.Forbidden> (403) response to the client.</span></span>  
  
 [!code-csharp[NclListener#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLListener/CS/sample.cs#5)]
 [!code-vb[NclListener#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLListener/vb/sample.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerRequest" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close (byte[] responseEntity, bool willBlock);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close(unsigned int8[] responseEntity, bool willBlock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerResponse.Close(System.Byte[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close (responseEntity As Byte(), willBlock As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close(cli::array &lt;System::Byte&gt; ^ responseEntity, bool willBlock);" />
      <MemberSignature Language="F#" Value="member this.Close : byte[] * bool -&gt; unit" Usage="httpListenerResponse.Close (responseEntity, willBlock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="responseEntity" Type="System.Byte[]" />
        <Parameter Name="willBlock" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="responseEntity">
          <span data-ttu-id="e49a2-146">A <see cref="T:System.Byte" /> array that contains the response to send to the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-146">A <see cref="T:System.Byte" /> array that contains the response to send to the client.</span>
          </span>
        </param>
        <param name="willBlock">
          <span data-ttu-id="e49a2-147">
            <see langword="true" /> to block execution while flushing the stream to the client; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-147">
              <see langword="true" /> to block execution while flushing the stream to the client; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e49a2-148">Returns the specified byte array to the client and releases the resources held by this <see cref="T:System.Net.HttpListenerResponse" /> instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-148">Returns the specified byte array to the client and releases the resources held by this <see cref="T:System.Net.HttpListenerResponse" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e49a2-149">Se você estiver enviando o corpo de dados com a resposta, você pode usar esse método para enviá-lo como um <xref:System.Byte> matriz em vez de gravar os dados de corpo para o <xref:System.Net.HttpListenerResponse.OutputStream%2A> propriedade e chamar o <xref:System.Net.HttpListenerResponse.Close%2A> método.</span><span class="sxs-lookup"><span data-stu-id="e49a2-149">If you are sending body data with the response, you can use this method to send it as a <xref:System.Byte> array instead of writing the body data to the <xref:System.Net.HttpListenerResponse.OutputStream%2A> property and calling the <xref:System.Net.HttpListenerResponse.Close%2A> method.</span></span>  
  
 <span data-ttu-id="e49a2-150">Este método fecha o fluxo de resposta e o <xref:System.Net.HttpListenerRequest> associado à resposta.</span><span class="sxs-lookup"><span data-stu-id="e49a2-150">This method closes the response stream and the <xref:System.Net.HttpListenerRequest> associated with the response.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e49a2-151">O exemplo de código a seguir demonstra como chamar esse método.</span><span class="sxs-lookup"><span data-stu-id="e49a2-151">The following code example demonstrates calling this method.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#24](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e49a2-152">
            <paramref name="responseEntity" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-152">
              <paramref name="responseEntity" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e49a2-153">This object is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-153">This object is closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerRequest" />
      </Docs>
    </Member>
    <Member MemberName="ContentEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding ContentEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding ContentEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerResponse.ContentEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ ContentEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentEncoding : System.Text.Encoding with get, set" Usage="System.Net.HttpListenerResponse.ContentEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e49a2-154">Gets or sets the <see cref="T:System.Text.Encoding" /> for this response's <see cref="P:System.Net.HttpListenerResponse.OutputStream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-154">Gets or sets the <see cref="T:System.Text.Encoding" /> for this response's <see cref="P:System.Net.HttpListenerResponse.OutputStream" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e49a2-155">Um objeto <see cref="T:System.Text.Encoding" /> adequado para usar com os dados na propriedade <see cref="P:System.Net.HttpListenerResponse.OutputStream" /> ou <see langword="null" />, se nenhuma codificação for especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-155">An <see cref="T:System.Text.Encoding" /> object suitable for use with the data in the <see cref="P:System.Net.HttpListenerResponse.OutputStream" /> property, or <see langword="null" /> if no encoding is specified.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e49a2-156">Um <xref:System.Text.Encoding> objeto pode ser usado para converter as sequências de bytes em conjuntos de caracteres (páginas de código) e caracteres em sequências de bytes.</span><span class="sxs-lookup"><span data-stu-id="e49a2-156">An <xref:System.Text.Encoding> object can be used to convert byte sequences into character sets (code pages) and characters into byte sequences.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e49a2-157">O exemplo de código a seguir demonstra como usar essa propriedade.</span><span class="sxs-lookup"><span data-stu-id="e49a2-157">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[NclListener#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLListener/CS/sample.cs#5)]
 [!code-vb[NclListener#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLListener/vb/sample.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerRequest" />
      </Docs>
    </Member>
    <Member MemberName="ContentLength64">
      <MemberSignature Language="C#" Value="public long ContentLength64 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ContentLength64" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerResponse.ContentLength64" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentLength64 As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ContentLength64 { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.ContentLength64 : int64 with get, set" Usage="System.Net.HttpListenerResponse.ContentLength64" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e49a2-158">Gets or sets the number of bytes in the body data included in the response.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-158">Gets or sets the number of bytes in the body data included in the response.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e49a2-159">O valor do cabeçalho <see langword="Content-Length" /> da resposta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-159">The value of the response's <see langword="Content-Length" /> header.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e49a2-160">O `Content-Length` cabeçalho expressa o comprimento, em bytes, dos dados do corpo da resposta.</span><span class="sxs-lookup"><span data-stu-id="e49a2-160">The `Content-Length` header expresses the length, in bytes, of the response's body data.</span></span> <span data-ttu-id="e49a2-161">Quando usar um formato que não é enviar os dados em partes ou bruto, você deve definir o <xref:System.Net.HttpListenerResponse.ContentLength64%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="e49a2-161">When using a format that is not send the data chunked or raw, you must set the <xref:System.Net.HttpListenerResponse.ContentLength64%2A> property.</span></span> <span data-ttu-id="e49a2-162">Se você não fizer isso, o <xref:System.Net.HttpListener> não envia os dados de resposta.</span><span class="sxs-lookup"><span data-stu-id="e49a2-162">If you do not, the <xref:System.Net.HttpListener> does not send the response data.</span></span>  
  
 <span data-ttu-id="e49a2-163">Para obter uma lista completa de cabeçalhos de resposta, consulte o <xref:System.Net.HttpResponseHeader> enumeração.</span><span class="sxs-lookup"><span data-stu-id="e49a2-163">For a complete list of response headers, see the <xref:System.Net.HttpResponseHeader> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e49a2-164">O exemplo de código a seguir demonstra como definir o valor dessa propriedade.</span><span class="sxs-lookup"><span data-stu-id="e49a2-164">The following code example demonstrates setting the value of this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e49a2-165">The value specified for a set operation is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-165">The value specified for a set operation is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e49a2-166">The response is already being sent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-166">The response is already being sent.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e49a2-167">This object is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-167">This object is closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerRequest" />
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public string ContentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerResponse.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentType : string with get, set" Usage="System.Net.HttpListenerResponse.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e49a2-168">Gets or sets the MIME type of the content returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-168">Gets or sets the MIME type of the content returned.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e49a2-169">Uma instância de <see cref="T:System.String" /> que contém o texto do cabeçalho <see langword="Content-Type" /> da resposta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-169">A <see cref="T:System.String" /> instance that contains the text of the response's <see langword="Content-Type" /> header.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e49a2-170">Ao se comunicar com um navegador da Web, você deve definir explicitamente essa propriedade ao retornar qualquer tipo de conteúdo diferente de `text/html`.</span><span class="sxs-lookup"><span data-stu-id="e49a2-170">When communicating with a Web browser, you should explicitly set this property when returning any content type other than `text/html`.</span></span>  
  
 <span data-ttu-id="e49a2-171">Para obter uma lista completa de cabeçalhos de resposta, consulte o <xref:System.Net.HttpResponseHeader> enumeração.</span><span class="sxs-lookup"><span data-stu-id="e49a2-171">For a complete list of response headers, see the <xref:System.Net.HttpResponseHeader> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e49a2-172">The value specified for a set operation is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-172">The value specified for a set operation is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e49a2-173">The value specified for a set operation is an empty string ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-173">The value specified for a set operation is an empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e49a2-174">This object is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-174">This object is closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerRequest" />
      </Docs>
    </Member>
    <Member MemberName="Cookies">
      <MemberSignature Language="C#" Value="public System.Net.CookieCollection Cookies { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.CookieCollection Cookies" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerResponse.Cookies" />
      <MemberSignature Language="VB.NET" Value="Public Property Cookies As CookieCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::CookieCollection ^ Cookies { System::Net::CookieCollection ^ get(); void set(System::Net::CookieCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Cookies : System.Net.CookieCollection with get, set" Usage="System.Net.HttpListenerResponse.Cookies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.CookieCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e49a2-175">Gets or sets the collection of cookies returned with the response.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-175">Gets or sets the collection of cookies returned with the response.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e49a2-176">Um <see cref="T:System.Net.CookieCollection" /> que contém os cookies para acompanhar a resposta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-176">A <see cref="T:System.Net.CookieCollection" /> that contains cookies to accompany the response.</span>
          </span>
          <span data-ttu-id="e49a2-177">A coleção estará vazia se nenhum cookie tiver sido adicionado à resposta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-177">The collection is empty if no cookies have been added to the response.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e49a2-178">Um cookie é dados de texto de nome/valor de um servidor Web que é armazenado no computador local (cliente).</span><span class="sxs-lookup"><span data-stu-id="e49a2-178">A cookie is name/value text data from a Web server that is stored on the local (client) computer.</span></span> <span data-ttu-id="e49a2-179">Há suporte para os seguintes formatos de cookie: Netscape, RFC 2109 e RFC 2965.</span><span class="sxs-lookup"><span data-stu-id="e49a2-179">The following cookie formats are supported: Netscape, RFC 2109, and RFC 2965.</span></span> <span data-ttu-id="e49a2-180">A especificação de cookie Netscape está disponível em http://wp.netscape.com/newsref/std/cookie_spec.html; os documentos da RFC estão disponíveis em [ https://www.rfc-editor.org/ ](https://www.rfc-editor.org/).</span><span class="sxs-lookup"><span data-stu-id="e49a2-180">The Netscape cookie specification is available at http://wp.netscape.com/newsref/std/cookie_spec.html; the RFC documents are available at [https://www.rfc-editor.org/](https://www.rfc-editor.org/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e49a2-181">O exemplo de código a seguir verifica uma solicitação para um cookie e retorna um novo cookie com a resposta se a solicitação não tiver uma.</span><span class="sxs-lookup"><span data-stu-id="e49a2-181">The following code example checks a request for a cookie, and returns a new cookie with the response if the request did not have one.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#20](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerRequest" />
      </Docs>
    </Member>
    <Member MemberName="CopyFrom">
      <MemberSignature Language="C#" Value="public void CopyFrom (System.Net.HttpListenerResponse templateResponse);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyFrom(class System.Net.HttpListenerResponse templateResponse) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerResponse.CopyFrom(System.Net.HttpListenerResponse)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyFrom (templateResponse As HttpListenerResponse)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyFrom(System::Net::HttpListenerResponse ^ templateResponse);" />
      <MemberSignature Language="F#" Value="member this.CopyFrom : System.Net.HttpListenerResponse -&gt; unit" Usage="httpListenerResponse.CopyFrom templateResponse" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="templateResponse" Type="System.Net.HttpListenerResponse" />
      </Parameters>
      <Docs>
        <param name="templateResponse">
          <span data-ttu-id="e49a2-182">The <see cref="T:System.Net.HttpListenerResponse" /> instance to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-182">The <see cref="T:System.Net.HttpListenerResponse" /> instance to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e49a2-183">Copies properties from the specified <see cref="T:System.Net.HttpListenerResponse" /> to this response.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-183">Copies properties from the specified <see cref="T:System.Net.HttpListenerResponse" /> to this response.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e49a2-184">Se você alterar regularmente muitas propriedades de seus valores padrão para um conjunto fixo de novos valores, é conveniente usar um <xref:System.Net.HttpListenerResponse> instância como um modelo.</span><span class="sxs-lookup"><span data-stu-id="e49a2-184">If you regularly change many properties from their default values to a fixed set of new values, it is convenient to use an <xref:System.Net.HttpListenerResponse> instance as a template.</span></span> <span data-ttu-id="e49a2-185">Personalizar a resposta de modelo uma vez e, em vez de configurar cada resposta separadamente, chame o <xref:System.Net.HttpListenerResponse.CopyFrom%2A> método para configurar uma nova resposta com base nos valores de propriedade na resposta do modelo.</span><span class="sxs-lookup"><span data-stu-id="e49a2-185">Customize the template response once and, instead of configuring each response separately, call the <xref:System.Net.HttpListenerResponse.CopyFrom%2A> method to configure a new response based on property values in the template response.</span></span>  
  
 <span data-ttu-id="e49a2-186">As propriedades a seguir são copiadas do `templateResponse` para a instância atual.</span><span class="sxs-lookup"><span data-stu-id="e49a2-186">The following properties are copied from `templateResponse` to the current instance.</span></span>  
  
-   <xref:System.Net.HttpListenerResponse.Headers%2A>  
  
-   <xref:System.Net.HttpListenerResponse.ContentLength64%2A>  
  
-   <xref:System.Net.HttpListenerResponse.StatusCode%2A>  
  
-   <xref:System.Net.HttpListenerResponse.StatusDescription%2A>  
  
-   <xref:System.Net.HttpListenerResponse.KeepAlive%2A>  
  
-   <xref:System.Net.HttpListenerResponse.ProtocolVersion%2A>  
  
   
  
## Examples  
 <span data-ttu-id="e49a2-187">O exemplo de código a seguir demonstra como criar uma resposta copiando uma resposta de modelo.</span><span class="sxs-lookup"><span data-stu-id="e49a2-187">The following code example demonstrates creating a response by copying a template response.</span></span>  
  
 [!code-csharp[NCLListener#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLListener/CS/sample.cs#5)]
 [!code-vb[NCLListener#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLListener/vb/sample.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerRequest" />
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.Net.WebHeaderCollection Headers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.WebHeaderCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerResponse.Headers" />
      <MemberSignature Language="VB.NET" Value="Public Property Headers As WebHeaderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::WebHeaderCollection ^ Headers { System::Net::WebHeaderCollection ^ get(); void set(System::Net::WebHeaderCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Net.WebHeaderCollection with get, set" Usage="System.Net.HttpListenerResponse.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e49a2-188">Gets or sets the collection of header name/value pairs returned by the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-188">Gets or sets the collection of header name/value pairs returned by the server.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e49a2-189">Uma instância de <see cref="T:System.Net.WebHeaderCollection" /> que contém todos os cabeçalhos HTTP explicitamente definidos a serem incluídos na resposta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-189">A <see cref="T:System.Net.WebHeaderCollection" /> instance that contains all the explicitly set HTTP headers to be included in the response.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e49a2-190">Cabeçalhos de resposta contêm informações de metadados, como a data e o tempo de resposta, a identidade do servidor de resposta e o tipo MIME dos dados contidos no corpo da resposta.</span><span class="sxs-lookup"><span data-stu-id="e49a2-190">Response headers contain metadata information such as the date and time of the response, the identity of the responding server, and the MIME type of the data contained in the response body.</span></span>  
  
 <span data-ttu-id="e49a2-191">Para obter uma lista completa de cabeçalhos de resposta, consulte o <xref:System.Net.HttpResponseHeader> enumeração.</span><span class="sxs-lookup"><span data-stu-id="e49a2-191">For a complete list of response headers, see the <xref:System.Net.HttpResponseHeader> enumeration.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e49a2-192">Se você tentar definir um comprimento de conteúdo, Keep-Alive, codificação de transferência ou o cabeçalho WWW-Authenticate usando a propriedade de cabeçalhos, uma exceção será lançado.</span><span class="sxs-lookup"><span data-stu-id="e49a2-192">If you attempt to set a Content-Length, Keep-Alive, Transfer-Encoding, or WWW-Authenticate header using the Headers property, an exception will be thrown.</span></span> <span data-ttu-id="e49a2-193">Use o <xref:System.Net.HttpListenerResponse.KeepAlive%2A> ou <xref:System.Net.HttpListenerResponse.ContentLength64%2A> propriedades para definir esses cabeçalhos.</span><span class="sxs-lookup"><span data-stu-id="e49a2-193">Use the <xref:System.Net.HttpListenerResponse.KeepAlive%2A> or <xref:System.Net.HttpListenerResponse.ContentLength64%2A> properties to set these headers.</span></span> <span data-ttu-id="e49a2-194">Você não pode definir os cabeçalhos de codificação de transferência ou WWW-Authenticate manualmente.</span><span class="sxs-lookup"><span data-stu-id="e49a2-194">You cannot set the Transfer-Encoding or WWW-Authenticate headers manually.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e49a2-195">O exemplo de código a seguir demonstra como exibir cabeçalhos em uma <xref:System.Net.WebHeaderCollection>.</span><span class="sxs-lookup"><span data-stu-id="e49a2-195">The following code example demonstrates displaying the headers in a <xref:System.Net.WebHeaderCollection>.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#23](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e49a2-196">The <see cref="T:System.Net.WebHeaderCollection" /> instance specified for a set operation is not valid for a response.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-196">The <see cref="T:System.Net.WebHeaderCollection" /> instance specified for a set operation is not valid for a response.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerRequest" />
      </Docs>
    </Member>
    <Member MemberName="KeepAlive">
      <MemberSignature Language="C#" Value="public bool KeepAlive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepAlive" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerResponse.KeepAlive" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepAlive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepAlive { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.KeepAlive : bool with get, set" Usage="System.Net.HttpListenerResponse.KeepAlive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e49a2-197">Gets or sets a value indicating whether the server requests a persistent connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-197">Gets or sets a value indicating whether the server requests a persistent connection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e49a2-198">
            <see langword="true" /> se o servidor solicitar uma conexão persistente; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-198">
              <see langword="true" /> if the server requests a persistent connection; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="e49a2-199">O padrão é <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-199">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e49a2-200">Se um cliente HTTP e o servidor esperam trocar dados várias vezes em um curto período, uma conexão persistente acelera suas comunicações, permitindo que eles evitar a sobrecarga necessária para abrir e fechar uma conexão TCP para cada mensagem.</span><span class="sxs-lookup"><span data-stu-id="e49a2-200">If an HTTP client and server expect to exchange data multiple times in a short period, a persistent connection speeds up their communications by allowing them to avoid the overhead required to open and close a TCP connection for each message.</span></span> <span data-ttu-id="e49a2-201">As conexões persistentes são amplamente utilizadas na comunicação entre navegadores da Web modernos e servidores Web.</span><span class="sxs-lookup"><span data-stu-id="e49a2-201">Persistent connections are in widespread use in communications between modern Web browsers and Web servers.</span></span>  
  
 <span data-ttu-id="e49a2-202">As conexões persistentes são descritas detalhadamente a especificação do protocolo HTTP/1.1 (RFC 2616) disponível no site do Editor de RTF ([https://www.rfc-editor.org/](https://www.rfc-editor.org/)).</span><span class="sxs-lookup"><span data-stu-id="e49a2-202">Persistent connections are described in detail in the HTTP/1.1 protocol specification (RFC 2616) available at the RTF Editor Web site ([https://www.rfc-editor.org/](https://www.rfc-editor.org/)).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e49a2-203">O exemplo de código a seguir demonstra como definir o valor dessa propriedade.</span><span class="sxs-lookup"><span data-stu-id="e49a2-203">The following code example demonstrates setting the value of this property.</span></span>  
  
 [!code-csharp[NclListener#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLListener/CS/sample.cs#7)]
 [!code-vb[NclListener#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLListener/vb/sample.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e49a2-204">This object is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-204">This object is closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerRequest" />
      </Docs>
    </Member>
    <Member MemberName="OutputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream OutputStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream OutputStream" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerResponse.OutputStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ OutputStream { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OutputStream : System.IO.Stream" Usage="System.Net.HttpListenerResponse.OutputStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e49a2-205">Gets a <see cref="T:System.IO.Stream" /> object to which a response can be written.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-205">Gets a <see cref="T:System.IO.Stream" /> object to which a response can be written.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e49a2-206">Um objeto <see cref="T:System.IO.Stream" /> no qual uma resposta poderá ser gravada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-206">A <see cref="T:System.IO.Stream" /> object to which a response can be written.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e49a2-207">O <xref:System.Net.HttpListenerResponse.ContentLength64%2A> propriedade deve ser definida explicitamente antes de gravar retornado <xref:System.IO.Stream> objeto.</span><span class="sxs-lookup"><span data-stu-id="e49a2-207">The <xref:System.Net.HttpListenerResponse.ContentLength64%2A> property must be set explicitly before writing to the returned <xref:System.IO.Stream> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e49a2-208">A solicitação de fechamento não fecha o fluxo retornado por essa propriedade.</span><span class="sxs-lookup"><span data-stu-id="e49a2-208">Closing the request does not close the stream returned by this property.</span></span> <span data-ttu-id="e49a2-209">Quando você não precisa mais o fluxo, você deve fechá-lo chamando o método Close.</span><span class="sxs-lookup"><span data-stu-id="e49a2-209">When you no longer need the stream, you should close it by calling the Close method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e49a2-210">O exemplo de código a seguir demonstra como chamar esse método.</span><span class="sxs-lookup"><span data-stu-id="e49a2-210">The following code example demonstrates calling this method.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#3](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e49a2-211">This object is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-211">This object is closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerRequest" />
      </Docs>
    </Member>
    <Member MemberName="ProtocolVersion">
      <MemberSignature Language="C#" Value="public Version ProtocolVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version ProtocolVersion" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerResponse.ProtocolVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property ProtocolVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ ProtocolVersion { Version ^ get(); void set(Version ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ProtocolVersion : Version with get, set" Usage="System.Net.HttpListenerResponse.ProtocolVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e49a2-212">Gets or sets the HTTP version used for the response.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-212">Gets or sets the HTTP version used for the response.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e49a2-213">Um <see cref="T:System.Version" /> objeto que indica a versão de HTTP usado ao responder ao cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-213">A <see cref="T:System.Version" /> object indicating the version of HTTP used when responding to the client.</span>
          </span>
          <span data-ttu-id="e49a2-214">Observe que esta propriedade agora está obsoleta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-214">Note that this property is now obsolete.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e49a2-215">Os recursos de versões diferentes de HTTP são especificados nos documentos disponíveis em [ https://www.ietf.org ](https://www.ietf.org).</span><span class="sxs-lookup"><span data-stu-id="e49a2-215">The capabilities of different HTTP versions are specified in the documents available at [https://www.ietf.org](https://www.ietf.org).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e49a2-216">O exemplo de código a seguir demonstra como definir o valor dessa propriedade.</span><span class="sxs-lookup"><span data-stu-id="e49a2-216">The following code example demonstrates setting the value of this property.</span></span>  
  
 [!code-csharp[NclListener#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLListener/CS/sample.cs#5)]
 [!code-vb[NclListener#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLListener/vb/sample.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e49a2-217">The value specified for a set operation is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-217">The value specified for a set operation is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e49a2-218">The value specified for a set operation does not have its <see cref="P:System.Version.Major" /> property set to 1 or does not have its <see cref="P:System.Version.Minor" /> property set to either 0 or 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-218">The value specified for a set operation does not have its <see cref="P:System.Version.Major" /> property set to 1 or does not have its <see cref="P:System.Version.Minor" /> property set to either 0 or 1.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e49a2-219">This object is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-219">This object is closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerRequest" />
      </Docs>
    </Member>
    <Member MemberName="Redirect">
      <MemberSignature Language="C#" Value="public void Redirect (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Redirect(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerResponse.Redirect(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Redirect (url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Redirect(System::String ^ url);" />
      <MemberSignature Language="F#" Value="member this.Redirect : string -&gt; unit" Usage="httpListenerResponse.Redirect url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="e49a2-220">The URL that the client should use to locate the requested resource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-220">The URL that the client should use to locate the requested resource.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e49a2-221">Configures the response to redirect the client to the specified URL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-221">Configures the response to redirect the client to the specified URL.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e49a2-222">O <xref:System.Net.HttpListenerResponse.Redirect%2A> método é usado para redirecionar um cliente para o novo local para um recurso.</span><span class="sxs-lookup"><span data-stu-id="e49a2-222">The <xref:System.Net.HttpListenerResponse.Redirect%2A> method is used to redirect a client to the new location for a resource.</span></span> <span data-ttu-id="e49a2-223">Esse método define a resposta `Location` cabeçalho para `url`, o <xref:System.Net.HttpListenerResponse.StatusCode%2A> propriedade <xref:System.Net.HttpStatusCode.Redirect>e o <xref:System.Net.HttpListenerResponse.StatusDescription%2A> propriedade como "Não encontrado".</span><span class="sxs-lookup"><span data-stu-id="e49a2-223">This method sets the response's `Location` header to `url`, the <xref:System.Net.HttpListenerResponse.StatusCode%2A> property to <xref:System.Net.HttpStatusCode.Redirect>, and the <xref:System.Net.HttpListenerResponse.StatusDescription%2A> property to "Found".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e49a2-224">O exemplo de código a seguir demonstra como chamar esse método.</span><span class="sxs-lookup"><span data-stu-id="e49a2-224">The following code example demonstrates calling this method.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#27](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#27)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerRequest" />
      </Docs>
    </Member>
    <Member MemberName="RedirectLocation">
      <MemberSignature Language="C#" Value="public string RedirectLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RedirectLocation" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerResponse.RedirectLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property RedirectLocation As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RedirectLocation { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RedirectLocation : string with get, set" Usage="System.Net.HttpListenerResponse.RedirectLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e49a2-225">Gets or sets the value of the HTTP <see langword="Location" /> header in this response.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-225">Gets or sets the value of the HTTP <see langword="Location" /> header in this response.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e49a2-226">Um <see cref="T:System.String" /> que contém a URL absoluta para ser enviado ao cliente no <see langword="Location" /> cabeçalho.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-226">A <see cref="T:System.String" /> that contains the absolute URL to be sent to the client in the <see langword="Location" /> header.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e49a2-227">O `Location` cabeçalho Especifica a URL à qual o cliente é direcionado para localizar um recurso solicitado.</span><span class="sxs-lookup"><span data-stu-id="e49a2-227">The `Location` header specifies the URL to which the client is directed to locate a requested resource.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e49a2-228">Essa propriedade não definido automaticamente o <xref:System.Net.HttpListenerResponse.StatusCode%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="e49a2-228">Setting this property does not automatically set the <xref:System.Net.HttpListenerResponse.StatusCode%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e49a2-229">O exemplo de código a seguir demonstra a definição dessa propriedade.</span><span class="sxs-lookup"><span data-stu-id="e49a2-229">The following code example demonstrates setting this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#25](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e49a2-230">The value specified for a set operation is an empty string ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-230">The value specified for a set operation is an empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e49a2-231">This object is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-231">This object is closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerRequest" />
      </Docs>
    </Member>
    <Member MemberName="SendChunked">
      <MemberSignature Language="C#" Value="public bool SendChunked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SendChunked" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerResponse.SendChunked" />
      <MemberSignature Language="VB.NET" Value="Public Property SendChunked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SendChunked { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SendChunked : bool with get, set" Usage="System.Net.HttpListenerResponse.SendChunked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e49a2-232">Gets or sets whether the response uses chunked transfer encoding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-232">Gets or sets whether the response uses chunked transfer encoding.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e49a2-233">
            <see langword="true" /> se a resposta estiver definida para usar a codificação de transferência em bloco; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-233">
              <see langword="true" /> if the response is set to use chunked transfer encoding; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="e49a2-234">O padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-234">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e49a2-235">O corpo de uma mensagem em partes é composto por uma série de blocos.</span><span class="sxs-lookup"><span data-stu-id="e49a2-235">The body of a chunked message is made up of a series of chunks.</span></span> <span data-ttu-id="e49a2-236">Cada bloco consiste em duas partes, o tamanho dos dados parte e os dados reais.</span><span class="sxs-lookup"><span data-stu-id="e49a2-236">Each chunk comprises of two parts—the size of the chunk data and the actual data.</span></span> <span data-ttu-id="e49a2-237">Quando definido como true, a resposta será enviada usando, codificação de transferência em partes.</span><span class="sxs-lookup"><span data-stu-id="e49a2-237">When set to true the response is sent using chunked transfer encoding.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCookie">
      <MemberSignature Language="C#" Value="public void SetCookie (System.Net.Cookie cookie);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCookie(class System.Net.Cookie cookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerResponse.SetCookie(System.Net.Cookie)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCookie(System::Net::Cookie ^ cookie);" />
      <MemberSignature Language="F#" Value="member this.SetCookie : System.Net.Cookie -&gt; unit" Usage="httpListenerResponse.SetCookie cookie" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cookie" Type="System.Net.Cookie" />
      </Parameters>
      <Docs>
        <param name="cookie">
          <span data-ttu-id="e49a2-238">A <see cref="T:System.Net.Cookie" /> for this response.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-238">A <see cref="T:System.Net.Cookie" /> for this response.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e49a2-239">Adds or updates a <see cref="T:System.Net.Cookie" /> in the collection of cookies sent with this response.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-239">Adds or updates a <see cref="T:System.Net.Cookie" /> in the collection of cookies sent with this response.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e49a2-240">Dois cookies são considerados o mesmo se os valores de suas <xref:System.Net.Cookie.Name%2A>, <xref:System.Net.Cookie.Domain%2A>, e <xref:System.Net.Cookie.Path%2A> propriedades são as mesmas.</span><span class="sxs-lookup"><span data-stu-id="e49a2-240">Two cookies are considered the same if the values of their <xref:System.Net.Cookie.Name%2A>, <xref:System.Net.Cookie.Domain%2A>, and <xref:System.Net.Cookie.Path%2A> properties are the same.</span></span> <span data-ttu-id="e49a2-241">Se esses três partes de informações forem iguais, o método tenta atualizar o cookie.</span><span class="sxs-lookup"><span data-stu-id="e49a2-241">If these three pieces of information are the same, the method attempts to update the cookie.</span></span> <span data-ttu-id="e49a2-242">As comparações de nome e o domínio não diferenciam maiusculas de minúsculas, mas a comparação de caminho diferencia maiusculas de minúsculas.</span><span class="sxs-lookup"><span data-stu-id="e49a2-242">The name and domain comparisons are not case sensitive, but the path comparison is case sensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e49a2-243">O exemplo de código a seguir demonstra como chamar esse método.</span><span class="sxs-lookup"><span data-stu-id="e49a2-243">The following code example demonstrates calling this method.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#28](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#28)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e49a2-244">
            <paramref name="cookie" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-244">
              <paramref name="cookie" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e49a2-245">The cookie already exists in the collection and could not be replaced.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-245">The cookie already exists in the collection and could not be replaced.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerRequest" />
      </Docs>
    </Member>
    <Member MemberName="StatusCode">
      <MemberSignature Language="C#" Value="public int StatusCode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StatusCode" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerResponse.StatusCode" />
      <MemberSignature Language="VB.NET" Value="Public Property StatusCode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int StatusCode { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.StatusCode : int with get, set" Usage="System.Net.HttpListenerResponse.StatusCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e49a2-246">Gets or sets the HTTP status code to be returned to the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-246">Gets or sets the HTTP status code to be returned to the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e49a2-247">Um valor <see cref="T:System.Int32" /> que especifica o código de status HTTP para o recurso solicitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-247">An <see cref="T:System.Int32" /> value that specifies the HTTP status code for the requested resource.</span>
          </span>
          <span data-ttu-id="e49a2-248">O padrão é <see cref="F:System.Net.HttpStatusCode.OK" />, o que indica que o servidor processou a solicitação do cliente com êxito e incluiu o recurso solicitado no corpo da resposta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-248">The default is <see cref="F:System.Net.HttpStatusCode.OK" />, indicating that the server successfully processed the client's request and included the requested resource in the response body.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e49a2-249">Os clientes usam o código de status retornado pelo servidor para decidir como proceder.</span><span class="sxs-lookup"><span data-stu-id="e49a2-249">Clients use the status code returned by the server to decide how to proceed.</span></span> <span data-ttu-id="e49a2-250">Um valor de <xref:System.Net.HttpStatusCode.OK> indica que o servidor com êxito processou a solicitação do cliente e inclui o recurso solicitado no corpo da resposta.</span><span class="sxs-lookup"><span data-stu-id="e49a2-250">A value of <xref:System.Net.HttpStatusCode.OK> indicates that the server successfully processed the client's request and included the requested resource in the response body.</span></span> <span data-ttu-id="e49a2-251">Outros códigos de status comuns incluem <xref:System.Net.HttpStatusCode.NotFound>, indicando que o recurso solicitado não foi encontrado no servidor, e <xref:System.Net.HttpStatusCode.NotModified>, indicando que ele foi desnecessário retornar o recurso solicitado no corpo da resposta porque o cliente em cache a cópia do o recurso está atualizado.</span><span class="sxs-lookup"><span data-stu-id="e49a2-251">Other common status codes include <xref:System.Net.HttpStatusCode.NotFound>, indicating that the requested resource was not found on the server, and <xref:System.Net.HttpStatusCode.NotModified>, indicating that it was unnecessary to return the requested resource in the response body because the client's cached copy of the resource is up-to-date.</span></span>  
  
 <span data-ttu-id="e49a2-252">Para obter uma lista completa de códigos de status possíveis, consulte o <xref:System.Net.HttpStatusCode> enumeração.</span><span class="sxs-lookup"><span data-stu-id="e49a2-252">For a complete list of possible status codes, see the <xref:System.Net.HttpStatusCode> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e49a2-253">O exemplo de código a seguir demonstra como definir o valor dessa propriedade.</span><span class="sxs-lookup"><span data-stu-id="e49a2-253">The following code example demonstrates setting the value of this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#7](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e49a2-254">This object is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-254">This object is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.ProtocolViolationException">
          <span data-ttu-id="e49a2-255">The value specified for a set operation is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-255">The value specified for a set operation is not valid.</span>
          </span>
          <span data-ttu-id="e49a2-256">Valid values are between 100 and 999 inclusive.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-256">Valid values are between 100 and 999 inclusive.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerRequest" />
      </Docs>
    </Member>
    <Member MemberName="StatusDescription">
      <MemberSignature Language="C#" Value="public string StatusDescription { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StatusDescription" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerResponse.StatusDescription" />
      <MemberSignature Language="VB.NET" Value="Public Property StatusDescription As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StatusDescription { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StatusDescription : string with get, set" Usage="System.Net.HttpListenerResponse.StatusDescription" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e49a2-257">Gets or sets a text description of the HTTP status code returned to the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-257">Gets or sets a text description of the HTTP status code returned to the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e49a2-258">A descrição de texto do código de status HTTP retornado ao cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-258">The text description of the HTTP status code returned to the client.</span>
          </span>
          <span data-ttu-id="e49a2-259">O padrão é a descrição do RFC 2616 para o <see cref="P:System.Net.HttpListenerResponse.StatusCode" /> o valor da propriedade ou uma cadeia de caracteres vazia ("") se não existir uma descrição do RFC 2616.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-259">The default is the RFC 2616 description for the <see cref="P:System.Net.HttpListenerResponse.StatusCode" /> property value, or an empty string ("") if an RFC 2616 description does not exist.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e49a2-260">A descrição do status normalmente fornece detalhes que explicam o <xref:System.Net.HttpListenerResponse.StatusCode%2A> valor.</span><span class="sxs-lookup"><span data-stu-id="e49a2-260">The status description typically provides details that explain the <xref:System.Net.HttpListenerResponse.StatusCode%2A> value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e49a2-261">O exemplo de código a seguir demonstra como definir o valor dessa propriedade.</span><span class="sxs-lookup"><span data-stu-id="e49a2-261">The following code example demonstrates setting the value of this property.</span></span>  
  
 [!code-csharp[NclListener#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLListener/CS/sample.cs#7)]
 [!code-vb[NclListener#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLListener/vb/sample.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e49a2-262">The value specified for a set operation is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-262">The value specified for a set operation is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e49a2-263">The value specified for a set operation contains non-printable characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-263">The value specified for a set operation contains non-printable characters.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerRequest" />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerResponse.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e49a2-264">Releases all resources used by the <see cref="T:System.Net.HttpListenerResponse" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e49a2-264">Releases all resources used by the <see cref="T:System.Net.HttpListenerResponse" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e49a2-265">Use o <xref:System.Net.HttpListenerResponse.Close%2A> método para enviar a resposta e liberar os recursos mantidos por um <xref:System.Net.HttpListenerResponse>.</span><span class="sxs-lookup"><span data-stu-id="e49a2-265">Use the <xref:System.Net.HttpListenerResponse.Close%2A> method to send the response and release resources held by an <xref:System.Net.HttpListenerResponse>.</span></span> <span data-ttu-id="e49a2-266">Para descartar a resposta e liberar os recursos mantidos por esta instância, use o <xref:System.Net.HttpListenerResponse.Abort%2A> método.</span><span class="sxs-lookup"><span data-stu-id="e49a2-266">To discard the response and release the resources held by this instance, use the <xref:System.Net.HttpListenerResponse.Abort%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerRequest" />
      </Docs>
    </Member>
  </Members>
</Type>