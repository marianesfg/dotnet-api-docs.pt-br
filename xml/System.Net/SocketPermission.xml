<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SocketPermission.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5ac4c73bd39efe04be4531cc25c9b520ac59aa9bf.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ac4c73bd39efe04be4531cc25c9b520ac59aa9bf</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.SocketPermission">
          <source>Controls rights to make or accept connections on a transport address.</source>
          <target state="translated">Controla os direitos para estabelecer ou aceitar conexões em um endereço de transporte.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.SocketPermission">
          <source><ph id="ph1">&lt;xref:System.Net.SocketPermission&gt;</ph> instances control permission to accept connections or initiate <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> connections.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.SocketPermission&gt;</ph> instâncias de controlam a permissão para aceitar conexões ou iniciar <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> conexões.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.SocketPermission">
          <source>A <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> permission can be established for a host name or IP address, a port number, and a transport protocol.</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> permissão pode ser estabelecida para um nome de host ou endereço IP, um número de porta e protocolo de transporte.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.SocketPermission">
          <source>Avoid creating socket permissions using host names, as these names have to be resolved to IP addresses, and this might block the stack.</source>
          <target state="translated">Evite criar permissões de soquete usando nomes de host, como esses nomes precisam ser resolvidos para endereços IP, e isso pode impedir que a pilha.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.SocketPermission">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Net.SocketPermission&gt;</ph> class to set, change, and enforce various socket access restrictions.</source>
          <target state="translated">O exemplo a seguir demonstra como usar o <ph id="ph1">&lt;xref:System.Net.SocketPermission&gt;</ph> classe para definir, alterar e aplicar várias restrições de acesso de soquete.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="T:System.Net.SocketPermission">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.#ctor(System.Security.Permissions.PermissionState)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.Permissions.PermissionState" /&gt;</ph> values.</source>
          <target state="translated">Um dos valores de <ph id="ph1">&lt;see cref="T:System.Security.Permissions.PermissionState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.#ctor(System.Security.Permissions.PermissionState)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> class that allows unrestricted access to the <ph id="ph2">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> or disallows access to the <ph id="ph3">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> que dá acesso irrestrito ao <ph id="ph2">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> ou impede o acesso ao <ph id="ph3">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.#ctor(System.Security.Permissions.PermissionState)">
          <source>If the <ph id="ph1">&lt;xref:System.Net.SocketPermission&gt;</ph> instance is created with the <ph id="ph2">`Unrestricted`</ph> value from <ph id="ph3">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> then the <ph id="ph4">&lt;xref:System.Net.SocketPermission&gt;</ph> instance passes all demands.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.Net.SocketPermission&gt;</ph> instância é criada com o <ph id="ph2">`Unrestricted`</ph> valor <ph id="ph3">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> o <ph id="ph4">&lt;xref:System.Net.SocketPermission&gt;</ph> instância passa todas as demandas.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.#ctor(System.Security.Permissions.PermissionState)">
          <source>Any other value for <ph id="ph1">`state`</ph> results in a <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph> instance that fails all demands unless a transport address permission is added with <ph id="ph3">&lt;xref:System.Net.SocketPermission.AddPermission%2A&gt;</ph>.</source>
          <target state="translated">Qualquer outro valor para <ph id="ph1">`state`</ph> resulta em uma <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph> instância que falha em todas as demandas, a menos que uma permissão de endereço de transporte é adicionada com <ph id="ph3">&lt;xref:System.Net.SocketPermission.AddPermission%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.#ctor(System.Security.Permissions.PermissionState)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Net.SocketPermission&gt;</ph> using a <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> enumerated value.</source>
          <target state="translated">O exemplo a seguir cria um <ph id="ph1">&lt;xref:System.Net.SocketPermission&gt;</ph> usando um <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> valor de enumeração.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.#ctor(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Net.NetworkAccess" /&gt;</ph> values.</source>
          <target state="translated">Um dos valores de <ph id="ph1">&lt;see cref="T:System.Net.NetworkAccess" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.#ctor(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Net.TransportType" /&gt;</ph> values.</source>
          <target state="translated">Um dos valores de <ph id="ph1">&lt;see cref="T:System.Net.TransportType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.#ctor(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
          <source>The host name for the transport address.</source>
          <target state="translated">O nome do host para o endereço de transporte.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.#ctor(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
          <source>The port number for the transport address.</source>
          <target state="translated">O número da porta para o endereço de transporte.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.#ctor(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> class for the given transport address with the specified permission.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> para o endereço de transporte determinado com a permissão especificada.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.#ctor(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
          <source>This constructor creates a <ph id="ph1">&lt;xref:System.Net.SocketPermission&gt;</ph> that controls access to the specified <ph id="ph2">`hostName`</ph> and <ph id="ph3">`portNumber`</ph> using the specified <ph id="ph4">`transport`</ph>.</source>
          <target state="translated">Este construtor cria um <ph id="ph1">&lt;xref:System.Net.SocketPermission&gt;</ph> que controla o acesso especificado <ph id="ph2">`hostName`</ph> e <ph id="ph3">`portNumber`</ph> usando especificado <ph id="ph4">`transport`</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.#ctor(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
          <source>The <ph id="ph1">`hostName`</ph> can be a DNS name, an IP address, or a specified IP subnet, such as 192.168.1.*.</source>
          <target state="translated">O <ph id="ph1">`hostName`</ph> pode ser um nome DNS, endereço IP ou uma sub-rede IP especificada, como 192.168.1.*.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.#ctor(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
          <source>The <ph id="ph1">`portNumber`</ph> can be any valid port number defined by the transport, or <ph id="ph2">&lt;xref:System.Net.SocketPermission.AllPorts?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">`portNumber`</ph> pode ser qualquer número de porta válido definido pelo transporte, ou <ph id="ph2">&lt;xref:System.Net.SocketPermission.AllPorts?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.#ctor(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Net.SocketPermission&gt;</ph> using a <ph id="ph2">&lt;xref:System.Net.NetworkAccess&gt;</ph> enumerated value, a <ph id="ph3">&lt;xref:System.Net.TransportType&gt;</ph> enumerated value, the hostname, and the port number.</source>
          <target state="translated">O exemplo a seguir cria um <ph id="ph1">&lt;xref:System.Net.SocketPermission&gt;</ph> usando um <ph id="ph2">&lt;xref:System.Net.NetworkAccess&gt;</ph> enumerados valor, um <ph id="ph3">&lt;xref:System.Net.TransportType&gt;</ph> enumerados valor, o nome do host e o número da porta.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.#ctor(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="hostName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hostName" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="P:System.Net.SocketPermission.AcceptList">
          <source>Gets a list of <ph id="ph1">&lt;see cref="T:System.Net.EndpointPermission" /&gt;</ph> instances that identifies the endpoints that can be accepted under this permission instance.</source>
          <target state="translated">Obtém uma lista de instâncias <ph id="ph1">&lt;see cref="T:System.Net.EndpointPermission" /&gt;</ph> que identifica os pontos de extremidade que podem ser aceitos no âmbito dessa instância de permissão.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.SocketPermission.AcceptList">
          <source>An instance that implements the <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> interface that contains <ph id="ph2">&lt;see cref="T:System.Net.EndpointPermission" /&gt;</ph> instances.</source>
          <target state="translated">Uma instância que implementa o <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> interface contém <ph id="ph2">&lt;see cref="T:System.Net.EndpointPermission" /&gt;</ph> instâncias.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.SocketPermission.AcceptList">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Net.SocketPermission.AcceptList%2A&gt;</ph> property to return a list of endpoints to which accept privileges are granted.</source>
          <target state="translated">O exemplo a seguir usa o <ph id="ph1">&lt;xref:System.Net.SocketPermission.AcceptList%2A&gt;</ph> propriedade para retornar uma lista de pontos de extremidade que aceite privilégios são concedidos.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.AddPermission(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Net.NetworkAccess" /&gt;</ph> values.</source>
          <target state="translated">Um dos valores de <ph id="ph1">&lt;see cref="T:System.Net.NetworkAccess" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.AddPermission(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Net.TransportType" /&gt;</ph> values.</source>
          <target state="translated">Um dos valores de <ph id="ph1">&lt;see cref="T:System.Net.TransportType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.AddPermission(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
          <source>The host name for the transport address.</source>
          <target state="translated">O nome do host para o endereço de transporte.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.AddPermission(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
          <source>The port number for the transport address.</source>
          <target state="translated">O número da porta para o endereço de transporte.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.AddPermission(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
          <source>Adds a permission to the set of permissions for a transport address.</source>
          <target state="translated">Adiciona uma permissão ao conjunto de permissões de um endereço de transporte.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.AddPermission(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
          <source>The <ph id="ph1">`hostName`</ph> can be a DNS name, an IP address, or a specified IP subnet, such as 192.168.1.*.</source>
          <target state="translated">O <ph id="ph1">`hostName`</ph> pode ser um nome DNS, endereço IP ou uma sub-rede IP especificada, como 192.168.1.*.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.AddPermission(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Net.SocketPermission.AddPermission%2A&gt;</ph> method to add connection permissions to the specified host.</source>
          <target state="translated">O exemplo a seguir usa o <ph id="ph1">&lt;xref:System.Net.SocketPermission.AddPermission%2A&gt;</ph> método para adicionar permissões de conexão para o host especificado.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.AddPermission(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="hostName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hostName" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="F:System.Net.SocketPermission.AllPorts">
          <source>Defines a constant that represents all ports.</source>
          <target state="translated">Define uma constante que representa todas as portas.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Net.SocketPermission.AllPorts">
          <source>This field is read-only.</source>
          <target state="translated">Este campo é somente leitura.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Net.SocketPermission.AllPorts">
          <source>The value of this field is -1.</source>
          <target state="translated">O valor desse campo é -1.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Net.SocketPermission.AllPorts">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Net.SocketPermission.AllPorts&gt;</ph> property to provide connection permissions to all of the resources ports.</source>
          <target state="translated">O exemplo a seguir usa o <ph id="ph1">&lt;xref:System.Net.SocketPermission.AllPorts&gt;</ph> propriedade fornecer permissões de conexão para todas as portas de recursos.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.Net.SocketPermission.ConnectList">
          <source>Gets a list of <ph id="ph1">&lt;see cref="T:System.Net.EndpointPermission" /&gt;</ph> instances that identifies the endpoints that can be connected to under this permission instance.</source>
          <target state="translated">Obtém uma lista de instâncias <ph id="ph1">&lt;see cref="T:System.Net.EndpointPermission" /&gt;</ph> que identifica os pontos de extremidade que podem ser conectados no âmbito dessa instância de permissão.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.SocketPermission.ConnectList">
          <source>An instance that implements the <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> interface that contains <ph id="ph2">&lt;see cref="T:System.Net.EndpointPermission" /&gt;</ph> instances.</source>
          <target state="translated">Uma instância que implementa o <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> interface contém <ph id="ph2">&lt;see cref="T:System.Net.EndpointPermission" /&gt;</ph> instâncias.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.SocketPermission.ConnectList">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Net.SocketPermission.ConnectList%2A&gt;</ph> property to return a list of endpoints to which connection privileges are granted.</source>
          <target state="translated">O exemplo a seguir usa o <ph id="ph1">&lt;xref:System.Net.SocketPermission.ConnectList%2A&gt;</ph> propriedade para retornar uma lista de pontos de extremidade ao qual conexão os privilégios são concedidos.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.Copy">
          <source>Creates a copy of a <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> instance.</source>
          <target state="translated">Cria uma cópia de uma instância <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.Copy">
          <source>A new instance of the <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> class that is a copy of the current instance.</source>
          <target state="translated">Uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> que é uma cópia da instância atual.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.Copy">
          <source>The object returned by this method represents the same level of access as the current instance.</source>
          <target state="translated">O objeto retornado por esse método representa o mesmo nível de acesso que a instância atual.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.Copy">
          <source>This method overrides <ph id="ph1">&lt;xref:System.Security.CodeAccessPermission.Copy%2A&gt;</ph> and is implemented to support the <ph id="ph2">&lt;xref:System.Security.IPermission&gt;</ph> interface.</source>
          <target state="translated">Esse método substitui <ph id="ph1">&lt;xref:System.Security.CodeAccessPermission.Copy%2A&gt;</ph> e é implementado para dar suporte a <ph id="ph2">&lt;xref:System.Security.IPermission&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.Copy">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Net.SocketPermission&gt;</ph> by taking a copy of an existing <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph>.</source>
          <target state="translated">O exemplo a seguir cria um <ph id="ph1">&lt;xref:System.Net.SocketPermission&gt;</ph> fazendo uma cópia de um objeto existente por <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.FromXml(System.Security.SecurityElement)">
          <source>The XML encoding used to reconstruct the <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> instance.</source>
          <target state="translated">A codificação de XML usada para reconstruir a instância <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.FromXml(System.Security.SecurityElement)">
          <source>Reconstructs a <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> instance for an XML encoding.</source>
          <target state="translated">Reconstrói uma instância <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> para uma codificação de XML.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.FromXml(System.Security.SecurityElement)">
          <source>The <ph id="ph1">&lt;xref:System.Net.SocketPermission.FromXml%2A&gt;</ph> method reconstructs a <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph> instance from an XML encoding defined by the <ph id="ph3">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Net.SocketPermission.FromXml%2A&gt;</ph> método reconstrói um <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph> instância de uma codificação de XML definido pelo <ph id="ph3">&lt;xref:System.Security.SecurityElement&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.FromXml(System.Security.SecurityElement)">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.SocketPermission.ToXml%2A&gt;</ph> method to encode the <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph> instance, including state information, in XML.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Net.SocketPermission.ToXml%2A&gt;</ph> método para codificar o <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph> instância, incluindo informações de estado, em XML.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.FromXml(System.Security.SecurityElement)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Net.SocketPermission.FromXml%2A&gt;</ph> method to convert XML encoded data to a <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph> instance.</source>
          <target state="translated">O exemplo a seguir usa o <ph id="ph1">&lt;xref:System.Net.SocketPermission.FromXml%2A&gt;</ph> método para converter XML dados codificados para um <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph> instância.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.FromXml(System.Security.SecurityElement)">
          <source>The <ph id="ph1">&lt;paramref name="securityElement" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;paramref name="securityElement" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.FromXml(System.Security.SecurityElement)">
          <source>The <ph id="ph1">&lt;paramref name="securityElement" /&gt;</ph> is not a permission element for this type.</source>
          <target state="translated">O <ph id="ph1">&lt;paramref name="securityElement" /&gt;</ph> não é um elemento de permissão para esse tipo.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.Intersect(System.Security.IPermission)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> instance to intersect with the current instance.</source>
          <target state="translated">A instância <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> a se interseccionar com a instância atual.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.Intersect(System.Security.IPermission)">
          <source>Returns the logical intersection between two <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> instances.</source>
          <target state="translated">Retorna a interseção lógica entre duas instâncias <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.Intersect(System.Security.IPermission)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> instance that represents the intersection of two <ph id="ph2">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> instances.</source>
          <target state="translated">A instância <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> que representa a interseção de duas instâncias <ph id="ph2">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.Intersect(System.Security.IPermission)">
          <source>If the intersection is empty, the method returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Se a interseção estiver vazia, o método retornará <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.Intersect(System.Security.IPermission)">
          <source>If the <ph id="ph1">&lt;paramref name="target" /&gt;</ph> parameter is a null reference, the method returns <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Se o parâmetro <ph id="ph1">&lt;paramref name="target" /&gt;</ph> for uma referência nula, o método retornará <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.Intersect(System.Security.IPermission)">
          <source>The intersection of two permissions is a permission that helps to protect the resources and operations protected by both permissions.</source>
          <target state="translated">A interseção de duas permissões é uma permissão que ajuda a proteger os recursos e operações protegidas por ambas as permissões.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.Intersect(System.Security.IPermission)">
          <source>Specifically, it represents the minimum permission such that any demand that passes both permissions also passes their intersection.</source>
          <target state="translated">Especificamente, ele representa a permissão mínima, de modo que qualquer solicitação que passa as permissões também passa a interseção entre elas.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.Intersect(System.Security.IPermission)">
          <source>This method overrides <ph id="ph1">&lt;xref:System.Security.CodeAccessPermission.Intersect%2A&gt;</ph> and is implemented to support the <ph id="ph2">&lt;xref:System.Security.IPermission&gt;</ph> interface.</source>
          <target state="translated">Esse método substitui <ph id="ph1">&lt;xref:System.Security.CodeAccessPermission.Intersect%2A&gt;</ph> e é implementado para dar suporte a <ph id="ph2">&lt;xref:System.Security.IPermission&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.Intersect(System.Security.IPermission)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Net.SocketPermission.Intersect%2A&gt;</ph> method to obtain a logical intersection between two <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph> instances.</source>
          <target state="translated">O exemplo a seguir usa o <ph id="ph1">&lt;xref:System.Net.SocketPermission.Intersect%2A&gt;</ph> método para obter uma interseção lógica entre dois <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph> instâncias.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.Intersect(System.Security.IPermission)">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> parameter is not a <ph id="ph2">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph>.</source>
          <target state="translated">O parâmetro <ph id="ph1">&lt;paramref name="target" /&gt;</ph> não é um <ph id="ph2">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.Intersect(System.Security.IPermission)">
          <source><ph id="ph1">&lt;see cref="T:System.Net.DnsPermission" /&gt;</ph> is not granted to the method caller.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.DnsPermission" /&gt;</ph> não é concedido para o chamador do método.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.IsSubsetOf(System.Security.IPermission)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> that is to be tested for the subset relationship.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> que será testado para a relação de subconjunto.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.IsSubsetOf(System.Security.IPermission)">
          <source>Determines if the current permission is a subset of the specified permission.</source>
          <target state="translated">Determina se a permissão atual é um subconjunto da permissão especificada.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.IsSubsetOf(System.Security.IPermission)">
          <source>If <ph id="ph1">&lt;paramref name="target" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>, this method returns <ph id="ph3">&lt;see langword="true" /&gt;</ph> if the current instance defines no permissions; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Se <ph id="ph1">&lt;paramref name="target" /&gt;</ph> for <ph id="ph2">&lt;see langword="null" /&gt;</ph>, esse método retornará <ph id="ph3">&lt;see langword="true" /&gt;</ph> se a instância atual não definir permissões; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.IsSubsetOf(System.Security.IPermission)">
          <source>If <ph id="ph1">&lt;paramref name="target" /&gt;</ph> is not <ph id="ph2">&lt;see langword="null" /&gt;</ph>, this method returns <ph id="ph3">&lt;see langword="true" /&gt;</ph> if the current instance defines a subset of <ph id="ph4">&lt;paramref name="target" /&gt;</ph> permissions; otherwise, <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Se <ph id="ph1">&lt;paramref name="target" /&gt;</ph> não for <ph id="ph2">&lt;see langword="null" /&gt;</ph>, esse método retornará <ph id="ph3">&lt;see langword="true" /&gt;</ph> se a instância atual definir um subconjunto de permissões <ph id="ph4">&lt;paramref name="target" /&gt;</ph>; caso contrário, <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.IsSubsetOf(System.Security.IPermission)">
          <source>The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission.</source>
          <target state="translated">A permissão atual é um subconjunto de permissão especificada se a permissão atual especifica um conjunto de operações é totalmente contido pelo conjunto de permissões especificado.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.IsSubsetOf(System.Security.IPermission)">
          <source>For example, a permission that represents access to 192.168.1.1:80 is a subset of a permission that represents access to 192.168.1.1:Any.</source>
          <target state="translated">Por exemplo, uma permissão que representa acesso a 192.168.1.1: 80 é um subconjunto de uma permissão que representa acesso à 192.168.1.1:Any.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.IsSubsetOf(System.Security.IPermission)">
          <source>If this method returns <ph id="ph1">`true`</ph>, the current permission represents no more access to the protected resource than does the specified permission.</source>
          <target state="translated">Se esse método retornar <ph id="ph1">`true`</ph>, a permissão atual não representa nenhum mais acesso ao recurso protegido que a permissão especificada.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.IsSubsetOf(System.Security.IPermission)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Net.SocketPermission.IsSubsetOf%2A&gt;</ph> method to determine if one <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph> is the subset of another.</source>
          <target state="translated">O exemplo a seguir usa o <ph id="ph1">&lt;xref:System.Net.SocketPermission.IsSubsetOf%2A&gt;</ph> método para determinar se um <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph> é o subconjunto de outro.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.IsSubsetOf(System.Security.IPermission)">
          <source><ph id="ph1">&lt;paramref name="target" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Net.Sockets.SocketException" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph> não é um <ph id="ph2">&lt;see cref="T:System.Net.Sockets.SocketException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.IsSubsetOf(System.Security.IPermission)">
          <source><ph id="ph1">&lt;see cref="T:System.Net.DnsPermission" /&gt;</ph> is not granted to the method caller.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.DnsPermission" /&gt;</ph> não é concedido para o chamador do método.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.IsUnrestricted">
          <source>Checks the overall permission state of the object.</source>
          <target state="translated">Verifica o estado de permissão geral do objeto.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.IsUnrestricted">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> instance is created with the <ph id="ph3">&lt;see langword="Unrestricted" /&gt;</ph> value from <ph id="ph4">&lt;see cref="T:System.Security.Permissions.PermissionState" /&gt;</ph>; otherwise, <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se a instância <ph id="ph2">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> for criada com o valor <ph id="ph3">&lt;see langword="Unrestricted" /&gt;</ph> do <ph id="ph4">&lt;see cref="T:System.Security.Permissions.PermissionState" /&gt;</ph>; caso contrário, <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.IsUnrestricted">
          <source>The following example checks the <ph id="ph1">&lt;xref:System.Net.SocketPermission.IsUnrestricted%2A&gt;</ph> property to determine if the specified <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph> has any restrictions.</source>
          <target state="translated">A exemplo a seguir verifica o <ph id="ph1">&lt;xref:System.Net.SocketPermission.IsUnrestricted%2A&gt;</ph> para determinar se especificado <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph> tem quaisquer restrições.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.ToXml">
          <source>Creates an XML encoding of a <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> instance and its current state.</source>
          <target state="translated">Cria uma codificação de XML de uma instância <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> e de seu estado atual.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.ToXml">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph> instance that contains an XML-encoded representation of the <ph id="ph2">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> instance, including state information.</source>
          <target state="translated">Uma instância <ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph> que contém uma representação codificada em XML da instância <ph id="ph2">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph>, incluindo informações de estado.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.ToXml">
          <source>The <ph id="ph1">&lt;xref:System.Net.SocketPermission.ToXml%2A&gt;</ph> method creates a <ph id="ph2">&lt;xref:System.Security.SecurityElement&gt;</ph> instance to encode a representation of the <ph id="ph3">&lt;xref:System.Net.SocketPermission&gt;</ph> instance, including state information, in XML.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Net.SocketPermission.ToXml%2A&gt;</ph> método cria um <ph id="ph2">&lt;xref:System.Security.SecurityElement&gt;</ph> instância para codificar uma representação da <ph id="ph3">&lt;xref:System.Net.SocketPermission&gt;</ph> instância, incluindo informações de estado, em XML.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.ToXml">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.SocketPermission.FromXml%2A&gt;</ph> method to restore the state information from a <ph id="ph2">&lt;xref:System.Security.SecurityElement&gt;</ph> instance.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Net.SocketPermission.FromXml%2A&gt;</ph> método para restaurar as informações de estado de um <ph id="ph2">&lt;xref:System.Security.SecurityElement&gt;</ph> instância.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.ToXml">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Net.SocketPermission.ToXml%2A&gt;</ph> method to convert a <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph> to XML.</source>
          <target state="translated">O exemplo a seguir usa o <ph id="ph1">&lt;xref:System.Net.SocketPermission.ToXml%2A&gt;</ph> método para converter um <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph> em XML.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.Union(System.Security.IPermission)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> instance to combine with the current instance.</source>
          <target state="translated">A instância <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> a ser combinada com a instância atual.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.Union(System.Security.IPermission)">
          <source>Returns the logical union between two <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> instances.</source>
          <target state="translated">Retorna a união lógica entre duas instâncias <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.Union(System.Security.IPermission)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> instance that represents the union of two <ph id="ph2">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> instances.</source>
          <target state="translated">A instância <ph id="ph1">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph> que representa a união de duas instâncias <ph id="ph2">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.Union(System.Security.IPermission)">
          <source>If <ph id="ph1">&lt;paramref name="target" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>, it returns a copy of the current instance.</source>
          <target state="translated">Se o parâmetro <ph id="ph1">&lt;paramref name="target" /&gt;</ph> for <ph id="ph2">&lt;see langword="null" /&gt;</ph>, ele retornará uma cópia da instância atual.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.Union(System.Security.IPermission)">
          <source>The result of a call to <ph id="ph1">&lt;xref:System.Net.SocketPermission.Union%2A&gt;</ph> is a permission that represents all of the access to <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> connections represented by the current instance as well as the access represented by <ph id="ph3">`target`</ph>.</source>
          <target state="translated">O resultado de uma chamada para <ph id="ph1">&lt;xref:System.Net.SocketPermission.Union%2A&gt;</ph> é uma permissão que representa todo o acesso ao <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> conexões representadas pela instância atual, bem como o acesso representado por <ph id="ph3">`target`</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.Union(System.Security.IPermission)">
          <source>Any demand that passes either the current instance or <ph id="ph1">`target`</ph> passes their union.</source>
          <target state="translated">Qualquer solicitação que passa a atual instância ou <ph id="ph1">`target`</ph> passa seu union.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.Union(System.Security.IPermission)">
          <source>This method overrides <ph id="ph1">&lt;xref:System.Security.CodeAccessPermission.Union%2A&gt;</ph> and is implemented to support the <ph id="ph2">&lt;xref:System.Security.IPermission&gt;</ph> interface.</source>
          <target state="translated">Esse método substitui <ph id="ph1">&lt;xref:System.Security.CodeAccessPermission.Union%2A&gt;</ph> e é implementado para dar suporte a <ph id="ph2">&lt;xref:System.Security.IPermission&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.SocketPermission.Union(System.Security.IPermission)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Net.SocketPermission.Union%2A&gt;</ph> method to return the logical union of two existing <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph> instances.</source>
          <target state="translated">O exemplo a seguir usa o <ph id="ph1">&lt;xref:System.Net.SocketPermission.Union%2A&gt;</ph> método para retornar a união lógica de duas existente <ph id="ph2">&lt;xref:System.Net.SocketPermission&gt;</ph> instâncias.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Net.SocketPermission.Union(System.Security.IPermission)">
          <source><ph id="ph1">&lt;paramref name="target" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph> não é um <ph id="ph2">&lt;see cref="T:System.Net.SocketPermission" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>