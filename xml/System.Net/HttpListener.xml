<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HttpListener.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d338e721b028cce5bc0cb16416723f530a1ed165.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d338e721b028cce5bc0cb16416723f530a1ed165</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.HttpListener">
          <source>Provides a simple, programmatically controlled HTTP protocol listener.</source>
          <target state="translated">Fornece um ouvinte de protocolo HTTP simples controlado programaticamente.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Net.HttpListener">
          <source>This class cannot be inherited.</source>
          <target state="translated">Essa classe não pode ser herdada.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Using the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> class, you can create a simple HTTP protocol listener that responds to HTTP requests.</source>
          <target state="translated">Usando o <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> classe, você pode criar um ouvinte de protocolo HTTP simples que responde às solicitações HTTP.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>The listener is active for the lifetime of the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> object and runs within your application with its permissions.</source>
          <target state="translated">O ouvinte está ativo para o tempo de vida de <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> objeto e é executado dentro de seu aplicativo com suas permissões.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>To use <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>, create a new instance of the class using the <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> constructor and use the <ph id="ph3">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> property to gain access to the collection that holds the strings that specify which Uniform Resource Identifier (URI) prefixes the <ph id="ph4">&lt;xref:System.Net.HttpListener&gt;</ph> should process.</source>
          <target state="translated">Para usar <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>, criar uma nova instância da classe usando o <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> construtor e use o <ph id="ph3">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> propriedade para acessar a coleção que retém as cadeias de caracteres que especifica que o prefixo do identificador de recurso uniforme (URI) a <ph id="ph4">&lt;xref:System.Net.HttpListener&gt;</ph> deve processar.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>A URI prefix string is composed of a scheme (http or https), a host, an optional port, and an optional path.</source>
          <target state="translated">Uma cadeia de caracteres de prefixo do URI é composta de um esquema (http ou https), um host, uma porta opcional e um caminho opcional.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>An example of a complete prefix string is <bpt id="p1">*</bpt><ph id="ph1">http://www.contoso.com:8080/customerData/</ph><ept id="p1">*</ept>.</source>
          <target state="translated">Um exemplo de uma cadeia de caracteres de prefixo completa é <bpt id="p1">*</bpt> <ph id="ph1">http://www.contoso.com:8080/customerData/</ph> <ept id="p1">*</ept>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Prefixes must end in a forward slash ("/").</source>
          <target state="translated">Prefixos devem terminar com uma barra ("/").</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> object with the prefix that most closely matches a requested URI responds to the request.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> objeto com o prefixo que mais se aproxima um URI solicitado responde à solicitação.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Multiple <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> objects cannot add the same prefix; a <ph id="ph2">&lt;xref:System.ComponentModel.Win32Exception&gt;</ph> exception is thrown if a <ph id="ph3">&lt;xref:System.Net.HttpListener&gt;</ph> adds a prefix that is already in use.</source>
          <target state="translated">Vários <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> objetos não é possível adicionar o mesmo prefixo; <ph id="ph2">&lt;xref:System.ComponentModel.Win32Exception&gt;</ph> exceção é gerada se um <ph id="ph3">&lt;xref:System.Net.HttpListener&gt;</ph> adiciona um prefixo que já está em uso.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>When a port is specified, the host element can be replaced with "<ph id="ph1">\*</ph>" to indicate that the <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> accepts requests sent to the port if the requested URI does not match any other prefix.</source>
          <target state="translated">Quando uma porta for especificada, o elemento host pode ser substituído por "<ph id="ph1">\*</ph>" para indicar que o <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> aceita solicitações enviadas para a porta se o URI solicitado não corresponde a qualquer outro prefixo.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>For example, to receive all requests sent to port 8080 when the requested URI is not handled by any <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>, the prefix is <bpt id="p1">*</bpt>http://<ph id="ph2">\*</ph>:8080/<ept id="p1">*</ept>.</source>
          <target state="translated">Por exemplo, para receber todas as solicitações enviadas a porta 8080 quando o URI solicitado não é tratado por qualquer <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>, o prefixo é <bpt id="p1">*</bpt>http://<ph id="ph2">\*</ph>: 8080 /<ept id="p1">*</ept>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Similarly, to specify that the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> accepts all requests sent to a port, replace the host element with the "+" character.</source>
          <target state="translated">Da mesma forma, para especificar que o <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> aceita todas as solicitações enviadas a uma porta, substitua o elemento de host com o caractere "+".</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>For example, <bpt id="p1">*</bpt><ph id="ph1">https://+:8080</ph><ept id="p1">*</ept>.</source>
          <target state="translated">Por exemplo, <bpt id="p1">*</bpt><ph id="ph1">https://+:8080</ph><ept id="p1">*</ept>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>The "<ph id="ph1">\*</ph>" and "+" characters can be present in prefixes that include paths.</source>
          <target state="translated">O "<ph id="ph1">\*</ph>" e "+" caracteres podem estar presentes em prefixos que caminhos de inclusão.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Starting with .NET Core 2.0 or .NET Framework 4.6 on Windows 10, wildcard subdomains are supported in URI prefixes that are managed by an <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> object.</source>
          <target state="translated">Começando com o núcleo do .NET 2.0 ou .NET Framework 4.6 no Windows 10, subdomínios curinga têm suporte em prefixos URI que são gerenciados por um <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>To specify a wildcard subdomain, use the "<ph id="ph1">\*</ph>" character as part of the hostname in a URI prefix.</source>
          <target state="translated">Para especificar um subdomínio de curinga, use o "<ph id="ph1">\*</ph>" caractere como parte do nome de host em um prefixo URI.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>For example, <bpt id="p1">*</bpt>http://<ph id="ph1">\*</ph>.foo.com/<ept id="p1">*</ept>.</source>
          <target state="translated">Por exemplo, <bpt id="p1">*</bpt>http://<ph id="ph1">\*</ph>.foo.com/<ept id="p1">*</ept>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Pass this as the argument to the <ph id="ph1">&lt;xref:System.Net.HttpListenerPrefixCollection.Add%2A&gt;</ph> method.</source>
          <target state="translated">Passa como argumento para o <ph id="ph1">&lt;xref:System.Net.HttpListenerPrefixCollection.Add%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>This works as of .NET Core 2.0 or .NET Framework 4.6 on Windows 10; in earlier versions, this generates an <ph id="ph1">&lt;xref:System.Net.HttpListenerException&gt;</ph>.</source>
          <target state="translated">Isso funciona a partir do núcleo do .NET 2.0 ou .NET Framework 4.6 no Windows 10; em versões anteriores, isso gera um <ph id="ph1">&lt;xref:System.Net.HttpListenerException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Top-level wildcard bindings (<bpt id="p1">*</bpt>http://<ph id="ph1">\*</ph>:8080/<ept id="p1">*</ept> and <bpt id="p2">*</bpt><ph id="ph2">http://+:8080</ph><ept id="p2">*</ept>) should <bpt id="p3">**</bpt>not<ept id="p3">**</ept> be used.</source>
          <target state="translated">Associações de curinga de nível superior (<bpt id="p1">*</bpt>http://<ph id="ph1">\*</ph>: 8080 /<ept id="p1">*</ept> e <bpt id="p2">*</bpt> <ph id="ph2">http://+:8080</ph> <ept id="p2">*</ept>) deve <bpt id="p3">**</bpt>não<ept id="p3">**</ept> ser usado.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Top-level wildcard bindings can open up your app to security vulnerabilities.</source>
          <target state="translated">Associações de curinga de nível superior podem abrir o aplicativo para vulnerabilidades de segurança.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>This applies to both strong and weak wildcards.</source>
          <target state="translated">Isso se aplica a curingas fortes e fracos.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Use explicit host names rather than wildcards.</source>
          <target state="translated">Use nomes de host explícitos em vez de curingas.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Subdomain wildcard binding (for example, <ph id="ph1">`*.mysub.com`</ph>) doesn't have this security risk if you control the entire parent domain (as opposed to <ph id="ph2">`*.com`</ph>, which is vulnerable).</source>
          <target state="translated">Associações de curinga de subdomínio (por exemplo, <ph id="ph1">`*.mysub.com`</ph>) não têm esse risco de segurança se você controlar o domínio pai completo (em vez de <ph id="ph2">`*.com`</ph>, o qual é vulnerável).</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>See <bpt id="p1">[</bpt>rfc7230 section-5.4<ept id="p1">](https://tools.ietf.org/html/rfc7230#section-5.4)</ept> for more information.</source>
          <target state="translated">Veja <bpt id="p1">[</bpt>rfc7230 section-5.4<ept id="p1">](https://tools.ietf.org/html/rfc7230#section-5.4)</ept> para obter mais informações.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>To begin listening for requests from clients, add the URI prefixes to the collection and call the <ph id="ph1">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> method.</source>
          <target state="translated">Para começar a escutar solicitações de clientes, adicione os prefixos URI para a coleta e a chamada a <ph id="ph1">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source><ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> offers both synchronous and asynchronous models for processing client requests.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> oferece modelos síncronos e assíncronos para processar solicitações do cliente.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Requests and their associated responses are accessed using the <ph id="ph1">&lt;xref:System.Net.HttpListenerContext&gt;</ph> object returned by the <ph id="ph2">&lt;xref:System.Net.HttpListener.GetContext%2A&gt;</ph> method or its asynchronous counterparts, the <ph id="ph3">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> methods.</source>
          <target state="translated">Solicitações e respostas associadas são acessadas usando o <ph id="ph1">&lt;xref:System.Net.HttpListenerContext&gt;</ph> objeto retornado pelo <ph id="ph2">&lt;xref:System.Net.HttpListener.GetContext%2A&gt;</ph> método ou suas contrapartes assíncronas, o <ph id="ph3">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> e <ph id="ph4">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> métodos.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>The synchronous model is appropriate if your application should block while waiting for a client request and if you want to process only one request at a time.</source>
          <target state="translated">O modelo síncrono é apropriado se seu aplicativo deve bloquear ao aguardar uma solicitação de cliente e se você deseja processar apenas uma solicitação por vez.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Using the synchronous model, call the <ph id="ph1">&lt;xref:System.Net.HttpListener.GetContext%2A&gt;</ph> method, which waits for a client to send a request.</source>
          <target state="translated">Usando o modelo síncrona, chame o <ph id="ph1">&lt;xref:System.Net.HttpListener.GetContext%2A&gt;</ph> método, que aguarda um cliente enviar uma solicitação.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>The method returns an <ph id="ph1">&lt;xref:System.Net.HttpListenerContext&gt;</ph> object to you for processing when one occurs.</source>
          <target state="translated">O método retorna um <ph id="ph1">&lt;xref:System.Net.HttpListenerContext&gt;</ph> de processamento quando um ocorre de objeto para você.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>In the more complex asynchronous model, your application does not block while waiting for requests and each request is processed in its own execution thread.</source>
          <target state="translated">No modelo de assíncrona mais complexo, seu aplicativo não bloqueia enquanto esperando solicitações e cada solicitação é processada em seu próprio thread de execução.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> method to specify an application-defined method to be called for each incoming request.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> método para especificar um método definido pelo aplicativo a ser chamado para cada solicitação de entrada.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Within that method, call the <ph id="ph1">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> method to obtain the request, process it, and respond.</source>
          <target state="translated">Dentro desse método, chame o <ph id="ph1">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> método para obter a solicitação, processá-la e responder.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>In either model, incoming requests are accessed using the <ph id="ph1">&lt;xref:System.Net.HttpListenerContext.Request%2A?displayProperty=nameWithType&gt;</ph> property and are represented by <ph id="ph2">&lt;xref:System.Net.HttpListenerRequest&gt;</ph> objects.</source>
          <target state="translated">Em um modelo, as solicitações de entrada são acessadas usando o <ph id="ph1">&lt;xref:System.Net.HttpListenerContext.Request%2A?displayProperty=nameWithType&gt;</ph> propriedade e são representados por <ph id="ph2">&lt;xref:System.Net.HttpListenerRequest&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Similarly, responses are accessed using the <ph id="ph1">&lt;xref:System.Net.HttpListenerContext.Response%2A?displayProperty=nameWithType&gt;</ph> property and are represented by <ph id="ph2">&lt;xref:System.Net.HttpListenerResponse&gt;</ph> objects.</source>
          <target state="translated">Da mesma forma, as respostas são acessadas usando o <ph id="ph1">&lt;xref:System.Net.HttpListenerContext.Response%2A?displayProperty=nameWithType&gt;</ph> propriedade e são representados por <ph id="ph2">&lt;xref:System.Net.HttpListenerResponse&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>These objects share some functionality with the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.HttpWebResponse&gt;</ph> objects, but the latter objects cannot be used in conjunction with <ph id="ph3">&lt;xref:System.Net.HttpListener&gt;</ph> because they implement client, not server, behaviors.</source>
          <target state="translated">Esses objetos compartilham algumas funcionalidades com o <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> e <ph id="ph2">&lt;xref:System.Net.HttpWebResponse&gt;</ph> objetos, mas os último objetos não podem ser usado em conjunto com <ph id="ph3">&lt;xref:System.Net.HttpListener&gt;</ph> porque eles implementam o cliente, e não em servidor, comportamentos.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>An <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> can require client authentication.</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> pode exigir autenticação de cliente.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>You can either specify a particular scheme to use for authentication, or you can specify a delegate that determines the scheme to use.</source>
          <target state="translated">Você pode especificar um esquema específico a ser usado para autenticação, ou você pode especificar um delegado que determina o esquema a ser usado.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>You must require some form of authentication to obtain information about the client's identity.</source>
          <target state="translated">Você deve exigir alguma forma de autenticação para obter informações sobre a identidade do cliente.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>For additional information, see the <ph id="ph1">&lt;xref:System.Net.HttpListenerContext.User%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.HttpListener.AuthenticationSchemes%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A&gt;</ph> properties.</source>
          <target state="translated">Para obter informações adicionais, consulte o <ph id="ph1">&lt;xref:System.Net.HttpListenerContext.User%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.HttpListener.AuthenticationSchemes%2A&gt;</ph>, e <ph id="ph3">&lt;xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A&gt;</ph> propriedades.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>If you create an <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> using https, you must select a Server Certificate for that listener.</source>
          <target state="translated">Se você criar um <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> usando https, você deve selecionar um certificado de servidor para esse ouvinte.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Otherwise, an <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> query of this <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> will fail with an unexpected close of the connection.</source>
          <target state="translated">Caso contrário, um <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> consulta deste <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> falhará com um fechamento inesperado da conexão.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>You can configure Server Certificates and other listener options by using Network Shell (netsh.exe).</source>
          <target state="translated">Você pode configurar certificados de servidor e outras opções de ouvinte usando o Shell de rede (netsh.exe).</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>See <bpt id="p1">[</bpt>Network Shell (Netsh)<ept id="p1">](/windows-server/networking/technologies/netsh/netsh)</ept> for more details.</source>
          <target state="translated">Consulte <bpt id="p1">[</bpt>Network Shell (Netsh)<ept id="p1">](/windows-server/networking/technologies/netsh/netsh)</ept> para obter mais detalhes.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>The executable began shipping with Windows Server 2008 and Windows Vista.</source>
          <target state="translated">O executável começou a ser fornecido com o Windows Server 2008 e Windows Vista.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>If you specify multiple authentication schemes for the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>, the listener will challenge clients in the following order: <ph id="ph2">`Negotiate`</ph>, <ph id="ph3">`NTLM`</ph>, <ph id="ph4">`Digest`</ph>, and then <ph id="ph5">`Basic`</ph>.</source>
          <target state="translated">Se você especificar vários esquemas de autenticação para o <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>, o ouvinte do desafio de clientes na seguinte ordem: <ph id="ph2">`Negotiate`</ph>, <ph id="ph3">`NTLM`</ph>, <ph id="ph4">`Digest`</ph>e, em seguida, <ph id="ph5">`Basic`</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>The following code example demonstrates using a <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar um <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.#ctor">
          <source>Before using the instance returned by this constructor, you must invoke its <ph id="ph1">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> method.</source>
          <target state="translated">Antes de usar a instância retornada por este construtor, você deve chamar o <ph id="ph1">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.#ctor">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> constructor to create a new <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> object.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar o <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> construtor para criar um novo <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.#ctor">
          <source>For the complete example, see the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> class topic.</source>
          <target state="translated">Para o exemplo completo, consulte o <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> tópico sobre a classe.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.#ctor">
          <source>This class cannot be used on the current operating system.</source>
          <target state="translated">Essa classe não pode ser usada com o sistema operacional atual.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.#ctor">
          <source>Windows Server 2003 or Windows XP SP2 is required to use instances of this class.</source>
          <target state="translated">É necessário o Windows Server 2003 ou Windows XP SP2 para usar as instâncias dessa classe.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.#ctor">
          <source>Note: This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Observação: Este membro gera informações de rastreamento quando você habilita o rastreamento de rede em seu aplicativo.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.#ctor">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>rastreamento de rede no .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.Abort">
          <source>Shuts down the <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> object immediately, discarding all currently queued requests.</source>
          <target state="translated">Desliga o objeto <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> imediatamente, descartando todas as solicitações atualmente na fila.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Abort">
          <source>This method disposes of all resources held by this listener.</source>
          <target state="translated">Esse método libera todos os recursos mantidos por esse ouvinte.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Abort">
          <source>Any pending requests are unable to complete.</source>
          <target state="translated">Todas as solicitações pendentes são não pode concluir.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Abort">
          <source>After calling this method, you will receive an <ph id="ph1">&lt;xref:System.ObjectDisposedException&gt;</ph> if you attempt to use this <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph>.</source>
          <target state="translated">Depois de chamar esse método, você receberá um <ph id="ph1">&lt;xref:System.ObjectDisposedException&gt;</ph> se você tentar usá-lo <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Abort">
          <source>The following code example demonstrates calling this method.</source>
          <target state="translated">O exemplo de código a seguir demonstra como chamar esse método.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Abort">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Esse membro emite o rastreamento de informações quando você ativa o rastreamento de rede em seu aplicativo.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Abort">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>rastreamento de rede no .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.AuthenticationSchemes">
          <source>Gets or sets the scheme used to authenticate clients.</source>
          <target state="translated">Obtém ou define o esquema usado para autenticar clientes.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemes">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Net.AuthenticationSchemes" /&gt;</ph> enumeration values that indicates how clients are to be authenticated.</source>
          <target state="translated">Uma combinação bit a bit de <ph id="ph1">&lt;see cref="T:System.Net.AuthenticationSchemes" /&gt;</ph> valores de enumeração que indica como os clientes devem ser autenticadas.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemes">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.Net.AuthenticationSchemes.Anonymous" /&gt;</ph>.</source>
          <target state="translated">O valor padrão é <ph id="ph1">&lt;see cref="F:System.Net.AuthenticationSchemes.Anonymous" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemes">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> uses the specified scheme to authenticate all incoming requests.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> usa o esquema especificado para autenticar todas as solicitações de entrada.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemes">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.GetContext%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> methods return an incoming client request only if the <ph id="ph3">&lt;xref:System.Net.HttpListener&gt;</ph> successfully authenticates the request.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Net.HttpListener.GetContext%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> métodos retornam uma solicitação de cliente de entrada somente se o <ph id="ph3">&lt;xref:System.Net.HttpListener&gt;</ph> autentica com êxito a solicitação.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemes">
          <source>You can interrogate the identity of a successfully authenticated client by using the <ph id="ph1">&lt;xref:System.Net.HttpListenerContext.User%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Você pode investigar a identidade de um cliente autenticado com êxito usando o <ph id="ph1">&lt;xref:System.Net.HttpListenerContext.User%2A?displayProperty=nameWithType&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemes">
          <source>If you want an <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> object to use different authentication mechanisms based on characteristics of the requests it receives (for example, the request's <ph id="ph2">&lt;xref:System.Net.HttpListenerRequest.Url%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Net.HttpListenerRequest.UserHostName%2A&gt;</ph> property), you must implement a method that chooses the authentication scheme.</source>
          <target state="translated">Se você quiser uma <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> objeto usar mecanismos de autenticação diferentes com base em características das solicitações que recebe (por exemplo, a solicitação <ph id="ph2">&lt;xref:System.Net.HttpListenerRequest.Url%2A&gt;</ph> ou <ph id="ph3">&lt;xref:System.Net.HttpListenerRequest.UserHostName%2A&gt;</ph> propriedade), você deve implementar um método que escolhe o esquema de autenticação.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemes">
          <source>For instructions about how to do this, see the <ph id="ph1">&lt;xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A&gt;</ph> property documentation.</source>
          <target state="translated">Para obter instruções sobre como fazer isso, consulte o <ph id="ph1">&lt;xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A&gt;</ph> documentação de propriedade.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemes">
          <source>To set this property to enable Digest, NTLM, or Negotiate requires the <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal&gt;</ph>.</source>
          <target state="translated">Para definir essa propriedade para habilitar o Digest, NTLM ou negociação requer o <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemes">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Net.HttpListener.AuthenticationSchemes%2A&gt;</ph> property to specify an authentication scheme.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar o <ph id="ph1">&lt;xref:System.Net.HttpListener.AuthenticationSchemes%2A&gt;</ph> propriedade para especificar um esquema de autenticação.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.AuthenticationSchemes">
          <source>This object has been closed.</source>
          <target state="translated">Este objeto foi fechado.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>Gets or sets the delegate called to determine the protocol used to authenticate clients.</source>
          <target state="translated">Obtém ou define o delegado chamado para determinar o protocolo usado para autenticar clientes.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.AuthenticationSchemeSelector" /&gt;</ph> delegate that invokes the method used to select an authentication protocol.</source>
          <target state="translated">Um delegado <ph id="ph1">&lt;see cref="T:System.Net.AuthenticationSchemeSelector" /&gt;</ph> que invoca o método usado para selecionar um protocolo de autenticação.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>The default value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O valor padrão é <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>If you want the same authentication protocol to be used for all requests handled by a particular instance of <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>, you do not need to set this property.</source>
          <target state="translated">Se você quiser que o mesmo protocolo de autenticação a ser usado para todas as solicitações tratadas por uma determinada instância de <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>, você não precisa definir essa propriedade.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>To specify a protocol to be used for all client requests, use the <ph id="ph1">&lt;xref:System.Net.HttpListener.AuthenticationSchemes%2A&gt;</ph> property.</source>
          <target state="translated">Para especificar um protocolo a ser usado para todas as solicitações de cliente, use o <ph id="ph1">&lt;xref:System.Net.HttpListener.AuthenticationSchemes%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>If the client has not specified authentication information in its headers, the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> calls the specified delegate for each unauthenticated incoming request to determine which, if any, protocol to use to authenticate the client.</source>
          <target state="translated">Se o cliente não tiver especificado a informações de autenticação em seus cabeçalhos, o <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> chama o representante especificado para cada solicitação de entrada não autenticado determinar quais, se houver, do protocolo a ser usado para autenticar o cliente.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.GetContext%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> methods return an incoming request only if the <ph id="ph3">&lt;xref:System.Net.HttpListener&gt;</ph> successfully authenticated the request.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Net.HttpListener.GetContext%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> métodos retornam um entrada solicitação apenas se for o <ph id="ph3">&lt;xref:System.Net.HttpListener&gt;</ph> autenticado com êxito a solicitação.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>If a request cannot be authenticated, the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> automatically sends back a 401 response.</source>
          <target state="translated">Se uma solicitação não puder ser autenticada, a <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> automaticamente envia de volta uma resposta 401.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>You can get the identity of a successfully authenticated client using the <ph id="ph1">&lt;xref:System.Web.HttpRequest.LogonUserIdentity%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Você pode obter a identidade de um cliente autenticado com êxito usando o <ph id="ph1">&lt;xref:System.Web.HttpRequest.LogonUserIdentity%2A?displayProperty=nameWithType&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>The ability to delegate the choice of authentication protocol to an application-specific method is useful if you want an instance of <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> to use different authentication protocols depending on the characteristics of the requests it receives (for example, the request's <ph id="ph2">&lt;xref:System.Net.HttpListenerRequest.Url%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Net.HttpListenerRequest.UserHostAddress%2A&gt;</ph> property).</source>
          <target state="translated">A capacidade de delegar a opção de protocolo de autenticação para um método específico do aplicativo é útil se você desejar que uma instância de <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> usar protocolos de autenticação diferentes, dependendo das características das solicitações que recebe (por exemplo, a solicitação <ph id="ph2">&lt;xref:System.Net.HttpListenerRequest.Url%2A&gt;</ph> ou <ph id="ph3">&lt;xref:System.Net.HttpListenerRequest.UserHostAddress%2A&gt;</ph> propriedade).</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>To set this property to enable Digest, NTLM, or Negotiate requires the <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal&gt;</ph>.</source>
          <target state="translated">Para definir essa propriedade para habilitar o Digest, NTLM ou negociação requer o <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>The following code example sets the value of this property.</source>
          <target state="translated">O exemplo de código a seguir define o valor dessa propriedade.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>The following code example provides an implementation of a method invoked by an <ph id="ph1">&lt;xref:System.Net.AuthenticationSchemeSelector&gt;</ph> delegate.</source>
          <target state="translated">O exemplo de código a seguir fornece uma implementação de um método invocado por um <ph id="ph1">&lt;xref:System.Net.AuthenticationSchemeSelector&gt;</ph> delegate.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>This object has been closed.</source>
          <target state="translated">Este objeto foi fechado.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when a client request is available.</source>
          <target state="translated">Um delegado <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> que faz referência ao método a ser invocado quando uma solicitação do cliente está disponível.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>A user-defined object that contains information about the operation.</source>
          <target state="translated">Um objeto definido pelo usuário que contém informações sobre a operação.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>callback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation completes.</source>
          <target state="translated">Este objeto é passado para o delegado <bpt id="p1">&lt;c&gt;</bpt>callback<ept id="p1">&lt;/c&gt;</ept> quando a operação é concluída.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>Begins asynchronously retrieving an incoming request.</source>
          <target state="translated">Começa a recuperação assíncrona de uma solicitação de entrada.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object that indicates the status of the asynchronous operation.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> que indica o status da operação assíncrona.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> method begins an asynchronous (non-blocking) call to receive incoming client requests.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> método começa uma chamada assíncrona (sem bloqueio) para receber solicitações de cliente recebidas.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>Before calling this method, you must call the <ph id="ph1">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> method and add at least one Uniform Resource Identifier (URI) prefix to listen for by adding the URI strings to the <ph id="ph2">&lt;xref:System.Net.HttpListenerPrefixCollection&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> property.</source>
          <target state="translated">Antes de chamar esse método, você deve chamar o <ph id="ph1">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> método e adicione pelo menos um prefixo do identificador de recurso uniforme (URI) para escutar, adicionando as cadeias de caracteres URI para o <ph id="ph2">&lt;xref:System.Net.HttpListenerPrefixCollection&gt;</ph> retornado pelo <ph id="ph3">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>The asynchronous operation must be completed by calling the <ph id="ph1">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> method.</source>
          <target state="translated">A operação assíncrona deve ser concluída chamando o <ph id="ph1">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`callback`</ph> delegate.</source>
          <target state="translated">Normalmente, o método é invocado pelo <ph id="ph1">`callback`</ph> delegate.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>This method does not block while the operation completes.</source>
          <target state="translated">Esse método não bloqueia enquanto a operação é concluída.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>To get an incoming request and block until the operation completes, call the <ph id="ph1">&lt;xref:System.Net.HttpListener.GetContext%2A&gt;</ph> method.</source>
          <target state="translated">Para obter uma solicitação de entrada e bloco até a conclusão da operação, chame o <ph id="ph1">&lt;xref:System.Net.HttpListener.GetContext%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></source>
          <target state="translated">Para obter informações detalhadas sobre como usar o modelo de programação assíncrono, consulte <bpt id="p1">[</bpt>chamando métodos síncronos assincronamente<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> method to specify a callback method that will handle incoming client requests.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar o <ph id="ph1">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> método para especificar um método de retorno de chamada que tratará as solicitações de cliente recebidas.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>The following code example implements a callback method.</source>
          <target state="translated">O exemplo de código a seguir implementa um método de retorno de chamada.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>A Win32 function call failed.</source>
          <target state="translated">Falha em uma chamada de função do Win32.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>Check the exception's <ph id="ph1">&lt;see cref="P:System.Net.HttpListenerException.ErrorCode" /&gt;</ph> property to determine the cause of the exception.</source>
          <target state="translated">Verifique a propriedade <ph id="ph1">&lt;see cref="P:System.Net.HttpListenerException.ErrorCode" /&gt;</ph> da exceção para determinar a causa da exceção.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>This object has not been started or is currently stopped.</source>
          <target state="translated">Esse objeto não foi iniciado ou está parado no momento.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>This object is closed.</source>
          <target state="translated">Este objeto está fechado.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Esse membro emite o rastreamento de informações quando você ativa o rastreamento de rede em seu aplicativo.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>rastreamento de rede no .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.Close">
          <source>Shuts down the <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph>.</source>
          <target state="translated">Desliga o <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Close">
          <source>After calling this method, you can no longer use the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> object.</source>
          <target state="translated">Depois de chamar esse método, você não poderá mais usar o <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Close">
          <source>To temporarily pause an <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> object, use the <ph id="ph2">&lt;xref:System.Net.HttpListener.Stop%2A&gt;</ph> method.</source>
          <target state="translated">Para pausar temporariamente um <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> de objeto, use o <ph id="ph2">&lt;xref:System.Net.HttpListener.Stop%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Close">
          <source>This method shut downs the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> object without processing queued requests.</source>
          <target state="translated">Esse método desligar liste o <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> objeto sem processar as solicitações em fila.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Close">
          <source>Any pending requests are unable to complete.</source>
          <target state="translated">Todas as solicitações pendentes são não pode concluir.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Close">
          <source>The following code example demonstrates calling this method.</source>
          <target state="translated">O exemplo de código a seguir demonstra como chamar esse método.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Close">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Esse membro emite o rastreamento de informações quando você ativa o rastreamento de rede em seu aplicativo.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Close">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>rastreamento de rede no .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>Gets a default list of Service Provider Names (SPNs) as determined by registered prefixes.</source>
          <target state="translated">Obtém uma lista padrão de SPNs (Nomes de Provedor de Serviço) conforme determinado pelos prefixos registrados.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /&gt;</ph> that contains a list of SPNs.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /&gt;</ph> que contém uma lista de SPNs.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.DefaultServiceNames%2A&gt;</ph> property is used with integrated Windows authentication to provide extended protection.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Net.HttpListener.DefaultServiceNames%2A&gt;</ph> propriedade é usada com a autenticação integrada do Windows para fornecer proteção estendida.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>The list of SPNs is initialized from the <ph id="ph1">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> property when accessed and cleared when new prefixes are added to the <ph id="ph2">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> property.</source>
          <target state="translated">A lista de SPNs é inicializada a partir de <ph id="ph1">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> propriedade quando acessados e limpo quando forem adicionados novos prefixos para o <ph id="ph2">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.DefaultServiceNames%2A&gt;</ph> property is used if an application doesn't set the <ph id="ph2">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames%2A&gt;</ph> property on its extended protection policy.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Net.HttpListener.DefaultServiceNames%2A&gt;</ph> propriedade será usada se um aplicativo não define o <ph id="ph2">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames%2A&gt;</ph> propriedade em sua política de proteção estendida.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>The <ph id="ph1">&lt;xref:System.Security.Authentication.ExtendedProtection.ServiceNameCollection&gt;</ph> that is retrieved with the <ph id="ph2">&lt;xref:System.Net.HttpListener.DefaultServiceNames%2A&gt;</ph> property is built from the <ph id="ph3">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> property according to the following rules:</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Security.Authentication.ExtendedProtection.ServiceNameCollection&gt;</ph> que é recuperada com a <ph id="ph2">&lt;xref:System.Net.HttpListener.DefaultServiceNames%2A&gt;</ph> propriedade é criada a partir do <ph id="ph3">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> propriedade de acordo com as regras a seguir:</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>If the hostname is "+", "*", or an IPv4 or IPv6 literal (equivalent to "<ph id="ph1">\*</ph>" but restricted to a specific local interface), the following SPN is added:</source>
          <target state="translated">Se o nome do host é "+", "*", ou um literal IPv4 ou IPv6 (equivalente a "<ph id="ph1">\*</ph>" mas restrito a uma determinada interface local), o SPN a seguir é adicionado:</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source><ph id="ph1">`"HTTP/"`</ph> plus the fully qualified domain name of the computer.</source>
          <target state="translated"><ph id="ph1">`"HTTP/"`</ph> Além do nome de domínio totalmente qualificado do computador.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>If the hostname contains no dots (no domains or subdomains), an attempt is made to resolve the fully-qualified domain name using DNS (the same behavior used by <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph>).</source>
          <target state="translated">Se o nome do host não contêm pontos (sem domínios ou subdomínios), é feita uma tentativa de resolver o nome de domínio totalmente qualificado usando o DNS (o mesmo comportamento usado pelo <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>If the fully-qualified domain name can be resolved, the following SPNs are added:</source>
          <target state="translated">Se o nome de domínio totalmente qualificado pode ser resolvido, estes SPNs são adicionados:</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source><ph id="ph1">`"HTTP/"`</ph> plus the hostname (the short name).</source>
          <target state="translated"><ph id="ph1">`"HTTP/"`</ph> Além disso, o nome do host (o nome curto).</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source><ph id="ph1">`"HTTP/"`</ph> plus the fully qualified domain name for the hostname.</source>
          <target state="translated"><ph id="ph1">`"HTTP/"`</ph> Além do nome de domínio totalmente qualificado para o nome do host.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>If the hostname contains not dots (no domains or subdomains) and a fully-qualified domain name can't be resolved, the following SPN is added:</source>
          <target state="translated">Se o nome do host contém pontos não (sem domínios ou subdomínios) e um nome de domínio totalmente qualificado não pode ser resolvido, o SPN a seguir é adicionado:</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source><ph id="ph1">`"HTTP/"`</ph> plus the hostname.</source>
          <target state="translated"><ph id="ph1">`"HTTP/"`</ph> Além disso, o nome do host.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>If the hostname contains dots (domains or subdomains), the following SPN is added:</source>
          <target state="translated">Se o nome do host contiver pontos (domínios ou subdomínios), o SPN a seguir será adicionado:</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source><ph id="ph1">`"HTTP/"`</ph> plus the hostname.</source>
          <target state="translated"><ph id="ph1">`"HTTP/"`</ph> Além disso, o nome do host.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.DefaultServiceNames%2A&gt;</ph> property can be used by an application to review the list of default SPNs which will be used for authentication if no custom list is supplied.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Net.HttpListener.DefaultServiceNames%2A&gt;</ph> propriedade pode ser usada por um aplicativo, consulte a lista de SPNs padrão que será usado para autenticação, se nenhuma lista personalizada é fornecida.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>If other SPNs are needed, an application can add them using one of the <ph id="ph1">&lt;xref:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.Merge%2A&gt;</ph> methods.</source>
          <target state="translated">Se houver necessidade de outros SPNs, um aplicativo pode adicioná-las usando um do <ph id="ph1">&lt;xref:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.Merge%2A&gt;</ph> métodos.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>It is not safe when using extended protection to make policy decisions based on the requested URL, since this can be spoofed.</source>
          <target state="translated">Não é segura ao usar a proteção estendida para tomar decisões de política com base na URL solicitada, pois isso pode ser falsificado.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>Rather, applications should rely on the <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.LocalEndPoint%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A&gt;</ph> properties to make such policy decisions.</source>
          <target state="translated">Em vez disso, os aplicativos devem depender de <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.LocalEndPoint%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A&gt;</ph> propriedades tais decisões de política.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object that was obtained when the asynchronous operation was started.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> obtido quando a operação assíncrona foi iniciada.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>Completes an asynchronous operation to retrieve an incoming client request.</source>
          <target state="translated">Conclui uma operação assíncrona para recuperar uma solicitação de cliente recebida.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.HttpListenerContext" /&gt;</ph> object that represents the client request.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Net.HttpListenerContext" /&gt;</ph> que representa a solicitação do cliente.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> method is called, usually within an application-defined callback method invoked by a delegate, to obtain the <ph id="ph2">&lt;xref:System.Net.HttpListenerContext&gt;</ph> object that contains an incoming client request and its associated response.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> método é chamado, geralmente dentro de um método de retorno de chamada definido pelo aplicativo invocado por um representante, para obter o <ph id="ph2">&lt;xref:System.Net.HttpListenerContext&gt;</ph> objeto que contém uma solicitação de cliente de entrada e sua resposta associada.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>This method completes an operation previously started by calling the <ph id="ph1">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> method.</source>
          <target state="translated">Esse método é concluído uma operação iniciada anteriormente chamando o <ph id="ph1">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>If the operation has not completed, this method blocks until it does.</source>
          <target state="translated">Se a operação não foi concluída, esse método bloqueia até que ele faz.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>Because calling the <ph id="ph1">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> method requires the <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> object, this object is typically passed into a callback method by using the state object passed into the <ph id="ph3">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> method.</source>
          <target state="translated">Como chamar o <ph id="ph1">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> método requer o <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> do objeto, esse objeto é normalmente passado para um método de retorno de chamada por usando o objeto de estado passado para o <ph id="ph3">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>You can obtain this state object by using the <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncState%2A&gt;</ph> property of the <ph id="ph2">`asyncResult`</ph> object.</source>
          <target state="translated">Você pode obter esse objeto de estado usando o <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncState%2A&gt;</ph> propriedade o <ph id="ph2">`asyncResult`</ph> objeto.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></source>
          <target state="translated">Para obter informações detalhadas sobre como usar o modelo de programação assíncrono, consulte <bpt id="p1">[</bpt>chamando métodos síncronos assincronamente<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>The following code example shows the implementation of a callback method that calls the <ph id="ph1">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo de código a seguir mostra a implementação de um método de retorno de chamada que chama o <ph id="ph1">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> was not obtained by calling the <ph id="ph2">&lt;see cref="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> não foi obtido ao chamar o método <ph id="ph2">&lt;see cref="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)" /&gt;</ph> method was already called for the specified <ph id="ph2">&lt;paramref name="asyncResult" /&gt;</ph> object.</source>
          <target state="translated">O método <ph id="ph1">&lt;see cref="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)" /&gt;</ph> já foi chamado para o objeto <ph id="ph2">&lt;paramref name="asyncResult" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>This object is closed.</source>
          <target state="translated">Este objeto está fechado.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Esse membro emite o rastreamento de informações quando você ativa o rastreamento de rede em seu aplicativo.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>rastreamento de rede no .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.ExtendedProtectionPolicy">
          <source>Get or set the <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph> to use for extended protection for a session.</source>
          <target state="translated">Obtém ou define o <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph> a ser usado para proteção estendida para uma sessão.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionPolicy">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph> that specifies the policy to use for extended protection.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph> que especifica a política a ser usada para proteção estendida.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionPolicy">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A&gt;</ph> property is used with integrated Windows authentication to provide extended protection.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A&gt;</ph> propriedade é usada com a autenticação integrada do Windows para fornecer proteção estendida.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionPolicy">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A&gt;</ph> property allows the configuration of the extended protection policy for the whole <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> session.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A&gt;</ph> propriedade permite que a configuração da política de proteção estendida para todo o <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> sessão.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionPolicy">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.ExtendedProtectionSelectorDelegate%2A&gt;</ph> property allows the configuration of the extended protection policy for each individual request.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Net.HttpListener.ExtendedProtectionSelectorDelegate%2A&gt;</ph> propriedade permite que a configuração da política de proteção estendida para cada solicitação individual.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionPolicy">
          <source>The <ph id="ph1">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding%2A&gt;</ph> property must be <ph id="ph2">`null`</ph>.</source>
          <target state="translated">A propriedade <ph id="ph1">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding%2A&gt;</ph> deve ser <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionPolicy">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> instance gets the Channel Binding Token (CBT) directly from its own TLS session if there is one.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> instância obtém o canal de associação CBT (Token) diretamente de sua própria sessão TLS, se houver um.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.ExtendedProtectionPolicy">
          <source>An attempt was made to set the <ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /&gt;</ph> property, but the <ph id="ph2">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /&gt;</ph> property was not <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Foi feita uma tentativa de definir a propriedade <ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /&gt;</ph>, porém a propriedade <ph id="ph2">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /&gt;</ph> não era <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.ExtendedProtectionPolicy">
          <source>An attempt was made to set the <ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /&gt;</ph> property to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Foi feita uma tentativa de definir a propriedade <ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /&gt;</ph> como <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.ExtendedProtectionPolicy">
          <source>An attempt was made to set the <ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /&gt;</ph> property after the <ph id="ph2">&lt;see cref="M:System.Net.HttpListener.Start" /&gt;</ph> method was already called.</source>
          <target state="translated">Foi feita uma tentativa de definir a propriedade <ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /&gt;</ph> após o método <ph id="ph2">&lt;see cref="M:System.Net.HttpListener.Start" /&gt;</ph> já ter sido chamado.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.ExtendedProtectionPolicy">
          <source>This object is closed.</source>
          <target state="translated">Este objeto está fechado.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.ExtendedProtectionPolicy">
          <source>The <ph id="ph1">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement" /&gt;</ph> property was set to <ph id="ph2">&lt;see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /&gt;</ph> on a platform that does not support extended protection.</source>
          <target state="translated">A propriedade <ph id="ph1">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement" /&gt;</ph> foi definida como <ph id="ph2">&lt;see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /&gt;</ph> em uma plataforma que não dá suporte à proteção estendida.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>Get or set the delegate called to determine the <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph> to use for each request.</source>
          <target state="translated">Obtém ou define o delegado chamado para determinar o <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph> a usar para cada solicitação.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph> that specifies the policy to use for extended protection.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph> que especifica a política a ser usada para proteção estendida.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A&gt;</ph> property is used with integrated Windows authentication to provide extended protection.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A&gt;</ph> propriedade é usada com a autenticação integrada do Windows para fornecer proteção estendida.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A&gt;</ph> property allows the configuration of the extended protection policy for the whole <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> session.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A&gt;</ph> propriedade permite que a configuração da política de proteção estendida para todo o <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> sessão.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.ExtendedProtectionSelectorDelegate%2A&gt;</ph> property allows the configuration of the extended protection policy per individual request.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Net.HttpListener.ExtendedProtectionSelectorDelegate%2A&gt;</ph> propriedade permite que a configuração da política de proteção estendida por solicitação individual.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>The <ph id="ph1">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding%2A&gt;</ph> property must be <ph id="ph2">`null`</ph>.</source>
          <target state="translated">A propriedade <ph id="ph1">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding%2A&gt;</ph> deve ser <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> instance gets the Channel Binding Token (CBT) directly from its own TLS session if there is one.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> instância obtém o canal de associação CBT (Token) diretamente de sua própria sessão TLS, se houver um.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>For each request, the delegate can choose the settings that the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> instance will use to provide extended protection.</source>
          <target state="translated">Para cada solicitação, o representante pode escolher as configurações que o <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> instância usará para fornecer proteção estendida.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>If a delegate returns <ph id="ph1">`null`</ph> for this property, this represents a <ph id="ph2">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy&gt;</ph> which the <ph id="ph3">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A&gt;</ph> property set to <ph id="ph4">&lt;xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never&gt;</ph>.</source>
          <target state="translated">Se um delegado retorna <ph id="ph1">`null`</ph> para essa propriedade, isso representa um <ph id="ph2">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy&gt;</ph> que o <ph id="ph3">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A&gt;</ph> propriedade definida como <ph id="ph4">&lt;xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>An attempt was made to set the <ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /&gt;</ph> property, but the <ph id="ph2">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /&gt;</ph> property must be <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Foi feita uma tentativa de definir a propriedade <ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /&gt;</ph>, porém a propriedade <ph id="ph2">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /&gt;</ph> deve ser <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>An attempt was made to set the <ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /&gt;</ph> property to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Foi feita uma tentativa de definir a propriedade <ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /&gt;</ph> como <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>An attempt was made to set the <ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /&gt;</ph> property after the <ph id="ph2">&lt;see cref="M:System.Net.HttpListener.Start" /&gt;</ph> method was already called.</source>
          <target state="translated">Foi feita uma tentativa de definir a propriedade <ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /&gt;</ph> após o método <ph id="ph2">&lt;see cref="M:System.Net.HttpListener.Start" /&gt;</ph> já ter sido chamado.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>This object is closed.</source>
          <target state="translated">Este objeto está fechado.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>An attempt was made to set the <ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /&gt;</ph> property on a platform that does not support extended protection.</source>
          <target state="translated">Foi feita uma tentativa de definir a propriedade <ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /&gt;</ph> em uma plataforma que não dá suporte a proteção estendida.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.GetContext">
          <source>Waits for an incoming request and returns when one is received.</source>
          <target state="translated">Aguarda uma solicitação de entrada e a retorna quando recebida.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.GetContext">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.HttpListenerContext" /&gt;</ph> object that represents a client request.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Net.HttpListenerContext" /&gt;</ph> que representa uma solicitação do cliente.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.GetContext">
          <source>Before calling this method, you must call the <ph id="ph1">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> method and add at least one URI prefix to listen for by adding the URI strings to the <ph id="ph2">&lt;xref:System.Net.HttpListenerPrefixCollection&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> property.</source>
          <target state="translated">Antes de chamar esse método, você deve chamar o <ph id="ph1">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> método e adicione pelo menos um prefixo URI para escutar, adicionando as cadeias de caracteres URI para o <ph id="ph2">&lt;xref:System.Net.HttpListenerPrefixCollection&gt;</ph> retornado pelo <ph id="ph3">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.GetContext">
          <source>For a detailed description of prefixes, see the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> class overview.</source>
          <target state="translated">Para obter uma descrição detalhada de prefixos, consulte o <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> visão geral da classe.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.GetContext">
          <source>This method blocks while waiting for an incoming request.</source>
          <target state="translated">Blocos esse método ao aguardar uma solicitação de entrada.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.GetContext">
          <source>If you want incoming requests to be processed asynchronously (on separate threads) so that your application does not block, use the <ph id="ph1">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> method.</source>
          <target state="translated">Se quiser que as solicitações de entrada a serem processadas assincronamente (em threads separados) para que seu aplicativo não bloqueia, use o <ph id="ph1">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.GetContext">
          <source>The following code example demonstrates calling this method.</source>
          <target state="translated">O exemplo de código a seguir demonstra como chamar esse método.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.GetContext">
          <source>A Win32 function call failed.</source>
          <target state="translated">Falha em uma chamada de função do Win32.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.GetContext">
          <source>Check the exception's <ph id="ph1">&lt;see cref="P:System.Net.HttpListenerException.ErrorCode" /&gt;</ph> property to determine the cause of the exception.</source>
          <target state="translated">Verifique a propriedade <ph id="ph1">&lt;see cref="P:System.Net.HttpListenerException.ErrorCode" /&gt;</ph> da exceção para determinar a causa da exceção.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.GetContext">
          <source>This object has not been started or is currently stopped.</source>
          <target state="translated">Esse objeto não foi iniciado ou está parado no momento.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.GetContext">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.GetContext">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> does not have any Uniform Resource Identifier (URI) prefixes to respond to.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> não tem nenhum prefixo URI (Uniform Resource Identifier) ao qual responder.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.GetContext">
          <source>This object is closed.</source>
          <target state="translated">Este objeto está fechado.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.GetContext">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Esse membro emite o rastreamento de informações quando você ativa o rastreamento de rede em seu aplicativo.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.GetContext">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>rastreamento de rede no .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.GetContextAsync">
          <source>Waits for an incoming request as an asynchronous operation.</source>
          <target state="translated">Aguarda uma solicitação de entrada como uma operação assíncrona.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.GetContextAsync">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>.</source>
          <target state="translated">Retorna <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.GetContextAsync">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">O objeto de tarefa que representa a operação assíncrona.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.GetContextAsync">
          <source>The <ph id="ph1">&lt;see cref="P:System.Threading.Tasks.Task`1.Result" /&gt;</ph> property on the task object returns an <ph id="ph2">&lt;see cref="T:System.Net.HttpListenerContext" /&gt;</ph> object that represents a client request.</source>
          <target state="translated">A propriedade <ph id="ph1">&lt;see cref="P:System.Threading.Tasks.Task`1.Result" /&gt;</ph> no objeto da tarefa retorna um objeto <ph id="ph2">&lt;see cref="T:System.Net.HttpListenerContext" /&gt;</ph> que representa uma solicitação do cliente.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.GetContextAsync">
          <source>This operation will not block.</source>
          <target state="translated">Essa operação não será bloqueada.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.GetContextAsync">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete when the incoming request has been received.</source>
          <target state="translated">Retornado <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> objeto será concluída quando a solicitação de entrada foi recebida.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.GetContextAsync">
          <source>Before calling this method, you must call the <ph id="ph1">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> method and add at least one URI prefix to listen for by adding the URI strings to the <ph id="ph2">&lt;xref:System.Net.HttpListenerPrefixCollection&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> property.</source>
          <target state="translated">Antes de chamar esse método, você deve chamar o <ph id="ph1">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> método e adicione pelo menos um prefixo URI para escutar, adicionando as cadeias de caracteres URI para o <ph id="ph2">&lt;xref:System.Net.HttpListenerPrefixCollection&gt;</ph> retornado pelo <ph id="ph3">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.GetContextAsync">
          <source>For a detailed description of prefixes, see the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> class overview.</source>
          <target state="translated">Para obter uma descrição detalhada de prefixos, consulte o <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> visão geral da classe.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.IgnoreWriteExceptions">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that specifies whether your application receives exceptions that occur when an <ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> sends the response to the client.</source>
          <target state="translated">Obtém ou define um valor de <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> que especifica se o aplicativo recebe exceções que ocorrem quando um <ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> envia a resposta ao cliente.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.IgnoreWriteExceptions">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> should not return exceptions that occur when sending the response to the client; otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se este <ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> não deve retornar exceções que ocorrem ao enviar a resposta ao cliente; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.IgnoreWriteExceptions">
          <source>The default value is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">O valor padrão é <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.IgnoreWriteExceptions">
          <source>Set this property to <ph id="ph1">`true`</ph> if your application does not require that a response is successfully sent to each client.</source>
          <target state="translated">Defina essa propriedade como <ph id="ph1">`true`</ph> se seu aplicativo não exige que uma resposta é enviada com êxito para cada cliente.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.IgnoreWriteExceptions">
          <source>The following code example demonstrates setting this property.</source>
          <target state="translated">O exemplo de código a seguir demonstra a definição dessa propriedade.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.IgnoreWriteExceptions">
          <source>This object has been closed.</source>
          <target state="translated">Este objeto foi fechado.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.IsListening">
          <source>Gets a value that indicates whether <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> has been started.</source>
          <target state="translated">Obtém um valor que indica se o <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> tiver sido iniciado.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.IsListening">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> was started; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o <ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> tiver sido iniciado; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.IsListening">
          <source>To start an <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>, call the <ph id="ph2">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> method.</source>
          <target state="translated">Para iniciar um <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>, chame o <ph id="ph2">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.IsListening">
          <source>The following code example demonstrates using this property to determine the listening state of an instance.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar essa propriedade para determinar o estado de uma instância de escuta.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.IsSupported">
          <source>Gets a value that indicates whether <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> can be used with the current operating system.</source>
          <target state="translated">Obtém um valor que indica se <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> pode ser usado com o sistema operacional atual.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.IsSupported">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> is supported; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se há suporte para <ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph>; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.IsSupported">
          <source>This class is available only on computers running the Windows XP SP2 or Windows Server 2003 operating systems.</source>
          <target state="translated">Essa classe está disponível somente em computadores que executam os sistemas operacionais Windows XP SP2 ou Windows Server 2003.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.IsSupported">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Net.HttpListener.IsSupported%2A&gt;</ph> property to detect whether an <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> object can be used with the current operating system.</source>
          <target state="translated">O exemplo de código a seguir demonstra o uso do <ph id="ph1">&lt;xref:System.Net.HttpListener.IsSupported%2A&gt;</ph> propriedade para detectar se um <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> objeto pode ser usado com o sistema operacional atual.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.Prefixes">
          <source>Gets the Uniform Resource Identifier (URI) prefixes handled by this <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> object.</source>
          <target state="translated">Obtém os prefixos de URI (Uniform Resource Identifier) manipulados por este objeto <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.Prefixes">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.HttpListenerPrefixCollection" /&gt;</ph> that contains the URI prefixes that this <ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> object is configured to handle.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Net.HttpListenerPrefixCollection" /&gt;</ph> que contém os prefixos de URI que este objeto <ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> está configurado para manipular.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.Prefixes">
          <source>The prefixes are in canonical form.</source>
          <target state="translated">Os prefixos são em forma canônica.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.Prefixes">
          <source>For a detailed description of prefixes, see the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> class overview.</source>
          <target state="translated">Para obter uma descrição detalhada de prefixos, consulte o <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> visão geral da classe.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.Prefixes">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> property to obtain and print the URI prefixes that are handled.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar o <ph id="ph1">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> propriedade para obter e imprimir os prefixos URI são manipulados.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.Prefixes">
          <source>This object has been closed.</source>
          <target state="translated">Este objeto foi fechado.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.Realm">
          <source>Gets or sets the realm, or resource partition, associated with this <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> object.</source>
          <target state="translated">Obtém ou define o realm, ou partição de recurso, associado a esse objeto <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.Realm">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> value that contains the name of the realm associated with the <ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> object.</source>
          <target state="translated">Um valor <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contém o nome do realm associado ao objeto <ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.Realm">
          <source>Servers use realms to partition protected resources; each partition can have its own authentication scheme and/or authorization database.</source>
          <target state="translated">Servidores usam realms para particionar a recursos protegidos; cada partição pode ter seu próprio banco de dados de esquema e/ou autorização de autenticação.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.Realm">
          <source>Realms are used only for basic and digest authentication.</source>
          <target state="translated">Territórios são usados apenas para basic e a autenticação digest.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.Realm">
          <source>After a client successfully authenticates, the authentication is valid for all resources in a given realm.</source>
          <target state="translated">Depois que um cliente é autenticado com êxito, a autenticação é válida para todos os recursos de um determinado território.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.Realm">
          <source>For a detailed description of realms, see RFC 2617 at <bpt id="p1">[</bpt><ph id="ph1">http://www.ietf.org</ph><ept id="p1">](http://www.ietf.org)</ept>.</source>
          <target state="translated">Para obter uma descrição detalhada de territórios, consulte RFC 2617 no <bpt id="p1">[</bpt> <ph id="ph1">http://www.ietf.org</ph> <ept id="p1">](http://www.ietf.org)</ept>.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.Realm">
          <source>An instance of <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> has only one associated realm.</source>
          <target state="translated">Uma instância de <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> tem apenas um realm associado.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.Realm">
          <source>The following code example demonstrates setting the <ph id="ph1">&lt;xref:System.Net.HttpListener.Realm%2A&gt;</ph> property.</source>
          <target state="translated">O exemplo de código a seguir mostra a configuração de <ph id="ph1">&lt;xref:System.Net.HttpListener.Realm%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.Realm">
          <source>This object has been closed.</source>
          <target state="translated">Este objeto foi fechado.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.Start">
          <source>Allows this instance to receive incoming requests.</source>
          <target state="translated">Permite que essa instância receba solicitações de entrada.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Start">
          <source>This method must be called before you call the <ph id="ph1">&lt;xref:System.Net.HttpListener.GetContext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> method.</source>
          <target state="translated">Esse método deve ser chamado antes de chamar o <ph id="ph1">&lt;xref:System.Net.HttpListener.GetContext%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Start">
          <source>After you have started an <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> object, you can use the <ph id="ph2">&lt;xref:System.Net.HttpListener.Stop%2A&gt;</ph> method to stop it.</source>
          <target state="translated">Depois de iniciar um <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> do objeto, você pode usar o <ph id="ph2">&lt;xref:System.Net.HttpListener.Stop%2A&gt;</ph> método pará-la.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Start">
          <source>If this listener instance uses https, you must install and select a Server Certificate.</source>
          <target state="translated">Se esta instância de ouvinte usa https, você deve instalar e selecionar um certificado de servidor.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Start">
          <source>Otherwise, an <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> query of this <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> will fail with an unexpected close of the connection.</source>
          <target state="translated">Caso contrário, um <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> consulta deste <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> falhará com um fechamento inesperado da conexão.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Start">
          <source>You can configure Server Certificates and other listener options by using HttpCfg.exe.</source>
          <target state="translated">Você pode configurar certificados de servidor e outras opções de ouvinte usando HttpCfg.exe.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Start">
          <source>See <bpt id="p1">[</bpt><ph id="ph1">http://msdn.microsoft.com/library/default.asp?url=/library/http/http/httpcfg_exe.asp</ph><ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/http/http/httpcfg_exe.asp)</ept> for more details.</source>
          <target state="translated">Consulte <bpt id="p1">[</bpt> <ph id="ph1">http://msdn.microsoft.com/library/default.asp?url=/library/http/http/httpcfg_exe.asp</ph> <ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/http/http/httpcfg_exe.asp)</ept> para obter mais detalhes.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Start">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> method to begin processing incoming requests.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar o <ph id="ph1">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> método para começar o processamento de solicitações de entrada.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.Start">
          <source>A Win32 function call failed.</source>
          <target state="translated">Falha em uma chamada de função do Win32.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.Start">
          <source>Check the exception's <ph id="ph1">&lt;see cref="P:System.Net.HttpListenerException.ErrorCode" /&gt;</ph> property to determine the cause of the exception.</source>
          <target state="translated">Verifique a propriedade <ph id="ph1">&lt;see cref="P:System.Net.HttpListenerException.ErrorCode" /&gt;</ph> da exceção para determinar a causa da exceção.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.Start">
          <source>This object is closed.</source>
          <target state="translated">Este objeto está fechado.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Start">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Esse membro emite o rastreamento de informações quando você ativa o rastreamento de rede em seu aplicativo.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Start">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>rastreamento de rede no .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.Stop">
          <source>Causes this instance to stop receiving incoming requests.</source>
          <target state="translated">Faz com que essa instância interrompa o recebimento de solicitações de entrada.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Stop">
          <source>If this instance is already stopped, calling this method has no effect.</source>
          <target state="translated">Se esta instância já estiver interrompida, chamar este método não tem nenhum efeito.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Stop">
          <source>After you have stopped an <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> object, you can use the <ph id="ph2">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> method to restart it.</source>
          <target state="translated">Depois de ter interrompido um <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> do objeto, você pode usar o <ph id="ph2">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> método reiniciá-lo.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Stop">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Net.HttpListener.Stop%2A&gt;</ph> method to stop processing incoming requests.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar o <ph id="ph1">&lt;xref:System.Net.HttpListener.Stop%2A&gt;</ph> método pare de processar solicitações de entrada.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.Stop">
          <source>This object has been closed.</source>
          <target state="translated">Este objeto foi fechado.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Stop">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Esse membro emite o rastreamento de informações quando você ativa o rastreamento de rede em seu aplicativo.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Stop">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>rastreamento de rede no .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.System#IDisposable#Dispose">
          <source>Releases the resources held by this <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> object.</source>
          <target state="translated">Libera os recursos mantidos por esse objeto <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.System#IDisposable#Dispose">
          <source>Applications should use the <ph id="ph1">&lt;xref:System.Net.HttpListener.Close%2A&gt;</ph> method instead of calling this method.</source>
          <target state="translated">Os aplicativos devem usar o <ph id="ph1">&lt;xref:System.Net.HttpListener.Close%2A&gt;</ph> método em vez de chamar esse método.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.TimeoutManager">
          <source>The timeout manager for this <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> instance.</source>
          <target state="translated">O gerenciador de tempo limite para esta instância do <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.TimeoutManager">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Net.HttpListenerTimeoutManager" /&gt;</ph>.</source>
          <target state="translated">Retorna <ph id="ph1">&lt;see cref="T:System.Net.HttpListenerTimeoutManager" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.TimeoutManager">
          <source>The timeout manager for this <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> instance.</source>
          <target state="translated">O gerenciador de tempo limite para esta instância do <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.TimeoutManager">
          <source>The timeout manager defines the connection timeout limits for this <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> instance.</source>
          <target state="translated">O Gerenciador de tempo limite define os limites de tempo limite de conexão para este <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> instância.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that controls whether, when NTLM is used, additional requests using the same Transmission Control Protocol (TCP) connection are required to authenticate.</source>
          <target state="translated">Obtém ou define um valor <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> que controla se, ao usar o NTLM, solicitações adicionais usando a mesma conexão por protocolo TCP são ou não necessárias para autenticação.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Security.Principal.IIdentity" /&gt;</ph> of the first request will be used for subsequent requests on the same connection; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se o <ph id="ph2">&lt;see cref="T:System.Security.Principal.IIdentity" /&gt;</ph> da primeira solicitação será usada para solicitações subsequentes na mesma conexão; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication">
          <source>The default value is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">O valor padrão é <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication">
          <source>When this property is set to <ph id="ph1">`true`</ph> and the first request over a particular TCP connection is authenticated using NTLM, subsequent requests over the same TCP connection are processed using the authentication information (<ph id="ph2">&lt;xref:System.Security.Principal.IIdentity&gt;</ph>) of the initial request.</source>
          <target state="translated">Quando essa propriedade é definida como <ph id="ph1">`true`</ph> e a primeira solicitação por uma conexão TCP específico é autenticada usando NTLM, solicitações subsequentes durante a mesma conexão TCP são processadas usando as informações de autenticação (<ph id="ph2">&lt;xref:System.Security.Principal.IIdentity&gt;</ph>) da solicitação inicial.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication">
          <source>This property has no effect when NTLM is not the authentication protocol.</source>
          <target state="translated">Essa propriedade não tem efeito quando o NTLM não será o protocolo de autenticação.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication">
          <source>When Negotiate is specified as the authentication protocol, this property has an effect only if NTLM is the actual protocol used for authentication.</source>
          <target state="translated">Quando a negociação é especificada como o protocolo de autenticação, essa propriedade tem efeito somente se o NTLM é o protocolo real usado para autenticação.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication">
          <source>While setting this property to <ph id="ph1">`true`</ph> increases performance because the <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> does not send additional NTLM authentication challenges, there is a security risk in not requiring all requests to provide authentication information.</source>
          <target state="translated">Ao configurar essa propriedade como <ph id="ph1">`true`</ph> aumenta o desempenho porque o <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> não não enviar adicionais NTLM desafios de autenticação, há um risco de segurança em que não exigem todas as solicitações para fornecer informações de autenticação.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication">
          <source>You must determine whether the increase in performance is worth this risk.</source>
          <target state="translated">Você deve determinar se o aumento no desempenho é vale a pena esse risco.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication">
          <source>The following code example demonstrates setting this property.</source>
          <target state="translated">O exemplo de código a seguir demonstra a definição dessa propriedade.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication">
          <source>This object has been closed.</source>
          <target state="translated">Este objeto foi fechado.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>