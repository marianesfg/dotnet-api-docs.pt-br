<Type Name="HttpListener" FullName="System.Net.HttpListener">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f82a2afb3da34caaf3cfdf48b3993f0b10396de1" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39732062" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpListener : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpListener extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.HttpListener" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpListener&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpListener sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type HttpListener = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.HttpListener</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="f600b-101">Fornece um ouvinte de protocolo HTTP simples controlado programaticamente.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f600b-101">Provides a simple, programmatically controlled HTTP protocol listener.</span>
      </span>
      <span data-ttu-id="f600b-102">Essa classe não pode ser herdada.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f600b-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f600b-103">Usando o <xref:System.Net.HttpListener> classe, você pode criar um ouvinte de protocolo HTTP simples que responde a solicitações HTTP.</span><span class="sxs-lookup"><span data-stu-id="f600b-103">Using the <xref:System.Net.HttpListener> class, you can create a simple HTTP protocol listener that responds to HTTP requests.</span></span> <span data-ttu-id="f600b-104">O ouvinte fica ativo durante a vida útil de <xref:System.Net.HttpListener> objeto e é executado dentro de seu aplicativo com suas permissões.</span><span class="sxs-lookup"><span data-stu-id="f600b-104">The listener is active for the lifetime of the <xref:System.Net.HttpListener> object and runs within your application with its permissions.</span></span>
   
 <span data-ttu-id="f600b-105">Para usar <xref:System.Net.HttpListener>, criar uma nova instância da classe usando o <xref:System.Net.HttpListener> construtor e use o <xref:System.Net.HttpListener.Prefixes%2A> prefixos de propriedade para obter acesso à coleção que contém as cadeias de caracteres que especificam quais identificador de recurso uniforme (URI) a <xref:System.Net.HttpListener>deve processar.</span><span class="sxs-lookup"><span data-stu-id="f600b-105">To use <xref:System.Net.HttpListener>, create a new instance of the class using the <xref:System.Net.HttpListener> constructor and use the <xref:System.Net.HttpListener.Prefixes%2A> property to gain access to the collection that holds the strings that specify which Uniform Resource Identifier (URI) prefixes the <xref:System.Net.HttpListener> should process.</span></span>
  
 <span data-ttu-id="f600b-106">Uma cadeia de caracteres de prefixo URI é composta de um esquema (http ou https), um host, uma porta opcional e um caminho opcional.</span><span class="sxs-lookup"><span data-stu-id="f600b-106">A URI prefix string is composed of a scheme (http or https), a host, an optional port, and an optional path.</span></span> <span data-ttu-id="f600b-107">É um exemplo de uma cadeia de caracteres de prefixo completa * http://www.contoso.com:8080/customerData/ *.</span><span class="sxs-lookup"><span data-stu-id="f600b-107">An example of a complete prefix string is *http://www.contoso.com:8080/customerData/*.</span></span> <span data-ttu-id="f600b-108">Prefixos devem terminar com uma barra invertida ("/").</span><span class="sxs-lookup"><span data-stu-id="f600b-108">Prefixes must end in a forward slash ("/").</span></span> <span data-ttu-id="f600b-109">O <xref:System.Net.HttpListener> objeto com o prefixo que mais se aproxima um URI solicitado responde à solicitação.</span><span class="sxs-lookup"><span data-stu-id="f600b-109">The <xref:System.Net.HttpListener> object with the prefix that most closely matches a requested URI responds to the request.</span></span> <span data-ttu-id="f600b-110">Vários <xref:System.Net.HttpListener> objetos não é possível adicionar o mesmo prefixo; um <xref:System.ComponentModel.Win32Exception> exceção será gerada se um <xref:System.Net.HttpListener> adiciona um prefixo que já está em usar.</span><span class="sxs-lookup"><span data-stu-id="f600b-110">Multiple <xref:System.Net.HttpListener> objects cannot add the same prefix; a <xref:System.ComponentModel.Win32Exception> exception is thrown if a <xref:System.Net.HttpListener> adds a prefix that is already in use.</span></span>
  
 <span data-ttu-id="f600b-111">Quando uma porta for especificada, o elemento host pode ser substituído por "\*" para indicar que o <xref:System.Net.HttpListener> aceita as solicitações enviadas para a porta se o URI solicitado não corresponder a qualquer outro prefixo.</span><span class="sxs-lookup"><span data-stu-id="f600b-111">When a port is specified, the host element can be replaced with "\*" to indicate that the <xref:System.Net.HttpListener> accepts requests sent to the port if the requested URI does not match any other prefix.</span></span> <span data-ttu-id="f600b-112">Por exemplo, para receber todas as solicitações enviadas para a porta 8080 quando o URI solicitado não for tratado por qualquer <xref:System.Net.HttpListener>, é o prefixo *http://\*: 8080 /*.</span><span class="sxs-lookup"><span data-stu-id="f600b-112">For example, to receive all requests sent to port 8080 when the requested URI is not handled by any <xref:System.Net.HttpListener>, the prefix is *http://\*:8080/*.</span></span> <span data-ttu-id="f600b-113">Da mesma forma, para especificar que o <xref:System.Net.HttpListener> aceita todas as solicitações enviadas a uma porta, substitua o elemento de host com o caractere "+".</span><span class="sxs-lookup"><span data-stu-id="f600b-113">Similarly, to specify that the <xref:System.Net.HttpListener> accepts all requests sent to a port, replace the host element with the "+" character.</span></span> <span data-ttu-id="f600b-114">Por exemplo, *https://+:8080*.</span><span class="sxs-lookup"><span data-stu-id="f600b-114">For example, *https://+:8080*.</span></span> <span data-ttu-id="f600b-115">O "\*" e "+" caracteres podem estar presentes em prefixos que caminhos de inclusão.</span><span class="sxs-lookup"><span data-stu-id="f600b-115">The "\*" and "+" characters can be present in prefixes that include paths.</span></span>
  
 <span data-ttu-id="f600b-116">Começando com o .NET Core 2.0 ou .NET Framework 4.6 no Windows 10, subdomínios curinga têm suporte nos prefixos URI que são gerenciados por um <xref:System.Net.HttpListener> objeto.</span><span class="sxs-lookup"><span data-stu-id="f600b-116">Starting with .NET Core 2.0 or .NET Framework 4.6 on Windows 10, wildcard subdomains are supported in URI prefixes that are managed by an <xref:System.Net.HttpListener> object.</span></span> <span data-ttu-id="f600b-117">Para especificar um subdomínio de curinga, use o "\*" caractere como parte do nome do host em um prefixo de URI.</span><span class="sxs-lookup"><span data-stu-id="f600b-117">To specify a wildcard subdomain, use the "\*" character as part of the hostname in a URI prefix.</span></span> <span data-ttu-id="f600b-118">Por exemplo, *http://\*.foo.com/*.</span><span class="sxs-lookup"><span data-stu-id="f600b-118">For example, *http://\*.foo.com/*.</span></span> <span data-ttu-id="f600b-119">Passar isso como o argumento para o <xref:System.Net.HttpListenerPrefixCollection.Add%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f600b-119">Pass this as the argument to the <xref:System.Net.HttpListenerPrefixCollection.Add%2A> method.</span></span> <span data-ttu-id="f600b-120">Isso funciona a partir do .NET Core 2.0 ou .NET Framework 4.6 no Windows 10; em versões anteriores, isso gera um <xref:System.Net.HttpListenerException>.</span><span class="sxs-lookup"><span data-stu-id="f600b-120">This works as of .NET Core 2.0 or .NET Framework 4.6 on Windows 10; in earlier versions, this generates an <xref:System.Net.HttpListenerException>.</span></span>

 > [!WARNING]
 > <span data-ttu-id="f600b-121">Associações de curinga de nível superior (*http://\*: 8080 /* e \* http://+:8080 \*) deve **não** ser usado.</span><span class="sxs-lookup"><span data-stu-id="f600b-121">Top-level wildcard bindings (*http://\*:8080/* and *http://+:8080*) should **not** be used.</span></span> <span data-ttu-id="f600b-122">Associações de curinga de nível superior podem abrir o aplicativo para vulnerabilidades de segurança.</span><span class="sxs-lookup"><span data-stu-id="f600b-122">Top-level wildcard bindings can open up your app to security vulnerabilities.</span></span> <span data-ttu-id="f600b-123">Isso se aplica a curingas fortes e fracos.</span><span class="sxs-lookup"><span data-stu-id="f600b-123">This applies to both strong and weak wildcards.</span></span> <span data-ttu-id="f600b-124">Use nomes de host explícitos em vez de curingas.</span><span class="sxs-lookup"><span data-stu-id="f600b-124">Use explicit host names rather than wildcards.</span></span> <span data-ttu-id="f600b-125">Associações de curinga de subdomínio (por exemplo, `*.mysub.com`) não têm esse risco de segurança se você controlar o domínio pai completo (em vez de `*.com`, o qual é vulnerável).</span><span class="sxs-lookup"><span data-stu-id="f600b-125">Subdomain wildcard binding (for example, `*.mysub.com`) doesn't have this security risk if you control the entire parent domain (as opposed to `*.com`, which is vulnerable).</span></span> <span data-ttu-id="f600b-126">Veja [rfc7230 section-5.4](https://tools.ietf.org/html/rfc7230#section-5.4) para obter mais informações.</span><span class="sxs-lookup"><span data-stu-id="f600b-126">See [rfc7230 section-5.4](https://tools.ietf.org/html/rfc7230#section-5.4) for more information.</span></span>
  
 <span data-ttu-id="f600b-127">Para começar a escutar solicitações de clientes, adicione os prefixos URI para a coleta e a chamada a <xref:System.Net.HttpListener.Start%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f600b-127">To begin listening for requests from clients, add the URI prefixes to the collection and call the <xref:System.Net.HttpListener.Start%2A> method.</span></span> <span data-ttu-id="f600b-128"><xref:System.Net.HttpListener> oferece modelos síncronos e assíncronos para processar solicitações de cliente.</span><span class="sxs-lookup"><span data-stu-id="f600b-128"><xref:System.Net.HttpListener> offers both synchronous and asynchronous models for processing client requests.</span></span> <span data-ttu-id="f600b-129">Solicitações e suas respostas associadas são acessadas usando o <xref:System.Net.HttpListenerContext> objeto retornado pela <xref:System.Net.HttpListener.GetContext%2A> método ou seus equivalentes assíncronos, o <xref:System.Net.HttpListener.BeginGetContext%2A> e <xref:System.Net.HttpListener.EndGetContext%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="f600b-129">Requests and their associated responses are accessed using the <xref:System.Net.HttpListenerContext> object returned by the <xref:System.Net.HttpListener.GetContext%2A> method or its asynchronous counterparts, the <xref:System.Net.HttpListener.BeginGetContext%2A> and <xref:System.Net.HttpListener.EndGetContext%2A> methods.</span></span>
  
 <span data-ttu-id="f600b-130">O modelo síncrono é apropriado, se seu aplicativo deve bloquear enquanto aguarda uma solicitação de cliente e se você quiser processar apenas uma solicitação por vez.</span><span class="sxs-lookup"><span data-stu-id="f600b-130">The synchronous model is appropriate if your application should block while waiting for a client request and if you want to process only one request at a time.</span></span> <span data-ttu-id="f600b-131">Usando o modelo síncrono, chame o <xref:System.Net.HttpListener.GetContext%2A> método, que aguarda um cliente enviar uma solicitação.</span><span class="sxs-lookup"><span data-stu-id="f600b-131">Using the synchronous model, call the <xref:System.Net.HttpListener.GetContext%2A> method, which waits for a client to send a request.</span></span> <span data-ttu-id="f600b-132">O método retorna um <xref:System.Net.HttpListenerContext> para processamento quando um ocorre de objeto para você.</span><span class="sxs-lookup"><span data-stu-id="f600b-132">The method returns an <xref:System.Net.HttpListenerContext> object to you for processing when one occurs.</span></span>
  
 <span data-ttu-id="f600b-133">No modelo assíncrona mais complexo, seu aplicativo não bloqueia enquanto esperando solicitações e cada solicitação é processada em seu próprio thread de execução.</span><span class="sxs-lookup"><span data-stu-id="f600b-133">In the more complex asynchronous model, your application does not block while waiting for requests and each request is processed in its own execution thread.</span></span> <span data-ttu-id="f600b-134">Use o <xref:System.Net.HttpListener.BeginGetContext%2A> método para especificar um método definido pelo aplicativo a ser chamado para cada solicitação de entrada.</span><span class="sxs-lookup"><span data-stu-id="f600b-134">Use the <xref:System.Net.HttpListener.BeginGetContext%2A> method to specify an application-defined method to be called for each incoming request.</span></span> <span data-ttu-id="f600b-135">Dentro desse método, chame o <xref:System.Net.HttpListener.EndGetContext%2A> método para obter a solicitação, processá-lo e responder.</span><span class="sxs-lookup"><span data-stu-id="f600b-135">Within that method, call the <xref:System.Net.HttpListener.EndGetContext%2A> method to obtain the request, process it, and respond.</span></span>
  
 <span data-ttu-id="f600b-136">Em qualquer um dos modelos, as solicitações de entrada são acessadas usando o <xref:System.Net.HttpListenerContext.Request%2A?displayProperty=nameWithType> propriedade e são representados por <xref:System.Net.HttpListenerRequest> objetos.</span><span class="sxs-lookup"><span data-stu-id="f600b-136">In either model, incoming requests are accessed using the <xref:System.Net.HttpListenerContext.Request%2A?displayProperty=nameWithType> property and are represented by <xref:System.Net.HttpListenerRequest> objects.</span></span> <span data-ttu-id="f600b-137">Da mesma forma, as respostas são acessadas usando o <xref:System.Net.HttpListenerContext.Response%2A?displayProperty=nameWithType> propriedade e são representados por <xref:System.Net.HttpListenerResponse> objetos.</span><span class="sxs-lookup"><span data-stu-id="f600b-137">Similarly, responses are accessed using the <xref:System.Net.HttpListenerContext.Response%2A?displayProperty=nameWithType> property and are represented by <xref:System.Net.HttpListenerResponse> objects.</span></span> <span data-ttu-id="f600b-138">Esses objetos compartilham algumas funcionalidades com o <xref:System.Net.HttpWebRequest> e <xref:System.Net.HttpWebResponse> objetos, mas os último objetos não podem ser usado em conjunto com <xref:System.Net.HttpListener> porque eles implementam o cliente, e não em servidor, comportamentos.</span><span class="sxs-lookup"><span data-stu-id="f600b-138">These objects share some functionality with the <xref:System.Net.HttpWebRequest> and <xref:System.Net.HttpWebResponse> objects, but the latter objects cannot be used in conjunction with <xref:System.Net.HttpListener> because they implement client, not server, behaviors.</span></span>
  
 <span data-ttu-id="f600b-139">Um <xref:System.Net.HttpListener> pode exigir a autenticação do cliente.</span><span class="sxs-lookup"><span data-stu-id="f600b-139">An <xref:System.Net.HttpListener> can require client authentication.</span></span> <span data-ttu-id="f600b-140">Você pode especificar um esquema específico a ser usado para autenticação, ou você pode especificar um delegado que determina o esquema a ser usado.</span><span class="sxs-lookup"><span data-stu-id="f600b-140">You can either specify a particular scheme to use for authentication, or you can specify a delegate that determines the scheme to use.</span></span> <span data-ttu-id="f600b-141">Você deve exigir alguma forma de autenticação para obter informações sobre a identidade do cliente.</span><span class="sxs-lookup"><span data-stu-id="f600b-141">You must require some form of authentication to obtain information about the client's identity.</span></span> <span data-ttu-id="f600b-142">Para obter mais informações, consulte o <xref:System.Net.HttpListenerContext.User%2A>, <xref:System.Net.HttpListener.AuthenticationSchemes%2A>, e <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> propriedades.</span><span class="sxs-lookup"><span data-stu-id="f600b-142">For additional information, see the <xref:System.Net.HttpListenerContext.User%2A>, <xref:System.Net.HttpListener.AuthenticationSchemes%2A>, and <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> properties.</span></span>
  
> [!NOTE]
> <span data-ttu-id="f600b-143">Se você criar um <xref:System.Net.HttpListener> usando https, você deve selecionar um certificado de servidor para esse ouvinte.</span><span class="sxs-lookup"><span data-stu-id="f600b-143">If you create an <xref:System.Net.HttpListener> using https, you must select a Server Certificate for that listener.</span></span> <span data-ttu-id="f600b-144">Caso contrário, uma <xref:System.Net.HttpWebRequest> consulta deste <xref:System.Net.HttpListener> falhará com um fechamento inesperado da conexão.</span><span class="sxs-lookup"><span data-stu-id="f600b-144">Otherwise, an <xref:System.Net.HttpWebRequest> query of this <xref:System.Net.HttpListener> will fail with an unexpected close of the connection.</span></span>
  
> [!NOTE]
> <span data-ttu-id="f600b-145">Você pode configurar certificados de servidor e outras opções de ouvinte usando o Shell de rede (netsh.exe).</span><span class="sxs-lookup"><span data-stu-id="f600b-145">You can configure Server Certificates and other listener options by using Network Shell (netsh.exe).</span></span> <span data-ttu-id="f600b-146">Ver [Network Shell (Netsh)](/windows-server/networking/technologies/netsh/netsh) para obter mais detalhes.</span><span class="sxs-lookup"><span data-stu-id="f600b-146">See [Network Shell (Netsh)](/windows-server/networking/technologies/netsh/netsh) for more details.</span></span> <span data-ttu-id="f600b-147">O executável começou a ser fornecido com o Windows Server 2008 e Windows Vista.</span><span class="sxs-lookup"><span data-stu-id="f600b-147">The executable began shipping with Windows Server 2008 and Windows Vista.</span></span>
  
> [!NOTE]
> <span data-ttu-id="f600b-148">Se você especificar vários esquemas de autenticação para o <xref:System.Net.HttpListener>, o ouvinte desafiará clientes na seguinte ordem: `Negotiate`, `NTLM`, `Digest`e, em seguida, `Basic`.</span><span class="sxs-lookup"><span data-stu-id="f600b-148">If you specify multiple authentication schemes for the <xref:System.Net.HttpListener>, the listener will challenge clients in the following order: `Negotiate`, `NTLM`, `Digest`, and then `Basic`.</span></span>
  
   
  
## Examples
 <span data-ttu-id="f600b-149">O exemplo de código a seguir demonstra como usar um <xref:System.Net.HttpListener>.</span><span class="sxs-lookup"><span data-stu-id="f600b-149">The following code example demonstrates using a <xref:System.Net.HttpListener>.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpListener ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpListener();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f600b-150">Inicializa uma nova instância da classe <see cref="T:System.Net.HttpListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-150">Initializes a new instance of the <see cref="T:System.Net.HttpListener" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f600b-151">Antes de usar a instância retornada por esse construtor, você deve chamar seu <xref:System.Net.HttpListener.Start%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f600b-151">Before using the instance returned by this constructor, you must invoke its <xref:System.Net.HttpListener.Start%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f600b-152">O exemplo de código a seguir demonstra como usar o <xref:System.Net.HttpListener> construtor para criar um novo <xref:System.Net.HttpListener> objeto.</span><span class="sxs-lookup"><span data-stu-id="f600b-152">The following code example demonstrates using the <xref:System.Net.HttpListener> constructor to create a new <xref:System.Net.HttpListener> object.</span></span> <span data-ttu-id="f600b-153">Para o exemplo completo, consulte o <xref:System.Net.HttpListener> tópico da classe.</span><span class="sxs-lookup"><span data-stu-id="f600b-153">For the complete example, see the <xref:System.Net.HttpListener> class topic.</span></span>  
  
 [!code-csharp[Net_listener_Basic#9](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="f600b-154">Essa classe não pode ser usada com o sistema operacional atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-154">This class cannot be used on the current operating system.</span>
          </span>
          <span data-ttu-id="f600b-155">É necessário o Windows Server 2003 ou Windows XP SP2 para usar as instâncias dessa classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-155">Windows Server 2003 or Windows XP SP2 is required to use instances of this class.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="f600b-156">
            <para>Observação: Esse membro emite informações de rastreamento ao habilitar o rastreamento de rede em seu aplicativo. Para obter mais informações, consulte [rastreamento de rede no .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-156">
              <para>Note: This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort();" />
      <MemberSignature Language="F#" Value="member this.Abort : unit -&gt; unit" Usage="httpListener.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f600b-157">Desliga o objeto <see cref="T:System.Net.HttpListener" /> imediatamente, descartando todas as solicitações atualmente na fila.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-157">Shuts down the <see cref="T:System.Net.HttpListener" /> object immediately, discarding all currently queued requests.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f600b-158">Esse método descarta todos os recursos mantidos por este ouvinte.</span><span class="sxs-lookup"><span data-stu-id="f600b-158">This method disposes of all resources held by this listener.</span></span> <span data-ttu-id="f600b-159">Solicitações pendentes de não conseguir concluir.</span><span class="sxs-lookup"><span data-stu-id="f600b-159">Any pending requests are unable to complete.</span></span>  
  
 <span data-ttu-id="f600b-160">Depois de chamar esse método, você receberá uma <xref:System.ObjectDisposedException> se você tentar usá-lo <xref:System.Net.HttpListener>.</span><span class="sxs-lookup"><span data-stu-id="f600b-160">After calling this method, you will receive an <xref:System.ObjectDisposedException> if you attempt to use this <xref:System.Net.HttpListener>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f600b-161">O exemplo de código a seguir demonstra como chamar esse método.</span><span class="sxs-lookup"><span data-stu-id="f600b-161">The following code example demonstrates calling this method.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#11](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#11)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="f600b-162">
            <para>Esse membro emite informações de rastreamento, quando você habilita o rastreamento de rede em seu aplicativo. Para obter mais informações, consulte [rastreamento de rede no .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-162">
              <para>This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationSchemes">
      <MemberSignature Language="C#" Value="public System.Net.AuthenticationSchemes AuthenticationSchemes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.AuthenticationSchemes AuthenticationSchemes" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.AuthenticationSchemes" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticationSchemes As AuthenticationSchemes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::AuthenticationSchemes AuthenticationSchemes { System::Net::AuthenticationSchemes get(); void set(System::Net::AuthenticationSchemes value); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationSchemes : System.Net.AuthenticationSchemes with get, set" Usage="System.Net.HttpListener.AuthenticationSchemes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.AuthenticationSchemes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f600b-163">Obtém ou define o esquema usado para autenticar clientes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-163">Gets or sets the scheme used to authenticate clients.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f600b-164">Uma combinação bit a bit de <see cref="T:System.Net.AuthenticationSchemes" /> valores de enumeração que indica como os clientes devem ser autenticadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-164">A bitwise combination of <see cref="T:System.Net.AuthenticationSchemes" /> enumeration values that indicates how clients are to be authenticated.</span>
          </span>
          <span data-ttu-id="f600b-165">O valor padrão é <see cref="F:System.Net.AuthenticationSchemes.Anonymous" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-165">The default value is <see cref="F:System.Net.AuthenticationSchemes.Anonymous" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f600b-166">O <xref:System.Net.HttpListener> usa o esquema especificado para autenticar todas as solicitações de entrada.</span><span class="sxs-lookup"><span data-stu-id="f600b-166">The <xref:System.Net.HttpListener> uses the specified scheme to authenticate all incoming requests.</span></span> <span data-ttu-id="f600b-167">O <xref:System.Net.HttpListener.GetContext%2A> e <xref:System.Net.HttpListener.EndGetContext%2A> métodos retornam uma solicitação de cliente de entrada somente se o <xref:System.Net.HttpListener> autentica com êxito a solicitação.</span><span class="sxs-lookup"><span data-stu-id="f600b-167">The <xref:System.Net.HttpListener.GetContext%2A> and <xref:System.Net.HttpListener.EndGetContext%2A> methods return an incoming client request only if the <xref:System.Net.HttpListener> successfully authenticates the request.</span></span>  
  
 <span data-ttu-id="f600b-168">É possível interrogar a identidade de um cliente autenticado com êxito usando o <xref:System.Net.HttpListenerContext.User%2A?displayProperty=nameWithType> propriedade.</span><span class="sxs-lookup"><span data-stu-id="f600b-168">You can interrogate the identity of a successfully authenticated client by using the <xref:System.Net.HttpListenerContext.User%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="f600b-169">Se você quiser que um <xref:System.Net.HttpListener> objeto usar diferentes mecanismos de autenticação com base nas características das solicitações que recebe (por exemplo, da solicitação <xref:System.Net.HttpListenerRequest.Url%2A> ou <xref:System.Net.HttpListenerRequest.UserHostName%2A> propriedade), você deve implementar um método que escolhe o esquema de autenticação.</span><span class="sxs-lookup"><span data-stu-id="f600b-169">If you want an <xref:System.Net.HttpListener> object to use different authentication mechanisms based on characteristics of the requests it receives (for example, the request's <xref:System.Net.HttpListenerRequest.Url%2A> or <xref:System.Net.HttpListenerRequest.UserHostName%2A> property), you must implement a method that chooses the authentication scheme.</span></span> <span data-ttu-id="f600b-170">Para obter instruções sobre como fazer isso, consulte o <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> documentação da propriedade.</span><span class="sxs-lookup"><span data-stu-id="f600b-170">For instructions about how to do this, see the <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> property documentation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f600b-171">Para definir essa propriedade para habilitar o Digest, NTLM ou Negotiate requer o <xref:System.Security.Permissions.SecurityPermission>, <xref:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal>.</span><span class="sxs-lookup"><span data-stu-id="f600b-171">To set this property to enable Digest, NTLM, or Negotiate requires the <xref:System.Security.Permissions.SecurityPermission>, <xref:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f600b-172">O exemplo de código a seguir demonstra como usar o <xref:System.Net.HttpListener.AuthenticationSchemes%2A> propriedade para especificar um esquema de autenticação.</span><span class="sxs-lookup"><span data-stu-id="f600b-172">The following code example demonstrates using the <xref:System.Net.HttpListener.AuthenticationSchemes%2A> property to specify an authentication scheme.</span></span>  
  
 [!code-csharp[Net_listener_Basic#14](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f600b-173">Este objeto foi fechado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-173">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationSchemeSelectorDelegate">
      <MemberSignature Language="C#" Value="public System.Net.AuthenticationSchemeSelector AuthenticationSchemeSelectorDelegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.AuthenticationSchemeSelector AuthenticationSchemeSelectorDelegate" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticationSchemeSelectorDelegate As AuthenticationSchemeSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::AuthenticationSchemeSelector ^ AuthenticationSchemeSelectorDelegate { System::Net::AuthenticationSchemeSelector ^ get(); void set(System::Net::AuthenticationSchemeSelector ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationSchemeSelectorDelegate : System.Net.AuthenticationSchemeSelector with get, set" Usage="System.Net.HttpListener.AuthenticationSchemeSelectorDelegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.AuthenticationSchemeSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f600b-174">Obtém ou define o delegado chamado para determinar o protocolo usado para autenticar clientes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-174">Gets or sets the delegate called to determine the protocol used to authenticate clients.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f600b-175">Um delegado <see cref="T:System.Net.AuthenticationSchemeSelector" /> que invoca o método usado para selecionar um protocolo de autenticação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-175">An <see cref="T:System.Net.AuthenticationSchemeSelector" /> delegate that invokes the method used to select an authentication protocol.</span>
          </span>
          <span data-ttu-id="f600b-176">O valor padrão é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-176">The default value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="f600b-177">Se você quiser que o mesmo protocolo de autenticação a ser usado para todas as solicitações tratadas por uma instância específica de <xref:System.Net.HttpListener>, você não precisa definir essa propriedade.</span><span class="sxs-lookup"><span data-stu-id="f600b-177">If you want the same authentication protocol to be used for all requests handled by a particular instance of <xref:System.Net.HttpListener>, you do not need to set this property.</span></span> <span data-ttu-id="f600b-178">Para especificar um protocolo a ser usado para todas as solicitações de cliente, use o <xref:System.Net.HttpListener.AuthenticationSchemes%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="f600b-178">To specify a protocol to be used for all client requests, use the <xref:System.Net.HttpListener.AuthenticationSchemes%2A> property.</span></span>  
  
 <span data-ttu-id="f600b-179">Se o cliente não tiver especificado as informações de autenticação em seus cabeçalhos, o <xref:System.Net.HttpListener> chama o delegado especificado para cada solicitação de entrada não autenticado determinar que, se houver, protocolo a ser usado para autenticar o cliente.</span><span class="sxs-lookup"><span data-stu-id="f600b-179">If the client has not specified authentication information in its headers, the <xref:System.Net.HttpListener> calls the specified delegate for each unauthenticated incoming request to determine which, if any, protocol to use to authenticate the client.</span></span> <span data-ttu-id="f600b-180">O <xref:System.Net.HttpListener.GetContext%2A> e <xref:System.Net.HttpListener.EndGetContext%2A> métodos retornam uma entrada se apenas de solicitação a <xref:System.Net.HttpListener> autenticado com êxito a solicitação.</span><span class="sxs-lookup"><span data-stu-id="f600b-180">The <xref:System.Net.HttpListener.GetContext%2A> and <xref:System.Net.HttpListener.EndGetContext%2A> methods return an incoming request only if the <xref:System.Net.HttpListener> successfully authenticated the request.</span></span> <span data-ttu-id="f600b-181">Se uma solicitação não pode ser autenticada, o <xref:System.Net.HttpListener> automaticamente envia de volta uma resposta 401.</span><span class="sxs-lookup"><span data-stu-id="f600b-181">If a request cannot be authenticated, the <xref:System.Net.HttpListener> automatically sends back a 401 response.</span></span> <span data-ttu-id="f600b-182">Você pode obter a identidade de um cliente autenticado com êxito usando o <xref:System.Web.HttpRequest.LogonUserIdentity%2A?displayProperty=nameWithType> propriedade.</span><span class="sxs-lookup"><span data-stu-id="f600b-182">You can get the identity of a successfully authenticated client using the <xref:System.Web.HttpRequest.LogonUserIdentity%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="f600b-183">A capacidade de delegar a escolha de protocolo de autenticação para um método específico do aplicativo é útil se você quiser uma instância de <xref:System.Net.HttpListener> usar protocolos de autenticação diferentes, dependendo das características das solicitações recebidas (sobre exemplo, a solicitação <xref:System.Net.HttpListenerRequest.Url%2A> ou <xref:System.Net.HttpListenerRequest.UserHostAddress%2A> propriedade).</span><span class="sxs-lookup"><span data-stu-id="f600b-183">The ability to delegate the choice of authentication protocol to an application-specific method is useful if you want an instance of <xref:System.Net.HttpListener> to use different authentication protocols depending on the characteristics of the requests it receives (for example, the request's <xref:System.Net.HttpListenerRequest.Url%2A> or <xref:System.Net.HttpListenerRequest.UserHostAddress%2A> property).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f600b-184">Para definir essa propriedade para habilitar o Digest, NTLM ou Negotiate requer o <xref:System.Security.Permissions.SecurityPermission>, <xref:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal>.</span><span class="sxs-lookup"><span data-stu-id="f600b-184">To set this property to enable Digest, NTLM, or Negotiate requires the <xref:System.Security.Permissions.SecurityPermission>, <xref:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f600b-185">O exemplo de código a seguir define o valor dessa propriedade.</span><span class="sxs-lookup"><span data-stu-id="f600b-185">The following code example sets the value of this property.</span></span>  
  
 [!code-csharp[NclListener#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLListener/CS/sample.cs#2)]
 [!code-vb[NclListener#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLListener/vb/sample.vb#2)]  
  
 <span data-ttu-id="f600b-186">O exemplo de código a seguir fornece uma implementação de um método invocado por um <xref:System.Net.AuthenticationSchemeSelector> delegar.</span><span class="sxs-lookup"><span data-stu-id="f600b-186">The following code example provides an implementation of a method invoked by an <xref:System.Net.AuthenticationSchemeSelector> delegate.</span></span>  
  
 [!code-csharp[NclListener#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLListener/CS/sample.cs#1)]
 [!code-vb[NclListener#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLListener/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f600b-187">Este objeto foi fechado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-187">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginGetContext">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginGetContext (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginGetContext(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginGetContext (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginGetContext(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginGetContext : AsyncCallback * obj -&gt; IAsyncResult" Usage="httpListener.BeginGetContext (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="f600b-188">Um delegado <see cref="T:System.AsyncCallback" /> que faz referência ao método a ser invocado quando uma solicitação do cliente está disponível.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-188">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when a client request is available.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="f600b-189">Um objeto definido pelo usuário que contém informações sobre a operação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-189">A user-defined object that contains information about the operation.</span>
          </span>
          <span data-ttu-id="f600b-190">Este objeto é passado para o delegado <c>callback</c> quando a operação é concluída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-190">This object is passed to the <c>callback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f600b-191">Começa a recuperação assíncrona de uma solicitação de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-191">Begins asynchronously retrieving an incoming request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f600b-192">Um objeto <see cref="T:System.IAsyncResult" /> que indica o status da operação assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-192">An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f600b-193">O <xref:System.Net.HttpListener.BeginGetContext%2A> método começa uma chamada assíncrona (não bloqueadoras) para receber solicitações do cliente.</span><span class="sxs-lookup"><span data-stu-id="f600b-193">The <xref:System.Net.HttpListener.BeginGetContext%2A> method begins an asynchronous (non-blocking) call to receive incoming client requests.</span></span> <span data-ttu-id="f600b-194">Antes de chamar esse método, você deve chamar o <xref:System.Net.HttpListener.Start%2A> método e adicione pelo menos um prefixo do identificador de recurso uniforme (URI) para escutar, adicionando as cadeias de caracteres URI para o <xref:System.Net.HttpListenerPrefixCollection> retornado pela <xref:System.Net.HttpListener.Prefixes%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="f600b-194">Before calling this method, you must call the <xref:System.Net.HttpListener.Start%2A> method and add at least one Uniform Resource Identifier (URI) prefix to listen for by adding the URI strings to the <xref:System.Net.HttpListenerPrefixCollection> returned by the <xref:System.Net.HttpListener.Prefixes%2A> property.</span></span>  
  
 <span data-ttu-id="f600b-195">A operação assíncrona deve ser concluída chamando o <xref:System.Net.HttpListener.EndGetContext%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f600b-195">The asynchronous operation must be completed by calling the <xref:System.Net.HttpListener.EndGetContext%2A> method.</span></span> <span data-ttu-id="f600b-196">Normalmente, o método é invocado pelo `callback` delegar.</span><span class="sxs-lookup"><span data-stu-id="f600b-196">Typically, the method is invoked by the `callback` delegate.</span></span>  
  
 <span data-ttu-id="f600b-197">Esse método não bloqueia enquanto a operação é concluída.</span><span class="sxs-lookup"><span data-stu-id="f600b-197">This method does not block while the operation completes.</span></span> <span data-ttu-id="f600b-198">Para obter uma solicitação de entrada e de bloco até que a operação for concluída, chame o <xref:System.Net.HttpListener.GetContext%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f600b-198">To get an incoming request and block until the operation completes, call the <xref:System.Net.HttpListener.GetContext%2A> method.</span></span>  
  
 <span data-ttu-id="f600b-199">Para obter informações detalhadas sobre como usar o modelo de programação assíncrono, consulte [chamando métodos síncronos assincronamente](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="f600b-199">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f600b-200">O exemplo de código a seguir demonstra como usar o <xref:System.Net.HttpListener.BeginGetContext%2A> método para especificar um método de retorno de chamada que manipulará as solicitações de cliente.</span><span class="sxs-lookup"><span data-stu-id="f600b-200">The following code example demonstrates using the <xref:System.Net.HttpListener.BeginGetContext%2A> method to specify a callback method that will handle incoming client requests.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#12](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#12)]  
  
 <span data-ttu-id="f600b-201">O exemplo de código a seguir implementa um método de retorno de chamada.</span><span class="sxs-lookup"><span data-stu-id="f600b-201">The following code example implements a callback method.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#13](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.HttpListenerException">
          <span data-ttu-id="f600b-202">Falha em uma chamada de função do Win32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-202">A Win32 function call failed.</span>
          </span>
          <span data-ttu-id="f600b-203">Verifique a propriedade <see cref="P:System.Net.HttpListenerException.ErrorCode" /> da exceção para determinar a causa da exceção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-203">Check the exception's <see cref="P:System.Net.HttpListenerException.ErrorCode" /> property to determine the cause of the exception.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f600b-204">Esse objeto não foi iniciado ou está parado no momento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-204">This object has not been started or is currently stopped.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f600b-205">Este objeto está fechado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-205">This object is closed.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="f600b-206">
            <para>Esse membro emite informações de rastreamento, quando você habilita o rastreamento de rede em seu aplicativo. Para obter mais informações, consulte [rastreamento de rede no .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-206">
              <para>This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="httpListener.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f600b-207">Desliga o <see cref="T:System.Net.HttpListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-207">Shuts down the <see cref="T:System.Net.HttpListener" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f600b-208">Depois de chamar esse método, você não poderá mais usar o <xref:System.Net.HttpListener> objeto.</span><span class="sxs-lookup"><span data-stu-id="f600b-208">After calling this method, you can no longer use the <xref:System.Net.HttpListener> object.</span></span> <span data-ttu-id="f600b-209">Para pausar temporariamente um <xref:System.Net.HttpListener> do objeto, use o <xref:System.Net.HttpListener.Stop%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f600b-209">To temporarily pause an <xref:System.Net.HttpListener> object, use the <xref:System.Net.HttpListener.Stop%2A> method.</span></span>  
  
 <span data-ttu-id="f600b-210">Esse método desligado downs o <xref:System.Net.HttpListener> objeto sem processamento de solicitações em fila.</span><span class="sxs-lookup"><span data-stu-id="f600b-210">This method shut downs the <xref:System.Net.HttpListener> object without processing queued requests.</span></span> <span data-ttu-id="f600b-211">Solicitações pendentes de não conseguir concluir.</span><span class="sxs-lookup"><span data-stu-id="f600b-211">Any pending requests are unable to complete.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f600b-212">O exemplo de código a seguir demonstra como chamar esse método.</span><span class="sxs-lookup"><span data-stu-id="f600b-212">The following code example demonstrates calling this method.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="f600b-213">
            <para>Esse membro emite informações de rastreamento, quando você habilita o rastreamento de rede em seu aplicativo. Para obter mais informações, consulte [rastreamento de rede no .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-213">
              <para>This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DefaultServiceNames">
      <MemberSignature Language="C#" Value="public System.Security.Authentication.ExtendedProtection.ServiceNameCollection DefaultServiceNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Authentication.ExtendedProtection.ServiceNameCollection DefaultServiceNames" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.DefaultServiceNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultServiceNames As ServiceNameCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Authentication::ExtendedProtection::ServiceNameCollection ^ DefaultServiceNames { System::Security::Authentication::ExtendedProtection::ServiceNameCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultServiceNames : System.Security.Authentication.ExtendedProtection.ServiceNameCollection" Usage="System.Net.HttpListener.DefaultServiceNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.ExtendedProtection.ServiceNameCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f600b-214">Obtém uma lista padrão de SPNs (Nomes de Provedor de Serviço) conforme determinado pelos prefixos registrados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-214">Gets a default list of Service Provider Names (SPNs) as determined by registered prefixes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f600b-215">Um <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> que contém uma lista de SPNs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-215">A <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> that contains a list of SPNs.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f600b-216">O <xref:System.Net.HttpListener.DefaultServiceNames%2A> propriedade é usada com a autenticação integrada do Windows para fornecer proteção estendida.</span><span class="sxs-lookup"><span data-stu-id="f600b-216">The <xref:System.Net.HttpListener.DefaultServiceNames%2A> property is used with integrated Windows authentication to provide extended protection.</span></span> <span data-ttu-id="f600b-217">A lista de SPNs é inicializada a partir de <xref:System.Net.HttpListener.Prefixes%2A> propriedade quando acessado e desmarcada quando novos prefixos são adicionados ao <xref:System.Net.HttpListener.Prefixes%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="f600b-217">The list of SPNs is initialized from the <xref:System.Net.HttpListener.Prefixes%2A> property when accessed and cleared when new prefixes are added to the <xref:System.Net.HttpListener.Prefixes%2A> property.</span></span>  
  
 <span data-ttu-id="f600b-218">O <xref:System.Net.HttpListener.DefaultServiceNames%2A> propriedade será usada se um aplicativo não definir o <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames%2A> propriedade em sua política de proteção estendida.</span><span class="sxs-lookup"><span data-stu-id="f600b-218">The <xref:System.Net.HttpListener.DefaultServiceNames%2A> property is used if an application doesn't set the <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames%2A> property on its extended protection policy.</span></span>  
  
 <span data-ttu-id="f600b-219">O <xref:System.Security.Authentication.ExtendedProtection.ServiceNameCollection> que é recuperada com o <xref:System.Net.HttpListener.DefaultServiceNames%2A> propriedade é criada a partir de <xref:System.Net.HttpListener.Prefixes%2A> propriedade de acordo com as regras a seguir:</span><span class="sxs-lookup"><span data-stu-id="f600b-219">The <xref:System.Security.Authentication.ExtendedProtection.ServiceNameCollection> that is retrieved with the <xref:System.Net.HttpListener.DefaultServiceNames%2A> property is built from the <xref:System.Net.HttpListener.Prefixes%2A> property according to the following rules:</span></span>  
  
1.  <span data-ttu-id="f600b-220">Se o nome do host é "+", "*", ou um literal IPv4 ou IPv6 (equivalente a "\*", mas restrito a uma interface específica do local), o seguinte SPN é adicionado:</span><span class="sxs-lookup"><span data-stu-id="f600b-220">If the hostname is "+", "*", or an IPv4 or IPv6 literal (equivalent to "\*" but restricted to a specific local interface), the following SPN is added:</span></span>  
  
 <span data-ttu-id="f600b-221">`"HTTP/"` Além do nome de domínio totalmente qualificado do computador.</span><span class="sxs-lookup"><span data-stu-id="f600b-221">`"HTTP/"` plus the fully qualified domain name of the computer.</span></span>  
  
1.  <span data-ttu-id="f600b-222">Se o nome do host não contêm pontos (não há domínios ou subdomínios), é feita uma tentativa de resolver o nome de domínio totalmente qualificado usando o DNS (o mesmo comportamento usado pelo <xref:System.Net.HttpWebRequest>).</span><span class="sxs-lookup"><span data-stu-id="f600b-222">If the hostname contains no dots (no domains or subdomains), an attempt is made to resolve the fully-qualified domain name using DNS (the same behavior used by <xref:System.Net.HttpWebRequest>).</span></span> <span data-ttu-id="f600b-223">Se o nome de domínio totalmente qualificado pode ser resolvido, estes SPNs são adicionados:</span><span class="sxs-lookup"><span data-stu-id="f600b-223">If the fully-qualified domain name can be resolved, the following SPNs are added:</span></span>  
  
 <span data-ttu-id="f600b-224">`"HTTP/"` Além disso, o nome do host (o nome curto).</span><span class="sxs-lookup"><span data-stu-id="f600b-224">`"HTTP/"` plus the hostname (the short name).</span></span>  
  
 <span data-ttu-id="f600b-225">`"HTTP/"` Além do nome de domínio totalmente qualificado para o nome do host.</span><span class="sxs-lookup"><span data-stu-id="f600b-225">`"HTTP/"` plus the fully qualified domain name for the hostname.</span></span>  
  
1.  <span data-ttu-id="f600b-226">Se o nome do host contém pontos não (não há domínios ou subdomínios) e um nome de domínio totalmente qualificado não pode ser resolvido, o seguinte SPN é adicionado:</span><span class="sxs-lookup"><span data-stu-id="f600b-226">If the hostname contains not dots (no domains or subdomains) and a fully-qualified domain name can't be resolved, the following SPN is added:</span></span>  
  
 <span data-ttu-id="f600b-227">`"HTTP/"` Além disso, o nome do host.</span><span class="sxs-lookup"><span data-stu-id="f600b-227">`"HTTP/"` plus the hostname.</span></span>  
  
1.  <span data-ttu-id="f600b-228">Se o nome do host contiver pontos (domínios ou subdomínios), o seguinte SPN é adicionado:</span><span class="sxs-lookup"><span data-stu-id="f600b-228">If the hostname contains dots (domains or subdomains), the following SPN is added:</span></span>  
  
 <span data-ttu-id="f600b-229">`"HTTP/"` Além disso, o nome do host.</span><span class="sxs-lookup"><span data-stu-id="f600b-229">`"HTTP/"` plus the hostname.</span></span>  
  
 <span data-ttu-id="f600b-230">O <xref:System.Net.HttpListener.DefaultServiceNames%2A> propriedade pode ser usada por um aplicativo para analisar a lista de SPNs padrão que será usado para autenticação, se nenhuma lista personalizada é fornecida.</span><span class="sxs-lookup"><span data-stu-id="f600b-230">The <xref:System.Net.HttpListener.DefaultServiceNames%2A> property can be used by an application to review the list of default SPNs which will be used for authentication if no custom list is supplied.</span></span> <span data-ttu-id="f600b-231">Se forem necessários outros SPNs, um aplicativo pode adicioná-los usando um do <xref:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.Merge%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="f600b-231">If other SPNs are needed, an application can add them using one of the <xref:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.Merge%2A> methods.</span></span>  
  
 <span data-ttu-id="f600b-232">Não é seguro ao usar a proteção estendida para tomar decisões de política com base em URL solicitada, porque isso pode ser falsificado.</span><span class="sxs-lookup"><span data-stu-id="f600b-232">It is not safe when using extended protection to make policy decisions based on the requested URL, since this can be spoofed.</span></span> <span data-ttu-id="f600b-233">Em vez disso, os aplicativos devem depender de <xref:System.Net.HttpListenerRequest.LocalEndPoint%2A> ou <xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A> propriedades para tomar essas decisões de política.</span><span class="sxs-lookup"><span data-stu-id="f600b-233">Rather, applications should rely on the <xref:System.Net.HttpListenerRequest.LocalEndPoint%2A> or <xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A> properties to make such policy decisions.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />
        <altmember cref="T:System.Net.HttpListener.ExtendedProtectionSelector" />
        <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="EndGetContext">
      <MemberSignature Language="C#" Value="public System.Net.HttpListenerContext EndGetContext (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.HttpListenerContext EndGetContext(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndGetContext (asyncResult As IAsyncResult) As HttpListenerContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::HttpListenerContext ^ EndGetContext(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndGetContext : IAsyncResult -&gt; System.Net.HttpListenerContext" Usage="httpListener.EndGetContext asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpListenerContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="f600b-234">Um objeto <see cref="T:System.IAsyncResult" /> obtido quando a operação assíncrona foi iniciada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-234">An <see cref="T:System.IAsyncResult" /> object that was obtained when the asynchronous operation was started.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f600b-235">Conclui uma operação assíncrona para recuperar uma solicitação de cliente recebida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-235">Completes an asynchronous operation to retrieve an incoming client request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f600b-236">Um objeto <see cref="T:System.Net.HttpListenerContext" /> que representa a solicitação do cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-236">An <see cref="T:System.Net.HttpListenerContext" /> object that represents the client request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f600b-237">O <xref:System.Net.HttpListener.EndGetContext%2A> método é chamado, geralmente dentro de um método de retorno de chamada definida pelo aplicativo, invocado por um representante, para obter o <xref:System.Net.HttpListenerContext> objeto que contém a solicitação de entrada do cliente e sua resposta associada.</span><span class="sxs-lookup"><span data-stu-id="f600b-237">The <xref:System.Net.HttpListener.EndGetContext%2A> method is called, usually within an application-defined callback method invoked by a delegate, to obtain the <xref:System.Net.HttpListenerContext> object that contains an incoming client request and its associated response.</span></span> <span data-ttu-id="f600b-238">Esse método conclui uma operação iniciada anteriormente chamando o <xref:System.Net.HttpListener.BeginGetContext%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f600b-238">This method completes an operation previously started by calling the <xref:System.Net.HttpListener.BeginGetContext%2A> method.</span></span> <span data-ttu-id="f600b-239">Se a operação não foi concluída, esse método bloqueia até que ele faz.</span><span class="sxs-lookup"><span data-stu-id="f600b-239">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="f600b-240">Como chamar o <xref:System.Net.HttpListener.EndGetContext%2A> método requer que o <xref:System.Net.HttpListener> do objeto, esse objeto normalmente é passado para um método de retorno de chamada, usando o objeto de estado passado para o <xref:System.Net.HttpListener.BeginGetContext%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f600b-240">Because calling the <xref:System.Net.HttpListener.EndGetContext%2A> method requires the <xref:System.Net.HttpListener> object, this object is typically passed into a callback method by using the state object passed into the <xref:System.Net.HttpListener.BeginGetContext%2A> method.</span></span> <span data-ttu-id="f600b-241">Você pode obter esse objeto de estado usando o <xref:System.IAsyncResult.AsyncState%2A> propriedade do `asyncResult` objeto.</span><span class="sxs-lookup"><span data-stu-id="f600b-241">You can obtain this state object by using the <xref:System.IAsyncResult.AsyncState%2A> property of the `asyncResult` object.</span></span>  
  
 <span data-ttu-id="f600b-242">Para obter informações detalhadas sobre como usar o modelo de programação assíncrono, consulte [chamando métodos síncronos assincronamente](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="f600b-242">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f600b-243">O exemplo de código a seguir mostra a implementação de um método de retorno de chamada que chama o <xref:System.Net.HttpListener.EndGetContext%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f600b-243">The following code example shows the implementation of a callback method that calls the <xref:System.Net.HttpListener.EndGetContext%2A> method.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#13](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f600b-244">
            <paramref name="asyncResult" /> não foi obtido ao chamar o método <see cref="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-244">
              <paramref name="asyncResult" /> was not obtained by calling the <see cref="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f600b-245">
            <paramref name="asyncResult" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-245">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f600b-246">O método <see cref="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)" /> já foi chamado para o objeto <paramref name="asyncResult" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-246">The <see cref="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)" /> method was already called for the specified <paramref name="asyncResult" /> object.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f600b-247">Este objeto está fechado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-247">This object is closed.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="f600b-248">
            <para>Esse membro emite informações de rastreamento, quando você habilita o rastreamento de rede em seu aplicativo. Para obter mais informações, consulte [rastreamento de rede no .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-248">
              <para>This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ExtendedProtectionPolicy">
      <MemberSignature Language="C#" Value="public System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy ExtendedProtectionPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy ExtendedProtectionPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.ExtendedProtectionPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property ExtendedProtectionPolicy As ExtendedProtectionPolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ ExtendedProtectionPolicy { System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ get(); void set(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ExtendedProtectionPolicy : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy with get, set" Usage="System.Net.HttpListener.ExtendedProtectionPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("not used anywhere in the implementation")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f600b-249">Obtém ou define o <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> a ser usado para proteção estendida para uma sessão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-249">Get or set the <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> to use for extended protection for a session.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f600b-250">Um <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> que especifica a política a ser usada para proteção estendida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-250">A <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that specifies the policy to use for extended protection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f600b-251">O <xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> propriedade é usada com a autenticação integrada do Windows para fornecer proteção estendida.</span><span class="sxs-lookup"><span data-stu-id="f600b-251">The <xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> property is used with integrated Windows authentication to provide extended protection.</span></span> <span data-ttu-id="f600b-252">O <xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> propriedade permite que a configuração de política de proteção estendida para todo o <xref:System.Net.HttpListener> sessão.</span><span class="sxs-lookup"><span data-stu-id="f600b-252">The <xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> property allows the configuration of the extended protection policy for the whole <xref:System.Net.HttpListener> session.</span></span> <span data-ttu-id="f600b-253">O <xref:System.Net.HttpListener.ExtendedProtectionSelectorDelegate%2A> propriedade permite que a configuração de política de proteção estendida para cada solicitação individual.</span><span class="sxs-lookup"><span data-stu-id="f600b-253">The <xref:System.Net.HttpListener.ExtendedProtectionSelectorDelegate%2A> property allows the configuration of the extended protection policy for each individual request.</span></span>  
  
 <span data-ttu-id="f600b-254">A propriedade <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding%2A> deve ser `null`.</span><span class="sxs-lookup"><span data-stu-id="f600b-254">The <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding%2A> property must be `null`.</span></span> <span data-ttu-id="f600b-255">O <xref:System.Net.HttpListener> instância obtém o canal de associação de Token (CBT) diretamente da sua própria sessão TLS, se houver um.</span><span class="sxs-lookup"><span data-stu-id="f600b-255">The <xref:System.Net.HttpListener> instance gets the Channel Binding Token (CBT) directly from its own TLS session if there is one.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f600b-256">Foi feita uma tentativa de definir a propriedade <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" />, porém a propriedade <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> não era <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-256">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> property, but the <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> property was not <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f600b-257">Foi feita uma tentativa de definir a propriedade <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> como <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-257">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> property to <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f600b-258">Foi feita uma tentativa de definir a propriedade <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> após o método <see cref="M:System.Net.HttpListener.Start" /> já ter sido chamado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-258">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> property after the <see cref="M:System.Net.HttpListener.Start" /> method was already called.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f600b-259">Este objeto está fechado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-259">This object is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="f600b-260">A propriedade <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement" /> foi definida como <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> em uma plataforma que não dá suporte à proteção estendida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-260">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement" /> property was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="P:System.Net.HttpListener.DefaultServiceNames" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />
        <altmember cref="T:System.Net.HttpListener.ExtendedProtectionSelector" />
        <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="ExtendedProtectionSelectorDelegate">
      <MemberSignature Language="C#" Value="public System.Net.HttpListener.ExtendedProtectionSelector ExtendedProtectionSelectorDelegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.HttpListener/ExtendedProtectionSelector ExtendedProtectionSelectorDelegate" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />
      <MemberSignature Language="VB.NET" Value="Public Property ExtendedProtectionSelectorDelegate As HttpListener.ExtendedProtectionSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::HttpListener::ExtendedProtectionSelector ^ ExtendedProtectionSelectorDelegate { System::Net::HttpListener::ExtendedProtectionSelector ^ get(); void set(System::Net::HttpListener::ExtendedProtectionSelector ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ExtendedProtectionSelectorDelegate : System.Net.HttpListener.ExtendedProtectionSelector with get, set" Usage="System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.HttpListener+ExtendedProtectionSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f600b-261">Obtém ou define o delegado chamado para determinar o <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> a usar para cada solicitação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-261">Get or set the delegate called to determine the <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> to use for each request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f600b-262">Um <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> que especifica a política a ser usada para proteção estendida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-262">A <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that specifies the policy to use for extended protection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f600b-263">O <xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> propriedade é usada com a autenticação integrada do Windows para fornecer proteção estendida.</span><span class="sxs-lookup"><span data-stu-id="f600b-263">The <xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> property is used with integrated Windows authentication to provide extended protection.</span></span> <span data-ttu-id="f600b-264">O <xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> propriedade permite que a configuração de política de proteção estendida para todo o <xref:System.Net.HttpListener> sessão.</span><span class="sxs-lookup"><span data-stu-id="f600b-264">The <xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> property allows the configuration of the extended protection policy for the whole <xref:System.Net.HttpListener> session.</span></span> <span data-ttu-id="f600b-265">O <xref:System.Net.HttpListener.ExtendedProtectionSelectorDelegate%2A> propriedade permite que a configuração de política de proteção estendida por solicitação individual.</span><span class="sxs-lookup"><span data-stu-id="f600b-265">The <xref:System.Net.HttpListener.ExtendedProtectionSelectorDelegate%2A> property allows the configuration of the extended protection policy per individual request.</span></span>  
  
 <span data-ttu-id="f600b-266">A propriedade <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding%2A> deve ser `null`.</span><span class="sxs-lookup"><span data-stu-id="f600b-266">The <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding%2A> property must be `null`.</span></span> <span data-ttu-id="f600b-267">O <xref:System.Net.HttpListener> instância obtém o canal de associação de Token (CBT) diretamente da sua própria sessão TLS, se houver um.</span><span class="sxs-lookup"><span data-stu-id="f600b-267">The <xref:System.Net.HttpListener> instance gets the Channel Binding Token (CBT) directly from its own TLS session if there is one.</span></span>  
  
 <span data-ttu-id="f600b-268">Para cada solicitação, o delegado pode escolher as configurações que o <xref:System.Net.HttpListener> instância usará para fornecer proteção estendida.</span><span class="sxs-lookup"><span data-stu-id="f600b-268">For each request, the delegate can choose the settings that the <xref:System.Net.HttpListener> instance will use to provide extended protection.</span></span>  
  
 <span data-ttu-id="f600b-269">Se retornar um delegado `null` para essa propriedade, isso representa uma <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy> que o <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> propriedade definida como <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span><span class="sxs-lookup"><span data-stu-id="f600b-269">If a delegate returns `null` for this property, this represents a <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy> which the <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> property set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f600b-270">Foi feita uma tentativa de definir a propriedade <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />, porém a propriedade <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> deve ser <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-270">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> property, but the <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> property must be <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f600b-271">Foi feita uma tentativa de definir a propriedade <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> como <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-271">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> property to <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f600b-272">Foi feita uma tentativa de definir a propriedade <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> após o método <see cref="M:System.Net.HttpListener.Start" /> já ter sido chamado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-272">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> property after the <see cref="M:System.Net.HttpListener.Start" /> method was already called.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f600b-273">Este objeto está fechado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-273">This object is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="f600b-274">Foi feita uma tentativa de definir a propriedade <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> em uma plataforma que não dá suporte a proteção estendida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-274">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> property on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="P:System.Net.HttpListener.DefaultServiceNames" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" />
        <altmember cref="T:System.Net.HttpListener.ExtendedProtectionSelector" />
        <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="GetContext">
      <MemberSignature Language="C#" Value="public System.Net.HttpListenerContext GetContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.HttpListenerContext GetContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.GetContext" />
      <MemberSignature Language="VB.NET" Value="Public Function GetContext () As HttpListenerContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::HttpListenerContext ^ GetContext();" />
      <MemberSignature Language="F#" Value="member this.GetContext : unit -&gt; System.Net.HttpListenerContext" Usage="httpListener.GetContext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpListenerContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f600b-275">Aguarda uma solicitação de entrada e a retorna quando recebida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-275">Waits for an incoming request and returns when one is received.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f600b-276">Um objeto <see cref="T:System.Net.HttpListenerContext" /> que representa uma solicitação do cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-276">An <see cref="T:System.Net.HttpListenerContext" /> object that represents a client request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f600b-277">Antes de chamar esse método, você deve chamar o <xref:System.Net.HttpListener.Start%2A> método e adicione pelo menos um prefixo URI para escutar, adicionando as cadeias de caracteres URI para o <xref:System.Net.HttpListenerPrefixCollection> retornado pela <xref:System.Net.HttpListener.Prefixes%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="f600b-277">Before calling this method, you must call the <xref:System.Net.HttpListener.Start%2A> method and add at least one URI prefix to listen for by adding the URI strings to the <xref:System.Net.HttpListenerPrefixCollection> returned by the <xref:System.Net.HttpListener.Prefixes%2A> property.</span></span> <span data-ttu-id="f600b-278">Para obter uma descrição detalhada de prefixos, consulte o <xref:System.Net.HttpListener> visão geral da classe.</span><span class="sxs-lookup"><span data-stu-id="f600b-278">For a detailed description of prefixes, see the <xref:System.Net.HttpListener> class overview.</span></span>  
  
 <span data-ttu-id="f600b-279">Bloqueia esse método enquanto aguarda uma solicitação de entrada.</span><span class="sxs-lookup"><span data-stu-id="f600b-279">This method blocks while waiting for an incoming request.</span></span> <span data-ttu-id="f600b-280">Se você quiser que as solicitações de entrada a serem processadas assincronamente (em threads separados) para que seu aplicativo não bloqueia, use o <xref:System.Net.HttpListener.BeginGetContext%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f600b-280">If you want incoming requests to be processed asynchronously (on separate threads) so that your application does not block, use the <xref:System.Net.HttpListener.BeginGetContext%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f600b-281">O exemplo de código a seguir demonstra como chamar esse método.</span><span class="sxs-lookup"><span data-stu-id="f600b-281">The following code example demonstrates calling this method.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.HttpListenerException">
          <span data-ttu-id="f600b-282">Falha em uma chamada de função do Win32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-282">A Win32 function call failed.</span>
          </span>
          <span data-ttu-id="f600b-283">Verifique a propriedade <see cref="P:System.Net.HttpListenerException.ErrorCode" /> da exceção para determinar a causa da exceção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-283">Check the exception's <see cref="P:System.Net.HttpListenerException.ErrorCode" /> property to determine the cause of the exception.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f600b-284">Esse objeto não foi iniciado ou está parado no momento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-284">This object has not been started or is currently stopped.</span>
          </span>
          <span data-ttu-id="f600b-285">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-285">-or-</span>
          </span>
          <span data-ttu-id="f600b-286">O <see cref="T:System.Net.HttpListener" /> não tem nenhum prefixo URI (Uniform Resource Identifier) ao qual responder.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-286">The <see cref="T:System.Net.HttpListener" /> does not have any Uniform Resource Identifier (URI) prefixes to respond to.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f600b-287">Este objeto está fechado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-287">This object is closed.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="f600b-288">
            <para>Esse membro emite informações de rastreamento, quando você habilita o rastreamento de rede em seu aplicativo. Para obter mais informações, consulte [rastreamento de rede no .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-288">
              <para>This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetContextAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.HttpListenerContext&gt; GetContextAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.HttpListenerContext&gt; GetContextAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.GetContextAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function GetContextAsync () As Task(Of HttpListenerContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::HttpListenerContext ^&gt; ^ GetContextAsync();" />
      <MemberSignature Language="F#" Value="member this.GetContextAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Net.HttpListenerContext&gt;" Usage="httpListener.GetContextAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.HttpListenerContext&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f600b-289">Aguarda uma solicitação de entrada como uma operação assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-289">Waits for an incoming request as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f600b-290">Retorna <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-290">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
          <span data-ttu-id="f600b-291">O objeto de tarefa que representa a operação assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-291">The task object representing the asynchronous operation.</span>
          </span>
          <span data-ttu-id="f600b-292">A propriedade <see cref="P:System.Threading.Tasks.Task`1.Result" /> no objeto da tarefa retorna um objeto <see cref="T:System.Net.HttpListenerContext" /> que representa uma solicitação do cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-292">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns an <see cref="T:System.Net.HttpListenerContext" /> object that represents a client request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f600b-293">Essa operação não será bloqueada.</span><span class="sxs-lookup"><span data-stu-id="f600b-293">This operation will not block.</span></span> <span data-ttu-id="f600b-294">Retornado <xref:System.Threading.Tasks.Task%601> objeto será concluída quando a solicitação de entrada foi recebida.</span><span class="sxs-lookup"><span data-stu-id="f600b-294">The returned <xref:System.Threading.Tasks.Task%601> object will complete when the incoming request has been received.</span></span>  
  
 <span data-ttu-id="f600b-295">Antes de chamar esse método, você deve chamar o <xref:System.Net.HttpListener.Start%2A> método e adicione pelo menos um prefixo URI para escutar, adicionando as cadeias de caracteres URI para o <xref:System.Net.HttpListenerPrefixCollection> retornado pela <xref:System.Net.HttpListener.Prefixes%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="f600b-295">Before calling this method, you must call the <xref:System.Net.HttpListener.Start%2A> method and add at least one URI prefix to listen for by adding the URI strings to the <xref:System.Net.HttpListenerPrefixCollection> returned by the <xref:System.Net.HttpListener.Prefixes%2A> property.</span></span> <span data-ttu-id="f600b-296">Para obter uma descrição detalhada de prefixos, consulte o <xref:System.Net.HttpListener> visão geral da classe.</span><span class="sxs-lookup"><span data-stu-id="f600b-296">For a detailed description of prefixes, see the <xref:System.Net.HttpListener> class overview.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListenerContext" />
      </Docs>
    </Member>
    <Member MemberName="IgnoreWriteExceptions">
      <MemberSignature Language="C#" Value="public bool IgnoreWriteExceptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreWriteExceptions" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.IgnoreWriteExceptions" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreWriteExceptions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreWriteExceptions { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreWriteExceptions : bool with get, set" Usage="System.Net.HttpListener.IgnoreWriteExceptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f600b-297">Obtém ou define um valor de <see cref="T:System.Boolean" /> que especifica se o aplicativo recebe exceções que ocorrem quando um <see cref="T:System.Net.HttpListener" /> envia a resposta ao cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-297">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether your application receives exceptions that occur when an <see cref="T:System.Net.HttpListener" /> sends the response to the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f600b-298">
            <see langword="true" /> Se este <see cref="T:System.Net.HttpListener" /> não deve retornar as exceções que ocorrem ao enviar a resposta para o cliente; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-298">
              <see langword="true" /> if this <see cref="T:System.Net.HttpListener" /> should not return exceptions that occur when sending the response to the client; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f600b-299">O valor padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-299">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f600b-300">Defina essa propriedade como `true` se seu aplicativo não requer que uma resposta é enviada com êxito para cada cliente.</span><span class="sxs-lookup"><span data-stu-id="f600b-300">Set this property to `true` if your application does not require that a response is successfully sent to each client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f600b-301">O exemplo de código a seguir demonstra como definir essa propriedade.</span><span class="sxs-lookup"><span data-stu-id="f600b-301">The following code example demonstrates setting this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#14](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f600b-302">Este objeto foi fechado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-302">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsListening">
      <MemberSignature Language="C#" Value="public bool IsListening { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsListening" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.IsListening" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsListening As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsListening { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsListening : bool" Usage="System.Net.HttpListener.IsListening" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f600b-303">Obtém um valor que indica se o <see cref="T:System.Net.HttpListener" /> tiver sido iniciado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-303">Gets a value that indicates whether <see cref="T:System.Net.HttpListener" /> has been started.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f600b-304">
            <see langword="true" /> se o <see cref="T:System.Net.HttpListener" /> tiver sido iniciado; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-304">
              <see langword="true" /> if the <see cref="T:System.Net.HttpListener" /> was started; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f600b-305">Para iniciar um <xref:System.Net.HttpListener>, chame o <xref:System.Net.HttpListener.Start%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f600b-305">To start an <xref:System.Net.HttpListener>, call the <xref:System.Net.HttpListener.Start%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f600b-306">O exemplo de código a seguir demonstra como usar essa propriedade para determinar o estado de escuta de uma instância.</span><span class="sxs-lookup"><span data-stu-id="f600b-306">The following code example demonstrates using this property to determine the listening state of an instance.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSupported">
      <MemberSignature Language="C#" Value="public static bool IsSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsSupported" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.IsSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsSupported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsSupported { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSupported : bool" Usage="System.Net.HttpListener.IsSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f600b-307">Obtém um valor que indica se <see cref="T:System.Net.HttpListener" /> pode ser usado com o sistema operacional atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-307">Gets a value that indicates whether <see cref="T:System.Net.HttpListener" /> can be used with the current operating system.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f600b-308">
            <see langword="true" /> se há suporte para <see cref="T:System.Net.HttpListener" />; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-308">
              <see langword="true" /> if <see cref="T:System.Net.HttpListener" /> is supported; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f600b-309">Essa classe está disponível somente em computadores que executam os sistemas operacionais Windows XP SP2 ou Windows Server 2003.</span><span class="sxs-lookup"><span data-stu-id="f600b-309">This class is available only on computers running the Windows XP SP2 or Windows Server 2003 operating systems.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f600b-310">O exemplo de código a seguir demonstra o uso do <xref:System.Net.HttpListener.IsSupported%2A> propriedade para detectar se um <xref:System.Net.HttpListener> objeto pode ser usado com o sistema operacional atual.</span><span class="sxs-lookup"><span data-stu-id="f600b-310">The following code example demonstrates the use of the <xref:System.Net.HttpListener.IsSupported%2A> property to detect whether an <xref:System.Net.HttpListener> object can be used with the current operating system.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prefixes">
      <MemberSignature Language="C#" Value="public System.Net.HttpListenerPrefixCollection Prefixes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.HttpListenerPrefixCollection Prefixes" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.Prefixes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Prefixes As HttpListenerPrefixCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::HttpListenerPrefixCollection ^ Prefixes { System::Net::HttpListenerPrefixCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Prefixes : System.Net.HttpListenerPrefixCollection" Usage="System.Net.HttpListener.Prefixes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpListenerPrefixCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f600b-311">Obtém os prefixos de URI (Uniform Resource Identifier) manipulados por este objeto <see cref="T:System.Net.HttpListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-311">Gets the Uniform Resource Identifier (URI) prefixes handled by this <see cref="T:System.Net.HttpListener" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f600b-312">Um <see cref="T:System.Net.HttpListenerPrefixCollection" /> que contém os prefixos de URI que este objeto <see cref="T:System.Net.HttpListener" /> está configurado para manipular.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-312">An <see cref="T:System.Net.HttpListenerPrefixCollection" /> that contains the URI prefixes that this <see cref="T:System.Net.HttpListener" /> object is configured to handle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f600b-313">Os prefixos são em forma canônica.</span><span class="sxs-lookup"><span data-stu-id="f600b-313">The prefixes are in canonical form.</span></span> <span data-ttu-id="f600b-314">Para obter uma descrição detalhada de prefixos, consulte o <xref:System.Net.HttpListener> visão geral da classe.</span><span class="sxs-lookup"><span data-stu-id="f600b-314">For a detailed description of prefixes, see the <xref:System.Net.HttpListener> class overview.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f600b-315">O exemplo de código a seguir demonstra como usar o <xref:System.Net.HttpListener.Prefixes%2A> propriedade para obter e imprimir os prefixos URI são manipulados.</span><span class="sxs-lookup"><span data-stu-id="f600b-315">The following code example demonstrates using the <xref:System.Net.HttpListener.Prefixes%2A> property to obtain and print the URI prefixes that are handled.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f600b-316">Este objeto foi fechado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-316">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Realm">
      <MemberSignature Language="C#" Value="public string Realm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Realm" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.Realm" />
      <MemberSignature Language="VB.NET" Value="Public Property Realm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Realm { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Realm : string with get, set" Usage="System.Net.HttpListener.Realm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f600b-317">Obtém ou define o realm, ou partição de recurso, associado a esse objeto <see cref="T:System.Net.HttpListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-317">Gets or sets the realm, or resource partition, associated with this <see cref="T:System.Net.HttpListener" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f600b-318">Um valor <see cref="T:System.String" /> que contém o nome do realm associado ao objeto <see cref="T:System.Net.HttpListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-318">A <see cref="T:System.String" /> value that contains the name of the realm associated with the <see cref="T:System.Net.HttpListener" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f600b-319">Os servidores usam realms para dividir os recursos protegidos; cada partição pode ter seu próprio banco de dados de esquema e/ou autorização de autenticação.</span><span class="sxs-lookup"><span data-stu-id="f600b-319">Servers use realms to partition protected resources; each partition can have its own authentication scheme and/or authorization database.</span></span> <span data-ttu-id="f600b-320">Realms são usados somente para basic e autenticação digest.</span><span class="sxs-lookup"><span data-stu-id="f600b-320">Realms are used only for basic and digest authentication.</span></span> <span data-ttu-id="f600b-321">Depois que um cliente é autenticado com êxito, a autenticação é válida para todos os recursos de um determinado território.</span><span class="sxs-lookup"><span data-stu-id="f600b-321">After a client successfully authenticates, the authentication is valid for all resources in a given realm.</span></span> <span data-ttu-id="f600b-322">Para obter uma descrição detalhada de territórios, consulte RFC 2617 no [ https://www.ietf.org/ ](https://www.ietf.org/).</span><span class="sxs-lookup"><span data-stu-id="f600b-322">For a detailed description of realms, see RFC 2617 at [https://www.ietf.org/](https://www.ietf.org/).</span></span>  
  
 <span data-ttu-id="f600b-323">Uma instância de <xref:System.Net.HttpListener> tem apenas um realm associado.</span><span class="sxs-lookup"><span data-stu-id="f600b-323">An instance of <xref:System.Net.HttpListener> has only one associated realm.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f600b-324">O exemplo de código a seguir demonstra a configuração de <xref:System.Net.HttpListener.Realm%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="f600b-324">The following code example demonstrates setting the <xref:System.Net.HttpListener.Realm%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#10](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f600b-325">Este objeto foi fechado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-325">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="httpListener.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f600b-326">Permite que essa instância receba solicitações de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-326">Allows this instance to receive incoming requests.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f600b-327">Esse método deve ser chamado antes de chamar o <xref:System.Net.HttpListener.GetContext%2A> ou <xref:System.Net.HttpListener.BeginGetContext%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f600b-327">This method must be called before you call the <xref:System.Net.HttpListener.GetContext%2A> or <xref:System.Net.HttpListener.BeginGetContext%2A> method.</span></span>  
  
 <span data-ttu-id="f600b-328">Depois de iniciar um <xref:System.Net.HttpListener> objeto, você pode usar o <xref:System.Net.HttpListener.Stop%2A> método interrompê-lo.</span><span class="sxs-lookup"><span data-stu-id="f600b-328">After you have started an <xref:System.Net.HttpListener> object, you can use the <xref:System.Net.HttpListener.Stop%2A> method to stop it.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f600b-329">Se esta instância de ouvinte usa https, você deve instalar e selecionar um certificado de servidor.</span><span class="sxs-lookup"><span data-stu-id="f600b-329">If this listener instance uses https, you must install and select a Server Certificate.</span></span> <span data-ttu-id="f600b-330">Caso contrário, uma <xref:System.Net.HttpWebRequest> consulta deste <xref:System.Net.HttpListener> falhará com um fechamento inesperado da conexão.</span><span class="sxs-lookup"><span data-stu-id="f600b-330">Otherwise, an <xref:System.Net.HttpWebRequest> query of this <xref:System.Net.HttpListener> will fail with an unexpected close of the connection.</span></span> <span data-ttu-id="f600b-331">Você pode configurar certificados de servidor e outras opções de ouvinte usando HttpCfg.exe.</span><span class="sxs-lookup"><span data-stu-id="f600b-331">You can configure Server Certificates and other listener options by using HttpCfg.exe.</span></span> <span data-ttu-id="f600b-332">Ver [ http://msdn.microsoft.com/library/default.asp?url=/library/http/http/httpcfg_exe.asp ](http://msdn.microsoft.com/library/default.asp?url=/library/http/http/httpcfg_exe.asp) para obter mais detalhes.</span><span class="sxs-lookup"><span data-stu-id="f600b-332">See [http://msdn.microsoft.com/library/default.asp?url=/library/http/http/httpcfg_exe.asp](http://msdn.microsoft.com/library/default.asp?url=/library/http/http/httpcfg_exe.asp) for more details.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f600b-333">O exemplo de código a seguir demonstra como usar o <xref:System.Net.HttpListener.Start%2A> método para começar a processar as solicitações de entrada.</span><span class="sxs-lookup"><span data-stu-id="f600b-333">The following code example demonstrates using the <xref:System.Net.HttpListener.Start%2A> method to begin processing incoming requests.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#12](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.HttpListenerException">
          <span data-ttu-id="f600b-334">Falha em uma chamada de função do Win32.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-334">A Win32 function call failed.</span>
          </span>
          <span data-ttu-id="f600b-335">Verifique a propriedade <see cref="P:System.Net.HttpListenerException.ErrorCode" /> da exceção para determinar a causa da exceção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-335">Check the exception's <see cref="P:System.Net.HttpListenerException.ErrorCode" /> property to determine the cause of the exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f600b-336">Este objeto está fechado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-336">This object is closed.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="f600b-337">
            <para>Esse membro emite informações de rastreamento, quando você habilita o rastreamento de rede em seu aplicativo. Para obter mais informações, consulte [rastreamento de rede no .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-337">
              <para>This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="httpListener.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f600b-338">Faz com que essa instância interrompa o recebimento de solicitações de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-338">Causes this instance to stop receiving incoming requests.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f600b-339">Se esta instância já for interrompida, chamar este método não tem nenhum efeito.</span><span class="sxs-lookup"><span data-stu-id="f600b-339">If this instance is already stopped, calling this method has no effect.</span></span>  
  
 <span data-ttu-id="f600b-340">Depois de interromper uma <xref:System.Net.HttpListener> objeto, você pode usar o <xref:System.Net.HttpListener.Start%2A> método reiniciá-lo.</span><span class="sxs-lookup"><span data-stu-id="f600b-340">After you have stopped an <xref:System.Net.HttpListener> object, you can use the <xref:System.Net.HttpListener.Start%2A> method to restart it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f600b-341">O exemplo de código a seguir demonstra como usar o <xref:System.Net.HttpListener.Stop%2A> método para parar o processamento de solicitações de entrada.</span><span class="sxs-lookup"><span data-stu-id="f600b-341">The following code example demonstrates using the <xref:System.Net.HttpListener.Stop%2A> method to stop processing incoming requests.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#12](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f600b-342">Este objeto foi fechado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-342">This object has been closed.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="f600b-343">
            <para>Esse membro emite informações de rastreamento, quando você habilita o rastreamento de rede em seu aplicativo. Para obter mais informações, consulte [rastreamento de rede no .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-343">
              <para>This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f600b-344">Libera os recursos mantidos por esse objeto <see cref="T:System.Net.HttpListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-344">Releases the resources held by this <see cref="T:System.Net.HttpListener" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f600b-345">Os aplicativos devem usar o <xref:System.Net.HttpListener.Close%2A> método em vez de chamar esse método.</span><span class="sxs-lookup"><span data-stu-id="f600b-345">Applications should use the <xref:System.Net.HttpListener.Close%2A> method instead of calling this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeoutManager">
      <MemberSignature Language="C#" Value="public System.Net.HttpListenerTimeoutManager TimeoutManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.HttpListenerTimeoutManager TimeoutManager" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.TimeoutManager" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeoutManager As HttpListenerTimeoutManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::HttpListenerTimeoutManager ^ TimeoutManager { System::Net::HttpListenerTimeoutManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TimeoutManager : System.Net.HttpListenerTimeoutManager" Usage="System.Net.HttpListener.TimeoutManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.HttpListenerTimeoutManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f600b-346">O gerenciador de tempo limite para esta instância do <see cref="T:System.Net.HttpListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-346">The timeout manager for this <see cref="T:System.Net.HttpListener" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f600b-347">Retorna <see cref="T:System.Net.HttpListenerTimeoutManager" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-347">Returns <see cref="T:System.Net.HttpListenerTimeoutManager" />.</span>
          </span>
          <span data-ttu-id="f600b-348">O gerenciador de tempo limite para esta instância do <see cref="T:System.Net.HttpListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-348">The timeout manager for this <see cref="T:System.Net.HttpListener" /> instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f600b-349">O Gerenciador de tempo limite define os limites de tempo limite de conexão para este <xref:System.Net.HttpListener> instância.</span><span class="sxs-lookup"><span data-stu-id="f600b-349">The timeout manager defines the connection timeout limits for this <xref:System.Net.HttpListener> instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnsafeConnectionNtlmAuthentication">
      <MemberSignature Language="C#" Value="public bool UnsafeConnectionNtlmAuthentication { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UnsafeConnectionNtlmAuthentication" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication" />
      <MemberSignature Language="VB.NET" Value="Public Property UnsafeConnectionNtlmAuthentication As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UnsafeConnectionNtlmAuthentication { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UnsafeConnectionNtlmAuthentication : bool with get, set" Usage="System.Net.HttpListener.UnsafeConnectionNtlmAuthentication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Support for NTLM needs some loving.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f600b-350">Obtém ou define um valor <see cref="T:System.Boolean" /> que controla se, ao usar o NTLM, solicitações adicionais usando a mesma conexão por protocolo TCP são ou não necessárias para autenticação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-350">Gets or sets a <see cref="T:System.Boolean" /> value that controls whether, when NTLM is used, additional requests using the same Transmission Control Protocol (TCP) connection are required to authenticate.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f600b-351">
            <see langword="true" /> Se o <see cref="T:System.Security.Principal.IIdentity" /> da primeira solicitação será usada para solicitações subsequentes em que a mesma conexão; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-351">
              <see langword="true" /> if the <see cref="T:System.Security.Principal.IIdentity" /> of the first request will be used for subsequent requests on the same connection; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f600b-352">O valor padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-352">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f600b-353">Quando essa propriedade é definida como `true` e a primeira solicitação ao longo de uma conexão TCP específico é autenticada usando NTLM, as solicitações subsequentes sobre a mesma conexão TCP são processadas usando as informações de autenticação (<xref:System.Security.Principal.IIdentity>) do inicial solicitação.</span><span class="sxs-lookup"><span data-stu-id="f600b-353">When this property is set to `true` and the first request over a particular TCP connection is authenticated using NTLM, subsequent requests over the same TCP connection are processed using the authentication information (<xref:System.Security.Principal.IIdentity>) of the initial request.</span></span>  
  
 <span data-ttu-id="f600b-354">Essa propriedade não tem efeito quando o NTLM não é o protocolo de autenticação.</span><span class="sxs-lookup"><span data-stu-id="f600b-354">This property has no effect when NTLM is not the authentication protocol.</span></span> <span data-ttu-id="f600b-355">Quando a negociação é especificada como o protocolo de autenticação, essa propriedade tem um efeito apenas se o NTLM é o protocolo real usado para autenticação.</span><span class="sxs-lookup"><span data-stu-id="f600b-355">When Negotiate is specified as the authentication protocol, this property has an effect only if NTLM is the actual protocol used for authentication.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f600b-356">Ao definir essa propriedade como `true` aumenta o desempenho porque o <xref:System.Net.HttpListener> não não envio adicionais NTLM desafios de autenticação, há um risco à segurança em não exigir que todas as solicitações para fornecer informações de autenticação.</span><span class="sxs-lookup"><span data-stu-id="f600b-356">While setting this property to `true` increases performance because the <xref:System.Net.HttpListener> does not send additional NTLM authentication challenges, there is a security risk in not requiring all requests to provide authentication information.</span></span> <span data-ttu-id="f600b-357">Você deve determinar se o aumento no desempenho é que vale a pena esse risco.</span><span class="sxs-lookup"><span data-stu-id="f600b-357">You must determine whether the increase in performance is worth this risk.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f600b-358">O exemplo de código a seguir demonstra como definir essa propriedade.</span><span class="sxs-lookup"><span data-stu-id="f600b-358">The following code example demonstrates setting this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#14](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f600b-359">Este objeto foi fechado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f600b-359">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>