<Type Name="HttpListenerPrefixCollection" FullName="System.Net.HttpListenerPrefixCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f36bcfbf472e41df45cf44d598cdba131b5c6eb0" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37475977" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HttpListenerPrefixCollection : System.Collections.Generic.ICollection&lt;string&gt;, System.Collections.Generic.IEnumerable&lt;string&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpListenerPrefixCollection extends System.Object implements class System.Collections.Generic.ICollection`1&lt;string&gt;, class System.Collections.Generic.IEnumerable`1&lt;string&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Net.HttpListenerPrefixCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpListenerPrefixCollection&#xA;Implements ICollection(Of String), IEnumerable(Of String)" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpListenerPrefixCollection : System::Collections::Generic::ICollection&lt;System::String ^&gt;, System::Collections::Generic::IEnumerable&lt;System::String ^&gt;" />
  <TypeSignature Language="F#" Value="type HttpListenerPrefixCollection = class&#xA;    interface ICollection&lt;string&gt;&#xA;    interface seq&lt;string&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.HttpListener</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.String&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.String&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="7df51-101">Represents the collection used to store Uniform Resource Identifier (URI) prefixes for <see cref="T:System.Net.HttpListener" /> objects.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7df51-101">Represents the collection used to store Uniform Resource Identifier (URI) prefixes for <see cref="T:System.Net.HttpListener" /> objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7df51-102">O <xref:System.Net.HttpListener.Prefixes%2A> propriedade retorna instâncias desta coleção.</span><span class="sxs-lookup"><span data-stu-id="7df51-102">The <xref:System.Net.HttpListener.Prefixes%2A> property returns instances of this collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7df51-103">O exemplo de código a seguir cria uma <xref:System.Net.HttpListener> e adiciona os prefixos especificado pelo usuário para seu <xref:System.Net.HttpListenerPrefixCollection>.</span><span class="sxs-lookup"><span data-stu-id="7df51-103">The following code example creates an <xref:System.Net.HttpListener> and adds user-specified prefixes to its <xref:System.Net.HttpListenerPrefixCollection>.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string uriPrefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(string uriPrefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerPrefixCollection.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (uriPrefix As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::String ^ uriPrefix);" />
      <MemberSignature Language="F#" Value="abstract member Add : string -&gt; unit&#xA;override this.Add : string -&gt; unit" Usage="httpListenerPrefixCollection.Add uriPrefix" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriPrefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uriPrefix">
          <span data-ttu-id="7df51-104">A <see cref="T:System.String" /> that identifies the URI information that is compared in incoming requests.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7df51-104">A <see cref="T:System.String" /> that identifies the URI information that is compared in incoming requests.</span>
          </span>
          <span data-ttu-id="7df51-105">The prefix must be terminated with a forward slash ("/").</span>
          <span class="sxs-lookup">
            <span data-stu-id="7df51-105">The prefix must be terminated with a forward slash ("/").</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7df51-106">Adds a Uniform Resource Identifier (URI) prefix to the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7df51-106">Adds a Uniform Resource Identifier (URI) prefix to the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7df51-107">Esse método adiciona um prefixo de URI para o conjunto de prefixos gerenciados pelo associado <xref:System.Net.HttpListener> objeto.</span><span class="sxs-lookup"><span data-stu-id="7df51-107">This method adds a URI prefix to the set of prefixes managed by the associated <xref:System.Net.HttpListener> object.</span></span> <span data-ttu-id="7df51-108">Ao fazer check- `uriPrefix` para garantir que ele é válido, caso será ignorado.</span><span class="sxs-lookup"><span data-stu-id="7df51-108">When checking `uriPrefix` to ensure it is valid, case is ignored.</span></span>  
  
 <span data-ttu-id="7df51-109">Uma cadeia de caracteres de prefixo URI é composta de um esquema (http ou https), um host, uma porta opcional e um caminho opcional, por exemplo, "`http://www.contoso.com:8080/customerData``/`".</span><span class="sxs-lookup"><span data-stu-id="7df51-109">A URI prefix string is composed of a scheme (http or https), a host, an optional port, and an optional path, for example, "`http://www.contoso.com:8080/customerData``/`".</span></span> <span data-ttu-id="7df51-110">O prefixo deve terminar com uma barra "/".</span><span class="sxs-lookup"><span data-stu-id="7df51-110">The prefix must be terminated with a forward slash ("/").</span></span> <span data-ttu-id="7df51-111">O <xref:System.Net.HttpListener> com o prefixo que mais se aproxima um URI solicitado responde à solicitação.</span><span class="sxs-lookup"><span data-stu-id="7df51-111">The <xref:System.Net.HttpListener> with the prefix that most closely matches a requested URI responds to the request.</span></span> <span data-ttu-id="7df51-112">Vários <xref:System.Net.HttpListener> objetos não é possível adicionar o mesmo prefixo.</span><span class="sxs-lookup"><span data-stu-id="7df51-112">Multiple <xref:System.Net.HttpListener> objects cannot add the same prefix.</span></span> <span data-ttu-id="7df51-113">Uma <xref:System.Net.HttpListenerException> exceção será gerada se um <xref:System.Net.HttpListener> adiciona um prefixo que já está em usar.</span><span class="sxs-lookup"><span data-stu-id="7df51-113">An <xref:System.Net.HttpListenerException> exception is thrown if an <xref:System.Net.HttpListener> adds a prefix that is already in use.</span></span>  
  
 <span data-ttu-id="7df51-114">Quando uma porta for especificada, o elemento host pode ser substituído por "`*`" para indicar que o <xref:System.Net.HttpListener> aceita as solicitações enviadas para a porta se o URI solicitado não corresponder a qualquer outro prefixo.</span><span class="sxs-lookup"><span data-stu-id="7df51-114">When a port is specified, the host element can be replaced with "`*`" to indicate that the <xref:System.Net.HttpListener> accepts requests sent to the port if the requested URI does not match any other prefix.</span></span> <span data-ttu-id="7df51-115">Por exemplo, para receber todas as solicitações enviadas para a porta 8080 quando o URI solicitado não é tratado por qualquer outro <xref:System.Net.HttpListener>, o prefixo é "`http://*:8080``/`".</span><span class="sxs-lookup"><span data-stu-id="7df51-115">For example, to receive all requests sent to port 8080 when the requested URI is not handled by any other <xref:System.Net.HttpListener>, the prefix is "`http://*:8080``/`".</span></span> <span data-ttu-id="7df51-116">Da mesma forma, para especificar que o <xref:System.Net.HttpListener> aceita todas as solicitações enviadas a uma porta, substitua o elemento de host com o "`+`"caractere"`https://+:8080`/".</span><span class="sxs-lookup"><span data-stu-id="7df51-116">Similarly, to specify that the <xref:System.Net.HttpListener> accepts all requests sent to a port, replace the host element with the "`+`" character, "`https://+:8080`/".</span></span> <span data-ttu-id="7df51-117">O "`*`"e"`+`" caracteres podem estar presentes em prefixos que caminhos de inclusão.</span><span class="sxs-lookup"><span data-stu-id="7df51-117">The "`*`" and "`+`" characters can be present in prefixes that include paths.</span></span>  
  
 <span data-ttu-id="7df51-118">Começando com o .NET 4.5.3 e Windows 10, subdomínios curinga têm suporte nos prefixos URI que são gerenciados por um <xref:System.Net.HttpListener> objeto.</span><span class="sxs-lookup"><span data-stu-id="7df51-118">Starting with .NET 4.5.3 and Windows 10, wildcard subdomains are supported in URI prefixes that are managed by an <xref:System.Net.HttpListener> object.</span></span> <span data-ttu-id="7df51-119">Para especificar um subdomínio de curinga, use o "*" caractere como parte do nome do host em um prefixo de URI: por exemplo, `http://*.foo.com/`e a passa como o argumento para o método HttpListenerPrefixCollection.</span><span class="sxs-lookup"><span data-stu-id="7df51-119">To specify a wildcard subdomain, use the "*" character as part of the hostname in a URI prefix: for example, `http://*.foo.com/`, and pass this as the argument to the HttpListenerPrefixCollection.Add method.</span></span> <span data-ttu-id="7df51-120">Isso funcionará em .NET 4.5.3 e Windows 10; em versões anteriores, isso geraria um <xref:System.Net.HttpListenerException></span><span class="sxs-lookup"><span data-stu-id="7df51-120">This will work on .NET 4.5.3 and Windows 10; in earlier versions, this would generate an <xref:System.Net.HttpListenerException></span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7df51-121">O exemplo de código a seguir cria uma <xref:System.Net.HttpListener> e adiciona os prefixos especificado pelo usuário para seu <xref:System.Net.HttpListenerPrefixCollection>.</span><span class="sxs-lookup"><span data-stu-id="7df51-121">The following code example creates an <xref:System.Net.HttpListener> and adds user-specified prefixes to its <xref:System.Net.HttpListenerPrefixCollection>.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7df51-122">
            <paramref name="uriPrefix" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7df51-122">
              <paramref name="uriPrefix" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7df51-123">
            <paramref name="uriPrefix" /> does not use the http:// or https:// scheme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7df51-123">
              <paramref name="uriPrefix" /> does not use the http:// or https:// scheme.</span>
          </span>
          <span data-ttu-id="7df51-124">These are the only schemes supported for <see cref="T:System.Net.HttpListener" /> objects.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7df51-124">These are the only schemes supported for <see cref="T:System.Net.HttpListener" /> objects.</span>
          </span>
          <span data-ttu-id="7df51-125">-or-  <paramref name="uriPrefix" /> is not a correctly formatted URI prefix.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7df51-125">-or-  <paramref name="uriPrefix" /> is not a correctly formatted URI prefix.</span>
          </span>
          <span data-ttu-id="7df51-126">Make sure the string is terminated with a "/".</span>
          <span class="sxs-lookup">
            <span data-stu-id="7df51-126">Make sure the string is terminated with a "/".</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7df51-127">The <see cref="T:System.Net.HttpListener" /> associated with this collection is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7df51-127">The <see cref="T:System.Net.HttpListener" /> associated with this collection is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.HttpListenerException">
          <span data-ttu-id="7df51-128">A Windows function call failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7df51-128">A Windows function call failed.</span>
          </span>
          <span data-ttu-id="7df51-129">Check the exception's <see cref="P:System.Net.HttpListenerException.ErrorCode" /> property to determine the cause of the exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7df51-129">Check the exception's <see cref="P:System.Net.HttpListenerException.ErrorCode" /> property to determine the cause of the exception.</span>
          </span>
          <span data-ttu-id="7df51-130">This exception is thrown if another <see cref="T:System.Net.HttpListener" /> has already added the prefix <paramref name="uriPrefix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7df51-130">This exception is thrown if another <see cref="T:System.Net.HttpListener" /> has already added the prefix <paramref name="uriPrefix" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="7df51-131">Para aceitar conexões de rede.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7df51-131">To accept network connections.</span>
          </span>
          <span data-ttu-id="7df51-132">Enumeração associada: <see cref="F:System.Net.NetworkAccess.Accept" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="7df51-132">Associated enumeration: <see cref="F:System.Net.NetworkAccess.Accept" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Net.HttpListener" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerPrefixCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="httpListenerPrefixCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7df51-133">Removes all the Uniform Resource Identifier (URI) prefixes from the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7df51-133">Removes all the Uniform Resource Identifier (URI) prefixes from the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7df51-134">Depois de chamar esse método, você não pode iniciar associado <xref:System.Net.HttpListener> sem adicionar novos prefixos; se você tentar fazer isso, uma exceção é lançada.</span><span class="sxs-lookup"><span data-stu-id="7df51-134">After calling this method, you cannot start the associated <xref:System.Net.HttpListener> without adding new prefixes; if you try to do so, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7df51-135">O exemplo de código a seguir remove todos os prefixos de um <xref:System.Net.HttpListenerPrefixCollection>.</span><span class="sxs-lookup"><span data-stu-id="7df51-135">The following code example removes all prefixes in an <xref:System.Net.HttpListenerPrefixCollection>.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#6](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.HttpListenerException">
          <span data-ttu-id="7df51-136">A Windows function call failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7df51-136">A Windows function call failed.</span>
          </span>
          <span data-ttu-id="7df51-137">Check the exception's <see cref="P:System.Net.HttpListenerException.ErrorCode" /> property to determine the cause of the exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7df51-137">Check the exception's <see cref="P:System.Net.HttpListenerException.ErrorCode" /> property to determine the cause of the exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7df51-138">The <see cref="T:System.Net.HttpListener" /> associated with this collection is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7df51-138">The <see cref="T:System.Net.HttpListener" /> associated with this collection is closed.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="7df51-139">
            <para>Esse membro emite informações de rastreamento, quando você habilita o rastreamento de rede em seu aplicativo. Para obter mais informações, consulte [rastreamento de rede em Framework](~/docs/framework/network-programming/network-tracing.md) o .NET.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="7df51-139">
              <para>This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Net.HttpListener" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string uriPrefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(string uriPrefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerPrefixCollection.Contains(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (uriPrefix As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::String ^ uriPrefix);" />
      <MemberSignature Language="F#" Value="abstract member Contains : string -&gt; bool&#xA;override this.Contains : string -&gt; bool" Usage="httpListenerPrefixCollection.Contains uriPrefix" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriPrefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uriPrefix">
          <span data-ttu-id="7df51-140">A <see cref="T:System.String" /> that contains the Uniform Resource Identifier (URI) prefix to test.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7df51-140">A <see cref="T:System.String" /> that contains the Uniform Resource Identifier (URI) prefix to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7df51-141">Returns a <see cref="T:System.Boolean" /> value that indicates whether the specified prefix is contained in the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7df51-141">Returns a <see cref="T:System.Boolean" /> value that indicates whether the specified prefix is contained in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7df51-142">
            <see langword="true" /> if this collection contains the prefix specified by <paramref name="uriPrefix" />; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7df51-142">
              <see langword="true" /> if this collection contains the prefix specified by <paramref name="uriPrefix" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7df51-143">O prefixo especificado deve corresponder exatamente um valor existente.</span><span class="sxs-lookup"><span data-stu-id="7df51-143">The specified prefix must exactly match an existing value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7df51-144">O seguinte código de exemplo verifica para ver se um prefixo especificado pelo usuário está contido na coleção de prefixo de um <xref:System.Net.HttpListener>.</span><span class="sxs-lookup"><span data-stu-id="7df51-144">The following code example checks to see whether a user-specified prefix is contained in the prefix collection of an <xref:System.Net.HttpListener>.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#4](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7df51-145">
            <paramref name="uriPrefix" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7df51-145">
              <paramref name="uriPrefix" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.HttpListener" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7df51-146">Copies the contents of an <see cref="T:System.Net.HttpListenerPrefixCollection" /> to the specified array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7df51-146">Copies the contents of an <see cref="T:System.Net.HttpListenerPrefixCollection" /> to the specified array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7df51-147">A matriz deve ser capaz de conter cadeias de caracteres e não pode ser multidimensional.</span><span class="sxs-lookup"><span data-stu-id="7df51-147">The array must be able to contain strings and cannot be multidimensional.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Array array, int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(Array ^ array, int offset);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : Array * int -&gt; unit" Usage="httpListenerPrefixCollection.CopyTo (array, offset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="7df51-148">The one dimensional <see cref="T:System.Array" /> that receives the Uniform Resource Identifier (URI) prefix strings in this collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7df51-148">The one dimensional <see cref="T:System.Array" /> that receives the Uniform Resource Identifier (URI) prefix strings in this collection.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="7df51-149">The zero-based index in <c>array</c> at which copying begins.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7df51-149">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7df51-150">Copies the contents of an <see cref="T:System.Net.HttpListenerPrefixCollection" /> to the specified array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7df51-150">Copies the contents of an <see cref="T:System.Net.HttpListenerPrefixCollection" /> to the specified array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7df51-151">A matriz deve ser capaz de conter cadeias de caracteres e não pode ser multidimensional.</span><span class="sxs-lookup"><span data-stu-id="7df51-151">The array must be able to contain strings and cannot be multidimensional.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7df51-152">O exemplo de código a seguir copia os prefixos em um <xref:System.Net.HttpListenerPrefixCollection>.</span><span class="sxs-lookup"><span data-stu-id="7df51-152">The following code example copies the prefixes in a <xref:System.Net.HttpListenerPrefixCollection>.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#7](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7df51-153">
            <paramref name="array" /> has more than one dimension.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7df51-153">
              <paramref name="array" /> has more than one dimension.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="7df51-154">This collection contains more elements than can be stored in <paramref name="array" /> starting at <paramref name="offset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7df51-154">This collection contains more elements than can be stored in <paramref name="array" /> starting at <paramref name="offset" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7df51-155">The <see cref="T:System.Net.HttpListener" /> associated with this collection is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7df51-155">The <see cref="T:System.Net.HttpListener" /> associated with this collection is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="7df51-156">
            <paramref name="array" /> cannot store string values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7df51-156">
              <paramref name="array" /> cannot store string values.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.HttpListener" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (string[] array, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(string[] array, int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.String[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As String(), offset As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;System::String ^&gt; ^ array, int offset);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : string[] * int -&gt; unit&#xA;override this.CopyTo : string[] * int -&gt; unit" Usage="httpListenerPrefixCollection.CopyTo (array, offset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.String[]" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="7df51-157">The one dimensional string array that receives the Uniform Resource Identifier (URI) prefix strings in this collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7df51-157">The one dimensional string array that receives the Uniform Resource Identifier (URI) prefix strings in this collection.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="7df51-158">The zero-based index in <c>array</c> at which copying begins.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7df51-158">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7df51-159">Copies the contents of an <see cref="T:System.Net.HttpListenerPrefixCollection" /> to the specified string array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7df51-159">Copies the contents of an <see cref="T:System.Net.HttpListenerPrefixCollection" /> to the specified string array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7df51-160">A matriz deve ser capaz de conter cadeias de caracteres e não pode ser multidimensional.</span><span class="sxs-lookup"><span data-stu-id="7df51-160">The array must be able to contain strings and cannot be multidimensional.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7df51-161">O exemplo de código a seguir copia os prefixos em um <xref:System.Net.HttpListenerPrefixCollection>.</span><span class="sxs-lookup"><span data-stu-id="7df51-161">The following code example copies the prefixes in a <xref:System.Net.HttpListenerPrefixCollection>.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#7](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7df51-162">
            <paramref name="array" /> has more than one dimension.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7df51-162">
              <paramref name="array" /> has more than one dimension.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="7df51-163">This collection contains more elements than can be stored in <paramref name="array" /> starting at <paramref name="offset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7df51-163">This collection contains more elements than can be stored in <paramref name="array" /> starting at <paramref name="offset" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7df51-164">The <see cref="T:System.Net.HttpListener" /> associated with this collection is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7df51-164">The <see cref="T:System.Net.HttpListener" /> associated with this collection is closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.HttpListener" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerPrefixCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Net.HttpListenerPrefixCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7df51-165">Gets the number of prefixes contained in the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7df51-165">Gets the number of prefixes contained in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7df51-166">Um <see cref="T:System.Int32" /> que contém o número de prefixos nesta coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7df51-166">An <see cref="T:System.Int32" /> that contains the number of prefixes in this collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7df51-167">O exemplo de código a seguir exibe os prefixos em uma coleção.</span><span class="sxs-lookup"><span data-stu-id="7df51-167">The following code example displays the prefixes in a collection.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;string&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;string&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerPrefixCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;System::String ^&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;string&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;string&gt;" Usage="httpListenerPrefixCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7df51-168">Returns an object that can be used to iterate through the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7df51-168">Returns an object that can be used to iterate through the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7df51-169">An object that implements the <see cref="T:System.Collections.IEnumerator" /> interface and provides access to the strings in this collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7df51-169">An object that implements the <see cref="T:System.Collections.IEnumerator" /> interface and provides access to the strings in this collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7df51-170">O objeto que é retornado por esse método é inicialmente posicionado antes do primeiro elemento nesta coleção.</span><span class="sxs-lookup"><span data-stu-id="7df51-170">The object that is returned by this method is initially positioned before the first element in this collection.</span></span> <span data-ttu-id="7df51-171">Você deve chamar o <xref:System.Collections.IEnumerator.MoveNext%2A> método antes de poder acessar o primeiro elemento.</span><span class="sxs-lookup"><span data-stu-id="7df51-171">You must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method before you can access the first element.</span></span> <span data-ttu-id="7df51-172">Para acessar o elemento na posição atual, chame o <xref:System.Collections.IEnumerator.Current%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="7df51-172">To access the element at the current position, call the <xref:System.Collections.IEnumerator.Current%2A> property.</span></span>  
  
 <span data-ttu-id="7df51-173">Não modifique a coleção ao usar o enumerador.</span><span class="sxs-lookup"><span data-stu-id="7df51-173">Do not modify the collection while using the enumerator.</span></span> <span data-ttu-id="7df51-174">Se a coleção é modificada enquanto um enumerador está em usar, uma tentativa de definir a posição chamando <xref:System.Collections.IEnumerator.MoveNext%2A> ou <xref:System.Collections.IEnumerator.Reset%2A> faz com que um <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="7df51-174">If the collection is modified while an enumerator is in use, an attempt to set the position by calling <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> causes an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="7df51-175">Para obter uma descrição detalhada de enumeradores, consulte a documentação para o <xref:System.Collections.IEnumerator> classe e o <xref:System.Collections.IEnumerable.GetEnumerator%2A> método.</span><span class="sxs-lookup"><span data-stu-id="7df51-175">For a detailed description of enumerators, see the documentation for the <xref:System.Collections.IEnumerator> class and the <xref:System.Collections.IEnumerable.GetEnumerator%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7df51-176">O exemplo de código a seguir demonstra como enumerar através de uma coleção.</span><span class="sxs-lookup"><span data-stu-id="7df51-176">The following code example demonstrates enumerating through a collection.</span></span> <span data-ttu-id="7df51-177">Observe que os exemplos de Visual Basic e c# usam instruções específicas do idioma para enumerar a coleção em vez de recuperar o enumerador.</span><span class="sxs-lookup"><span data-stu-id="7df51-177">Note that the Visual Basic and C# examples use language specific statements to enumerate through the collection instead of retrieving the enumerator.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerPrefixCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Net.HttpListenerPrefixCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7df51-178">Gets a value that indicates whether access to the collection is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7df51-178">Gets a value that indicates whether access to the collection is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7df51-179">Sempre retorna <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7df51-179">Always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerPrefixCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Net.HttpListenerPrefixCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7df51-180">Gets a value that indicates whether access to the collection is synchronized (thread-safe).</span>
          <span class="sxs-lookup">
            <span data-stu-id="7df51-180">Gets a value that indicates whether access to the collection is synchronized (thread-safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7df51-181">Essa propriedade sempre retorna <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7df51-181">This property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7df51-182">A enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</span><span class="sxs-lookup"><span data-stu-id="7df51-182">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="7df51-183">Mesmo quando uma coleção está sincronizada, outros threads ainda podem modificar a coleção, o que faz o enumerador lançar uma exceção.</span><span class="sxs-lookup"><span data-stu-id="7df51-183">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="7df51-184">Para garantir acesso thread-safe durante a enumeração, você pode bloquear a coleção durante toda a enumeração ou capture as exceções que resultam das alterações feitas por outros threads.</span><span class="sxs-lookup"><span data-stu-id="7df51-184">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions that result from changes made by other threads.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (string uriPrefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(string uriPrefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerPrefixCollection.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (uriPrefix As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(System::String ^ uriPrefix);" />
      <MemberSignature Language="F#" Value="abstract member Remove : string -&gt; bool&#xA;override this.Remove : string -&gt; bool" Usage="httpListenerPrefixCollection.Remove uriPrefix" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriPrefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uriPrefix">
          <span data-ttu-id="7df51-185">A <see cref="T:System.String" /> that contains the URI prefix to remove.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7df51-185">A <see cref="T:System.String" /> that contains the URI prefix to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7df51-186">Removes the specified Uniform Resource Identifier (URI) from the list of prefixes handled by the <see cref="T:System.Net.HttpListener" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7df51-186">Removes the specified Uniform Resource Identifier (URI) from the list of prefixes handled by the <see cref="T:System.Net.HttpListener" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7df51-187">
            <see langword="true" /> if the <paramref name="uriPrefix" /> was found in the <see cref="T:System.Net.HttpListenerPrefixCollection" /> and removed; otherwise <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7df51-187">
              <see langword="true" /> if the <paramref name="uriPrefix" /> was found in the <see cref="T:System.Net.HttpListenerPrefixCollection" /> and removed; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7df51-188">Se `uriPrefix` é não está na coleção, esse método não faz nada.</span><span class="sxs-lookup"><span data-stu-id="7df51-188">If `uriPrefix` is not in the collection, this method does nothing.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7df51-189">
            <paramref name="uriPrefix" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7df51-189">
              <paramref name="uriPrefix" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.HttpListenerException">
          <span data-ttu-id="7df51-190">A Windows function call failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7df51-190">A Windows function call failed.</span>
          </span>
          <span data-ttu-id="7df51-191">To determine the cause of the exception, check the exception's error code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7df51-191">To determine the cause of the exception, check the exception's error code.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7df51-192">The <see cref="T:System.Net.HttpListener" /> associated with this collection is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7df51-192">The <see cref="T:System.Net.HttpListener" /> associated with this collection is closed.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="7df51-193">
            <para>Esse membro emite informações de rastreamento, quando você habilita o rastreamento de rede em seu aplicativo. Para obter mais informações, consulte [rastreamento de rede em Framework](~/docs/framework/network-programming/network-tracing.md) o .NET.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="7df51-193">
              <para>This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Net.HttpListener" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerPrefixCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7df51-194">Returns an object that can be used to iterate through the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7df51-194">Returns an object that can be used to iterate through the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7df51-195">An object that implements the <see cref="T:System.Collections.IEnumerator" /> interface and provides access to the strings in this collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7df51-195">An object that implements the <see cref="T:System.Collections.IEnumerator" /> interface and provides access to the strings in this collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7df51-196">O objeto que é retornado por esse método é inicialmente posicionado antes do primeiro elemento nesta coleção.</span><span class="sxs-lookup"><span data-stu-id="7df51-196">The object that is returned by this method is initially positioned before the first element in this collection.</span></span> <span data-ttu-id="7df51-197">Você deve chamar o <xref:System.Collections.IEnumerator.MoveNext%2A> método antes de poder acessar o primeiro elemento.</span><span class="sxs-lookup"><span data-stu-id="7df51-197">You must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method before you can access the first element.</span></span> <span data-ttu-id="7df51-198">Para acessar o elemento na posição atual, chame o <xref:System.Collections.IEnumerator.Current%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="7df51-198">To access the element at the current position, call the <xref:System.Collections.IEnumerator.Current%2A> property.</span></span>  
  
 <span data-ttu-id="7df51-199">Não modifique a coleção ao usar o enumerador.</span><span class="sxs-lookup"><span data-stu-id="7df51-199">Do not modify the collection while using the enumerator.</span></span> <span data-ttu-id="7df51-200">Se a coleção é modificada enquanto um enumerador está em usar, uma tentativa de definir a posição chamando <xref:System.Collections.IEnumerator.MoveNext%2A> ou <xref:System.Collections.IEnumerator.Reset%2A> faz com que um <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="7df51-200">If the collection is modified while an enumerator is in use, an attempt to set the position by calling <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> causes an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="7df51-201">Para obter uma descrição detalhada de enumeradores, consulte a documentação para o <xref:System.Collections.IEnumerator> classe e o <xref:System.Collections.IEnumerable.GetEnumerator%2A> método.</span><span class="sxs-lookup"><span data-stu-id="7df51-201">For a detailed description of enumerators, see the documentation for the <xref:System.Collections.IEnumerator> class and the <xref:System.Collections.IEnumerable.GetEnumerator%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
      </Docs>
    </Member>
  </Members>
</Type>