<Type Name="ICredentialPolicy" FullName="System.Net.ICredentialPolicy">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9f791352f284d998118a147ed5e4389c4f140d30" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30465150" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ICredentialPolicy" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICredentialPolicy" />
  <TypeSignature Language="DocId" Value="T:System.Net.ICredentialPolicy" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICredentialPolicy" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICredentialPolicy" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Requests</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Define a política de credencial a ser usada para solicitações de recursos que são feitas usando <see cref="T:System.Net.WebRequest" /> e suas classes derivadas.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A política de credencial determina se é necessário enviar credenciais ao enviar um <xref:System.Net.WebRequest> para um recurso de rede, como o conteúdo de uma página da Web. Se as credenciais são enviadas, servidores que requerem autenticação de cliente podem tentar autenticar o cliente quando a solicitação é recebida em vez de enviar uma resposta que indica que as credenciais do cliente são necessárias. Enquanto isso economiza uma viagem de ida e para o servidor, o ganho de desempenho deve ser equilibrado com o risco de segurança inerente enviar credenciais pela rede. Quando o servidor de destino não exige autenticação de cliente, é melhor não enviar as credenciais.  
  
> [!NOTE]
>  <xref:System.Net.ICredentialPolicy> as políticas são invocadas somente se o <xref:System.Net.WebRequest> ou <xref:System.Net.WebProxy> que está associado com a solicitação com credenciais que não são `null`. Configurar essa política não tem nenhum efeito nas solicitações que não especifique credenciais.  
  
 Use o <xref:System.Net.AuthenticationManager.CredentialPolicy%2A?displayProperty=nameWithType> propriedade para definir um <xref:System.Net.ICredentialPolicy> política. O <xref:System.Net.IAuthenticationModule> que gerencia a autenticação para a solicitação invocará o <xref:System.Net.ICredentialPolicy.ShouldSendCredential%2A> método antes de executar a autenticação. Se o método retornar `false`, a autenticação não é executada.  
  
 Um <xref:System.Net.ICredentialPolicy> política afeta todas as instâncias de <xref:System.Net.WebRequest> com credenciais de não-nulo no domínio do aplicativo atual. A política não pode ser substituída em solicitações individuais.  
  
   
  
## Examples  
 O exemplo de código a seguir mostra uma implementação dessa interface que permite que as credenciais sejam enviadas somente para solicitações que se destinam a hosts específicos.  
  
 [!code-cpp[NclCredPolicy#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCredPolicy/CPP/NCLCredPolicy.cpp#3)]
 [!code-csharp[NclCredPolicy#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCredPolicy/CS/websample.cs#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ShouldSendCredential">
      <MemberSignature Language="C#" Value="public bool ShouldSendCredential (Uri challengeUri, System.Net.WebRequest request, System.Net.NetworkCredential credential, System.Net.IAuthenticationModule authenticationModule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldSendCredential(class System.Uri challengeUri, class System.Net.WebRequest request, class System.Net.NetworkCredential credential, class System.Net.IAuthenticationModule authenticationModule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.ICredentialPolicy.ShouldSendCredential(System.Uri,System.Net.WebRequest,System.Net.NetworkCredential,System.Net.IAuthenticationModule)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSendCredential (challengeUri As Uri, request As WebRequest, credential As NetworkCredential, authenticationModule As IAuthenticationModule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSendCredential(Uri ^ challengeUri, System::Net::WebRequest ^ request, System::Net::NetworkCredential ^ credential, System::Net::IAuthenticationModule ^ authenticationModule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="challengeUri" Type="System.Uri" />
        <Parameter Name="request" Type="System.Net.WebRequest" />
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="authenticationModule" Type="System.Net.IAuthenticationModule" />
      </Parameters>
      <Docs>
        <param name="challengeUri">O <see cref="T:System.Uri" /> que receberá a solicitação.</param>
        <param name="request">O <see cref="T:System.Net.WebRequest" /> que representa o recurso sendo solicitado.</param>
        <param name="credential">O <see cref="T:System.Net.NetworkCredential" /> que será enviado com a solicitação se esse método retornar <see langword="true" />.</param>
        <param name="authenticationModule">O <see cref="T:System.Net.IAuthenticationModule" /> que fará a autenticação, se a autenticação for necessária.</param>
        <summary>Retorna um <see cref="T:System.Boolean" /> que indica se as credenciais do cliente são enviadas com uma solicitação de recurso feita usando uma instância da classe <see cref="T:System.Net.WebRequest" />.</summary>
        <returns>
          <see langword="true" /> se as credenciais são enviadas com a solicitação; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Após um <xref:System.Net.ICredentialPolicy> política tiver sido especificada, definindo o <xref:System.Net.AuthenticationManager.CredentialPolicy%2A?displayProperty=nameWithType> propriedade, o <xref:System.Net.IAuthenticationModule> que gerencia a autenticação para um <xref:System.Net.WebRequest> invoca o <xref:System.Net.ICredentialPolicy.ShouldSendCredential%2A> método antes de executar a autenticação. Se esse método retornar `false`, a autenticação não é executada.  
  
 Quando a solicitação original foi redirecionada ou autenticação de proxy é necessária, o recurso identificado pelo `challengeUri` pode ser diferente do recurso solicitado é especificado em <xref:System.Net.WebRequest.RequestUri%2A?displayProperty=nameWithType>. No caso de redirecionamento, `challengeUri` contém o destino real <xref:System.Uri>. Se a autenticação de proxy é necessária, `challengeUri` contém o endereço do servidor proxy que requer autenticação de cliente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>