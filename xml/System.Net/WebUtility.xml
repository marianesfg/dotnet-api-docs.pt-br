<Type Name="WebUtility" FullName="System.Net.WebUtility">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="897921efe400b6b55c24d5ca77b0f8414c09c181" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51912778" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class WebUtility" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit WebUtility extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.WebUtility" />
  <TypeSignature Language="VB.NET" Value="Public Class WebUtility" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebUtility abstract sealed" />
  <TypeSignature Language="F#" Value="type WebUtility = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="1502f-101">Fornece métodos para codificar e decodificar URLs durante o processamento de solicitações da Web.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1502f-101">Provides methods for encoding and decoding URLs when processing Web requests.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1502f-102">O <xref:System.Web.HttpUtility> classe contém a codificação e decodificação de métodos de utilitário para uso com o HTML codificar cadeias de caracteres.</span><span class="sxs-lookup"><span data-stu-id="1502f-102">The <xref:System.Web.HttpUtility> class contains encoding and decoding utility methods for use with HTML-encode strings.</span></span> <span data-ttu-id="1502f-103">O <xref:System.Uri?displayProperty=nameWithType> classe também contém métodos e propriedades que podem ser usadas para finalidades semelhantes.</span><span class="sxs-lookup"><span data-stu-id="1502f-103">The <xref:System.Uri?displayProperty=nameWithType> class also contains methods and properties that can be used for similar purposes.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Uri" />
    <altmember cref="T:System.Web.HttpUtility" />
    <altmember cref="T:System.Web.HttpServerUtility" />
    <altmember cref="P:System.Web.HttpContext.Server" />
    <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b">
      <span data-ttu-id="1502f-104">Como: proteger contra explorações de Script em um aplicativo Web, aplicando a codificação HTML em cadeias de caracteres</span>
      <span class="sxs-lookup">
        <span data-stu-id="1502f-104">How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName="HtmlDecode">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1502f-105">Converte uma cadeia de caracteres que foi codificada em HTML para transmissão HTTP em uma cadeia de caracteres decodificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1502f-105">Converts a string that has been HTML-encoded for HTTP transmission into a decoded string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public static string HtmlDecode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlDecode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlDecode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlDecode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member HtmlDecode : string -&gt; string" Usage="System.Net.WebUtility.HtmlDecode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1502f-106">A cadeia de caracteres para decodificar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1502f-106">The string to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1502f-107">Converte uma cadeia de caracteres que foi codificada em HTML para transmissão HTTP em uma cadeia de caracteres decodificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1502f-107">Converts a string that has been HTML-encoded for HTTP transmission into a decoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1502f-108">Uma cadeia de caracteres decodificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1502f-108">A decoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1502f-109">Se caracteres como espaços em branco e pontuação são passados em um fluxo HTTP, eles podem ser interpretados incorretamente na extremidade receptora.</span><span class="sxs-lookup"><span data-stu-id="1502f-109">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="1502f-110">Codificação HTML converte caracteres que não são permitidos em HTML em equivalentes de entidade de caractere; Decodificação HTML inverte a codificação.</span><span class="sxs-lookup"><span data-stu-id="1502f-110">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="1502f-111">Por exemplo, quando inserido em um bloco de texto, os caracteres `<` e `>` são codificados como `&lt;` e `&gt;` para transmissão HTTP.</span><span class="sxs-lookup"><span data-stu-id="1502f-111">For example, when embedded in a block of text, the characters `<` and `>` are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 <span data-ttu-id="1502f-112">Se o `value` parâmetro é `null`, em seguida, a cadeia de caracteres decodificada retornada é `null`.</span><span class="sxs-lookup"><span data-stu-id="1502f-112">If the `value` parameter is `null`, then the returned decoded string is `null`.</span></span> <span data-ttu-id="1502f-113">Se o `value` parâmetro é uma cadeia de caracteres vazia e, em seguida, a cadeia de caracteres decodificada retornada é uma cadeia de caracteres vazia.</span><span class="sxs-lookup"><span data-stu-id="1502f-113">If the `value` parameter is an empty string, then the returned decoded string is an empty string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebUtility.HtmlEncode(System.String)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlEncode(System.String)" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public static void HtmlDecode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HtmlDecode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub HtmlDecode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void HtmlDecode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="static member HtmlDecode : string * System.IO.TextWriter -&gt; unit" Usage="System.Net.WebUtility.HtmlDecode (value, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1502f-114">A cadeia de caracteres para decodificar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1502f-114">The string to decode.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="1502f-115">Um fluxo de saída <see cref="T:System.IO.TextWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1502f-115">A <see cref="T:System.IO.TextWriter" /> stream of output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1502f-116">Converte uma cadeia de caracteres que foi codificada em HTML em uma cadeia de caracteres decodificada e envia a cadeia de caracteres decodificada para um fluxo de saída <see cref="T:System.IO.TextWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1502f-116">Converts a string that has been HTML-encoded into a decoded string, and sends the decoded string to a <see cref="T:System.IO.TextWriter" /> output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1502f-117">Se caracteres como espaços em branco e pontuação são passados em um fluxo HTTP, eles podem ser interpretados incorretamente na extremidade receptora.</span><span class="sxs-lookup"><span data-stu-id="1502f-117">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="1502f-118">Codificação HTML converte caracteres que não são permitidos em HTML em equivalentes de entidade de caractere; Decodificação HTML inverte a codificação.</span><span class="sxs-lookup"><span data-stu-id="1502f-118">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="1502f-119">Por exemplo, quando inserido em um bloco de texto, os caracteres `<` e `>` são codificados como `&lt;` e `&gt;` para transmissão HTTP.</span><span class="sxs-lookup"><span data-stu-id="1502f-119">For example, when embedded in a block of text, the characters `<` and `>` are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1502f-120">O parâmetro <paramref name="output" /> não pode ser <see langword="null" /> se o parâmetro <paramref name="value" /> não for <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1502f-120">The <paramref name="output" /> parameter cannot be <see langword="null" /> if the <paramref name="value" /> parameter is not <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.WebUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1502f-121">Converte uma cadeia de caracteres em uma cadeia de caracteres codificada em HTML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1502f-121">Converts a string to an HTML-encoded string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public static string HtmlEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlEncode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member HtmlEncode : string -&gt; string" Usage="System.Net.WebUtility.HtmlEncode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1502f-122">A cadeia de caracteres a ser codificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1502f-122">The string to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1502f-123">Converte uma cadeia de caracteres em uma cadeia de caracteres codificada em HTML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1502f-123">Converts a string to an HTML-encoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1502f-124">Uma cadeia de caracteres codificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1502f-124">An encoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1502f-125">Se caracteres como espaços em branco e pontuação são passados em um fluxo HTTP, eles podem ser interpretados incorretamente na extremidade receptora.</span><span class="sxs-lookup"><span data-stu-id="1502f-125">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="1502f-126">Codificação HTML converte caracteres que não são permitidos em HTML em equivalentes de entidade de caractere; Decodificação HTML inverte a codificação.</span><span class="sxs-lookup"><span data-stu-id="1502f-126">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="1502f-127">Por exemplo, quando inserido em um bloco de texto, os caracteres `<` e `>` são codificados como `&lt;` e `&gt;` para transmissão HTTP.</span><span class="sxs-lookup"><span data-stu-id="1502f-127">For example, when embedded in a block of text, the characters `<` and `>` are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 <span data-ttu-id="1502f-128">Se o `value` parâmetro é `null`, em seguida, a cadeia de caracteres codificada retornada é `null`.</span><span class="sxs-lookup"><span data-stu-id="1502f-128">If the `value` parameter is `null`, then the returned encoded string is `null`.</span></span> <span data-ttu-id="1502f-129">Se o `value` parâmetro é uma cadeia de caracteres vazia e, em seguida, a cadeia de caracteres codificada retornada é uma cadeia de caracteres vazia.</span><span class="sxs-lookup"><span data-stu-id="1502f-129">If the `value` parameter is an empty string, then the returned encoded string is an empty string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebUtility.HtmlDecode(System.String)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlDecode(System.String)" />
        <altmember cref="T:System.Uri" />
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b">
          <span data-ttu-id="1502f-130">Como: proteger contra explorações de Script em um aplicativo Web, aplicando a codificação HTML em cadeias de caracteres</span>
          <span class="sxs-lookup">
            <span data-stu-id="1502f-130">How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public static void HtmlEncode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HtmlEncode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub HtmlEncode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void HtmlEncode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="static member HtmlEncode : string * System.IO.TextWriter -&gt; unit" Usage="System.Net.WebUtility.HtmlEncode (value, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1502f-131">A cadeia de caracteres a ser codificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1502f-131">The string to encode.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="1502f-132">Um fluxo de saída de <see cref="T:System.IO.TextWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1502f-132">A <see cref="T:System.IO.TextWriter" /> output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1502f-133">Converte uma cadeia de caracteres em uma cadeia de caracteres codificada em HTML e retorna o resultado como um fluxo <see cref="T:System.IO.TextWriter" /> de saída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1502f-133">Converts a string into an HTML-encoded string, and returns the output as a <see cref="T:System.IO.TextWriter" /> stream of output.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1502f-134">Se caracteres como espaços em branco e pontuação são passados em um fluxo HTTP, eles podem ser interpretados incorretamente na extremidade receptora.</span><span class="sxs-lookup"><span data-stu-id="1502f-134">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="1502f-135">Codificação HTML converte caracteres que não são permitidos em HTML em equivalentes de entidade de caractere; Decodificação HTML inverte a codificação.</span><span class="sxs-lookup"><span data-stu-id="1502f-135">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="1502f-136">Por exemplo, quando inserido em um bloco de texto, os caracteres `<` e `>` são codificados como `&lt;` e `&gt;` para transmissão HTTP.</span><span class="sxs-lookup"><span data-stu-id="1502f-136">For example, when embedded in a block of text, the characters `<` and `>` are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1502f-137">O parâmetro <paramref name="output" /> não pode ser <see langword="null" /> se o parâmetro <paramref name="value" /> não for <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1502f-137">The <paramref name="output" /> parameter cannot be <see langword="null" /> if the <paramref name="value" /> parameter is not <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.WebUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
        <altmember cref="T:System.Uri" />
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b">
          <span data-ttu-id="1502f-138">Como: proteger contra explorações de Script em um aplicativo Web, aplicando a codificação HTML em cadeias de caracteres</span>
          <span class="sxs-lookup">
            <span data-stu-id="1502f-138">How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="UrlDecode">
      <MemberSignature Language="C#" Value="public static string UrlDecode (string encodedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlDecode(string encodedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecode (encodedValue As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlDecode(System::String ^ encodedValue);" />
      <MemberSignature Language="F#" Value="static member UrlDecode : string -&gt; string" Usage="System.Net.WebUtility.UrlDecode encodedValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="encodedValue">
          <span data-ttu-id="1502f-139">Uma cadeia de caracteres codificada de URL a ser decodificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1502f-139">A URL-encoded string to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1502f-140">Converte uma cadeia de caracteres codificada para transmissão em uma URL em uma cadeia de caracteres decodificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1502f-140">Converts a string that has been encoded for transmission in a URL into a decoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1502f-141">Uma cadeia de caracteres decodificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1502f-141">A decoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1502f-142">Se caracteres como espaços em branco e pontuação são passados em um fluxo HTTP, eles podem ser interpretados incorretamente na extremidade receptora.</span><span class="sxs-lookup"><span data-stu-id="1502f-142">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="1502f-143">Codificação de URL converte caracteres que não são permitidos em uma URL em sequências de escape hexadecimais equivalente.</span><span class="sxs-lookup"><span data-stu-id="1502f-143">URL encoding converts characters that are not allowed in a URL into equivalent hexadecimal escape sequences.</span></span> <span data-ttu-id="1502f-144">O <xref:System.Net.WebUtility.UrlEncode%2A> método cria uma cadeia de caracteres codificada em URL.</span><span class="sxs-lookup"><span data-stu-id="1502f-144">The <xref:System.Net.WebUtility.UrlEncode%2A> method creates a URL-encoded string.</span></span>  
  
 <span data-ttu-id="1502f-145">Decodificação URL substitui as sequências de escape hexadecimal com equivalentes de caractere ASCII correspondentes.</span><span class="sxs-lookup"><span data-stu-id="1502f-145">URL decoding replaces hexadecimal escape sequences with corresponding ASCII character equivalents.</span></span> <span data-ttu-id="1502f-146">Por exemplo, quando inserido em um bloco de texto codificado em URL, o sequências de escape `%3c` e `%3e` são decodificado para os caracteres `<` e `>`.</span><span class="sxs-lookup"><span data-stu-id="1502f-146">For example, when embedded in a block of URL-encoded text, the escape sequences `%3c` and `%3e` are decoded into the characters `<` and `>`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlDecodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlDecodeToBytes (byte[] encodedValue, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlDecodeToBytes(unsigned int8[] encodedValue, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecodeToBytes (encodedValue As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlDecodeToBytes(cli::array &lt;System::Byte&gt; ^ encodedValue, int offset, int count);" />
      <MemberSignature Language="F#" Value="static member UrlDecodeToBytes : byte[] * int * int -&gt; byte[]" Usage="System.Net.WebUtility.UrlDecodeToBytes (encodedValue, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodedValue" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="encodedValue">
          <span data-ttu-id="1502f-147">Uma matriz <see cref="T:System.Byte" /> com codificação de URL a ser decodificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1502f-147">A URL-encoded <see cref="T:System.Byte" /> array to decode.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="1502f-148">O deslocamento, em bytes, do início da matriz <see cref="T:System.Byte" /> a ser decodificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1502f-148">The offset, in bytes, from the start of the <see cref="T:System.Byte" /> array to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="1502f-149">A contagem, em bytes, a ser decodificada da matriz <see cref="T:System.Byte" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1502f-149">The count, in bytes, to decode from the <see cref="T:System.Byte" /> array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1502f-150">Converte uma matriz de bytes codificados que foi codificada para transmissão em uma URL em uma matriz de bytes decodificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1502f-150">Converts an encoded byte array that has been encoded for transmission in a URL into a decoded byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1502f-151">Uma matriz <see cref="T:System.Byte" /> decodificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1502f-151">A decoded <see cref="T:System.Byte" /> array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1502f-152">Se caracteres como espaços em branco e pontuação são passados em um fluxo HTTP, eles podem ser interpretados incorretamente na extremidade receptora.</span><span class="sxs-lookup"><span data-stu-id="1502f-152">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="1502f-153">Codificação de URL converte caracteres que não são permitidos em uma URL em sequências de escape hexadecimais equivalente.</span><span class="sxs-lookup"><span data-stu-id="1502f-153">URL encoding converts characters that are not allowed in a URL into equivalent hexadecimal escape sequences.</span></span> <span data-ttu-id="1502f-154">O <xref:System.Net.WebUtility.UrlEncodeToBytes%2A> método cria uma matriz de bytes codificados de URL.</span><span class="sxs-lookup"><span data-stu-id="1502f-154">The <xref:System.Net.WebUtility.UrlEncodeToBytes%2A> method creates a URL-encoded byte array.</span></span>  
  
 <span data-ttu-id="1502f-155">Decodificação URL substitui as sequências de escape hexadecimal com equivalentes de caractere ASCII correspondentes.</span><span class="sxs-lookup"><span data-stu-id="1502f-155">URL decoding replaces hexadecimal escape sequences with corresponding ASCII character equivalents.</span></span> <span data-ttu-id="1502f-156">Por exemplo, quando inserido em um bloco de texto codificado em URL, o sequências de escape `%3c` e `%3e` são decodificado para os caracteres `<` e `>`.</span><span class="sxs-lookup"><span data-stu-id="1502f-156">For example, when embedded in a block of URL-encoded text, the escape sequences `%3c` and `%3e` are decoded into the characters `<` and `>`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public static string UrlEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member UrlEncode : string -&gt; string" Usage="System.Net.WebUtility.UrlEncode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1502f-157">O texto a ser codificado em URL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1502f-157">The text to URL-encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1502f-158">Converte uma cadeia de caracteres de texto em uma cadeia de caracteres codificada em URL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1502f-158">Converts a text string into a URL-encoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1502f-159">Uma cadeia de caracteres codificada em URL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1502f-159">A URL-encoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1502f-160">Se caracteres como espaços em branco e pontuação são passados em um fluxo HTTP, eles podem ser interpretados incorretamente na extremidade receptora.</span><span class="sxs-lookup"><span data-stu-id="1502f-160">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="1502f-161">Codificação de URL substitui caracteres que não são permitidos em uma URL com equivalentes de entidade de caracteres que consiste de sequências de escape hexadecimal.</span><span class="sxs-lookup"><span data-stu-id="1502f-161">URL encoding replaces characters that are not allowed in a URL with character-entity equivalents consisting of hexadecimal escape sequences.</span></span> <span data-ttu-id="1502f-162">A cadeia de caracteres convertida é estar em conformidade com o formato UTF-8.</span><span class="sxs-lookup"><span data-stu-id="1502f-162">The converted string is expected to conform to the UTF-8 format.</span></span>  
  
 <span data-ttu-id="1502f-163">Codificação de URL substitui todos os códigos de caractere, exceto para letras, números e caracteres de pontuação a seguir:</span><span class="sxs-lookup"><span data-stu-id="1502f-163">URL encoding replaces all character codes except for letters, numbers, and the following punctuation characters:</span></span>  
  
-   <span data-ttu-id="1502f-164">`-` (sinal de subtração)</span><span class="sxs-lookup"><span data-stu-id="1502f-164">`-` (minus sign)</span></span>  
  
-   <span data-ttu-id="1502f-165">`_` (sublinhado)</span><span class="sxs-lookup"><span data-stu-id="1502f-165">`_` (underscore)</span></span>  
  
-   <span data-ttu-id="1502f-166">`.` (período)</span><span class="sxs-lookup"><span data-stu-id="1502f-166">`.` (period)</span></span>  
  
-   <span data-ttu-id="1502f-167">`!` (ponto de exclamação)</span><span class="sxs-lookup"><span data-stu-id="1502f-167">`!` (exclamation point)</span></span>  
  
-   <span data-ttu-id="1502f-168">`*` (asterisco)</span><span class="sxs-lookup"><span data-stu-id="1502f-168">`*` (asterisk)</span></span>  
  
-   <span data-ttu-id="1502f-169">`(` e `)` (de abertura e fechamento de parênteses)</span><span class="sxs-lookup"><span data-stu-id="1502f-169">`(` and `)` (opening and closing parentheses)</span></span>  
  
 <span data-ttu-id="1502f-170">Por exemplo, quando inserido em um bloco de texto a ser transmitido em uma URL, os caracteres `<` e `>` são codificados como `%3c` e `%3e`.</span><span class="sxs-lookup"><span data-stu-id="1502f-170">For example, when embedded in a block of text to be transmitted in a URL, the characters `<` and `>` are encoded as `%3c` and `%3e`.</span></span>  
  
 <span data-ttu-id="1502f-171">O <xref:System.Net.WebUtility.UrlDecode%2A> método inverte a codificação.</span><span class="sxs-lookup"><span data-stu-id="1502f-171">The <xref:System.Net.WebUtility.UrlDecode%2A> method reverses the encoding.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlEncodeToBytes (byte[] value, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlEncodeToBytes(unsigned int8[] value, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncodeToBytes (value As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlEncodeToBytes(cli::array &lt;System::Byte&gt; ^ value, int offset, int count);" />
      <MemberSignature Language="F#" Value="static member UrlEncodeToBytes : byte[] * int * int -&gt; byte[]" Usage="System.Net.WebUtility.UrlEncodeToBytes (value, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1502f-172">A matriz <see cref="T:System.Byte" /> a ser codificada em URL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1502f-172">The <see cref="T:System.Byte" /> array to URL-encode.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="1502f-173">O deslocamento, em bytes, do início da matriz <see cref="T:System.Byte" /> a ser codificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1502f-173">The offset, in bytes, from the start of the <see cref="T:System.Byte" /> array to encode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="1502f-174">A contagem, em bytes, a ser codificada da matriz <see cref="T:System.Byte" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1502f-174">The count, in bytes, to encode from the <see cref="T:System.Byte" /> array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1502f-175">Converte uma matriz de bytes em uma matriz de bytes codificada em URL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1502f-175">Converts a byte array into a URL-encoded byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1502f-176">Uma matriz <see cref="T:System.Byte" /> codificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1502f-176">An encoded <see cref="T:System.Byte" /> array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1502f-177">Se caracteres como espaços em branco e pontuação são passados em um fluxo HTTP, eles podem ser interpretados incorretamente na extremidade receptora.</span><span class="sxs-lookup"><span data-stu-id="1502f-177">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="1502f-178">Codificação de URL substitui caracteres que não são permitidos em uma URL com equivalentes de entidade de caracteres que consiste de sequências de escape hexadecimal.</span><span class="sxs-lookup"><span data-stu-id="1502f-178">URL encoding replaces characters that are not allowed in a URL with character-entity equivalents consisting of hexadecimal escape sequences.</span></span> <span data-ttu-id="1502f-179">A cadeia de caracteres convertida é estar em conformidade com o formato UTF-8.</span><span class="sxs-lookup"><span data-stu-id="1502f-179">The converted string is expected to conform to the UTF-8 format.</span></span>  
  
 <span data-ttu-id="1502f-180">Codificação de URL substitui todos os códigos de caractere, exceto para letras, números e caracteres de pontuação a seguir:</span><span class="sxs-lookup"><span data-stu-id="1502f-180">URL encoding replaces all character codes except for letters, numbers, and the following punctuation characters:</span></span>  
  
-   <span data-ttu-id="1502f-181">`-` (sinal de subtração)</span><span class="sxs-lookup"><span data-stu-id="1502f-181">`-` (minus sign)</span></span>  
  
-   <span data-ttu-id="1502f-182">`_` (sublinhado)</span><span class="sxs-lookup"><span data-stu-id="1502f-182">`_` (underscore)</span></span>  
  
-   <span data-ttu-id="1502f-183">`.` (período)</span><span class="sxs-lookup"><span data-stu-id="1502f-183">`.` (period)</span></span>  
  
-   <span data-ttu-id="1502f-184">`!` (ponto de exclamação)</span><span class="sxs-lookup"><span data-stu-id="1502f-184">`!` (exclamation point)</span></span>  
  
-   <span data-ttu-id="1502f-185">`*` (asterisco)</span><span class="sxs-lookup"><span data-stu-id="1502f-185">`*` (asterisk)</span></span>  
  
-   <span data-ttu-id="1502f-186">`'` (aspa simples)</span><span class="sxs-lookup"><span data-stu-id="1502f-186">`'` (single quotation mark)</span></span>  
  
-   <span data-ttu-id="1502f-187">`(` e `)` (de abertura e fechamento de parênteses)</span><span class="sxs-lookup"><span data-stu-id="1502f-187">`(` and `)` (opening and closing parentheses)</span></span>  
  
 <span data-ttu-id="1502f-188">Por exemplo, quando inserido em um bloco de texto a ser transmitido em uma URL, os caracteres `<` e `>` são codificados como `%3c` e `%3e`.</span><span class="sxs-lookup"><span data-stu-id="1502f-188">For example, when embedded in a block of text to be transmitted in a URL, the characters `<` and `>` are encoded as `%3c` and `%3e`.</span></span>  
  
 <span data-ttu-id="1502f-189">O <xref:System.Net.WebUtility.UrlDecodeToBytes%2A> método inverte a codificação.</span><span class="sxs-lookup"><span data-stu-id="1502f-189">The <xref:System.Net.WebUtility.UrlDecodeToBytes%2A> method reverses the encoding.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>