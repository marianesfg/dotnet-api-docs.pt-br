<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HttpListenerRequest.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5dd06e30c8855583e2efdc360f33c2a01af00987f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dd06e30c8855583e2efdc360f33c2a01af00987f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.HttpListenerRequest">
          <source>Describes an incoming HTTP request to an <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> object.</source>
          <target state="translated">Descreve uma solicitação HTTP de entrada a um objeto <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Net.HttpListenerRequest">
          <source>This class cannot be inherited.</source>
          <target state="translated">Essa classe não pode ser herdada.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListenerRequest">
          <source>When a client makes a request to a Uniform Resource Identifier (URI) handled by an <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> object, the <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> provides a <ph id="ph3">&lt;xref:System.Net.HttpListenerContext&gt;</ph> object that contains information about the sender, the request, and the response that is sent to the client.</source>
          <target state="translated">Quando um cliente faz uma solicitação para um identificador de recurso uniforme (URI) tratados por um <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> objeto, o <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> fornece um <ph id="ph3">&lt;xref:System.Net.HttpListenerContext&gt;</ph> objeto que contém informações sobre o remetente, a solicitação e resposta que é enviada ao cliente.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListenerRequest">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListenerContext.Request%2A?displayProperty=nameWithType&gt;</ph> property returns the <ph id="ph2">&lt;xref:System.Net.HttpListenerRequest&gt;</ph> object that describes the request.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Net.HttpListenerContext.Request%2A?displayProperty=nameWithType&gt;</ph> propriedade retorna o <ph id="ph2">&lt;xref:System.Net.HttpListenerRequest&gt;</ph> objeto que descreve a solicitação.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListenerRequest">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest&gt;</ph> object contains information about the request, such as the request <ph id="ph2">&lt;xref:System.Net.HttpListenerRequest.HttpMethod%2A&gt;</ph> string, <ph id="ph3">&lt;xref:System.Net.HttpListenerRequest.UserAgent%2A&gt;</ph> string, and request body data (see the <ph id="ph4">&lt;xref:System.Net.HttpListenerRequest.InputStream%2A&gt;</ph> property).</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest&gt;</ph> objeto contém informações sobre a solicitação, como a solicitação <ph id="ph2">&lt;xref:System.Net.HttpListenerRequest.HttpMethod%2A&gt;</ph> cadeia de caracteres, <ph id="ph3">&lt;xref:System.Net.HttpListenerRequest.UserAgent%2A&gt;</ph> de cadeia de caracteres e dados do corpo da solicitação (consulte o <ph id="ph4">&lt;xref:System.Net.HttpListenerRequest.InputStream%2A&gt;</ph> propriedade).</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListenerRequest">
          <source>To reply to the request, you must get the associated response using the <ph id="ph1">&lt;xref:System.Net.HttpListenerContext.Response%2A&gt;</ph> property.</source>
          <target state="translated">Para responder à solicitação, você deve obter a resposta associada usando o <ph id="ph1">&lt;xref:System.Net.HttpListenerContext.Response%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListenerRequest">
          <source>The following code example demonstrates how to receive and respond to a <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest&gt;</ph>.</source>
          <target state="translated">O exemplo de código a seguir demonstra como receber e responder a um <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.AcceptTypes">
          <source>Gets the MIME types accepted by the client.</source>
          <target state="translated">Obtém os tipos MIME aceitos pelo cliente.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.AcceptTypes">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> array that contains the type names specified in the request's <ph id="ph2">&lt;see langword="Accept" /&gt;</ph> header or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if the client request did not include an <ph id="ph4">&lt;see langword="Accept" /&gt;</ph> header.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> matriz que contém os nomes de tipo especificados na solicitação de <ph id="ph2">&lt;see langword="Accept" /&gt;</ph> cabeçalho ou <ph id="ph3">&lt;see langword="null" /&gt;</ph> se a solicitação do cliente não incluiu uma <ph id="ph4">&lt;see langword="Accept" /&gt;</ph> cabeçalho.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.AcceptTypes">
          <source>The <ph id="ph1">`Accept`</ph> header is a string of space-separated Multipurpose Internet Mail Extensions (MIME) type names (for example, <ph id="ph2">`image/jpeg`</ph>), which indicate the MIME types that the client is prepared to accept and process in a response.</source>
          <target state="translated">O <ph id="ph1">`Accept`</ph> cabeçalho é uma cadeia de caracteres dos nomes de tipo de email extensões MIME (Multipurpose Internet) separados por espaços (por exemplo, <ph id="ph2">`image/jpeg`</ph>), que indicam os tipos MIME que o cliente está preparado para aceitar e processar em uma resposta.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.AcceptTypes">
          <source>The <ph id="ph1">`*/*`</ph> entry indicates that the client accepts any MIME type.</source>
          <target state="translated">O <ph id="ph1">`*/*`</ph> entrada indica que o cliente aceita qualquer tipo MIME.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.AcceptTypes">
          <source>For a detailed description of the <ph id="ph1">`Accept`</ph> header, see RFC 2616, available at <bpt id="p1">[</bpt><ph id="ph2">http://www.rfc-editor.org</ph><ept id="p1">](http://www.rfc-editor.org/)</ept>.</source>
          <target state="translated">Para obter uma descrição detalhada do <ph id="ph1">`Accept`</ph> cabeçalho, consulte RFC 2616, disponível em <bpt id="p1">[</bpt> <ph id="ph2">http://www.rfc-editor.org</ph> <ept id="p1">](http://www.rfc-editor.org/)</ept>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.AcceptTypes">
          <source>For a complete list of request headers, see the <ph id="ph1">&lt;xref:System.Net.HttpRequestHeader&gt;</ph> enumeration.</source>
          <target state="translated">Para obter uma lista completa dos cabeçalhos de solicitação, consulte o <ph id="ph1">&lt;xref:System.Net.HttpRequestHeader&gt;</ph> enumeração.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.AcceptTypes">
          <source>The following code example demonstrates using this property.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar essa propriedade.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the operation is complete.</source>
          <target state="translated">Um delegado <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> que faz referência ao método a ser invocado quando a operação é concluída.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)">
          <source>A user-defined object that contains information about the operation.</source>
          <target state="translated">Um objeto definido pelo usuário que contém informações sobre a operação.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)">
          <source>This object is passed to the callback delegate when the operation completes.</source>
          <target state="translated">Este objeto é passado para o delegado callback quando a operação é concluída.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous request for the client's X.509 v.3 certificate.</source>
          <target state="translated">Inicia uma solicitação assíncrona para o certificado X.509 v.3 do cliente.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that indicates the status of the operation.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> que indica o status da operação.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.ClientCertificateError">
          <source>Gets an error code that identifies a problem with the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /&gt;</ph> provided by the client.</source>
          <target state="translated">Obtém um código de erro que identifica um problema com o <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /&gt;</ph> fornecido pelo cliente.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.ClientCertificateError">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value that contains a Windows error code.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> valor que contém um código de erro do Windows.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.ClientCertificateError">
          <source>This property contains a Windows error code returned by the Secure Channel (Schannel) Security Support Provider Interface (SSPI), which is used to validate the certificate.</source>
          <target state="translated">Esta propriedade contém um código de erro do Windows retornado por canal seguro (Schannel) segurança suporte provedor de Interface (SSPI), que é usado para validar o certificado.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.ClientCertificateError">
          <source>For more information about SSPI support for Schannel, see "Creating a Secure Connection Using Schannel" in the Security documentation at <bpt id="p1">[</bpt><ph id="ph1">http://msdn.microsoft.com/library</ph><ept id="p1">](http://msdn.microsoft.com/library)</ept>.</source>
          <target state="translated">Para obter mais informações sobre o suporte SSPI de Schannel, consulte "Criando um seguro Conexão usando Schannel" na documentação de segurança em <bpt id="p1">[</bpt> <ph id="ph1">http://msdn.microsoft.com/library</ph> <ept id="p1">](http://msdn.microsoft.com/library)</ept>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.ClientCertificateError">
          <source>The following code example checks this property to determine whether the request includes a valid client certificate.</source>
          <target state="translated">O exemplo de código a seguir verifica essa propriedade para determinar se a solicitação inclui um certificado de cliente válido.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.ClientCertificateError">
          <source>The client certificate has not been initialized yet by a call to the <ph id="ph1">&lt;see cref="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" /&gt;</ph> or <ph id="ph2">&lt;see cref="M:System.Net.HttpListenerRequest.GetClientCertificate" /&gt;</ph> methods</source>
          <target state="translated">O certificado do cliente ainda não foi inicializado por uma chamada para os métodos <ph id="ph1">&lt;see cref="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" /&gt;</ph> ou <ph id="ph2">&lt;see cref="M:System.Net.HttpListenerRequest.GetClientCertificate" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.ClientCertificateError">
          <source>-or -</source>
          <target state="translated">-ou-</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.ClientCertificateError">
          <source>The operation is still in progress.</source>
          <target state="translated">A operação ainda está em andamento.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.ContentEncoding">
          <source>Gets the content encoding that can be used with data sent with the request</source>
          <target state="translated">Obtém a codificação do conteúdo que pode ser usado com os dados enviados com a solicitação</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.ContentEncoding">
          <source>An <ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph> object suitable for use with the data in the <ph id="ph2">&lt;see cref="P:System.Net.HttpListenerRequest.InputStream" /&gt;</ph> property.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph> adequado para uso com os dados do objeto de <ph id="ph2">&lt;see cref="P:System.Net.HttpListenerRequest.InputStream" /&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.ContentEncoding">
          <source>An <ph id="ph1">&lt;xref:System.Text.Encoding&gt;</ph> object can be used to convert byte sequences into character sets (code pages) and characters into byte sequences.</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.Text.Encoding&gt;</ph> objeto pode ser usado para converter as sequências de bytes em conjuntos de caracteres (páginas de código) e caracteres em sequências de bytes.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.ContentEncoding">
          <source>This property uses the charset value from the <ph id="ph1">`Content-Type`</ph> header to determine the encoding.</source>
          <target state="translated">Essa propriedade usará o valor de conjunto de caracteres do <ph id="ph1">`Content-Type`</ph> cabeçalho para determinar a codificação.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.ContentEncoding">
          <source>If that information is not available, this property returns <ph id="ph1">&lt;xref:System.Text.Encoding.Default%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Se essa informação não estiver disponível, essa propriedade retornará <ph id="ph1">&lt;xref:System.Text.Encoding.Default%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.ContentEncoding">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.ContentEncoding%2A&gt;</ph> property.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar o <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.ContentEncoding%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.ContentLength64">
          <source>Gets the length of the body data included in the request.</source>
          <target state="translated">Obtém o comprimento do corpo de dados incluído na solicitação.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.ContentLength64">
          <source>The value from the request's <ph id="ph1">&lt;see langword="Content-Length" /&gt;</ph> header.</source>
          <target state="translated">O valor da solicitação de <ph id="ph1">&lt;see langword="Content-Length" /&gt;</ph> cabeçalho.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.ContentLength64">
          <source>This value is -1 if the content length is not known.</source>
          <target state="translated">Esse valor é -1 se o comprimento do conteúdo não for conhecido.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.ContentLength64">
          <source>The <ph id="ph1">`Content-Length`</ph> header expresses the length, in bytes, of the body data that accompanies the request.</source>
          <target state="translated">O <ph id="ph1">`Content-Length`</ph> cabeçalho expressa o comprimento, em bytes, dos dados de corpo que acompanha a solicitação.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.ContentLength64">
          <source>For a complete list of request headers, see the <ph id="ph1">&lt;xref:System.Net.HttpRequestHeader&gt;</ph> enumeration.</source>
          <target state="translated">Para obter uma lista completa dos cabeçalhos de solicitação, consulte o <ph id="ph1">&lt;xref:System.Net.HttpRequestHeader&gt;</ph> enumeração.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.ContentLength64">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.ContentLength64%2A&gt;</ph> property while processing body data.</source>
          <target state="translated">O seguinte exemplo de código usa o <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.ContentLength64%2A&gt;</ph> propriedade durante o processamento de dados do corpo.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.ContentType">
          <source>Gets the MIME type of the body data included in the request.</source>
          <target state="translated">Obtém o tipo MIME do corpo de dados incluído na solicitação.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.ContentType">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the text of the request's <ph id="ph2">&lt;see langword="Content-Type" /&gt;</ph> header.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contém o texto da solicitação de <ph id="ph2">&lt;see langword="Content-Type" /&gt;</ph> cabeçalho.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.ContentType">
          <source>If a client includes body data in a request, it declares the Multipurpose Internet Mail Extensions (MIME) type of the body data in the <ph id="ph1">`Content-Type`</ph> header.</source>
          <target state="translated">Se um cliente inclui o corpo de dados em uma solicitação, ele declara o tipo de email extensões MIME (Multipurpose Internet) dos dados no corpo de <ph id="ph1">`Content-Type`</ph> cabeçalho.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.ContentType">
          <source>For example, the default MIME type of data returned from a Web form using the <ph id="ph1">`POST`</ph> method is <ph id="ph2">`application/x-www-form-urlencoded`</ph>.</source>
          <target state="translated">Por exemplo, o tipo MIME padrão dos dados retornados de um formulário da Web usando o <ph id="ph1">`POST`</ph> método é <ph id="ph2">`application/x-www-form-urlencoded`</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.ContentType">
          <source>For a complete list of request headers, see the <ph id="ph1">&lt;xref:System.Net.HttpRequestHeader&gt;</ph> enumeration and RFC 2616, available at <bpt id="p1">[</bpt><ph id="ph2">http://www.rfc-editor.org</ph><ept id="p1">](http://www.rfc-editor.org/)</ept>.</source>
          <target state="translated">Para obter uma lista completa dos cabeçalhos de solicitação, consulte o <ph id="ph1">&lt;xref:System.Net.HttpRequestHeader&gt;</ph> enumeração e RFC 2616, disponível em <bpt id="p1">[</bpt> <ph id="ph2">http://www.rfc-editor.org</ph> <ept id="p1">](http://www.rfc-editor.org/)</ept>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.ContentType">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.ContentType%2A&gt;</ph> is null when there is no <ph id="ph2">`Content-Type`</ph> header in the request.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.ContentType%2A&gt;</ph> é nulo quando não há nenhum <ph id="ph2">`Content-Type`</ph> cabeçalho na solicitação.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.ContentType">
          <source>The following code example demonstrates how to use this property.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar essa propriedade.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.Cookies">
          <source>Gets the cookies sent with the request.</source>
          <target state="translated">Obtém os cookies enviados com a solicitação.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Cookies">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.CookieCollection" /&gt;</ph> that contains cookies that accompany the request.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Net.CookieCollection" /&gt;</ph> que contém os cookies que acompanham a solicitação.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Cookies">
          <source>This property returns an empty collection if the request does not contain cookies.</source>
          <target state="translated">Essa propriedade retorna uma coleção vazia se a solicitação não tem cookies.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Cookies">
          <source>A cookie is name/value text data from a Web server that is stored on the local (client) computer.</source>
          <target state="translated">Um cookie é dados de texto de nome/valor de um servidor Web que é armazenado no computador local (cliente).</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Cookies">
          <source>The following code example displays the values of cookies sent with the request.</source>
          <target state="translated">O exemplo de código a seguir exibe os valores de cookies enviados com a solicitação.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerRequest.EndGetClientCertificate(System.IAsyncResult)">
          <source>The pending request for the certificate.</source>
          <target state="translated">A solicitação pendente para o certificado.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerRequest.EndGetClientCertificate(System.IAsyncResult)">
          <source>Ends an asynchronous request for the client's X.509 v.3 certificate.</source>
          <target state="translated">Termina uma solicitação assíncrona para o certificado X.509 v.3 do cliente.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerRequest.EndGetClientCertificate(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object that is returned when the operation started.</source>
          <target state="translated">O objeto <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> retornado quando a operação foi iniciada.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerRequest.EndGetClientCertificate(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerRequest.EndGetClientCertificate(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> was not obtained by calling <ph id="ph2">&lt;see cref="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" /&gt;</ph><ph id="ph3">&lt;paramref name="e." /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> não foi obtido chamando-se <ph id="ph2">&lt;see cref="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" /&gt;</ph><ph id="ph3">&lt;paramref name="e." /&gt;</ph></target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerRequest.EndGetClientCertificate(System.IAsyncResult)">
          <source>This method was already called for the operation identified by <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph>.</source>
          <target state="translated">Esse método já foi chamado para a operação identificada por <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerRequest.GetClientCertificate">
          <source>Retrieves the client's X.509 v.3 certificate.</source>
          <target state="translated">Recupera o certificado X.509 v.3 do cliente.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerRequest.GetClientCertificate">
          <source>A <ph id="ph1">&lt;see cref="N:System.Security.Cryptography.X509Certificates" /&gt;</ph> object that contains the client's X.509 v.3 certificate.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="N:System.Security.Cryptography.X509Certificates" /&gt;</ph> que contém o certificado X.509 v.3 do cliente.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerRequest.GetClientCertificate">
          <source>This method blocks until the certificate is retrieved.</source>
          <target state="translated">Esse método bloqueia até que o certificado é recuperado.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerRequest.GetClientCertificate">
          <source>A call to this method to retrieve the client's X.509 v.3 certificate is in progress and therefore another call to this method cannot be made.</source>
          <target state="translated">Uma chamada para esse método para recuperar o certificado X.509 v.3 do cliente está em andamento e, portanto, outra chamada para esse método não pode ser feita.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerRequest.GetClientCertificateAsync">
          <source>Retrieves the client's X.509 v.3 certificate as an asynchronous operation.</source>
          <target state="translated">Recupera o certificado X.509 v.3 do cliente como uma operação assíncrona.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerRequest.GetClientCertificateAsync">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>.</source>
          <target state="translated">Retorna <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerRequest.GetClientCertificateAsync">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">O objeto de tarefa que representa a operação assíncrona.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListenerRequest.GetClientCertificateAsync">
          <source>The <ph id="ph1">&lt;see cref="P:System.Threading.Tasks.Task`1.Result" /&gt;</ph> property on the task object returns a <ph id="ph2">&lt;see cref="N:System.Security.Cryptography.X509Certificates" /&gt;</ph> object that contains the client's X.509 v.3 certificate.</source>
          <target state="translated">A propriedade <ph id="ph1">&lt;see cref="P:System.Threading.Tasks.Task`1.Result" /&gt;</ph> no objeto de tarefa retorna um objeto <ph id="ph2">&lt;see cref="N:System.Security.Cryptography.X509Certificates" /&gt;</ph> que contém o certificado X.509 v.3 do cliente.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerRequest.GetClientCertificateAsync">
          <source>This operation will not block.</source>
          <target state="translated">Essa operação não será bloqueada.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerRequest.GetClientCertificateAsync">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete when the certificate has been retrieved.</source>
          <target state="translated">Retornado <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> objeto será concluída quando o certificado foi recuperado.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListenerRequest.GetClientCertificateAsync">
          <source>If a call to this method to retrieve the client's X.509 v.3 certificate is in progress, then another call to this method cannot be made.</source>
          <target state="translated">Se uma chamada para esse método para recuperar o certificado do cliente x. 509 v. 3 está em andamento, outra chamada para esse método não pode ser feita.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.HasEntityBody">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that indicates whether the request has associated body data.</source>
          <target state="translated">Obtém um valor <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> que indica se a solicitação tem um corpo de dados associado.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.HasEntityBody">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the request has associated body data; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se a solicitação associada a dados do corpo; Caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.HasEntityBody">
          <source>A request that sends data to the server using the <ph id="ph1">`POST`</ph> method, for example, should have an entity body.</source>
          <target state="translated">Uma solicitação que envia dados ao servidor usando o <ph id="ph1">`POST`</ph> método, por exemplo, deve ter um corpo de entidade.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.HasEntityBody">
          <source>The following code example demonstrates using this property.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar essa propriedade.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.Headers">
          <source>Gets the collection of header name/value pairs sent in the request.</source>
          <target state="translated">Obtém a coleção de pares de nome/valor do cabeçalho enviado na solicitação.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Headers">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.WebHeaderCollection" /&gt;</ph> that contains the HTTP headers included in the request.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Net.WebHeaderCollection" /&gt;</ph> que contém os cabeçalhos HTTP incluídos na solicitação.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Headers">
          <source>Request headers contain metadata information.</source>
          <target state="translated">Cabeçalhos de solicitação contém informações de metadados.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Headers">
          <source>For example, headers can contain the Uniform Resource Identifier (URI) of the resource that referred the client to the server, the identity of the user agent employed by the client, and the acceptable MIME types for data in the response body.</source>
          <target state="translated">Por exemplo, cabeçalhos podem conter o identificador de URI (Uniform Resource) do recurso que chamadas, o cliente para o servidor, a identidade do agente de usuário utilizados pelo cliente e MIME aceitável tipos de dados no corpo da resposta.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Headers">
          <source>For a complete list of request headers, see the <ph id="ph1">&lt;xref:System.Net.HttpRequestHeader&gt;</ph> enumeration.</source>
          <target state="translated">Para obter uma lista completa dos cabeçalhos de solicitação, consulte o <ph id="ph1">&lt;xref:System.Net.HttpRequestHeader&gt;</ph> enumeração.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Headers">
          <source>The following code example displays all the information in a given <ph id="ph1">&lt;xref:System.Net.WebHeaderCollection&gt;</ph> object.</source>
          <target state="translated">O exemplo de código a seguir exibe todas as informações em um determinado <ph id="ph1">&lt;xref:System.Net.WebHeaderCollection&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.HttpMethod">
          <source>Gets the HTTP method specified by the client.</source>
          <target state="translated">Obtém o método HTTP especificado pelo cliente.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.HttpMethod">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the method used in the request.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contém o método usado na solicitação.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.HttpMethod">
          <source>The HTTP method is typically GET or POST, depending on the action desired by the client.</source>
          <target state="translated">O método HTTP normalmente é GET ou POST, dependendo da ação desejada pelo cliente.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.HttpMethod">
          <source>The following code example demonstrates using this property.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar essa propriedade.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.InputStream">
          <source>Gets a stream that contains the body data sent by the client.</source>
          <target state="translated">Obtém um fluxo que contém os dados do corpo enviados pelo cliente.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.InputStream">
          <source>A readable <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object that contains the bytes sent by the client in the body of the request.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> legível que contém os bytes enviados pelo cliente no corpo da solicitação.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.InputStream">
          <source>This property returns <ph id="ph1">&lt;see cref="F:System.IO.Stream.Null" /&gt;</ph> if no data is sent with the request.</source>
          <target state="translated">Essa propriedade retornará <ph id="ph1">&lt;see cref="F:System.IO.Stream.Null" /&gt;</ph> se nenhum dado for enviado com a solicitação.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.InputStream">
          <source>If the client transmits data (for example, using the HTTP <ph id="ph1">`POST`</ph> method), the stream returned by this method contains that data.</source>
          <target state="translated">Se o cliente transmite dados (por exemplo, usando o HTTP <ph id="ph1">`POST`</ph> método), o fluxo retornado por este método contém os dados.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.InputStream">
          <source>Closing the request does not close the stream returned by this property.</source>
          <target state="translated">A solicitação de fechamento não fecha o fluxo retornado por essa propriedade.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.InputStream">
          <source>When you no longer need the stream, you should close it by calling the <ph id="ph1">&lt;xref:System.IO.Stream.Close%2A&gt;</ph> method.</source>
          <target state="translated">Quando você não precisa mais o fluxo, você deve fechá-lo chamando o <ph id="ph1">&lt;xref:System.IO.Stream.Close%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.InputStream">
          <source>The following code example demonstrates using this property to read the data sent with a request.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar essa propriedade para ler os dados enviados com uma solicitação.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.InputStream">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Esse membro emite o rastreamento de informações quando você ativa o rastreamento de rede em seu aplicativo.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.InputStream">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>rastreamento de rede no .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.IsAuthenticated">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that indicates whether the client sending this request is authenticated.</source>
          <target state="translated">Obtém um valor <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> que indica se o cliente enviando essa solicitação está autenticado.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.IsAuthenticated">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the client was authenticated; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se o cliente foi autenticado; Caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.IsAuthenticated">
          <source>Your application requests client authentication using the <ph id="ph1">&lt;xref:System.Net.HttpListener.AuthenticationSchemes%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A&gt;</ph> property.</source>
          <target state="translated">O aplicativo solicita a autenticação de cliente usando o <ph id="ph1">&lt;xref:System.Net.HttpListener.AuthenticationSchemes%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.IsAuthenticated">
          <source>Your application does not receive an <ph id="ph1">&lt;xref:System.Net.HttpListenerContext&gt;</ph> for requests from clients that are not successfully authenticated.</source>
          <target state="translated">Seu aplicativo não recebe um <ph id="ph1">&lt;xref:System.Net.HttpListenerContext&gt;</ph> para solicitações de clientes que não são autenticadas com êxito.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.IsAuthenticated">
          <source>The following code example displays the value of the <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.IsAuthenticated%2A&gt;</ph> property.</source>
          <target state="translated">O exemplo de código a seguir exibe o valor de <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.IsAuthenticated%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.IsLocal">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that indicates whether the request is sent from the local computer.</source>
          <target state="translated">Obtém um valor <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> que indica se a solicitação foi enviada do computador local.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.IsLocal">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the request originated on the same computer as the <ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> object that provided the request; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se a solicitação teve origem no mesmo computador como o <ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> objeto fornecido a solicitação; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.IsLocal">
          <source>Applications can use this property to perform special processing when requests are from the local computer.</source>
          <target state="translated">Aplicativos podem usar essa propriedade para executar um processamento especial quando solicitações do computador local.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.IsLocal">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.IsLocal%2A&gt;</ph> property.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar o <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.IsLocal%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.IsSecureConnection">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that indicates whether the TCP connection used to send the request is using the Secure Sockets Layer (SSL) protocol.</source>
          <target state="translated">Obtém um valor <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> que indica se a conexão TCP usada para enviar a solicitação está usando o protocolo SSL.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.IsSecureConnection">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the TCP connection is using SSL; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se a conexão TCP está usando SSL; Caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.IsSecureConnection">
          <source>To request a secure connection, the client request uses <ph id="ph1">&lt;xref:System.Uri.UriSchemeHttps&gt;</ph> instead of <ph id="ph2">&lt;xref:System.Uri.UriSchemeHttp&gt;</ph>.</source>
          <target state="translated">Para solicitar uma conexão segura, a solicitação do cliente usa <ph id="ph1">&lt;xref:System.Uri.UriSchemeHttps&gt;</ph> em vez de <ph id="ph2">&lt;xref:System.Uri.UriSchemeHttp&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.IsSecureConnection">
          <source>If the connection cannot be established using SSL, the client receives a <ph id="ph1">&lt;xref:System.Net.WebException&gt;</ph> that provides information about the error.</source>
          <target state="translated">Se a conexão não pode ser estabelecida usando SSL, o cliente recebe um <ph id="ph1">&lt;xref:System.Net.WebException&gt;</ph> que fornece informações sobre o erro.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.IsSecureConnection">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.IsSecureConnection%2A&gt;</ph> property.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar o <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.IsSecureConnection%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.IsWebSocketRequest">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that indicates whether the TCP connection was  a WebSocket request.</source>
          <target state="translated">Obtém um valor <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> que indica se a conexão TCP foi uma solicitação WebSocket.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.IsWebSocketRequest">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>.</source>
          <target state="translated">Retorna <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.IsWebSocketRequest">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the TCP connection is a WebSocket request; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se a conexão TCP é uma solicitação WebSocket; Caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.KeepAlive">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that indicates whether the client requests a persistent connection.</source>
          <target state="translated">Obtém um valor <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> que indica se o cliente solicita uma conexão persistente.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.KeepAlive">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the connection should be kept open; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se a conexão deve ser mantido aberto. Caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.KeepAlive">
          <source>If an HTTP client and server expect to exchange data multiple times in a short time period, a persistent connection speeds up their communications by allowing them to avoid the overhead required to open and close a TCP connection for each message.</source>
          <target state="translated">Se um cliente HTTP e o servidor esperam trocar dados várias vezes em um curto período de tempo, uma conexão persistente acelera suas comunicações, permitindo que eles evitar a sobrecarga necessária para abrir e fechar uma conexão TCP para cada mensagem.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.KeepAlive">
          <source>For clients using HTTP/1.1, the default value for this property is <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Para clientes usando HTTP/1.1, o valor padrão dessa propriedade é <ph id="ph1">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.KeepAlive">
          <source>The following code example demonstrates using this property.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar essa propriedade.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.LocalEndPoint">
          <source>Get the server IP address and port number to which the request is directed.</source>
          <target state="translated">Obtém o endereço IP e número da porta do servidor para o qual a solicitação é direcionada.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.LocalEndPoint">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph> that represents the IP address that the request is sent to.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph> que representa o endereço IP que a solicitação é enviada para.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.LocalEndPoint">
          <source>This property is useful when you want to respond to requests based on the way they are addressed.</source>
          <target state="translated">Essa propriedade é útil quando você deseja responder a solicitações com base na maneira como eles são resolvidos.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.LocalEndPoint">
          <source>The following code example demonstrates using this property.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar essa propriedade.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.ProtocolVersion">
          <source>Gets the HTTP version used by the requesting client.</source>
          <target state="translated">Obtém a versão HTTP usada pelo cliente solicitante.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.ProtocolVersion">
          <source>A <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> that identifies the client's version of HTTP.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Version" /&gt;</ph> que identifica a versão do cliente de HTTP.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.ProtocolVersion">
          <source>The capabilities of different HTTP versions are specified in the documents available at <bpt id="p1">[</bpt><ph id="ph1">http://www.rfc-editor.org</ph><ept id="p1">](http://www.rfc-editor.org/)</ept>.</source>
          <target state="translated">Os recursos de versões diferentes de HTTP são especificados nos documentos disponíveis em <bpt id="p1">[</bpt> <ph id="ph1">http://www.rfc-editor.org</ph> <ept id="p1">](http://www.rfc-editor.org/)</ept>.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.ProtocolVersion">
          <source>The following code example demonstrates using this property.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar essa propriedade.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.QueryString">
          <source>Gets the query string included in the request.</source>
          <target state="translated">Obtém a cadeia de caracteres de consulta incluída na solicitação.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.QueryString">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> object that contains the query data included in the request <ph id="ph2">&lt;see cref="P:System.Net.HttpListenerRequest.Url" /&gt;</ph>.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> que contém os dados da consulta incluída na solicitação <ph id="ph2">&lt;see cref="P:System.Net.HttpListenerRequest.Url" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.QueryString">
          <source>In a URL, the query information is separated from the path information by a question mark (?).</source>
          <target state="translated">Em uma URL, as informações de consulta são separadas das informações de caminho por um ponto de interrogação (?).</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.QueryString">
          <source>Name/value pairs are separated by an equals sign (=).</source>
          <target state="translated">Pares de nome/valor são separados por um sinal de igual (=).</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.QueryString">
          <source>To access the query data as a single string, get the <ph id="ph1">&lt;xref:System.Uri.Query%2A&gt;</ph> property value from the <ph id="ph2">&lt;xref:System.Uri&gt;</ph> object returned by <ph id="ph3">&lt;xref:System.Net.HttpListenerRequest.Url%2A&gt;</ph>.</source>
          <target state="translated">Para acessar os dados da consulta como uma única cadeia de caracteres, obter o <ph id="ph1">&lt;xref:System.Uri.Query%2A&gt;</ph> valor de propriedade de <ph id="ph2">&lt;xref:System.Uri&gt;</ph> objeto retornado por <ph id="ph3">&lt;xref:System.Net.HttpListenerRequest.Url%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.QueryString">
          <source>Queries without an equal sign (example: <bpt id="p1">[</bpt><ph id="ph1">http://www.contoso.com/query.htm?Name</ph><ept id="p1">](http://www.contoso.com/query.htm?Name)</ept> ) are added to the <ph id="ph2">`null`</ph> key in the <ph id="ph3">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.</source>
          <target state="translated">Consultas sem um sinal de igual (exemplo: <bpt id="p1">[</bpt> <ph id="ph1">http://www.contoso.com/query.htm?Name</ph> <ept id="p1">](http://www.contoso.com/query.htm?Name)</ept> ) são adicionados para o <ph id="ph2">`null`</ph> chave no <ph id="ph3">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.QueryString">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.QueryString%2A&gt;</ph> property.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar o <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.QueryString%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.RawUrl">
          <source>Gets the URL information (without the host and port) requested by the client.</source>
          <target state="translated">Obtém as informações de URL (sem o host e a porta) solicitadas pelo cliente.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.RawUrl">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the raw URL for this request.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contém a URL bruta dessa solicitação.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.RawUrl">
          <source>The raw URL is defined as the part of the URL following the domain information.</source>
          <target state="translated">A URL bruta é definida como parte da URL a seguir as informações de domínio.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.RawUrl">
          <source>In the URL string <ph id="ph1">`http://www.contoso.com/articles/recent.aspx`</ph>, the raw URL is <ph id="ph2">`/articles/recent.aspx`</ph>.</source>
          <target state="translated">Na cadeia de caracteres de URL <ph id="ph1">`http://www.contoso.com/articles/recent.aspx`</ph>, a URL bruta é <ph id="ph2">`/articles/recent.aspx`</ph>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.RawUrl">
          <source>The raw URL includes the query string, if present.</source>
          <target state="translated">A URL bruta inclui a cadeia de caracteres de consulta, se presente.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.RawUrl">
          <source>To obtain the host and port information, use the <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A&gt;</ph> property.</source>
          <target state="translated">Para obter as informações de porta e host, use o <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.RawUrl">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.RawUrl%2A&gt;</ph> property.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar o <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.RawUrl%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.RemoteEndPoint">
          <source>Gets the client IP address and port number from which the request originated.</source>
          <target state="translated">Obtém o endereço IP e o número da porta do cliente que originou a solicitação.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.RemoteEndPoint">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph> that represents the IP address and port number from which the request originated.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph> que representa o endereço IP e o número da porta que originou a solicitação.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.RemoteEndPoint">
          <source>The following code example demonstrates using this property.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar essa propriedade.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.RequestTraceIdentifier">
          <source>Gets the request identifier of the incoming HTTP request.</source>
          <target state="translated">Obtém o identificador da solicitação HTTP de entrada.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.RequestTraceIdentifier">
          <source>A <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> object that contains the identifier of the HTTP request.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> objeto que contém o identificador da solicitação HTTP.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.ServiceName">
          <source>Gets the Service Provider Name (SPN) that the client sent on the request.</source>
          <target state="translated">Obtém o SPN (nome do provedor de serviços) que o cliente enviou na solicitação.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.ServiceName">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the SPN the client sent on the request.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contém o SPN do cliente enviado na solicitação.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.ServiceName">
          <source>An application could use the <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.ServiceName%2A&gt;</ph> property to perform custom Service Provide Name (SPN) validation.</source>
          <target state="translated">Um aplicativo pode usar o <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.ServiceName%2A&gt;</ph> propriedade para executar a validação personalizada de nome de fornecer serviço (SPN).</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.TransportContext">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Net.TransportContext" /&gt;</ph> for the client request.</source>
          <target state="translated">Obtém o <ph id="ph1">&lt;see cref="T:System.Net.TransportContext" /&gt;</ph> da solicitação do cliente.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.TransportContext">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.TransportContext" /&gt;</ph> object for the client request.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Net.TransportContext" /&gt;</ph> objeto para a solicitação do cliente.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.TransportContext">
          <source>The <ph id="ph1">&lt;xref:System.Net.TransportContext&gt;</ph> property can be used to retrieve the channel binding token (CBT) for an <ph id="ph2">&lt;xref:System.Net.HttpListenerRequest&gt;</ph> which was sent using HTTPS.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Net.TransportContext&gt;</ph> propriedade pode ser usada para recuperar o token de associação de canal (CBT) para um <ph id="ph2">&lt;xref:System.Net.HttpListenerRequest&gt;</ph> que foi enviado por meio de HTTPS.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.TransportContext">
          <source>An application could use the <ph id="ph1">&lt;xref:System.Net.TransportContext&gt;</ph> property to perform custom authentication using calls to the native Win32 <bpt id="p1">[</bpt>AcceptSecurityContext<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=147021)</ept> function.</source>
          <target state="translated">Um aplicativo pode usar o <ph id="ph1">&lt;xref:System.Net.TransportContext&gt;</ph> propriedade para realizar autenticação personalizada usando chamadas para o Win32 nativo <bpt id="p1">[</bpt>AcceptSecurityContext<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=147021)</ept> função.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.TransportContext">
          <source>If an application attempts to retrieve the channel binding token (CBT) from this <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.TransportContext%2A&gt;</ph> property using the <ph id="ph2">&lt;xref:System.Net.TransportContext.GetChannelBinding%2A&gt;</ph> method and the <ph id="ph3">&lt;xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind&gt;</ph> is not <ph id="ph4">&lt;xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint&gt;</ph>, then the <ph id="ph5">&lt;xref:System.Net.HttpListenerRequest&gt;</ph> will throw <ph id="ph6">&lt;xref:System.NotSupportedException&gt;</ph>.</source>
          <target state="translated">Se um aplicativo tenta recuperar o token de associação de canal (CBT) neste <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.TransportContext%2A&gt;</ph> propriedade usando o <ph id="ph2">&lt;xref:System.Net.TransportContext.GetChannelBinding%2A&gt;</ph> método e o <ph id="ph3">&lt;xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind&gt;</ph> não é <ph id="ph4">&lt;xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint&gt;</ph>, em seguida, o <ph id="ph5">&lt;xref:System.Net.HttpListenerRequest&gt;</ph> lançará <ph id="ph6">&lt;xref:System.NotSupportedException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.TransportContext">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest&gt;</ph> overrides the <ph id="ph2">&lt;xref:System.Net.TransportContext.GetChannelBinding%2A&gt;</ph> method with an internal implementation.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest&gt;</ph> substitui o <ph id="ph2">&lt;xref:System.Net.TransportContext.GetChannelBinding%2A&gt;</ph> método com uma implementação interna.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.Url">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> object requested by the client.</source>
          <target state="translated">Obtém o objeto <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> solicitado pelo cliente.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>A <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> object that identifies the resource requested by the client.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> que identifica o recurso solicitado pelo cliente.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.Url%2A&gt;</ph> property allows you to obtain all the information available from a <ph id="ph2">&lt;xref:System.Uri&gt;</ph> object.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.Url%2A&gt;</ph> propriedade permite que você obtenha todas as informações disponíveis de um <ph id="ph2">&lt;xref:System.Uri&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>If you need to know only the raw text of the URI request, consider using the <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.RawUrl%2A&gt;</ph> property instead.</source>
          <target state="translated">Se você precisa saber apenas o texto não processado da solicitação de URI, considere o uso de <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.RawUrl%2A&gt;</ph> propriedade em vez disso.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.Url%2A&gt;</ph> property is null if the <ph id="ph2">&lt;xref:System.Uri&gt;</ph> from the client could not be parsed.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.Url%2A&gt;</ph> propriedade será nulo se o <ph id="ph2">&lt;xref:System.Uri&gt;</ph> do cliente não pôde ser analisado.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>The <ph id="ph1">&lt;xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A&gt;</ph> property indicates if <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> uses the raw unescaped URI instead of the converted URI where any percent-encoded values are converted and other normalization steps are taken.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A&gt;</ph> propriedade indica se <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> usa o URI de escape bruto em vez do URI convertido em que quaisquer valores codificados por percentual são convertidos e outras etapas de normalização são obtidas.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>When a <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> instance receives a request through the <ph id="ph2">`http.sys`</ph> service, it creates an instance of the URI string provided by <ph id="ph3">`http.sys`</ph>, and exposes it as the <ph id="ph4">&lt;xref:System.Net.HttpListenerRequest.Url%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Quando um <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> instância recebe uma solicitação por meio de <ph id="ph2">`http.sys`</ph> serviço, ele cria uma instância da cadeia de caracteres URI fornecida pelo <ph id="ph3">`http.sys`</ph>e o expõe como o <ph id="ph4">&lt;xref:System.Net.HttpListenerRequest.Url%2A?displayProperty=nameWithType&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>The <ph id="ph1">`http.sys`</ph> service exposes two request URI strings:</source>
          <target state="translated">O <ph id="ph1">`http.sys`</ph> serviço expõe duas cadeias de caracteres URI de solicitação:</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>Raw URI</source>
          <target state="translated">URI bruto</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>Converted URI</source>
          <target state="translated">URI convertido</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>The raw URI is the <ph id="ph1">&lt;xref:System.Uri?displayProperty=nameWithType&gt;</ph> provided in the request line of a HTTP request:</source>
          <target state="translated">O URI bruto é o <ph id="ph1">&lt;xref:System.Uri?displayProperty=nameWithType&gt;</ph> fornecido na linha de solicitação de uma solicitação HTTP:</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>The raw URI provided by <ph id="ph1">`http.sys`</ph> for the request mentioned above, is "/path/".</source>
          <target state="translated">O URI bruto fornecido pelo <ph id="ph1">`http.sys`</ph> para a solicitação mencionada acima, é "/ caminho /".</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>This represents the string following the HTTP verb as it was sent over the network.</source>
          <target state="translated">Isso representa a cadeia de caracteres após o verbo HTTP, como ele foi enviado pela rede.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>The <ph id="ph1">`http.sys`</ph> service creates a converted URI from the information provided in the request using the URI provided in the HTTP request line and the Host header to determine the origin server the request should be forwarded to.</source>
          <target state="translated">O <ph id="ph1">`http.sys`</ph> serviço cria um URI convertido a partir das informações fornecidas na solicitação usando o URI fornecido na linha da solicitação HTTP e o cabeçalho de Host para determinar a solicitação do servidor de origem deve ser encaminhado.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>This is done by comparing the information from the request with a set of registered URI prefixes.</source>
          <target state="translated">Isso é feito comparando as informações da solicitação com um conjunto de prefixos registrados do URI.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>In order to be able to compare those values, some normalization to the request needs to be done.</source>
          <target state="translated">Para poder comparar esses valores, alguns normalização para a solicitação precisa ser feito.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>For the sample above the converted URI would be as follows:</source>
          <target state="translated">Para o exemplo acima convertido URI seria a seguinte:</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>The <ph id="ph1">`http.sys`</ph> service combines the <ph id="ph2">&lt;xref:System.Uri.Host%2A?displayProperty=nameWithType&gt;</ph> property value and the string in the request line to create a converted URI.</source>
          <target state="translated">O <ph id="ph1">`http.sys`</ph> serviço combina o <ph id="ph2">&lt;xref:System.Uri.Host%2A?displayProperty=nameWithType&gt;</ph> o valor da propriedade e a cadeia de caracteres na linha da solicitação para criar um URI convertido.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>In addition, <ph id="ph1">`http.sys`</ph> and the <ph id="ph2">&lt;xref:System.Uri?displayProperty=nameWithType&gt;</ph> class also do the following:</source>
          <target state="translated">Além disso, <ph id="ph1">`http.sys`</ph> e <ph id="ph2">&lt;xref:System.Uri?displayProperty=nameWithType&gt;</ph> classe também fazer o seguinte:</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>Un-escapes all percent encoded values.</source>
          <target state="translated">Cancelar-ignora a porcentagem de todos os valores codificados.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>Converts percent-encoded non-ASCII characters into a UTF-16 character representation.</source>
          <target state="translated">Converte codificados por percentual contém caracteres não ASCII em uma representação de caractere UTF-16.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>Note that UTF-8 and ANSI/DBCS characters are supported as well as Unicode characters (Unicode encoding using the %uXXXX format).</source>
          <target state="translated">Observe que há suporte para caracteres UTF-8 e ANSI DBCS, bem como caracteres Unicode (codificação Unicode usando o formato de uXXXX %).</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>Executes other normalization steps, like path compression.</source>
          <target state="translated">Executa outras etapas de normalização, como compactação de caminho.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>Since the request doesn't contain any information about the encoding used for percent-encoded values, it may not be possible to determine the correct encoding just by parsing the percent-encoded values.</source>
          <target state="translated">Desde que a solicitação não contém todas as informações sobre a codificação usada para valores codificados por percentual, pode não ser possível determinar a codificação correta analisando apenas os valores codificados por porcentagem.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>Therefore <ph id="ph1">`http.sys`</ph> provides two registry keys for modifying the process:</source>
          <target state="translated">Portanto, <ph id="ph1">`http.sys`</ph> fornece duas chaves do registro para modificar o processo:</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>Registry Key</source>
          <target state="translated">Chave do Registro</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>Default Value</source>
          <target state="translated">Valor padrão</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>Description</source>
          <target state="translated">Descrição</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>EnableNonUTF8</source>
          <target state="translated">EnableNonUTF8</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>If zero, <ph id="ph1">`http.sys`</ph> accepts only UTF-8-encoded URLs.</source>
          <target state="translated">Se for zero, <ph id="ph1">`http.sys`</ph> aceita apenas as URLs codificados em UTF-8.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>If non-zero, <ph id="ph1">`http.sys`</ph> also accepts ANSI-encoded or DBCS-encoded URLs in requests.</source>
          <target state="translated">Se diferente de zero, <ph id="ph1">`http.sys`</ph> também aceita URLs codificado em ANSI ou DBCS codificado em solicitações.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>FavorUTF8</source>
          <target state="translated">FavorUTF8</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>If non-zero, <ph id="ph1">`http.sys`</ph> always tries to decode a URL as UTF-8 first; if that conversion fails and EnableNonUTF8 is non-zero, Http.sys then tries to decode it as ANSI or DBCS.</source>
          <target state="translated">Se diferente de zero, <ph id="ph1">`http.sys`</ph> sempre tenta decodificar uma URL como UTF-8 primeiro; se a conversão falhará e EnableNonUTF8 é diferente de zero, o HTTP. sys, em seguida, tenta decodificá-la como ANSI ou DBCS.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>If zero (and EnableNonUTF8 is non-zero), <ph id="ph1">`http.sys`</ph> tries to decode it as ANSI or DBCS; if that is not successful, it tries a UTF-8 conversion.</source>
          <target state="translated">Se for zero (e EnableNonUTF8 é diferente de zero), <ph id="ph1">`http.sys`</ph> tenta decodificá-la como ANSI ou DBCS; se esse não for bem-sucedida, ele tenta uma conversão de UTF-8.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>When <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> receives a request, it uses the converted URI from <ph id="ph2">`http.sys`</ph> as input to the <ph id="ph3">&lt;xref:System.Net.HttpListenerRequest.Url%2A&gt;</ph> property.</source>
          <target state="translated">Quando <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> recebe uma solicitação, ele usa o URI convertido do <ph id="ph2">`http.sys`</ph> como entrada para o <ph id="ph3">&lt;xref:System.Net.HttpListenerRequest.Url%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>There is a need for supporting characters besides characters and numbers in URIs.</source>
          <target state="translated">É necessário para dar suporte a caracteres além de caracteres e números nos URIs.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>An example is the following URI, which is used to retrieve customer information for customer number "1/3812":</source>
          <target state="translated">Um exemplo é o URI a seguir, que é usado para recuperar informações do cliente para o cliente número "1/3812":</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>Note the percent-encoded slash in the Uri (%2F).</source>
          <target state="translated">Observe a barra codificados por percentual no Uri (% 2F).</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>This is necessary, since in this case the slash character represents data and not a path delimiter.</source>
          <target state="translated">Isso é necessário, pois, nesse caso o caractere de barra representa dados e não um delimitador de caminho.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>Passing the string to Uri constructor will lead to the following URI:</source>
          <target state="translated">Passando a cadeia de caracteres de construtor Uri levará para o seguinte URI:</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>Splitting the path into its segments would result in the following elements:</source>
          <target state="translated">Dividir o caminho em seus segmentos resultaria nos seguintes elementos:</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>This is not the intent of the sender of the request.</source>
          <target state="translated">Isso não é a intenção do remetente da solicitação.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>If the <ph id="ph1">&lt;xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A&gt;</ph> property is set to false, then when the <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> receives a request, it uses the raw URI instead of the converted URI from <ph id="ph3">`http.sys`</ph> as input to the <ph id="ph4">&lt;xref:System.Net.HttpListenerRequest.Url%2A&gt;</ph> property.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A&gt;</ph> propriedade é definida como false, então quando o <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> recebe uma solicitação, ele usa o URI bruto em vez do URI convertido do <ph id="ph3">`http.sys`</ph> como entrada para o <ph id="ph4">&lt;xref:System.Net.HttpListenerRequest.Url%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.Url">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.Url%2A&gt;</ph> property.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar o <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.Url%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.UrlReferrer">
          <source>Gets the Uniform Resource Identifier (URI) of the resource that referred the client to the server.</source>
          <target state="translated">Obtém o URI (Uniform Resource Identifier) do recurso que encaminhou o cliente para o servidor.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.UrlReferrer">
          <source>A <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> object that contains the text of the request's <ph id="ph2">&lt;see cref="F:System.Net.HttpRequestHeader.Referer" /&gt;</ph> header, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if the header was not included in the request.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> que contém o texto do cabeçalho <ph id="ph2">&lt;see cref="F:System.Net.HttpRequestHeader.Referer" /&gt;</ph> da solicitação ou <ph id="ph3">&lt;see langword="null" /&gt;</ph> se o cabeçalho não tiver sido incluído na solicitação.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.UrlReferrer">
          <source>If a client has followed a hyperlink to the requested URI, its request might contain a <ph id="ph1">`Referrer`</ph> header that identifies the URI of the resource that contained the hyperlink.</source>
          <target state="translated">Se um cliente tiver seguido um hiperlink para o URI solicitado, a solicitação pode conter um <ph id="ph1">`Referrer`</ph> cabeçalho que identifica o URI do recurso que continha o hiperlink.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.UrlReferrer">
          <source>Clients can falsify or choose not to present a <ph id="ph1">&lt;xref:System.Net.HttpRequestHeader.Referer&gt;</ph> header.</source>
          <target state="translated">Os clientes podem falsificar ou optar por não apresentar um <ph id="ph1">&lt;xref:System.Net.HttpRequestHeader.Referer&gt;</ph> cabeçalho.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.UrlReferrer">
          <source>Therefore, while the <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.UrlReferrer%2A&gt;</ph> property can be useful for identifying basic trends in Web traffic; you should not use it as part of an authorization scheme to control access to data.</source>
          <target state="translated">Portanto, enquanto o <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.UrlReferrer%2A&gt;</ph> propriedade pode ser útil para identificar tendências básicas no tráfego da Web; você não deve usá-lo como parte de um esquema de autorização para controlar o acesso aos dados.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.UrlReferrer">
          <source>For a complete list of request headers, see the <ph id="ph1">&lt;xref:System.Net.HttpRequestHeader&gt;</ph> enumeration.</source>
          <target state="translated">Para obter uma lista completa dos cabeçalhos de solicitação, consulte o <ph id="ph1">&lt;xref:System.Net.HttpRequestHeader&gt;</ph> enumeração.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.UrlReferrer">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.UrlReferrer%2A&gt;</ph> is null when there is no <ph id="ph2">`Referrer`</ph> header in the request or when the <ph id="ph3">`Referrer`</ph> header is present in the request but does not parse to a valid <ph id="ph4">&lt;xref:System.Uri&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.UrlReferrer%2A&gt;</ph> é nulo quando não há nenhum <ph id="ph2">`Referrer`</ph> cabeçalho na solicitação ou quando o <ph id="ph3">`Referrer`</ph> cabeçalho está presente na solicitação, mas não analisa a válido <ph id="ph4">&lt;xref:System.Uri&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.UrlReferrer">
          <source>The following code example demonstrates using this property.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar essa propriedade.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.UserAgent">
          <source>Gets the user agent presented by the client.</source>
          <target state="translated">Obtém o agente do usuário apresentado pelo cliente.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.UserAgent">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> object that contains the text of the request's <ph id="ph2">&lt;see langword="User-Agent" /&gt;</ph> header.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> objeto que contém o texto da solicitação de <ph id="ph2">&lt;see langword="User-Agent" /&gt;</ph> cabeçalho.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.UserAgent">
          <source>The <ph id="ph1">`User-Agent`</ph> header typically contains text that identifies the name and version number of the software used to generate the request.</source>
          <target state="translated">O <ph id="ph1">`User-Agent`</ph> cabeçalho normalmente contém o texto que identifica o número de versão e o nome do software usado para gerar a solicitação.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.UserAgent">
          <source>For a complete list of request headers, see the <ph id="ph1">&lt;xref:System.Net.HttpRequestHeader&gt;</ph> enumeration.</source>
          <target state="translated">Para obter uma lista completa dos cabeçalhos de solicitação, consulte o <ph id="ph1">&lt;xref:System.Net.HttpRequestHeader&gt;</ph> enumeração.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.UserAgent">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.UserAgent%2A&gt;</ph> is null when there is no <ph id="ph2">`User-Agent`</ph> header in the request.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.UserAgent%2A&gt;</ph> é nulo quando não há nenhum <ph id="ph2">`User-Agent`</ph> cabeçalho na solicitação.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.UserAgent">
          <source>The following code example demonstrates using this property.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar essa propriedade.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.UserHostAddress">
          <source>Gets the server IP address and port number to which the request is directed.</source>
          <target state="translated">Obtém o endereço IP e número da porta do servidor para o qual a solicitação é direcionada.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.UserHostAddress">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the host address information.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que contém as informações de endereço do host.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.UserHostAddress">
          <source>The information returned by this property is also available in the <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.LocalEndPoint%2A&gt;</ph> property value.</source>
          <target state="translated">As informações retornadas por esta propriedade também estão disponíveis na <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.LocalEndPoint%2A&gt;</ph> o valor da propriedade.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.UserHostAddress">
          <source>The following code example displays the value of this property.</source>
          <target state="translated">O exemplo de código a seguir exibe o valor dessa propriedade.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.UserHostName">
          <source>Gets the DNS name and, if provided, the port number specified by the client.</source>
          <target state="translated">Obtém o nome DNS e, se fornecido, o número da porta especificado pelo cliente.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.UserHostName">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> value that contains the text of the request's <ph id="ph2">&lt;see langword="Host" /&gt;</ph> header.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> valor que contém o texto da solicitação de <ph id="ph2">&lt;see langword="Host" /&gt;</ph> cabeçalho.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.UserHostName">
          <source>The <ph id="ph1">`Host`</ph> header contains the requested server host name and port number, if specified, separated by a colon (for example, <ph id="ph2">`www.contoso.com:8080`</ph>).</source>
          <target state="translated">O <ph id="ph1">`Host`</ph> cabeçalho contém o nome de host do servidor solicitado e o número da porta, se especificado, separados por dois-pontos (por exemplo, <ph id="ph2">`www.contoso.com:8080`</ph>).</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.UserHostName">
          <source>You can use this property to return different responses depending on the host name specified in the request.</source>
          <target state="translated">Você pode usar essa propriedade para retornar respostas diferentes dependendo do nome de host especificado na solicitação.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.UserHostName">
          <source>For a complete list of request headers, see the <ph id="ph1">&lt;xref:System.Net.HttpRequestHeader&gt;</ph> enumeration.</source>
          <target state="translated">Para obter uma lista completa dos cabeçalhos de solicitação, consulte o <ph id="ph1">&lt;xref:System.Net.HttpRequestHeader&gt;</ph> enumeração.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.UserHostName">
          <source>The following code example demonstrates using this property.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar essa propriedade.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListenerRequest.UserLanguages">
          <source>Gets the natural languages that are preferred for the response.</source>
          <target state="translated">Obtém os idiomas naturais preferenciais para a resposta.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.UserLanguages">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> array that contains the languages specified in the request's <ph id="ph2">&lt;see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" /&gt;</ph> header or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if the client request did not include an <ph id="ph4">&lt;see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" /&gt;</ph> header.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> matriz que contém os idiomas especificados na solicitação de <ph id="ph2">&lt;see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" /&gt;</ph> cabeçalho ou <ph id="ph3">&lt;see langword="null" /&gt;</ph> se a solicitação do cliente não incluiu uma <ph id="ph4">&lt;see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" /&gt;</ph> cabeçalho.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.UserLanguages">
          <source>For a detailed description of the <ph id="ph1">`Accept-Language`</ph> header, see RFC 2616 Section 14.4, available at <bpt id="p1">[</bpt><ph id="ph2">http://www.rfc-editor.org</ph><ept id="p1">](http://www.rfc-editor.org/)</ept>.</source>
          <target state="translated">Para obter uma descrição detalhada do <ph id="ph1">`Accept-Language`</ph> cabeçalho, consulte a seção de RFC 2616 14.4, disponível em <bpt id="p1">[</bpt> <ph id="ph2">http://www.rfc-editor.org</ph> <ept id="p1">](http://www.rfc-editor.org/)</ept>.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.UserLanguages">
          <source>For a complete list of request headers, see the <ph id="ph1">&lt;xref:System.Net.HttpRequestHeader&gt;</ph> enumeration.</source>
          <target state="translated">Para obter uma lista completa dos cabeçalhos de solicitação, consulte o <ph id="ph1">&lt;xref:System.Net.HttpRequestHeader&gt;</ph> enumeração.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListenerRequest.UserLanguages">
          <source>The following code example displays the languages from the request's <ph id="ph1">`Accept-Language`</ph> header.</source>
          <target state="translated">O exemplo de código a seguir exibe os idiomas da solicitação de <ph id="ph1">`Accept-Language`</ph> cabeçalho.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>