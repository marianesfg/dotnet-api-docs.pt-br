<Type Name="Collection&lt;T&gt;" FullName="System.Collections.ObjectModel.Collection&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6c4b58d174f629a6a75653c99acc3147878f6484" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37701166" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Collection&lt;T&gt; : System.Collections.Generic.ICollection&lt;T&gt;, System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.Generic.IList&lt;T&gt;, System.Collections.Generic.IReadOnlyCollection&lt;T&gt;, System.Collections.Generic.IReadOnlyList&lt;T&gt;, System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Collection`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.ICollection`1&lt;!T&gt;, class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.Generic.IList`1&lt;!T&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;!T&gt;, class System.Collections.Generic.IReadOnlyList`1&lt;!T&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Collections.ObjectModel.Collection`1" />
  <TypeSignature Language="VB.NET" Value="Public Class Collection(Of T)&#xA;Implements ICollection(Of T), IEnumerable(Of T), IList, IList(Of T), IReadOnlyCollection(Of T), IReadOnlyList(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class Collection : System::Collections::Generic::ICollection&lt;T&gt;, System::Collections::Generic::IEnumerable&lt;T&gt;, System::Collections::Generic::IList&lt;T&gt;, System::Collections::Generic::IReadOnlyCollection&lt;T&gt;, System::Collections::Generic::IReadOnlyList&lt;T&gt;, System::Collections::IList" />
  <TypeSignature Language="F#" Value="type Collection&lt;'T&gt; = class&#xA;    interface IList&lt;'T&gt;&#xA;    interface IList&#xA;    interface IReadOnlyList&lt;'T&gt;&#xA;    interface ICollection&lt;'T&gt;&#xA;    interface seq&lt;'T&gt;&#xA;    interface IEnumerable&#xA;    interface ICollection&#xA;    interface IReadOnlyCollection&lt;'T&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IList&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyList&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.Mscorlib_CollectionDebugView`1))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="044f8-101">O tipo dos elementos na coleção.</span>
      <span class="sxs-lookup">
        <span data-stu-id="044f8-101">The type of elements in the collection.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="044f8-102">Fornece a classe base para uma coleção genérica.</span>
      <span class="sxs-lookup">
        <span data-stu-id="044f8-102">Provides the base class for a generic collection.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="044f8-103">O <xref:System.Collections.ObjectModel.Collection%601> classe pode ser usado imediatamente, criando uma instância de um dos seus tipos construídos; tudo o que você precisa fazer é especificar o tipo de objeto a ser contido na coleção.</span><span class="sxs-lookup"><span data-stu-id="044f8-103">The <xref:System.Collections.ObjectModel.Collection%601> class can be used immediately by creating an instance of one of its constructed types; all you have to do is specify the type of object to be contained in the collection.</span></span> <span data-ttu-id="044f8-104">Além disso, você pode derivar seu próprio tipo de coleção de qualquer tipo construído ou derivar um tipo de coleção genérica do <xref:System.Collections.ObjectModel.Collection%601> própria classe.</span><span class="sxs-lookup"><span data-stu-id="044f8-104">In addition, you can derive your own collection type from any constructed type, or derive a generic collection type from the <xref:System.Collections.ObjectModel.Collection%601> class itself.</span></span>  
  
 <span data-ttu-id="044f8-105">O <xref:System.Collections.ObjectModel.Collection%601> classe fornece métodos protegidos que podem ser usados para personalizar seu comportamento ao adicionar e remover itens, limpar a coleção ou definindo o valor de um item existente.</span><span class="sxs-lookup"><span data-stu-id="044f8-105">The <xref:System.Collections.ObjectModel.Collection%601> class provides protected methods that can be used to customize its behavior when adding and removing items, clearing the collection, or setting the value of an existing item.</span></span>  
  
 <span data-ttu-id="044f8-106">A maioria dos <xref:System.Collections.ObjectModel.Collection%601> objectscan ser modificado.</span><span class="sxs-lookup"><span data-stu-id="044f8-106">Most <xref:System.Collections.ObjectModel.Collection%601> objectscan be modified.</span></span> <span data-ttu-id="044f8-107">No entanto, uma <xref:System.Collections.ObjectModel.Collection%601> objeto que é inicializado com um somente leitura <xref:System.Collections.Generic.IList%601> objeto não pode ser modificado.</span><span class="sxs-lookup"><span data-stu-id="044f8-107">However, a <xref:System.Collections.ObjectModel.Collection%601> object that is initialized with a read-only <xref:System.Collections.Generic.IList%601> object cannot be modified.</span></span> <span data-ttu-id="044f8-108">Consulte <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> para obter uma versão somente leitura dessa classe.</span><span class="sxs-lookup"><span data-stu-id="044f8-108">See <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> for a read-only version of this class.</span></span>  
  
 <span data-ttu-id="044f8-109">Elementos nesta coleção podem ser acessados usando um índice de inteiro.</span><span class="sxs-lookup"><span data-stu-id="044f8-109">Elements in this collection can be accessed using an integer index.</span></span>  <span data-ttu-id="044f8-110">Nesta coleção, os índices são baseados em zero.</span><span class="sxs-lookup"><span data-stu-id="044f8-110">Indexes in this collection are zero-based.</span></span>  
  
 <span data-ttu-id="044f8-111"><xref:System.Collections.ObjectModel.Collection%601> aceita `null` como um valor válido para a referência de tipos e permite elementos duplicados.</span><span class="sxs-lookup"><span data-stu-id="044f8-111"><xref:System.Collections.ObjectModel.Collection%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="044f8-112">Esta seção contém dois exemplos de código.</span><span class="sxs-lookup"><span data-stu-id="044f8-112">This section contains two code examples.</span></span> <span data-ttu-id="044f8-113">O primeiro exemplo demonstra várias propriedades e métodos do <xref:System.Collections.ObjectModel.Collection%601> classe.</span><span class="sxs-lookup"><span data-stu-id="044f8-113">The first example demonstrates several properties and methods of the <xref:System.Collections.ObjectModel.Collection%601> class.</span></span> <span data-ttu-id="044f8-114">O segundo exemplo mostra como derivar uma classe de coleção de um tipo construído de <xref:System.Collections.ObjectModel.Collection%601>e como substituir os métodos protegidos da <xref:System.Collections.ObjectModel.Collection%601> para fornecer um comportamento personalizado.</span><span class="sxs-lookup"><span data-stu-id="044f8-114">The second example shows how to derive a collection class from a constructed type of <xref:System.Collections.ObjectModel.Collection%601>, and how to override the protected methods of <xref:System.Collections.ObjectModel.Collection%601> to provide custom behavior.</span></span>  
  
 <span data-ttu-id="044f8-115">Exemplo 1</span><span class="sxs-lookup"><span data-stu-id="044f8-115">Example 1</span></span>  
  
 <span data-ttu-id="044f8-116">O exemplo de código a seguir demonstra muitas das propriedades e métodos de <xref:System.Collections.ObjectModel.Collection%601>.</span><span class="sxs-lookup"><span data-stu-id="044f8-116">The following code example demonstrates many of the properties and methods of <xref:System.Collections.ObjectModel.Collection%601>.</span></span> <span data-ttu-id="044f8-117">O exemplo de código cria uma coleção de cadeias de caracteres, usa o <xref:System.Collections.ObjectModel.Collection%601.Add%2A> método para adicionar várias cadeias de caracteres, exibe o <xref:System.Collections.ObjectModel.Collection%601.Count%2A>e lista as cadeias de caracteres.</span><span class="sxs-lookup"><span data-stu-id="044f8-117">The code example creates a collection of strings, uses the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> method to add several strings, displays the <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, and lists the strings.</span></span> <span data-ttu-id="044f8-118">O exemplo usa o <xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A> método para localizar o índice de uma cadeia de caracteres e o <xref:System.Collections.ObjectModel.Collection%601.Contains%2A> método para determinar se uma cadeia de caracteres está na coleção.</span><span class="sxs-lookup"><span data-stu-id="044f8-118">The example uses the <xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A> method to find the index of a string and the <xref:System.Collections.ObjectModel.Collection%601.Contains%2A> method to determine whether a string is in the collection.</span></span> <span data-ttu-id="044f8-119">O exemplo insere uma cadeia de caracteres usando o <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> método e recupera e conjuntos de cadeias de caracteres usando o padrão <xref:System.Collections.ObjectModel.Collection%601.Item%2A> propriedade (o indexador em c#).</span><span class="sxs-lookup"><span data-stu-id="044f8-119">The example inserts a string using the <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> method and retrieves and sets strings using the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="044f8-120">O exemplo remove cadeias de caracteres por cadeia de caracteres de identidade usando o <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> método e por índice usando o <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> método.</span><span class="sxs-lookup"><span data-stu-id="044f8-120">The example removes strings by string identity using the <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> method and by index using the <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> method.</span></span> <span data-ttu-id="044f8-121">Por fim, o <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> método é usado para limpar todas as cadeias de caracteres da coleção.</span><span class="sxs-lookup"><span data-stu-id="044f8-121">Finally, the <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> method is used to clear all strings from the collection.</span></span>  
  
 [!code-cpp[ObjectModel.Collection#1](~/samples/snippets/cpp/VS_Snippets_CLR/ObjectModel.Collection/cpp/source.cpp#1)]
 [!code-csharp[ObjectModel.Collection#1](~/samples/snippets/csharp/VS_Snippets_CLR/ObjectModel.Collection/cs/source.cs#1)]
 [!code-vb[ObjectModel.Collection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObjectModel.Collection/VB/source.vb#1)]  
  
 <span data-ttu-id="044f8-122">Exemplo 2</span><span class="sxs-lookup"><span data-stu-id="044f8-122">Example 2</span></span>  
  
 <span data-ttu-id="044f8-123">O exemplo de código a seguir mostra como derivar uma classe de coleção de um tipo construído do <xref:System.Collections.ObjectModel.Collection%601> classe genérica e como substituir o protegido <xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A>, <xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A>, <xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A>, e <xref:System.Collections.ObjectModel.Collection%601.SetItem%2A> métodos forneçam personalizado comportamento para o <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.Collection%601.Insert%2A>, <xref:System.Collections.ObjectModel.Collection%601.Remove%2A>, e <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> métodos e configurar o <xref:System.Collections.ObjectModel.Collection%601.Item%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="044f8-123">The following code example shows how to derive a collection class from a constructed type of the <xref:System.Collections.ObjectModel.Collection%601> generic class, and how to override the protected <xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A>, <xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A>, <xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A>, and <xref:System.Collections.ObjectModel.Collection%601.SetItem%2A> methods to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.Collection%601.Insert%2A>, <xref:System.Collections.ObjectModel.Collection%601.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property.</span></span>  
  
 <span data-ttu-id="044f8-124">O comportamento personalizado fornecido por esse exemplo é um `Changed` evento de notificação que é gerado no final de cada um dos métodos protegidos.</span><span class="sxs-lookup"><span data-stu-id="044f8-124">The custom behavior provided by this example is a `Changed` notification event that is raised at the end of each of the protected methods.</span></span> <span data-ttu-id="044f8-125">O `Dinosaurs` herda da classe `Collection<string>` (`Collection(Of String)` no Visual Basic) e define o `Changed` evento, que usa um `DinosaursChangedEventArgs` classe para as informações de evento e uma enumeração para identificar o tipo de alteração.</span><span class="sxs-lookup"><span data-stu-id="044f8-125">The `Dinosaurs` class inherits `Collection<string>` (`Collection(Of String)` in Visual Basic) and defines the `Changed` event, which uses a `DinosaursChangedEventArgs` class for the event information, and an enumeration to identify the kind of change.</span></span>  
  
 <span data-ttu-id="044f8-126">O exemplo de código chama várias propriedades e métodos de <xref:System.Collections.ObjectModel.Collection%601> para demonstrar o evento personalizado.</span><span class="sxs-lookup"><span data-stu-id="044f8-126">The code example calls several properties and methods of <xref:System.Collections.ObjectModel.Collection%601> to demonstrate the custom event.</span></span>  
  
 [!code-csharp[ObjectModel.CollectionInherited#1](~/samples/snippets/csharp/VS_Snippets_CLR/ObjectModel.CollectionInherited/cs/source.cs#1)]
 [!code-vb[ObjectModel.CollectionInherited#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObjectModel.CollectionInherited/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="044f8-127">Os membros estáticos públicos (<see langword="Shared" /> no Visual Basic) desse são thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="044f8-127">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="044f8-128">Não há garantia de que qualquer membro de instância seja thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="044f8-128">Any instance members are not guaranteed to be thread safe.</span>
      </span>
      <span data-ttu-id="044f8-129">Um <see cref="T:System.Collections.ObjectModel.Collection`1" /> pode dar suporte a vários leitores simultaneamente, desde que a coleção não será modificada.</span>
      <span class="sxs-lookup">
        <span data-stu-id="044f8-129">A <see cref="T:System.Collections.ObjectModel.Collection`1" /> can support multiple readers concurrently, as long as the collection is not modified.</span>
      </span>
      <span data-ttu-id="044f8-130">Mesmo assim, enumerar através de uma coleção intrinsecamente não é um procedimento thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="044f8-130">Even so, enumerating through a collection is intrinsically not a thread-safe procedure.</span>
      </span>
      <span data-ttu-id="044f8-131">Para garantir acesso thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração.</span>
      <span class="sxs-lookup">
        <span data-stu-id="044f8-131">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span>
      </span>
      <span data-ttu-id="044f8-132">Para permitir que a coleção seja acessada por vários threads para leitura e gravação, você deve implementar sua própria sincronização.</span>
      <span class="sxs-lookup">
        <span data-stu-id="044f8-132">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span>
      </span>
    </threadsafe>
    <block subset="none" type="overrides">
      <span data-ttu-id="044f8-133">
        <para>Essa classe base é fornecida para tornar mais fácil para os implementadores de criar uma coleção personalizada. Os implementadores são incentivados a estender a classe base em vez de criar seus próprios.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="044f8-133">
          <para>This base class is provided to make it easier for implementers to create a custom collection. Implementers are encouraged to extend this base class instead of creating their own.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Collections.Generic.ICollection`1" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="044f8-134">Inicializa uma nova instância da classe <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-134">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.Collection`1" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Collection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Collection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="044f8-135">Inicializa uma nova instância da classe <see cref="T:System.Collections.ObjectModel.Collection`1" /> que está vazia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-135">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.Collection`1" /> class that is empty.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="044f8-136">Este construtor é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="044f8-136">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="044f8-137">O exemplo de código a seguir demonstra muitas das propriedades e métodos de <xref:System.Collections.ObjectModel.Collection%601>.</span><span class="sxs-lookup"><span data-stu-id="044f8-137">The following code example demonstrates many of the properties and methods of <xref:System.Collections.ObjectModel.Collection%601>.</span></span> <span data-ttu-id="044f8-138">O exemplo de código cria uma coleção de cadeias de caracteres com o <xref:System.Collections.ObjectModel.Collection%601.%23ctor> usa o construtor, o <xref:System.Collections.ObjectModel.Collection%601.Add%2A> método para adicionar várias cadeias de caracteres, exibe o <xref:System.Collections.ObjectModel.Collection%601.Count%2A>e lista as cadeias de caracteres.</span><span class="sxs-lookup"><span data-stu-id="044f8-138">The code example creates a collection of strings with the <xref:System.Collections.ObjectModel.Collection%601.%23ctor> constructor, uses the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> method to add several strings, displays the <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, and lists the strings.</span></span> <span data-ttu-id="044f8-139">O exemplo usa o <xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A> método para localizar o índice de uma cadeia de caracteres e o <xref:System.Collections.ObjectModel.Collection%601.Contains%2A> método para determinar se uma cadeia de caracteres está na coleção.</span><span class="sxs-lookup"><span data-stu-id="044f8-139">The example uses the <xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A> method to find the index of a string and the <xref:System.Collections.ObjectModel.Collection%601.Contains%2A> method to determine whether a string is in the collection.</span></span> <span data-ttu-id="044f8-140">O exemplo insere uma cadeia de caracteres usando o <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> método e recupera e conjuntos de cadeias de caracteres usando o padrão <xref:System.Collections.ObjectModel.Collection%601.Item%2A> propriedade (o indexador em c#).</span><span class="sxs-lookup"><span data-stu-id="044f8-140">The example inserts a string using the <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> method and retrieves and sets strings using the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="044f8-141">O exemplo remove cadeias de caracteres por cadeia de caracteres de identidade usando o <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> método e por índice usando o <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> método.</span><span class="sxs-lookup"><span data-stu-id="044f8-141">The example removes strings by string identity using the <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> method and by index using the <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> method.</span></span> <span data-ttu-id="044f8-142">Por fim, o <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> método é usado para limpar todas as cadeias de caracteres da coleção.</span><span class="sxs-lookup"><span data-stu-id="044f8-142">Finally, the <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> method is used to clear all strings from the collection.</span></span>  
  
 [!code-cpp[ObjectModel.Collection#1](~/samples/snippets/cpp/VS_Snippets_CLR/ObjectModel.Collection/cpp/source.cpp#1)]
 [!code-csharp[ObjectModel.Collection#1](~/samples/snippets/csharp/VS_Snippets_CLR/ObjectModel.Collection/cs/source.cs#1)]
 [!code-vb[ObjectModel.Collection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObjectModel.Collection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Collection (System.Collections.Generic.IList&lt;T&gt; list);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IList`1&lt;!T&gt; list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.#ctor(System.Collections.Generic.IList{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (list As IList(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Collection(System::Collections::Generic::IList&lt;T&gt; ^ list);" />
      <MemberSignature Language="F#" Value="new System.Collections.ObjectModel.Collection&lt;'T&gt; : System.Collections.Generic.IList&lt;'T&gt; -&gt; System.Collections.ObjectModel.Collection&lt;'T&gt;" Usage="new System.Collections.ObjectModel.Collection&lt;'T&gt; list" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Generic.IList&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="list">
          <span data-ttu-id="044f8-143">A lista que é encapsulada pela nova coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-143">The list that is wrapped by the new collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="044f8-144">Inicializa uma nova instância da classe <see cref="T:System.Collections.ObjectModel.Collection`1" /> como um wrapper para a lista especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-144">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.Collection`1" /> class as a wrapper for the specified list.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="044f8-145">Os elementos da lista não são copiados.</span><span class="sxs-lookup"><span data-stu-id="044f8-145">The elements of the list are not copied.</span></span> <span data-ttu-id="044f8-146">A lista é encapsulada por coleção, para que as alterações subsequentes para os elementos da lista são visíveis por meio de <xref:System.Collections.ObjectModel.Collection%601>.</span><span class="sxs-lookup"><span data-stu-id="044f8-146">The list is wrapped by the collection, so that subsequent changes to the elements of the list are visible through the <xref:System.Collections.ObjectModel.Collection%601>.</span></span>  
  
 <span data-ttu-id="044f8-147">Este construtor é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="044f8-147">This constructor is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="044f8-148">
            <paramref name="list" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-148">
              <paramref name="list" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(T item);" />
      <MemberSignature Language="F#" Value="abstract member Add : 'T -&gt; unit&#xA;override this.Add : 'T -&gt; unit" Usage="collection.Add item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="044f8-149">O objeto a ser adicionado ao final do <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-149">The object to be added to the end of the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          </span>
          <span data-ttu-id="044f8-150">O valor pode ser <see langword="null" /> para tipos de referência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-150">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="044f8-151">Adiciona um objeto ao final do <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-151">Adds an object to the end of the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="044f8-152"><xref:System.Collections.ObjectModel.Collection%601> aceita `null` como um valor válido para a referência de tipos e permite elementos duplicados.</span><span class="sxs-lookup"><span data-stu-id="044f8-152"><xref:System.Collections.ObjectModel.Collection%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="044f8-153">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="044f8-153">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="044f8-154">O exemplo de código a seguir demonstra muitas das propriedades e métodos de <xref:System.Collections.ObjectModel.Collection%601>.</span><span class="sxs-lookup"><span data-stu-id="044f8-154">The following code example demonstrates many of the properties and methods of <xref:System.Collections.ObjectModel.Collection%601>.</span></span> <span data-ttu-id="044f8-155">O exemplo de código cria uma coleção de cadeias de caracteres, usa o <xref:System.Collections.ObjectModel.Collection%601.Add%2A> método para adicionar várias cadeias de caracteres, exibe o <xref:System.Collections.ObjectModel.Collection%601.Count%2A>e lista as cadeias de caracteres.</span><span class="sxs-lookup"><span data-stu-id="044f8-155">The code example creates a collection of strings, uses the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> method to add several strings, displays the <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, and lists the strings.</span></span> <span data-ttu-id="044f8-156">O exemplo usa o <xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A> método para localizar o índice de uma cadeia de caracteres e o <xref:System.Collections.ObjectModel.Collection%601.Contains%2A> método para determinar se uma cadeia de caracteres está na coleção.</span><span class="sxs-lookup"><span data-stu-id="044f8-156">The example uses the <xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A> method to find the index of a string and the <xref:System.Collections.ObjectModel.Collection%601.Contains%2A> method to determine whether a string is in the collection.</span></span> <span data-ttu-id="044f8-157">O exemplo insere uma cadeia de caracteres usando o <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> método e recupera e conjuntos de cadeias de caracteres usando o padrão <xref:System.Collections.ObjectModel.Collection%601.Item%2A> propriedade (o indexador em c#).</span><span class="sxs-lookup"><span data-stu-id="044f8-157">The example inserts a string using the <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> method and retrieves and sets strings using the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="044f8-158">O exemplo remove cadeias de caracteres por cadeia de caracteres de identidade usando o <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> método e por índice usando o <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> método.</span><span class="sxs-lookup"><span data-stu-id="044f8-158">The example removes strings by string identity using the <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> method and by index using the <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> method.</span></span> <span data-ttu-id="044f8-159">Por fim, o <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> método é usado para limpar todas as cadeias de caracteres da coleção.</span><span class="sxs-lookup"><span data-stu-id="044f8-159">Finally, the <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> method is used to clear all strings from the collection.</span></span>  
  
 [!code-cpp[ObjectModel.Collection#1](~/samples/snippets/cpp/VS_Snippets_CLR/ObjectModel.Collection/cpp/source.cpp#1)]
 [!code-csharp[ObjectModel.Collection#1](~/samples/snippets/csharp/VS_Snippets_CLR/ObjectModel.Collection/cs/source.cs#1)]
 [!code-vb[ObjectModel.Collection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObjectModel.Collection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)" />
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.Remove(`0)" />
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)" />
        <altmember cref="P:System.Collections.ObjectModel.Collection`1.Count" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="collection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="044f8-160">Remove todos os elementos do <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-160">Removes all elements from the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="044f8-161"><xref:System.Collections.ObjectModel.Collection%601.Count%2A> é definido como zero e referências a outros objetos de elementos da coleção também são liberadas.</span><span class="sxs-lookup"><span data-stu-id="044f8-161"><xref:System.Collections.ObjectModel.Collection%601.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="044f8-162">Este método é uma operação O(`n`), em que `n` é <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="044f8-162">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="044f8-163">O exemplo de código a seguir demonstra muitas das propriedades e métodos de <xref:System.Collections.ObjectModel.Collection%601>.</span><span class="sxs-lookup"><span data-stu-id="044f8-163">The following code example demonstrates many of the properties and methods of <xref:System.Collections.ObjectModel.Collection%601>.</span></span> <span data-ttu-id="044f8-164">O exemplo de código cria uma coleção de cadeias de caracteres, usa o <xref:System.Collections.ObjectModel.Collection%601.Add%2A> método para adicionar várias cadeias de caracteres, exibe o <xref:System.Collections.ObjectModel.Collection%601.Count%2A>e lista as cadeias de caracteres.</span><span class="sxs-lookup"><span data-stu-id="044f8-164">The code example creates a collection of strings, uses the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> method to add several strings, displays the <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, and lists the strings.</span></span> <span data-ttu-id="044f8-165">O exemplo usa o <xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A> método para localizar o índice de uma cadeia de caracteres e o <xref:System.Collections.ObjectModel.Collection%601.Contains%2A> método para determinar se uma cadeia de caracteres está na coleção.</span><span class="sxs-lookup"><span data-stu-id="044f8-165">The example uses the <xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A> method to find the index of a string and the <xref:System.Collections.ObjectModel.Collection%601.Contains%2A> method to determine whether a string is in the collection.</span></span> <span data-ttu-id="044f8-166">O exemplo insere uma cadeia de caracteres usando o <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> método e recupera e conjuntos de cadeias de caracteres usando o padrão <xref:System.Collections.ObjectModel.Collection%601.Item%2A> propriedade (o indexador em c#).</span><span class="sxs-lookup"><span data-stu-id="044f8-166">The example inserts a string using the <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> method and retrieves and sets strings using the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="044f8-167">O exemplo remove cadeias de caracteres por cadeia de caracteres de identidade usando o <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> método e por índice usando o <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> método.</span><span class="sxs-lookup"><span data-stu-id="044f8-167">The example removes strings by string identity using the <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> method and by index using the <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> method.</span></span> <span data-ttu-id="044f8-168">Por fim, o <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> método é usado para limpar todas as cadeias de caracteres da coleção.</span><span class="sxs-lookup"><span data-stu-id="044f8-168">Finally, the <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> method is used to clear all strings from the collection.</span></span>  
  
 [!code-cpp[ObjectModel.Collection#1](~/samples/snippets/cpp/VS_Snippets_CLR/ObjectModel.Collection/cpp/source.cpp#1)]
 [!code-csharp[ObjectModel.Collection#1](~/samples/snippets/csharp/VS_Snippets_CLR/ObjectModel.Collection/cs/source.cs#1)]
 [!code-vb[ObjectModel.Collection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObjectModel.Collection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="044f8-169">
            <para>Classes derivadas podem substituir <see cref="M:System.Collections.ObjectModel.Collection`1.ClearItems" /> para alterar o comportamento desse método.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-169">
              <para>Derived classes can override <see cref="M:System.Collections.ObjectModel.Collection`1.ClearItems" /> to change the behavior of this method.</para>
            </span>
          </span>
        </block>
        <altmember cref="P:System.Collections.ObjectModel.Collection`1.Count" />
      </Docs>
    </Member>
    <Member MemberName="ClearItems">
      <MemberSignature Language="C#" Value="protected virtual void ClearItems ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ClearItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.ClearItems" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ClearItems ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ClearItems();" />
      <MemberSignature Language="F#" Value="abstract member ClearItems : unit -&gt; unit&#xA;override this.ClearItems : unit -&gt; unit" Usage="collection.ClearItems " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="044f8-170">Remove todos os elementos do <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-170">Removes all elements from the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="044f8-171"><xref:System.Collections.ObjectModel.Collection%601.Count%2A> é definido como zero e referências a outros objetos de elementos da coleção também são liberadas.</span><span class="sxs-lookup"><span data-stu-id="044f8-171"><xref:System.Collections.ObjectModel.Collection%601.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="044f8-172">Este método é uma operação O(`n`), em que `n` é <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="044f8-172">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="044f8-173">O exemplo de código a seguir mostra como derivar uma classe de coleção de um tipo construído do <xref:System.Collections.ObjectModel.Collection%601> classe genérica e como substituir o protegido <xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A>, <xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A>, <xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A>, e <xref:System.Collections.ObjectModel.Collection%601.SetItem%2A> métodos forneçam personalizado comportamento para o <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.Collection%601.Insert%2A>, <xref:System.Collections.ObjectModel.Collection%601.Remove%2A>, e <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> métodos e configurar o <xref:System.Collections.ObjectModel.Collection%601.Item%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="044f8-173">The following code example shows how to derive a collection class from a constructed type of the <xref:System.Collections.ObjectModel.Collection%601> generic class, and how to override the protected <xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A>, <xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A>, <xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A>, and <xref:System.Collections.ObjectModel.Collection%601.SetItem%2A> methods to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.Collection%601.Insert%2A>, <xref:System.Collections.ObjectModel.Collection%601.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property.</span></span>  
  
 <span data-ttu-id="044f8-174">O comportamento personalizado fornecido por esse exemplo é um `Changed` evento de notificação que é gerado no final de cada um dos métodos protegidos.</span><span class="sxs-lookup"><span data-stu-id="044f8-174">The custom behavior provided by this example is a `Changed` notification event that is raised at the end of each of the protected methods.</span></span> <span data-ttu-id="044f8-175">O `Dinosaurs` herda da classe `Collection<string>` (`Collection(Of String)` no Visual Basic) e define o `Changed` evento, que usa um `DinosaursChangedEventArgs` classe para as informações de evento e uma enumeração para identificar o tipo de alteração.</span><span class="sxs-lookup"><span data-stu-id="044f8-175">The `Dinosaurs` class inherits `Collection<string>` (`Collection(Of String)` in Visual Basic) and defines the `Changed` event, which uses a `DinosaursChangedEventArgs` class for the event information, and an enumeration to identify the kind of change.</span></span>  
  
 <span data-ttu-id="044f8-176">O exemplo de código chama várias propriedades e métodos de <xref:System.Collections.ObjectModel.Collection%601> para demonstrar o evento personalizado.</span><span class="sxs-lookup"><span data-stu-id="044f8-176">The code example calls several properties and methods of <xref:System.Collections.ObjectModel.Collection%601> to demonstrate the custom event.</span></span>  
  
 [!code-csharp[ObjectModel.CollectionInherited#1](~/samples/snippets/csharp/VS_Snippets_CLR/ObjectModel.CollectionInherited/cs/source.cs#1)]
 [!code-vb[ObjectModel.CollectionInherited#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObjectModel.CollectionInherited/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="044f8-177">
            <para>As classes derivadas podem substituir este método para alterar o comportamento do <see cref="M:System.Collections.ObjectModel.Collection`1.Clear" /> método.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-177">
              <para>Derived classes can override this method to change the behavior of the <see cref="M:System.Collections.ObjectModel.Collection`1.Clear" /> method.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(T item);" />
      <MemberSignature Language="F#" Value="abstract member Contains : 'T -&gt; bool&#xA;override this.Contains : 'T -&gt; bool" Usage="collection.Contains item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="044f8-178">O objeto a ser localizado no <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-178">The object to locate in the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          </span>
          <span data-ttu-id="044f8-179">O valor pode ser <see langword="null" /> para tipos de referência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-179">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="044f8-180">Determina se um elemento está no <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-180">Determines whether an element is in the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="044f8-181">
            <see langword="true" /> se <paramref name="item" /> for encontrado no <see cref="T:System.Collections.ObjectModel.Collection`1" />; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-181">
              <see langword="true" /> if <paramref name="item" /> is found in the <see cref="T:System.Collections.ObjectModel.Collection`1" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="044f8-182">Se o <xref:System.Collections.ObjectModel.Collection%601> objeto é criado usando o construtor padrão, esse método determina a igualdade usando o comparador de igualdade padrão <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> para `T`, o tipo dos valores na lista.</span><span class="sxs-lookup"><span data-stu-id="044f8-182">If the <xref:System.Collections.ObjectModel.Collection%601> object is created using the default constructor, this method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span> <span data-ttu-id="044f8-183">Se tipo `T` não implementa o <xref:System.IEquatable%601> interface, o <xref:System.Object.Equals%2A> método é usado.</span><span class="sxs-lookup"><span data-stu-id="044f8-183">If type `T` does not implement the <xref:System.IEquatable%601> interface, the <xref:System.Object.Equals%2A> method is used.</span></span>  
  
 <span data-ttu-id="044f8-184">Se o objeto de coleção é criado, passando um <xref:System.Collections.Generic.IList%601> objeto para o construtor, o <xref:System.Collections.ObjectModel.Collection%601.Contains%2A> será determinado pelo método de <xref:System.Collections.Generic.IEqualityComparer%601> interface usada pelo que <xref:System.Collections.Generic.IList%601> objeto.</span><span class="sxs-lookup"><span data-stu-id="044f8-184">If the Collection object is created by passing an <xref:System.Collections.Generic.IList%601> object to the constructor, the <xref:System.Collections.ObjectModel.Collection%601.Contains%2A> method will be determined by the <xref:System.Collections.Generic.IEqualityComparer%601> interface used by that <xref:System.Collections.Generic.IList%601> object.</span></span>  
  
 <span data-ttu-id="044f8-185">Esse método executa uma pesquisa linear. Portanto, o tempo médio de execução é proporcional ao <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="044f8-185">This method performs a linear search; therefore, the average execution time is proportional to <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span> <span data-ttu-id="044f8-186">Ou seja, esse método é um O (`n`) a operação, onde `n` é <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="044f8-186">That is, this method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(!T[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;T&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : 'T[] * int -&gt; unit&#xA;override this.CopyTo : 'T[] * int -&gt; unit" Usage="collection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="044f8-187">O <see cref="T:System.Array" /> unidimensional que é o destino dos elementos copiados de <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-187">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          </span>
          <span data-ttu-id="044f8-188">O <see cref="T:System.Array" /> deve ter indexação com base em zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-188">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="044f8-189">O índice baseado em zero na <c>array</c> na qual a cópia começa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-189">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="044f8-190">Copia todo o <see cref="T:System.Collections.ObjectModel.Collection`1" /> em um <see cref="T:System.Array" /> unidimensional compatível, começando no índice especificado da matriz de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-190">Copies the entire <see cref="T:System.Collections.ObjectModel.Collection`1" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="044f8-191">Este método usa <xref:System.Array.Copy%2A?displayProperty=nameWithType> para copiar os elementos.</span><span class="sxs-lookup"><span data-stu-id="044f8-191">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="044f8-192">Os elementos são copiados para o <xref:System.Array> na mesma ordem em que o enumerador que itera por meio de <xref:System.Collections.ObjectModel.Collection%601>.</span><span class="sxs-lookup"><span data-stu-id="044f8-192">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.ObjectModel.Collection%601>.</span></span>  
  
 <span data-ttu-id="044f8-193">Este método é uma operação O(`n`), em que `n` é <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="044f8-193">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="044f8-194">
            <paramref name="array" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-194">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="044f8-195">
            <paramref name="index" /> é menor que zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-195">
              <paramref name="index" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="044f8-196">O número de elementos na origem <see cref="T:System.Collections.ObjectModel.Collection`1" /> é maior do que o espaço disponível de <paramref name="index" /> até o final do <paramref name="array" /> de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-196">The number of elements in the source <see cref="T:System.Collections.ObjectModel.Collection`1" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.Collection`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.ObjectModel.Collection&lt;'T&gt;.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="044f8-197">Obtém o número de elementos realmente contidos no <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-197">Gets the number of elements actually contained in the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="044f8-198">O número de elementos realmente contidos no <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-198">The number of elements actually contained in the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="044f8-199">A recuperação do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="044f8-199">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="044f8-200">O exemplo de código a seguir demonstra muitas das propriedades e métodos de <xref:System.Collections.ObjectModel.Collection%601>.</span><span class="sxs-lookup"><span data-stu-id="044f8-200">The following code example demonstrates many of the properties and methods of <xref:System.Collections.ObjectModel.Collection%601>.</span></span> <span data-ttu-id="044f8-201">O exemplo de código cria uma coleção de cadeias de caracteres, usa o <xref:System.Collections.ObjectModel.Collection%601.Add%2A> método para adicionar várias cadeias de caracteres, exibe o <xref:System.Collections.ObjectModel.Collection%601.Count%2A>e lista as cadeias de caracteres.</span><span class="sxs-lookup"><span data-stu-id="044f8-201">The code example creates a collection of strings, uses the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> method to add several strings, displays the <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, and lists the strings.</span></span> <span data-ttu-id="044f8-202">O exemplo usa o <xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A> método para localizar o índice de uma cadeia de caracteres e o <xref:System.Collections.ObjectModel.Collection%601.Contains%2A> método para determinar se uma cadeia de caracteres está na coleção.</span><span class="sxs-lookup"><span data-stu-id="044f8-202">The example uses the <xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A> method to find the index of a string and the <xref:System.Collections.ObjectModel.Collection%601.Contains%2A> method to determine whether a string is in the collection.</span></span> <span data-ttu-id="044f8-203">O exemplo insere uma cadeia de caracteres usando o <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> método e recupera e conjuntos de cadeias de caracteres usando o padrão <xref:System.Collections.ObjectModel.Collection%601.Item%2A> propriedade (o indexador em c#).</span><span class="sxs-lookup"><span data-stu-id="044f8-203">The example inserts a string using the <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> method and retrieves and sets strings using the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="044f8-204">O exemplo remove cadeias de caracteres por cadeia de caracteres de identidade usando o <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> método e por índice usando o <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> método.</span><span class="sxs-lookup"><span data-stu-id="044f8-204">The example removes strings by string identity using the <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> method and by index using the <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> method.</span></span> <span data-ttu-id="044f8-205">Por fim, o <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> método é usado para limpar todas as cadeias de caracteres da coleção.</span><span class="sxs-lookup"><span data-stu-id="044f8-205">Finally, the <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> method is used to clear all strings from the collection.</span></span>  
  
 [!code-cpp[ObjectModel.Collection#1](~/samples/snippets/cpp/VS_Snippets_CLR/ObjectModel.Collection/cpp/source.cpp#1)]
 [!code-csharp[ObjectModel.Collection#1](~/samples/snippets/csharp/VS_Snippets_CLR/ObjectModel.Collection/cs/source.cs#1)]
 [!code-vb[ObjectModel.Collection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObjectModel.Collection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;T&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;T&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;'T&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;'T&gt;" Usage="collection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="044f8-206">Retorna um enumerador que itera por meio de <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-206">Returns an enumerator that iterates through the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="044f8-207">Um <see cref="T:System.Collections.Generic.IEnumerator`1" /> para o <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-207">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> for the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="044f8-208">A instrução `foreach` da linguagem C# (`for each` no C++, `For Each` no Visual Basic) oculta a complexidade dos enumeradores.</span><span class="sxs-lookup"><span data-stu-id="044f8-208">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="044f8-209">Portanto, o uso de `foreach` é recomendado, em vez de manipular diretamente o enumerador.</span><span class="sxs-lookup"><span data-stu-id="044f8-209">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="044f8-210">Os enumeradores podem ser usados para ler os dados na coleção, mas não podem ser usados para modificar a coleção subjacente.</span><span class="sxs-lookup"><span data-stu-id="044f8-210">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="044f8-211">Inicialmente, o enumerador é posicionado antes do primeiro elemento da coleção.</span><span class="sxs-lookup"><span data-stu-id="044f8-211">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="044f8-212">Nesta posição, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> está indefinido.</span><span class="sxs-lookup"><span data-stu-id="044f8-212">At this position, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="044f8-213">Por isso, você deve chamar <xref:System.Collections.IEnumerator.MoveNext%2A> para avançar o enumerador até o primeiro elemento da coleção antes de ler o valor de <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="044f8-213">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span></span>  
  
 <span data-ttu-id="044f8-214"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> Retorna o mesmo objeto até <xref:System.Collections.IEnumerator.MoveNext%2A> é chamado.</span><span class="sxs-lookup"><span data-stu-id="044f8-214"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="044f8-215"><xref:System.Collections.IEnumerator.MoveNext%2A> define <xref:System.Collections.Generic.IEnumerator%601.Current%2A> como o próximo elemento.</span><span class="sxs-lookup"><span data-stu-id="044f8-215"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="044f8-216">Caso <xref:System.Collections.IEnumerator.MoveNext%2A> passe o final da coleção, o enumerador é posicionado após o último elemento na coleção e <xref:System.Collections.IEnumerator.MoveNext%2A> retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="044f8-216">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="044f8-217">Quando o enumerador está nessa posição, as chamadas subsequentes para <xref:System.Collections.IEnumerator.MoveNext%2A> também retornam `false`.</span><span class="sxs-lookup"><span data-stu-id="044f8-217">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="044f8-218">Caso a última chamada para <xref:System.Collections.IEnumerator.MoveNext%2A> tenha retornado `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> está indefinido.</span><span class="sxs-lookup"><span data-stu-id="044f8-218">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="044f8-219">Não é possível definir <xref:System.Collections.Generic.IEnumerator%601.Current%2A> como o primeiro elemento da coleção novamente; você deve criar uma nova instância de enumerador em vez disso.</span><span class="sxs-lookup"><span data-stu-id="044f8-219">You cannot set <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="044f8-220">Um enumerador permanece válido desde que a coleção continue inalterada.</span><span class="sxs-lookup"><span data-stu-id="044f8-220">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="044f8-221">Se forem feitas alterações na coleção, como adicionar, modificar ou excluir elementos, o enumerador será invalidado de maneira irrevogável e seu comportamento permanecerá indefinido.</span><span class="sxs-lookup"><span data-stu-id="044f8-221">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="044f8-222">O enumerador não tem acesso exclusivo à coleção; por isso, a enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</span><span class="sxs-lookup"><span data-stu-id="044f8-222">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="044f8-223">Para garantir acesso thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração.</span><span class="sxs-lookup"><span data-stu-id="044f8-223">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="044f8-224">Para permitir que a coleção seja acessada por vários threads para leitura e gravação, você deve implementar sua própria sincronização.</span><span class="sxs-lookup"><span data-stu-id="044f8-224">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="044f8-225">As implementações padrão de coleções em <xref:System.Collections.Generic?displayProperty=nameWithType> não são sincronizadas.</span><span class="sxs-lookup"><span data-stu-id="044f8-225">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="044f8-226">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="044f8-226">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(T item);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : 'T -&gt; int&#xA;override this.IndexOf : 'T -&gt; int" Usage="collection.IndexOf item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.IndexOf(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="044f8-227">O objeto a ser localizado no <see cref="T:System.Collections.Generic.List`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-227">The object to locate in the <see cref="T:System.Collections.Generic.List`1" />.</span>
          </span>
          <span data-ttu-id="044f8-228">O valor pode ser <see langword="null" /> para tipos de referência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-228">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="044f8-229">Pesquisa o objeto especificado e retorna o índice baseado em zero da primeira ocorrência dentro de todo o <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-229">Searches for the specified object and returns the zero-based index of the first occurrence within the entire <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="044f8-230">O índice baseado em zero da primeira ocorrência de <paramref name="item" /> em todo o <see cref="T:System.Collections.ObjectModel.Collection`1" />, se encontrado; caso contrário, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-230">The zero-based index of the first occurrence of <paramref name="item" /> within the entire <see cref="T:System.Collections.ObjectModel.Collection`1" />, if found; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="044f8-231">O <xref:System.Collections.ObjectModel.Collection%601> é pesquisado para frente, começando no primeiro elemento e termina no último elemento.</span><span class="sxs-lookup"><span data-stu-id="044f8-231">The <xref:System.Collections.ObjectModel.Collection%601> is searched forward starting at the first element and ending at the last element.</span></span>  
  
 <span data-ttu-id="044f8-232">Este método determina a igualdade usando o comparador de igualdade padrão <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> para `T`, o tipo dos valores na lista.</span><span class="sxs-lookup"><span data-stu-id="044f8-232">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="044f8-233">Esse método executa uma pesquisa linear. Portanto, o tempo médio de execução é proporcional ao <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="044f8-233">This method performs a linear search; therefore, the average execution time is proportional to <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span> <span data-ttu-id="044f8-234">Ou seja, esse método é um O (`n`) a operação, onde `n` é <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="044f8-234">That is, this method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="044f8-235">O exemplo de código a seguir demonstra muitas das propriedades e métodos de <xref:System.Collections.ObjectModel.Collection%601>.</span><span class="sxs-lookup"><span data-stu-id="044f8-235">The following code example demonstrates many of the properties and methods of <xref:System.Collections.ObjectModel.Collection%601>.</span></span> <span data-ttu-id="044f8-236">O exemplo de código cria uma coleção de cadeias de caracteres, usa o <xref:System.Collections.ObjectModel.Collection%601.Add%2A> método para adicionar várias cadeias de caracteres, exibe o <xref:System.Collections.ObjectModel.Collection%601.Count%2A>e lista as cadeias de caracteres.</span><span class="sxs-lookup"><span data-stu-id="044f8-236">The code example creates a collection of strings, uses the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> method to add several strings, displays the <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, and lists the strings.</span></span> <span data-ttu-id="044f8-237">O exemplo usa o <xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A> método para localizar o índice de uma cadeia de caracteres e o <xref:System.Collections.ObjectModel.Collection%601.Contains%2A> método para determinar se uma cadeia de caracteres está na coleção.</span><span class="sxs-lookup"><span data-stu-id="044f8-237">The example uses the <xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A> method to find the index of a string and the <xref:System.Collections.ObjectModel.Collection%601.Contains%2A> method to determine whether a string is in the collection.</span></span> <span data-ttu-id="044f8-238">O exemplo insere uma cadeia de caracteres usando o <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> método e recupera e conjuntos de cadeias de caracteres usando o padrão <xref:System.Collections.ObjectModel.Collection%601.Item%2A> propriedade (o indexador em c#).</span><span class="sxs-lookup"><span data-stu-id="044f8-238">The example inserts a string using the <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> method and retrieves and sets strings using the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="044f8-239">O exemplo remove cadeias de caracteres por cadeia de caracteres de identidade usando o <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> método e por índice usando o <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> método.</span><span class="sxs-lookup"><span data-stu-id="044f8-239">The example removes strings by string identity using the <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> method and by index using the <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> method.</span></span> <span data-ttu-id="044f8-240">Por fim, o <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> método é usado para limpar todas as cadeias de caracteres da coleção.</span><span class="sxs-lookup"><span data-stu-id="044f8-240">Finally, the <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> method is used to clear all strings from the collection.</span></span>  
  
 [!code-cpp[ObjectModel.Collection#1](~/samples/snippets/cpp/VS_Snippets_CLR/ObjectModel.Collection/cpp/source.cpp#1)]
 [!code-csharp[ObjectModel.Collection#1](~/samples/snippets/csharp/VS_Snippets_CLR/ObjectModel.Collection/cs/source.cs#1)]
 [!code-vb[ObjectModel.Collection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObjectModel.Collection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.Contains(`0)" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, T item);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * 'T -&gt; unit&#xA;override this.Insert : int * 'T -&gt; unit" Usage="collection.Insert (index, item)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="044f8-241">O índice baseado em zero no qual o <c>item</c> deve ser inserido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-241">The zero-based index at which <c>item</c> should be inserted.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="044f8-242">O objeto a ser inserido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-242">The object to insert.</span>
          </span>
          <span data-ttu-id="044f8-243">O valor pode ser <see langword="null" /> para tipos de referência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-243">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="044f8-244">Insere um elemento no <see cref="T:System.Collections.ObjectModel.Collection`1" />, no índice especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-244">Inserts an element into the <see cref="T:System.Collections.ObjectModel.Collection`1" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="044f8-245"><xref:System.Collections.ObjectModel.Collection%601> aceita `null` como um valor válido para a referência de tipos e permite elementos duplicados.</span><span class="sxs-lookup"><span data-stu-id="044f8-245"><xref:System.Collections.ObjectModel.Collection%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="044f8-246">Se `index` é igual a <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, `item` é adicionado ao final da <xref:System.Collections.ObjectModel.Collection%601>.</span><span class="sxs-lookup"><span data-stu-id="044f8-246">If `index` is equal to <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, `item` is added to the end of <xref:System.Collections.ObjectModel.Collection%601>.</span></span>  
  
 <span data-ttu-id="044f8-247">Este método é uma operação O(`n`), em que `n` é <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="044f8-247">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="044f8-248">
            <paramref name="index" /> é menor que zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-248">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="044f8-249">-ou-  <paramref name="index" /> é maior que <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-249">-or-  <paramref name="index" /> is greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="044f8-250">
            <para>Classes derivadas podem substituir <see cref="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)" /> para alterar o comportamento desse método.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-250">
              <para>Derived classes can override <see cref="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)" /> to change the behavior of this method.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.Add(`0)" />
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.Remove(`0)" />
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="protected virtual void InsertItem (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InsertItem(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InsertItem (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InsertItem(int index, T item);" />
      <MemberSignature Language="F#" Value="abstract member InsertItem : int * 'T -&gt; unit&#xA;override this.InsertItem : int * 'T -&gt; unit" Usage="collection.InsertItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="044f8-251">O índice baseado em zero no qual o <c>item</c> deve ser inserido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-251">The zero-based index at which <c>item</c> should be inserted.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="044f8-252">O objeto a ser inserido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-252">The object to insert.</span>
          </span>
          <span data-ttu-id="044f8-253">O valor pode ser <see langword="null" /> para tipos de referência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-253">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="044f8-254">Insere um elemento no <see cref="T:System.Collections.ObjectModel.Collection`1" />, no índice especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-254">Inserts an element into the <see cref="T:System.Collections.ObjectModel.Collection`1" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="044f8-255">O <xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A> deve ser substituído em uma classe derivada.</span><span class="sxs-lookup"><span data-stu-id="044f8-255">The <xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A> is meant to be overridden in a derived class.</span></span> <span data-ttu-id="044f8-256">Para um método público a ser inserido em um item de <xref:System.Collections.ObjectModel.Collection%601>, consulte <xref:System.Collections.ObjectModel.Collection%601.Insert%2A>.</span><span class="sxs-lookup"><span data-stu-id="044f8-256">For a public method to insert an item in the <xref:System.Collections.ObjectModel.Collection%601>, see <xref:System.Collections.ObjectModel.Collection%601.Insert%2A>.</span></span>  
  
 <span data-ttu-id="044f8-257"><xref:System.Collections.ObjectModel.Collection%601> aceita `null` como um valor válido para a referência de tipos e permite elementos duplicados.</span><span class="sxs-lookup"><span data-stu-id="044f8-257"><xref:System.Collections.ObjectModel.Collection%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="044f8-258">Se `index` é igual a <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, `item` é adicionado ao final da <xref:System.Collections.ObjectModel.Collection%601>.</span><span class="sxs-lookup"><span data-stu-id="044f8-258">If `index` is equal to <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, `item` is added to the end of <xref:System.Collections.ObjectModel.Collection%601>.</span></span>  
  
 <span data-ttu-id="044f8-259">Este método é uma operação O(`n`), em que `n` é <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="044f8-259">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="044f8-260">O exemplo de código a seguir mostra como derivar uma classe de coleção de um tipo construído do <xref:System.Collections.ObjectModel.Collection%601> classe genérica e como substituir o protegido <xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A>, <xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A>, <xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A>, e <xref:System.Collections.ObjectModel.Collection%601.SetItem%2A> métodos forneçam personalizado comportamento para o <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.Collection%601.Insert%2A>, <xref:System.Collections.ObjectModel.Collection%601.Remove%2A>, e <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> métodos e configurar o <xref:System.Collections.ObjectModel.Collection%601.Item%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="044f8-260">The following code example shows how to derive a collection class from a constructed type of the <xref:System.Collections.ObjectModel.Collection%601> generic class, and how to override the protected <xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A>, <xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A>, <xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A>, and <xref:System.Collections.ObjectModel.Collection%601.SetItem%2A> methods to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.Collection%601.Insert%2A>, <xref:System.Collections.ObjectModel.Collection%601.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property.</span></span>  
  
 <span data-ttu-id="044f8-261">O comportamento personalizado fornecido por esse exemplo é um `Changed` evento de notificação que é gerado no final de cada um dos métodos protegidos.</span><span class="sxs-lookup"><span data-stu-id="044f8-261">The custom behavior provided by this example is a `Changed` notification event that is raised at the end of each of the protected methods.</span></span> <span data-ttu-id="044f8-262">O `Dinosaurs` herda da classe `Collection<string>` (`Collection(Of String)` no Visual Basic) e define o `Changed` evento, que usa um `DinosaursChangedEventArgs` classe para as informações de evento e uma enumeração para identificar o tipo de alteração.</span><span class="sxs-lookup"><span data-stu-id="044f8-262">The `Dinosaurs` class inherits `Collection<string>` (`Collection(Of String)` in Visual Basic) and defines the `Changed` event, which uses a `DinosaursChangedEventArgs` class for the event information, and an enumeration to identify the kind of change.</span></span>  
  
 <span data-ttu-id="044f8-263">O exemplo de código chama várias propriedades e métodos de <xref:System.Collections.ObjectModel.Collection%601> para demonstrar o evento personalizado.</span><span class="sxs-lookup"><span data-stu-id="044f8-263">The code example calls several properties and methods of <xref:System.Collections.ObjectModel.Collection%601> to demonstrate the custom event.</span></span>  
  
 [!code-csharp[ObjectModel.CollectionInherited#1](~/samples/snippets/csharp/VS_Snippets_CLR/ObjectModel.CollectionInherited/cs/source.cs#1)]
 [!code-vb[ObjectModel.CollectionInherited#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObjectModel.CollectionInherited/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="044f8-264">
            <paramref name="index" /> é menor que zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-264">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="044f8-265">-ou-  <paramref name="index" /> é maior que <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-265">-or-  <paramref name="index" /> is greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public T this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T default[int] { T get(int index); void set(int index, T value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : 'T with get, set" Usage="System.Collections.ObjectModel.Collection&lt;'T&gt;.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="044f8-266">O índice com base em zero do elemento a ser obtido ou definido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-266">The zero-based index of the element to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="044f8-267">Obtém ou define o elemento no índice especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-267">Gets or sets the element at the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="044f8-268">O elemento no índice especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-268">The element at the specified index.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="044f8-269"><xref:System.Collections.ObjectModel.Collection%601> aceita `null` como um valor válido para a referência de tipos e permite elementos duplicados.</span><span class="sxs-lookup"><span data-stu-id="044f8-269"><xref:System.Collections.ObjectModel.Collection%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="044f8-270">Esta propriedade fornece a capacidade de acessar um elemento específico na coleção usando a seguinte sintaxe: `myCollection[index]`.</span><span class="sxs-lookup"><span data-stu-id="044f8-270">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.</span></span>  
  
 <span data-ttu-id="044f8-271">A linguagem c# usa a palavra-chave para definir os indexadores em vez de implementar o <xref:System.Collections.ObjectModel.Collection%601.Item%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="044f8-271">The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property.</span></span> <span data-ttu-id="044f8-272">Visual Basic implementa <xref:System.Collections.ObjectModel.Collection%601.Item%2A> como uma propriedade padrão, que fornece a mesma funcionalidade de indexação.</span><span class="sxs-lookup"><span data-stu-id="044f8-272">Visual Basic implements <xref:System.Collections.ObjectModel.Collection%601.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="044f8-273">Recuperando o valor dessa propriedade é uma operação de (1); definindo a propriedade também é uma operação de (1).</span><span class="sxs-lookup"><span data-stu-id="044f8-273">Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="044f8-274">O exemplo de código a seguir demonstra muitas das propriedades e métodos de <xref:System.Collections.ObjectModel.Collection%601>.</span><span class="sxs-lookup"><span data-stu-id="044f8-274">The following code example demonstrates many of the properties and methods of <xref:System.Collections.ObjectModel.Collection%601>.</span></span> <span data-ttu-id="044f8-275">O exemplo de código cria uma coleção de cadeias de caracteres, usa o <xref:System.Collections.ObjectModel.Collection%601.Add%2A> método para adicionar várias cadeias de caracteres, exibe o <xref:System.Collections.ObjectModel.Collection%601.Count%2A>e lista as cadeias de caracteres.</span><span class="sxs-lookup"><span data-stu-id="044f8-275">The code example creates a collection of strings, uses the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> method to add several strings, displays the <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, and lists the strings.</span></span> <span data-ttu-id="044f8-276">O exemplo usa o <xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A> método para localizar o índice de uma cadeia de caracteres e o <xref:System.Collections.ObjectModel.Collection%601.Contains%2A> método para determinar se uma cadeia de caracteres está na coleção.</span><span class="sxs-lookup"><span data-stu-id="044f8-276">The example uses the <xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A> method to find the index of a string and the <xref:System.Collections.ObjectModel.Collection%601.Contains%2A> method to determine whether a string is in the collection.</span></span> <span data-ttu-id="044f8-277">O exemplo insere uma cadeia de caracteres usando o <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> método e recupera e conjuntos de cadeias de caracteres usando o padrão <xref:System.Collections.ObjectModel.Collection%601.Item%2A> propriedade (o indexador em c#).</span><span class="sxs-lookup"><span data-stu-id="044f8-277">The example inserts a string using the <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> method and retrieves and sets strings using the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="044f8-278">O exemplo remove cadeias de caracteres por cadeia de caracteres de identidade usando o <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> método e por índice usando o <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> método.</span><span class="sxs-lookup"><span data-stu-id="044f8-278">The example removes strings by string identity using the <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> method and by index using the <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> method.</span></span> <span data-ttu-id="044f8-279">Por fim, o <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> método é usado para limpar todas as cadeias de caracteres da coleção.</span><span class="sxs-lookup"><span data-stu-id="044f8-279">Finally, the <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> method is used to clear all strings from the collection.</span></span>  
  
 [!code-cpp[ObjectModel.Collection#1](~/samples/snippets/cpp/VS_Snippets_CLR/ObjectModel.Collection/cpp/source.cpp#1)]
 [!code-csharp[ObjectModel.Collection#1](~/samples/snippets/csharp/VS_Snippets_CLR/ObjectModel.Collection/cs/source.cs#1)]
 [!code-vb[ObjectModel.Collection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObjectModel.Collection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="044f8-280">
            <paramref name="index" /> é menor que zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-280">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="044f8-281">-ou-  <paramref name="index" /> é igual ou superior a <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-281">-or-  <paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="044f8-282">
            <para>Classes derivadas podem substituir <see cref="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)" /> para alterar o comportamento de definir esta propriedade.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-282">
              <para>Derived classes can override <see cref="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)" /> to change the behavior of setting this property.</para>
            </span>
          </span>
        </block>
        <altmember cref="P:System.Collections.ObjectModel.Collection`1.Count" />
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="protected System.Collections.Generic.IList&lt;T&gt; Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;!T&gt; Items" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.Collection`1.Items" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Items As IList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Generic::IList&lt;T&gt; ^ Items { System::Collections::Generic::IList&lt;T&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Collections.Generic.IList&lt;'T&gt;" Usage="System.Collections.ObjectModel.Collection&lt;'T&gt;.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="044f8-283">Obtém um wrapper <see cref="T:System.Collections.Generic.IList`1" /> ao redor de <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-283">Gets a <see cref="T:System.Collections.Generic.IList`1" /> wrapper around the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="044f8-284">Um wrapper <see cref="T:System.Collections.Generic.IList`1" /> ao redor de <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-284">A <see cref="T:System.Collections.Generic.IList`1" /> wrapper around the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="044f8-285">O wrapper fornece a funcionalidade dos <xref:System.Collections.Generic.IList%601> de classe e expõe todos os elementos do <xref:System.Collections.ObjectModel.Collection%601>.</span><span class="sxs-lookup"><span data-stu-id="044f8-285">The wrapper provides the functionality of the <xref:System.Collections.Generic.IList%601> class and exposes all the elements of the <xref:System.Collections.ObjectModel.Collection%601>.</span></span>  
  
 <span data-ttu-id="044f8-286">A recuperação do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="044f8-286">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(T item);" />
      <MemberSignature Language="F#" Value="abstract member Remove : 'T -&gt; bool&#xA;override this.Remove : 'T -&gt; bool" Usage="collection.Remove item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="044f8-287">O objeto a remover do <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-287">The object to remove from the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          </span>
          <span data-ttu-id="044f8-288">O valor pode ser <see langword="null" /> para tipos de referência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-288">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="044f8-289">Remove a primeira ocorrência de um objeto específico do <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-289">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="044f8-290">
            <see langword="true" /> se <paramref name="item" /> for removido com êxito; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-290">
              <see langword="true" /> if <paramref name="item" /> is successfully removed; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="044f8-291">Esse método também retornará <see langword="false" /> se <paramref name="item" /> não tiver sido encontrado no <see cref="T:System.Collections.ObjectModel.Collection`1" /> original.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-291">This method also returns <see langword="false" /> if <paramref name="item" /> was not found in the original <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="044f8-292">Este método determina a igualdade usando o comparador de igualdade padrão <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> para `T`, o tipo dos valores na lista.</span><span class="sxs-lookup"><span data-stu-id="044f8-292">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="044f8-293">Esse método executa uma pesquisa linear. Portanto, o tempo médio de execução é proporcional ao <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="044f8-293">This method performs a linear search; therefore, the average execution time is proportional to <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span> <span data-ttu-id="044f8-294">Ou seja, esse método é um O (`n`) a operação, onde `n` é <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="044f8-294">That is, this method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="044f8-295">O exemplo de código a seguir demonstra muitas das propriedades e métodos de <xref:System.Collections.ObjectModel.Collection%601>.</span><span class="sxs-lookup"><span data-stu-id="044f8-295">The following code example demonstrates many of the properties and methods of <xref:System.Collections.ObjectModel.Collection%601>.</span></span> <span data-ttu-id="044f8-296">O exemplo de código cria uma coleção de cadeias de caracteres, usa o <xref:System.Collections.ObjectModel.Collection%601.Add%2A> método para adicionar várias cadeias de caracteres, exibe o <xref:System.Collections.ObjectModel.Collection%601.Count%2A>e lista as cadeias de caracteres.</span><span class="sxs-lookup"><span data-stu-id="044f8-296">The code example creates a collection of strings, uses the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> method to add several strings, displays the <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, and lists the strings.</span></span> <span data-ttu-id="044f8-297">O exemplo usa o <xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A> método para localizar o índice de uma cadeia de caracteres e o <xref:System.Collections.ObjectModel.Collection%601.Contains%2A> método para determinar se uma cadeia de caracteres está na coleção.</span><span class="sxs-lookup"><span data-stu-id="044f8-297">The example uses the <xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A> method to find the index of a string and the <xref:System.Collections.ObjectModel.Collection%601.Contains%2A> method to determine whether a string is in the collection.</span></span> <span data-ttu-id="044f8-298">O exemplo insere uma cadeia de caracteres usando o <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> método e recupera e conjuntos de cadeias de caracteres usando o padrão <xref:System.Collections.ObjectModel.Collection%601.Item%2A> propriedade (o indexador em c#).</span><span class="sxs-lookup"><span data-stu-id="044f8-298">The example inserts a string using the <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> method and retrieves and sets strings using the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="044f8-299">O exemplo remove cadeias de caracteres por cadeia de caracteres de identidade usando o <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> método e por índice usando o <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> método.</span><span class="sxs-lookup"><span data-stu-id="044f8-299">The example removes strings by string identity using the <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> method and by index using the <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> method.</span></span> <span data-ttu-id="044f8-300">Por fim, o <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> método é usado para limpar todas as cadeias de caracteres da coleção.</span><span class="sxs-lookup"><span data-stu-id="044f8-300">Finally, the <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> method is used to clear all strings from the collection.</span></span>  
  
 [!code-cpp[ObjectModel.Collection#1](~/samples/snippets/cpp/VS_Snippets_CLR/ObjectModel.Collection/cpp/source.cpp#1)]
 [!code-csharp[ObjectModel.Collection#1](~/samples/snippets/csharp/VS_Snippets_CLR/ObjectModel.Collection/cs/source.cs#1)]
 [!code-vb[ObjectModel.Collection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObjectModel.Collection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="044f8-301">
            <para>Classes derivadas podem substituir <see cref="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)" /> para alterar o comportamento desse método.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-301">
              <para>Derived classes can override <see cref="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)" /> to change the behavior of this method.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.Add(`0)" />
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="collection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)</InterfaceMember>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="044f8-302">O índice de base zero do elemento a ser removido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-302">The zero-based index of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="044f8-303">Remove o elemento no índice especificado do <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-303">Removes the element at the specified index of the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="044f8-304">Este método é uma operação O(`n`), em que `n` é <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="044f8-304">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="044f8-305">O exemplo de código a seguir demonstra muitas das propriedades e métodos de <xref:System.Collections.ObjectModel.Collection%601>.</span><span class="sxs-lookup"><span data-stu-id="044f8-305">The following code example demonstrates many of the properties and methods of <xref:System.Collections.ObjectModel.Collection%601>.</span></span> <span data-ttu-id="044f8-306">O exemplo de código cria uma coleção de cadeias de caracteres, usa o <xref:System.Collections.ObjectModel.Collection%601.Add%2A> método para adicionar várias cadeias de caracteres, exibe o <xref:System.Collections.ObjectModel.Collection%601.Count%2A>e lista as cadeias de caracteres.</span><span class="sxs-lookup"><span data-stu-id="044f8-306">The code example creates a collection of strings, uses the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> method to add several strings, displays the <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, and lists the strings.</span></span> <span data-ttu-id="044f8-307">O exemplo usa o <xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A> método para localizar o índice de uma cadeia de caracteres e o <xref:System.Collections.ObjectModel.Collection%601.Contains%2A> método para determinar se uma cadeia de caracteres está na coleção.</span><span class="sxs-lookup"><span data-stu-id="044f8-307">The example uses the <xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A> method to find the index of a string and the <xref:System.Collections.ObjectModel.Collection%601.Contains%2A> method to determine whether a string is in the collection.</span></span> <span data-ttu-id="044f8-308">O exemplo insere uma cadeia de caracteres usando o <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> método e recupera e conjuntos de cadeias de caracteres usando o padrão <xref:System.Collections.ObjectModel.Collection%601.Item%2A> propriedade (o indexador em c#).</span><span class="sxs-lookup"><span data-stu-id="044f8-308">The example inserts a string using the <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> method and retrieves and sets strings using the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="044f8-309">O exemplo remove cadeias de caracteres por cadeia de caracteres de identidade usando o <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> método e por índice usando o <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> método.</span><span class="sxs-lookup"><span data-stu-id="044f8-309">The example removes strings by string identity using the <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> method and by index using the <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> method.</span></span> <span data-ttu-id="044f8-310">Por fim, o <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> método é usado para limpar todas as cadeias de caracteres da coleção.</span><span class="sxs-lookup"><span data-stu-id="044f8-310">Finally, the <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> method is used to clear all strings from the collection.</span></span>  
  
 [!code-cpp[ObjectModel.Collection#1](~/samples/snippets/cpp/VS_Snippets_CLR/ObjectModel.Collection/cpp/source.cpp#1)]
 [!code-csharp[ObjectModel.Collection#1](~/samples/snippets/csharp/VS_Snippets_CLR/ObjectModel.Collection/cs/source.cs#1)]
 [!code-vb[ObjectModel.Collection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObjectModel.Collection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="044f8-311">
            <paramref name="index" /> é menor que zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-311">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="044f8-312">-ou-  <paramref name="index" /> é igual ou superior a <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-312">-or-  <paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="044f8-313">
            <para>Classes derivadas podem substituir <see cref="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)" /> para alterar o comportamento desse método.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-313">
              <para>Derived classes can override <see cref="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)" /> to change the behavior of this method.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.Remove(`0)" />
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.Add(`0)" />
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="protected virtual void RemoveItem (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RemoveItem(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RemoveItem (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RemoveItem(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveItem : int -&gt; unit&#xA;override this.RemoveItem : int -&gt; unit" Usage="collection.RemoveItem index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="044f8-314">O índice de base zero do elemento a ser removido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-314">The zero-based index of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="044f8-315">Remove o elemento no índice especificado do <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-315">Removes the element at the specified index of the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="044f8-316">Este método é uma operação O(`n`), em que `n` é <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="044f8-316">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="044f8-317">O exemplo de código a seguir mostra como derivar uma classe de coleção de um tipo construído do <xref:System.Collections.ObjectModel.Collection%601> classe genérica e como substituir o protegido <xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A>, <xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A>, <xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A>, e <xref:System.Collections.ObjectModel.Collection%601.SetItem%2A> métodos forneçam personalizado comportamento para o <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.Collection%601.Insert%2A>, <xref:System.Collections.ObjectModel.Collection%601.Remove%2A>, e <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> métodos e configurar o <xref:System.Collections.ObjectModel.Collection%601.Item%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="044f8-317">The following code example shows how to derive a collection class from a constructed type of the <xref:System.Collections.ObjectModel.Collection%601> generic class, and how to override the protected <xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A>, <xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A>, <xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A>, and <xref:System.Collections.ObjectModel.Collection%601.SetItem%2A> methods to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.Collection%601.Insert%2A>, <xref:System.Collections.ObjectModel.Collection%601.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property.</span></span>  
  
 <span data-ttu-id="044f8-318">O comportamento personalizado fornecido por esse exemplo é um `Changed` evento de notificação que é gerado no final de cada um dos métodos protegidos.</span><span class="sxs-lookup"><span data-stu-id="044f8-318">The custom behavior provided by this example is a `Changed` notification event that is raised at the end of each of the protected methods.</span></span> <span data-ttu-id="044f8-319">O `Dinosaurs` herda da classe `Collection<string>` (`Collection(Of String)` no Visual Basic) e define o `Changed` evento, que usa um `DinosaursChangedEventArgs` classe para as informações de evento e uma enumeração para identificar o tipo de alteração.</span><span class="sxs-lookup"><span data-stu-id="044f8-319">The `Dinosaurs` class inherits `Collection<string>` (`Collection(Of String)` in Visual Basic) and defines the `Changed` event, which uses a `DinosaursChangedEventArgs` class for the event information, and an enumeration to identify the kind of change.</span></span>  
  
 <span data-ttu-id="044f8-320">O exemplo de código chama várias propriedades e métodos de <xref:System.Collections.ObjectModel.Collection%601> para demonstrar o evento personalizado.</span><span class="sxs-lookup"><span data-stu-id="044f8-320">The code example calls several properties and methods of <xref:System.Collections.ObjectModel.Collection%601> to demonstrate the custom event.</span></span>  
  
 [!code-csharp[ObjectModel.CollectionInherited#1](~/samples/snippets/csharp/VS_Snippets_CLR/ObjectModel.CollectionInherited/cs/source.cs#1)]
 [!code-vb[ObjectModel.CollectionInherited#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObjectModel.CollectionInherited/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="044f8-321">
            <paramref name="index" /> é menor que zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-321">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="044f8-322">-ou-  <paramref name="index" /> é igual ou superior a <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-322">-or-  <paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SetItem">
      <MemberSignature Language="C#" Value="protected virtual void SetItem (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetItem(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetItem (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetItem(int index, T item);" />
      <MemberSignature Language="F#" Value="abstract member SetItem : int * 'T -&gt; unit&#xA;override this.SetItem : int * 'T -&gt; unit" Usage="collection.SetItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="044f8-323">O índice de base zero do elemento a ser substituído.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-323">The zero-based index of the element to replace.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="044f8-324">O novo valor para o elemento no índice especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-324">The new value for the element at the specified index.</span>
          </span>
          <span data-ttu-id="044f8-325">O valor pode ser <see langword="null" /> para tipos de referência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-325">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="044f8-326">Substitui o elemento no índice especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-326">Replaces the element at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="044f8-327"><xref:System.Collections.ObjectModel.Collection%601> aceita `null` como um valor válido para a referência de tipos e permite elementos duplicados.</span><span class="sxs-lookup"><span data-stu-id="044f8-327"><xref:System.Collections.ObjectModel.Collection%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="044f8-328">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="044f8-328">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="044f8-329">O exemplo de código a seguir mostra como derivar uma classe de coleção de um tipo construído do <xref:System.Collections.ObjectModel.Collection%601> classe genérica e como substituir o protegido <xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A>, <xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A>, <xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A>, e <xref:System.Collections.ObjectModel.Collection%601.SetItem%2A> métodos forneçam personalizado comportamento para o <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.Collection%601.Insert%2A>, <xref:System.Collections.ObjectModel.Collection%601.Remove%2A>, e <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> métodos e configurar o <xref:System.Collections.ObjectModel.Collection%601.Item%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="044f8-329">The following code example shows how to derive a collection class from a constructed type of the <xref:System.Collections.ObjectModel.Collection%601> generic class, and how to override the protected <xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A>, <xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A>, <xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A>, and <xref:System.Collections.ObjectModel.Collection%601.SetItem%2A> methods to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.Collection%601.Insert%2A>, <xref:System.Collections.ObjectModel.Collection%601.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property.</span></span>  
  
 <span data-ttu-id="044f8-330">O comportamento personalizado fornecido por esse exemplo é um `Changed` evento de notificação que é gerado no final de cada um dos métodos protegidos.</span><span class="sxs-lookup"><span data-stu-id="044f8-330">The custom behavior provided by this example is a `Changed` notification event that is raised at the end of each of the protected methods.</span></span> <span data-ttu-id="044f8-331">O `Dinosaurs` herda da classe `Collection<string>` (`Collection(Of String)` no Visual Basic) e define o `Changed` evento, que usa um `DinosaursChangedEventArgs` classe para as informações de evento e uma enumeração para identificar o tipo de alteração.</span><span class="sxs-lookup"><span data-stu-id="044f8-331">The `Dinosaurs` class inherits `Collection<string>` (`Collection(Of String)` in Visual Basic) and defines the `Changed` event, which uses a `DinosaursChangedEventArgs` class for the event information, and an enumeration to identify the kind of change.</span></span>  
  
 <span data-ttu-id="044f8-332">O exemplo de código chama várias propriedades e métodos de <xref:System.Collections.ObjectModel.Collection%601> para demonstrar o evento personalizado.</span><span class="sxs-lookup"><span data-stu-id="044f8-332">The code example calls several properties and methods of <xref:System.Collections.ObjectModel.Collection%601> to demonstrate the custom event.</span></span>  
  
 [!code-csharp[ObjectModel.CollectionInherited#1](~/samples/snippets/csharp/VS_Snippets_CLR/ObjectModel.CollectionInherited/cs/source.cs#1)]
 [!code-vb[ObjectModel.CollectionInherited#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObjectModel.CollectionInherited/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="044f8-333">
            <paramref name="index" /> é menor que zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-333">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="044f8-334">-ou-  <paramref name="index" /> é maior que <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-334">-or-  <paramref name="index" /> is greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)" />
        <altmember cref="P:System.Collections.ObjectModel.Collection`1.Items" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection&lt;T&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of T).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ObjectModel.Collection&lt;'T&gt;.System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="044f8-335">Obtém um valor que indica se o <see cref="T:System.Collections.Generic.ICollection`1" /> é somente leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-335">Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="044f8-336">
            <see langword="true" /> se o <see cref="T:System.Collections.Generic.ICollection`1" /> for somente leitura; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-336">
              <see langword="true" /> if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="044f8-337">Na implementação padrão de <see cref="T:System.Collections.ObjectModel.Collection`1" />, essa propriedade sempre retorna <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-337">In the default implementation of <see cref="T:System.Collections.ObjectModel.Collection`1" />, this property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="044f8-338">Uma coleção que seja somente leitura não permite a adição, a remoção ou a modificação de elementos após a coleção ser criada.</span><span class="sxs-lookup"><span data-stu-id="044f8-338">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="044f8-339">Uma coleção somente leitura é apenas uma coleção com um wrapper que impede a modificação da coleção; por isso, caso as alterações sejam feitas na coleção subjacente, a coleção somente leitura reflete as alterações.</span><span class="sxs-lookup"><span data-stu-id="044f8-339">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="044f8-340">A recuperação do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="044f8-340">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="044f8-341">O <see cref="T:System.Array" /> unidimensional que é o destino dos elementos copiados de <see cref="T:System.Collections.ICollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-341">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />.</span>
          </span>
          <span data-ttu-id="044f8-342">O <see cref="T:System.Array" /> deve ter indexação com base em zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-342">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="044f8-343">O índice baseado em zero na <c>array</c> na qual a cópia começa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-343">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="044f8-344">Copia os elementos do <see cref="T:System.Collections.ICollection" /> para um <see cref="T:System.Array" />, começando em um determinado índice <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-344">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="044f8-345">Se o tipo da fonte de <xref:System.Collections.ICollection> não pode ser convertido automaticamente para o tipo de destino `array`, as implementações de não-genérica de <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> throw <xref:System.InvalidCastException>, enquanto as implementações de genéricas geram <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="044f8-345">If the type of the source <xref:System.Collections.ICollection> cannot be cast automatically to the type of the destination `array`, the non-generic implementations of <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> throw <xref:System.InvalidCastException>, whereas the generic implementations throw <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="044f8-346">Este método é uma operação O(`n`), em que `n` é <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="044f8-346">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="044f8-347">
            <paramref name="array" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-347">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="044f8-348">
            <paramref name="index" /> é menor que zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-348">
              <paramref name="index" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="044f8-349">
            <paramref name="array" /> é multidimensional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-349">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="044f8-350">-ou- <paramref name="array" /> não tem indexação baseada em zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-350">-or-  <paramref name="array" /> does not have zero-based indexing.</span>
          </span>
          <span data-ttu-id="044f8-351">-ou- O número de elementos na <see cref="T:System.Collections.ICollection" /> de origem é maior que o espaço disponível de <paramref name="index" /> até o final da <paramref name="array" /> de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-351">-or-  The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="044f8-352">-ou- O tipo da <see cref="T:System.Collections.ICollection" /> de origem não pode ser convertido automaticamente no tipo da <paramref name="array" /> de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-352">-or-  The type of the source <see cref="T:System.Collections.ICollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ObjectModel.Collection&lt;'T&gt;.System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="044f8-353">Obtém um valor que indica se o acesso à <see cref="T:System.Collections.ICollection" /> é sincronizado (thread-safe).</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-353">Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="044f8-354">
            <see langword="true" /> caso o acesso ao <see cref="T:System.Collections.ICollection" /> seja sincronizado (thread-safe); do contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-354">
              <see langword="true" /> if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="044f8-355">Na implementação padrão de <see cref="T:System.Collections.ObjectModel.Collection`1" />, essa propriedade sempre retorna <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-355">In the default implementation of <see cref="T:System.Collections.ObjectModel.Collection`1" />, this property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="044f8-356">As implementações padrão de coleções em <xref:System.Collections.Generic?displayProperty=nameWithType> não são sincronizadas.</span><span class="sxs-lookup"><span data-stu-id="044f8-356">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="044f8-357">A enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</span><span class="sxs-lookup"><span data-stu-id="044f8-357">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="044f8-358">Para garantir acesso thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração.</span><span class="sxs-lookup"><span data-stu-id="044f8-358">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span> <span data-ttu-id="044f8-359">Para permitir que a coleção seja acessada por vários threads para leitura e gravação, você deve implementar sua própria sincronização.</span><span class="sxs-lookup"><span data-stu-id="044f8-359">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="044f8-360"><xref:System.Collections.ICollection.SyncRoot%2A> Retorna um objeto que pode ser usado para sincronizar o acesso para o <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="044f8-360"><xref:System.Collections.ICollection.SyncRoot%2A> returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="044f8-361">A sincronização é eficaz somente se todos os threads bloquear este objeto antes de acessar a coleção.</span><span class="sxs-lookup"><span data-stu-id="044f8-361">Synchronization is effective only if all threads lock this object before accessing the collection.</span></span>  
  
 <span data-ttu-id="044f8-362">A recuperação do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="044f8-362">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ObjectModel.Collection&lt;'T&gt;.System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="044f8-363">Obtém um objeto que pode ser usado para sincronizar o acesso ao <see cref="T:System.Collections.ICollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-363">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="044f8-364">Um objeto que pode ser usado para sincronizar o acesso ao <see cref="T:System.Collections.ICollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-364">An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
          <span data-ttu-id="044f8-365">Na implementação padrão da <see cref="T:System.Collections.ObjectModel.Collection`1" />, essa propriedade sempre retorna a instância atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-365">In the default implementation of <see cref="T:System.Collections.ObjectModel.Collection`1" />, this property always returns the current instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="044f8-366">As implementações padrão de coleções em <xref:System.Collections.Generic?displayProperty=nameWithType> não são sincronizadas.</span><span class="sxs-lookup"><span data-stu-id="044f8-366">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="044f8-367">A enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</span><span class="sxs-lookup"><span data-stu-id="044f8-367">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="044f8-368">Para garantir acesso thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração.</span><span class="sxs-lookup"><span data-stu-id="044f8-368">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="044f8-369">Para permitir que a coleção seja acessada por vários threads para leitura e gravação, você deve implementar sua própria sincronização.</span><span class="sxs-lookup"><span data-stu-id="044f8-369">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="044f8-370"><xref:System.Collections.ICollection.SyncRoot%2A> Retorna um objeto que pode ser usado para sincronizar o acesso para o <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="044f8-370"><xref:System.Collections.ICollection.SyncRoot%2A> returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="044f8-371">A sincronização é eficaz somente se todos os threads bloquear este objeto antes de acessar a coleção.</span><span class="sxs-lookup"><span data-stu-id="044f8-371">Synchronization is effective only if all threads lock this object before accessing the collection.</span></span> <span data-ttu-id="044f8-372">O código a seguir mostra o uso do <xref:System.Collections.ICollection.SyncRoot%2A> propriedade para c#, C++ e Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="044f8-372">The following code shows the use of the <xref:System.Collections.ICollection.SyncRoot%2A> property for C#, C++, and Visual Basic.</span></span>  
  
```csharp  
ICollection ic = ...;  
lock (ic.SyncRoot) {  
   // Access the collection.  
}  
```  
  
```vb  
Dim ic As ICollection = ...  
SyncLock ic.SyncRoot  
   ' Access the collection.  
End SyncLock  
```  
  
```cpp#  
ICollection^ ic = ...;  
try {  
   Monitor::Enter(ic->SyncRoot);  
   // Access the collection.  
}  
finally {  
   Monitor::Exit(ic->SyncRoot);  
}  
```  
  
 <span data-ttu-id="044f8-373">A recuperação do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="044f8-373">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="044f8-374">Retorna um enumerador que itera em uma coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-374">Returns an enumerator that iterates through a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="044f8-375">Um <see cref="T:System.Collections.IEnumerator" /> que pode ser usado para iterar pela coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-375">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="044f8-376">A instrução `foreach` da linguagem C# (`for each` no C++, `For Each` no Visual Basic) oculta a complexidade dos enumeradores.</span><span class="sxs-lookup"><span data-stu-id="044f8-376">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="044f8-377">Portanto, o uso de `foreach` é recomendado, em vez de manipular diretamente o enumerador.</span><span class="sxs-lookup"><span data-stu-id="044f8-377">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="044f8-378">Os enumeradores podem ser usados para ler os dados na coleção, mas não podem ser usados para modificar a coleção subjacente.</span><span class="sxs-lookup"><span data-stu-id="044f8-378">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="044f8-379">Inicialmente, o enumerador é posicionado antes do primeiro elemento da coleção.</span><span class="sxs-lookup"><span data-stu-id="044f8-379">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="044f8-380"><xref:System.Collections.IEnumerator.Reset%2A> também traz o enumerador de volta para essa posição.</span><span class="sxs-lookup"><span data-stu-id="044f8-380"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="044f8-381">Nesta posição, <xref:System.Collections.IEnumerator.Current%2A> está indefinido.</span><span class="sxs-lookup"><span data-stu-id="044f8-381">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="044f8-382">Por isso, você deve chamar <xref:System.Collections.IEnumerator.MoveNext%2A> para avançar o enumerador até o primeiro elemento da coleção antes de ler o valor de <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="044f8-382">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="044f8-383"><xref:System.Collections.IEnumerator.Current%2A> retorna o mesmo objeto até <xref:System.Collections.IEnumerator.MoveNext%2A> ou <xref:System.Collections.IEnumerator.Reset%2A> ser chamado.</span><span class="sxs-lookup"><span data-stu-id="044f8-383"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="044f8-384"><xref:System.Collections.IEnumerator.MoveNext%2A> define <xref:System.Collections.IEnumerator.Current%2A> como o próximo elemento.</span><span class="sxs-lookup"><span data-stu-id="044f8-384"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="044f8-385">Caso <xref:System.Collections.IEnumerator.MoveNext%2A> passe o final da coleção, o enumerador é posicionado após o último elemento na coleção e <xref:System.Collections.IEnumerator.MoveNext%2A> retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="044f8-385">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="044f8-386">Quando o enumerador está nessa posição, as chamadas subsequentes para <xref:System.Collections.IEnumerator.MoveNext%2A> também retornam `false`.</span><span class="sxs-lookup"><span data-stu-id="044f8-386">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="044f8-387">Caso a última chamada para <xref:System.Collections.IEnumerator.MoveNext%2A> tenha retornado `false`, <xref:System.Collections.IEnumerator.Current%2A> está indefinido.</span><span class="sxs-lookup"><span data-stu-id="044f8-387">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="044f8-388">Para definir <xref:System.Collections.IEnumerator.Current%2A> como o primeiro elemento da coleção novamente, é possível chamar <xref:System.Collections.IEnumerator.Reset%2A> seguido de <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="044f8-388">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="044f8-389">Um enumerador permanece válido desde que a coleção continue inalterada.</span><span class="sxs-lookup"><span data-stu-id="044f8-389">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="044f8-390">Se forem feitas alterações na coleção, como adicionar, modificar ou excluir elementos, o enumerador será invalidado de maneira irrevogável e seu comportamento permanecerá indefinido.</span><span class="sxs-lookup"><span data-stu-id="044f8-390">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="044f8-391">O enumerador não tem acesso exclusivo à coleção; por isso, a enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</span><span class="sxs-lookup"><span data-stu-id="044f8-391">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="044f8-392">Para garantir acesso thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração.</span><span class="sxs-lookup"><span data-stu-id="044f8-392">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="044f8-393">Para permitir que a coleção seja acessada por vários threads para leitura e gravação, você deve implementar sua própria sincronização.</span><span class="sxs-lookup"><span data-stu-id="044f8-393">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="044f8-394">As implementações padrão de coleções em <xref:System.Collections.Generic?displayProperty=nameWithType> não são sincronizadas.</span><span class="sxs-lookup"><span data-stu-id="044f8-394">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="044f8-395">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="044f8-395">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="044f8-396">O <see cref="T:System.Object" /> para adicionar ao <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-396">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="044f8-397">Adiciona um item ao <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-397">Adds an item to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="044f8-398">A posição na qual o novo elemento foi inserido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-398">The position into which the new element was inserted.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="044f8-399">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="044f8-399">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="044f8-400">O <paramref name="value" /> é de um tipo que não é atribuível à <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-400">
              <paramref name="value" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="044f8-401">O <see cref="T:System.Object" /> a ser localizado no <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-401">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="044f8-402">Determinará se o <see cref="T:System.Collections.IList" /> contiver um valor específico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-402">Determines whether the <see cref="T:System.Collections.IList" /> contains a specific value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="044f8-403">
            <see langword="true" /> se o <see cref="T:System.Object" /> for encontrado no <see cref="T:System.Collections.IList" />; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-403">
              <see langword="true" /> if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Collections.IList" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="044f8-404">Este método determina a igualdade primeiro determinando se `value` é do tipo `T` (ou nulo) e, em seguida, chamar <xref:System.Collections.ObjectModel.Collection%601.Contains%2A>.</span><span class="sxs-lookup"><span data-stu-id="044f8-404">This method determines equality by first determining whether `value` is of type `T` (or null) and then calling <xref:System.Collections.ObjectModel.Collection%601.Contains%2A>.</span></span>  
  
 <span data-ttu-id="044f8-405">Este método é uma operação O(`n`), em que `n` é <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="044f8-405">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="044f8-406">O <paramref name="value" /> é de um tipo que não é atribuível à <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-406">
              <paramref name="value" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="044f8-407">O <see cref="T:System.Object" /> a ser localizado no <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-407">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="044f8-408">Determina o índice de um item específico em <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-408">Determines the index of a specific item in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="044f8-409">O índice de <paramref name="value" /> se encontrado na lista; caso contrário, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-409">The index of <paramref name="value" /> if found in the list; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="044f8-410">Este método determina a igualdade usando o comparador padrão <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="044f8-410">This method determines equality using the default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>.</span></span>  <span data-ttu-id="044f8-411"><xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> verifica se tipo `T` implementa <xref:System.IComparable%601?displayProperty=nameWithType> e usa essa implementação, se disponível.</span><span class="sxs-lookup"><span data-stu-id="044f8-411"><xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements <xref:System.IComparable%601?displayProperty=nameWithType> and uses that implementation, if available.</span></span>  <span data-ttu-id="044f8-412">Caso contrário, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> verifica se tipo `T` implementa <xref:System.IComparable?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="044f8-412">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements <xref:System.IComparable?displayProperty=nameWithType>.</span></span>  <span data-ttu-id="044f8-413">Se tipo `T` implementam a interface, esse método usa <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="044f8-413">If type `T` does not implement either interface, this method uses <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="044f8-414">Este método é uma operação O(`n`), em que `n` é <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="044f8-414">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="044f8-415">O <paramref name="value" /> é de um tipo que não é atribuível à <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-415">
              <paramref name="value" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="044f8-416">O índice baseado em zero no qual o <c>valor</c> deve ser inserido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-416">The zero-based index at which <c>value</c> should be inserted.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="044f8-417">O <see cref="T:System.Object" /> a ser inserido no <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-417">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="044f8-418">Insere um item no <see cref="T:System.Collections.IList" /> no índice especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-418">Inserts an item into the <see cref="T:System.Collections.IList" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="044f8-419">Se `index` é igual ao número de itens em de <xref:System.Collections.IList>, em seguida, `value` é acrescentado ao final.</span><span class="sxs-lookup"><span data-stu-id="044f8-419">If `index` equals the number of items in the <xref:System.Collections.IList>, then `value` is appended to the end.</span></span>  
  
 <span data-ttu-id="044f8-420">Este método é uma operação O(`n`), em que `n` é <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="044f8-420">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="044f8-421">
            <paramref name="index" /> não é um índice válido no <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-421">
              <paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="044f8-422">O <paramref name="value" /> é de um tipo que não é atribuível à <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-422">
              <paramref name="value" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ObjectModel.Collection&lt;'T&gt;.System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="044f8-423">Obtém um valor que indica se o <see cref="T:System.Collections.IList" /> tem um tamanho fixo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-423">Gets a value indicating whether the <see cref="T:System.Collections.IList" /> has a fixed size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="044f8-424">
            <see langword="true" /> se o <see cref="T:System.Collections.IList" /> tiver um valor fixo; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-424">
              <see langword="true" /> if the <see cref="T:System.Collections.IList" /> has a fixed size; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="044f8-425">Na implementação padrão de <see cref="T:System.Collections.ObjectModel.Collection`1" />, essa propriedade sempre retorna <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-425">In the default implementation of <see cref="T:System.Collections.ObjectModel.Collection`1" />, this property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="044f8-426">Uma coleção com um tamanho fixo não permite a adição ou a remoção de elementos após a coleção ser criada, mas permite a modificação de elementos existentes.</span><span class="sxs-lookup"><span data-stu-id="044f8-426">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</span></span>  
  
 <span data-ttu-id="044f8-427">Uma coleção com um tamanho fixo é simplesmente uma coleção com um wrapper que impede a adição e a remoção de elementos; por isso, caso as alterações sejam feitas na coleção subjacente, inclusive a adição ou a remoção de elementos, a coleção de tamanho fixo reflete essas alterações.</span><span class="sxs-lookup"><span data-stu-id="044f8-427">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="044f8-428">A recuperação do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="044f8-428">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ObjectModel.Collection&lt;'T&gt;.System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="044f8-429">Obtém um valor que indica se o <see cref="T:System.Collections.IList" /> é somente leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-429">Gets a value indicating whether the <see cref="T:System.Collections.IList" /> is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="044f8-430">
            <see langword="true" /> se o <see cref="T:System.Collections.IList" /> for somente leitura; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-430">
              <see langword="true" /> if the <see cref="T:System.Collections.IList" /> is read-only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="044f8-431">Na implementação padrão de <see cref="T:System.Collections.ObjectModel.Collection`1" />, essa propriedade sempre retorna <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-431">In the default implementation of <see cref="T:System.Collections.ObjectModel.Collection`1" />, this property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="044f8-432">Uma coleção que seja somente leitura não permite a adição, a remoção ou a modificação de elementos após a coleção ser criada.</span><span class="sxs-lookup"><span data-stu-id="044f8-432">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="044f8-433">Uma coleção somente leitura é apenas uma coleção com um wrapper que impede a modificação da coleção; por isso, caso as alterações sejam feitas na coleção subjacente, a coleção somente leitura reflete as alterações.</span><span class="sxs-lookup"><span data-stu-id="044f8-433">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="044f8-434">A recuperação do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="044f8-434">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ObjectModel.Collection&lt;'T&gt;.System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="044f8-435">O índice com base em zero do elemento a ser obtido ou definido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-435">The zero-based index of the element to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="044f8-436">Obtém ou define o elemento no índice especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-436">Gets or sets the element at the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="044f8-437">O elemento no índice especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-437">The element at the specified index.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="044f8-438">Esta propriedade fornece a capacidade de acessar um elemento específico na coleção usando a seguinte sintaxe: `myCollection[index]`.</span><span class="sxs-lookup"><span data-stu-id="044f8-438">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.</span></span>  
  
 <span data-ttu-id="044f8-439">A linguagem c# usa a [isso](~/docs/csharp/language-reference/keywords/this.md) palavra-chave para definir os indexadores em vez de implementar o <xref:System.Collections.ObjectModel.Collection%601.System%23Collections%23IList%23Item%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="044f8-439">The C# language uses the [this](~/docs/csharp/language-reference/keywords/this.md) keyword to define the indexers instead of implementing the <xref:System.Collections.ObjectModel.Collection%601.System%23Collections%23IList%23Item%2A> property.</span></span> <span data-ttu-id="044f8-440">Visual Basic implementa <xref:System.Collections.ObjectModel.Collection%601.System%23Collections%23IList%23Item%2A> como uma propriedade padrão, que fornece a mesma funcionalidade de indexação.</span><span class="sxs-lookup"><span data-stu-id="044f8-440">Visual Basic implements <xref:System.Collections.ObjectModel.Collection%601.System%23Collections%23IList%23Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="044f8-441">Recuperando o valor dessa propriedade é uma operação de (1); definindo a propriedade também é uma operação de (1).</span><span class="sxs-lookup"><span data-stu-id="044f8-441">Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="044f8-442">
            <paramref name="index" /> não é um índice válido no <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-442">
              <paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="044f8-443">A propriedade é definida e <paramref name="value" /> é de um tipo que não é atribuível ao <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-443">The property is set and <paramref name="value" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="044f8-444">O <see cref="T:System.Object" /> a ser removido de <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-444">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="044f8-445">Remove a primeira ocorrência de um objeto específico do <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-445">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="044f8-446">Este método determina a igualdade usando o comparador padrão <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="044f8-446">This method determines equality using the default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>.</span></span>  <span data-ttu-id="044f8-447"><xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> verifica se tipo `T` implementa <xref:System.IComparable%601?displayProperty=nameWithType> e usa essa implementação, se disponível.</span><span class="sxs-lookup"><span data-stu-id="044f8-447"><xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements <xref:System.IComparable%601?displayProperty=nameWithType> and uses that implementation, if available.</span></span>  <span data-ttu-id="044f8-448">Caso contrário, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> verifica se tipo `T` implementa <xref:System.IComparable?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="044f8-448">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements <xref:System.IComparable?displayProperty=nameWithType>.</span></span>  <span data-ttu-id="044f8-449">Se tipo `T` implementam a interface, esse método usa <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="044f8-449">If type `T` does not implement either interface, this method uses <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="044f8-450">Este método é uma operação O(`n`), em que `n` é <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="044f8-450">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="044f8-451">O <paramref name="value" /> é de um tipo que não é atribuível à <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="044f8-451">
              <paramref name="value" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>