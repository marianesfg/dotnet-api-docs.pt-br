<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Collection`1.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58d6fa73ab1869f7d3db9619c3424c839a24dfe2c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8d6fa73ab1869f7d3db9619c3424c839a24dfe2c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>The type of elements in the collection.</source>
          <target state="translated">O tipo dos elementos na coleção.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>Provides the base class for a generic collection.</source>
          <target state="translated">Fornece a classe base para uma coleção genérica.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>The <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> class can be used immediately by creating an instance of one of its constructed types; all you have to do is specify the type of object to be contained in the collection.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> classe pode ser usada imediatamente, criando uma instância de um dos seus tipos construídos; tudo o que você precisa fazer é especificar o tipo de objeto a ser contido na coleção.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>In addition, you can derive your own collection type from any constructed type, or derive a generic collection type from the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> class itself.</source>
          <target state="translated">Além disso, você pode derivar seu próprio tipo de coleção de qualquer tipo construído ou derivar um tipo de coleção genérica do <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> classe em si.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>The <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> class provides protected methods that can be used to customize its behavior when adding and removing items, clearing the collection, or setting the value of an existing item.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> classe fornece métodos protegidos que podem ser usados para personalizar seu comportamento ao adicionar e remover itens, limpar a coleção ou definindo o valor de um item existente.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>Most <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> objectscan be modified.</source>
          <target state="translated">A maioria dos <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> objectscan ser modificado.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>However, a <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> object that is initialized with a read-only <ph id="ph2">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> object cannot be modified.</source>
          <target state="translated">No entanto, um <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> objeto que é inicializado com um somente leitura <ph id="ph2">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> objeto não pode ser modificado.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>See <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> for a read-only version of this class.</source>
          <target state="translated">Consulte <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> para obter uma versão somente leitura dessa classe.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>Elements in this collection can be accessed using an integer index.</source>
          <target state="translated">Elementos nesta coleção podem ser acessados usando um índice de inteiro.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>Indexes in this collection are zero-based.</source>
          <target state="translated">Índices nesta coleção são baseadas em zero.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source><ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid value for reference types and allows duplicate elements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> aceita <ph id="ph2">`null`</ph> como um valor válido para a referência de tipos e permite que os elementos duplicados.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>This section contains two code examples.</source>
          <target state="translated">Esta seção contém dois exemplos de código.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>The first example demonstrates several properties and methods of the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> class.</source>
          <target state="translated">O primeiro exemplo demonstra várias propriedades e métodos para o <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>The second example shows how to derive a collection class from a constructed type of <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>, and how to override the protected methods of <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> to provide custom behavior.</source>
          <target state="translated">O segundo exemplo mostra como derivar uma classe de coleção de um tipo construído de <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>e como substituir os métodos protegidos de <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> para fornecer um comportamento personalizado.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>Example 1</source>
          <target state="translated">Exemplo 1</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>The following code example demonstrates many of the properties and methods of <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>.</source>
          <target state="translated">O exemplo de código a seguir demonstra a muitas das propriedades e métodos de <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>The code example creates a collection of strings, uses the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph> method to add several strings, displays the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>, and lists the strings.</source>
          <target state="translated">O exemplo de código cria uma coleção de cadeias de caracteres, usa o <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph> método para adicionar várias cadeias de caracteres, exibe o <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>e lista as cadeias de caracteres.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A&gt;</ph> method to find the index of a string and the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Contains%2A&gt;</ph> method to determine whether a string is in the collection.</source>
          <target state="translated">O exemplo usa o <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A&gt;</ph> método para localizar o índice de uma cadeia de caracteres e o <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Contains%2A&gt;</ph> método para determinar se uma cadeia de caracteres está na coleção.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>The example inserts a string using the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph> method and retrieves and sets strings using the default <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> property (the indexer in C#).</source>
          <target state="translated">O exemplo insere uma cadeia de caracteres usando o <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph> método e recupera e conjuntos de cadeias de caracteres usando o padrão <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> propriedade (indexador em c#).</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>The example removes strings by string identity using the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%2A&gt;</ph> method and by index using the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo remove cadeias de caracteres com o uso de identidade com a cadeia de caracteres de <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%2A&gt;</ph> método e por índice usando o <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>Finally, the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> method is used to clear all strings from the collection.</source>
          <target state="translated">Por fim, o <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> método é usado para limpar todas as cadeias de caracteres da coleção.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>Example 2</source>
          <target state="translated">Exemplo 2</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>The following code example shows how to derive a collection class from a constructed type of the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> generic class, and how to override the protected <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Collections.ObjectModel.Collection%601.SetItem%2A&gt;</ph> methods to provide custom behavior for the <ph id="ph6">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph>, <ph id="ph8">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%2A&gt;</ph>, and <ph id="ph9">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> methods, and for setting the <ph id="ph10">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> property.</source>
          <target state="translated">O exemplo de código a seguir mostra como derivar uma classe de coleção de um tipo construído do <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> classe genérica e como substituir protegido <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A&gt;</ph>, e <ph id="ph5">&lt;xref:System.Collections.ObjectModel.Collection%601.SetItem%2A&gt;</ph> métodos para fornecer personalizado comportamento para o <ph id="ph6">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph>, <ph id="ph8">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%2A&gt;</ph>, e <ph id="ph9">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> métodos e para configuração de <ph id="ph10">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>The custom behavior provided by this example is a <ph id="ph1">`Changed`</ph> notification event that is raised at the end of each of the protected methods.</source>
          <target state="translated">O comportamento personalizado fornecido por esse exemplo é um <ph id="ph1">`Changed`</ph> evento de notificação que é gerado no final de cada um dos métodos protegidos.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>The <ph id="ph1">`Dinosaurs`</ph> class inherits <ph id="ph2">`Collection&lt;string&gt;`</ph> (<ph id="ph3">`Collection(Of String)`</ph> in Visual Basic) and defines the <ph id="ph4">`Changed`</ph> event, which uses a <ph id="ph5">`DinosaursChangedEventArgs`</ph> class for the event information, and an enumeration to identify the kind of change.</source>
          <target state="translated">O <ph id="ph1">`Dinosaurs`</ph> herda da classe <ph id="ph2">`Collection&lt;string&gt;`</ph> (<ph id="ph3">`Collection(Of String)`</ph> no Visual Basic) e define o <ph id="ph4">`Changed`</ph> evento, que usa um <ph id="ph5">`DinosaursChangedEventArgs`</ph> classe para as informações de evento e uma enumeração para identificar o tipo de alteração.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>The code example calls several properties and methods of <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> to demonstrate the custom event.</source>
          <target state="translated">O exemplo de código chama várias propriedades e métodos de <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> para demonstrar o evento personalizado.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>Public static (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> in Visual Basic) members of this type are thread safe.</source>
          <target state="translated">Os membros estáticos públicos (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> no Visual Basic) desse são thread-safe.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>Any instance members are not guaranteed to be thread safe.</source>
          <target state="translated">Não há garantia de que qualquer membro de instância seja thread-safe.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph> can support multiple readers concurrently, as long as the collection is not modified.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph> pode dar suporte a vários leitores simultaneamente, desde que a coleção não é modificada.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>Even so, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Mesmo assim, enumerar através de uma coleção intrinsecamente não é um procedimento de thread-safe.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Para garantir acesso thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Para permitir que a coleção a ser acessado por vários threads para leitura e gravação, você deve implementar sua sincronização.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>This base class is provided to make it easier for implementers to create a custom collection.</source>
          <target state="translated">Essa classe base é fornecido para tornar mais fácil para os implementadores criar uma coleção personalizada.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>Implementers are encouraged to extend this base class instead of creating their own.</source>
          <target state="translated">Os implementadores são incentivados a estender a classe base em vez de criar seus próprios.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="T:System.Collections.ObjectModel.Collection`1">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph> class that is empty.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph> que está vazia.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.#ctor">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">Este construtor é uma operação O(1).</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.#ctor">
          <source>The following code example demonstrates many of the properties and methods of <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>.</source>
          <target state="translated">O exemplo de código a seguir demonstra a muitas das propriedades e métodos de <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.#ctor">
          <source>The code example creates a collection of strings with the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.%23ctor&gt;</ph> constructor, uses the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph> method to add several strings, displays the <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>, and lists the strings.</source>
          <target state="translated">O exemplo de código cria uma coleção de cadeias de caracteres com o <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.%23ctor&gt;</ph> construtor, usa o <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph> método para adicionar várias cadeias de caracteres, exibe o <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>e lista as cadeias de caracteres.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.#ctor">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A&gt;</ph> method to find the index of a string and the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Contains%2A&gt;</ph> method to determine whether a string is in the collection.</source>
          <target state="translated">O exemplo usa o <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A&gt;</ph> método para localizar o índice de uma cadeia de caracteres e o <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Contains%2A&gt;</ph> método para determinar se uma cadeia de caracteres está na coleção.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.#ctor">
          <source>The example inserts a string using the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph> method and retrieves and sets strings using the default <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> property (the indexer in C#).</source>
          <target state="translated">O exemplo insere uma cadeia de caracteres usando o <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph> método e recupera e conjuntos de cadeias de caracteres usando o padrão <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> propriedade (indexador em c#).</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.#ctor">
          <source>The example removes strings by string identity using the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%2A&gt;</ph> method and by index using the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo remove cadeias de caracteres com o uso de identidade com a cadeia de caracteres de <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%2A&gt;</ph> método e por índice usando o <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.#ctor">
          <source>Finally, the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> method is used to clear all strings from the collection.</source>
          <target state="translated">Por fim, o <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> método é usado para limpar todas as cadeias de caracteres da coleção.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.#ctor(System.Collections.Generic.IList{`0})">
          <source>The list that is wrapped by the new collection.</source>
          <target state="translated">A lista que é encapsulada pela nova coleção.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.#ctor(System.Collections.Generic.IList{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph> class as a wrapper for the specified list.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph> como um wrapper para a lista especificada.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.#ctor(System.Collections.Generic.IList{`0})">
          <source>The elements of the list are not copied.</source>
          <target state="translated">Os elementos da lista não são copiados.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.#ctor(System.Collections.Generic.IList{`0})">
          <source>The list is wrapped by the collection, so that subsequent changes to the elements of the list are visible through the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>.</source>
          <target state="translated">A lista é encapsulada por coleção, para que as alterações subsequentes para os elementos da lista são visíveis por meio de <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.#ctor(System.Collections.Generic.IList{`0})">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">Este construtor é uma operação O(1).</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.#ctor(System.Collections.Generic.IList{`0})">
          <source><ph id="ph1">&lt;paramref name="list" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="list" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.Add(`0)">
          <source>The object to be added to the end of the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</source>
          <target state="translated">O objeto a ser adicionado ao final do <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.Add(`0)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">O valor pode ser <ph id="ph1">&lt;see langword="null" /&gt;</ph> para tipos de referência.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.Add(`0)">
          <source>Adds an object to the end of the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</source>
          <target state="translated">Adiciona um objeto ao final do <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Add(`0)">
          <source><ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid value for reference types and allows duplicate elements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> aceita <ph id="ph2">`null`</ph> como um valor válido para a referência de tipos e permite que os elementos duplicados.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Add(`0)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Este método é uma operação O(1).</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Add(`0)">
          <source>The following code example demonstrates many of the properties and methods of <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>.</source>
          <target state="translated">O exemplo de código a seguir demonstra a muitas das propriedades e métodos de <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Add(`0)">
          <source>The code example creates a collection of strings, uses the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph> method to add several strings, displays the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>, and lists the strings.</source>
          <target state="translated">O exemplo de código cria uma coleção de cadeias de caracteres, usa o <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph> método para adicionar várias cadeias de caracteres, exibe o <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>e lista as cadeias de caracteres.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Add(`0)">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A&gt;</ph> method to find the index of a string and the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Contains%2A&gt;</ph> method to determine whether a string is in the collection.</source>
          <target state="translated">O exemplo usa o <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A&gt;</ph> método para localizar o índice de uma cadeia de caracteres e o <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Contains%2A&gt;</ph> método para determinar se uma cadeia de caracteres está na coleção.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Add(`0)">
          <source>The example inserts a string using the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph> method and retrieves and sets strings using the default <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> property (the indexer in C#).</source>
          <target state="translated">O exemplo insere uma cadeia de caracteres usando o <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph> método e recupera e conjuntos de cadeias de caracteres usando o padrão <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> propriedade (indexador em c#).</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Add(`0)">
          <source>The example removes strings by string identity using the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%2A&gt;</ph> method and by index using the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo remove cadeias de caracteres com o uso de identidade com a cadeia de caracteres de <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%2A&gt;</ph> método e por índice usando o <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Add(`0)">
          <source>Finally, the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> method is used to clear all strings from the collection.</source>
          <target state="translated">Por fim, o <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> método é usado para limpar todas as cadeias de caracteres da coleção.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.Clear">
          <source>Removes all elements from the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</source>
          <target state="translated">Remove todos os elementos do <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Clear">
          <source><ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph> is set to zero, and references to other objects from elements of the collection are also released.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph> é definido como zero, e referências a outros objetos de elementos da coleção também são liberadas.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Clear">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Este método é uma operação O(<ph id="ph1">`n`</ph>), em que <ph id="ph2">`n`</ph> é <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Clear">
          <source>The following code example demonstrates many of the properties and methods of <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>.</source>
          <target state="translated">O exemplo de código a seguir demonstra a muitas das propriedades e métodos de <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Clear">
          <source>The code example creates a collection of strings, uses the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph> method to add several strings, displays the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>, and lists the strings.</source>
          <target state="translated">O exemplo de código cria uma coleção de cadeias de caracteres, usa o <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph> método para adicionar várias cadeias de caracteres, exibe o <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>e lista as cadeias de caracteres.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Clear">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A&gt;</ph> method to find the index of a string and the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Contains%2A&gt;</ph> method to determine whether a string is in the collection.</source>
          <target state="translated">O exemplo usa o <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A&gt;</ph> método para localizar o índice de uma cadeia de caracteres e o <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Contains%2A&gt;</ph> método para determinar se uma cadeia de caracteres está na coleção.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Clear">
          <source>The example inserts a string using the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph> method and retrieves and sets strings using the default <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> property (the indexer in C#).</source>
          <target state="translated">O exemplo insere uma cadeia de caracteres usando o <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph> método e recupera e conjuntos de cadeias de caracteres usando o padrão <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> propriedade (indexador em c#).</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Clear">
          <source>The example removes strings by string identity using the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%2A&gt;</ph> method and by index using the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo remove cadeias de caracteres com o uso de identidade com a cadeia de caracteres de <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%2A&gt;</ph> método e por índice usando o <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Clear">
          <source>Finally, the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> method is used to clear all strings from the collection.</source>
          <target state="translated">Por fim, o <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> método é usado para limpar todas as cadeias de caracteres da coleção.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Clear">
          <source>Derived classes can override <ph id="ph1">&lt;see cref="M:System.Collections.ObjectModel.Collection`1.ClearItems" /&gt;</ph> to change the behavior of this method.</source>
          <target state="translated">Classes derivadas podem substituir <ph id="ph1">&lt;see cref="M:System.Collections.ObjectModel.Collection`1.ClearItems" /&gt;</ph> para alterar o comportamento desse método.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.ClearItems">
          <source>Removes all elements from the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</source>
          <target state="translated">Remove todos os elementos do <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.ClearItems">
          <source><ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph> is set to zero, and references to other objects from elements of the collection are also released.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph> é definido como zero, e referências a outros objetos de elementos da coleção também são liberadas.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.ClearItems">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Este método é uma operação O(<ph id="ph1">`n`</ph>), em que <ph id="ph2">`n`</ph> é <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.ClearItems">
          <source>The following code example shows how to derive a collection class from a constructed type of the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> generic class, and how to override the protected <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Collections.ObjectModel.Collection%601.SetItem%2A&gt;</ph> methods to provide custom behavior for the <ph id="ph6">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph>, <ph id="ph8">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%2A&gt;</ph>, and <ph id="ph9">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> methods, and for setting the <ph id="ph10">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> property.</source>
          <target state="translated">O exemplo de código a seguir mostra como derivar uma classe de coleção de um tipo construído do <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> classe genérica e como substituir protegido <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A&gt;</ph>, e <ph id="ph5">&lt;xref:System.Collections.ObjectModel.Collection%601.SetItem%2A&gt;</ph> métodos para fornecer personalizado comportamento para o <ph id="ph6">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph>, <ph id="ph8">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%2A&gt;</ph>, e <ph id="ph9">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> métodos e para configuração de <ph id="ph10">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.ClearItems">
          <source>The custom behavior provided by this example is a <ph id="ph1">`Changed`</ph> notification event that is raised at the end of each of the protected methods.</source>
          <target state="translated">O comportamento personalizado fornecido por esse exemplo é um <ph id="ph1">`Changed`</ph> evento de notificação que é gerado no final de cada um dos métodos protegidos.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.ClearItems">
          <source>The <ph id="ph1">`Dinosaurs`</ph> class inherits <ph id="ph2">`Collection&lt;string&gt;`</ph> (<ph id="ph3">`Collection(Of String)`</ph> in Visual Basic) and defines the <ph id="ph4">`Changed`</ph> event, which uses a <ph id="ph5">`DinosaursChangedEventArgs`</ph> class for the event information, and an enumeration to identify the kind of change.</source>
          <target state="translated">O <ph id="ph1">`Dinosaurs`</ph> herda da classe <ph id="ph2">`Collection&lt;string&gt;`</ph> (<ph id="ph3">`Collection(Of String)`</ph> no Visual Basic) e define o <ph id="ph4">`Changed`</ph> evento, que usa um <ph id="ph5">`DinosaursChangedEventArgs`</ph> classe para as informações de evento e uma enumeração para identificar o tipo de alteração.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.ClearItems">
          <source>The code example calls several properties and methods of <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> to demonstrate the custom event.</source>
          <target state="translated">O exemplo de código chama várias propriedades e métodos de <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> para demonstrar o evento personalizado.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.ClearItems">
          <source>Derived classes can override this method to change the behavior of the <ph id="ph1">&lt;see cref="M:System.Collections.ObjectModel.Collection`1.Clear" /&gt;</ph> method.</source>
          <target state="translated">Classes derivadas podem substituir este método para alterar o comportamento de <ph id="ph1">&lt;see cref="M:System.Collections.ObjectModel.Collection`1.Clear" /&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.Contains(`0)">
          <source>The object to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</source>
          <target state="translated">O objeto a ser localizado no <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.Contains(`0)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">O valor pode ser <ph id="ph1">&lt;see langword="null" /&gt;</ph> para tipos de referência.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.Contains(`0)">
          <source>Determines whether an element is in the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</source>
          <target state="translated">Determina se um elemento está no <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.Contains(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="item" /&gt;</ph> is found in the <ph id="ph3">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;paramref name="item" /&gt;</ph> for encontrado no <ph id="ph3">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Contains(`0)">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> object is created using the default constructor, this method determines equality using the default equality comparer <ph id="ph2">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> for <ph id="ph3">`T`</ph>, the type of values in the list.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> objeto é criado usando o construtor padrão, esse método determina a igualdade usando o comparador de igualdade padrão <ph id="ph2">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> para <ph id="ph3">`T`</ph>, o tipo de valores na lista.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Contains(`0)">
          <source>If type <ph id="ph1">`T`</ph> does not implement the <ph id="ph2">&lt;xref:System.IEquatable%601&gt;</ph> interface, the <ph id="ph3">&lt;xref:System.Object.Equals%2A&gt;</ph> method is used.</source>
          <target state="translated">Se tipo <ph id="ph1">`T`</ph> não implementa o <ph id="ph2">&lt;xref:System.IEquatable%601&gt;</ph> interface, o <ph id="ph3">&lt;xref:System.Object.Equals%2A&gt;</ph> método é usado.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Contains(`0)">
          <source>If the Collection object is created by passing an <ph id="ph1">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> object to the constructor, the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Contains%2A&gt;</ph> method will be determined by the <ph id="ph3">&lt;xref:System.Collections.Generic.IEqualityComparer%601&gt;</ph> interface used by that <ph id="ph4">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> object.</source>
          <target state="translated">Se o objeto de coleção é criado, passando um <ph id="ph1">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> objeto para o construtor de <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Contains%2A&gt;</ph> método será determinado pelo <ph id="ph3">&lt;xref:System.Collections.Generic.IEqualityComparer%601&gt;</ph> interface usada pelo <ph id="ph4">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Contains(`0)">
          <source>This method performs a linear search; therefore, the average execution time is proportional to <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Esse método executa uma pesquisa linear; Portanto, o tempo médio de execução é proporcional ao <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Contains(`0)">
          <source>That is, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Ou seja, esse método é um O (<ph id="ph1">`n`</ph>) operação, onde <ph id="ph2">`n`</ph> é <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that is the destination of the elements copied from <ph id="ph2">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> unidimensional que é o destino dos elementos copiados de <ph id="ph2">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> must have zero-based indexing.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> deve ter indexação com base em zero.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">O índice baseado em zero na <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> na qual a cópia começa.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)">
          <source>Copies the entire <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph> to a compatible one-dimensional <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>, starting at the specified index of the target array.</source>
          <target state="translated">Copia todo o <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph> em um <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph> unidimensional compatível, começando no índice especificado da matriz de destino.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)">
          <source>This method uses <ph id="ph1">&lt;xref:System.Array.Copy%2A?displayProperty=nameWithType&gt;</ph> to copy the elements.</source>
          <target state="translated">Este método usa <ph id="ph1">&lt;xref:System.Array.Copy%2A?displayProperty=nameWithType&gt;</ph> para copiar os elementos.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)">
          <source>The elements are copied to the <ph id="ph1">&lt;xref:System.Array&gt;</ph> in the same order in which the enumerator iterates through the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>.</source>
          <target state="translated">Os elementos são copiados para o <ph id="ph1">&lt;xref:System.Array&gt;</ph> na mesma ordem em que o enumerador que itera por meio de <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Este método é uma operação O(<ph id="ph1">`n`</ph>), em que <ph id="ph2">`n`</ph> é <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> é menor que zero.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph> is greater than the available space from <ph id="ph2">&lt;paramref name="index" /&gt;</ph> to the end of the destination <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">O número de elementos na origem <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph> é maior do que o espaço disponível de <ph id="ph2">&lt;paramref name="index" /&gt;</ph> até o final do <ph id="ph3">&lt;paramref name="array" /&gt;</ph> de destino.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.Collection`1.Count">
          <source>Gets the number of elements actually contained in the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</source>
          <target state="translated">Obtém o número de elementos realmente contidos no <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.Count">
          <source>The number of elements actually contained in the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</source>
          <target state="translated">O número de elementos realmente contidos no <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.Count">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">A recuperação do valor dessa propriedade é uma operação O(1).</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.Count">
          <source>The following code example demonstrates many of the properties and methods of <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>.</source>
          <target state="translated">O exemplo de código a seguir demonstra a muitas das propriedades e métodos de <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.Count">
          <source>The code example creates a collection of strings, uses the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph> method to add several strings, displays the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>, and lists the strings.</source>
          <target state="translated">O exemplo de código cria uma coleção de cadeias de caracteres, usa o <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph> método para adicionar várias cadeias de caracteres, exibe o <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>e lista as cadeias de caracteres.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.Count">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A&gt;</ph> method to find the index of a string and the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Contains%2A&gt;</ph> method to determine whether a string is in the collection.</source>
          <target state="translated">O exemplo usa o <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A&gt;</ph> método para localizar o índice de uma cadeia de caracteres e o <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Contains%2A&gt;</ph> método para determinar se uma cadeia de caracteres está na coleção.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.Count">
          <source>The example inserts a string using the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph> method and retrieves and sets strings using the default <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> property (the indexer in C#).</source>
          <target state="translated">O exemplo insere uma cadeia de caracteres usando o <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph> método e recupera e conjuntos de cadeias de caracteres usando o padrão <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> propriedade (indexador em c#).</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.Count">
          <source>The example removes strings by string identity using the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%2A&gt;</ph> method and by index using the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo remove cadeias de caracteres com o uso de identidade com a cadeia de caracteres de <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%2A&gt;</ph> método e por índice usando o <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.Count">
          <source>Finally, the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> method is used to clear all strings from the collection.</source>
          <target state="translated">Por fim, o <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> método é usado para limpar todas as cadeias de caracteres da coleção.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.GetEnumerator">
          <source>Returns an enumerator that iterates through the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</source>
          <target state="translated">Retorna um enumerador que itera por meio de <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerator`1" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerator`1" /&gt;</ph> para o <ph id="ph2">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in C++, <ph id="ph3">`For Each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">A instrução <ph id="ph1">`foreach`</ph> da linguagem C# (<ph id="ph2">`for each`</ph> no C++, <ph id="ph3">`For Each`</ph> no Visual Basic) oculta a complexidade dos enumeradores.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">Portanto, o uso de <ph id="ph1">`foreach`</ph> é recomendado, em vez de manipular diretamente o enumerador.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Os enumeradores podem ser usados para ler os dados na coleção, mas não podem ser usados para modificar a coleção subjacente.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Inicialmente, o enumerador é posicionado antes do primeiro elemento da coleção.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.GetEnumerator">
          <source>At this position, <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">Nesta posição, <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> está indefinido.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph>.</source>
          <target state="translated">Por isso, você deve chamar <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> para avançar o enumerador até o primeiro elemento da coleção antes de ler o valor de <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> returns the same object until <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> Retorna o mesmo objeto até <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> é chamado.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> define <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> como o próximo elemento.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Caso <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passe o final da coleção, o enumerador é posicionado após o último elemento na coleção e <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> retorna <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Quando o enumerador está nessa posição, as chamadas subsequentes para <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> também retornam <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">Caso a última chamada para <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> tenha retornado <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> está indefinido.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.GetEnumerator">
          <source>You cannot set <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> to the first element of the collection again; you must create a new enumerator instance instead.</source>
          <target state="translated">Não é possível definir <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> como o primeiro elemento da coleção novamente; você deve criar uma nova instância de enumerador em vez disso.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Um enumerador permanece válido desde que a coleção continue inalterada.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">Se forem feitas alterações na coleção, como adicionar, modificar ou excluir elementos, o enumerador será invalidado de maneira irrevogável e seu comportamento permanecerá indefinido.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">O enumerador não tem acesso exclusivo à coleção; por isso, a enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Para garantir acesso thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Para permitir que a coleção a ser acessado por vários threads para leitura e gravação, você deve implementar sua sincronização.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.GetEnumerator">
          <source>Default implementations of collections in <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> are not synchronized.</source>
          <target state="translated">As implementações padrão de coleções em <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> não são sincronizadas.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Este método é uma operação O(1).</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)">
          <source>The object to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</source>
          <target state="translated">O objeto a ser localizado no <ph id="ph1">&lt;see cref="T:System.Collections.Generic.List`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">O valor pode ser <ph id="ph1">&lt;see langword="null" /&gt;</ph> para tipos de referência.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)">
          <source>Searches for the specified object and returns the zero-based index of the first occurrence within the entire <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</source>
          <target state="translated">Pesquisa o objeto especificado e retorna o índice baseado em zero da primeira ocorrência dentro de todo o <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)">
          <source>The zero-based index of the first occurrence of <ph id="ph1">&lt;paramref name="item" /&gt;</ph> within the entire <ph id="ph2">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>, if found; otherwise, -1.</source>
          <target state="translated">O índice baseado em zero da primeira ocorrência de <ph id="ph1">&lt;paramref name="item" /&gt;</ph> em todo o <ph id="ph2">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>, se encontrado; caso contrário, -1.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> is searched forward starting at the first element and ending at the last element.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> é pesquisado forward iniciando no primeiro elemento e terminando no último elemento.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)">
          <source>This method determines equality using the default equality comparer <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> for <ph id="ph2">`T`</ph>, the type of values in the list.</source>
          <target state="translated">Este método determina a igualdade usando o comparador de igualdade padrão <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> para <ph id="ph2">`T`</ph>, o tipo de valores na lista.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)">
          <source>This method performs a linear search; therefore, the average execution time is proportional to <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Esse método executa uma pesquisa linear; Portanto, o tempo médio de execução é proporcional ao <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)">
          <source>That is, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Ou seja, esse método é um O (<ph id="ph1">`n`</ph>) operação, onde <ph id="ph2">`n`</ph> é <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)">
          <source>The following code example demonstrates many of the properties and methods of <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>.</source>
          <target state="translated">O exemplo de código a seguir demonstra a muitas das propriedades e métodos de <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)">
          <source>The code example creates a collection of strings, uses the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph> method to add several strings, displays the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>, and lists the strings.</source>
          <target state="translated">O exemplo de código cria uma coleção de cadeias de caracteres, usa o <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph> método para adicionar várias cadeias de caracteres, exibe o <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>e lista as cadeias de caracteres.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A&gt;</ph> method to find the index of a string and the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Contains%2A&gt;</ph> method to determine whether a string is in the collection.</source>
          <target state="translated">O exemplo usa o <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A&gt;</ph> método para localizar o índice de uma cadeia de caracteres e o <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Contains%2A&gt;</ph> método para determinar se uma cadeia de caracteres está na coleção.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)">
          <source>The example inserts a string using the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph> method and retrieves and sets strings using the default <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> property (the indexer in C#).</source>
          <target state="translated">O exemplo insere uma cadeia de caracteres usando o <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph> método e recupera e conjuntos de cadeias de caracteres usando o padrão <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> propriedade (indexador em c#).</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)">
          <source>The example removes strings by string identity using the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%2A&gt;</ph> method and by index using the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo remove cadeias de caracteres com o uso de identidade com a cadeia de caracteres de <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%2A&gt;</ph> método e por índice usando o <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)">
          <source>Finally, the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> method is used to clear all strings from the collection.</source>
          <target state="translated">Por fim, o <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> método é usado para limpar todas as cadeias de caracteres da coleção.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)">
          <source>The zero-based index at which <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept> should be inserted.</source>
          <target state="translated">O índice baseado em zero no qual o <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept> deve ser inserido.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)">
          <source>The object to insert.</source>
          <target state="translated">O objeto a ser inserido.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">O valor pode ser <ph id="ph1">&lt;see langword="null" /&gt;</ph> para tipos de referência.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)">
          <source>Inserts an element into the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph> at the specified index.</source>
          <target state="translated">Insere um elemento no <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>, no índice especificado.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)">
          <source><ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid value for reference types and allows duplicate elements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> aceita <ph id="ph2">`null`</ph> como um valor válido para a referência de tipos e permite que os elementos duplicados.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)">
          <source>If <ph id="ph1">`index`</ph> is equal to <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>, <ph id="ph3">`item`</ph> is added to the end of <ph id="ph4">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>.</source>
          <target state="translated">Se <ph id="ph1">`index`</ph> é igual a <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>, <ph id="ph3">`item`</ph> é adicionada ao final da <ph id="ph4">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Este método é uma operação O(<ph id="ph1">`n`</ph>), em que <ph id="ph2">`n`</ph> é <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> é menor que zero.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="P:System.Collections.ObjectModel.Collection`1.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> é maior que <ph id="ph2">&lt;see cref="P:System.Collections.ObjectModel.Collection`1.Count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)">
          <source>Derived classes can override <ph id="ph1">&lt;see cref="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)" /&gt;</ph> to change the behavior of this method.</source>
          <target state="translated">Classes derivadas podem substituir <ph id="ph1">&lt;see cref="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)" /&gt;</ph> para alterar o comportamento desse método.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)">
          <source>The zero-based index at which <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept> should be inserted.</source>
          <target state="translated">O índice baseado em zero no qual o <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept> deve ser inserido.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)">
          <source>The object to insert.</source>
          <target state="translated">O objeto a ser inserido.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">O valor pode ser <ph id="ph1">&lt;see langword="null" /&gt;</ph> para tipos de referência.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)">
          <source>Inserts an element into the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph> at the specified index.</source>
          <target state="translated">Insere um elemento no <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>, no índice especificado.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A&gt;</ph> is meant to be overridden in a derived class.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A&gt;</ph> deve ser substituído em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)">
          <source>For a public method to insert an item in the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>, see <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph>.</source>
          <target state="translated">Para um método público inserir um item no <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>, consulte <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)">
          <source><ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid value for reference types and allows duplicate elements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> aceita <ph id="ph2">`null`</ph> como um valor válido para a referência de tipos e permite que os elementos duplicados.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)">
          <source>If <ph id="ph1">`index`</ph> is equal to <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>, <ph id="ph3">`item`</ph> is added to the end of <ph id="ph4">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>.</source>
          <target state="translated">Se <ph id="ph1">`index`</ph> é igual a <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>, <ph id="ph3">`item`</ph> é adicionada ao final da <ph id="ph4">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Este método é uma operação O(<ph id="ph1">`n`</ph>), em que <ph id="ph2">`n`</ph> é <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)">
          <source>The following code example shows how to derive a collection class from a constructed type of the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> generic class, and how to override the protected <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Collections.ObjectModel.Collection%601.SetItem%2A&gt;</ph> methods to provide custom behavior for the <ph id="ph6">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph>, <ph id="ph8">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%2A&gt;</ph>, and <ph id="ph9">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> methods, and for setting the <ph id="ph10">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> property.</source>
          <target state="translated">O exemplo de código a seguir mostra como derivar uma classe de coleção de um tipo construído do <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> classe genérica e como substituir protegido <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A&gt;</ph>, e <ph id="ph5">&lt;xref:System.Collections.ObjectModel.Collection%601.SetItem%2A&gt;</ph> métodos para fornecer personalizado comportamento para o <ph id="ph6">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph>, <ph id="ph8">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%2A&gt;</ph>, e <ph id="ph9">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> métodos e para configuração de <ph id="ph10">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)">
          <source>The custom behavior provided by this example is a <ph id="ph1">`Changed`</ph> notification event that is raised at the end of each of the protected methods.</source>
          <target state="translated">O comportamento personalizado fornecido por esse exemplo é um <ph id="ph1">`Changed`</ph> evento de notificação que é gerado no final de cada um dos métodos protegidos.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)">
          <source>The <ph id="ph1">`Dinosaurs`</ph> class inherits <ph id="ph2">`Collection&lt;string&gt;`</ph> (<ph id="ph3">`Collection(Of String)`</ph> in Visual Basic) and defines the <ph id="ph4">`Changed`</ph> event, which uses a <ph id="ph5">`DinosaursChangedEventArgs`</ph> class for the event information, and an enumeration to identify the kind of change.</source>
          <target state="translated">O <ph id="ph1">`Dinosaurs`</ph> herda da classe <ph id="ph2">`Collection&lt;string&gt;`</ph> (<ph id="ph3">`Collection(Of String)`</ph> no Visual Basic) e define o <ph id="ph4">`Changed`</ph> evento, que usa um <ph id="ph5">`DinosaursChangedEventArgs`</ph> classe para as informações de evento e uma enumeração para identificar o tipo de alteração.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)">
          <source>The code example calls several properties and methods of <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> to demonstrate the custom event.</source>
          <target state="translated">O exemplo de código chama várias propriedades e métodos de <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> para demonstrar o evento personalizado.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> é menor que zero.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="P:System.Collections.ObjectModel.Collection`1.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> é maior que <ph id="ph2">&lt;see cref="P:System.Collections.ObjectModel.Collection`1.Count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)">
          <source>The zero-based index of the element to get or set.</source>
          <target state="translated">O índice com base em zero do elemento a ser obtido ou definido.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)">
          <source>Gets or sets the element at the specified index.</source>
          <target state="translated">Obtém ou define o elemento no índice especificado.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)">
          <source>The element at the specified index.</source>
          <target state="translated">O elemento no índice especificado.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid value for reference types and allows duplicate elements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> aceita <ph id="ph2">`null`</ph> como um valor válido para a referência de tipos e permite que os elementos duplicados.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)">
          <source>This property provides the ability to access a specific element in the collection by using the following syntax: <ph id="ph1">`myCollection[index]`</ph>.</source>
          <target state="translated">Esta propriedade fornece a capacidade de acessar um elemento específico na coleção usando a seguinte sintaxe: <ph id="ph1">`myCollection[index]`</ph>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)">
          <source>The C# language uses the  keyword to define the indexers instead of implementing the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> property.</source>
          <target state="translated">A linguagem c# usa a palavra-chave para definir os indexadores em vez de implementar o <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)">
          <source>Visual Basic implements <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> as a default property, which provides the same indexing functionality.</source>
          <target state="translated">Visual Basic implementa <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> como uma propriedade padrão, que fornece a mesma funcionalidade de indexação.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)">
          <source>Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</source>
          <target state="translated">Recuperar o valor dessa propriedade é uma operação de (1); definindo a propriedade também é uma operação de (1).</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)">
          <source>The following code example demonstrates many of the properties and methods of <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>.</source>
          <target state="translated">O exemplo de código a seguir demonstra a muitas das propriedades e métodos de <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)">
          <source>The code example creates a collection of strings, uses the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph> method to add several strings, displays the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>, and lists the strings.</source>
          <target state="translated">O exemplo de código cria uma coleção de cadeias de caracteres, usa o <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph> método para adicionar várias cadeias de caracteres, exibe o <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>e lista as cadeias de caracteres.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A&gt;</ph> method to find the index of a string and the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Contains%2A&gt;</ph> method to determine whether a string is in the collection.</source>
          <target state="translated">O exemplo usa o <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A&gt;</ph> método para localizar o índice de uma cadeia de caracteres e o <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Contains%2A&gt;</ph> método para determinar se uma cadeia de caracteres está na coleção.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)">
          <source>The example inserts a string using the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph> method and retrieves and sets strings using the default <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> property (the indexer in C#).</source>
          <target state="translated">O exemplo insere uma cadeia de caracteres usando o <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph> método e recupera e conjuntos de cadeias de caracteres usando o padrão <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> propriedade (indexador em c#).</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)">
          <source>The example removes strings by string identity using the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%2A&gt;</ph> method and by index using the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo remove cadeias de caracteres com o uso de identidade com a cadeia de caracteres de <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%2A&gt;</ph> método e por índice usando o <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)">
          <source>Finally, the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> method is used to clear all strings from the collection.</source>
          <target state="translated">Por fim, o <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> método é usado para limpar todas as cadeias de caracteres da coleção.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> é menor que zero.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is equal to or greater than <ph id="ph2">&lt;see cref="P:System.Collections.ObjectModel.Collection`1.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> é igual a ou maior que <ph id="ph2">&lt;see cref="P:System.Collections.ObjectModel.Collection`1.Count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)">
          <source>Derived classes can override <ph id="ph1">&lt;see cref="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)" /&gt;</ph> to change the behavior of setting this property.</source>
          <target state="translated">Classes derivadas podem substituir <ph id="ph1">&lt;see cref="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)" /&gt;</ph> para alterar o comportamento de definir esta propriedade.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.Collection`1.Items">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IList`1" /&gt;</ph> wrapper around the <ph id="ph2">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</source>
          <target state="translated">Obtém um wrapper <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IList`1" /&gt;</ph> ao redor de <ph id="ph2">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.Items">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IList`1" /&gt;</ph> wrapper around the <ph id="ph2">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</source>
          <target state="translated">Um wrapper <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IList`1" /&gt;</ph> ao redor de <ph id="ph2">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.Items">
          <source>The wrapper provides the functionality of the <ph id="ph1">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> class and exposes all the elements of the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>.</source>
          <target state="translated">O wrapper fornece a funcionalidade do <ph id="ph1">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> classe e expõe todos os elementos a <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.Items">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">A recuperação do valor dessa propriedade é uma operação O(1).</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.Remove(`0)">
          <source>The object to remove from the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</source>
          <target state="translated">O objeto a remover do <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.Remove(`0)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">O valor pode ser <ph id="ph1">&lt;see langword="null" /&gt;</ph> para tipos de referência.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.Remove(`0)">
          <source>Removes the first occurrence of a specific object from the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</source>
          <target state="translated">Remove a primeira ocorrência de um objeto específico do <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.Remove(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="item" /&gt;</ph> is successfully removed; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;paramref name="item" /&gt;</ph> for removido com êxito; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.Remove(`0)">
          <source>This method also returns <ph id="ph1">&lt;see langword="false" /&gt;</ph> if <ph id="ph2">&lt;paramref name="item" /&gt;</ph> was not found in the original <ph id="ph3">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</source>
          <target state="translated">Esse método também retornará <ph id="ph1">&lt;see langword="false" /&gt;</ph> se <ph id="ph2">&lt;paramref name="item" /&gt;</ph> não tiver sido encontrado no <ph id="ph3">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph> original.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Remove(`0)">
          <source>This method determines equality using the default equality comparer <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> for <ph id="ph2">`T`</ph>, the type of values in the list.</source>
          <target state="translated">Este método determina a igualdade usando o comparador de igualdade padrão <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> para <ph id="ph2">`T`</ph>, o tipo de valores na lista.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Remove(`0)">
          <source>This method performs a linear search; therefore, the average execution time is proportional to <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Esse método executa uma pesquisa linear; Portanto, o tempo médio de execução é proporcional ao <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Remove(`0)">
          <source>That is, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Ou seja, esse método é um O (<ph id="ph1">`n`</ph>) operação, onde <ph id="ph2">`n`</ph> é <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Remove(`0)">
          <source>The following code example demonstrates many of the properties and methods of <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>.</source>
          <target state="translated">O exemplo de código a seguir demonstra a muitas das propriedades e métodos de <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Remove(`0)">
          <source>The code example creates a collection of strings, uses the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph> method to add several strings, displays the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>, and lists the strings.</source>
          <target state="translated">O exemplo de código cria uma coleção de cadeias de caracteres, usa o <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph> método para adicionar várias cadeias de caracteres, exibe o <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>e lista as cadeias de caracteres.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Remove(`0)">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A&gt;</ph> method to find the index of a string and the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Contains%2A&gt;</ph> method to determine whether a string is in the collection.</source>
          <target state="translated">O exemplo usa o <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A&gt;</ph> método para localizar o índice de uma cadeia de caracteres e o <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Contains%2A&gt;</ph> método para determinar se uma cadeia de caracteres está na coleção.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Remove(`0)">
          <source>The example inserts a string using the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph> method and retrieves and sets strings using the default <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> property (the indexer in C#).</source>
          <target state="translated">O exemplo insere uma cadeia de caracteres usando o <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph> método e recupera e conjuntos de cadeias de caracteres usando o padrão <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> propriedade (indexador em c#).</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Remove(`0)">
          <source>The example removes strings by string identity using the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%2A&gt;</ph> method and by index using the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo remove cadeias de caracteres com o uso de identidade com a cadeia de caracteres de <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%2A&gt;</ph> método e por índice usando o <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Remove(`0)">
          <source>Finally, the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> method is used to clear all strings from the collection.</source>
          <target state="translated">Por fim, o <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> método é usado para limpar todas as cadeias de caracteres da coleção.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.Remove(`0)">
          <source>Derived classes can override <ph id="ph1">&lt;see cref="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)" /&gt;</ph> to change the behavior of this method.</source>
          <target state="translated">Classes derivadas podem substituir <ph id="ph1">&lt;see cref="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)" /&gt;</ph> para alterar o comportamento desse método.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)">
          <source>The zero-based index of the element to remove.</source>
          <target state="translated">O índice de base zero do elemento a ser removido.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)">
          <source>Removes the element at the specified index of the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</source>
          <target state="translated">Remove o elemento no índice especificado do <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Este método é uma operação O(<ph id="ph1">`n`</ph>), em que <ph id="ph2">`n`</ph> é <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)">
          <source>The following code example demonstrates many of the properties and methods of <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>.</source>
          <target state="translated">O exemplo de código a seguir demonstra a muitas das propriedades e métodos de <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)">
          <source>The code example creates a collection of strings, uses the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph> method to add several strings, displays the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>, and lists the strings.</source>
          <target state="translated">O exemplo de código cria uma coleção de cadeias de caracteres, usa o <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph> método para adicionar várias cadeias de caracteres, exibe o <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>e lista as cadeias de caracteres.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A&gt;</ph> method to find the index of a string and the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Contains%2A&gt;</ph> method to determine whether a string is in the collection.</source>
          <target state="translated">O exemplo usa o <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.IndexOf%2A&gt;</ph> método para localizar o índice de uma cadeia de caracteres e o <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Contains%2A&gt;</ph> método para determinar se uma cadeia de caracteres está na coleção.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)">
          <source>The example inserts a string using the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph> method and retrieves and sets strings using the default <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> property (the indexer in C#).</source>
          <target state="translated">O exemplo insere uma cadeia de caracteres usando o <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph> método e recupera e conjuntos de cadeias de caracteres usando o padrão <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> propriedade (indexador em c#).</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)">
          <source>The example removes strings by string identity using the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%2A&gt;</ph> method and by index using the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A&gt;</ph> method.</source>
          <target state="translated">O exemplo remove cadeias de caracteres com o uso de identidade com a cadeia de caracteres de <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%2A&gt;</ph> método e por índice usando o <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)">
          <source>Finally, the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> method is used to clear all strings from the collection.</source>
          <target state="translated">Por fim, o <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> método é usado para limpar todas as cadeias de caracteres da coleção.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> é menor que zero.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is equal to or greater than <ph id="ph2">&lt;see cref="P:System.Collections.ObjectModel.Collection`1.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> é igual a ou maior que <ph id="ph2">&lt;see cref="P:System.Collections.ObjectModel.Collection`1.Count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)">
          <source>Derived classes can override <ph id="ph1">&lt;see cref="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)" /&gt;</ph> to change the behavior of this method.</source>
          <target state="translated">Classes derivadas podem substituir <ph id="ph1">&lt;see cref="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)" /&gt;</ph> para alterar o comportamento desse método.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)">
          <source>The zero-based index of the element to remove.</source>
          <target state="translated">O índice de base zero do elemento a ser removido.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)">
          <source>Removes the element at the specified index of the <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</source>
          <target state="translated">Remove o elemento no índice especificado do <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Este método é uma operação O(<ph id="ph1">`n`</ph>), em que <ph id="ph2">`n`</ph> é <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)">
          <source>The following code example shows how to derive a collection class from a constructed type of the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> generic class, and how to override the protected <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Collections.ObjectModel.Collection%601.SetItem%2A&gt;</ph> methods to provide custom behavior for the <ph id="ph6">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph>, <ph id="ph8">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%2A&gt;</ph>, and <ph id="ph9">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> methods, and for setting the <ph id="ph10">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> property.</source>
          <target state="translated">O exemplo de código a seguir mostra como derivar uma classe de coleção de um tipo construído do <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> classe genérica e como substituir protegido <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A&gt;</ph>, e <ph id="ph5">&lt;xref:System.Collections.ObjectModel.Collection%601.SetItem%2A&gt;</ph> métodos para fornecer personalizado comportamento para o <ph id="ph6">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph>, <ph id="ph8">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%2A&gt;</ph>, e <ph id="ph9">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> métodos e para configuração de <ph id="ph10">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)">
          <source>The custom behavior provided by this example is a <ph id="ph1">`Changed`</ph> notification event that is raised at the end of each of the protected methods.</source>
          <target state="translated">O comportamento personalizado fornecido por esse exemplo é um <ph id="ph1">`Changed`</ph> evento de notificação que é gerado no final de cada um dos métodos protegidos.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)">
          <source>The <ph id="ph1">`Dinosaurs`</ph> class inherits <ph id="ph2">`Collection&lt;string&gt;`</ph> (<ph id="ph3">`Collection(Of String)`</ph> in Visual Basic) and defines the <ph id="ph4">`Changed`</ph> event, which uses a <ph id="ph5">`DinosaursChangedEventArgs`</ph> class for the event information, and an enumeration to identify the kind of change.</source>
          <target state="translated">O <ph id="ph1">`Dinosaurs`</ph> herda da classe <ph id="ph2">`Collection&lt;string&gt;`</ph> (<ph id="ph3">`Collection(Of String)`</ph> no Visual Basic) e define o <ph id="ph4">`Changed`</ph> evento, que usa um <ph id="ph5">`DinosaursChangedEventArgs`</ph> classe para as informações de evento e uma enumeração para identificar o tipo de alteração.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)">
          <source>The code example calls several properties and methods of <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> to demonstrate the custom event.</source>
          <target state="translated">O exemplo de código chama várias propriedades e métodos de <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> para demonstrar o evento personalizado.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> é menor que zero.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is equal to or greater than <ph id="ph2">&lt;see cref="P:System.Collections.ObjectModel.Collection`1.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> é igual a ou maior que <ph id="ph2">&lt;see cref="P:System.Collections.ObjectModel.Collection`1.Count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)">
          <source>The zero-based index of the element to replace.</source>
          <target state="translated">O índice de base zero do elemento a ser substituído.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)">
          <source>The new value for the element at the specified index.</source>
          <target state="translated">O novo valor para o elemento no índice especificado.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">O valor pode ser <ph id="ph1">&lt;see langword="null" /&gt;</ph> para tipos de referência.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)">
          <source>Replaces the element at the specified index.</source>
          <target state="translated">Substitui o elemento no índice especificado.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)">
          <source><ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid value for reference types and allows duplicate elements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> aceita <ph id="ph2">`null`</ph> como um valor válido para a referência de tipos e permite que os elementos duplicados.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Este método é uma operação O(1).</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)">
          <source>The following code example shows how to derive a collection class from a constructed type of the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> generic class, and how to override the protected <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Collections.ObjectModel.Collection%601.SetItem%2A&gt;</ph> methods to provide custom behavior for the <ph id="ph6">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph>, <ph id="ph8">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%2A&gt;</ph>, and <ph id="ph9">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> methods, and for setting the <ph id="ph10">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> property.</source>
          <target state="translated">O exemplo de código a seguir mostra como derivar uma classe de coleção de um tipo construído do <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> classe genérica e como substituir protegido <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.InsertItem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveItem%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Collections.ObjectModel.Collection%601.ClearItems%2A&gt;</ph>, e <ph id="ph5">&lt;xref:System.Collections.ObjectModel.Collection%601.SetItem%2A&gt;</ph> métodos para fornecer personalizado comportamento para o <ph id="ph6">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph>, <ph id="ph8">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%2A&gt;</ph>, e <ph id="ph9">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> métodos e para configuração de <ph id="ph10">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)">
          <source>The custom behavior provided by this example is a <ph id="ph1">`Changed`</ph> notification event that is raised at the end of each of the protected methods.</source>
          <target state="translated">O comportamento personalizado fornecido por esse exemplo é um <ph id="ph1">`Changed`</ph> evento de notificação que é gerado no final de cada um dos métodos protegidos.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)">
          <source>The <ph id="ph1">`Dinosaurs`</ph> class inherits <ph id="ph2">`Collection&lt;string&gt;`</ph> (<ph id="ph3">`Collection(Of String)`</ph> in Visual Basic) and defines the <ph id="ph4">`Changed`</ph> event, which uses a <ph id="ph5">`DinosaursChangedEventArgs`</ph> class for the event information, and an enumeration to identify the kind of change.</source>
          <target state="translated">O <ph id="ph1">`Dinosaurs`</ph> herda da classe <ph id="ph2">`Collection&lt;string&gt;`</ph> (<ph id="ph3">`Collection(Of String)`</ph> no Visual Basic) e define o <ph id="ph4">`Changed`</ph> evento, que usa um <ph id="ph5">`DinosaursChangedEventArgs`</ph> classe para as informações de evento e uma enumeração para identificar o tipo de alteração.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)">
          <source>The code example calls several properties and methods of <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> to demonstrate the custom event.</source>
          <target state="translated">O exemplo de código chama várias propriedades e métodos de <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> para demonstrar o evento personalizado.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> é menor que zero.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="P:System.Collections.ObjectModel.Collection`1.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> é maior que <ph id="ph2">&lt;see cref="P:System.Collections.ObjectModel.Collection`1.Count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> is read-only.</source>
          <target state="translated">Obtém um valor que indica se o <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> é somente leitura.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> is read-only; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o <ph id="ph2">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> for somente leitura; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>In the default implementation of <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>, this property always returns <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Na implementação padrão de <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>, essa propriedade sempre retorna <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</source>
          <target state="translated">Uma coleção que seja somente leitura não permite a adição, a remoção ou a modificação de elementos após a coleção ser criada.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</source>
          <target state="translated">Uma coleção somente leitura é apenas uma coleção com um wrapper que impede a modificação da coleção; por isso, caso as alterações sejam feitas na coleção subjacente, a coleção somente leitura reflete as alterações.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">A recuperação do valor dessa propriedade é uma operação O(1).</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that is the destination of the elements copied from <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> unidimensional que é o destino dos elementos copiados de <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> must have zero-based indexing.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> deve ter indexação com base em zero.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">O índice baseado em zero na <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> na qual a cópia começa.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>Copies the elements of the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> to an <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>, starting at a particular <ph id="ph3">&lt;see cref="T:System.Array" /&gt;</ph> index.</source>
          <target state="translated">Copia os elementos do <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> para um <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>, começando em um determinado índice <ph id="ph3">&lt;see cref="T:System.Array" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>If the type of the source <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">`array`</ph>, the non-generic implementations of <ph id="ph3">&lt;xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType&gt;</ph> throw <ph id="ph4">&lt;xref:System.InvalidCastException&gt;</ph>, whereas the generic implementations throw <ph id="ph5">&lt;xref:System.ArgumentException&gt;</ph>.</source>
          <target state="translated">Se o tipo da fonte de <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> não pode ser convertido automaticamente para o tipo de destino <ph id="ph2">`array`</ph>, as implementações não genérica de <ph id="ph3">&lt;xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType&gt;</ph> gerar <ph id="ph4">&lt;xref:System.InvalidCastException&gt;</ph>, enquanto as implementações genéricas lançam <ph id="ph5">&lt;xref:System.ArgumentException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Este método é uma operação O(<ph id="ph1">`n`</ph>), em que <ph id="ph2">`n`</ph> é <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> é menor que zero.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> é multidimensional.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> does not have zero-based indexing.</source>
          <target state="translated">O <ph id="ph1">&lt;paramref name="array" /&gt;</ph> não tem indexação baseada em zero.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is greater than the available space from <ph id="ph2">&lt;paramref name="index" /&gt;</ph> to the end of the destination <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">O número de elementos na origem <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> é maior do que o espaço disponível de <ph id="ph2">&lt;paramref name="index" /&gt;</ph> até o final do <ph id="ph3">&lt;paramref name="array" /&gt;</ph> de destino.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The type of the source <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">O tipo do <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> de origem não pode ser automaticamente convertido para o tipo de <ph id="ph2">&lt;paramref name="array" /&gt;</ph> de destino.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized">
          <source>Gets a value indicating whether access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized (thread safe).</source>
          <target state="translated">Obtém um valor que indica se o acesso à <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> é sincronizado (thread-safe).</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if access to the <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized (thread safe); otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> caso o acesso ao <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> seja sincronizado (thread-safe); do contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized">
          <source>In the default implementation of <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>, this property always returns <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Na implementação padrão de <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>, essa propriedade sempre retorna <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized">
          <source>Default implementations of collections in <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> are not synchronized.</source>
          <target state="translated">As implementações padrão de coleções em <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> não são sincronizadas.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">A enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Para garantir acesso thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Para permitir que a coleção a ser acessado por vários threads para leitura e gravação, você deve implementar sua sincronização.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized">
          <source><ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> returns an object that can be used to synchronize access to the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> Retorna um objeto que pode ser usado para sincronizar o acesso a <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized">
          <source>Synchronization is effective only if all threads lock this object before accessing the collection.</source>
          <target state="translated">A sincronização é eficaz somente se todos os threads bloquear este objeto antes de acessar a coleção.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">A recuperação do valor dessa propriedade é uma operação O(1).</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">Obtém um objeto que pode ser usado para sincronizar o acesso ao <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot">
          <source>An object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">Um objeto que pode ser usado para sincronizar o acesso ao <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot">
          <source>In the default implementation of <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>, this property always returns the current instance.</source>
          <target state="translated">Na implementação padrão da <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>, essa propriedade sempre retorna a instância atual.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot">
          <source>Default implementations of collections in <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> are not synchronized.</source>
          <target state="translated">As implementações padrão de coleções em <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> não são sincronizadas.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">A enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Para garantir acesso thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Para permitir que a coleção a ser acessado por vários threads para leitura e gravação, você deve implementar sua sincronização.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot">
          <source><ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> returns an object that can be used to synchronize access to the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> Retorna um objeto que pode ser usado para sincronizar o acesso a <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot">
          <source>Synchronization is effective only if all threads lock this object before accessing the collection.</source>
          <target state="translated">A sincronização é eficaz somente se todos os threads bloquear este objeto antes de acessar a coleção.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> property for C#, C++, and Visual Basic.</source>
          <target state="translated">O código a seguir mostra o uso do <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> propriedade para c#, C++ e Visual Basic.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">A recuperação do valor dessa propriedade é uma operação O(1).</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an enumerator that iterates through a collection.</source>
          <target state="translated">Retorna um enumerador que itera em uma coleção.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> that can be used to iterate through the collection.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> que pode ser usado para iterar pela coleção.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in C++, <ph id="ph3">`For Each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">A instrução <ph id="ph1">`foreach`</ph> da linguagem C# (<ph id="ph2">`for each`</ph> no C++, <ph id="ph3">`For Each`</ph> no Visual Basic) oculta a complexidade dos enumeradores.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">Portanto, o uso de <ph id="ph1">`foreach`</ph> é recomendado, em vez de manipular diretamente o enumerador.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Os enumeradores podem ser usados para ler os dados na coleção, mas não podem ser usados para modificar a coleção subjacente.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Inicialmente, o enumerador é posicionado antes do primeiro elemento da coleção.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> também traz o enumerador de volta para essa posição.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>At this position, <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">Nesta posição, <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> está indefinido.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">Por isso, você deve chamar <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> para avançar o enumerador até o primeiro elemento da coleção antes de ler o valor de <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> retorna o mesmo objeto até <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> ou <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> ser chamado.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> define <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> como o próximo elemento.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Caso <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passe o final da coleção, o enumerador é posicionado após o último elemento na coleção e <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> retorna <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Quando o enumerador está nessa posição, as chamadas subsequentes para <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> também retornam <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">Caso a última chamada para <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> tenha retornado <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> está indefinido.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">Para definir <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> como o primeiro elemento da coleção novamente, é possível chamar <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> seguido de <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Um enumerador permanece válido desde que a coleção continue inalterada.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">Se forem feitas alterações na coleção, como adicionar, modificar ou excluir elementos, o enumerador será invalidado de maneira irrevogável e seu comportamento permanecerá indefinido.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">O enumerador não tem acesso exclusivo à coleção; por isso, a enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Para garantir acesso thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Para permitir que a coleção a ser acessado por vários threads para leitura e gravação, você deve implementar sua sincronização.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Default implementations of collections in <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> are not synchronized.</source>
          <target state="translated">As implementações padrão de coleções em <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> não são sincronizadas.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Este método é uma operação O(1).</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to add to the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> para adicionar ao <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)">
          <source>Adds an item to the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated">Adiciona um item ao <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)">
          <source>The position into which the new element was inserted.</source>
          <target state="translated">A posição na qual o novo elemento foi inserido.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Este método é uma operação O(1).</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is of a type that is not assignable to the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;paramref name="value" /&gt;</ph> é de um tipo que não é atribuível à <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to locate in the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> a ser localizado no <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)">
          <source>Determines whether the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> contains a specific value.</source>
          <target state="translated">Determinará se o <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> contiver um valor específico.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> is found in the <ph id="ph3">&lt;see cref="T:System.Collections.IList" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> for encontrado no <ph id="ph3">&lt;see cref="T:System.Collections.IList" /&gt;</ph>; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)">
          <source>This method determines equality by first determining whether <ph id="ph1">`value`</ph> is of type <ph id="ph2">`T`</ph> (or null) and then calling <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Contains%2A&gt;</ph>.</source>
          <target state="translated">Este método determina a igualdade primeiro determinando se <ph id="ph1">`value`</ph> é do tipo <ph id="ph2">`T`</ph> (ou nulo) e, em seguida, chamar <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Contains%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Este método é uma operação O(<ph id="ph1">`n`</ph>), em que <ph id="ph2">`n`</ph> é <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is of a type that is not assignable to the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;paramref name="value" /&gt;</ph> é de um tipo que não é atribuível à <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to locate in the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> a ser localizado no <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)">
          <source>Determines the index of a specific item in the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated">Determina o índice de um item específico em <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)">
          <source>The index of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> if found in the list; otherwise, -1.</source>
          <target state="translated">O índice de <ph id="ph1">&lt;paramref name="value" /&gt;</ph> se encontrado na lista; caso contrário, -1.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)">
          <source>This method determines equality using the default comparer <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Este método determina a igualdade usando o comparador padrão <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> checks whether type <ph id="ph2">`T`</ph> implements <ph id="ph3">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> and uses that implementation, if available.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> verifica se tipo <ph id="ph2">`T`</ph> implementa <ph id="ph3">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> e usa essa implementação, se disponível.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)">
          <source>If not, <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> checks whether type <ph id="ph2">`T`</ph> implements <ph id="ph3">&lt;xref:System.IComparable?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Caso contrário, <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> verifica se tipo <ph id="ph2">`T`</ph> implementa <ph id="ph3">&lt;xref:System.IComparable?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)">
          <source>If type <ph id="ph1">`T`</ph> does not implement either interface, this method uses <ph id="ph2">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Se tipo <ph id="ph1">`T`</ph> implementa a interface, esse método usa <ph id="ph2">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Este método é uma operação O(<ph id="ph1">`n`</ph>), em que <ph id="ph2">`n`</ph> é <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is of a type that is not assignable to the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;paramref name="value" /&gt;</ph> é de um tipo que não é atribuível à <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>The zero-based index at which <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> should be inserted.</source>
          <target state="translated">O índice baseado em zero no qual o <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept> deve ser inserido.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to insert into the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> a ser inserido no <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>Inserts an item into the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> at the specified index.</source>
          <target state="translated">Insere um item no <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> no índice especificado.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>If <ph id="ph1">`index`</ph> equals the number of items in the <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>, then <ph id="ph3">`value`</ph> is appended to the end.</source>
          <target state="translated">Se <ph id="ph1">`index`</ph> é igual ao número de itens no <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>, em seguida, <ph id="ph3">`value`</ph> é acrescentado ao final.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Este método é uma operação O(<ph id="ph1">`n`</ph>), em que <ph id="ph2">`n`</ph> é <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is not a valid index in the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> não é um índice válido no <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is of a type that is not assignable to the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;paramref name="value" /&gt;</ph> é de um tipo que não é atribuível à <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> has a fixed size.</source>
          <target state="translated">Obtém um valor que indica se o <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> tem um tamanho fixo.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph> has a fixed size; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph> tiver um valor fixo; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize">
          <source>In the default implementation of <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>, this property always returns <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Na implementação padrão de <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>, essa propriedade sempre retorna <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize">
          <source>A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</source>
          <target state="translated">Uma coleção com um tamanho fixo não permite a adição ou a remoção de elementos após a coleção ser criada, mas permite a modificação de elementos existentes.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize">
          <source>A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</source>
          <target state="translated">Uma coleção com um tamanho fixo é simplesmente uma coleção com um wrapper que impede a adição e a remoção de elementos; por isso, caso as alterações sejam feitas na coleção subjacente, inclusive a adição ou a remoção de elementos, a coleção de tamanho fixo reflete essas alterações.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">A recuperação do valor dessa propriedade é uma operação O(1).</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> is read-only.</source>
          <target state="translated">Obtém um valor que indica se o <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> é somente leitura.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph> is read-only; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph> for somente leitura; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly">
          <source>In the default implementation of <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>, this property always returns <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Na implementação padrão de <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>, essa propriedade sempre retorna <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly">
          <source>A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</source>
          <target state="translated">Uma coleção que seja somente leitura não permite a adição, a remoção ou a modificação de elementos após a coleção ser criada.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly">
          <source>A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</source>
          <target state="translated">Uma coleção somente leitura é apenas uma coleção com um wrapper que impede a modificação da coleção; por isso, caso as alterações sejam feitas na coleção subjacente, a coleção somente leitura reflete as alterações.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">A recuperação do valor dessa propriedade é uma operação O(1).</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)">
          <source>The zero-based index of the element to get or set.</source>
          <target state="translated">O índice com base em zero do elemento a ser obtido ou definido.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)">
          <source>Gets or sets the element at the specified index.</source>
          <target state="translated">Obtém ou define o elemento no índice especificado.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)">
          <source>The element at the specified index.</source>
          <target state="translated">O elemento no índice especificado.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)">
          <source>This property provides the ability to access a specific element in the collection by using the following syntax: <ph id="ph1">`myCollection[index]`</ph>.</source>
          <target state="translated">Esta propriedade fornece a capacidade de acessar um elemento específico na coleção usando a seguinte sintaxe: <ph id="ph1">`myCollection[index]`</ph>.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)">
          <source>The C# language uses the <bpt id="p1">[</bpt>this<ept id="p1">](~/docs/csharp/language-reference/keywords/this.md)</ept> keyword to define the indexers instead of implementing the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.System%23Collections%23IList%23Item%2A&gt;</ph> property.</source>
          <target state="translated">A linguagem c# usa o <bpt id="p1">[</bpt>isso<ept id="p1">](~/docs/csharp/language-reference/keywords/this.md)</ept> palavra-chave para definir os indexadores em vez de implementar o <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.System%23Collections%23IList%23Item%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)">
          <source>Visual Basic implements <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.System%23Collections%23IList%23Item%2A&gt;</ph> as a default property, which provides the same indexing functionality.</source>
          <target state="translated">Visual Basic implementa <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.System%23Collections%23IList%23Item%2A&gt;</ph> como uma propriedade padrão, que fornece a mesma funcionalidade de indexação.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)">
          <source>Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</source>
          <target state="translated">Recuperar o valor dessa propriedade é uma operação de (1); definindo a propriedade também é uma operação de (1).</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is not a valid index in the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> não é um índice válido no <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)">
          <source>The property is set and <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is of a type that is not assignable to the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated">A propriedade é definida e <ph id="ph1">&lt;paramref name="value" /&gt;</ph> é de um tipo que não é atribuível ao <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to remove from the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> a ser removido de <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)">
          <source>Removes the first occurrence of a specific object from the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated">Remove a primeira ocorrência de um objeto específico do <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)">
          <source>This method determines equality using the default comparer <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Este método determina a igualdade usando o comparador padrão <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> checks whether type <ph id="ph2">`T`</ph> implements <ph id="ph3">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> and uses that implementation, if available.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> verifica se tipo <ph id="ph2">`T`</ph> implementa <ph id="ph3">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> e usa essa implementação, se disponível.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)">
          <source>If not, <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> checks whether type <ph id="ph2">`T`</ph> implements <ph id="ph3">&lt;xref:System.IComparable?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Caso contrário, <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> verifica se tipo <ph id="ph2">`T`</ph> implementa <ph id="ph3">&lt;xref:System.IComparable?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)">
          <source>If type <ph id="ph1">`T`</ph> does not implement either interface, this method uses <ph id="ph2">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Se tipo <ph id="ph1">`T`</ph> implementa a interface, esse método usa <ph id="ph2">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</source>
          <target state="translated">Este método é uma operação O(<ph id="ph1">`n`</ph>), em que <ph id="ph2">`n`</ph> é <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is of a type that is not assignable to the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;paramref name="value" /&gt;</ph> é de um tipo que não é atribuível à <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>