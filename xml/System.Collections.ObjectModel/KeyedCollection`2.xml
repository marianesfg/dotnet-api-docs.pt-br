<Type Name="KeyedCollection&lt;TKey,TItem&gt;" FullName="System.Collections.ObjectModel.KeyedCollection&lt;TKey,TItem&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="081a8839059eeefd055349f66dc042fca18a52a4" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36644939" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class KeyedCollection&lt;TKey,TItem&gt; : System.Collections.ObjectModel.Collection&lt;TItem&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit KeyedCollection`2&lt;TKey, TItem&gt; extends System.Collections.ObjectModel.Collection`1&lt;!TItem&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Collections.ObjectModel.KeyedCollection`2" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class KeyedCollection(Of TKey, TItem)&#xA;Inherits Collection(Of TItem)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TKey, typename TItem&gt;&#xA;public ref class KeyedCollection abstract : System::Collections::ObjectModel::Collection&lt;TItem&gt;" />
  <TypeSignature Language="F#" Value="type KeyedCollection&lt;'Key, 'Item&gt; = class&#xA;    inherit Collection&lt;'Item&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.ObjectModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey" />
    <TypeParameter Name="TItem" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Collections.ObjectModel.Collection&lt;TItem&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="T">TItem</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.Mscorlib_KeyedCollectionDebugView`2))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TKey">
      <span data-ttu-id="ec627-101">O tipo das chaves da coleção.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ec627-101">The type of keys in the collection.</span>
      </span>
    </typeparam>
    <typeparam name="TItem">
      <span data-ttu-id="ec627-102">O tipo de itens na coleção.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ec627-102">The type of items in the collection.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="ec627-103">Provides the abstract base class for a collection whose keys are embedded in the values.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ec627-103">Provides the abstract base class for a collection whose keys are embedded in the values.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec627-104">O <xref:System.Collections.ObjectModel.KeyedCollection%602> classe fornece dois (1) a recuperação indexada e com a chave de recuperação que se aproxima (1).</span><span class="sxs-lookup"><span data-stu-id="ec627-104">The <xref:System.Collections.ObjectModel.KeyedCollection%602> class provides both O(1) indexed retrieval and keyed retrieval that approaches O(1).</span></span> <span data-ttu-id="ec627-105">É um tipo abstrato ou com mais precisão um infinito conjunto de tipos abstratos, porque cada um dos seus tipos genéricos construídos é uma classe base abstrata.</span><span class="sxs-lookup"><span data-stu-id="ec627-105">It is an abstract type, or more accurately an infinite set of abstract types, because each of its constructed generic types is an abstract base class.</span></span> <span data-ttu-id="ec627-106">Para usar <xref:System.Collections.ObjectModel.KeyedCollection%602>, o tipo de coleção é derivado do tipo construído apropriado.</span><span class="sxs-lookup"><span data-stu-id="ec627-106">To use <xref:System.Collections.ObjectModel.KeyedCollection%602>, derive your collection type from the appropriate constructed type.</span></span>  
  
 <span data-ttu-id="ec627-107">O <xref:System.Collections.ObjectModel.KeyedCollection%602> classe é um híbrido entre uma coleção com base no <xref:System.Collections.Generic.IList%601> interface genérica e uma coleção com base no <xref:System.Collections.Generic.IDictionary%602> interface genérica.</span><span class="sxs-lookup"><span data-stu-id="ec627-107">The <xref:System.Collections.ObjectModel.KeyedCollection%602> class is a hybrid between a collection based on the <xref:System.Collections.Generic.IList%601> generic interface and a collection based on the <xref:System.Collections.Generic.IDictionary%602> generic interface.</span></span> <span data-ttu-id="ec627-108">Como as coleções com base no <xref:System.Collections.Generic.IList%601> interface genérica, <xref:System.Collections.ObjectModel.KeyedCollection%602> é uma lista indexada de itens.</span><span class="sxs-lookup"><span data-stu-id="ec627-108">Like collections based on the <xref:System.Collections.Generic.IList%601> generic interface, <xref:System.Collections.ObjectModel.KeyedCollection%602> is an indexed list of items.</span></span> <span data-ttu-id="ec627-109">Como as coleções com base no <xref:System.Collections.Generic.IDictionary%602> interface genérica, <xref:System.Collections.ObjectModel.KeyedCollection%602> tem uma chave associada a cada elemento.</span><span class="sxs-lookup"><span data-stu-id="ec627-109">Like collections based on the <xref:System.Collections.Generic.IDictionary%602> generic interface, <xref:System.Collections.ObjectModel.KeyedCollection%602> has a key associated with each element.</span></span>  
  
 <span data-ttu-id="ec627-110">Ao contrário de dicionários, um elemento de <xref:System.Collections.ObjectModel.KeyedCollection%602> não é um par chave/valor; em vez disso, todo o elemento é o valor e a chave é incorporada dentro do valor.</span><span class="sxs-lookup"><span data-stu-id="ec627-110">Unlike dictionaries, an element of <xref:System.Collections.ObjectModel.KeyedCollection%602> is not a key/value pair; instead, the entire element is the value and the key is embedded within the value.</span></span>  <span data-ttu-id="ec627-111">Por exemplo, um elemento de uma coleção derivada de `KeyedCollection\<String,String>` (`KeyedCollection(Of String, String)` no Visual Basic) pode ser "John Doe Jr."</span><span class="sxs-lookup"><span data-stu-id="ec627-111">For example, an element of a collection derived from `KeyedCollection\<String,String>` (`KeyedCollection(Of String, String)` in Visual Basic) might be "John Doe Jr."</span></span> <span data-ttu-id="ec627-112">onde o valor é "John Doe Jr."</span><span class="sxs-lookup"><span data-stu-id="ec627-112">where the value is "John Doe Jr."</span></span> <span data-ttu-id="ec627-113">e a chave é "Doe"; ou uma coleção de registros de funcionário que contém chaves inteiro pode ser derivada de `KeyedCollection\<int,Employee>`.</span><span class="sxs-lookup"><span data-stu-id="ec627-113">and the key is "Doe"; or a collection of employee records containing integer keys could be derived from `KeyedCollection\<int,Employee>`.</span></span> <span data-ttu-id="ec627-114">O resumo <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> método extrai a chave do elemento.</span><span class="sxs-lookup"><span data-stu-id="ec627-114">The abstract <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method extracts the key from the element.</span></span>  
  
 <span data-ttu-id="ec627-115">Por padrão, o <xref:System.Collections.ObjectModel.KeyedCollection%602> inclui um dicionário de pesquisa que você pode obter com o <xref:System.Collections.ObjectModel.KeyedCollection%602.Dictionary%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="ec627-115">By default, the <xref:System.Collections.ObjectModel.KeyedCollection%602> includes a lookup dictionary that you can obtain with the <xref:System.Collections.ObjectModel.KeyedCollection%602.Dictionary%2A> property.</span></span>  <span data-ttu-id="ec627-116">Quando um item é adicionado ao <xref:System.Collections.ObjectModel.KeyedCollection%602>, a chave do item será extraída uma vez e salva no dicionário de pesquisa para pesquisas mais rápidas.</span><span class="sxs-lookup"><span data-stu-id="ec627-116">When an item is added to the <xref:System.Collections.ObjectModel.KeyedCollection%602>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</span></span> <span data-ttu-id="ec627-117">Esse comportamento é substituído pela especificação de um limite de criação do dicionário quando você cria o <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="ec627-117">This behavior is overridden by specifying a dictionary creation threshold when you create the <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="ec627-118">O dicionário de pesquisa é criado na primeira vez em que o número de elementos excede esse limite.</span><span class="sxs-lookup"><span data-stu-id="ec627-118">The lookup dictionary is created the first time the number of elements exceeds that threshold.</span></span>  <span data-ttu-id="ec627-119">Se você especificar -1 como o limite, o dicionário de pesquisa nunca será criado.</span><span class="sxs-lookup"><span data-stu-id="ec627-119">If you specify –1 as the threshold, the lookup dictionary is never created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec627-120">Quando o dicionário de pesquisa interno é usado, ele contém referências a todos os itens na coleção se `TItem` é um tipo de referência, ou cópias de todos os itens na coleção se `TItem` é um tipo de valor.</span><span class="sxs-lookup"><span data-stu-id="ec627-120">When the internal lookup dictionary is used, it contains references to all the items in the collection if `TItem` is a reference type, or copies of all the items in the collection if `TItem` is a value type.</span></span> <span data-ttu-id="ec627-121">Portanto, usando o dicionário de pesquisa pode não ser apropriado se `TItem` é um tipo de valor.</span><span class="sxs-lookup"><span data-stu-id="ec627-121">Thus, using the lookup dictionary may not be appropriate if `TItem` is a value type.</span></span>  
  
 <span data-ttu-id="ec627-122">Você pode acessar um item por seu índice ou chave usando o <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="ec627-122">You can access an item by its index or key by using the <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A> property.</span></span> <span data-ttu-id="ec627-123">Você pode adicionar itens sem uma chave, mas esses itens subsequentemente podem ser acessados somente por índice.</span><span class="sxs-lookup"><span data-stu-id="ec627-123">You can add items without a key, but these items can subsequently be accessed only by index.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec627-124">Esta seção contém dois exemplos de código.</span><span class="sxs-lookup"><span data-stu-id="ec627-124">This section contains two code examples.</span></span> <span data-ttu-id="ec627-125">O primeiro exemplo mostra o código mínimo necessário para derivar de <xref:System.Collections.ObjectModel.KeyedCollection%602>e demonstra muitos dos métodos herdados.</span><span class="sxs-lookup"><span data-stu-id="ec627-125">The first example shows the minimum code required to derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and demonstrates many of the inherited methods.</span></span> <span data-ttu-id="ec627-126">O segundo exemplo mostra como substituir os métodos protegidos de <xref:System.Collections.ObjectModel.KeyedCollection%602> para fornecer um comportamento personalizado.</span><span class="sxs-lookup"><span data-stu-id="ec627-126">The second example shows how to override the protected methods of <xref:System.Collections.ObjectModel.KeyedCollection%602> to provide custom behavior.</span></span>  
  
 <span data-ttu-id="ec627-127">**Exemplo 1**</span><span class="sxs-lookup"><span data-stu-id="ec627-127">**Example 1**</span></span>  
  
 <span data-ttu-id="ec627-128">Este exemplo de código mostra o código mínimo necessário a ser derivado de uma classe de coleção de <xref:System.Collections.ObjectModel.KeyedCollection%602>: substituindo o método <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> e fornecendo um construtor público que representa um construtor de classe base.</span><span class="sxs-lookup"><span data-stu-id="ec627-128">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="ec627-129">O exemplo de código também demonstra muitas das propriedades e dos métodos herdados das classes <xref:System.Collections.ObjectModel.KeyedCollection%602> e <xref:System.Collections.ObjectModel.Collection%601>.</span><span class="sxs-lookup"><span data-stu-id="ec627-129">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="ec627-130">A classe `SimpleOrder` é uma lista muito simples de requisição que contém objetos `OrderItem`, cada um representando um item de linha na ordem.</span><span class="sxs-lookup"><span data-stu-id="ec627-130">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="ec627-131">A chave de `OrderItem` é imutável, uma consideração importante para classes que derivam de <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="ec627-131">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="ec627-132">Para um exemplo de código que usa chaves mutáveis, consulte <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="ec627-132">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 <span data-ttu-id="ec627-133">**Exemplo 2**</span><span class="sxs-lookup"><span data-stu-id="ec627-133">**Example 2**</span></span>  
  
 <span data-ttu-id="ec627-134">O exemplo de código a seguir mostra como substituir os métodos <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> e <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> protegidos para fornecer um comportamento personalizado para os métodos <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A> e <xref:System.Collections.ObjectModel.Collection%601.Clear%2A>, além de definir a propriedade <xref:System.Collections.ObjectModel.Collection%601.Item%2A> padrão (o indexador em C#).</span><span class="sxs-lookup"><span data-stu-id="ec627-134">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="ec627-135">O comportamento personalizado fornecido neste exemplo é um evento de notificação chamado `Changed`, gerado ao final de cada um dos métodos substituídos.</span><span class="sxs-lookup"><span data-stu-id="ec627-135">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="ec627-136">O exemplo de código cria a classe `SimpleOrder`, que deriva do <xref:System.Collections.ObjectModel.KeyedCollection%602> e representa um formulário de pedido simples.</span><span class="sxs-lookup"><span data-stu-id="ec627-136">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="ec627-137">O formulário do pedido contém objetos `OrderItem` representando itens ordenados.</span><span class="sxs-lookup"><span data-stu-id="ec627-137">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="ec627-138">O exemplo de código também cria uma classe `SimpleOrderChangedEventArgs` para conter informações do evento, e uma enumeração para identificar o tipo de alteração.</span><span class="sxs-lookup"><span data-stu-id="ec627-138">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="ec627-139">O exemplo de código demonstra o comportamento personalizado chamando as propriedades e os métodos da classe derivada, no método `Main` da classe `Demo`.</span><span class="sxs-lookup"><span data-stu-id="ec627-139">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="ec627-140">Este exemplo de código usa objetos com chaves imutáveis.</span><span class="sxs-lookup"><span data-stu-id="ec627-140">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="ec627-141">Para um exemplo de código que usa chaves mutáveis, consulte <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="ec627-141">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.Specialized.StringDictionary" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ec627-142">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec627-142">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected KeyedCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; KeyedCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ec627-143">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> class that uses the default equality comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec627-143">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> class that uses the default equality comparer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec627-144">Um <xref:System.Collections.ObjectModel.KeyedCollection%602> criado com esse construtor usa o comparador de igualdade genérico padrão para o tipo de chave, obtido <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ec627-144">A <xref:System.Collections.ObjectModel.KeyedCollection%602> created with this constructor uses the default generic equality comparer for the type of the key, obtained from <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ec627-145">Para especificar um comparador de igualdade genérico diferente, use o <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%29> construtor ou <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> construtor.</span><span class="sxs-lookup"><span data-stu-id="ec627-145">To specify a different generic equality comparer, use the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%29> constructor or the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> constructor.</span></span>  
  
 <span data-ttu-id="ec627-146">Por padrão, <xref:System.Collections.ObjectModel.KeyedCollection%602> inclui um dicionário de pesquisa, criado quando o primeiro item é adicionado.</span><span class="sxs-lookup"><span data-stu-id="ec627-146">By default, the <xref:System.Collections.ObjectModel.KeyedCollection%602> includes a lookup dictionary that is created when the first item is added.</span></span> <span data-ttu-id="ec627-147">Quando um item é adicionado ao <xref:System.Collections.ObjectModel.KeyedCollection%602>, a chave do item será extraída uma vez e salva no dicionário de pesquisa para pesquisas mais rápidas.</span><span class="sxs-lookup"><span data-stu-id="ec627-147">When an item is added to the <xref:System.Collections.ObjectModel.KeyedCollection%602>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</span></span> <span data-ttu-id="ec627-148">Esse comportamento pode ser substituído usando o <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> construtor e especificando um limite de criação do dicionário.</span><span class="sxs-lookup"><span data-stu-id="ec627-148">This behavior can be overridden by using the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> constructor and specifying a dictionary creation threshold.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec627-149">Porque o <xref:System.Collections.ObjectModel.KeyedCollection%602> classe é abstrata (`MustInherit` no Visual Basic), você deve derivar dele para usá-lo.</span><span class="sxs-lookup"><span data-stu-id="ec627-149">Because the <xref:System.Collections.ObjectModel.KeyedCollection%602> class is abstract (`MustInherit` in Visual Basic), you must derive from it in order to use it.</span></span> <span data-ttu-id="ec627-150">No construtor para o tipo derivado, chame o <xref:System.Collections.ObjectModel.KeyedCollection%602> construtor.</span><span class="sxs-lookup"><span data-stu-id="ec627-150">In the constructor for your derived type, call the appropriate <xref:System.Collections.ObjectModel.KeyedCollection%602> constructor.</span></span> <span data-ttu-id="ec627-151">Não é necessário para expor a funcionalidade como o comparador de igualdade ou o limite de criação do dicionário em seus construtores.</span><span class="sxs-lookup"><span data-stu-id="ec627-151">It is not necessary to expose functionality like the equality comparer or the dictionary creation threshold in your constructors.</span></span>  
  
 <span data-ttu-id="ec627-152">Este construtor é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="ec627-152">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec627-153">Este exemplo de código mostra o código mínimo necessário a ser derivado de uma classe de coleção de <xref:System.Collections.ObjectModel.KeyedCollection%602>: substituindo o método <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> e fornecendo um construtor público que representa um construtor de classe base.</span><span class="sxs-lookup"><span data-stu-id="ec627-153">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="ec627-154">O exemplo de código também demonstra muitas das propriedades e dos métodos herdados das classes <xref:System.Collections.ObjectModel.KeyedCollection%602> e <xref:System.Collections.ObjectModel.Collection%601>.</span><span class="sxs-lookup"><span data-stu-id="ec627-154">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="ec627-155">A classe `SimpleOrder` é uma lista muito simples de requisição que contém objetos `OrderItem`, cada um representando um item de linha na ordem.</span><span class="sxs-lookup"><span data-stu-id="ec627-155">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="ec627-156">A chave de `OrderItem` é imutável, uma consideração importante para classes que derivam de <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="ec627-156">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="ec627-157">Para um exemplo de código que usa chaves mutáveis, consulte <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="ec627-157">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEqualityComparer`1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected KeyedCollection (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (comparer As IEqualityComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; KeyedCollection(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt; : System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt;" Usage="new System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt; comparer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <param name="comparer">
          <span data-ttu-id="ec627-158">The implementation of the <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> generic interface to use when comparing keys, or <see langword="null" /> to use the default equality comparer for the type of the key, obtained from <see cref="P:System.Collections.Generic.EqualityComparer`1.Default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec627-158">The implementation of the <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> generic interface to use when comparing keys, or <see langword="null" /> to use the default equality comparer for the type of the key, obtained from <see cref="P:System.Collections.Generic.EqualityComparer`1.Default" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ec627-159">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> class that uses the specified equality comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec627-159">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> class that uses the specified equality comparer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec627-160">Por padrão, <xref:System.Collections.ObjectModel.KeyedCollection%602> inclui um dicionário de pesquisa, criado quando o primeiro item é adicionado.</span><span class="sxs-lookup"><span data-stu-id="ec627-160">By default, the <xref:System.Collections.ObjectModel.KeyedCollection%602> includes a lookup dictionary that is created when the first item is added.</span></span> <span data-ttu-id="ec627-161">Quando um item é adicionado ao <xref:System.Collections.ObjectModel.KeyedCollection%602>, a chave do item será extraída uma vez e salva no dicionário de pesquisa para pesquisas mais rápidas.</span><span class="sxs-lookup"><span data-stu-id="ec627-161">When an item is added to the <xref:System.Collections.ObjectModel.KeyedCollection%602>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</span></span> <span data-ttu-id="ec627-162">Esse comportamento pode ser substituído usando o <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> construtor e especificando um limite de criação do dicionário.</span><span class="sxs-lookup"><span data-stu-id="ec627-162">This behavior can be overridden by using the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> constructor and specifying a dictionary creation threshold.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec627-163">Porque o <xref:System.Collections.ObjectModel.KeyedCollection%602> classe é abstrata (`MustInherit` no Visual Basic), você deve derivar dele para usá-lo.</span><span class="sxs-lookup"><span data-stu-id="ec627-163">Because the <xref:System.Collections.ObjectModel.KeyedCollection%602> class is abstract (`MustInherit` in Visual Basic), you must derive from it in order to use it.</span></span> <span data-ttu-id="ec627-164">No construtor para o tipo derivado, chame o <xref:System.Collections.ObjectModel.KeyedCollection%602> construtor.</span><span class="sxs-lookup"><span data-stu-id="ec627-164">In the constructor for your derived type, call the appropriate <xref:System.Collections.ObjectModel.KeyedCollection%602> constructor.</span></span> <span data-ttu-id="ec627-165">Não é necessário para expor a funcionalidade como o comparador de igualdade ou o limite de criação do dicionário em seus construtores.</span><span class="sxs-lookup"><span data-stu-id="ec627-165">It is not necessary to expose functionality like the equality comparer or the dictionary creation threshold in your constructors.</span></span>  
  
 <span data-ttu-id="ec627-166">Este construtor é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="ec627-166">This constructor is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEqualityComparer`1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected KeyedCollection (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer, int dictionaryCreationThreshold);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; comparer, int32 dictionaryCreationThreshold) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (comparer As IEqualityComparer(Of TKey), dictionaryCreationThreshold As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; KeyedCollection(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer, int dictionaryCreationThreshold);" />
      <MemberSignature Language="F#" Value="new System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt; : System.Collections.Generic.IEqualityComparer&lt;'Key&gt; * int -&gt; System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt;" Usage="new System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt; (comparer, dictionaryCreationThreshold)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
        <Parameter Name="dictionaryCreationThreshold" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="comparer">
          <span data-ttu-id="ec627-167">The implementation of the <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> generic interface to use when comparing keys, or <see langword="null" /> to use the default equality comparer for the type of the key, obtained from <see cref="P:System.Collections.Generic.EqualityComparer`1.Default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec627-167">The implementation of the <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> generic interface to use when comparing keys, or <see langword="null" /> to use the default equality comparer for the type of the key, obtained from <see cref="P:System.Collections.Generic.EqualityComparer`1.Default" />.</span>
          </span>
        </param>
        <param name="dictionaryCreationThreshold">
          <span data-ttu-id="ec627-168">The number of elements the collection can hold without creating a lookup dictionary (0 creates the lookup dictionary when the first item is added), or –1 to specify that a lookup dictionary is never created.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec627-168">The number of elements the collection can hold without creating a lookup dictionary (0 creates the lookup dictionary when the first item is added), or –1 to specify that a lookup dictionary is never created.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ec627-169">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> class that uses the specified equality comparer and creates a lookup dictionary when the specified threshold is exceeded.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec627-169">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> class that uses the specified equality comparer and creates a lookup dictionary when the specified threshold is exceeded.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec627-170">Por padrão, <xref:System.Collections.ObjectModel.KeyedCollection%602> inclui um dicionário de pesquisa, criado quando o primeiro item é adicionado.</span><span class="sxs-lookup"><span data-stu-id="ec627-170">By default, the <xref:System.Collections.ObjectModel.KeyedCollection%602> includes a lookup dictionary that is created when the first item is added.</span></span> <span data-ttu-id="ec627-171">Quando um item é adicionado ao <xref:System.Collections.ObjectModel.KeyedCollection%602>, a chave do item será extraída uma vez e salva no dicionário de pesquisa para pesquisas mais rápidas.</span><span class="sxs-lookup"><span data-stu-id="ec627-171">When an item is added to the <xref:System.Collections.ObjectModel.KeyedCollection%602>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</span></span> <span data-ttu-id="ec627-172">Este construtor permite substituir esse comportamento.</span><span class="sxs-lookup"><span data-stu-id="ec627-172">This constructor allows you to override that behavior.</span></span> <span data-ttu-id="ec627-173">Especifique 0 para criar o dicionário quando o primeiro elemento é adicionado, 1 para criar o dicionário quando o segundo elemento é adicionado e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="ec627-173">Specify 0 to create the dictionary when the first element is added, 1 to create the dictionary when the second element is added, and so on.</span></span> <span data-ttu-id="ec627-174">Se você especificar -1 como o limite, o dicionário de pesquisa nunca será criado.</span><span class="sxs-lookup"><span data-stu-id="ec627-174">If you specify –1 as the threshold, the lookup dictionary is never created.</span></span>  
  
 <span data-ttu-id="ec627-175">Para coleções muito pequenas a melhoria de velocidade de recuperação fornecida pelo dicionário de pesquisa pode não ser que vale a pena a memória extra necessária para o dicionário.</span><span class="sxs-lookup"><span data-stu-id="ec627-175">For very small collections the improvement in retrieval speed provided by the lookup dictionary might not be worth the extra memory required by the dictionary.</span></span> <span data-ttu-id="ec627-176">Definir o limite permite que você decida quando tornar essa compensação.</span><span class="sxs-lookup"><span data-stu-id="ec627-176">Setting a threshold allows you to decide when to make that tradeoff.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec627-177">Porque o <xref:System.Collections.ObjectModel.KeyedCollection%602> classe é abstrata (`MustInherit` no Visual Basic), você deve derivar dele para usá-lo.</span><span class="sxs-lookup"><span data-stu-id="ec627-177">Because the <xref:System.Collections.ObjectModel.KeyedCollection%602> class is abstract (`MustInherit` in Visual Basic), you must derive from it in order to use it.</span></span> <span data-ttu-id="ec627-178">No construtor para o tipo derivado, chame o <xref:System.Collections.ObjectModel.KeyedCollection%602> construtor.</span><span class="sxs-lookup"><span data-stu-id="ec627-178">In the constructor for your derived type, call the appropriate <xref:System.Collections.ObjectModel.KeyedCollection%602> constructor.</span></span> <span data-ttu-id="ec627-179">Não é necessário para expor a funcionalidade como o comparador de igualdade ou o limite de criação do dicionário em seus construtores.</span><span class="sxs-lookup"><span data-stu-id="ec627-179">It is not necessary to expose functionality like the equality comparer or the dictionary creation threshold in your constructors.</span></span>  
  
 <span data-ttu-id="ec627-180">Este construtor é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="ec627-180">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec627-181">O exemplo de código a seguir mostra como substituir os métodos <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> e <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> protegidos para fornecer um comportamento personalizado para os métodos <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A> e <xref:System.Collections.ObjectModel.Collection%601.Clear%2A>, além de definir a propriedade <xref:System.Collections.ObjectModel.Collection%601.Item%2A> padrão (o indexador em C#).</span><span class="sxs-lookup"><span data-stu-id="ec627-181">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="ec627-182">O comportamento personalizado fornecido neste exemplo é um evento de notificação chamado `Changed`, gerado ao final de cada um dos métodos substituídos.</span><span class="sxs-lookup"><span data-stu-id="ec627-182">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="ec627-183">O exemplo de código usa o <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> construtor com um limite de 0, para que o dicionário interno é criado na primeira vez que um objeto é adicionado à coleção.</span><span class="sxs-lookup"><span data-stu-id="ec627-183">The code example uses the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> constructor with a threshold of 0, so that the internal dictionary is created the first time an object is added to the collection.</span></span>  
  
 <span data-ttu-id="ec627-184">O exemplo de código cria a classe `SimpleOrder`, que deriva do <xref:System.Collections.ObjectModel.KeyedCollection%602> e representa um formulário de pedido simples.</span><span class="sxs-lookup"><span data-stu-id="ec627-184">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="ec627-185">O formulário do pedido contém objetos `OrderItem` representando itens ordenados.</span><span class="sxs-lookup"><span data-stu-id="ec627-185">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="ec627-186">O exemplo de código também cria uma classe `SimpleOrderChangedEventArgs` para conter informações do evento, e uma enumeração para identificar o tipo de alteração.</span><span class="sxs-lookup"><span data-stu-id="ec627-186">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="ec627-187">O exemplo de código demonstra o comportamento personalizado chamando as propriedades e os métodos da classe derivada, no método `Main` da classe `Demo`.</span><span class="sxs-lookup"><span data-stu-id="ec627-187">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="ec627-188">Este exemplo de código usa objetos com chaves imutáveis.</span><span class="sxs-lookup"><span data-stu-id="ec627-188">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="ec627-189">Para um exemplo de código que usa chaves mutáveis, consulte <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="ec627-189">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ec627-190">
            <paramref name="dictionaryCreationThreshold" /> is less than –1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec627-190">
              <paramref name="dictionaryCreationThreshold" /> is less than –1.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.Generic.IEqualityComparer`1" />
      </Docs>
    </Member>
    <Member MemberName="ChangeItemKey">
      <MemberSignature Language="C#" Value="protected void ChangeItemKey (TItem item, TKey newKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ChangeItemKey(!TItem item, !TKey newKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ChangeItemKey (item As TItem, newKey As TKey)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ChangeItemKey(TItem item, TKey newKey);" />
      <MemberSignature Language="F#" Value="member this.ChangeItemKey : 'Item * 'Key -&gt; unit" Usage="keyedCollection.ChangeItemKey (item, newKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="TItem" />
        <Parameter Name="newKey" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="ec627-191">The element to change the key of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec627-191">The element to change the key of.</span>
          </span>
        </param>
        <param name="newKey">
          <span data-ttu-id="ec627-192">The new key for <c>item</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec627-192">The new key for <c>item</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ec627-193">Changes the key associated with the specified element in the lookup dictionary.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec627-193">Changes the key associated with the specified element in the lookup dictionary.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec627-194">Esse método não modifica a chave inserida em `item`; ele simplesmente substitui a chave salva no dicionário de pesquisa.</span><span class="sxs-lookup"><span data-stu-id="ec627-194">This method does not modify the key embedded in `item`; it simply replaces the key saved in the lookup dictionary.</span></span>  <span data-ttu-id="ec627-195">Portanto, se `newKey` é diferente da chave que é inserido no `item`, você não pode acessar `item` usando a chave retornada pelo <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>.</span><span class="sxs-lookup"><span data-stu-id="ec627-195">Therefore, if `newKey` is different from the key that is embedded in `item`, you cannot access `item` by using the key returned by <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>.</span></span>  
  
 <span data-ttu-id="ec627-196">Esse método não fará nada se o <xref:System.Collections.ObjectModel.KeyedCollection%602> não tem um dicionário de pesquisa.</span><span class="sxs-lookup"><span data-stu-id="ec627-196">This method does nothing if the <xref:System.Collections.ObjectModel.KeyedCollection%602> does not have a lookup dictionary.</span></span>  
  
 <span data-ttu-id="ec627-197">Todas as chaves em um <xref:System.Collections.ObjectModel.KeyedCollection%602> devem ser exclusivos.</span><span class="sxs-lookup"><span data-stu-id="ec627-197">Every key in a <xref:System.Collections.ObjectModel.KeyedCollection%602> must be unique.</span></span> <span data-ttu-id="ec627-198">Uma chave não pode ser `null`.</span><span class="sxs-lookup"><span data-stu-id="ec627-198">A key cannot be `null`.</span></span>  
  
 <span data-ttu-id="ec627-199">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="ec627-199">This method is an O(1) operation.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="ec627-200">Observações para implementadores</span><span class="sxs-lookup"><span data-stu-id="ec627-200">Notes for Implementers</span></span>  
 <span data-ttu-id="ec627-201">Antes de modificar a chave inserida em um item, você deve chamar esse método para atualizar a chave no dicionário de pesquisa.</span><span class="sxs-lookup"><span data-stu-id="ec627-201">Before modifying the key embedded in an item, you must call this method to update the key in the lookup dictionary.</span></span> <span data-ttu-id="ec627-202">Se o limite de criação de dicionário for -1, chamar este método não é necessário.</span><span class="sxs-lookup"><span data-stu-id="ec627-202">If the dictionary creation threshold is –1, calling this method is not necessary.</span></span>  
  
 <span data-ttu-id="ec627-203">Não exponha o <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> método como um método público de uma classe derivada.</span><span class="sxs-lookup"><span data-stu-id="ec627-203">Do not expose the <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method as a public method of a derived class.</span></span> <span data-ttu-id="ec627-204">Uso incorreto desse método coloca o dicionário de pesquisa fora de sincronia com chaves de item.</span><span class="sxs-lookup"><span data-stu-id="ec627-204">Misuse of this method puts the lookup dictionary out of sync with item keys.</span></span> <span data-ttu-id="ec627-205">Por exemplo, definindo a chave `null` e, em seguida, configurá-lo como outro valor adiciona várias chaves de um item ao dicionário de pesquisa.</span><span class="sxs-lookup"><span data-stu-id="ec627-205">For example, setting the key to `null` and then setting it to another value adds multiple keys for an item to the lookup dictionary.</span></span> <span data-ttu-id="ec627-206">Expor esse método internamente para permitir chaves item mutável: quando a chave para um item é alterado, esse método é usado para alterar a chave no dicionário de pesquisa.</span><span class="sxs-lookup"><span data-stu-id="ec627-206">Expose this method internally to allow mutable item keys: When the key for an item changes, this method is used to change the key in the lookup dictionary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec627-207">O exemplo de código a seguir mostra como substituir o método <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> protegido para dar suporte a chaves mutáveis e como substituir os métodos <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A> e <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> protegidos para manter a integridade das chaves e da coleção.</span><span class="sxs-lookup"><span data-stu-id="ec627-207">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="ec627-208">O exemplo de código cria a coleção `MutableKeys`, que deriva do <xref:System.Collections.ObjectModel.KeyedCollection%602>, e a classe `MutableKey`.</span><span class="sxs-lookup"><span data-stu-id="ec627-208">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="ec627-209">A classe `MutableKey` tem uma propriedade `Key` definível.</span><span class="sxs-lookup"><span data-stu-id="ec627-209">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="ec627-210">Quando uma nova chave é atribuída à propriedade, o setter da propriedade chama o método `internal` (`Friend` no Visual Basic) `ChangeKey` da coleção para testar se a nova chave entraria em conflito com uma chave existente.</span><span class="sxs-lookup"><span data-stu-id="ec627-210">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="ec627-211">Em caso afirmativo, uma exceção é gerada e o valor da propriedade não é alterado.</span><span class="sxs-lookup"><span data-stu-id="ec627-211">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="ec627-212">Para manter a conexão entre um objeto `MutableKey` e a coleção `MutableKeys` e evitar que um objeto seja inserido em duas coleções, a classe `MutableKey` tem um campo `internal` (`Friend` no Visual Basic) `Collection`.</span><span class="sxs-lookup"><span data-stu-id="ec627-212">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="ec627-213">Este campo é mantido pelos métodos protegidos que fornecem o comportamento personalizado para adicionar e remover itens da coleção, como o método <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>.</span><span class="sxs-lookup"><span data-stu-id="ec627-213">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="ec627-214">O campo é definido quando o item é adicionado a uma coleção e desmarcado quando o item é removido.</span><span class="sxs-lookup"><span data-stu-id="ec627-214">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ec627-215">
            <paramref name="item" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec627-215">
              <paramref name="item" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="ec627-216">-or-  <paramref name="key" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec627-216">-or-  <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ec627-217">
            <paramref name="item" /> is not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec627-217">
              <paramref name="item" /> is not found.</span>
          </span>
          <span data-ttu-id="ec627-218">-or-  <paramref name="key" /> already exists in the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec627-218">-or-  <paramref name="key" /> already exists in the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)" />
        <altmember cref="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)" />
      </Docs>
    </Member>
    <Member MemberName="ClearItems">
      <MemberSignature Language="C#" Value="protected override void ClearItems ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ClearItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ClearItems ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ClearItems();" />
      <MemberSignature Language="F#" Value="override this.ClearItems : unit -&gt; unit" Usage="keyedCollection.ClearItems " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ec627-219">Removes all elements from the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec627-219">Removes all elements from the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec627-220">Se houver um dicionário de pesquisa, esse método limpa-lo, mas não o exclui.</span><span class="sxs-lookup"><span data-stu-id="ec627-220">If there is a lookup dictionary, this method clears it but does not delete it.</span></span>  
  
 <span data-ttu-id="ec627-221">Se o número de elementos excedeu o limite de criação de dicionário e <xref:System.Collections.ObjectModel.KeyedCollection%602> é usar um dicionário de pesquisa, ele continuará a usar um dicionário de pesquisa, mesmo que o número de elementos novamente está abaixo do limite.</span><span class="sxs-lookup"><span data-stu-id="ec627-221">If the number of elements has exceeded the dictionary creation threshold and the <xref:System.Collections.ObjectModel.KeyedCollection%602> is using a lookup dictionary, it will continue to use a lookup dictionary even though the number of elements is again under the threshold.</span></span>  
  
 <span data-ttu-id="ec627-222">Este método é uma operação O(`n`), em que `n` é <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="ec627-222">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="ec627-223">Observações para implementadores</span><span class="sxs-lookup"><span data-stu-id="ec627-223">Notes for Implementers</span></span>  
 <span data-ttu-id="ec627-224">Substitua este método para fornecer um comportamento personalizado para o <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> método, herdado da <xref:System.Collections.ObjectModel.Collection%601> classe genérica.</span><span class="sxs-lookup"><span data-stu-id="ec627-224">Override this method to provide customized behavior for the <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> method, inherited from the <xref:System.Collections.ObjectModel.Collection%601> generic class.</span></span>  
  
 <span data-ttu-id="ec627-225">Chame a implementação da classe base deste método para limpar a coleção subjacente e para limpar o dicionário de pesquisa.</span><span class="sxs-lookup"><span data-stu-id="ec627-225">Call the base class implementation of this method to clear the underlying collection and to clear the lookup dictionary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec627-226">Esta seção contém dois exemplos de código que demonstram substituindo o <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A> método para fornecer um comportamento personalizado para limpar todos os objetos da coleção.</span><span class="sxs-lookup"><span data-stu-id="ec627-226">This section contains two code examples that demonstrate overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A> method to provide custom behavior for clearing all objects from the collection.</span></span> <span data-ttu-id="ec627-227">O primeiro exemplo adiciona um evento de notificação personalizado e o segundo dá suporte para uma coleção de objetos com chaves mutáveis.</span><span class="sxs-lookup"><span data-stu-id="ec627-227">The first example adds a custom notification event and the second provides support for a collection of objects with mutable keys.</span></span>  
  
 <span data-ttu-id="ec627-228">Exemplo 1</span><span class="sxs-lookup"><span data-stu-id="ec627-228">Example 1</span></span>  
  
 <span data-ttu-id="ec627-229">O exemplo de código a seguir mostra como substituir os métodos <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> e <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> protegidos para fornecer um comportamento personalizado para os métodos <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A> e <xref:System.Collections.ObjectModel.Collection%601.Clear%2A>, além de definir a propriedade <xref:System.Collections.ObjectModel.Collection%601.Item%2A> padrão (o indexador em C#).</span><span class="sxs-lookup"><span data-stu-id="ec627-229">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="ec627-230">O comportamento personalizado fornecido neste exemplo é um evento de notificação chamado `Changed`, gerado ao final de cada um dos métodos substituídos.</span><span class="sxs-lookup"><span data-stu-id="ec627-230">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="ec627-231">O exemplo de código cria a classe `SimpleOrder`, que deriva do <xref:System.Collections.ObjectModel.KeyedCollection%602> e representa um formulário de pedido simples.</span><span class="sxs-lookup"><span data-stu-id="ec627-231">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="ec627-232">O formulário do pedido contém objetos `OrderItem` representando itens ordenados.</span><span class="sxs-lookup"><span data-stu-id="ec627-232">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="ec627-233">O exemplo de código também cria uma classe `SimpleOrderChangedEventArgs` para conter informações do evento, e uma enumeração para identificar o tipo de alteração.</span><span class="sxs-lookup"><span data-stu-id="ec627-233">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="ec627-234">O exemplo de código demonstra o comportamento personalizado chamando as propriedades e os métodos da classe derivada, no método `Main` da classe `Demo`.</span><span class="sxs-lookup"><span data-stu-id="ec627-234">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="ec627-235">Este exemplo de código usa objetos com chaves imutáveis.</span><span class="sxs-lookup"><span data-stu-id="ec627-235">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="ec627-236">Para um exemplo de código que usa chaves mutáveis, consulte <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="ec627-236">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 <span data-ttu-id="ec627-237">Exemplo 2</span><span class="sxs-lookup"><span data-stu-id="ec627-237">Example 2</span></span>  
  
 <span data-ttu-id="ec627-238">O exemplo de código a seguir mostra como substituir o método <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> protegido para dar suporte a chaves mutáveis e como substituir os métodos <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A> e <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> protegidos para manter a integridade das chaves e da coleção.</span><span class="sxs-lookup"><span data-stu-id="ec627-238">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="ec627-239">O exemplo de código cria a coleção `MutableKeys`, que deriva do <xref:System.Collections.ObjectModel.KeyedCollection%602>, e a classe `MutableKey`.</span><span class="sxs-lookup"><span data-stu-id="ec627-239">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="ec627-240">A classe `MutableKey` tem uma propriedade `Key` definível.</span><span class="sxs-lookup"><span data-stu-id="ec627-240">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="ec627-241">Quando uma nova chave é atribuída à propriedade, o setter da propriedade chama o método `internal` (`Friend` no Visual Basic) `ChangeKey` da coleção para testar se a nova chave entraria em conflito com uma chave existente.</span><span class="sxs-lookup"><span data-stu-id="ec627-241">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="ec627-242">Em caso afirmativo, uma exceção é gerada e o valor da propriedade não é alterado.</span><span class="sxs-lookup"><span data-stu-id="ec627-242">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="ec627-243">Para manter a conexão entre um objeto `MutableKey` e a coleção `MutableKeys` e evitar que um objeto seja inserido em duas coleções, a classe `MutableKey` tem um campo `internal` (`Friend` no Visual Basic) `Collection`.</span><span class="sxs-lookup"><span data-stu-id="ec627-243">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="ec627-244">Este campo é mantido pelos métodos protegidos que fornecem o comportamento personalizado para adicionar e remover itens da coleção, como o método <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>.</span><span class="sxs-lookup"><span data-stu-id="ec627-244">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="ec627-245">O campo é definido quando o item é adicionado a uma coleção e desmarcado quando o item é removido.</span><span class="sxs-lookup"><span data-stu-id="ec627-245">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)" />
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Comparer">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEqualityComparer&lt;TKey&gt; Comparer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; Comparer" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.KeyedCollection`2.Comparer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Comparer As IEqualityComparer(Of TKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ Comparer { System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Comparer : System.Collections.Generic.IEqualityComparer&lt;'Key&gt;" Usage="System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt;.Comparer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEqualityComparer&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ec627-246">Gets the generic equality comparer that is used to determine equality of keys in the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec627-246">Gets the generic equality comparer that is used to determine equality of keys in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ec627-247">A implementação do <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> interface genérica é usado para determinar igualdade de chaves na coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec627-247">The implementation of the <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> generic interface that is used to determine equality of keys in the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec627-248">A recuperação do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="ec627-248">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (key As TKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(TKey key);" />
      <MemberSignature Language="F#" Value="override this.Contains : 'Key -&gt; bool" Usage="keyedCollection.Contains key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="ec627-249">The key to locate in the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec627-249">The key to locate in the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ec627-250">Determines whether the collection contains an element with the specified key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec627-250">Determines whether the collection contains an element with the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ec627-251">
            <see langword="true" /> if the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> contains an element with the specified key; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec627-251">
              <see langword="true" /> if the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> contains an element with the specified key; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec627-252">Se o <xref:System.Collections.ObjectModel.KeyedCollection%602> tem um dicionário de pesquisa, `key` é usado para pesquisar o dicionário.</span><span class="sxs-lookup"><span data-stu-id="ec627-252">If the <xref:System.Collections.ObjectModel.KeyedCollection%602> has a lookup dictionary, `key` is used to search the dictionary.</span></span> <span data-ttu-id="ec627-253">Se não houver nenhum dicionário de pesquisa, a chave de cada elemento é extraída usando a <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> método e comparada com a chave especificada.</span><span class="sxs-lookup"><span data-stu-id="ec627-253">If there is no lookup dictionary, the key of each element is extracted using the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and compared with the specified key.</span></span>  
  
 <span data-ttu-id="ec627-254">Esse método é uma operação de (1) se o <xref:System.Collections.ObjectModel.KeyedCollection%602> tem um dicionário de pesquisa; caso contrário, será um O (`n`) operação, onde `n` é <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="ec627-254">This method is an O(1) operation if the <xref:System.Collections.ObjectModel.KeyedCollection%602> has a lookup dictionary; otherwise it is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec627-255">Este exemplo de código mostra o código mínimo necessário a ser derivado de uma classe de coleção de <xref:System.Collections.ObjectModel.KeyedCollection%602>: substituindo o método <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> e fornecendo um construtor público que representa um construtor de classe base.</span><span class="sxs-lookup"><span data-stu-id="ec627-255">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="ec627-256">O exemplo de código também demonstra muitas das propriedades e dos métodos herdados das classes <xref:System.Collections.ObjectModel.KeyedCollection%602> e <xref:System.Collections.ObjectModel.Collection%601>.</span><span class="sxs-lookup"><span data-stu-id="ec627-256">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="ec627-257">A classe `SimpleOrder` é uma lista muito simples de requisição que contém objetos `OrderItem`, cada um representando um item de linha na ordem.</span><span class="sxs-lookup"><span data-stu-id="ec627-257">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="ec627-258">A chave de `OrderItem` é imutável, uma consideração importante para classes que derivam de <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="ec627-258">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="ec627-259">Para um exemplo de código que usa chaves mutáveis, consulte <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="ec627-259">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ec627-260">
            <paramref name="key" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec627-260">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)" />
      </Docs>
    </Member>
    <Member MemberName="Dictionary">
      <MemberSignature Language="C#" Value="protected System.Collections.Generic.IDictionary&lt;TKey,TItem&gt; Dictionary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;!TKey, !TItem&gt; Dictionary" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.KeyedCollection`2.Dictionary" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Dictionary As IDictionary(Of TKey, TItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Generic::IDictionary&lt;TKey, TItem&gt; ^ Dictionary { System::Collections::Generic::IDictionary&lt;TKey, TItem&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Dictionary : System.Collections.Generic.IDictionary&lt;'Key, 'Item&gt;" Usage="System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt;.Dictionary" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;TKey,TItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ec627-261">Gets the lookup dictionary of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec627-261">Gets the lookup dictionary of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ec627-262">O dicionário de pesquisa do <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />, se existir; caso contrário, <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec627-262">The lookup dictionary of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />, if it exists; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec627-263">Por padrão, <xref:System.Collections.ObjectModel.KeyedCollection%602> inclui um dicionário de pesquisa, criado quando o primeiro item é adicionado.</span><span class="sxs-lookup"><span data-stu-id="ec627-263">By default, the <xref:System.Collections.ObjectModel.KeyedCollection%602> includes a lookup dictionary that is created when the first item is added.</span></span> <span data-ttu-id="ec627-264">Quando um item é adicionado ao <xref:System.Collections.ObjectModel.KeyedCollection%602>, a chave do item será extraída uma vez e salva no dicionário de pesquisa para pesquisas mais rápidas.</span><span class="sxs-lookup"><span data-stu-id="ec627-264">When an item is added to the <xref:System.Collections.ObjectModel.KeyedCollection%602>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</span></span> <span data-ttu-id="ec627-265">Esse comportamento pode ser substituído usando o <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> construtor e especificando um limite de criação do dicionário.</span><span class="sxs-lookup"><span data-stu-id="ec627-265">This behavior can be overridden by using the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> constructor and specifying a dictionary creation threshold.</span></span>  
  
 <span data-ttu-id="ec627-266">A recuperação do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="ec627-266">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec627-267">O exemplo de código a seguir mostra como substituir o método <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> protegido para dar suporte a chaves mutáveis e como substituir os métodos <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A> e <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> protegidos para manter a integridade das chaves e da coleção.</span><span class="sxs-lookup"><span data-stu-id="ec627-267">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="ec627-268">O exemplo de código cria a coleção `MutableKeys`, que deriva do <xref:System.Collections.ObjectModel.KeyedCollection%602>, e a classe `MutableKey`.</span><span class="sxs-lookup"><span data-stu-id="ec627-268">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="ec627-269">A classe `MutableKey` tem uma propriedade `Key` definível.</span><span class="sxs-lookup"><span data-stu-id="ec627-269">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="ec627-270">Quando uma nova chave é atribuída à propriedade, o setter da propriedade chama o método `internal` (`Friend` no Visual Basic) `ChangeKey` da coleção para testar se a nova chave entraria em conflito com uma chave existente.</span><span class="sxs-lookup"><span data-stu-id="ec627-270">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="ec627-271">Em caso afirmativo, uma exceção é gerada e o valor da propriedade não é alterado.</span><span class="sxs-lookup"><span data-stu-id="ec627-271">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="ec627-272">Para manter a conexão entre um objeto `MutableKey` e a coleção `MutableKeys` e evitar que um objeto seja inserido em duas coleções, a classe `MutableKey` tem um campo `internal` (`Friend` no Visual Basic) `Collection`.</span><span class="sxs-lookup"><span data-stu-id="ec627-272">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="ec627-273">Este campo é mantido pelos métodos protegidos que fornecem o comportamento personalizado para adicionar e remover itens da coleção, como o método <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>.</span><span class="sxs-lookup"><span data-stu-id="ec627-273">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="ec627-274">O campo é definido quando o item é adicionado a uma coleção e desmarcado quando o item é removido.</span><span class="sxs-lookup"><span data-stu-id="ec627-274">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IDictionary`2" />
      </Docs>
    </Member>
    <Member MemberName="GetKeyForItem">
      <MemberSignature Language="C#" Value="protected abstract TKey GetKeyForItem (TItem item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance !TKey GetKeyForItem(!TItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetKeyForItem (item As TItem) As TKey" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract TKey GetKeyForItem(TItem item);" />
      <MemberSignature Language="F#" Value="abstract member GetKeyForItem : 'Item -&gt; 'Key" Usage="keyedCollection.GetKeyForItem item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="TItem" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="ec627-275">The element from which to extract the key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec627-275">The element from which to extract the key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ec627-276">When implemented in a derived class, extracts the key from the specified element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec627-276">When implemented in a derived class, extracts the key from the specified element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ec627-277">The key for the specified element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec627-277">The key for the specified element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec627-278">Se a chave no dicionário de pesquisa é diferente da chave que é inserido no `item`, você não pode acessar `item` usando a chave retornada pelo <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>.</span><span class="sxs-lookup"><span data-stu-id="ec627-278">If the key in the lookup dictionary is different from the key that is embedded in `item`, you cannot access `item` by using the key returned by <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>.</span></span>  
  
 <span data-ttu-id="ec627-279">Você pode implementar esse método para retornar `null` para uma coleção que contém os itens sem chaves, caso em que os itens podem ser acessados somente por seu índice.</span><span class="sxs-lookup"><span data-stu-id="ec627-279">You can implement this method to return `null` for a collection that contains items without keys, in which case the items can be accessed only by their index.</span></span> <span data-ttu-id="ec627-280">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="ec627-280">This method is an O(1) operation.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="ec627-281">Observações para implementadores</span><span class="sxs-lookup"><span data-stu-id="ec627-281">Notes for Implementers</span></span>  
 <span data-ttu-id="ec627-282">Você deve substituir este método para fornecer o dicionário de uma maneira para extrair as chaves de itens no dicionário.</span><span class="sxs-lookup"><span data-stu-id="ec627-282">You must override this method to provide the dictionary with a way to extract keys from items in the dictionary.</span></span>  
  
 <span data-ttu-id="ec627-283">Este método é chamado internamente.</span><span class="sxs-lookup"><span data-stu-id="ec627-283">This method is called internally.</span></span> <span data-ttu-id="ec627-284">Não é necessário para que seja pública.</span><span class="sxs-lookup"><span data-stu-id="ec627-284">It is not necessary for it to be public.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec627-285">Este exemplo de código mostra o código mínimo necessário a ser derivado de uma classe de coleção de <xref:System.Collections.ObjectModel.KeyedCollection%602>: substituindo o método <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> e fornecendo um construtor público que representa um construtor de classe base.</span><span class="sxs-lookup"><span data-stu-id="ec627-285">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="ec627-286">O exemplo de código também demonstra muitas das propriedades e dos métodos herdados das classes <xref:System.Collections.ObjectModel.KeyedCollection%602> e <xref:System.Collections.ObjectModel.Collection%601>.</span><span class="sxs-lookup"><span data-stu-id="ec627-286">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="ec627-287">A classe `SimpleOrder` é uma lista muito simples de requisição que contém objetos `OrderItem`, cada um representando um item de linha na ordem.</span><span class="sxs-lookup"><span data-stu-id="ec627-287">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="ec627-288">A chave de `OrderItem` é imutável, uma consideração importante para classes que derivam de <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="ec627-288">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="ec627-289">Para um exemplo de código que usa chaves mutáveis, consulte <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="ec627-289">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)" />
        <altmember cref="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)" />
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="protected override void InsertItem (int index, TItem item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InsertItem(int32 index, !TItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InsertItem (index As Integer, item As TItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InsertItem(int index, TItem item);" />
      <MemberSignature Language="F#" Value="override this.InsertItem : int * 'Item -&gt; unit" Usage="keyedCollection.InsertItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="TItem" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="ec627-290">The zero-based index at which <c>item</c> should be inserted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec627-290">The zero-based index at which <c>item</c> should be inserted.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="ec627-291">The object to insert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec627-291">The object to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ec627-292">Inserts an element into the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> at the specified index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec627-292">Inserts an element into the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec627-293">Se `index` é igual a <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, `item` é adicionada ao final do <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="ec627-293">If `index` is equal to <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, `item` is added to the end of the <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span>  
  
 <span data-ttu-id="ec627-294">Este método é uma operação O(`n`), em que `n` é <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="ec627-294">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
 <span data-ttu-id="ec627-295"><xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> é chamado pelo <xref:System.Collections.ObjectModel.Collection%601.Add%2A> e <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="ec627-295"><xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> is called by the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> and <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> methods.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="ec627-296">Observações para implementadores</span><span class="sxs-lookup"><span data-stu-id="ec627-296">Notes for Implementers</span></span>  
 <span data-ttu-id="ec627-297">Substitua este método para fornecer um comportamento personalizado para o <xref:System.Collections.ObjectModel.Collection%601.Add%2A> e <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> métodos, herdados do <xref:System.Collections.ObjectModel.Collection%601> classe genérica.</span><span class="sxs-lookup"><span data-stu-id="ec627-297">Override this method to provide customized behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> and <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> methods, inherited from the <xref:System.Collections.ObjectModel.Collection%601> generic class.</span></span>  
  
 <span data-ttu-id="ec627-298">Chame a implementação da classe base deste método para inserir o item na coleção subjacente e atualizar o dicionário de pesquisa.</span><span class="sxs-lookup"><span data-stu-id="ec627-298">Call the base class implementation of this method to insert the item into the underlying collection and to update the lookup dictionary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec627-299">Esta seção contém dois exemplos de código que demonstram substituindo o <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> método para fornecer um comportamento personalizado para adicionar ou inserir objetos na coleção.</span><span class="sxs-lookup"><span data-stu-id="ec627-299">This section contains two code examples that demonstrate overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method to provide custom behavior for adding or inserting objects into the collection.</span></span> <span data-ttu-id="ec627-300">O primeiro exemplo adiciona um evento de notificação personalizado e o segundo dá suporte para uma coleção de objetos com chaves mutáveis.</span><span class="sxs-lookup"><span data-stu-id="ec627-300">The first example adds a custom notification event and the second provides support for a collection of objects with mutable keys.</span></span>  
  
 <span data-ttu-id="ec627-301">Exemplo 1</span><span class="sxs-lookup"><span data-stu-id="ec627-301">Example 1</span></span>  
  
 <span data-ttu-id="ec627-302">O exemplo de código a seguir mostra como substituir os métodos <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> e <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> protegidos para fornecer um comportamento personalizado para os métodos <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A> e <xref:System.Collections.ObjectModel.Collection%601.Clear%2A>, além de definir a propriedade <xref:System.Collections.ObjectModel.Collection%601.Item%2A> padrão (o indexador em C#).</span><span class="sxs-lookup"><span data-stu-id="ec627-302">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="ec627-303">O comportamento personalizado fornecido neste exemplo é um evento de notificação chamado `Changed`, gerado ao final de cada um dos métodos substituídos.</span><span class="sxs-lookup"><span data-stu-id="ec627-303">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="ec627-304">O exemplo de código cria a classe `SimpleOrder`, que deriva do <xref:System.Collections.ObjectModel.KeyedCollection%602> e representa um formulário de pedido simples.</span><span class="sxs-lookup"><span data-stu-id="ec627-304">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="ec627-305">O formulário do pedido contém objetos `OrderItem` representando itens ordenados.</span><span class="sxs-lookup"><span data-stu-id="ec627-305">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="ec627-306">O exemplo de código também cria uma classe `SimpleOrderChangedEventArgs` para conter informações do evento, e uma enumeração para identificar o tipo de alteração.</span><span class="sxs-lookup"><span data-stu-id="ec627-306">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="ec627-307">O exemplo de código demonstra o comportamento personalizado chamando as propriedades e os métodos da classe derivada, no método `Main` da classe `Demo`.</span><span class="sxs-lookup"><span data-stu-id="ec627-307">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="ec627-308">Este exemplo de código usa objetos com chaves imutáveis.</span><span class="sxs-lookup"><span data-stu-id="ec627-308">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="ec627-309">Para um exemplo de código que usa chaves mutáveis, consulte <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="ec627-309">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 <span data-ttu-id="ec627-310">Exemplo 2</span><span class="sxs-lookup"><span data-stu-id="ec627-310">Example 2</span></span>  
  
 <span data-ttu-id="ec627-311">O exemplo de código a seguir mostra como substituir o método <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> protegido para dar suporte a chaves mutáveis e como substituir os métodos <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A> e <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> protegidos para manter a integridade das chaves e da coleção.</span><span class="sxs-lookup"><span data-stu-id="ec627-311">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="ec627-312">O exemplo de código cria a coleção `MutableKeys`, que deriva do <xref:System.Collections.ObjectModel.KeyedCollection%602>, e a classe `MutableKey`.</span><span class="sxs-lookup"><span data-stu-id="ec627-312">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="ec627-313">A classe `MutableKey` tem uma propriedade `Key` definível.</span><span class="sxs-lookup"><span data-stu-id="ec627-313">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="ec627-314">Quando uma nova chave é atribuída à propriedade, o setter da propriedade chama o método `internal` (`Friend` no Visual Basic) `ChangeKey` da coleção para testar se a nova chave entraria em conflito com uma chave existente.</span><span class="sxs-lookup"><span data-stu-id="ec627-314">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="ec627-315">Em caso afirmativo, uma exceção é gerada e o valor da propriedade não é alterado.</span><span class="sxs-lookup"><span data-stu-id="ec627-315">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="ec627-316">Para manter a conexão entre um objeto `MutableKey` e a coleção `MutableKeys` e evitar que um objeto seja inserido em duas coleções, a classe `MutableKey` tem um campo `internal` (`Friend` no Visual Basic) `Collection`.</span><span class="sxs-lookup"><span data-stu-id="ec627-316">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="ec627-317">Este campo é mantido pelos métodos protegidos que fornecem o comportamento personalizado para adicionar e remover itens da coleção, como o método <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>.</span><span class="sxs-lookup"><span data-stu-id="ec627-317">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="ec627-318">O campo é definido quando o item é adicionado a uma coleção e desmarcado quando o item é removido.</span><span class="sxs-lookup"><span data-stu-id="ec627-318">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ec627-319">
            <paramref name="index" /> is less than 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec627-319">
              <paramref name="index" /> is less than 0.</span>
          </span>
          <span data-ttu-id="ec627-320">-or-  <paramref name="index" /> is greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec627-320">-or-  <paramref name="index" /> is greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public TItem this[TKey key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TItem Item(!TKey)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(key As TKey) As TItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TItem default[TKey] { TItem get(TKey key); };" />
      <MemberSignature Language="F#" Value="member this.Item('Key) : 'Item" Usage="System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt;.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="ec627-321">The key of the element to get.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec627-321">The key of the element to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ec627-322">Gets the element with the specified key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec627-322">Gets the element with the specified key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ec627-323">O elemento com a chave especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec627-323">The element with the specified key.</span>
          </span>
          <span data-ttu-id="ec627-324">Se um elemento com a chave especificada não for encontrado, uma exceção será lançada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec627-324">If an element with the specified key is not found, an exception is thrown.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec627-325">Esta propriedade fornece a capacidade de acessar um elemento específico na coleção usando a seguinte sintaxe: `myCollection[key]` (`myCollection(key)` no Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="ec627-325">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[key]` (`myCollection(key)` in Visual Basic).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec627-326">Essa propriedade é diferente de herdadas <xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType> propriedade, que obtém e define os elementos por índice numérico.</span><span class="sxs-lookup"><span data-stu-id="ec627-326">This property is distinct from the inherited <xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType> property, which gets and sets elements by numeric index.</span></span> <span data-ttu-id="ec627-327">No entanto, se `TKey` é do tipo <xref:System.Int32>, essa propriedade mascara a propriedade herdada.</span><span class="sxs-lookup"><span data-stu-id="ec627-327">However, if `TKey` is of type <xref:System.Int32>, this property masks the inherited property.</span></span> <span data-ttu-id="ec627-328">Nesse caso, você pode acessar a propriedade herdada convertendo o <xref:System.Collections.ObjectModel.KeyedCollection%602> para seu tipo base.</span><span class="sxs-lookup"><span data-stu-id="ec627-328">In that case, you can access the inherited property by casting the <xref:System.Collections.ObjectModel.KeyedCollection%602> to its base type.</span></span> <span data-ttu-id="ec627-329">Por exemplo, `KeyedCollection<int, MyType>` (`KeyedCollection(Of Integer, MyType)` no Visual Basic, `KeyedCollection<int, MyType^>` em C++) pode ser convertido em `Collection<MyType>` (`Collection(Of MyType)` no Visual Basic, `Collection<MyType^>` em C++).</span><span class="sxs-lookup"><span data-stu-id="ec627-329">For example, `KeyedCollection<int, MyType>` (`KeyedCollection(Of Integer, MyType)` in Visual Basic, `KeyedCollection<int, MyType^>` in C++) can be cast to `Collection<MyType>` (`Collection(Of MyType)` in Visual Basic, `Collection<MyType^>` in C++).</span></span>  
  
 <span data-ttu-id="ec627-330">Se o <xref:System.Collections.ObjectModel.KeyedCollection%602> tem um dicionário de pesquisa, `key` é usado para recuperar o elemento do dicionário.</span><span class="sxs-lookup"><span data-stu-id="ec627-330">If the <xref:System.Collections.ObjectModel.KeyedCollection%602> has a lookup dictionary, `key` is used to retrieve the element from the dictionary.</span></span>  <span data-ttu-id="ec627-331">Se não houver nenhum dicionário de pesquisa, a chave de cada elemento é extraída usando a <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> método e comparada com a chave especificada.</span><span class="sxs-lookup"><span data-stu-id="ec627-331">If there is no lookup dictionary, the key of each element is extracted using the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and compared with the specified key.</span></span>  
  
 <span data-ttu-id="ec627-332">A linguagem c# usa a palavra-chave para definir os indexadores em vez de implementar o <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="ec627-332">The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A> property.</span></span> <span data-ttu-id="ec627-333">Visual Basic implementa <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A> como uma propriedade padrão, que fornece a mesma funcionalidade de indexação.</span><span class="sxs-lookup"><span data-stu-id="ec627-333">Visual Basic implements <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="ec627-334">Recuperar o valor dessa propriedade é uma operação de (1) se o <xref:System.Collections.ObjectModel.KeyedCollection%602> tem um dicionário de pesquisa; caso contrário, será um O (`n`) operação, onde `n` é <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="ec627-334">Retrieving the value of this property is an O(1) operation if the <xref:System.Collections.ObjectModel.KeyedCollection%602> has a lookup dictionary; otherwise it is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec627-335">Este exemplo de código mostra o código mínimo necessário a ser derivado de uma classe de coleção de <xref:System.Collections.ObjectModel.KeyedCollection%602>: substituindo o método <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> e fornecendo um construtor público que representa um construtor de classe base.</span><span class="sxs-lookup"><span data-stu-id="ec627-335">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="ec627-336">O exemplo de código também demonstra muitas das propriedades e dos métodos herdados das classes <xref:System.Collections.ObjectModel.KeyedCollection%602> e <xref:System.Collections.ObjectModel.Collection%601>.</span><span class="sxs-lookup"><span data-stu-id="ec627-336">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="ec627-337">O exemplo de código chama ambos o <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A?displayProperty=nameWithType> propriedade, que é somente leitura e recupera pela chave, e o <xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType> propriedade, que é configurável e recupera pelo índice.</span><span class="sxs-lookup"><span data-stu-id="ec627-337">The code example calls both the <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A?displayProperty=nameWithType> property, which is read-only and retrieves by key, and the <xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType> property, which is settable and retrieves by index.</span></span> <span data-ttu-id="ec627-338">Ele mostra como acessar a propriedade última quando os objetos na coleção derivada têm chaves inteiro, indistinguíveis de inteiros usados para recuperação indexada.</span><span class="sxs-lookup"><span data-stu-id="ec627-338">It shows how to access the latter property when the objects in the derived collection have integer keys, indistinguishable from the integers used for indexed retrieval.</span></span>  
  
 <span data-ttu-id="ec627-339">A classe `SimpleOrder` é uma lista muito simples de requisição que contém objetos `OrderItem`, cada um representando um item de linha na ordem.</span><span class="sxs-lookup"><span data-stu-id="ec627-339">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="ec627-340">A chave de `OrderItem` é imutável, uma consideração importante para classes que derivam de <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="ec627-340">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="ec627-341">Para um exemplo de código que usa chaves mutáveis, consulte <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="ec627-341">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ec627-342">
            <paramref name="key" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec627-342">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException">
          <span data-ttu-id="ec627-343">An element with the specified key does not exist in the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec627-343">An element with the specified key does not exist in the collection.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Remove(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (key As TKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove(TKey key);" />
      <MemberSignature Language="F#" Value="override this.Remove : 'Key -&gt; bool" Usage="keyedCollection.Remove key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="ec627-344">The key of the element to remove.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec627-344">The key of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ec627-345">Removes the element with the specified key from the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec627-345">Removes the element with the specified key from the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ec627-346">
            <see langword="true" /> if the element is successfully removed; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec627-346">
              <see langword="true" /> if the element is successfully removed; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ec627-347">This method also returns <see langword="false" /> if <paramref name="key" /> is not found in the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec627-347">This method also returns <see langword="false" /> if <paramref name="key" /> is not found in the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec627-348">A chave do elemento também é removida do dicionário de pesquisa.</span><span class="sxs-lookup"><span data-stu-id="ec627-348">The key of the element is also removed from the lookup dictionary.</span></span>  
  
 <span data-ttu-id="ec627-349">Se o número de elementos excedeu o limite de criação de dicionário e <xref:System.Collections.ObjectModel.KeyedCollection%602> é usar um dicionário de pesquisa, ele continuará a usar um dicionário de pesquisa, mesmo que o número de elementos novamente está abaixo do limite.</span><span class="sxs-lookup"><span data-stu-id="ec627-349">If the number of elements has exceeded the dictionary creation threshold and the <xref:System.Collections.ObjectModel.KeyedCollection%602> is using a lookup dictionary, it will continue to use a lookup dictionary even though the number of elements is again under the threshold.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec627-350">Para personalizar o comportamento desse método, substitua o <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> método.</span><span class="sxs-lookup"><span data-stu-id="ec627-350">To customize the behavior of this method, override the <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> method.</span></span>  
  
 <span data-ttu-id="ec627-351">Este método é uma operação O(`n`), em que `n` é <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="ec627-351">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec627-352">Este exemplo de código mostra o código mínimo necessário a ser derivado de uma classe de coleção de <xref:System.Collections.ObjectModel.KeyedCollection%602>: substituindo o método <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> e fornecendo um construtor público que representa um construtor de classe base.</span><span class="sxs-lookup"><span data-stu-id="ec627-352">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="ec627-353">O exemplo de código também demonstra muitas das propriedades e dos métodos herdados das classes <xref:System.Collections.ObjectModel.KeyedCollection%602> e <xref:System.Collections.ObjectModel.Collection%601>.</span><span class="sxs-lookup"><span data-stu-id="ec627-353">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="ec627-354">O exemplo demonstra <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A> método herdado do <xref:System.Collections.ObjectModel.KeyedCollection%602>, que remove o item com uma chave especificada e também o <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> e <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> métodos herdados de <xref:System.Collections.ObjectModel.Collection%601>, que remova por objeto e por índice respectivamente.</span><span class="sxs-lookup"><span data-stu-id="ec627-354">The example demonstrates <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A> method inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602>, which removes the item with a specified key, and also the <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> and <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> methods inherited from <xref:System.Collections.ObjectModel.Collection%601>, which remove by object and by index respectively.</span></span>  
  
 <span data-ttu-id="ec627-355">A classe `SimpleOrder` é uma lista muito simples de requisição que contém objetos `OrderItem`, cada um representando um item de linha na ordem.</span><span class="sxs-lookup"><span data-stu-id="ec627-355">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="ec627-356">A chave de `OrderItem` é imutável, uma consideração importante para classes que derivam de <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="ec627-356">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="ec627-357">Para um exemplo de código que usa chaves mutáveis, consulte <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="ec627-357">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ec627-358">
            <paramref name="key" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec627-358">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)" />
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems" />
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="protected override void RemoveItem (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RemoveItem(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RemoveItem (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RemoveItem(int index);" />
      <MemberSignature Language="F#" Value="override this.RemoveItem : int -&gt; unit" Usage="keyedCollection.RemoveItem index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="ec627-359">The index of the element to remove.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec627-359">The index of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ec627-360">Removes the element at the specified index of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec627-360">Removes the element at the specified index of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec627-361">A chave do elemento também é removida do dicionário de pesquisa.</span><span class="sxs-lookup"><span data-stu-id="ec627-361">The key of the element is also removed from the lookup dictionary.</span></span>  
  
 <span data-ttu-id="ec627-362">Se o número de elementos excedeu o limite de criação de dicionário e <xref:System.Collections.ObjectModel.KeyedCollection%602> é usar um dicionário de pesquisa, ele continuará a usar um dicionário de pesquisa, mesmo que o número de elementos novamente está abaixo do limite.</span><span class="sxs-lookup"><span data-stu-id="ec627-362">If the number of elements has exceeded the dictionary creation threshold and the <xref:System.Collections.ObjectModel.KeyedCollection%602> is using a lookup dictionary, it will continue to use a lookup dictionary even though the number of elements is again under the threshold.</span></span>  
  
 <span data-ttu-id="ec627-363">Este método é uma operação O(`n`), em que `n` é <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="ec627-363">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="ec627-364">Observações para implementadores</span><span class="sxs-lookup"><span data-stu-id="ec627-364">Notes for Implementers</span></span>  
 <span data-ttu-id="ec627-365">Substitua este método para fornecer um comportamento personalizado para o <xref:System.Collections.ObjectModel.Collection%601.Remove%28%600%29> e <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%28System.Int32%29> métodos, herdados do <xref:System.Collections.ObjectModel.Collection%601> classe genérica e o <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%28%600%29> método.</span><span class="sxs-lookup"><span data-stu-id="ec627-365">Override this method to provide customized behavior for the <xref:System.Collections.ObjectModel.Collection%601.Remove%28%600%29> and <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%28System.Int32%29> methods, inherited from the <xref:System.Collections.ObjectModel.Collection%601> generic class, and the <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%28%600%29> method.</span></span>  
  
 <span data-ttu-id="ec627-366">Chame a implementação da classe base deste método para remover o item da coleção subjacente e atualizar o dicionário de pesquisa.</span><span class="sxs-lookup"><span data-stu-id="ec627-366">Call the base class implementation of this method to remove the item from the underlying collection and to update the lookup dictionary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec627-367">Esta seção contém dois exemplos de código que demonstram substituindo o <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> método para fornecer um comportamento personalizado para a remoção de objetos da coleção.</span><span class="sxs-lookup"><span data-stu-id="ec627-367">This section contains two code examples that demonstrate overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> method to provide custom behavior for removing objects from the collection.</span></span> <span data-ttu-id="ec627-368">O primeiro exemplo adiciona um evento de notificação personalizado e o segundo dá suporte para uma coleção de objetos com chaves mutáveis.</span><span class="sxs-lookup"><span data-stu-id="ec627-368">The first example adds a custom notification event and the second provides support for a collection of objects with mutable keys.</span></span>  
  
 <span data-ttu-id="ec627-369">Exemplo 1</span><span class="sxs-lookup"><span data-stu-id="ec627-369">Example 1</span></span>  
  
 <span data-ttu-id="ec627-370">O exemplo de código a seguir mostra como substituir os métodos <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> e <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> protegidos para fornecer um comportamento personalizado para os métodos <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A> e <xref:System.Collections.ObjectModel.Collection%601.Clear%2A>, além de definir a propriedade <xref:System.Collections.ObjectModel.Collection%601.Item%2A> padrão (o indexador em C#).</span><span class="sxs-lookup"><span data-stu-id="ec627-370">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="ec627-371">O comportamento personalizado fornecido neste exemplo é um evento de notificação chamado `Changed`, gerado ao final de cada um dos métodos substituídos.</span><span class="sxs-lookup"><span data-stu-id="ec627-371">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="ec627-372">O exemplo de código cria a classe `SimpleOrder`, que deriva do <xref:System.Collections.ObjectModel.KeyedCollection%602> e representa um formulário de pedido simples.</span><span class="sxs-lookup"><span data-stu-id="ec627-372">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="ec627-373">O formulário do pedido contém objetos `OrderItem` representando itens ordenados.</span><span class="sxs-lookup"><span data-stu-id="ec627-373">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="ec627-374">O exemplo de código também cria uma classe `SimpleOrderChangedEventArgs` para conter informações do evento, e uma enumeração para identificar o tipo de alteração.</span><span class="sxs-lookup"><span data-stu-id="ec627-374">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="ec627-375">O exemplo de código demonstra o comportamento personalizado chamando as propriedades e os métodos da classe derivada, no método `Main` da classe `Demo`.</span><span class="sxs-lookup"><span data-stu-id="ec627-375">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="ec627-376">Este exemplo de código usa objetos com chaves imutáveis.</span><span class="sxs-lookup"><span data-stu-id="ec627-376">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="ec627-377">Para um exemplo de código que usa chaves mutáveis, consulte <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="ec627-377">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 <span data-ttu-id="ec627-378">Exemplo 2</span><span class="sxs-lookup"><span data-stu-id="ec627-378">Example 2</span></span>  
  
 <span data-ttu-id="ec627-379">O exemplo de código a seguir mostra como substituir o método <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> protegido para dar suporte a chaves mutáveis e como substituir os métodos <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A> e <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> protegidos para manter a integridade das chaves e da coleção.</span><span class="sxs-lookup"><span data-stu-id="ec627-379">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="ec627-380">O exemplo de código cria a coleção `MutableKeys`, que deriva do <xref:System.Collections.ObjectModel.KeyedCollection%602>, e a classe `MutableKey`.</span><span class="sxs-lookup"><span data-stu-id="ec627-380">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="ec627-381">A classe `MutableKey` tem uma propriedade `Key` definível.</span><span class="sxs-lookup"><span data-stu-id="ec627-381">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="ec627-382">Quando uma nova chave é atribuída à propriedade, o setter da propriedade chama o método `internal` (`Friend` no Visual Basic) `ChangeKey` da coleção para testar se a nova chave entraria em conflito com uma chave existente.</span><span class="sxs-lookup"><span data-stu-id="ec627-382">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="ec627-383">Em caso afirmativo, uma exceção é gerada e o valor da propriedade não é alterado.</span><span class="sxs-lookup"><span data-stu-id="ec627-383">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="ec627-384">Para manter a conexão entre um objeto `MutableKey` e a coleção `MutableKeys` e evitar que um objeto seja inserido em duas coleções, a classe `MutableKey` tem um campo `internal` (`Friend` no Visual Basic) `Collection`.</span><span class="sxs-lookup"><span data-stu-id="ec627-384">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="ec627-385">Este campo é mantido pelos métodos protegidos que fornecem o comportamento personalizado para adicionar e remover itens da coleção, como o método <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>.</span><span class="sxs-lookup"><span data-stu-id="ec627-385">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="ec627-386">O campo é definido quando o item é adicionado a uma coleção e desmarcado quando o item é removido.</span><span class="sxs-lookup"><span data-stu-id="ec627-386">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)" />
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems" />
      </Docs>
    </Member>
    <Member MemberName="SetItem">
      <MemberSignature Language="C#" Value="protected override void SetItem (int index, TItem item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetItem(int32 index, !TItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetItem (index As Integer, item As TItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetItem(int index, TItem item);" />
      <MemberSignature Language="F#" Value="override this.SetItem : int * 'Item -&gt; unit" Usage="keyedCollection.SetItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="TItem" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="ec627-387">The zero-based index of the item to be replaced.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec627-387">The zero-based index of the item to be replaced.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="ec627-388">The new item.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec627-388">The new item.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ec627-389">Replaces the item at the specified index with the specified item.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ec627-389">Replaces the item at the specified index with the specified item.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec627-390">O dicionário de pesquisa é atualizado adequadamente.</span><span class="sxs-lookup"><span data-stu-id="ec627-390">The lookup dictionary is updated accordingly.</span></span> <span data-ttu-id="ec627-391">Ou seja, a chave do item que está sendo substituída será removida do dicionário de pesquisa e a chave do novo item é adicionada.</span><span class="sxs-lookup"><span data-stu-id="ec627-391">That is, the key of the item that is being replaced is removed from the lookup dictionary, and the key of the new item is added.</span></span>  
  
 <span data-ttu-id="ec627-392">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="ec627-392">This method is an O(1) operation.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="ec627-393">Observações para implementadores</span><span class="sxs-lookup"><span data-stu-id="ec627-393">Notes for Implementers</span></span>  
 <span data-ttu-id="ec627-394">Substitua este método para fornecer um comportamento personalizado para a configuração de <xref:System.Collections.ObjectModel.Collection%601.Item%2A> propriedade herdada do <xref:System.Collections.ObjectModel.Collection%601> classe genérica.</span><span class="sxs-lookup"><span data-stu-id="ec627-394">Override this method to provide customized behavior for setting the <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property inherited from the <xref:System.Collections.ObjectModel.Collection%601> generic class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec627-395">Esse método não afeta o comportamento do <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A?displayProperty=nameWithType> propriedade, que é somente leitura.</span><span class="sxs-lookup"><span data-stu-id="ec627-395">This method does not affect the behavior of the <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A?displayProperty=nameWithType> property, which is read-only.</span></span>  
  
 <span data-ttu-id="ec627-396">Chame a implementação da classe base deste método para definir o item na coleção e atualizar o dicionário de pesquisa.</span><span class="sxs-lookup"><span data-stu-id="ec627-396">Call the base class implementation of this method to set the item in the underlying collection and to update the lookup dictionary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec627-397">Esta seção contém dois exemplos de código que demonstram substituindo o <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> método para fornecer um comportamento personalizado para a configuração de <xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType> propriedade.</span><span class="sxs-lookup"><span data-stu-id="ec627-397">This section contains two code examples that demonstrate overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> method to provide custom behavior for setting the <xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="ec627-398">O primeiro exemplo adiciona um evento de notificação personalizado e o segundo dá suporte para uma coleção de objetos com chaves mutáveis.</span><span class="sxs-lookup"><span data-stu-id="ec627-398">The first example adds a custom notification event and the second provides support for a collection of objects with mutable keys.</span></span>  
  
 <span data-ttu-id="ec627-399">Exemplo 1</span><span class="sxs-lookup"><span data-stu-id="ec627-399">Example 1</span></span>  
  
 <span data-ttu-id="ec627-400">O exemplo de código a seguir mostra como substituir os métodos <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> e <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> protegidos para fornecer um comportamento personalizado para os métodos <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A> e <xref:System.Collections.ObjectModel.Collection%601.Clear%2A>, além de definir a propriedade <xref:System.Collections.ObjectModel.Collection%601.Item%2A> padrão (o indexador em C#).</span><span class="sxs-lookup"><span data-stu-id="ec627-400">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="ec627-401">O comportamento personalizado fornecido neste exemplo é um evento de notificação chamado `Changed`, gerado ao final de cada um dos métodos substituídos.</span><span class="sxs-lookup"><span data-stu-id="ec627-401">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="ec627-402">O exemplo de código cria a classe `SimpleOrder`, que deriva do <xref:System.Collections.ObjectModel.KeyedCollection%602> e representa um formulário de pedido simples.</span><span class="sxs-lookup"><span data-stu-id="ec627-402">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="ec627-403">O formulário do pedido contém objetos `OrderItem` representando itens ordenados.</span><span class="sxs-lookup"><span data-stu-id="ec627-403">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="ec627-404">O exemplo de código também cria uma classe `SimpleOrderChangedEventArgs` para conter informações do evento, e uma enumeração para identificar o tipo de alteração.</span><span class="sxs-lookup"><span data-stu-id="ec627-404">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="ec627-405">O exemplo de código demonstra o comportamento personalizado chamando as propriedades e os métodos da classe derivada, no método `Main` da classe `Demo`.</span><span class="sxs-lookup"><span data-stu-id="ec627-405">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="ec627-406">Este exemplo de código usa objetos com chaves imutáveis.</span><span class="sxs-lookup"><span data-stu-id="ec627-406">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="ec627-407">Para um exemplo de código que usa chaves mutáveis, consulte <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="ec627-407">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 <span data-ttu-id="ec627-408">Exemplo 2</span><span class="sxs-lookup"><span data-stu-id="ec627-408">Example 2</span></span>  
  
 <span data-ttu-id="ec627-409">O exemplo de código a seguir mostra como substituir o método <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> protegido para dar suporte a chaves mutáveis e como substituir os métodos <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A> e <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> protegidos para manter a integridade das chaves e da coleção.</span><span class="sxs-lookup"><span data-stu-id="ec627-409">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="ec627-410">O exemplo de código cria a coleção `MutableKeys`, que deriva do <xref:System.Collections.ObjectModel.KeyedCollection%602>, e a classe `MutableKey`.</span><span class="sxs-lookup"><span data-stu-id="ec627-410">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="ec627-411">A classe `MutableKey` tem uma propriedade `Key` definível.</span><span class="sxs-lookup"><span data-stu-id="ec627-411">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="ec627-412">Quando uma nova chave é atribuída à propriedade, o setter da propriedade chama o método `internal` (`Friend` no Visual Basic) `ChangeKey` da coleção para testar se a nova chave entraria em conflito com uma chave existente.</span><span class="sxs-lookup"><span data-stu-id="ec627-412">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="ec627-413">Em caso afirmativo, uma exceção é gerada e o valor da propriedade não é alterado.</span><span class="sxs-lookup"><span data-stu-id="ec627-413">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="ec627-414">Para manter a conexão entre um objeto `MutableKey` e a coleção `MutableKeys` e evitar que um objeto seja inserido em duas coleções, a classe `MutableKey` tem um campo `internal` (`Friend` no Visual Basic) `Collection`.</span><span class="sxs-lookup"><span data-stu-id="ec627-414">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="ec627-415">Este campo é mantido pelos métodos protegidos que fornecem o comportamento personalizado para adicionar e remover itens da coleção, como o método <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>.</span><span class="sxs-lookup"><span data-stu-id="ec627-415">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="ec627-416">O campo é definido quando o item é adicionado a uma coleção e desmarcado quando o item é removido.</span><span class="sxs-lookup"><span data-stu-id="ec627-416">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)" />
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)" />
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (TKey key, out TItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetValue(!TKey key, [out] !TItem&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.TryGetValue(`0,`1@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (key As TKey, ByRef item As TItem) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetValue(TKey key, [Runtime::InteropServices::Out] TItem % item);" />
      <MemberSignature Language="F#" Value="member this.TryGetValue : 'Key *  -&gt; bool" Usage="keyedCollection.TryGetValue (key, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="item" Type="TItem&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="item">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>