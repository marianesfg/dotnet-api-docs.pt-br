<Type Name="KeyedCollection&lt;TKey,TItem&gt;" FullName="System.Collections.ObjectModel.KeyedCollection&lt;TKey,TItem&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f674f9e621e530f6ee1b3c61278c7bc6009ee991" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58694343" /></Metadata><TypeSignature Language="C#" Value="public abstract class KeyedCollection&lt;TKey,TItem&gt; : System.Collections.ObjectModel.Collection&lt;TItem&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit KeyedCollection`2&lt;TKey, TItem&gt; extends System.Collections.ObjectModel.Collection`1&lt;!TItem&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Collections.ObjectModel.KeyedCollection`2" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class KeyedCollection(Of TKey, TItem)&#xA;Inherits Collection(Of TItem)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TKey, typename TItem&gt;&#xA;public ref class KeyedCollection abstract : System::Collections::ObjectModel::Collection&lt;TItem&gt;" />
  <TypeSignature Language="F#" Value="type KeyedCollection&lt;'Key, 'Item&gt; = class&#xA;    inherit Collection&lt;'Item&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.ObjectModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey" />
    <TypeParameter Name="TItem" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Collections.ObjectModel.Collection&lt;TItem&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="T">TItem</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.Mscorlib_KeyedCollectionDebugView`2))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TKey"><span data-ttu-id="9554d-101">O tipo das chaves da coleção.</span><span class="sxs-lookup"><span data-stu-id="9554d-101">The type of keys in the collection.</span></span></typeparam>
    <typeparam name="TItem"><span data-ttu-id="9554d-102">O tipo de itens na coleção.</span><span class="sxs-lookup"><span data-stu-id="9554d-102">The type of items in the collection.</span></span></typeparam>
    <summary><span data-ttu-id="9554d-103">Fornece a classe base abstrata para uma coleção cujas chaves são incorporadas nos valores.</span><span class="sxs-lookup"><span data-stu-id="9554d-103">Provides the abstract base class for a collection whose keys are embedded in the values.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9554d-104">O <xref:System.Collections.ObjectModel.KeyedCollection%602> classe fornece uma recuperação indexada de ambos os (1) e com a chave de recuperação que se aproxima de (1).</span><span class="sxs-lookup"><span data-stu-id="9554d-104">The <xref:System.Collections.ObjectModel.KeyedCollection%602> class provides both O(1) indexed retrieval and keyed retrieval that approaches O(1).</span></span> <span data-ttu-id="9554d-105">É um tipo abstrato ou, mais precisamente um infinito definido de tipos abstratos, porque cada um dos seus tipos genéricos construídos é uma classe base abstrata.</span><span class="sxs-lookup"><span data-stu-id="9554d-105">It is an abstract type, or more accurately an infinite set of abstract types, because each of its constructed generic types is an abstract base class.</span></span> <span data-ttu-id="9554d-106">Para usar <xref:System.Collections.ObjectModel.KeyedCollection%602>, derivar seu tipo de coleção do tipo construído apropriado.</span><span class="sxs-lookup"><span data-stu-id="9554d-106">To use <xref:System.Collections.ObjectModel.KeyedCollection%602>, derive your collection type from the appropriate constructed type.</span></span>  
  
 <span data-ttu-id="9554d-107">O <xref:System.Collections.ObjectModel.KeyedCollection%602> classe é um híbrido entre uma coleção com base em de <xref:System.Collections.Generic.IList%601> interface genérica e uma coleção com base no <xref:System.Collections.Generic.IDictionary%602> interface genérica.</span><span class="sxs-lookup"><span data-stu-id="9554d-107">The <xref:System.Collections.ObjectModel.KeyedCollection%602> class is a hybrid between a collection based on the <xref:System.Collections.Generic.IList%601> generic interface and a collection based on the <xref:System.Collections.Generic.IDictionary%602> generic interface.</span></span> <span data-ttu-id="9554d-108">Como coleções com base no, o <xref:System.Collections.Generic.IList%601> interface genérica, <xref:System.Collections.ObjectModel.KeyedCollection%602> é uma lista indexada de itens.</span><span class="sxs-lookup"><span data-stu-id="9554d-108">Like collections based on the <xref:System.Collections.Generic.IList%601> generic interface, <xref:System.Collections.ObjectModel.KeyedCollection%602> is an indexed list of items.</span></span> <span data-ttu-id="9554d-109">Como coleções com base no, o <xref:System.Collections.Generic.IDictionary%602> interface genérica, <xref:System.Collections.ObjectModel.KeyedCollection%602> tem uma chave associada a cada elemento.</span><span class="sxs-lookup"><span data-stu-id="9554d-109">Like collections based on the <xref:System.Collections.Generic.IDictionary%602> generic interface, <xref:System.Collections.ObjectModel.KeyedCollection%602> has a key associated with each element.</span></span>  
  
 <span data-ttu-id="9554d-110">Ao contrário de dicionários, um elemento de <xref:System.Collections.ObjectModel.KeyedCollection%602> não é um par chave/valor; em vez disso, todo o elemento é o valor e a chave é inserida dentro do valor.</span><span class="sxs-lookup"><span data-stu-id="9554d-110">Unlike dictionaries, an element of <xref:System.Collections.ObjectModel.KeyedCollection%602> is not a key/value pair; instead, the entire element is the value and the key is embedded within the value.</span></span>  <span data-ttu-id="9554d-111">Por exemplo, um elemento de uma coleção é derivado de `KeyedCollection\<String,String>` (`KeyedCollection(Of String, String)` no Visual Basic) pode ser "John Doe Jr."</span><span class="sxs-lookup"><span data-stu-id="9554d-111">For example, an element of a collection derived from `KeyedCollection\<String,String>` (`KeyedCollection(Of String, String)` in Visual Basic) might be "John Doe Jr."</span></span> <span data-ttu-id="9554d-112">onde o valor é "John Doe Jr."</span><span class="sxs-lookup"><span data-stu-id="9554d-112">where the value is "John Doe Jr."</span></span> <span data-ttu-id="9554d-113">e a chave é "Doe"; ou uma coleção de registros de funcionários que contém chaves inteiro pode ser derivada de `KeyedCollection\<int,Employee>`.</span><span class="sxs-lookup"><span data-stu-id="9554d-113">and the key is "Doe"; or a collection of employee records containing integer keys could be derived from `KeyedCollection\<int,Employee>`.</span></span> <span data-ttu-id="9554d-114">Abstrata <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> método extrai a chave do elemento.</span><span class="sxs-lookup"><span data-stu-id="9554d-114">The abstract <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method extracts the key from the element.</span></span>  
  
 <span data-ttu-id="9554d-115">Por padrão, o <xref:System.Collections.ObjectModel.KeyedCollection%602> inclui um dicionário de pesquisa que você pode obter com o <xref:System.Collections.ObjectModel.KeyedCollection%602.Dictionary%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="9554d-115">By default, the <xref:System.Collections.ObjectModel.KeyedCollection%602> includes a lookup dictionary that you can obtain with the <xref:System.Collections.ObjectModel.KeyedCollection%602.Dictionary%2A> property.</span></span>  <span data-ttu-id="9554d-116">Quando um item é adicionado ao <xref:System.Collections.ObjectModel.KeyedCollection%602>, a chave do item será extraída uma vez e salva no dicionário de pesquisa para pesquisas mais rápidas.</span><span class="sxs-lookup"><span data-stu-id="9554d-116">When an item is added to the <xref:System.Collections.ObjectModel.KeyedCollection%602>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</span></span> <span data-ttu-id="9554d-117">Esse comportamento é substituído pela especificação de um limite de criação de dicionário quando você cria o <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="9554d-117">This behavior is overridden by specifying a dictionary creation threshold when you create the <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="9554d-118">O dicionário de pesquisa é criado na primeira vez em que o número de elementos excede esse limite.</span><span class="sxs-lookup"><span data-stu-id="9554d-118">The lookup dictionary is created the first time the number of elements exceeds that threshold.</span></span>  <span data-ttu-id="9554d-119">Se você especificar -1 como o limite, o dicionário de pesquisa nunca é criado.</span><span class="sxs-lookup"><span data-stu-id="9554d-119">If you specify -1 as the threshold, the lookup dictionary is never created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9554d-120">Quando o dicionário de pesquisa interno é usado, ele contém referências a todos os itens na coleção, se `TItem` é um tipo de referência, ou cópias de todos os itens na coleção se `TItem` é um tipo de valor.</span><span class="sxs-lookup"><span data-stu-id="9554d-120">When the internal lookup dictionary is used, it contains references to all the items in the collection if `TItem` is a reference type, or copies of all the items in the collection if `TItem` is a value type.</span></span> <span data-ttu-id="9554d-121">Assim, usar o dicionário de pesquisa pode não ser apropriado se `TItem` é um tipo de valor.</span><span class="sxs-lookup"><span data-stu-id="9554d-121">Thus, using the lookup dictionary may not be appropriate if `TItem` is a value type.</span></span>  
  
 <span data-ttu-id="9554d-122">Você pode acessar um item por seu índice ou chave usando o <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="9554d-122">You can access an item by its index or key by using the <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A> property.</span></span> <span data-ttu-id="9554d-123">Você pode adicionar itens sem uma chave, mas esses itens posteriormente podem ser acessados somente por índice.</span><span class="sxs-lookup"><span data-stu-id="9554d-123">You can add items without a key, but these items can subsequently be accessed only by index.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9554d-124">Esta seção contém dois exemplos de código.</span><span class="sxs-lookup"><span data-stu-id="9554d-124">This section contains two code examples.</span></span> <span data-ttu-id="9554d-125">O primeiro exemplo mostra o código mínimo necessário derivar de <xref:System.Collections.ObjectModel.KeyedCollection%602>e demonstra muitos dos métodos herdados.</span><span class="sxs-lookup"><span data-stu-id="9554d-125">The first example shows the minimum code required to derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and demonstrates many of the inherited methods.</span></span> <span data-ttu-id="9554d-126">O segundo exemplo mostra como substituir os métodos protegidos da <xref:System.Collections.ObjectModel.KeyedCollection%602> para fornecer um comportamento personalizado.</span><span class="sxs-lookup"><span data-stu-id="9554d-126">The second example shows how to override the protected methods of <xref:System.Collections.ObjectModel.KeyedCollection%602> to provide custom behavior.</span></span>  
  
 <span data-ttu-id="9554d-127">**Exemplo 1**</span><span class="sxs-lookup"><span data-stu-id="9554d-127">**Example 1**</span></span>  
  
 <span data-ttu-id="9554d-128">Este exemplo de código mostra o código mínimo necessário a ser derivado de uma classe de coleção de <xref:System.Collections.ObjectModel.KeyedCollection%602>: substituindo o método <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> e fornecendo um construtor público que representa um construtor de classe base.</span><span class="sxs-lookup"><span data-stu-id="9554d-128">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="9554d-129">O exemplo de código também demonstra muitas das propriedades e dos métodos herdados das classes <xref:System.Collections.ObjectModel.KeyedCollection%602> e <xref:System.Collections.ObjectModel.Collection%601>.</span><span class="sxs-lookup"><span data-stu-id="9554d-129">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="9554d-130">A classe `SimpleOrder` é uma lista muito simples de requisição que contém objetos `OrderItem`, cada um representando um item de linha na ordem.</span><span class="sxs-lookup"><span data-stu-id="9554d-130">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="9554d-131">A chave de `OrderItem` é imutável, uma consideração importante para classes que derivam de <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="9554d-131">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="9554d-132">Para um exemplo de código que usa chaves mutáveis, consulte <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="9554d-132">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 <span data-ttu-id="9554d-133">**Exemplo 2**</span><span class="sxs-lookup"><span data-stu-id="9554d-133">**Example 2**</span></span>  
  
 <span data-ttu-id="9554d-134">O exemplo de código a seguir mostra como substituir os métodos <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> e <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> protegidos para fornecer um comportamento personalizado para os métodos <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A> e <xref:System.Collections.ObjectModel.Collection%601.Clear%2A>, além de definir a propriedade <xref:System.Collections.ObjectModel.Collection%601.Item%2A> padrão (o indexador em C#).</span><span class="sxs-lookup"><span data-stu-id="9554d-134">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="9554d-135">O comportamento personalizado fornecido neste exemplo é um evento de notificação chamado `Changed`, gerado ao final de cada um dos métodos substituídos.</span><span class="sxs-lookup"><span data-stu-id="9554d-135">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="9554d-136">O exemplo de código cria a classe `SimpleOrder`, que deriva do <xref:System.Collections.ObjectModel.KeyedCollection%602> e representa um formulário de pedido simples.</span><span class="sxs-lookup"><span data-stu-id="9554d-136">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="9554d-137">O formulário do pedido contém objetos `OrderItem` representando itens ordenados.</span><span class="sxs-lookup"><span data-stu-id="9554d-137">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="9554d-138">O exemplo de código também cria uma classe `SimpleOrderChangedEventArgs` para conter informações do evento, e uma enumeração para identificar o tipo de alteração.</span><span class="sxs-lookup"><span data-stu-id="9554d-138">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="9554d-139">O exemplo de código demonstra o comportamento personalizado chamando as propriedades e os métodos da classe derivada, no método `Main` da classe `Demo`.</span><span class="sxs-lookup"><span data-stu-id="9554d-139">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="9554d-140">Este exemplo de código usa objetos com chaves imutáveis.</span><span class="sxs-lookup"><span data-stu-id="9554d-140">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="9554d-141">Para um exemplo de código que usa chaves mutáveis, consulte <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="9554d-141">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.Specialized.StringDictionary" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9554d-142">Inicializa uma nova instância da classe <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span><span class="sxs-lookup"><span data-stu-id="9554d-142">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected KeyedCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; KeyedCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9554d-143">Inicializa uma nova instância da classe <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> que usa o comparador de igualdade padrão.</span><span class="sxs-lookup"><span data-stu-id="9554d-143">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> class that uses the default equality comparer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9554d-144">Um <xref:System.Collections.ObjectModel.KeyedCollection%602> criado com este construtor usa o comparador de igualdade genérico padrão para o tipo de chave, obtido do <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9554d-144">A <xref:System.Collections.ObjectModel.KeyedCollection%602> created with this constructor uses the default generic equality comparer for the type of the key, obtained from <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="9554d-145">Para especificar um comparador de igualdade genérico diferentes, use o <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%29> construtor ou o <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> construtor.</span><span class="sxs-lookup"><span data-stu-id="9554d-145">To specify a different generic equality comparer, use the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%29> constructor or the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> constructor.</span></span>  
  
 <span data-ttu-id="9554d-146">Por padrão, <xref:System.Collections.ObjectModel.KeyedCollection%602> inclui um dicionário de pesquisa, criado quando o primeiro item é adicionado.</span><span class="sxs-lookup"><span data-stu-id="9554d-146">By default, the <xref:System.Collections.ObjectModel.KeyedCollection%602> includes a lookup dictionary that is created when the first item is added.</span></span> <span data-ttu-id="9554d-147">Quando um item é adicionado ao <xref:System.Collections.ObjectModel.KeyedCollection%602>, a chave do item será extraída uma vez e salva no dicionário de pesquisa para pesquisas mais rápidas.</span><span class="sxs-lookup"><span data-stu-id="9554d-147">When an item is added to the <xref:System.Collections.ObjectModel.KeyedCollection%602>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</span></span> <span data-ttu-id="9554d-148">Esse comportamento pode ser substituído usando o <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> construtor e especificando um limite de criação do dicionário.</span><span class="sxs-lookup"><span data-stu-id="9554d-148">This behavior can be overridden by using the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> constructor and specifying a dictionary creation threshold.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9554d-149">Porque o <xref:System.Collections.ObjectModel.KeyedCollection%602> classe é abstrata (`MustInherit` no Visual Basic), você deve derivar para usá-lo.</span><span class="sxs-lookup"><span data-stu-id="9554d-149">Because the <xref:System.Collections.ObjectModel.KeyedCollection%602> class is abstract (`MustInherit` in Visual Basic), you must derive from it in order to use it.</span></span> <span data-ttu-id="9554d-150">No construtor para seu tipo derivado, chame o <xref:System.Collections.ObjectModel.KeyedCollection%602> construtor.</span><span class="sxs-lookup"><span data-stu-id="9554d-150">In the constructor for your derived type, call the appropriate <xref:System.Collections.ObjectModel.KeyedCollection%602> constructor.</span></span> <span data-ttu-id="9554d-151">Não é necessário para expor a funcionalidade, como o comparador de igualdade ou o limite de criação do dicionário em seus construtores.</span><span class="sxs-lookup"><span data-stu-id="9554d-151">It is not necessary to expose functionality like the equality comparer or the dictionary creation threshold in your constructors.</span></span>  
  
 <span data-ttu-id="9554d-152">Este construtor é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="9554d-152">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9554d-153">Este exemplo de código mostra o código mínimo necessário a ser derivado de uma classe de coleção de <xref:System.Collections.ObjectModel.KeyedCollection%602>: substituindo o método <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> e fornecendo um construtor público que representa um construtor de classe base.</span><span class="sxs-lookup"><span data-stu-id="9554d-153">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="9554d-154">O exemplo de código também demonstra muitas das propriedades e dos métodos herdados das classes <xref:System.Collections.ObjectModel.KeyedCollection%602> e <xref:System.Collections.ObjectModel.Collection%601>.</span><span class="sxs-lookup"><span data-stu-id="9554d-154">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="9554d-155">A classe `SimpleOrder` é uma lista muito simples de requisição que contém objetos `OrderItem`, cada um representando um item de linha na ordem.</span><span class="sxs-lookup"><span data-stu-id="9554d-155">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="9554d-156">A chave de `OrderItem` é imutável, uma consideração importante para classes que derivam de <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="9554d-156">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="9554d-157">Para um exemplo de código que usa chaves mutáveis, consulte <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="9554d-157">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEqualityComparer`1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected KeyedCollection (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (comparer As IEqualityComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; KeyedCollection(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt; : System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt;" Usage="new System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt; comparer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="9554d-158">A implementação da interface genérica <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> para uso na comparação de chaves ou para <see langword="null" /> usar o comparador de igualdade padrão para o tipo da chave, obtido em <see cref="P:System.Collections.Generic.EqualityComparer`1.Default" />.</span><span class="sxs-lookup"><span data-stu-id="9554d-158">The implementation of the <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> generic interface to use when comparing keys, or <see langword="null" /> to use the default equality comparer for the type of the key, obtained from <see cref="P:System.Collections.Generic.EqualityComparer`1.Default" />.</span></span></param>
        <summary><span data-ttu-id="9554d-159">Inicializa uma nova instância da classe <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> que usa o comparador de igualdade especificado.</span><span class="sxs-lookup"><span data-stu-id="9554d-159">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> class that uses the specified equality comparer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9554d-160">Por padrão, <xref:System.Collections.ObjectModel.KeyedCollection%602> inclui um dicionário de pesquisa, criado quando o primeiro item é adicionado.</span><span class="sxs-lookup"><span data-stu-id="9554d-160">By default, the <xref:System.Collections.ObjectModel.KeyedCollection%602> includes a lookup dictionary that is created when the first item is added.</span></span> <span data-ttu-id="9554d-161">Quando um item é adicionado ao <xref:System.Collections.ObjectModel.KeyedCollection%602>, a chave do item será extraída uma vez e salva no dicionário de pesquisa para pesquisas mais rápidas.</span><span class="sxs-lookup"><span data-stu-id="9554d-161">When an item is added to the <xref:System.Collections.ObjectModel.KeyedCollection%602>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</span></span> <span data-ttu-id="9554d-162">Esse comportamento pode ser substituído usando o <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> construtor e especificando um limite de criação do dicionário.</span><span class="sxs-lookup"><span data-stu-id="9554d-162">This behavior can be overridden by using the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> constructor and specifying a dictionary creation threshold.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9554d-163">Porque o <xref:System.Collections.ObjectModel.KeyedCollection%602> classe é abstrata (`MustInherit` no Visual Basic), você deve derivar para usá-lo.</span><span class="sxs-lookup"><span data-stu-id="9554d-163">Because the <xref:System.Collections.ObjectModel.KeyedCollection%602> class is abstract (`MustInherit` in Visual Basic), you must derive from it in order to use it.</span></span> <span data-ttu-id="9554d-164">No construtor para seu tipo derivado, chame o <xref:System.Collections.ObjectModel.KeyedCollection%602> construtor.</span><span class="sxs-lookup"><span data-stu-id="9554d-164">In the constructor for your derived type, call the appropriate <xref:System.Collections.ObjectModel.KeyedCollection%602> constructor.</span></span> <span data-ttu-id="9554d-165">Não é necessário para expor a funcionalidade, como o comparador de igualdade ou o limite de criação do dicionário em seus construtores.</span><span class="sxs-lookup"><span data-stu-id="9554d-165">It is not necessary to expose functionality like the equality comparer or the dictionary creation threshold in your constructors.</span></span>  
  
 <span data-ttu-id="9554d-166">Este construtor é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="9554d-166">This constructor is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEqualityComparer`1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected KeyedCollection (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer, int dictionaryCreationThreshold);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; comparer, int32 dictionaryCreationThreshold) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (comparer As IEqualityComparer(Of TKey), dictionaryCreationThreshold As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; KeyedCollection(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer, int dictionaryCreationThreshold);" />
      <MemberSignature Language="F#" Value="new System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt; : System.Collections.Generic.IEqualityComparer&lt;'Key&gt; * int -&gt; System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt;" Usage="new System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt; (comparer, dictionaryCreationThreshold)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
        <Parameter Name="dictionaryCreationThreshold" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="9554d-167">A implementação da interface genérica <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> para uso na comparação de chaves ou para <see langword="null" /> usar o comparador de igualdade padrão para o tipo da chave, obtido em <see cref="P:System.Collections.Generic.EqualityComparer`1.Default" />.</span><span class="sxs-lookup"><span data-stu-id="9554d-167">The implementation of the <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> generic interface to use when comparing keys, or <see langword="null" /> to use the default equality comparer for the type of the key, obtained from <see cref="P:System.Collections.Generic.EqualityComparer`1.Default" />.</span></span></param>
        <param name="dictionaryCreationThreshold"><span data-ttu-id="9554d-168">O número de elementos que a coleção pode conter sem criar um dicionário de pesquisa (0 cria o dicionário de pesquisa quando o primeiro item é adicionado), ou -1 para especificar que um dicionário de pesquisa nunca é criado.</span><span class="sxs-lookup"><span data-stu-id="9554d-168">The number of elements the collection can hold without creating a lookup dictionary (0 creates the lookup dictionary when the first item is added), or -1 to specify that a lookup dictionary is never created.</span></span></param>
        <summary><span data-ttu-id="9554d-169">Inicializa uma nova instância da classe <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> que usa o comparador de igualdade especificado e cria um dicionário de pesquisa quando o limite especificado é excedido.</span><span class="sxs-lookup"><span data-stu-id="9554d-169">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> class that uses the specified equality comparer and creates a lookup dictionary when the specified threshold is exceeded.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9554d-170">Por padrão, <xref:System.Collections.ObjectModel.KeyedCollection%602> inclui um dicionário de pesquisa, criado quando o primeiro item é adicionado.</span><span class="sxs-lookup"><span data-stu-id="9554d-170">By default, the <xref:System.Collections.ObjectModel.KeyedCollection%602> includes a lookup dictionary that is created when the first item is added.</span></span> <span data-ttu-id="9554d-171">Quando um item é adicionado ao <xref:System.Collections.ObjectModel.KeyedCollection%602>, a chave do item será extraída uma vez e salva no dicionário de pesquisa para pesquisas mais rápidas.</span><span class="sxs-lookup"><span data-stu-id="9554d-171">When an item is added to the <xref:System.Collections.ObjectModel.KeyedCollection%602>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</span></span> <span data-ttu-id="9554d-172">Este construtor permite que você substitua esse comportamento.</span><span class="sxs-lookup"><span data-stu-id="9554d-172">This constructor allows you to override that behavior.</span></span> <span data-ttu-id="9554d-173">Especifique 0 para criar o dicionário quando o primeiro elemento é adicionado, 1 para criar o dicionário quando o segundo elemento é adicionado e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="9554d-173">Specify 0 to create the dictionary when the first element is added, 1 to create the dictionary when the second element is added, and so on.</span></span> <span data-ttu-id="9554d-174">Se você especificar -1 como o limite, o dicionário de pesquisa nunca é criado.</span><span class="sxs-lookup"><span data-stu-id="9554d-174">If you specify -1 as the threshold, the lookup dictionary is never created.</span></span>  
  
 <span data-ttu-id="9554d-175">Para coleções muito pequenas a melhoria na velocidade de recuperação fornecida pelo dicionário de pesquisa pode não valer a memória extra necessária para o dicionário.</span><span class="sxs-lookup"><span data-stu-id="9554d-175">For very small collections the improvement in retrieval speed provided by the lookup dictionary might not be worth the extra memory required by the dictionary.</span></span> <span data-ttu-id="9554d-176">Definir o limite permite que você decida quando tornar essa compensação.</span><span class="sxs-lookup"><span data-stu-id="9554d-176">Setting a threshold allows you to decide when to make that tradeoff.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9554d-177">Porque o <xref:System.Collections.ObjectModel.KeyedCollection%602> classe é abstrata (`MustInherit` no Visual Basic), você deve derivar para usá-lo.</span><span class="sxs-lookup"><span data-stu-id="9554d-177">Because the <xref:System.Collections.ObjectModel.KeyedCollection%602> class is abstract (`MustInherit` in Visual Basic), you must derive from it in order to use it.</span></span> <span data-ttu-id="9554d-178">No construtor para seu tipo derivado, chame o <xref:System.Collections.ObjectModel.KeyedCollection%602> construtor.</span><span class="sxs-lookup"><span data-stu-id="9554d-178">In the constructor for your derived type, call the appropriate <xref:System.Collections.ObjectModel.KeyedCollection%602> constructor.</span></span> <span data-ttu-id="9554d-179">Não é necessário para expor a funcionalidade, como o comparador de igualdade ou o limite de criação do dicionário em seus construtores.</span><span class="sxs-lookup"><span data-stu-id="9554d-179">It is not necessary to expose functionality like the equality comparer or the dictionary creation threshold in your constructors.</span></span>  
  
 <span data-ttu-id="9554d-180">Este construtor é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="9554d-180">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9554d-181">O exemplo de código a seguir mostra como substituir os métodos <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> e <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> protegidos para fornecer um comportamento personalizado para os métodos <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A> e <xref:System.Collections.ObjectModel.Collection%601.Clear%2A>, além de definir a propriedade <xref:System.Collections.ObjectModel.Collection%601.Item%2A> padrão (o indexador em C#).</span><span class="sxs-lookup"><span data-stu-id="9554d-181">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="9554d-182">O comportamento personalizado fornecido neste exemplo é um evento de notificação chamado `Changed`, gerado ao final de cada um dos métodos substituídos.</span><span class="sxs-lookup"><span data-stu-id="9554d-182">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="9554d-183">O exemplo de código usa o <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> construtor com um limite de 0, para que o dicionário interno é criado na primeira vez que um objeto é adicionado à coleção.</span><span class="sxs-lookup"><span data-stu-id="9554d-183">The code example uses the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> constructor with a threshold of 0, so that the internal dictionary is created the first time an object is added to the collection.</span></span>  
  
 <span data-ttu-id="9554d-184">O exemplo de código cria a classe `SimpleOrder`, que deriva do <xref:System.Collections.ObjectModel.KeyedCollection%602> e representa um formulário de pedido simples.</span><span class="sxs-lookup"><span data-stu-id="9554d-184">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="9554d-185">O formulário do pedido contém objetos `OrderItem` representando itens ordenados.</span><span class="sxs-lookup"><span data-stu-id="9554d-185">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="9554d-186">O exemplo de código também cria uma classe `SimpleOrderChangedEventArgs` para conter informações do evento, e uma enumeração para identificar o tipo de alteração.</span><span class="sxs-lookup"><span data-stu-id="9554d-186">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="9554d-187">O exemplo de código demonstra o comportamento personalizado chamando as propriedades e os métodos da classe derivada, no método `Main` da classe `Demo`.</span><span class="sxs-lookup"><span data-stu-id="9554d-187">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="9554d-188">Este exemplo de código usa objetos com chaves imutáveis.</span><span class="sxs-lookup"><span data-stu-id="9554d-188">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="9554d-189">Para um exemplo de código que usa chaves mutáveis, consulte <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="9554d-189">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9554d-190"><paramref name="dictionaryCreationThreshold" /> é menor que -1.</span><span class="sxs-lookup"><span data-stu-id="9554d-190"><paramref name="dictionaryCreationThreshold" /> is less than -1.</span></span></exception>
        <altmember cref="T:System.Collections.Generic.IEqualityComparer`1" />
      </Docs>
    </Member>
    <Member MemberName="ChangeItemKey">
      <MemberSignature Language="C#" Value="protected void ChangeItemKey (TItem item, TKey newKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ChangeItemKey(!TItem item, !TKey newKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ChangeItemKey (item As TItem, newKey As TKey)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ChangeItemKey(TItem item, TKey newKey);" />
      <MemberSignature Language="F#" Value="member this.ChangeItemKey : 'Item * 'Key -&gt; unit" Usage="keyedCollection.ChangeItemKey (item, newKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="TItem" />
        <Parameter Name="newKey" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="9554d-191">O elemento do qual alterar a chave.</span><span class="sxs-lookup"><span data-stu-id="9554d-191">The element to change the key of.</span></span></param>
        <param name="newKey"><span data-ttu-id="9554d-192">A nova chave para <paramref name="item" />.</span><span class="sxs-lookup"><span data-stu-id="9554d-192">The new key for <paramref name="item" />.</span></span></param>
        <summary><span data-ttu-id="9554d-193">Altera a chave associada ao elemento especificado no dicionário de pesquisa.</span><span class="sxs-lookup"><span data-stu-id="9554d-193">Changes the key associated with the specified element in the lookup dictionary.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9554d-194">Esse método não modifica a chave inserida na `item`; ele simplesmente substitui a chave salva no dicionário de pesquisa.</span><span class="sxs-lookup"><span data-stu-id="9554d-194">This method does not modify the key embedded in `item`; it simply replaces the key saved in the lookup dictionary.</span></span>  <span data-ttu-id="9554d-195">Portanto, se `newKey` é diferente da chave que é inserido na `item`, você não pode acessar `item` usando a chave retornada pela <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>.</span><span class="sxs-lookup"><span data-stu-id="9554d-195">Therefore, if `newKey` is different from the key that is embedded in `item`, you cannot access `item` by using the key returned by <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>.</span></span>  
  
 <span data-ttu-id="9554d-196">Esse método não fará nada se o <xref:System.Collections.ObjectModel.KeyedCollection%602> não tem um dicionário de pesquisa.</span><span class="sxs-lookup"><span data-stu-id="9554d-196">This method does nothing if the <xref:System.Collections.ObjectModel.KeyedCollection%602> does not have a lookup dictionary.</span></span>  
  
 <span data-ttu-id="9554d-197">Todas as chaves em um <xref:System.Collections.ObjectModel.KeyedCollection%602> deve ser exclusivo.</span><span class="sxs-lookup"><span data-stu-id="9554d-197">Every key in a <xref:System.Collections.ObjectModel.KeyedCollection%602> must be unique.</span></span> <span data-ttu-id="9554d-198">Uma chave não pode ser `null`.</span><span class="sxs-lookup"><span data-stu-id="9554d-198">A key cannot be `null`.</span></span>  
  
 <span data-ttu-id="9554d-199">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="9554d-199">This method is an O(1) operation.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="9554d-200">Observações para implementadores</span><span class="sxs-lookup"><span data-stu-id="9554d-200">Notes for Implementers</span></span>  
 <span data-ttu-id="9554d-201">Antes de modificar a chave inserida em um item, você deve chamar esse método para atualizar a chave no dicionário de pesquisa.</span><span class="sxs-lookup"><span data-stu-id="9554d-201">Before modifying the key embedded in an item, you must call this method to update the key in the lookup dictionary.</span></span> <span data-ttu-id="9554d-202">Se o limite de criação de dicionário for -1, chamar este método não é necessário.</span><span class="sxs-lookup"><span data-stu-id="9554d-202">If the dictionary creation threshold is -1, calling this method is not necessary.</span></span>  
  
 <span data-ttu-id="9554d-203">Não exponha o <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> método como um método público de uma classe derivada.</span><span class="sxs-lookup"><span data-stu-id="9554d-203">Do not expose the <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method as a public method of a derived class.</span></span> <span data-ttu-id="9554d-204">Uso incorreto desse método coloca o dicionário de pesquisa fora de sincronia com as chaves do item.</span><span class="sxs-lookup"><span data-stu-id="9554d-204">Misuse of this method puts the lookup dictionary out of sync with item keys.</span></span> <span data-ttu-id="9554d-205">Por exemplo, definindo a chave `null` e, em seguida, defini-la a outro valor adiciona várias chaves para um item ao dicionário de pesquisa.</span><span class="sxs-lookup"><span data-stu-id="9554d-205">For example, setting the key to `null` and then setting it to another value adds multiple keys for an item to the lookup dictionary.</span></span> <span data-ttu-id="9554d-206">Expor esse método internamente para permitir chaves mutáveis itens: Quando a chave para um item é alterado, esse método é usado para alterar a chave no dicionário de pesquisa.</span><span class="sxs-lookup"><span data-stu-id="9554d-206">Expose this method internally to allow mutable item keys: When the key for an item changes, this method is used to change the key in the lookup dictionary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9554d-207">O exemplo de código a seguir mostra como substituir o método <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> protegido para dar suporte a chaves mutáveis e como substituir os métodos <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A> e <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> protegidos para manter a integridade das chaves e da coleção.</span><span class="sxs-lookup"><span data-stu-id="9554d-207">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="9554d-208">O exemplo de código cria a coleção `MutableKeys`, que deriva do <xref:System.Collections.ObjectModel.KeyedCollection%602>, e a classe `MutableKey`.</span><span class="sxs-lookup"><span data-stu-id="9554d-208">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="9554d-209">A classe `MutableKey` tem uma propriedade `Key` definível.</span><span class="sxs-lookup"><span data-stu-id="9554d-209">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="9554d-210">Quando uma nova chave é atribuída à propriedade, o setter da propriedade chama o método `internal` (`Friend` no Visual Basic) `ChangeKey` da coleção para testar se a nova chave entraria em conflito com uma chave existente.</span><span class="sxs-lookup"><span data-stu-id="9554d-210">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="9554d-211">Em caso afirmativo, uma exceção é gerada e o valor da propriedade não é alterado.</span><span class="sxs-lookup"><span data-stu-id="9554d-211">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="9554d-212">Para manter a conexão entre um objeto `MutableKey` e a coleção `MutableKeys` e evitar que um objeto seja inserido em duas coleções, a classe `MutableKey` tem um campo `internal` (`Friend` no Visual Basic) `Collection`.</span><span class="sxs-lookup"><span data-stu-id="9554d-212">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="9554d-213">Este campo é mantido pelos métodos protegidos que fornecem o comportamento personalizado para adicionar e remover itens da coleção, como o método <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>.</span><span class="sxs-lookup"><span data-stu-id="9554d-213">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="9554d-214">O campo é definido quando o item é adicionado a uma coleção e desmarcado quando o item é removido.</span><span class="sxs-lookup"><span data-stu-id="9554d-214">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9554d-215"><paramref name="item" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9554d-215"><paramref name="item" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="9554d-216">- ou -</span><span class="sxs-lookup"><span data-stu-id="9554d-216">-or-</span></span> 
 <span data-ttu-id="9554d-217"><paramref name="key" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9554d-217"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9554d-218"><paramref name="item" /> não foi encontrado.</span><span class="sxs-lookup"><span data-stu-id="9554d-218"><paramref name="item" /> is not found.</span></span>  
  
<span data-ttu-id="9554d-219">- ou -</span><span class="sxs-lookup"><span data-stu-id="9554d-219">-or-</span></span> 
 <span data-ttu-id="9554d-220">A <paramref name="key" /> já existe em <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span><span class="sxs-lookup"><span data-stu-id="9554d-220"><paramref name="key" /> already exists in the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span></span></exception>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)" />
        <altmember cref="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)" />
      </Docs>
    </Member>
    <Member MemberName="ClearItems">
      <MemberSignature Language="C#" Value="protected override void ClearItems ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ClearItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ClearItems ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ClearItems();" />
      <MemberSignature Language="F#" Value="override this.ClearItems : unit -&gt; unit" Usage="keyedCollection.ClearItems " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9554d-221">Remove todos os elementos do <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span><span class="sxs-lookup"><span data-stu-id="9554d-221">Removes all elements from the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9554d-222">Se houver um dicionário de pesquisa, esse método limpa-lo, mas não excluí-la.</span><span class="sxs-lookup"><span data-stu-id="9554d-222">If there is a lookup dictionary, this method clears it but does not delete it.</span></span>  
  
 <span data-ttu-id="9554d-223">Se o número de elementos excedeu o limite de criação de dicionário e o <xref:System.Collections.ObjectModel.KeyedCollection%602> está usando um dicionário de pesquisa, ele continuará a usar um dicionário de pesquisa, mesmo que o número de elementos novamente está abaixo do limite.</span><span class="sxs-lookup"><span data-stu-id="9554d-223">If the number of elements has exceeded the dictionary creation threshold and the <xref:System.Collections.ObjectModel.KeyedCollection%602> is using a lookup dictionary, it will continue to use a lookup dictionary even though the number of elements is again under the threshold.</span></span>  
  
 <span data-ttu-id="9554d-224">Este método é uma operação O(`n`), em que `n` é <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="9554d-224">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="9554d-225">Observações para implementadores</span><span class="sxs-lookup"><span data-stu-id="9554d-225">Notes for Implementers</span></span>  
 <span data-ttu-id="9554d-226">Substitua este método para fornecer um comportamento personalizado para o <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> método, herdado do <xref:System.Collections.ObjectModel.Collection%601> classe genérica.</span><span class="sxs-lookup"><span data-stu-id="9554d-226">Override this method to provide customized behavior for the <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> method, inherited from the <xref:System.Collections.ObjectModel.Collection%601> generic class.</span></span>  
  
 <span data-ttu-id="9554d-227">Chame a implementação de classe base desse método para limpar a coleção subjacente e para limpar o dicionário de pesquisa.</span><span class="sxs-lookup"><span data-stu-id="9554d-227">Call the base class implementation of this method to clear the underlying collection and to clear the lookup dictionary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9554d-228">Esta seção contém dois exemplos de código que demonstram substituindo o <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A> método para fornecer um comportamento personalizado para limpar todos os objetos da coleção.</span><span class="sxs-lookup"><span data-stu-id="9554d-228">This section contains two code examples that demonstrate overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A> method to provide custom behavior for clearing all objects from the collection.</span></span> <span data-ttu-id="9554d-229">O primeiro exemplo adiciona um evento de notificação personalizado e o segundo dá suporte para uma coleção de objetos com chaves mutáveis.</span><span class="sxs-lookup"><span data-stu-id="9554d-229">The first example adds a custom notification event and the second provides support for a collection of objects with mutable keys.</span></span>  
  
 <span data-ttu-id="9554d-230">Exemplo 1</span><span class="sxs-lookup"><span data-stu-id="9554d-230">Example 1</span></span>  
  
 <span data-ttu-id="9554d-231">O exemplo de código a seguir mostra como substituir os métodos <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> e <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> protegidos para fornecer um comportamento personalizado para os métodos <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A> e <xref:System.Collections.ObjectModel.Collection%601.Clear%2A>, além de definir a propriedade <xref:System.Collections.ObjectModel.Collection%601.Item%2A> padrão (o indexador em C#).</span><span class="sxs-lookup"><span data-stu-id="9554d-231">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="9554d-232">O comportamento personalizado fornecido neste exemplo é um evento de notificação chamado `Changed`, gerado ao final de cada um dos métodos substituídos.</span><span class="sxs-lookup"><span data-stu-id="9554d-232">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="9554d-233">O exemplo de código cria a classe `SimpleOrder`, que deriva do <xref:System.Collections.ObjectModel.KeyedCollection%602> e representa um formulário de pedido simples.</span><span class="sxs-lookup"><span data-stu-id="9554d-233">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="9554d-234">O formulário do pedido contém objetos `OrderItem` representando itens ordenados.</span><span class="sxs-lookup"><span data-stu-id="9554d-234">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="9554d-235">O exemplo de código também cria uma classe `SimpleOrderChangedEventArgs` para conter informações do evento, e uma enumeração para identificar o tipo de alteração.</span><span class="sxs-lookup"><span data-stu-id="9554d-235">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="9554d-236">O exemplo de código demonstra o comportamento personalizado chamando as propriedades e os métodos da classe derivada, no método `Main` da classe `Demo`.</span><span class="sxs-lookup"><span data-stu-id="9554d-236">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="9554d-237">Este exemplo de código usa objetos com chaves imutáveis.</span><span class="sxs-lookup"><span data-stu-id="9554d-237">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="9554d-238">Para um exemplo de código que usa chaves mutáveis, consulte <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="9554d-238">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 <span data-ttu-id="9554d-239">Exemplo 2</span><span class="sxs-lookup"><span data-stu-id="9554d-239">Example 2</span></span>  
  
 <span data-ttu-id="9554d-240">O exemplo de código a seguir mostra como substituir o método <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> protegido para dar suporte a chaves mutáveis e como substituir os métodos <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A> e <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> protegidos para manter a integridade das chaves e da coleção.</span><span class="sxs-lookup"><span data-stu-id="9554d-240">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="9554d-241">O exemplo de código cria a coleção `MutableKeys`, que deriva do <xref:System.Collections.ObjectModel.KeyedCollection%602>, e a classe `MutableKey`.</span><span class="sxs-lookup"><span data-stu-id="9554d-241">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="9554d-242">A classe `MutableKey` tem uma propriedade `Key` definível.</span><span class="sxs-lookup"><span data-stu-id="9554d-242">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="9554d-243">Quando uma nova chave é atribuída à propriedade, o setter da propriedade chama o método `internal` (`Friend` no Visual Basic) `ChangeKey` da coleção para testar se a nova chave entraria em conflito com uma chave existente.</span><span class="sxs-lookup"><span data-stu-id="9554d-243">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="9554d-244">Em caso afirmativo, uma exceção é gerada e o valor da propriedade não é alterado.</span><span class="sxs-lookup"><span data-stu-id="9554d-244">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="9554d-245">Para manter a conexão entre um objeto `MutableKey` e a coleção `MutableKeys` e evitar que um objeto seja inserido em duas coleções, a classe `MutableKey` tem um campo `internal` (`Friend` no Visual Basic) `Collection`.</span><span class="sxs-lookup"><span data-stu-id="9554d-245">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="9554d-246">Este campo é mantido pelos métodos protegidos que fornecem o comportamento personalizado para adicionar e remover itens da coleção, como o método <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>.</span><span class="sxs-lookup"><span data-stu-id="9554d-246">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="9554d-247">O campo é definido quando o item é adicionado a uma coleção e desmarcado quando o item é removido.</span><span class="sxs-lookup"><span data-stu-id="9554d-247">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)" />
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Comparer">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEqualityComparer&lt;TKey&gt; Comparer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; Comparer" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.KeyedCollection`2.Comparer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Comparer As IEqualityComparer(Of TKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ Comparer { System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Comparer : System.Collections.Generic.IEqualityComparer&lt;'Key&gt;" Usage="System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt;.Comparer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEqualityComparer&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9554d-248">Obtém o comparador de igualdade genérico que é usado para determinar a igualdade de chaves na coleção.</span><span class="sxs-lookup"><span data-stu-id="9554d-248">Gets the generic equality comparer that is used to determine equality of keys in the collection.</span></span></summary>
        <value><span data-ttu-id="9554d-249">A implementação do <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> interface genérica que é usado para determinar a igualdade de chaves na coleção.</span><span class="sxs-lookup"><span data-stu-id="9554d-249">The implementation of the <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> generic interface that is used to determine equality of keys in the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9554d-250">A recuperação do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="9554d-250">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (key As TKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(TKey key);" />
      <MemberSignature Language="F#" Value="override this.Contains : 'Key -&gt; bool" Usage="keyedCollection.Contains key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="9554d-251">A chave a ser localizada no <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span><span class="sxs-lookup"><span data-stu-id="9554d-251">The key to locate in the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span></span></param>
        <summary><span data-ttu-id="9554d-252">Determina se a coleção contém um elemento com a chave especificada.</span><span class="sxs-lookup"><span data-stu-id="9554d-252">Determines whether the collection contains an element with the specified key.</span></span></summary>
        <returns><span data-ttu-id="9554d-253"><see langword="true" /> se o <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> contiver um elemento com a chave especificada; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9554d-253"><see langword="true" /> if the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> contains an element with the specified key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9554d-254">Se o <xref:System.Collections.ObjectModel.KeyedCollection%602> tem um dicionário de pesquisa, `key` é usado para pesquisar o dicionário.</span><span class="sxs-lookup"><span data-stu-id="9554d-254">If the <xref:System.Collections.ObjectModel.KeyedCollection%602> has a lookup dictionary, `key` is used to search the dictionary.</span></span> <span data-ttu-id="9554d-255">Se não houver nenhum dicionário de pesquisa, a chave de cada elemento é extraída usando o <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> método e, em comparação com a chave especificada.</span><span class="sxs-lookup"><span data-stu-id="9554d-255">If there is no lookup dictionary, the key of each element is extracted using the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and compared with the specified key.</span></span>  
  
 <span data-ttu-id="9554d-256">Esse método é uma operação de (1) se o <xref:System.Collections.ObjectModel.KeyedCollection%602> tem um dicionário de pesquisa; caso contrário, ele é um O (`n`) a operação, onde `n` é <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="9554d-256">This method is an O(1) operation if the <xref:System.Collections.ObjectModel.KeyedCollection%602> has a lookup dictionary; otherwise it is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9554d-257">Este exemplo de código mostra o código mínimo necessário a ser derivado de uma classe de coleção de <xref:System.Collections.ObjectModel.KeyedCollection%602>: substituindo o método <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> e fornecendo um construtor público que representa um construtor de classe base.</span><span class="sxs-lookup"><span data-stu-id="9554d-257">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="9554d-258">O exemplo de código também demonstra muitas das propriedades e dos métodos herdados das classes <xref:System.Collections.ObjectModel.KeyedCollection%602> e <xref:System.Collections.ObjectModel.Collection%601>.</span><span class="sxs-lookup"><span data-stu-id="9554d-258">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="9554d-259">A classe `SimpleOrder` é uma lista muito simples de requisição que contém objetos `OrderItem`, cada um representando um item de linha na ordem.</span><span class="sxs-lookup"><span data-stu-id="9554d-259">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="9554d-260">A chave de `OrderItem` é imutável, uma consideração importante para classes que derivam de <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="9554d-260">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="9554d-261">Para um exemplo de código que usa chaves mutáveis, consulte <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="9554d-261">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9554d-262"><paramref name="key" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9554d-262"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)" />
      </Docs>
    </Member>
    <Member MemberName="Dictionary">
      <MemberSignature Language="C#" Value="protected System.Collections.Generic.IDictionary&lt;TKey,TItem&gt; Dictionary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;!TKey, !TItem&gt; Dictionary" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.KeyedCollection`2.Dictionary" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Dictionary As IDictionary(Of TKey, TItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Generic::IDictionary&lt;TKey, TItem&gt; ^ Dictionary { System::Collections::Generic::IDictionary&lt;TKey, TItem&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Dictionary : System.Collections.Generic.IDictionary&lt;'Key, 'Item&gt;" Usage="System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt;.Dictionary" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;TKey,TItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9554d-263">Obtém o dicionário de pesquisa do <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span><span class="sxs-lookup"><span data-stu-id="9554d-263">Gets the lookup dictionary of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span></span></summary>
        <value><span data-ttu-id="9554d-264">O dicionário de pesquisa do <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />, se existir; caso contrário, <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9554d-264">The lookup dictionary of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />, if it exists; otherwise, <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9554d-265">Por padrão, <xref:System.Collections.ObjectModel.KeyedCollection%602> inclui um dicionário de pesquisa, criado quando o primeiro item é adicionado.</span><span class="sxs-lookup"><span data-stu-id="9554d-265">By default, the <xref:System.Collections.ObjectModel.KeyedCollection%602> includes a lookup dictionary that is created when the first item is added.</span></span> <span data-ttu-id="9554d-266">Quando um item é adicionado ao <xref:System.Collections.ObjectModel.KeyedCollection%602>, a chave do item será extraída uma vez e salva no dicionário de pesquisa para pesquisas mais rápidas.</span><span class="sxs-lookup"><span data-stu-id="9554d-266">When an item is added to the <xref:System.Collections.ObjectModel.KeyedCollection%602>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</span></span> <span data-ttu-id="9554d-267">Esse comportamento pode ser substituído usando o <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> construtor e especificando um limite de criação do dicionário.</span><span class="sxs-lookup"><span data-stu-id="9554d-267">This behavior can be overridden by using the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> constructor and specifying a dictionary creation threshold.</span></span>  
  
 <span data-ttu-id="9554d-268">A recuperação do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="9554d-268">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9554d-269">O exemplo de código a seguir mostra como substituir o método <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> protegido para dar suporte a chaves mutáveis e como substituir os métodos <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A> e <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> protegidos para manter a integridade das chaves e da coleção.</span><span class="sxs-lookup"><span data-stu-id="9554d-269">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="9554d-270">O exemplo de código cria a coleção `MutableKeys`, que deriva do <xref:System.Collections.ObjectModel.KeyedCollection%602>, e a classe `MutableKey`.</span><span class="sxs-lookup"><span data-stu-id="9554d-270">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="9554d-271">A classe `MutableKey` tem uma propriedade `Key` definível.</span><span class="sxs-lookup"><span data-stu-id="9554d-271">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="9554d-272">Quando uma nova chave é atribuída à propriedade, o setter da propriedade chama o método `internal` (`Friend` no Visual Basic) `ChangeKey` da coleção para testar se a nova chave entraria em conflito com uma chave existente.</span><span class="sxs-lookup"><span data-stu-id="9554d-272">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="9554d-273">Em caso afirmativo, uma exceção é gerada e o valor da propriedade não é alterado.</span><span class="sxs-lookup"><span data-stu-id="9554d-273">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="9554d-274">Para manter a conexão entre um objeto `MutableKey` e a coleção `MutableKeys` e evitar que um objeto seja inserido em duas coleções, a classe `MutableKey` tem um campo `internal` (`Friend` no Visual Basic) `Collection`.</span><span class="sxs-lookup"><span data-stu-id="9554d-274">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="9554d-275">Este campo é mantido pelos métodos protegidos que fornecem o comportamento personalizado para adicionar e remover itens da coleção, como o método <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>.</span><span class="sxs-lookup"><span data-stu-id="9554d-275">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="9554d-276">O campo é definido quando o item é adicionado a uma coleção e desmarcado quando o item é removido.</span><span class="sxs-lookup"><span data-stu-id="9554d-276">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IDictionary`2" />
      </Docs>
    </Member>
    <Member MemberName="GetKeyForItem">
      <MemberSignature Language="C#" Value="protected abstract TKey GetKeyForItem (TItem item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance !TKey GetKeyForItem(!TItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetKeyForItem (item As TItem) As TKey" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract TKey GetKeyForItem(TItem item);" />
      <MemberSignature Language="F#" Value="abstract member GetKeyForItem : 'Item -&gt; 'Key" Usage="keyedCollection.GetKeyForItem item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="TItem" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="9554d-277">O elemento do qual a chave será extraída.</span><span class="sxs-lookup"><span data-stu-id="9554d-277">The element from which to extract the key.</span></span></param>
        <summary><span data-ttu-id="9554d-278">Quando implementado em uma classe derivada, extrai a chave do elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="9554d-278">When implemented in a derived class, extracts the key from the specified element.</span></span></summary>
        <returns><span data-ttu-id="9554d-279">A chave do elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="9554d-279">The key for the specified element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9554d-280">Se a chave no dicionário de pesquisa é diferente da chave que é inserido na `item`, você não pode acessar `item` usando a chave retornada pela <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>.</span><span class="sxs-lookup"><span data-stu-id="9554d-280">If the key in the lookup dictionary is different from the key that is embedded in `item`, you cannot access `item` by using the key returned by <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>.</span></span>  
  
 <span data-ttu-id="9554d-281">Você pode implementar esse método para retornar `null` para uma coleção que contém itens sem chaves, caso em que os itens podem ser acessados somente por seu índice.</span><span class="sxs-lookup"><span data-stu-id="9554d-281">You can implement this method to return `null` for a collection that contains items without keys, in which case the items can be accessed only by their index.</span></span> <span data-ttu-id="9554d-282">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="9554d-282">This method is an O(1) operation.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="9554d-283">Observações para implementadores</span><span class="sxs-lookup"><span data-stu-id="9554d-283">Notes for Implementers</span></span>  
 <span data-ttu-id="9554d-284">Você deve substituir esse método para fornecer o dicionário com uma forma de extrair as chaves de itens no dicionário.</span><span class="sxs-lookup"><span data-stu-id="9554d-284">You must override this method to provide the dictionary with a way to extract keys from items in the dictionary.</span></span>  
  
 <span data-ttu-id="9554d-285">Esse método é chamado internamente.</span><span class="sxs-lookup"><span data-stu-id="9554d-285">This method is called internally.</span></span> <span data-ttu-id="9554d-286">Não é necessário para que ele seja pública.</span><span class="sxs-lookup"><span data-stu-id="9554d-286">It is not necessary for it to be public.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9554d-287">Este exemplo de código mostra o código mínimo necessário a ser derivado de uma classe de coleção de <xref:System.Collections.ObjectModel.KeyedCollection%602>: substituindo o método <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> e fornecendo um construtor público que representa um construtor de classe base.</span><span class="sxs-lookup"><span data-stu-id="9554d-287">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="9554d-288">O exemplo de código também demonstra muitas das propriedades e dos métodos herdados das classes <xref:System.Collections.ObjectModel.KeyedCollection%602> e <xref:System.Collections.ObjectModel.Collection%601>.</span><span class="sxs-lookup"><span data-stu-id="9554d-288">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="9554d-289">A classe `SimpleOrder` é uma lista muito simples de requisição que contém objetos `OrderItem`, cada um representando um item de linha na ordem.</span><span class="sxs-lookup"><span data-stu-id="9554d-289">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="9554d-290">A chave de `OrderItem` é imutável, uma consideração importante para classes que derivam de <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="9554d-290">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="9554d-291">Para um exemplo de código que usa chaves mutáveis, consulte <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="9554d-291">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)" />
        <altmember cref="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)" />
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="protected override void InsertItem (int index, TItem item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InsertItem(int32 index, !TItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InsertItem (index As Integer, item As TItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InsertItem(int index, TItem item);" />
      <MemberSignature Language="F#" Value="override this.InsertItem : int * 'Item -&gt; unit" Usage="keyedCollection.InsertItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="TItem" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="9554d-292">O índice de base zero no qual o <paramref name="item" /> deve ser inserido.</span><span class="sxs-lookup"><span data-stu-id="9554d-292">The zero-based index at which <paramref name="item" /> should be inserted.</span></span></param>
        <param name="item"><span data-ttu-id="9554d-293">O objeto a ser inserido.</span><span class="sxs-lookup"><span data-stu-id="9554d-293">The object to insert.</span></span></param>
        <summary><span data-ttu-id="9554d-294">Insere um elemento no <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />, no índice especificado.</span><span class="sxs-lookup"><span data-stu-id="9554d-294">Inserts an element into the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9554d-295">Se `index` é igual a <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, `item` é adicionado ao final do <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="9554d-295">If `index` is equal to <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, `item` is added to the end of the <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span>  
  
 <span data-ttu-id="9554d-296">Este método é uma operação O(`n`), em que `n` é <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="9554d-296">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
 <span data-ttu-id="9554d-297"><xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> é chamado pelo <xref:System.Collections.ObjectModel.Collection%601.Add%2A> e <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="9554d-297"><xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> is called by the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> and <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> methods.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="9554d-298">Observações para implementadores</span><span class="sxs-lookup"><span data-stu-id="9554d-298">Notes for Implementers</span></span>  
 <span data-ttu-id="9554d-299">Substitua este método para fornecer um comportamento personalizado para o <xref:System.Collections.ObjectModel.Collection%601.Add%2A> e <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> métodos, herdados da <xref:System.Collections.ObjectModel.Collection%601> classe genérica.</span><span class="sxs-lookup"><span data-stu-id="9554d-299">Override this method to provide customized behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> and <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> methods, inherited from the <xref:System.Collections.ObjectModel.Collection%601> generic class.</span></span>  
  
 <span data-ttu-id="9554d-300">Chame a implementação de classe base desse método para inserir o item na coleção subjacente e atualizar o dicionário de pesquisa.</span><span class="sxs-lookup"><span data-stu-id="9554d-300">Call the base class implementation of this method to insert the item into the underlying collection and to update the lookup dictionary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9554d-301">Esta seção contém dois exemplos de código que demonstram substituindo o <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> método para fornecer um comportamento personalizado para adicionar ou inserir objetos na coleção.</span><span class="sxs-lookup"><span data-stu-id="9554d-301">This section contains two code examples that demonstrate overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method to provide custom behavior for adding or inserting objects into the collection.</span></span> <span data-ttu-id="9554d-302">O primeiro exemplo adiciona um evento de notificação personalizado e o segundo dá suporte para uma coleção de objetos com chaves mutáveis.</span><span class="sxs-lookup"><span data-stu-id="9554d-302">The first example adds a custom notification event and the second provides support for a collection of objects with mutable keys.</span></span>  
  
 <span data-ttu-id="9554d-303">Exemplo 1</span><span class="sxs-lookup"><span data-stu-id="9554d-303">Example 1</span></span>  
  
 <span data-ttu-id="9554d-304">O exemplo de código a seguir mostra como substituir os métodos <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> e <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> protegidos para fornecer um comportamento personalizado para os métodos <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A> e <xref:System.Collections.ObjectModel.Collection%601.Clear%2A>, além de definir a propriedade <xref:System.Collections.ObjectModel.Collection%601.Item%2A> padrão (o indexador em C#).</span><span class="sxs-lookup"><span data-stu-id="9554d-304">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="9554d-305">O comportamento personalizado fornecido neste exemplo é um evento de notificação chamado `Changed`, gerado ao final de cada um dos métodos substituídos.</span><span class="sxs-lookup"><span data-stu-id="9554d-305">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="9554d-306">O exemplo de código cria a classe `SimpleOrder`, que deriva do <xref:System.Collections.ObjectModel.KeyedCollection%602> e representa um formulário de pedido simples.</span><span class="sxs-lookup"><span data-stu-id="9554d-306">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="9554d-307">O formulário do pedido contém objetos `OrderItem` representando itens ordenados.</span><span class="sxs-lookup"><span data-stu-id="9554d-307">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="9554d-308">O exemplo de código também cria uma classe `SimpleOrderChangedEventArgs` para conter informações do evento, e uma enumeração para identificar o tipo de alteração.</span><span class="sxs-lookup"><span data-stu-id="9554d-308">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="9554d-309">O exemplo de código demonstra o comportamento personalizado chamando as propriedades e os métodos da classe derivada, no método `Main` da classe `Demo`.</span><span class="sxs-lookup"><span data-stu-id="9554d-309">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="9554d-310">Este exemplo de código usa objetos com chaves imutáveis.</span><span class="sxs-lookup"><span data-stu-id="9554d-310">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="9554d-311">Para um exemplo de código que usa chaves mutáveis, consulte <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="9554d-311">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 <span data-ttu-id="9554d-312">Exemplo 2</span><span class="sxs-lookup"><span data-stu-id="9554d-312">Example 2</span></span>  
  
 <span data-ttu-id="9554d-313">O exemplo de código a seguir mostra como substituir o método <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> protegido para dar suporte a chaves mutáveis e como substituir os métodos <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A> e <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> protegidos para manter a integridade das chaves e da coleção.</span><span class="sxs-lookup"><span data-stu-id="9554d-313">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="9554d-314">O exemplo de código cria a coleção `MutableKeys`, que deriva do <xref:System.Collections.ObjectModel.KeyedCollection%602>, e a classe `MutableKey`.</span><span class="sxs-lookup"><span data-stu-id="9554d-314">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="9554d-315">A classe `MutableKey` tem uma propriedade `Key` definível.</span><span class="sxs-lookup"><span data-stu-id="9554d-315">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="9554d-316">Quando uma nova chave é atribuída à propriedade, o setter da propriedade chama o método `internal` (`Friend` no Visual Basic) `ChangeKey` da coleção para testar se a nova chave entraria em conflito com uma chave existente.</span><span class="sxs-lookup"><span data-stu-id="9554d-316">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="9554d-317">Em caso afirmativo, uma exceção é gerada e o valor da propriedade não é alterado.</span><span class="sxs-lookup"><span data-stu-id="9554d-317">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="9554d-318">Para manter a conexão entre um objeto `MutableKey` e a coleção `MutableKeys` e evitar que um objeto seja inserido em duas coleções, a classe `MutableKey` tem um campo `internal` (`Friend` no Visual Basic) `Collection`.</span><span class="sxs-lookup"><span data-stu-id="9554d-318">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="9554d-319">Este campo é mantido pelos métodos protegidos que fornecem o comportamento personalizado para adicionar e remover itens da coleção, como o método <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>.</span><span class="sxs-lookup"><span data-stu-id="9554d-319">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="9554d-320">O campo é definido quando o item é adicionado a uma coleção e desmarcado quando o item é removido.</span><span class="sxs-lookup"><span data-stu-id="9554d-320">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9554d-321"><paramref name="index" /> é menor que 0.</span><span class="sxs-lookup"><span data-stu-id="9554d-321"><paramref name="index" /> is less than 0.</span></span>  
  
<span data-ttu-id="9554d-322">- ou -</span><span class="sxs-lookup"><span data-stu-id="9554d-322">-or-</span></span> 
 <span data-ttu-id="9554d-323"><paramref name="index" /> é maior que <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</span><span class="sxs-lookup"><span data-stu-id="9554d-323"><paramref name="index" /> is greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</span></span></exception>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public TItem this[TKey key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TItem Item(!TKey)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(key As TKey) As TItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TItem default[TKey] { TItem get(TKey key); };" />
      <MemberSignature Language="F#" Value="member this.Item('Key) : 'Item" Usage="System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt;.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="9554d-324">A chave do elemento a obter.</span><span class="sxs-lookup"><span data-stu-id="9554d-324">The key of the element to get.</span></span></param>
        <summary><span data-ttu-id="9554d-325">Obtém o elemento com a chave especificada.</span><span class="sxs-lookup"><span data-stu-id="9554d-325">Gets the element with the specified key.</span></span></summary>
        <value><span data-ttu-id="9554d-326">O elemento com a chave especificada.</span><span class="sxs-lookup"><span data-stu-id="9554d-326">The element with the specified key.</span></span> <span data-ttu-id="9554d-327">Se um elemento com a chave especificada não for encontrado, uma exceção será lançada.</span><span class="sxs-lookup"><span data-stu-id="9554d-327">If an element with the specified key is not found, an exception is thrown.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9554d-328">Esta propriedade fornece a capacidade de acessar um elemento específico na coleção usando a sintaxe a seguir: `myCollection[key]` (`myCollection(key)` no Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="9554d-328">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[key]` (`myCollection(key)` in Visual Basic).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9554d-329">Essa propriedade é diferente de herdadas <xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType> propriedade, que obtém e define os elementos pelo índice numérico.</span><span class="sxs-lookup"><span data-stu-id="9554d-329">This property is distinct from the inherited <xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType> property, which gets and sets elements by numeric index.</span></span> <span data-ttu-id="9554d-330">No entanto, se `TKey` é do tipo <xref:System.Int32>, esta propriedade mascara a propriedade herdada.</span><span class="sxs-lookup"><span data-stu-id="9554d-330">However, if `TKey` is of type <xref:System.Int32>, this property masks the inherited property.</span></span> <span data-ttu-id="9554d-331">Nesse caso, você pode acessar a propriedade herdada convertendo o <xref:System.Collections.ObjectModel.KeyedCollection%602> ao seu tipo base.</span><span class="sxs-lookup"><span data-stu-id="9554d-331">In that case, you can access the inherited property by casting the <xref:System.Collections.ObjectModel.KeyedCollection%602> to its base type.</span></span> <span data-ttu-id="9554d-332">Por exemplo, `KeyedCollection<int, MyType>` (`KeyedCollection(Of Integer, MyType)` no Visual Basic `KeyedCollection<int, MyType^>` em C++) pode ser convertido em `Collection<MyType>` (`Collection(Of MyType)` no Visual Basic, `Collection<MyType^>` em C++).</span><span class="sxs-lookup"><span data-stu-id="9554d-332">For example, `KeyedCollection<int, MyType>` (`KeyedCollection(Of Integer, MyType)` in Visual Basic, `KeyedCollection<int, MyType^>` in C++) can be cast to `Collection<MyType>` (`Collection(Of MyType)` in Visual Basic, `Collection<MyType^>` in C++).</span></span>  
  
 <span data-ttu-id="9554d-333">Se o <xref:System.Collections.ObjectModel.KeyedCollection%602> tem um dicionário de pesquisa, `key` é usado para recuperar o elemento do dicionário.</span><span class="sxs-lookup"><span data-stu-id="9554d-333">If the <xref:System.Collections.ObjectModel.KeyedCollection%602> has a lookup dictionary, `key` is used to retrieve the element from the dictionary.</span></span>  <span data-ttu-id="9554d-334">Se não houver nenhum dicionário de pesquisa, a chave de cada elemento é extraída usando o <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> método e, em comparação com a chave especificada.</span><span class="sxs-lookup"><span data-stu-id="9554d-334">If there is no lookup dictionary, the key of each element is extracted using the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and compared with the specified key.</span></span>  
  
 <span data-ttu-id="9554d-335">A linguagem C# usa a palavra-chave para definir os indexadores em vez de implementar o <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="9554d-335">The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A> property.</span></span> <span data-ttu-id="9554d-336">Visual Basic implementa <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A> como uma propriedade padrão, que fornece a mesma funcionalidade de indexação.</span><span class="sxs-lookup"><span data-stu-id="9554d-336">Visual Basic implements <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="9554d-337">Recuperando o valor dessa propriedade é uma operação de (1) se o <xref:System.Collections.ObjectModel.KeyedCollection%602> tem um dicionário de pesquisa; caso contrário, ele é um O (`n`) a operação, onde `n` é <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="9554d-337">Retrieving the value of this property is an O(1) operation if the <xref:System.Collections.ObjectModel.KeyedCollection%602> has a lookup dictionary; otherwise it is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9554d-338">Este exemplo de código mostra o código mínimo necessário a ser derivado de uma classe de coleção de <xref:System.Collections.ObjectModel.KeyedCollection%602>: substituindo o método <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> e fornecendo um construtor público que representa um construtor de classe base.</span><span class="sxs-lookup"><span data-stu-id="9554d-338">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="9554d-339">O exemplo de código também demonstra muitas das propriedades e dos métodos herdados das classes <xref:System.Collections.ObjectModel.KeyedCollection%602> e <xref:System.Collections.ObjectModel.Collection%601>.</span><span class="sxs-lookup"><span data-stu-id="9554d-339">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="9554d-340">O exemplo de código chama o <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A?displayProperty=nameWithType> propriedade, que é somente leitura e recupera pela chave, e o <xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType> propriedade, que é configurável e recupera pelo índice.</span><span class="sxs-lookup"><span data-stu-id="9554d-340">The code example calls both the <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A?displayProperty=nameWithType> property, which is read-only and retrieves by key, and the <xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType> property, which is settable and retrieves by index.</span></span> <span data-ttu-id="9554d-341">Ele mostra como acessar a última propriedade quando os objetos na coleção derivada têm chaves de inteiro, não podem ser diferenciadas inteiros utilizados para recuperação indexada.</span><span class="sxs-lookup"><span data-stu-id="9554d-341">It shows how to access the latter property when the objects in the derived collection have integer keys, indistinguishable from the integers used for indexed retrieval.</span></span>  
  
 <span data-ttu-id="9554d-342">A classe `SimpleOrder` é uma lista muito simples de requisição que contém objetos `OrderItem`, cada um representando um item de linha na ordem.</span><span class="sxs-lookup"><span data-stu-id="9554d-342">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="9554d-343">A chave de `OrderItem` é imutável, uma consideração importante para classes que derivam de <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="9554d-343">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="9554d-344">Para um exemplo de código que usa chaves mutáveis, consulte <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="9554d-344">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9554d-345"><paramref name="key" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9554d-345"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException"><span data-ttu-id="9554d-346">Um elemento com a chave especificada não existe na coleção.</span><span class="sxs-lookup"><span data-stu-id="9554d-346">An element with the specified key does not exist in the collection.</span></span></exception>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Remove(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (key As TKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove(TKey key);" />
      <MemberSignature Language="F#" Value="override this.Remove : 'Key -&gt; bool" Usage="keyedCollection.Remove key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="9554d-347">A chave do elemento a ser removido.</span><span class="sxs-lookup"><span data-stu-id="9554d-347">The key of the element to remove.</span></span></param>
        <summary><span data-ttu-id="9554d-348">Remove o elemento com a chave especificada do <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span><span class="sxs-lookup"><span data-stu-id="9554d-348">Removes the element with the specified key from the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span></span></summary>
        <returns><span data-ttu-id="9554d-349"><see langword="true" /> se o elemento for removido com êxito; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9554d-349"><see langword="true" /> if the element is successfully removed; otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="9554d-350">Esse método também retornará <see langword="false" />, se <paramref name="key" /> não tiver sido localizado no <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span><span class="sxs-lookup"><span data-stu-id="9554d-350">This method also returns <see langword="false" /> if <paramref name="key" /> is not found in the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9554d-351">A chave do elemento também é removida do dicionário de pesquisa.</span><span class="sxs-lookup"><span data-stu-id="9554d-351">The key of the element is also removed from the lookup dictionary.</span></span>  
  
 <span data-ttu-id="9554d-352">Se o número de elementos excedeu o limite de criação de dicionário e o <xref:System.Collections.ObjectModel.KeyedCollection%602> está usando um dicionário de pesquisa, ele continuará a usar um dicionário de pesquisa, mesmo que o número de elementos novamente está abaixo do limite.</span><span class="sxs-lookup"><span data-stu-id="9554d-352">If the number of elements has exceeded the dictionary creation threshold and the <xref:System.Collections.ObjectModel.KeyedCollection%602> is using a lookup dictionary, it will continue to use a lookup dictionary even though the number of elements is again under the threshold.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9554d-353">Para personalizar o comportamento desse método, substitua o <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> método.</span><span class="sxs-lookup"><span data-stu-id="9554d-353">To customize the behavior of this method, override the <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> method.</span></span>  
  
 <span data-ttu-id="9554d-354">Este método é uma operação O(`n`), em que `n` é <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="9554d-354">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9554d-355">Este exemplo de código mostra o código mínimo necessário a ser derivado de uma classe de coleção de <xref:System.Collections.ObjectModel.KeyedCollection%602>: substituindo o método <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> e fornecendo um construtor público que representa um construtor de classe base.</span><span class="sxs-lookup"><span data-stu-id="9554d-355">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="9554d-356">O exemplo de código também demonstra muitas das propriedades e dos métodos herdados das classes <xref:System.Collections.ObjectModel.KeyedCollection%602> e <xref:System.Collections.ObjectModel.Collection%601>.</span><span class="sxs-lookup"><span data-stu-id="9554d-356">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="9554d-357">O exemplo demonstra <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A> método herdado de <xref:System.Collections.ObjectModel.KeyedCollection%602>, que remove o item com uma chave especificada e também a <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> e <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> métodos herdados de <xref:System.Collections.ObjectModel.Collection%601>, qual remover por objeto e por índice, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="9554d-357">The example demonstrates <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A> method inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602>, which removes the item with a specified key, and also the <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> and <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> methods inherited from <xref:System.Collections.ObjectModel.Collection%601>, which remove by object and by index respectively.</span></span>  
  
 <span data-ttu-id="9554d-358">A classe `SimpleOrder` é uma lista muito simples de requisição que contém objetos `OrderItem`, cada um representando um item de linha na ordem.</span><span class="sxs-lookup"><span data-stu-id="9554d-358">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="9554d-359">A chave de `OrderItem` é imutável, uma consideração importante para classes que derivam de <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="9554d-359">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="9554d-360">Para um exemplo de código que usa chaves mutáveis, consulte <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="9554d-360">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9554d-361"><paramref name="key" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9554d-361"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)" />
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems" />
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="protected override void RemoveItem (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RemoveItem(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RemoveItem (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RemoveItem(int index);" />
      <MemberSignature Language="F#" Value="override this.RemoveItem : int -&gt; unit" Usage="keyedCollection.RemoveItem index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="9554d-362">O índice do elemento a ser removido.</span><span class="sxs-lookup"><span data-stu-id="9554d-362">The index of the element to remove.</span></span></param>
        <summary><span data-ttu-id="9554d-363">Remove o elemento no índice especificado do <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span><span class="sxs-lookup"><span data-stu-id="9554d-363">Removes the element at the specified index of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9554d-364">A chave do elemento também é removida do dicionário de pesquisa.</span><span class="sxs-lookup"><span data-stu-id="9554d-364">The key of the element is also removed from the lookup dictionary.</span></span>  
  
 <span data-ttu-id="9554d-365">Se o número de elementos excedeu o limite de criação de dicionário e o <xref:System.Collections.ObjectModel.KeyedCollection%602> está usando um dicionário de pesquisa, ele continuará a usar um dicionário de pesquisa, mesmo que o número de elementos novamente está abaixo do limite.</span><span class="sxs-lookup"><span data-stu-id="9554d-365">If the number of elements has exceeded the dictionary creation threshold and the <xref:System.Collections.ObjectModel.KeyedCollection%602> is using a lookup dictionary, it will continue to use a lookup dictionary even though the number of elements is again under the threshold.</span></span>  
  
 <span data-ttu-id="9554d-366">Este método é uma operação O(`n`), em que `n` é <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="9554d-366">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="9554d-367">Observações para implementadores</span><span class="sxs-lookup"><span data-stu-id="9554d-367">Notes for Implementers</span></span>  
 <span data-ttu-id="9554d-368">Substitua este método para fornecer um comportamento personalizado para o <xref:System.Collections.ObjectModel.Collection%601.Remove%28%600%29> e <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%28System.Int32%29> métodos, herdados da <xref:System.Collections.ObjectModel.Collection%601> classe genérica e o <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%28%600%29> método.</span><span class="sxs-lookup"><span data-stu-id="9554d-368">Override this method to provide customized behavior for the <xref:System.Collections.ObjectModel.Collection%601.Remove%28%600%29> and <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%28System.Int32%29> methods, inherited from the <xref:System.Collections.ObjectModel.Collection%601> generic class, and the <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%28%600%29> method.</span></span>  
  
 <span data-ttu-id="9554d-369">Chame a implementação de classe base desse método para remover o item da coleção subjacente e atualizar o dicionário de pesquisa.</span><span class="sxs-lookup"><span data-stu-id="9554d-369">Call the base class implementation of this method to remove the item from the underlying collection and to update the lookup dictionary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9554d-370">Esta seção contém dois exemplos de código que demonstram substituindo o <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> método para fornecer um comportamento personalizado para remover objetos da coleção.</span><span class="sxs-lookup"><span data-stu-id="9554d-370">This section contains two code examples that demonstrate overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> method to provide custom behavior for removing objects from the collection.</span></span> <span data-ttu-id="9554d-371">O primeiro exemplo adiciona um evento de notificação personalizado e o segundo dá suporte para uma coleção de objetos com chaves mutáveis.</span><span class="sxs-lookup"><span data-stu-id="9554d-371">The first example adds a custom notification event and the second provides support for a collection of objects with mutable keys.</span></span>  
  
 <span data-ttu-id="9554d-372">Exemplo 1</span><span class="sxs-lookup"><span data-stu-id="9554d-372">Example 1</span></span>  
  
 <span data-ttu-id="9554d-373">O exemplo de código a seguir mostra como substituir os métodos <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> e <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> protegidos para fornecer um comportamento personalizado para os métodos <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A> e <xref:System.Collections.ObjectModel.Collection%601.Clear%2A>, além de definir a propriedade <xref:System.Collections.ObjectModel.Collection%601.Item%2A> padrão (o indexador em C#).</span><span class="sxs-lookup"><span data-stu-id="9554d-373">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="9554d-374">O comportamento personalizado fornecido neste exemplo é um evento de notificação chamado `Changed`, gerado ao final de cada um dos métodos substituídos.</span><span class="sxs-lookup"><span data-stu-id="9554d-374">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="9554d-375">O exemplo de código cria a classe `SimpleOrder`, que deriva do <xref:System.Collections.ObjectModel.KeyedCollection%602> e representa um formulário de pedido simples.</span><span class="sxs-lookup"><span data-stu-id="9554d-375">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="9554d-376">O formulário do pedido contém objetos `OrderItem` representando itens ordenados.</span><span class="sxs-lookup"><span data-stu-id="9554d-376">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="9554d-377">O exemplo de código também cria uma classe `SimpleOrderChangedEventArgs` para conter informações do evento, e uma enumeração para identificar o tipo de alteração.</span><span class="sxs-lookup"><span data-stu-id="9554d-377">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="9554d-378">O exemplo de código demonstra o comportamento personalizado chamando as propriedades e os métodos da classe derivada, no método `Main` da classe `Demo`.</span><span class="sxs-lookup"><span data-stu-id="9554d-378">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="9554d-379">Este exemplo de código usa objetos com chaves imutáveis.</span><span class="sxs-lookup"><span data-stu-id="9554d-379">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="9554d-380">Para um exemplo de código que usa chaves mutáveis, consulte <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="9554d-380">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 <span data-ttu-id="9554d-381">Exemplo 2</span><span class="sxs-lookup"><span data-stu-id="9554d-381">Example 2</span></span>  
  
 <span data-ttu-id="9554d-382">O exemplo de código a seguir mostra como substituir o método <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> protegido para dar suporte a chaves mutáveis e como substituir os métodos <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A> e <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> protegidos para manter a integridade das chaves e da coleção.</span><span class="sxs-lookup"><span data-stu-id="9554d-382">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="9554d-383">O exemplo de código cria a coleção `MutableKeys`, que deriva do <xref:System.Collections.ObjectModel.KeyedCollection%602>, e a classe `MutableKey`.</span><span class="sxs-lookup"><span data-stu-id="9554d-383">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="9554d-384">A classe `MutableKey` tem uma propriedade `Key` definível.</span><span class="sxs-lookup"><span data-stu-id="9554d-384">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="9554d-385">Quando uma nova chave é atribuída à propriedade, o setter da propriedade chama o método `internal` (`Friend` no Visual Basic) `ChangeKey` da coleção para testar se a nova chave entraria em conflito com uma chave existente.</span><span class="sxs-lookup"><span data-stu-id="9554d-385">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="9554d-386">Em caso afirmativo, uma exceção é gerada e o valor da propriedade não é alterado.</span><span class="sxs-lookup"><span data-stu-id="9554d-386">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="9554d-387">Para manter a conexão entre um objeto `MutableKey` e a coleção `MutableKeys` e evitar que um objeto seja inserido em duas coleções, a classe `MutableKey` tem um campo `internal` (`Friend` no Visual Basic) `Collection`.</span><span class="sxs-lookup"><span data-stu-id="9554d-387">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="9554d-388">Este campo é mantido pelos métodos protegidos que fornecem o comportamento personalizado para adicionar e remover itens da coleção, como o método <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>.</span><span class="sxs-lookup"><span data-stu-id="9554d-388">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="9554d-389">O campo é definido quando o item é adicionado a uma coleção e desmarcado quando o item é removido.</span><span class="sxs-lookup"><span data-stu-id="9554d-389">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)" />
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems" />
      </Docs>
    </Member>
    <Member MemberName="SetItem">
      <MemberSignature Language="C#" Value="protected override void SetItem (int index, TItem item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetItem(int32 index, !TItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetItem (index As Integer, item As TItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetItem(int index, TItem item);" />
      <MemberSignature Language="F#" Value="override this.SetItem : int * 'Item -&gt; unit" Usage="keyedCollection.SetItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="TItem" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="9554d-390">O índice de base zero do item a ser substituído.</span><span class="sxs-lookup"><span data-stu-id="9554d-390">The zero-based index of the item to be replaced.</span></span></param>
        <param name="item"><span data-ttu-id="9554d-391">O novo item.</span><span class="sxs-lookup"><span data-stu-id="9554d-391">The new item.</span></span></param>
        <summary><span data-ttu-id="9554d-392">Substitui o item no índice especificado pelo item especificado.</span><span class="sxs-lookup"><span data-stu-id="9554d-392">Replaces the item at the specified index with the specified item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9554d-393">O dicionário de pesquisa é atualizado adequadamente.</span><span class="sxs-lookup"><span data-stu-id="9554d-393">The lookup dictionary is updated accordingly.</span></span> <span data-ttu-id="9554d-394">Ou seja, a chave do item que está sendo substituído é removida do dicionário de pesquisa e a chave do novo item é adicionada.</span><span class="sxs-lookup"><span data-stu-id="9554d-394">That is, the key of the item that is being replaced is removed from the lookup dictionary, and the key of the new item is added.</span></span>  
  
 <span data-ttu-id="9554d-395">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="9554d-395">This method is an O(1) operation.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="9554d-396">Observações para implementadores</span><span class="sxs-lookup"><span data-stu-id="9554d-396">Notes for Implementers</span></span>  
 <span data-ttu-id="9554d-397">Substitua este método para fornecer um comportamento personalizado para a configuração de <xref:System.Collections.ObjectModel.Collection%601.Item%2A> propriedade herdada do <xref:System.Collections.ObjectModel.Collection%601> classe genérica.</span><span class="sxs-lookup"><span data-stu-id="9554d-397">Override this method to provide customized behavior for setting the <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property inherited from the <xref:System.Collections.ObjectModel.Collection%601> generic class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9554d-398">Esse método não afeta o comportamento do <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A?displayProperty=nameWithType> propriedade, que é somente leitura.</span><span class="sxs-lookup"><span data-stu-id="9554d-398">This method does not affect the behavior of the <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A?displayProperty=nameWithType> property, which is read-only.</span></span>  
  
 <span data-ttu-id="9554d-399">Chame a implementação de classe base desse método para definir o item na coleção subjacente e atualizar o dicionário de pesquisa.</span><span class="sxs-lookup"><span data-stu-id="9554d-399">Call the base class implementation of this method to set the item in the underlying collection and to update the lookup dictionary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9554d-400">Esta seção contém dois exemplos de código que demonstram substituindo o <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> método para fornecer um comportamento personalizado para a configuração de <xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType> propriedade.</span><span class="sxs-lookup"><span data-stu-id="9554d-400">This section contains two code examples that demonstrate overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> method to provide custom behavior for setting the <xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="9554d-401">O primeiro exemplo adiciona um evento de notificação personalizado e o segundo dá suporte para uma coleção de objetos com chaves mutáveis.</span><span class="sxs-lookup"><span data-stu-id="9554d-401">The first example adds a custom notification event and the second provides support for a collection of objects with mutable keys.</span></span>  
  
 <span data-ttu-id="9554d-402">Exemplo 1</span><span class="sxs-lookup"><span data-stu-id="9554d-402">Example 1</span></span>  
  
 <span data-ttu-id="9554d-403">O exemplo de código a seguir mostra como substituir os métodos <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> e <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> protegidos para fornecer um comportamento personalizado para os métodos <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A> e <xref:System.Collections.ObjectModel.Collection%601.Clear%2A>, além de definir a propriedade <xref:System.Collections.ObjectModel.Collection%601.Item%2A> padrão (o indexador em C#).</span><span class="sxs-lookup"><span data-stu-id="9554d-403">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="9554d-404">O comportamento personalizado fornecido neste exemplo é um evento de notificação chamado `Changed`, gerado ao final de cada um dos métodos substituídos.</span><span class="sxs-lookup"><span data-stu-id="9554d-404">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="9554d-405">O exemplo de código cria a classe `SimpleOrder`, que deriva do <xref:System.Collections.ObjectModel.KeyedCollection%602> e representa um formulário de pedido simples.</span><span class="sxs-lookup"><span data-stu-id="9554d-405">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="9554d-406">O formulário do pedido contém objetos `OrderItem` representando itens ordenados.</span><span class="sxs-lookup"><span data-stu-id="9554d-406">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="9554d-407">O exemplo de código também cria uma classe `SimpleOrderChangedEventArgs` para conter informações do evento, e uma enumeração para identificar o tipo de alteração.</span><span class="sxs-lookup"><span data-stu-id="9554d-407">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="9554d-408">O exemplo de código demonstra o comportamento personalizado chamando as propriedades e os métodos da classe derivada, no método `Main` da classe `Demo`.</span><span class="sxs-lookup"><span data-stu-id="9554d-408">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="9554d-409">Este exemplo de código usa objetos com chaves imutáveis.</span><span class="sxs-lookup"><span data-stu-id="9554d-409">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="9554d-410">Para um exemplo de código que usa chaves mutáveis, consulte <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="9554d-410">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 <span data-ttu-id="9554d-411">Exemplo 2</span><span class="sxs-lookup"><span data-stu-id="9554d-411">Example 2</span></span>  
  
 <span data-ttu-id="9554d-412">O exemplo de código a seguir mostra como substituir o método <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> protegido para dar suporte a chaves mutáveis e como substituir os métodos <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A> e <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> protegidos para manter a integridade das chaves e da coleção.</span><span class="sxs-lookup"><span data-stu-id="9554d-412">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="9554d-413">O exemplo de código cria a coleção `MutableKeys`, que deriva do <xref:System.Collections.ObjectModel.KeyedCollection%602>, e a classe `MutableKey`.</span><span class="sxs-lookup"><span data-stu-id="9554d-413">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="9554d-414">A classe `MutableKey` tem uma propriedade `Key` definível.</span><span class="sxs-lookup"><span data-stu-id="9554d-414">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="9554d-415">Quando uma nova chave é atribuída à propriedade, o setter da propriedade chama o método `internal` (`Friend` no Visual Basic) `ChangeKey` da coleção para testar se a nova chave entraria em conflito com uma chave existente.</span><span class="sxs-lookup"><span data-stu-id="9554d-415">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="9554d-416">Em caso afirmativo, uma exceção é gerada e o valor da propriedade não é alterado.</span><span class="sxs-lookup"><span data-stu-id="9554d-416">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="9554d-417">Para manter a conexão entre um objeto `MutableKey` e a coleção `MutableKeys` e evitar que um objeto seja inserido em duas coleções, a classe `MutableKey` tem um campo `internal` (`Friend` no Visual Basic) `Collection`.</span><span class="sxs-lookup"><span data-stu-id="9554d-417">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="9554d-418">Este campo é mantido pelos métodos protegidos que fornecem o comportamento personalizado para adicionar e remover itens da coleção, como o método <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>.</span><span class="sxs-lookup"><span data-stu-id="9554d-418">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="9554d-419">O campo é definido quando o item é adicionado a uma coleção e desmarcado quando o item é removido.</span><span class="sxs-lookup"><span data-stu-id="9554d-419">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)" />
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)" />
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (TKey key, out TItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetValue(!TKey key, [out] !TItem&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.TryGetValue(`0,`1@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (key As TKey, ByRef item As TItem) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetValue(TKey key, [Runtime::InteropServices::Out] TItem % item);" />
      <MemberSignature Language="F#" Value="member this.TryGetValue : 'Key *  -&gt; bool" Usage="keyedCollection.TryGetValue (key, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="item" Type="TItem" RefType="out" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="item">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>