<Type Name="ApplicationManager" FullName="System.Web.Hosting.ApplicationManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a04d65119640b324174be0f68193ac341e15a296" /><Meta Name="ms.sourcegitcommit" Value="c5fd6b431a16f0412349201a0e93a9eacddf4b35" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="12/14/2018" /><Meta Name="ms.locfileid" Value="53394623" /></Metadata><TypeSignature Language="C#" Value="public sealed class ApplicationManager : MarshalByRefObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ApplicationManager extends System.MarshalByRefObject" />
  <TypeSignature Language="DocId" Value="T:System.Web.Hosting.ApplicationManager" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ApplicationManager&#xA;Inherits MarshalByRefObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class ApplicationManager sealed : MarshalByRefObject" />
  <TypeSignature Language="F#" Value="type ApplicationManager = class&#xA;    inherit MarshalByRefObject" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d8cd0-101">Gerencia os domínios de aplicativo do ASP.NET para um aplicativo de hospedagem do ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-101">Manages ASP.NET application domains for an ASP.NET hosting application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8cd0-102">O <xref:System.Web.Hosting.ApplicationManager> objeto fornece gerenciamento de tempo de vida de objetos no ambiente de hospedagem de um aplicativo ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-102">The <xref:System.Web.Hosting.ApplicationManager> object provides lifetime management of objects in the hosting environment for an ASP.NET application.</span></span> <span data-ttu-id="d8cd0-103">Ele é responsável por:</span><span class="sxs-lookup"><span data-stu-id="d8cd0-103">It is responsible for:</span></span>  
  
-   <span data-ttu-id="d8cd0-104">A ativação e inicialização de aplicativos ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-104">Activating and initializing ASP.NET applications.</span></span>  
  
-   <span data-ttu-id="d8cd0-105">Gerenciar o tempo de vida do aplicativo e o tempo de vida de objetos registrados no aplicativo.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-105">Managing the application lifetime and the lifetime of objects registered in the application.</span></span>  
  
-   <span data-ttu-id="d8cd0-106">Expondo objetos usados pelo ambiente de hospedagem para processar solicitações de aplicativo do ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-106">Exposing objects used by the hosting environment to process ASP.NET application requests.</span></span>  
  
-   <span data-ttu-id="d8cd0-107">Fornecendo uma lista de aplicativos em execução no processo de hospedagem em um determinado momento.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-107">Providing a list of applications running in the hosting process at any given moment.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="applicationManager.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d8cd0-108">Encerra todos os domínios de aplicativo.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-108">Shuts down all application domains.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8cd0-109">Se uma chamada para o <xref:System.Web.Hosting.ApplicationManager.Close%2A> método reduz a contagem de referência de aplicativos usando o Gerenciador de aplicativos como 0, o <xref:System.Web.Hosting.ApplicationManager.Close%2A> chamadas de método a <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> método.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-109">If a call to the <xref:System.Web.Hosting.ApplicationManager.Close%2A> method reduces the reference count of applications using the application manager to 0, the <xref:System.Web.Hosting.ApplicationManager.Close%2A> method calls the <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateObject">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d8cd0-110">Cria um objeto para o tipo de objeto e o domínio do aplicativo especificados.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-110">Creates an object for the specified application domain and object type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.IRegisteredObject CreateObject (System.Web.Hosting.IApplicationHost appHost, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.IRegisteredObject CreateObject(class System.Web.Hosting.IApplicationHost appHost, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.CreateObject(System.Web.Hosting.IApplicationHost,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Hosting::IRegisteredObject ^ CreateObject(System::Web::Hosting::IApplicationHost ^ appHost, Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.CreateObject : System.Web.Hosting.IApplicationHost * Type -&gt; System.Web.Hosting.IRegisteredObject" Usage="applicationManager.CreateObject (appHost, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.IRegisteredObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appHost" Type="System.Web.Hosting.IApplicationHost" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="appHost"><span data-ttu-id="d8cd0-111">Um objeto <see cref="T:System.Web.Hosting.IApplicationHost" />.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-111">An <see cref="T:System.Web.Hosting.IApplicationHost" /> object.</span></span></param>
        <param name="type"><span data-ttu-id="d8cd0-112">O tipo do objeto a ser criado.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-112">The type of the object to create.</span></span></param>
        <summary><span data-ttu-id="d8cd0-113">Cria um objeto para o domínio de aplicativo especificado com base no tipo.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-113">Creates an object for the specified application domain, based on type.</span></span></summary>
        <returns><span data-ttu-id="d8cd0-114">Um novo objeto do tipo especificado em <paramref name="type" />.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-114">A new object of the type specified in <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8cd0-115"><xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> é introduzido no .NET Framework versão 3.5.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-115"><xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="d8cd0-116">Para saber mais, confira [Versões e dependências](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="d8cd0-116">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d8cd0-117">Um caminho físico para o aplicativo não existe.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-117">A physical path for the application does not exist.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d8cd0-118"><paramref name="appHost" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-118"><paramref name="appHost" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="d8cd0-119">- ou -</span><span class="sxs-lookup"><span data-stu-id="d8cd0-119">-or-</span></span> 
 <span data-ttu-id="d8cd0-120"><paramref name="type" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-120"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.IRegisteredObject CreateObject (string appId, Type type, string virtualPath, string physicalPath, bool failIfExists);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.IRegisteredObject CreateObject(string appId, class System.Type type, string virtualPath, string physicalPath, bool failIfExists) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Hosting::IRegisteredObject ^ CreateObject(System::String ^ appId, Type ^ type, System::String ^ virtualPath, System::String ^ physicalPath, bool failIfExists);" />
      <MemberSignature Language="F#" Value="member this.CreateObject : string * Type * string * string * bool -&gt; System.Web.Hosting.IRegisteredObject" Usage="applicationManager.CreateObject (appId, type, virtualPath, physicalPath, failIfExists)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.IRegisteredObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="physicalPath" Type="System.String" />
        <Parameter Name="failIfExists" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="d8cd0-121">O identificador exclusivo para o aplicativo que possui o objeto.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-121">The unique identifier for the application that owns the object.</span></span></param>
        <param name="type"><span data-ttu-id="d8cd0-122">O tipo do objeto a ser criado.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-122">The type of the object to create.</span></span></param>
        <param name="virtualPath"><span data-ttu-id="d8cd0-123">O caminho virtual para o aplicativo.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-123">The virtual path to the application.</span></span></param>
        <param name="physicalPath"><span data-ttu-id="d8cd0-124">O caminho físico para o aplicativo.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-124">The physical path to the application.</span></span></param>
        <param name="failIfExists"><span data-ttu-id="d8cd0-125"><see langword="true" /> para gerar uma exceção se um objeto do tipo especificado estiver registrado atualmente, <see langword="false" /> para retornar o objeto registrado existente do tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-125"><see langword="true" /> to throw an exception if an object of the specified type is currently registered; <see langword="false" /> to return the existing registered object of the specified type.</span></span></param>
        <summary><span data-ttu-id="d8cd0-126">Cria um objeto para o domínio do aplicativo especificado com base no tipo, caminhos físicos e virtuais e um valor booliano que indica o comportamento de falha quando um objeto do tipo especificado já existir.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-126">Creates an object for the specified application domain based on type, virtual and physical paths, and a Boolean value indicating failure behavior when an object of the specified type already exists.</span></span></summary>
        <returns><span data-ttu-id="d8cd0-127">Um novo objeto do <paramref name="type" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-127">A new object of the specified <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8cd0-128">O <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> método é usado para criar e registrar os objetos no aplicativo.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-128">The <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method is used to create and register objects in the application.</span></span> <span data-ttu-id="d8cd0-129">Apenas um objeto de cada tipo pode ser criado.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-129">Only one object of each type can be created.</span></span> <span data-ttu-id="d8cd0-130">Se você precisar criar vários objetos do mesmo tipo, você deve implementar um alocador de objeto.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-130">If you need to create multiple objects of the same type, you must implement an object factory.</span></span> <span data-ttu-id="d8cd0-131">Para obter mais informações, consulte o exemplo de código neste tópico.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-131">For more information, see the code example in this topic.</span></span>  
  
 <span data-ttu-id="d8cd0-132">Cada aplicativo, identificado por um identificador exclusivo do aplicativo, é executado em seu próprio domínio de aplicativo.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-132">Each application, identified by a unique application identifier, runs in its own application domain.</span></span> <span data-ttu-id="d8cd0-133">O <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> método cria um objeto do tipo especificado no domínio do aplicativo do aplicativo especificado no `appID` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-133">The <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method creates an object of the specified type in the application domain of the application specified in the `appID` parameter.</span></span> <span data-ttu-id="d8cd0-134">Se não existir um domínio de aplicativo para o aplicativo especificado, um será criado antes do objeto é criado.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-134">If an application domain does not exist for the specified application, one is created before the object is created.</span></span>  
  
 <span data-ttu-id="d8cd0-135">O `failIfExists` parâmetro controla o comportamento do <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> método quando já existe um objeto do tipo especificado no aplicativo.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-135">The `failIfExists` parameter controls the behavior of the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method when an object of the specified type already exists in the application.</span></span> <span data-ttu-id="d8cd0-136">Quando `failIfExists` está `true`, o <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> método lança um <xref:System.InvalidOperationException> exceção.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-136">When `failIfExists` is `true`, the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method throws an <xref:System.InvalidOperationException> exception.</span></span>  
  
 <span data-ttu-id="d8cd0-137">Quando `failIfExists` está `false`, o <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> método retorna o objeto registrado existente do tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-137">When `failIfExists` is `false`, the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method returns the existing registered object of the specified type.</span></span>  
  
 <span data-ttu-id="d8cd0-138">O <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> método chama a sobrecarga que utiliza um adicional `throwOnError` parâmetro com `throwOnError` definido como `false`.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-138">The <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method calls the overload that takes an additional `throwOnError` parameter with `throwOnError` set to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8cd0-139">O exemplo de código a seguir é uma implementação do padrão de design fábrica do objeto para objetos registrados.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-139">The following code example is an implementation of the object-factory design pattern for registered objects.</span></span> <span data-ttu-id="d8cd0-140">Usar o padrão de fábrica permite que você registre várias instâncias de um objeto.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-140">Using the factory pattern enables you to register multiple instances of an object.</span></span> <span data-ttu-id="d8cd0-141">O exemplo contém dois objetos: `SampleComponent`, que é o objeto que o aplicativo usará a várias instâncias, e `SampleComponentFactory`, que gerencia uma lista de `SampleComponent` instâncias.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-141">The example contains two objects: `SampleComponent`, which is the object the application will use multiple instances of, and `SampleComponentFactory`, which manages a list of `SampleComponent` instances.</span></span>  
  
 [!code-csharp[System.Web.Hosting.ApplicationManager#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Hosting.ApplicationManager/CS/appManagercs.aspx.cs#1)]
 [!code-vb[System.Web.Hosting.ApplicationManager#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Hosting.ApplicationManager/VB/appManagervb.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d8cd0-142"><paramref name="physicalPath" /> é <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="d8cd0-142"><paramref name="physicalPath" /> is <see langword="null" /></span></span>  
  
<span data-ttu-id="d8cd0-143">- ou -</span><span class="sxs-lookup"><span data-stu-id="d8cd0-143">-or-</span></span> 
 <span data-ttu-id="d8cd0-144"><paramref name="physicalPath" /> não é um caminho de aplicativo válido.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-144"><paramref name="physicalPath" /> is not a valid application path.</span></span>  
  
<span data-ttu-id="d8cd0-145">- ou -</span><span class="sxs-lookup"><span data-stu-id="d8cd0-145">-or-</span></span> 
 <span data-ttu-id="d8cd0-146"><paramref name="type" /> não implementa a interface <see cref="T:System.Web.Hosting.IRegisteredObject" />.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-146"><paramref name="type" /> does not implement the <see cref="T:System.Web.Hosting.IRegisteredObject" /> interface.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d8cd0-147"><paramref name="appID" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-147"><paramref name="appID" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="d8cd0-148">- ou -</span><span class="sxs-lookup"><span data-stu-id="d8cd0-148">-or-</span></span> 
 <span data-ttu-id="d8cd0-149"><paramref name="type" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-149"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d8cd0-150"><paramref name="failIfExists" /> é <see langword="true" /> e um objeto do tipo especificado já está registrado.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-150"><paramref name="failIfExists" /> is <see langword="true" /> and an object of the specified type is already registered.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.IRegisteredObject CreateObject (string appId, Type type, string virtualPath, string physicalPath, bool failIfExists, bool throwOnError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.IRegisteredObject CreateObject(string appId, class System.Type type, string virtualPath, string physicalPath, bool failIfExists, bool throwOnError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Hosting::IRegisteredObject ^ CreateObject(System::String ^ appId, Type ^ type, System::String ^ virtualPath, System::String ^ physicalPath, bool failIfExists, bool throwOnError);" />
      <MemberSignature Language="F#" Value="member this.CreateObject : string * Type * string * string * bool * bool -&gt; System.Web.Hosting.IRegisteredObject" Usage="applicationManager.CreateObject (appId, type, virtualPath, physicalPath, failIfExists, throwOnError)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.IRegisteredObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="physicalPath" Type="System.String" />
        <Parameter Name="failIfExists" Type="System.Boolean" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="d8cd0-151">O identificador exclusivo para o aplicativo que possui o objeto.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-151">The unique identifier for the application that owns the object.</span></span></param>
        <param name="type"><span data-ttu-id="d8cd0-152">O tipo do objeto a ser criado.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-152">The type of the object to create.</span></span></param>
        <param name="virtualPath"><span data-ttu-id="d8cd0-153">O caminho virtual para o aplicativo.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-153">The virtual path to the application.</span></span></param>
        <param name="physicalPath"><span data-ttu-id="d8cd0-154">O caminho físico para o aplicativo.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-154">The physical path to the application.</span></span></param>
        <param name="failIfExists"><span data-ttu-id="d8cd0-155"><see langword="true" /> para gerar uma exceção se um objeto do tipo especificado estiver registrado atualmente, <see langword="false" /> para retornar o objeto registrado existente do tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-155"><see langword="true" /> to throw an exception if an object of the specified type is currently registered; <see langword="false" /> to return the existing registered object of the specified type.</span></span></param>
        <param name="throwOnError"><span data-ttu-id="d8cd0-156"><see langword="true" /> para gerar exceções para erros de inicialização de hospedagem; <see langword="false" /> para não gerar exceções de inicialização de hospedagem.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-156"><see langword="true" /> to throw exceptions for hosting initialization errors; <see langword="false" /> to not throw hosting initialization exceptions.</span></span></param>
        <summary><span data-ttu-id="d8cd0-157">Cria um objeto para o domínio de aplicativo especificado com base no tipo, em caminhos virtuais e físicos, em um valor booliano que indica o comportamento de falha quando já existe um objeto do tipo especificado e em um valor booliano que indica se as exceções de erro de inicialização de hospedagem são geradas.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-157">Creates an object for the specified application domain based on type, virtual and physical paths, a Boolean value indicating failure behavior when an object of the specified type already exists, and a Boolean value indicating whether hosting initialization error exceptions are thrown.</span></span></summary>
        <returns><span data-ttu-id="d8cd0-158">Um novo objeto do <paramref name="type" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-158">A new object of the specified <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8cd0-159">Essa sobrecarga da <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> método fornece a `throwOnError` parâmetro, que permite que você controle se forem geradas exceções de inicialização de hospedagem.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-159">This overload of the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method provides the `throwOnError` parameter, which allows you to control whether hosting initialization exceptions are thrown.</span></span> <span data-ttu-id="d8cd0-160">A sobrecarga da <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> método não fornece `throwOnError` chama essa sobrecarga com o parâmetro definido como `false`.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-160">The overload of the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method that does not provide `throwOnError` calls this overload with the parameter set to `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d8cd0-161"><paramref name="physicalPath" /> é <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="d8cd0-161"><paramref name="physicalPath" /> is <see langword="null" /></span></span>  
  
<span data-ttu-id="d8cd0-162">- ou -</span><span class="sxs-lookup"><span data-stu-id="d8cd0-162">-or-</span></span> 
 <span data-ttu-id="d8cd0-163"><paramref name="physicalPath" /> não é um caminho de aplicativo válido.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-163"><paramref name="physicalPath" /> is not a valid application path.</span></span>  
  
<span data-ttu-id="d8cd0-164">- ou -</span><span class="sxs-lookup"><span data-stu-id="d8cd0-164">-or-</span></span> 
 <span data-ttu-id="d8cd0-165"><paramref name="type" /> não implementa a interface <see cref="T:System.Web.Hosting.IRegisteredObject" />.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-165"><paramref name="type" /> does not implement the <see cref="T:System.Web.Hosting.IRegisteredObject" /> interface.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d8cd0-166"><paramref name="appID" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-166"><paramref name="appID" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="d8cd0-167">- ou -</span><span class="sxs-lookup"><span data-stu-id="d8cd0-167">-or-</span></span> 
 <span data-ttu-id="d8cd0-168"><paramref name="type" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-168"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d8cd0-169"><paramref name="failIfExists" /> é <see langword="true" /> e um objeto do tipo especificado já está registrado.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-169"><paramref name="failIfExists" /> is <see langword="true" /> and an object of the specified type is already registered.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAppDomain">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d8cd0-170">Obtém o domínio de aplicativo de um aplicativo especificado.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-170">Gets the application domain of a specified application.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAppDomain">
      <MemberSignature Language="C#" Value="public AppDomain GetAppDomain (string appId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.AppDomain GetAppDomain(string appId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.GetAppDomain(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAppDomain (appId As String) As AppDomain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AppDomain ^ GetAppDomain(System::String ^ appId);" />
      <MemberSignature Language="F#" Value="member this.GetAppDomain : string -&gt; AppDomain" Usage="applicationManager.GetAppDomain appId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AppDomain</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="d8cd0-171">O identificador exclusivo do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-171">The unique identifier for the application.</span></span></param>
        <summary><span data-ttu-id="d8cd0-172">Obtém o domínio de aplicativo do aplicativo especificado.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-172">Gets the application domain of the specified application.</span></span></summary>
        <returns><span data-ttu-id="d8cd0-173">O domínio de aplicativo do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-173">The application domain of the application.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAppDomain">
      <MemberSignature Language="C#" Value="public AppDomain GetAppDomain (System.Web.Hosting.IApplicationHost appHost);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.AppDomain GetAppDomain(class System.Web.Hosting.IApplicationHost appHost) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.GetAppDomain(System.Web.Hosting.IApplicationHost)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAppDomain (appHost As IApplicationHost) As AppDomain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AppDomain ^ GetAppDomain(System::Web::Hosting::IApplicationHost ^ appHost);" />
      <MemberSignature Language="F#" Value="member this.GetAppDomain : System.Web.Hosting.IApplicationHost -&gt; AppDomain" Usage="applicationManager.GetAppDomain appHost" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AppDomain</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appHost" Type="System.Web.Hosting.IApplicationHost" />
      </Parameters>
      <Docs>
        <param name="appHost"><span data-ttu-id="d8cd0-174">O host para o qual obter domínio de aplicativo.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-174">The host to get the application domain for.</span></span></param>
        <summary><span data-ttu-id="d8cd0-175">Obtém o domínio de aplicativo de um aplicativo usando o host especificado.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-175">Gets the application domain of an application using the specified host.</span></span></summary>
        <returns><span data-ttu-id="d8cd0-176">O domínio de aplicativo do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-176">The application domain of the application.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationManager">
      <MemberSignature Language="C#" Value="public static System.Web.Hosting.ApplicationManager GetApplicationManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Hosting.ApplicationManager GetApplicationManager() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.GetApplicationManager" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetApplicationManager () As ApplicationManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Hosting::ApplicationManager ^ GetApplicationManager();" />
      <MemberSignature Language="F#" Value="static member GetApplicationManager : unit -&gt; System.Web.Hosting.ApplicationManager" Usage="System.Web.Hosting.ApplicationManager.GetApplicationManager " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.ApplicationManager</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d8cd0-177">Retorna uma instância única do objeto <see cref="T:System.Web.Hosting.ApplicationManager" /> associado a esse processo de host do ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-177">Returns the single instance of the <see cref="T:System.Web.Hosting.ApplicationManager" /> object associated with this ASP.NET host process.</span></span></summary>
        <returns><span data-ttu-id="d8cd0-178">A instância única do objeto <see cref="T:System.Web.Hosting.ApplicationManager" /> associado ao processo de host do ASP.NET que está em execução.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-178">The single instance of the <see cref="T:System.Web.Hosting.ApplicationManager" /> object associated with the ASP.NET host process that is running.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8cd0-179">Apenas uma instância da <xref:System.Web.Hosting.ApplicationManager> objeto é criado por um processo de host do ASP.NET no domínio do aplicativo padrão.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-179">Only one instance of the <xref:System.Web.Hosting.ApplicationManager> object is created by an ASP.NET host process in the default application domain.</span></span> <span data-ttu-id="d8cd0-180">Se uma instância das <xref:System.Web.Hosting.ApplicationManager> classe não estiver disponível, o <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> método primeiro cria uma instância da <xref:System.Web.Hosting.ApplicationManager> de classe e, em seguida, retorna o objeto recém-criado.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-180">If an instance of the <xref:System.Web.Hosting.ApplicationManager> class is not available, the <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> method first creates an instance of the <xref:System.Web.Hosting.ApplicationManager> class and then returns the newly created object.</span></span> <span data-ttu-id="d8cd0-181">Se uma instância das <xref:System.Web.Hosting.ApplicationManager> classe criada anteriormente, o <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> método retorna o objeto existente.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-181">If an instance of the <xref:System.Web.Hosting.ApplicationManager> class was previously created, the <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> method returns the existing object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8cd0-182">O seguinte exemplo de código usa o <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> método para recuperar o <xref:System.Web.Hosting.ApplicationManager> instância para um aplicativo Web.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-182">The following code example uses the <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> method to retrieve the <xref:System.Web.Hosting.ApplicationManager> instance for a Web application.</span></span>  
  
 [!code-aspx-csharp[System.Web.Hosting.ApplicationInfo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Hosting.ApplicationInfo/CS/applicationInfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Hosting.ApplicationInfo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Hosting.ApplicationInfo/VB/applicationInfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.IRegisteredObject GetObject (string appId, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.IRegisteredObject GetObject(string appId, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.GetObject(System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Hosting::IRegisteredObject ^ GetObject(System::String ^ appId, Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.GetObject : string * Type -&gt; System.Web.Hosting.IRegisteredObject" Usage="applicationManager.GetObject (appId, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.IRegisteredObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="d8cd0-183">O identificador exclusivo para o aplicativo que possui o objeto.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-183">The unique identifier for the application that owns the object.</span></span></param>
        <param name="type"><span data-ttu-id="d8cd0-184">O tipo de objeto a ser retornado.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-184">The type of the object to return.</span></span></param>
        <summary><span data-ttu-id="d8cd0-185">Retorna o objeto registrado do tipo especificado do aplicativo especificado.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-185">Returns the registered object of the specified type from the specified application.</span></span></summary>
        <returns><span data-ttu-id="d8cd0-186">O objeto registrado do tipo especificado; ou <see langword="null" />, se o tipo não tiver sido registrado por meio de uma chamada ao método <see cref="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)" />.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-186">The registered object of the specified type; or <see langword="null" /> if the type has not been registered through a call to the <see cref="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)" /> method.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d8cd0-187"><paramref name="appId" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-187"><paramref name="appId" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="d8cd0-188">- ou -</span><span class="sxs-lookup"><span data-stu-id="d8cd0-188">-or-</span></span> 
 <span data-ttu-id="d8cd0-189"><paramref name="type" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-189"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetRunningApplications">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.ApplicationInfo[] GetRunningApplications ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.ApplicationInfo[] GetRunningApplications() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.GetRunningApplications" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRunningApplications () As ApplicationInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Web::Hosting::ApplicationInfo ^&gt; ^ GetRunningApplications();" />
      <MemberSignature Language="F#" Value="member this.GetRunningApplications : unit -&gt; System.Web.Hosting.ApplicationInfo[]" Usage="applicationManager.GetRunningApplications " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.ApplicationInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d8cd0-190">Retorna um instantâneo dos aplicativos em execução.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-190">Returns a snapshot of running applications.</span></span></summary>
        <returns><span data-ttu-id="d8cd0-191">Uma matriz de objetos <see cref="T:System.Web.Hosting.ApplicationInfo" /> que contêm informações sobre os aplicativos gerenciados por esta instância <see cref="T:System.Web.Hosting.ApplicationManager" />.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-191">An array of <see cref="T:System.Web.Hosting.ApplicationInfo" /> objects that contain information about the applications managed by this <see cref="T:System.Web.Hosting.ApplicationManager" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d8cd0-192">O seguinte exemplo de código usa o <xref:System.Web.Hosting.ApplicationManager.GetRunningApplications%2A> método para exibir informações sobre os aplicativos gerenciados por um <xref:System.Web.Hosting.ApplicationManager> instância.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-192">The following code example uses the <xref:System.Web.Hosting.ApplicationManager.GetRunningApplications%2A> method to display information about the applications managed by an <xref:System.Web.Hosting.ApplicationManager> instance.</span></span>  
  
 [!code-aspx-csharp[System.Web.Hosting.ApplicationInfo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Hosting.ApplicationInfo/CS/applicationInfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Hosting.ApplicationInfo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Hosting.ApplicationInfo/VB/applicationInfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeLifetimeService">
      <MemberSignature Language="C#" Value="public override object InitializeLifetimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object InitializeLifetimeService() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.InitializeLifetimeService" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function InitializeLifetimeService () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ InitializeLifetimeService();" />
      <MemberSignature Language="F#" Value="override this.InitializeLifetimeService : unit -&gt; obj" Usage="applicationManager.InitializeLifetimeService " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d8cd0-193">Proporciona um tempo de vida infinito ao domínio do aplicativo, impedindo que uma concessão seja criada.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-193">Gives the application domain an infinite lifetime by preventing a lease from being created.</span></span></summary>
        <returns><span data-ttu-id="d8cd0-194">Sempre <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-194">Always <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8cd0-195">Esse método substitui o <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> método na sua classe base.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-195">This method overrides the <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> method in its base class.</span></span> <span data-ttu-id="d8cd0-196">Ele sempre retorna `null` e, assim, impede que uma concessão seja criada, o que limitaria o tempo de vida do domínio do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-196">It always returns `null` and thereby prevents a lease from being created that would limit the application domain's lifetime.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsIdle">
      <MemberSignature Language="C#" Value="public bool IsIdle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsIdle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.IsIdle" />
      <MemberSignature Language="VB.NET" Value="Public Function IsIdle () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsIdle();" />
      <MemberSignature Language="F#" Value="member this.IsIdle : unit -&gt; bool" Usage="applicationManager.IsIdle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d8cd0-197">Retorna um valor indicando se todos os aplicativos hospedados pelo processo estão ociosos e não processando solicitações.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-197">Returns a value indicating whether all applications hosted by the process are idle and not processing requests.</span></span></summary>
        <returns><span data-ttu-id="d8cd0-198"><see langword="true" /> se todos os aplicativos no processo estiverem ociosos; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-198"><see langword="true" /> if all applications in the process are idle; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8cd0-199">O <xref:System.Web.Hosting.ApplicationManager.IsIdle%2A> método retorna `true` se todos os aplicativos hospedados pelo processo estão ociosos.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-199">The <xref:System.Web.Hosting.ApplicationManager.IsIdle%2A> method returns `true` if all applications hosted by the process are idle.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.Open" />
      <MemberSignature Language="VB.NET" Value="Public Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Open();" />
      <MemberSignature Language="F#" Value="member this.Open : unit -&gt; unit" Usage="applicationManager.Open " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d8cd0-200">Torna um incremento thread-safe para a contagem de referência de usuário da instância do gerenciador do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-200">Makes a thread-safe increment to the user reference count of the application manager instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShutdownAll">
      <MemberSignature Language="C#" Value="public void ShutdownAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShutdownAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.ShutdownAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShutdownAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShutdownAll();" />
      <MemberSignature Language="F#" Value="member this.ShutdownAll : unit -&gt; unit" Usage="applicationManager.ShutdownAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d8cd0-201">Descarrega todos os recursos do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-201">Unloads all application resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8cd0-202">Chamar o <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> método é equivalente a chamar o <xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=nameWithType> método em todos os domínios de aplicativo gerenciado por este <xref:System.Web.Hosting.ApplicationManager> exemplo; no entanto, o <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> método pode ser chamado de fora dos domínios de aplicativo gerenciado.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-202">Calling the <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> method is equivalent to calling the <xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=nameWithType> method in all application domains managed by this <xref:System.Web.Hosting.ApplicationManager> instance; however, the <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> method can be called from outside the managed application domains.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShutdownApplication">
      <MemberSignature Language="C#" Value="public void ShutdownApplication (string appId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShutdownApplication(string appId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.ShutdownApplication(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShutdownApplication (appId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShutdownApplication(System::String ^ appId);" />
      <MemberSignature Language="F#" Value="member this.ShutdownApplication : string -&gt; unit" Usage="applicationManager.ShutdownApplication appId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="d8cd0-203">O identificador exclusivo do aplicativo a descarregar.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-203">The unique identifier of the application to unload.</span></span></param>
        <summary><span data-ttu-id="d8cd0-204">Descarrega o aplicativo especificado.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-204">Unloads the specified application.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8cd0-205">Chamar o <xref:System.Web.Hosting.ApplicationManager.ShutdownApplication%2A> método é equivalente a chamar o <xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=nameWithType> método para um domínio de aplicativo específico; no entanto, o <xref:System.Web.Hosting.ApplicationManager.ShutdownApplication%2A> método pode ser chamado de domínios de aplicativo gerenciado externa.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-205">Calling the <xref:System.Web.Hosting.ApplicationManager.ShutdownApplication%2A> method is equivalent to calling the <xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=nameWithType> method for a specific application domain; however, the <xref:System.Web.Hosting.ApplicationManager.ShutdownApplication%2A> method can be called from outside managed application domains.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d8cd0-206"><paramref name="appId" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-206"><paramref name="appId" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="StopObject">
      <MemberSignature Language="C#" Value="public void StopObject (string appId, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StopObject(string appId, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.StopObject(System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StopObject(System::String ^ appId, Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.StopObject : string * Type -&gt; unit" Usage="applicationManager.StopObject (appId, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="d8cd0-207">O identificador exclusivo para o aplicativo que possui o objeto.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-207">The unique identifier for the application that owns the object.</span></span></param>
        <param name="type"><span data-ttu-id="d8cd0-208">O tipo do objeto a descarregar.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-208">The type of the object to unload.</span></span></param>
        <summary><span data-ttu-id="d8cd0-209">Remove o objeto especificado da lista de objetos registrados em um aplicativo.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-209">Removes the specified object from the list of registered objects in an application.</span></span> <span data-ttu-id="d8cd0-210">Se o objeto a ser removido for o último objeto restante na lista de objetos registrados em um aplicativo, o aplicativo será descarregado.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-210">If the object to be removed is the last remaining object in the list of registered objects in an application, the application is unloaded.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d8cd0-211"><paramref name="appId" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-211"><paramref name="appId" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="d8cd0-212">- ou -</span><span class="sxs-lookup"><span data-stu-id="d8cd0-212">-or-</span></span> 
 <span data-ttu-id="d8cd0-213"><paramref name="type" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d8cd0-213"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>