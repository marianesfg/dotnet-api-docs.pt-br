<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IRegisteredObject.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac501df8484d65d3bf3ec419a232fd048008e472bfd.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">01df8484d65d3bf3ec419a232fd048008e472bfd</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.Hosting.IRegisteredObject">
          <source>Defines methods for objects that are managed by the hosting environment.</source>
          
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Hosting.IRegisteredObject">
          <source>Objects must implement the <ph id="ph1">&lt;xref:System.Web.Hosting.IRegisteredObject&gt;</ph> interface in order to register with the hosting environment and have their lifetime managed by the hosting environment.</source>
          <target state="translated">Objetos devem implementar a <ph id="ph1">&lt;xref:System.Web.Hosting.IRegisteredObject&gt;</ph> interface para registrar com o ambiente de hospedagem e ter seu tempo de vida gerenciado pelo ambiente de hospedagem.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Hosting.IRegisteredObject">
          <source>You can create an instance of a registered object by calling the <ph id="ph1">&lt;xref:System.Web.Hosting.ApplicationManager.CreateObject%2A?displayProperty=nameWithType&gt;</ph> method on the application manager.</source>
          <target state="translated">Você pode criar uma instância de um objeto registrado chamando o <ph id="ph1">&lt;xref:System.Web.Hosting.ApplicationManager.CreateObject%2A?displayProperty=nameWithType&gt;</ph> método no Gerenciador de aplicativo.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Hosting.IRegisteredObject">
          <source>The application manager returns the newly created object to the caller, which can then call a type-specific method on the object.</source>
          <target state="translated">O Gerenciador de aplicativo retorna o objeto recém-criado para o chamador, que pode, em seguida, chamar um método de tipo específico no objeto.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Hosting.IRegisteredObject">
          <source>During startup, the registered object should call the <ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment.RegisterObject%2A?displayProperty=nameWithType&gt;</ph> method to complete registration of the object.</source>
          <target state="translated">Durante a inicialização, o objeto registrado deve chamar o <ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment.RegisterObject%2A?displayProperty=nameWithType&gt;</ph> método para concluir o registro do objeto.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Hosting.IRegisteredObject">
          <source>When the application manager needs to stop a registered object, it will call the <ph id="ph1">&lt;xref:System.Web.Hosting.IRegisteredObject.Stop%2A&gt;</ph> method.</source>
          <target state="translated">Quando o Gerenciador de aplicativos precisa parar um objeto registrado, ele chamará o <ph id="ph1">&lt;xref:System.Web.Hosting.IRegisteredObject.Stop%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Hosting.IRegisteredObject">
          <source>Applications can have only one instance of a registered type.</source>
          <target state="translated">Aplicativos podem ter apenas uma instância de um tipo registrado.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Hosting.IRegisteredObject">
          <source>To create multiple instances of a registered type, use the factory pattern to create an object manager that is registered with the application and then manages the multiple instances.</source>
          <target state="translated">Para criar várias instâncias de um tipo registrado, use o padrão de fábrica para criar um objeto Gerenciador que está registrado com o aplicativo e, em seguida, gerencia as várias instâncias.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Hosting.IRegisteredObject">
          <source>For an example of an object implementing the factory pattern, see the example for the <ph id="ph1">&lt;xref:System.Web.Hosting.ApplicationManager&gt;</ph> class.</source>
          <target state="translated">Para obter um exemplo de um objeto implementando o padrão de fábrica, consulte o exemplo para o <ph id="ph1">&lt;xref:System.Web.Hosting.ApplicationManager&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Web.Hosting.IRegisteredObject.Stop(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to indicate the registered object should unregister from the hosting environment before returning; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Web.Hosting.IRegisteredObject.Stop(System.Boolean)">
          <source>Requests a registered object to unregister.</source>
          
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.IRegisteredObject.Stop(System.Boolean)">
          <source>The application manager will call the <ph id="ph1">&lt;xref:System.Web.Hosting.IRegisteredObject.Stop%2A&gt;</ph> method to ask a registered object to unregister.</source>
          <target state="translated">O Gerenciador de aplicativo chamará o <ph id="ph1">&lt;xref:System.Web.Hosting.IRegisteredObject.Stop%2A&gt;</ph> método para solicitar que um objeto registrado para cancelar o registro.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.IRegisteredObject.Stop(System.Boolean)">
          <source>During processing of the <ph id="ph1">&lt;xref:System.Web.Hosting.IRegisteredObject.Stop%2A&gt;</ph> method, the registered object must call the <ph id="ph2">&lt;xref:System.Web.Hosting.HostingEnvironment.UnregisterObject%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Durante o processamento das <ph id="ph1">&lt;xref:System.Web.Hosting.IRegisteredObject.Stop%2A&gt;</ph> método, o objeto registrado deve chamar o <ph id="ph2">&lt;xref:System.Web.Hosting.HostingEnvironment.UnregisterObject%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.IRegisteredObject.Stop(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.Hosting.IRegisteredObject.Stop%2A&gt;</ph> method is first called with the <ph id="ph2">`immediate`</ph> parameter set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Web.Hosting.IRegisteredObject.Stop%2A&gt;</ph> método é chamado pela primeira vez com o <ph id="ph2">`immediate`</ph> parâmetro definido como <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.IRegisteredObject.Stop(System.Boolean)">
          <source>The object can either complete processing, call the <ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment.UnregisterObject%2A&gt;</ph> method, and then return or it can return immediately and complete processing asynchronously before calling the <ph id="ph2">&lt;xref:System.Web.Hosting.HostingEnvironment.UnregisterObject%2A&gt;</ph> method.</source>
          <target state="translated">O objeto pode ou concluir o processamento, chame o <ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment.UnregisterObject%2A&gt;</ph> método e, em seguida, retorno ou retornar imediatamente e concluir o processamento de forma assíncrona antes de chamar o <ph id="ph2">&lt;xref:System.Web.Hosting.HostingEnvironment.UnregisterObject%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.IRegisteredObject.Stop(System.Boolean)">
          <source>If the registered object does not complete processing before the application manager's time-out period expires, the <ph id="ph1">&lt;xref:System.Web.Hosting.IRegisteredObject.Stop%2A&gt;</ph> method is called again with the <ph id="ph2">`immediate`</ph> parameter set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Se o objeto registrado não concluiu o processamento antes de expira o período de tempo limite do Gerenciador de aplicativos, o <ph id="ph1">&lt;xref:System.Web.Hosting.IRegisteredObject.Stop%2A&gt;</ph> método é chamado novamente com o <ph id="ph2">`immediate`</ph> parâmetro definido como <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.IRegisteredObject.Stop(System.Boolean)">
          <source>When the <ph id="ph1">`immediate`</ph> parameter is <ph id="ph2">`true`</ph>, the registered object must call the <ph id="ph3">&lt;xref:System.Web.Hosting.HostingEnvironment.UnregisterObject%2A&gt;</ph> method before returning; otherwise, its registration will be removed by the application manager.</source>
          <target state="translated">Quando o <ph id="ph1">`immediate`</ph> parâmetro é <ph id="ph2">`true`</ph>, objeto registrado deve chamar o <ph id="ph3">&lt;xref:System.Web.Hosting.HostingEnvironment.UnregisterObject%2A&gt;</ph> método antes de retornar; caso contrário, seu registro será removido pelo Gerenciador de aplicativo.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>