<Type Name="VirtualFileBase" FullName="System.Web.Hosting.VirtualFileBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="44bcaae1402ca2e6f83b025b597ba4e5a8a0425c" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39734845" /></Metadata><TypeSignature Language="C#" Value="public abstract class VirtualFileBase : MarshalByRefObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit VirtualFileBase extends System.MarshalByRefObject" />
  <TypeSignature Language="DocId" Value="T:System.Web.Hosting.VirtualFileBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class VirtualFileBase&#xA;Inherits MarshalByRefObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class VirtualFileBase abstract : MarshalByRefObject" />
  <TypeSignature Language="F#" Value="type VirtualFileBase = class&#xA;    inherit MarshalByRefObject" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e2438-101">Fornece a implementação principal para os objetos <see cref="T:System.Web.Hosting.VirtualFile" /> e <see cref="T:System.Web.Hosting.VirtualDirectory" />.</span><span class="sxs-lookup"><span data-stu-id="e2438-101">Provides the core implementation for the <see cref="T:System.Web.Hosting.VirtualFile" /> and <see cref="T:System.Web.Hosting.VirtualDirectory" /> objects.</span></span> <span data-ttu-id="e2438-102">Uma classe abstrata. Não é possível criar uma instância dela.</span><span class="sxs-lookup"><span data-stu-id="e2438-102">An abstract class, it cannot be instantiated.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2438-103">O <xref:System.Web.Hosting.VirtualFileBase> classe abstrata fornece os métodos comuns e as propriedades compartilhadas entre o <xref:System.Web.Hosting.VirtualFile> e <xref:System.Web.Hosting.VirtualDirectory> objetos.</span><span class="sxs-lookup"><span data-stu-id="e2438-103">The <xref:System.Web.Hosting.VirtualFileBase> abstract class provides the common methods and properties shared between the <xref:System.Web.Hosting.VirtualFile> and <xref:System.Web.Hosting.VirtualDirectory> objects.</span></span> <span data-ttu-id="e2438-104">Implementações dessas classes fornece o tempo de execução do ASP.NET com acesso a arquivos e caminhos usados para compilação.</span><span class="sxs-lookup"><span data-stu-id="e2438-104">Implementations of these classes provide the ASP.NET runtime with access to files and paths used for compilation.</span></span> <span data-ttu-id="e2438-105">Para obter mais informações sobre como usar arquivos virtuais e caminhos, consulte o <xref:System.Web.Hosting.VirtualPathProvider> classe.</span><span class="sxs-lookup"><span data-stu-id="e2438-105">For more information on using virtual files and paths, see the <xref:System.Web.Hosting.VirtualPathProvider> class.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><span data-ttu-id="e2438-106"><para>Quando você herda o <see cref="T:System.Web.Hosting.VirtualFileBase" /> classe, você deve substituir o <see cref="P:System.Web.Hosting.VirtualFileBase.IsDirectory" /> propriedade para indicar se o objeto derivado é um diretório virtual ou um arquivo virtual. Se você derivar de qualquer um de <see cref="T:System.Web.Hosting.VirtualFile" /> ou o <see cref="T:System.Web.Hosting.VirtualDirectory" /> classe, o <see cref="P:System.Web.Hosting.VirtualFileBase.IsDirectory" /> propriedade já está definida.</para></span><span class="sxs-lookup"><span data-stu-id="e2438-106"><para>When you inherit from the <see cref="T:System.Web.Hosting.VirtualFileBase" /> class, you must override the <see cref="P:System.Web.Hosting.VirtualFileBase.IsDirectory" /> property to indicate whether the derived object is a virtual directory or a virtual file. If you derive from either the <see cref="T:System.Web.Hosting.VirtualFile" /> or the <see cref="T:System.Web.Hosting.VirtualDirectory" /> class, the <see cref="P:System.Web.Hosting.VirtualFileBase.IsDirectory" /> property is already set.</para></span></span></block>
    <altmember cref="T:System.Web.Hosting.VirtualFile" />
    <altmember cref="T:System.Web.Hosting.VirtualDirectory" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected VirtualFileBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualFileBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; VirtualFileBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e2438-107">Inicializa a classe para uso por uma instância de classe herdada.</span><span class="sxs-lookup"><span data-stu-id="e2438-107">Initializes the class for use by an inherited class instance.</span></span> <span data-ttu-id="e2438-108">Esse construtor pode ser chamado apenas por uma classe herdada.</span><span class="sxs-lookup"><span data-stu-id="e2438-108">This constructor can be called only by an inherited class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2438-109">Embora você não é possível construir diretamente uma instância da <xref:System.Web.Hosting.VirtualFileBase> classe, você pode chamar esse construtor do construtor de uma classe herdada.</span><span class="sxs-lookup"><span data-stu-id="e2438-109">Although you cannot directly construct an instance of the <xref:System.Web.Hosting.VirtualFileBase> class, you can call this constructor from the constructor of an inheriting class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
        <altmember cref="T:System.Web.Hosting.VirtualDirectory" />
      </Docs>
    </Member>
    <Member MemberName="InitializeLifetimeService">
      <MemberSignature Language="C#" Value="public override object InitializeLifetimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object InitializeLifetimeService() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualFileBase.InitializeLifetimeService" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function InitializeLifetimeService () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ InitializeLifetimeService();" />
      <MemberSignature Language="F#" Value="override this.InitializeLifetimeService : unit -&gt; obj" Usage="virtualFileBase.InitializeLifetimeService " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e2438-110">Fornece à instância de <see cref="T:System.Web.Hosting.VirtualFileBase" /> um tempo de vida infinito impedindo que uma concessão seja criada.</span><span class="sxs-lookup"><span data-stu-id="e2438-110">Gives a <see cref="T:System.Web.Hosting.VirtualFileBase" /> instance an infinite lifetime by preventing a lease from being created.</span></span></summary>
        <returns><span data-ttu-id="e2438-111">Sempre <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e2438-111">Always <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2438-112">Esse método substitui o <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> método em sua classe base.</span><span class="sxs-lookup"><span data-stu-id="e2438-112">This method overrides the <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> method on its base class.</span></span> <span data-ttu-id="e2438-113">Ele sempre retorna `null` e, assim, impede que uma concessão seja criada, o que limitaria o tempo de vida do diretório ou arquivo virtual.</span><span class="sxs-lookup"><span data-stu-id="e2438-113">It always returns `null` and thereby prevents a lease from being created that would limit the lifetime of the virtual file or directory.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
        <altmember cref="T:System.Web.Hosting.VirtualDirectory" />
      </Docs>
    </Member>
    <Member MemberName="IsDirectory">
      <MemberSignature Language="C#" Value="public abstract bool IsDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirectory" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.VirtualFileBase.IsDirectory" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsDirectory As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsDirectory { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirectory : bool" Usage="System.Web.Hosting.VirtualFileBase.IsDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2438-114">Quando substituído em uma classe derivada, obtém um valor que indica se a instância de <see cref="T:System.Web.Hosting.VirtualFileBase" /> representa um arquivo virtual ou um diretório virtual.</span><span class="sxs-lookup"><span data-stu-id="e2438-114">When overridden in a derived class, gets a value indicating whether the <see cref="T:System.Web.Hosting.VirtualFileBase" /> instance represents a virtual file or a virtual directory.</span></span></summary>
        <value><span data-ttu-id="e2438-115"><see langword="true" /> Se o <see cref="T:System.Web.Hosting.VirtualFileBase" /> instância é um virtual diretório; caso contrário, <see langword="false" /> se o <see cref="T:System.Web.Hosting.VirtualFileBase" /> instância é um arquivo virtual.</span><span class="sxs-lookup"><span data-stu-id="e2438-115"><see langword="true" /> if the <see cref="T:System.Web.Hosting.VirtualFileBase" /> instance is a virtual directory; otherwise, <see langword="false" /> if the <see cref="T:System.Web.Hosting.VirtualFileBase" /> instance is a virtual file.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
        <altmember cref="T:System.Web.Hosting.VirtualDirectory" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.VirtualFileBase.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Web.Hosting.VirtualFileBase.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2438-116">Obtém o nome de exibição do recurso virtual.</span><span class="sxs-lookup"><span data-stu-id="e2438-116">Gets the display name of the virtual resource.</span></span></summary>
        <value><span data-ttu-id="e2438-117">O nome de exibição do arquivo virtual.</span><span class="sxs-lookup"><span data-stu-id="e2438-117">The display name of the virtual file.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2438-118">O <xref:System.Web.Hosting.VirtualFileBase.Name%2A> propriedade é normalmente o nome de arquivo e extensão associada ao recurso, embora os recursos virtuais podem usar nomes arbitrários.</span><span class="sxs-lookup"><span data-stu-id="e2438-118">The <xref:System.Web.Hosting.VirtualFileBase.Name%2A> property is typically the file name and extension associated with the resource, although virtual resources may use arbitrary names.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="e2438-119"><para>O <see cref="P:System.Web.Hosting.VirtualFileBase.Name" /> propriedade deve retornar as maiusculas e minúsculas corretas do recurso virtual para o provedor de caminho virtual. A caixa correta pode ser diferente do que as maiusculas e minúsculas no caminho original.</para></span><span class="sxs-lookup"><span data-stu-id="e2438-119"><para>The <see cref="P:System.Web.Hosting.VirtualFileBase.Name" /> property should return the correct casing of the virtual resource for the virtual path provider. The correct casing may be different from the casing in the original path.</para></span></span></block>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
        <altmember cref="T:System.Web.Hosting.VirtualDirectory" />
      </Docs>
    </Member>
    <Member MemberName="VirtualPath">
      <MemberSignature Language="C#" Value="public string VirtualPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.VirtualFileBase.VirtualPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ VirtualPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VirtualPath : string" Usage="System.Web.Hosting.VirtualFileBase.VirtualPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2438-120">Obtém o caminho do arquivo virtual.</span><span class="sxs-lookup"><span data-stu-id="e2438-120">Gets the virtual file path.</span></span></summary>
        <value><span data-ttu-id="e2438-121">O caminho para o arquivo virtual.</span><span class="sxs-lookup"><span data-stu-id="e2438-121">The path to the virtual file.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2438-122">O <xref:System.Web.Hosting.VirtualFileBase.VirtualPath%2A> propriedade retorna o caminho para o arquivo ou diretório, representado por esse objeto.</span><span class="sxs-lookup"><span data-stu-id="e2438-122">The <xref:System.Web.Hosting.VirtualFileBase.VirtualPath%2A> property returns the path to the file or directory represented by this object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
        <altmember cref="T:System.Web.Hosting.VirtualDirectory" />
      </Docs>
    </Member>
  </Members>
</Type>