<Type Name="IImplicitResourceProvider" FullName="System.Web.Compilation.IImplicitResourceProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="eacd0818326ea2c2e99967ccab2cfb68d2973c85" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64148102" /></Metadata><TypeSignature Language="C#" Value="public interface IImplicitResourceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IImplicitResourceProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.IImplicitResourceProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IImplicitResourceProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IImplicitResourceProvider" />
  <TypeSignature Language="F#" Value="type IImplicitResourceProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Define os métodos que uma classe implementa para atuar como um provedor de recursos implícito.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Recursos podem ser declarados explicitamente ou implicitamente dentro de uma página. Recursos implícitos permitem ao desenvolvedor atribuir uma coleção de valores de recursos para um controle em uma instrução em vez de atribuir cada valor individualmente. Quando o analisador de página encontra um recurso implícito na forma de `meta:resourcekey="WelcomeLabel"`, ele atribui todos os valores com o `WelcomeLabel` prefixo da chave de recurso para os valores correspondentes no controle. Por exemplo, se um arquivo de recurso define os valores para `WelcomeLabel.Text` e `WelcomeLabel.ToolTip`, esses valores seriam atribuídos a um `Label` controle com uma referência implícita a `WelcomeLabel`.  
  
 O <xref:System.Web.Compilation.IImplicitResourceProvider> interface define os métodos que implementa um provedor de recursos para acessar os recursos implícitos. Você pode obter um valor específico usando o <xref:System.Web.Compilation.IImplicitResourceProvider.GetObject%2A> método.  
  
 Se você criar um provedor de recursos personalizado, você precisa fornecer suporte personalizado para a localização de recurso implícita. Localização implícita funcionará com seu provedor de recursos.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.ResourceExpressionBuilder" />
    <altmember cref="T:System.Web.Compilation.ImplicitResourceKey" />
    <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditor" />
  </Docs>
  <Members>
    <Member MemberName="GetImplicitResourceKeys">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection GetImplicitResourceKeys (string keyPrefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ICollection GetImplicitResourceKeys(string keyPrefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.IImplicitResourceProvider.GetImplicitResourceKeys(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetImplicitResourceKeys (keyPrefix As String) As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ICollection ^ GetImplicitResourceKeys(System::String ^ keyPrefix);" />
      <MemberSignature Language="F#" Value="abstract member GetImplicitResourceKeys : string -&gt; System.Collections.ICollection" Usage="iImplicitResourceProvider.GetImplicitResourceKeys keyPrefix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyPrefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keyPrefix">O prefixo das chaves implícita de recursos a serem coletadas.</param>
        <summary>Obtém uma coleção de chaves de recurso implícita conforme especificado pelo prefixo.</summary>
        <returns>Um <see cref="T:System.Collections.ICollection" /> de chaves de recurso implícitas.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando implementado, o método retorna uma coleção de chaves de recurso implícita para um prefixo específico. Por exemplo, `WelcomeLabel` é especificado como o prefixo da expressão `meta:resourcekey="WelcomeLabel"`. Quaisquer propriedades em um arquivo de recurso local com `WelcomeLabel` como um prefixo deve ser retornado com esse método.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ResourceExpressionBuilder" />
        <altmember cref="T:System.Web.Compilation.ImplicitResourceKey" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditor" />
      </Docs>
    </Member>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public object GetObject (System.Web.Compilation.ImplicitResourceKey key, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetObject(class System.Web.Compilation.ImplicitResourceKey key, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.IImplicitResourceProvider.GetObject(System.Web.Compilation.ImplicitResourceKey,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObject (key As ImplicitResourceKey, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetObject(System::Web::Compilation::ImplicitResourceKey ^ key, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member GetObject : System.Web.Compilation.ImplicitResourceKey * System.Globalization.CultureInfo -&gt; obj" Usage="iImplicitResourceProvider.GetObject (key, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.Compilation.ImplicitResourceKey" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="key">A chave de recurso que contém o prefixo, o filtro e a propriedade.</param>
        <param name="culture">Um <see cref="T:System.Globalization.CultureInfo" /> que representa a cultura para a qual o recurso é localizado.</param>
        <summary>Obtém um objeto que representa o valor da chave de recurso especificada.</summary>
        <returns>Um <see cref="T:System.Object" /> que representa o valor localizado de uma chave de recurso implícita.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando implementado, o método retorna o objeto para o valor representado pela chave de recurso implícita.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ResourceExpressionBuilder" />
        <altmember cref="T:System.Web.Compilation.ImplicitResourceKey" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditor" />
      </Docs>
    </Member>
  </Members>
</Type>