<Type Name="BuildProvider" FullName="System.Web.Compilation.BuildProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="da596f0a9f800dca2121847318a4b186a0b1d0a9" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39873233" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class BuildProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BuildProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.BuildProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BuildProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class BuildProvider abstract" />
  <TypeSignature Language="F#" Value="type BuildProvider = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Define um conjunto de propriedades e métodos para a geração de código-fonte dentro do ambiente de build do ASP.NET. Esta classe é abstrata.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O ASP.NET crie o ambiente usa <xref:System.Web.Compilation.BuildProvider> objetos para gerar o código-fonte para diferentes tipos de arquivos dentro de um aplicativo. As classes derivadas de <xref:System.Web.Compilation.BuildProvider> predominantemente fornece código-fonte para arquivos, páginas da Web, recursos e outros itens personalizados.  
  
 Normalmente, você não cria uma instância da <xref:System.Web.Compilation.BuildProvider> classe diretamente. Em vez disso, você pode implementar uma classe que deriva de <xref:System.Web.Compilation.BuildProvider>e configurar o <xref:System.Web.Compilation.BuildProvider> ambiente de compilação de implementação para uso dentro do ASP.NET.  
  
 Instâncias de <xref:System.Web.Compilation.BuildProvider> classe são usados com <xref:System.Web.Compilation.AssemblyBuilder> objetos para criar um ou mais arquivos em um assembly compilado. Um <xref:System.Web.Compilation.BuildProvider> instância gera o código-fonte no idioma adequado para arquivos individuais e o <xref:System.Web.Compilation.AssemblyBuilder> objeto combina o código-fonte contribuída por cada <xref:System.Web.Compilation.BuildProvider> instância em um único assembly.  
  
 O ambiente de compilação do ASP.NET usa instâncias do <xref:System.Web.Compilation.BuildProvider> classe para criar arquivos dentro de um aplicativo. O <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> propriedade do <xref:System.Web.Compilation.BuildProvider> classe indica o caminho do arquivo a ser criado. A extensão de arquivo de cada arquivo dentro de um aplicativo é mapeada para um provedor de build correspondente. O ASP.NET inicializa do ambiente de compilação uma <xref:System.Web.Compilation.BuildProvider> da instância para cada arquivo com base na extensão de arquivo e usa o <xref:System.Web.Compilation.BuildProvider> métodos para gerar o código-fonte para o arquivo. Passa do ambiente de build do ASP.NET um <xref:System.Web.Compilation.AssemblyBuilder> objeto com base no idioma preferencial do compilador e o contexto do arquivo para o <xref:System.Web.Compilation.BuildProvider> métodos ao criar um assembly de um ou mais arquivos, para que o <xref:System.Web.Compilation.BuildProvider> pode contribuir com a instância código-fonte para o arquivo de assembly global.  
  
 Para definir as ações de compilação personalizada para um tipo de arquivo em um aplicativo ASP.NET, você deve derivar uma classe de <xref:System.Web.Compilation.BuildProvider>, implementar membros dentro da classe derivada para criar o tipo de arquivo e configurar o provedor de build para a extensão de arquivo correspondente no arquivo de configuração de aplicativo.  
  
 O Especifica a extensão de arquivo para arquivos com suporte, e se o provedor de build dá suporte a arquivos de código, arquivos da Web, arquivos de recurso ou todos os arquivos. Use o `type` atributo para especificar o nome de tipo totalmente qualificado da implementação do provedor de build. Use o <xref:System.Web.Compilation.BuildProviderAppliesToAttribute> classe para especificar se o provedor de build se aplica a arquivos no diretório App_Code, para arquivos em um diretório de conteúdo da Web, recursos como globais ou locais ou a todos os arquivos. Use o `extension` atributo para especificar a extensão de arquivo usada para identificar os arquivos que o <xref:System.Web.Compilation.BuildProvider> classe oferece suporte. Use o <xref:System.Web.Configuration.BuildProviderCollection> provedores em um arquivo de configuração de build de classe para examinar. Para obter mais informações sobre como configurar um provedor de build, consulte [buildProviders elemento para a compilação (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384).  
  
 Para implementar um provedor de build que gera o código-fonte para um tipo de arquivo personalizado, derive uma classe de <xref:System.Web.Compilation.BuildProvider>e substituir o <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> método para gerar o código-fonte para o tipo de arquivo com suporte. O código-fonte gerado é adicionado para o <xref:System.Web.Compilation.AssemblyBuilder> objeto na forma de um grafo CodeDOM, ou como o conteúdo que representa um arquivo de código de origem física. Se o provedor de build requer uma linguagem de programação específica, substituir os <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> propriedade para retornar um <xref:System.Web.Compilation.CompilerType> objeto para a linguagem de programação com suporte. Se o provedor de build não requer uma linguagem de programação específica, não substituem o <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> propriedade; use a implementação de classe base, que indica que o provedor de build pode usar qualquer linguagem do .NET Framework, como Visual Basic ou c#.  
  
 Para implementar um provedor de build que gera o código-fonte para o conteúdo da Web, derive uma classe de <xref:System.Web.Compilation.BuildProvider> e substitua o <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> método para retornar o <xref:System.Type> para a classe gerada pelo <xref:System.Web.Compilation.BuildProvider>. Substituir o <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> método para gerar o código-fonte para o tipo fornecido pelo arquivo com suporte.  
  
> [!NOTE]
>  Adicionando um personalizado <xref:System.Web.Compilation.BuildProvider> classe no arquivo Web. config funciona em um site ASP.NET, mas não funciona em um projeto de aplicativo Web do ASP.NET. Em um projeto de aplicativo Web, o código que é gerado pelo <xref:System.Web.Compilation.BuildProvider> classe não pode ser incluído no aplicativo. Para obter mais informações, consulte [visão geral da pré-compilação de projeto do ASP.NET Web aplicativo](http://msdn.microsoft.com/library/b940abbd-178d-4570-b441-52914fa7b887).  
  
   
  
## Examples  
 O exemplo de código a seguir ilustra uma implementação de provedor simples de compilação, herdando abstrata <xref:System.Web.Compilation.BuildProvider> classe base. O provedor de build substitui o <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, e <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> membros da classe base. O exemplo não inclui a implementação do `SampleClassGenerator` classe. Para obter mais informações, consulte o <xref:System.CodeDom.CodeCompileUnit> visão geral da classe.  
  
 [!code-csharp[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/CS/Class1.cs#2)]
 [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/VB/Class1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.CompilerType" />
    <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
    <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
    <altmember cref="T:System.Web.Configuration.BuildProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BuildProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BuildProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Compilation.BuildProvider" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Porque o <xref:System.Web.Compilation.BuildProvider> classe é abstrata, você não pode criar uma instância de <xref:System.Web.Compilation.BuildProvider> diretamente usando o construtor.  
  
 Ao derivar do <xref:System.Web.Compilation.BuildProvider> de classe, substitua o construtor para implementar as ações de inicialização personalizada para sua implementação de provedor de build.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeCompilerType">
      <MemberSignature Language="C#" Value="public virtual System.Web.Compilation.CompilerType CodeCompilerType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Compilation.CompilerType CodeCompilerType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.CodeCompilerType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CodeCompilerType As CompilerType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Compilation::CompilerType ^ CodeCompilerType { System::Web::Compilation::CompilerType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CodeCompilerType : System.Web.Compilation.CompilerType" Usage="System.Web.Compilation.BuildProvider.CodeCompilerType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.CompilerType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa o tipo de compilador usado por um provedor de build para gerar o código-fonte para um tipo de arquivo personalizado.</summary>
        <value>Somente leitura <see cref="T:System.Web.Compilation.CompilerType" /> que representa o gerador de código, o compilador de código e configurações do compilador usadas para compilar o código-fonte para o caminho virtual. A classe base retorna <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> propriedade para fornecer as configurações para compilar o código-fonte para a implementação de <xref:System.Web.Compilation.BuildProvider>. O <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> é de propriedade `null` se o provedor de build não requer uma linguagem de código específico para gerar e compilar o código-fonte.  
  
 Para definir o valor para um <xref:System.Web.Compilation.CompilerType> objeto dentro de uma implementação de provedor de build, use o <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> ou <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> método.  
  
 O <xref:System.Web.Compilation.CompilerType.CodeDomProviderType%2A> propriedade especifica o <xref:System.CodeDom.Compiler.CodeDomProvider> implementação que é usada para gerar e compilar o código-fonte para um provedor de build. O <xref:System.Web.Compilation.CompilerType.CompilerParameters%2A> propriedade define as configurações que são usadas para compilar o código-fonte em um assembly.  
  
   
  
## Examples  
 O exemplo de código a seguir ilustra uma implementação de provedor simples de compilação, herdando abstrata <xref:System.Web.Compilation.BuildProvider> classe base. O provedor de build substitui o <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, e <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> membros da classe base.  
  
 [!code-csharp[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/CS/Class1.cs#2)]
 [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.CompilerType" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCode">
      <MemberSignature Language="C#" Value="public virtual void GenerateCode (System.Web.Compilation.AssemblyBuilder assemblyBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCode(class System.Web.Compilation.AssemblyBuilder assemblyBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GenerateCode(System.Web.Compilation.AssemblyBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCode(System::Web::Compilation::AssemblyBuilder ^ assemblyBuilder);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCode : System.Web.Compilation.AssemblyBuilder -&gt; unit&#xA;override this.GenerateCode : System.Web.Compilation.AssemblyBuilder -&gt; unit" Usage="buildProvider.GenerateCode assemblyBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyBuilder" Type="System.Web.Compilation.AssemblyBuilder" />
      </Parameters>
      <Docs>
        <param name="assemblyBuilder">O construtor de assembly que referencia o código-fonte gerado pelo provedor de build.</param>
        <summary>Gera o código-fonte para o caminho virtual do provedor de build e adiciona o código-fonte a um construtor de assembly especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para implementar um provedor de build que gera o código-fonte para um tipo de arquivo personalizado, derive uma classe do <xref:System.Web.Compilation.BuildProvider> de classe e substituir o <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> método para gerar o código-fonte para o tipo de arquivo com suporte.  
  
 Do normalmente, um provedor de build <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> leituras de implementação de <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> propriedade, analisa o conteúdo e adiciona o código-fonte gerado especificado <xref:System.Web.Compilation.AssemblyBuilder> objeto. Você pode contribuir com código-fonte para o assembly na forma de um <xref:System.IO.TextWriter> objeto ou um grafo CodeDOM. Para adicionar o código-fonte para o assembly por meio de um <xref:System.IO.TextWriter> do objeto, use o <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> método. Para adicionar o código-fonte em um gráfico CodeDOM ao assembly, use o <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> método.  
  
 Se o provedor de build gera o código-fonte em uma linguagem de programação específica, você deve substituir a <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> propriedade para retornar um <xref:System.Web.Compilation.CompilerType> objeto para a linguagem de programação com suporte.  
  
   
  
## Examples  
 O exemplo de código a seguir ilustra uma implementação de provedor simples de compilação, herdando abstrata <xref:System.Web.Compilation.BuildProvider> classe base. O provedor de build substitui o <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, e <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> membros da classe base.  
  
 [!code-csharp[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/CS/Class1.cs#2)]
 [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenReader" />
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenStream" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GetCodeCompileUnit">
      <MemberSignature Language="C#" Value="protected internal virtual System.CodeDom.CodeCompileUnit GetCodeCompileUnit (out System.Collections.IDictionary linePragmasTable);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.CodeDom.CodeCompileUnit GetCodeCompileUnit([out] class System.Collections.IDictionary&amp; linePragmasTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetCodeCompileUnit(System.Collections.IDictionary@)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetCodeCompileUnit (ByRef linePragmasTable As IDictionary) As CodeCompileUnit" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::CodeDom::CodeCompileUnit ^ GetCodeCompileUnit([Runtime::InteropServices::Out] System::Collections::IDictionary ^ % linePragmasTable);" />
      <MemberSignature Language="F#" Value="abstract member GetCodeCompileUnit :  -&gt; System.CodeDom.CodeCompileUnit&#xA;override this.GetCodeCompileUnit :  -&gt; System.CodeDom.CodeCompileUnit" Usage="buildProvider.GetCodeCompileUnit linePragmasTable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="linePragmasTable" Type="System.Collections.IDictionary" RefType="out" />
      </Parameters>
      <Docs>
        <param name="linePragmasTable">Quando este método retorna, contém um dicionário que contém todos os números de linha associados e pragmas de linha do código-fonte. Este parâmetro é passado não inicializado.</param>
        <summary>Representa o contêiner para o gráfico de CodeDOM gerado.</summary>
        <returns>O contêiner para o gráfico de CodeDOM gerado pela instância de <see cref="T:System.Web.Compilation.BuildProvider" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método pode ser usado por meio de <xref:System.Web.Compilation.ClientBuildManager> classe para suportam do designer e realce de sintaxe no Visual Studio.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomString">
      <MemberSignature Language="C#" Value="public virtual string GetCustomString (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetCustomString(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomString (results As CompilerResults) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetCustomString(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomString : System.CodeDom.Compiler.CompilerResults -&gt; string&#xA;override this.GetCustomString : System.CodeDom.Compiler.CompilerResults -&gt; string" Usage="buildProvider.GetCustomString results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results">Os resultados do build do caminho virtual do provedor de build.</param>
        <summary>Gera uma cadeia de caracteres a ser mantida no assembly compilado.</summary>
        <returns>Uma cadeia de caracteres a ser mantida no ambiente de build ou <see langword="null" />, se a instância de <see cref="T:System.Web.Compilation.BuildProvider" /> não implementar <see cref="M:System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Compilation.BuildManager.GetCompiledCustomString%2A> método de um <xref:System.Web.Compilation.BuildManager> objeto cria uma instância de um provedor de build para um caminho virtual de entrada e chama o <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> método no <xref:System.Web.Compilation.BuildProvider> objeto.  
  
 A base <xref:System.Web.Compilation.BuildProvider> classe retorna `null` para o <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> método, indicando que <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> não está implementado.  
  
 Determinadas implementações do provedor de build podem implementar <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> em vez do <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> método. Um <xref:System.Web.Compilation.BuildProvider> geralmente usa um objeto <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> para retornar um <xref:System.Type> objeto para um caminho virtual. No entanto, o <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> método pode ser usado para indicar que um <xref:System.Web.Compilation.BuildProvider> objeto pode gerar vários tipos de um caminho virtual.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
        <altmember cref="M:System.Web.Compilation.BuildManager.GetCompiledCustomString(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultCompilerType">
      <MemberSignature Language="C#" Value="protected System.Web.Compilation.CompilerType GetDefaultCompilerType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Web.Compilation.CompilerType GetDefaultCompilerType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerType" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetDefaultCompilerType () As CompilerType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::Compilation::CompilerType ^ GetDefaultCompilerType();" />
      <MemberSignature Language="F#" Value="member this.GetDefaultCompilerType : unit -&gt; System.Web.Compilation.CompilerType" Usage="buildProvider.GetDefaultCompilerType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.CompilerType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna as configurações do compilador para o idioma padrão no aplicativo.</summary>
        <returns>Um <see cref="T:System.Web.Compilation.CompilerType" /> que representa as configurações do compilador para o idioma padrão no aplicativo. A classe base retorna o compilador padrão com base no arquivo de configuração de aplicativo.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> método a examinar o tipo de compilador padrão para um provedor de build. Use o <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> método para examinar o tipo de compilador configurado em um provedor de build para um nome de idioma específico.  
  
 A base <xref:System.Web.Compilation.BuildProvider> classe determina o tipo de compilador padrão usando o `defaultLanguage` valor na seção do arquivo de configuração de aplicativo do atributo. Se não houver nenhuma configuração de idioma padrão na seção de compilação, o tipo de compilador padrão é definido usando o <xref:Microsoft.VisualBasic.VBCodeProvider> provedor de linguagem.  
  
 Ao derivar do <xref:System.Web.Compilation.BuildProvider> classe, você pode usar <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> para definir o <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> propriedade dentro de sua implementação.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.CompilerType" />
        <altmember cref="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultCompilerTypeForLanguage">
      <MemberSignature Language="C#" Value="protected System.Web.Compilation.CompilerType GetDefaultCompilerTypeForLanguage (string language);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Web.Compilation.CompilerType GetDefaultCompilerTypeForLanguage(string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetDefaultCompilerTypeForLanguage (language As String) As CompilerType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::Compilation::CompilerType ^ GetDefaultCompilerTypeForLanguage(System::String ^ language);" />
      <MemberSignature Language="F#" Value="member this.GetDefaultCompilerTypeForLanguage : string -&gt; System.Web.Compilation.CompilerType" Usage="buildProvider.GetDefaultCompilerTypeForLanguage language" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.CompilerType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="language">O nome do idioma de um código.</param>
        <summary>Retorna as configurações do compilador para o provedor de build com base no idioma especificado.</summary>
        <returns>Um <see cref="T:System.Web.Compilation.CompilerType" /> que representa as configurações do compilador para o provedor de build com base no idioma especificado. A classe base retorna as configurações do compilador padrão para o idioma com base no arquivo de configuração de aplicativo.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> método para examinar o tipo de compilador configurado no provedor de build para um nome de idioma específico. Use o <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> método a examinar o tipo de compilador padrão para um provedor de build.  
  
 A base <xref:System.Web.Compilation.BuildProvider> classe determina o tipo de compilador padrão usando o <xref:System.Web.Configuration.Compiler> elementos na <xref:System.Web.Configuration.CompilationSection.Compilers%2A> propriedade do <xref:System.Web.Configuration.CompilationSection> objeto para o arquivo de configuração. Isso é equivalente a examinando os elementos em elementos e nas seções do arquivo de configuração. Por exemplo, para o `language` valor VB, o método de classe base retorna um <xref:System.Web.Compilation.CompilerType> que corresponde às configurações definidas para uma instância do objeto <xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=nameWithType>.  
  
 Quando você deriva de <xref:System.Web.Compilation.BuildProvider> classe, você pode usar <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> para definir o <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> valor da propriedade para o idioma com suporte pela sua implementação.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="language" /> é <see langword="null" />.</exception>
        <exception cref="T:System.Web.HttpException">O <paramref name="language" /> não corresponde a um compilador configurado para o provedor de build.</exception>
        <altmember cref="T:System.Web.Compilation.CompilerType" />
        <altmember cref="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerType" />
        <altmember cref="P:System.Web.Configuration.CompilationSection.Compilers" />
        <altmember cref="T:System.Web.Configuration.Compiler" />
      </Docs>
    </Member>
    <Member MemberName="GetGeneratedType">
      <MemberSignature Language="C#" Value="public virtual Type GetGeneratedType (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetGeneratedType(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetGeneratedType(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGeneratedType (results As CompilerResults) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetGeneratedType(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetGeneratedType : System.CodeDom.Compiler.CompilerResults -&gt; Type&#xA;override this.GetGeneratedType : System.CodeDom.Compiler.CompilerResults -&gt; Type" Usage="buildProvider.GetGeneratedType results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results">Os resultados do build do caminho virtual do provedor de build.</param>
        <summary>Retorna um tipo gerado pelo provedor de build do caminho virtual.</summary>
        <returns>O tipo gerado pelo provedor de build para o caminho virtual. A classe base retorna <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para implementar um provedor de build que gera o código-fonte para o conteúdo da Web, como arquivos. aspx, derive uma classe do <xref:System.Web.Compilation.BuildProvider> de classe e substituir o <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> método para retornar o tipo gerado pelo provedor de build.  
  
 O sistema de compilação do ASP.NET compila arquivos para cada provedor de build e gera uma <xref:System.CodeDom.Compiler.CompilerResults> objeto, que é passado para o <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> método. Do normalmente, um provedor de build <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> implementação usa o <xref:System.Reflection.Assembly.GetType%2A> método sobre o <xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A> propriedade da entrada `results` objeto para retornar o tipo fornecido.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
      </Docs>
    </Member>
    <Member MemberName="GetResultFlags">
      <MemberSignature Language="C#" Value="public virtual System.Web.Compilation.BuildProviderResultFlags GetResultFlags (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Web.Compilation.BuildProviderResultFlags GetResultFlags(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetResultFlags(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResultFlags (results As CompilerResults) As BuildProviderResultFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::Compilation::BuildProviderResultFlags GetResultFlags(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetResultFlags : System.CodeDom.Compiler.CompilerResults -&gt; System.Web.Compilation.BuildProviderResultFlags&#xA;override this.GetResultFlags : System.CodeDom.Compiler.CompilerResults -&gt; System.Web.Compilation.BuildProviderResultFlags" Usage="buildProvider.GetResultFlags results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.BuildProviderResultFlags</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results">Os resultados do build do caminho virtual do provedor de build.</param>
        <summary>Retorna um valor que indica as ações necessárias quando um caminho virtual é compilado.</summary>
        <returns>Um valor de <see cref="T:System.Web.Compilation.BuildProviderResultFlags" /> que indica as ações necessárias após o caminho virtual ser compilado dentro do ambiente de build do ASP.NET.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A> método é usado pelo ambiente de compilação do ASP.NET ao uso de instâncias do <xref:System.Web.Compilation.BuildProvider> classe para criar arquivos e carregar os assemblies compilados.  
  
 A base <xref:System.Web.Compilation.BuildProvider> retorno do método de classe a <xref:System.Web.Compilation.BuildProviderResultFlags.Default> valor do campo, que indica que nenhuma ação especial é necessária quando o caminho virtual é criado.  
  
 Ao derivar do <xref:System.Web.Compilation.BuildProvider> classe, você pode implementar o <xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A> método retorne um diferentes <xref:System.Web.Compilation.BuildProviderResultFlags> valor do tipo de arquivo personalizado ou o caminho virtual. Por exemplo, se uma recriação de seu caminho virtual exige que o <xref:System.AppDomain> o objeto a ser recarregado, você pode retornar o <xref:System.Web.Compilation.BuildProviderResultFlags.ShutdownAppDomainOnChange> o valor de enumeração de seu <xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A> método.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
        <altmember cref="T:System.Web.Compilation.BuildProviderResultFlags" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenReader">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Abre um leitor de texto para leitura de um caminho virtual.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenReader">
      <MemberSignature Language="C#" Value="protected System.IO.TextReader OpenReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.TextReader OpenReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenReader" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenReader () As TextReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::TextReader ^ OpenReader();" />
      <MemberSignature Language="F#" Value="member this.OpenReader : unit -&gt; System.IO.TextReader" Usage="buildProvider.OpenReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Abre um leitor de texto para leitura do caminho virtual do objeto de provedor de build atual.</summary>
        <returns>Um <see cref="T:System.IO.TextReader" /> aberto que pode ser usado para ler o conteúdo do <see cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.IO.TextReader.Read%2A> método no retornado <xref:System.IO.TextReader> objeto para ler o conteúdo da <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> propriedade para um <xref:System.Web.Compilation.BuildProvider> objeto.  
  
 Depois de chamar o <xref:System.Web.Compilation.BuildProvider.OpenReader%2A> método, você deve usar o <xref:System.IO.TextReader.Close%2A> método para fechar o <xref:System.IO.TextReader> do objeto e libere recursos do sistema associados.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextReader" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="OpenReader">
      <MemberSignature Language="C#" Value="protected System.IO.TextReader OpenReader (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.TextReader OpenReader(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenReader(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenReader (virtualPath As String) As TextReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::TextReader ^ OpenReader(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.OpenReader : string -&gt; System.IO.TextReader" Usage="buildProvider.OpenReader virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">O caminho virtual a ser lido.</param>
        <summary>Abre um leitor de texto para leitura de um caminho virtual especificado.</summary>
        <returns>Um <see cref="T:System.IO.TextReader" /> aberto que pode ser usado para ler o conteúdo do caminho virtual especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.IO.TextReader.Read%2A> método no retornado <xref:System.IO.TextReader> objeto para ler o conteúdo do caminho virtual.  
  
 Depois de chamar o <xref:System.Web.Compilation.BuildProvider.OpenReader%2A> método, você deve usar o <xref:System.IO.TextReader.Close%2A> método para fechar o <xref:System.IO.TextReader> do objeto e libere recursos do sistema associados.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextReader" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenStream">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Abre um fluxo para leitura de um caminho virtual.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenStream">
      <MemberSignature Language="C#" Value="protected System.IO.Stream OpenStream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.Stream OpenStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenStream" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::Stream ^ OpenStream();" />
      <MemberSignature Language="F#" Value="member this.OpenStream : unit -&gt; System.IO.Stream" Usage="buildProvider.OpenStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Abre um fluxo para leitura do caminho virtual do objeto de provedor de build atual.</summary>
        <returns>Um <see cref="T:System.IO.Stream" /> aberto que pode ser usado para ler o conteúdo do <see cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.IO.Stream.Read%2A> método no retornado <xref:System.IO.Stream> objeto para ler o conteúdo do caminho virtual para o <xref:System.Web.Compilation.BuildProvider> objeto.  
  
 Depois de chamar o <xref:System.Web.Compilation.BuildProvider.OpenStream%2A> método, você deve usar o <xref:System.IO.Stream.Close%2A> método para fechar o <xref:System.IO.Stream> do objeto e libere recursos do sistema associados.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="OpenStream">
      <MemberSignature Language="C#" Value="protected System.IO.Stream OpenStream (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.Stream OpenStream(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenStream(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenStream (virtualPath As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::Stream ^ OpenStream(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.OpenStream : string -&gt; System.IO.Stream" Usage="buildProvider.OpenStream virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">O caminho virtual a ser lido.</param>
        <summary>Abre um fluxo para leitura de um caminho virtual especificado.</summary>
        <returns>Um <see cref="T:System.IO.Stream" /> aberto que pode ser usado para ler o conteúdo do caminho virtual especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.IO.Stream.Read%2A> método no retornado <xref:System.IO.Stream> objeto para ler o conteúdo do caminho virtual.  
  
 Depois de chamar o <xref:System.Web.Compilation.BuildProvider.OpenStream%2A> método, você deve usar o <xref:System.IO.Stream.Close%2A> método para fechar o <xref:System.IO.Stream> do objeto e libere recursos do sistema associados.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <Member MemberName="ProcessCompileErrors">
      <MemberSignature Language="C#" Value="public virtual void ProcessCompileErrors (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessCompileErrors(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.ProcessCompileErrors(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ProcessCompileErrors (results As CompilerResults)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ProcessCompileErrors(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberSignature Language="F#" Value="abstract member ProcessCompileErrors : System.CodeDom.Compiler.CompilerResults -&gt; unit&#xA;override this.ProcessCompileErrors : System.CodeDom.Compiler.CompilerResults -&gt; unit" Usage="buildProvider.ProcessCompileErrors results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results">Resultados do compilador.</param>
        <summary>Quando substituído em uma classe derivada, permite que você examine as mensagens de erro do compilador para que possa modificá-las para fornecer mais informações.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você normalmente substitui esse método para que você possa modificar os erros do compilador antes que eles são exibidos para tornar o texto de erro mais úteis para o usuário. Isso é útil em cenários em que você sabe o contexto de determinados erros e pode fornecer informações ao usuário sobre como corrigi-los. A mensagem de erro do compilador original é geralmente específica de uma construção de linguagem específica e pode não fazer a causa real ou uma solução óbvia para o usuário.  
  
 Você pode acessar os erros usando o <xref:System.CodeDom.Compiler.CompilerResults> objeto que é passado para o método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferencedAssemblies">
      <MemberSignature Language="C#" Value="protected System.Collections.ICollection ReferencedAssemblies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection ReferencedAssemblies" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.ReferencedAssemblies" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ReferencedAssemblies As ICollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::ICollection ^ ReferencedAssemblies { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReferencedAssemblies : System.Collections.ICollection" Usage="System.Web.Compilation.BuildProvider.ReferencedAssemblies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa os assemblies a serem compilados com a origem gerada pelo provedor de build.</summary>
        <value>Uma coleção somente leitura de assemblies que podem ser referenciados pelo código-fonte gerado pelo provedor de build.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O ASP.NET crie ambiente inicializa a coleção de assemblies que estão disponíveis para referência pelo provedor de build. O código-fonte gerado por um provedor de build pode usar os tipos públicos em assemblies referenciados. A coleção de assembly referenciado consiste em outros assemblies criados no aplicativo ASP.NET e assemblies listados no elemento no arquivo de configuração.  
  
 Se o provedor de build gera o código-fonte que faz referência a assemblies adicionais, o provedor de build adiciona os assemblies adicionais usando o <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> método. O ambiente de compilação do ASP.NET resolve tipos externos durante a compilação do assembly usando ambos os assemblies referenciados adicionados por criar provedores e a coleção padrão de assemblies disponíveis para referência.  
  
 O <xref:System.Web.Compilation.BuildProvider.ReferencedAssemblies%2A> coleção inclui assemblies que são adicionados para referência por outros provedores de compilação por meio de <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> método.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference(System.Reflection.Assembly)" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.VirtualPathDependencies" />
      </Docs>
    </Member>
    <Member MemberName="RegisterBuildProvider">
      <MemberSignature Language="C#" Value="public static void RegisterBuildProvider (string extension, Type providerType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterBuildProvider(string extension, class System.Type providerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.RegisterBuildProvider(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterBuildProvider (extension As String, providerType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterBuildProvider(System::String ^ extension, Type ^ providerType);" />
      <MemberSignature Language="F#" Value="static member RegisterBuildProvider : string * Type -&gt; unit" Usage="System.Web.Compilation.BuildProvider.RegisterBuildProvider (extension, providerType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extension" Type="System.String" />
        <Parameter Name="providerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="extension">A extensão de nome de arquivo para qual o provedor de build é destinado.</param>
        <param name="providerType">A classe de provedor de build.</param>
        <summary>Registra um provedor de build.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode usar esse método para registrar os provedores de compilação em vez de defini-los no arquivo Web. config. Para obter mais informações sobre provedores de compilação, consulte a <xref:System.Web.Compilation.BuildProvider> classe e [buildProviders elemento para a compilação (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VirtualPath">
      <MemberSignature Language="C#" Value="protected internal string VirtualPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.VirtualPath" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property VirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::String ^ VirtualPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VirtualPath : string" Usage="System.Web.Compilation.BuildProvider.VirtualPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa o arquivo a ser criado por esta implementação de provedor de build.</summary>
        <value>Uma cadeia de somente leitura que especifica o caminho virtual de um arquivo a ser compilado por este provedor de build.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O caminho virtual de um <xref:System.Web.Compilation.BuildProvider> objeto é o caminho para o arquivo que está sendo compilado pelo provedor de build. Por exemplo, se você tiver configurado um personalizado <xref:System.Web.Compilation.BuildProvider> classe para criar todos os arquivos no site da Web com uma extensão personalizada de ABC, se seu site da Web for denominado WebSite1, e o site da Web contém um arquivo chamado Example.abc, o <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> propriedade contém o valor `/WebSite1/Example.abc`.  
  
 A extensão de arquivo de cada arquivo dentro do aplicativo determina o tipo de arquivo e o provedor de build correspondente para o tipo de arquivo. O ASP.NET inicializa do ambiente de compilação uma <xref:System.Web.Compilation.BuildProvider> do objeto para cada arquivo com base no tipo de arquivo e usa o <xref:System.Web.Compilation.BuildProvider> métodos para gerar o código-fonte para cada arquivo.  
  
 Para obter mais informações sobre como configurar um provedor de build, consulte [buildProviders elemento para a compilação (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
        <altmember cref="P:System.Web.Hosting.VirtualFileBase.VirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="VirtualPathDependencies">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection VirtualPathDependencies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection VirtualPathDependencies" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.VirtualPathDependencies" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property VirtualPathDependencies As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ VirtualPathDependencies { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VirtualPathDependencies : System.Collections.ICollection" Usage="System.Web.Compilation.BuildProvider.VirtualPathDependencies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa uma coleção de caminhos virtuais que devem ser compilados antes de o provedor de build gerar o código.</summary>
        <value>Uma coleção somente leitura de cadeias de caracteres que representa os caminhos virtuais que esta instância do provedor de build é dependente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Compilation.BuildProvider.VirtualPathDependencies%2A> propriedade é uma coleção de caminhos virtuais que devem ser compilados antes do <xref:System.Web.Compilation.BuildProvider> instância gera o código-fonte. Os assemblies de caminhos virtuais na <xref:System.Web.Compilation.BuildProvider.VirtualPathDependencies%2A> são adicionados como referências à compilação para o <xref:System.Web.Compilation.BuildProvider> instância.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
        <altmember cref="P:System.Web.Hosting.VirtualFileBase.VirtualPath" />
      </Docs>
    </Member>
  </Members>
</Type>