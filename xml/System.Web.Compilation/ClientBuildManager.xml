<Type Name="ClientBuildManager" FullName="System.Web.Compilation.ClientBuildManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cf681906899518077ca8ef2258a9b309a1f95b5b" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46693375" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ClientBuildManager : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ClientBuildManager extends System.MarshalByRefObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.ClientBuildManager" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ClientBuildManager&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientBuildManager sealed : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="F#" Value="type ClientBuildManager = class&#xA;    inherit MarshalByRefObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Fornece serviços de compilação para aplicativos ASP.NET.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Compilation.ClientBuildManager> classe oferece métodos e propriedades para compilar aplicativos Web ASP.NET e recuperar os assemblies gerados ou código-fonte gerado. Instâncias da classe são estabelecidas no domínio de aplicativo do cliente e fornecem acesso ao sistema de compilação do ASP.NET fora do Microsoft Internet Information Services (IIS). A classe pode ser usada para desenvolver ferramentas personalizadas para compilar aplicativos Web.  
  
 A ferramenta de linha de comando `aspnet_compiler` usa o <xref:System.Web.Compilation.ClientBuildManager> classe.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.BuildManager" />
    <altmember cref="T:System.Web.Compilation.BuildProvider" />
    <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
    <related type="Article" href="http://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">Pré-compilação de Site da Web ASP.NET</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Compilation.ClientBuildManager" />.</summary>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="http://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">Pré-compilação de Site da Web ASP.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientBuildManager (string appVirtualDir, string appPhysicalSourceDir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string appVirtualDir, string appPhysicalSourceDir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (appVirtualDir As String, appPhysicalSourceDir As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientBuildManager(System::String ^ appVirtualDir, System::String ^ appPhysicalSourceDir);" />
      <MemberSignature Language="F#" Value="new System.Web.Compilation.ClientBuildManager : string * string -&gt; System.Web.Compilation.ClientBuildManager" Usage="new System.Web.Compilation.ClientBuildManager (appVirtualDir, appPhysicalSourceDir)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="appVirtualDir" Type="System.String" />
        <Parameter Name="appPhysicalSourceDir" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="appVirtualDir">O caminho virtual para a raiz do aplicativo.</param>
        <param name="appPhysicalSourceDir">O caminho físico para a raiz do aplicativo.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Compilation.ClientBuildManager" /> sem um diretório de destino especificado ou sinalizadores de pré-compilação.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="http://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">Pré-compilação de Site da Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientBuildManager (string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (appVirtualDir As String, appPhysicalSourceDir As String, appPhysicalTargetDir As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientBuildManager(System::String ^ appVirtualDir, System::String ^ appPhysicalSourceDir, System::String ^ appPhysicalTargetDir);" />
      <MemberSignature Language="F#" Value="new System.Web.Compilation.ClientBuildManager : string * string * string -&gt; System.Web.Compilation.ClientBuildManager" Usage="new System.Web.Compilation.ClientBuildManager (appVirtualDir, appPhysicalSourceDir, appPhysicalTargetDir)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="appVirtualDir" Type="System.String" />
        <Parameter Name="appPhysicalSourceDir" Type="System.String" />
        <Parameter Name="appPhysicalTargetDir" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="appVirtualDir">O caminho virtual para a raiz do aplicativo.</param>
        <param name="appPhysicalSourceDir">O caminho físico para a raiz do aplicativo.</param>
        <param name="appPhysicalTargetDir">O diretório de destino da pré-compilação.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Compilation.ClientBuildManager" /> com o diretório de destino especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este formulário do construtor normalmente é usado com pré-compilação, pois ele especifica um diretório de destino de pré-compilação.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="http://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">Pré-compilação de Site da Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientBuildManager (string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir, System.Web.Compilation.ClientBuildManagerParameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir, class System.Web.Compilation.ClientBuildManagerParameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (appVirtualDir As String, appPhysicalSourceDir As String, appPhysicalTargetDir As String, parameter As ClientBuildManagerParameter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientBuildManager(System::String ^ appVirtualDir, System::String ^ appPhysicalSourceDir, System::String ^ appPhysicalTargetDir, System::Web::Compilation::ClientBuildManagerParameter ^ parameter);" />
      <MemberSignature Language="F#" Value="new System.Web.Compilation.ClientBuildManager : string * string * string * System.Web.Compilation.ClientBuildManagerParameter -&gt; System.Web.Compilation.ClientBuildManager" Usage="new System.Web.Compilation.ClientBuildManager (appVirtualDir, appPhysicalSourceDir, appPhysicalTargetDir, parameter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="appVirtualDir" Type="System.String" />
        <Parameter Name="appPhysicalSourceDir" Type="System.String" />
        <Parameter Name="appPhysicalTargetDir" Type="System.String" />
        <Parameter Name="parameter" Type="System.Web.Compilation.ClientBuildManagerParameter" />
      </Parameters>
      <Docs>
        <param name="appVirtualDir">O caminho virtual para a raiz do aplicativo.</param>
        <param name="appPhysicalSourceDir">O caminho físico para a raiz do aplicativo.</param>
        <param name="appPhysicalTargetDir">O diretório de destino da pré-compilação.</param>
        <param name="parameter">Valores que determinam o comportamento de pré-compilação.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Compilation.ClientBuildManager" /> com o diretório de destino e o parâmetro de compilação especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este formulário do construtor normalmente é usado com pré-compilação, pois ele especifica uma pré-compilação sinalizadores de pré-compilação e diretórios de destino.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="http://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">Pré-compilação de Site da Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientBuildManager (string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir, System.Web.Compilation.ClientBuildManagerParameter parameter, System.ComponentModel.TypeDescriptionProvider typeDescriptionProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir, class System.Web.Compilation.ClientBuildManagerParameter parameter, class System.ComponentModel.TypeDescriptionProvider typeDescriptionProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter,System.ComponentModel.TypeDescriptionProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientBuildManager(System::String ^ appVirtualDir, System::String ^ appPhysicalSourceDir, System::String ^ appPhysicalTargetDir, System::Web::Compilation::ClientBuildManagerParameter ^ parameter, System::ComponentModel::TypeDescriptionProvider ^ typeDescriptionProvider);" />
      <MemberSignature Language="F#" Value="new System.Web.Compilation.ClientBuildManager : string * string * string * System.Web.Compilation.ClientBuildManagerParameter * System.ComponentModel.TypeDescriptionProvider -&gt; System.Web.Compilation.ClientBuildManager" Usage="new System.Web.Compilation.ClientBuildManager (appVirtualDir, appPhysicalSourceDir, appPhysicalTargetDir, parameter, typeDescriptionProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="appVirtualDir" Type="System.String" />
        <Parameter Name="appPhysicalSourceDir" Type="System.String" />
        <Parameter Name="appPhysicalTargetDir" Type="System.String" />
        <Parameter Name="parameter" Type="System.Web.Compilation.ClientBuildManagerParameter" />
        <Parameter Name="typeDescriptionProvider" Type="System.ComponentModel.TypeDescriptionProvider" />
      </Parameters>
      <Docs>
        <param name="appVirtualDir">O caminho virtual da raiz do aplicativo.</param>
        <param name="appPhysicalSourceDir">O caminho físico da raiz do aplicativo.</param>
        <param name="appPhysicalTargetDir">O diretório de destino da pré-compilação.</param>
        <param name="parameter">Valores que determinam o comportamento de pré-compilação.</param>
        <param name="typeDescriptionProvider">O provedor de descrição de tipo a ser usado. Este parâmetro é usado principalmente para dar suporte à infraestrutura multi-targeting no Visual Studio. Ele é usado para recuperar metadados sobre tipos que são filtrados para versões específicas do .NET Framework.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Compilation.ClientBuildManager" /> usando o diretório virtual especificado, diretório de origem, o diretório de destino, o parâmetro de compilação e o provedor de descrição de tipo.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/8b8145a9-62f6-4fc4-8a83-47b0487cbe76">.NET framework Targeting para projetos Web</related>
      </Docs>
    </Member>
    <Member MemberName="AppDomainShutdown">
      <MemberSignature Language="C#" Value="public event System.Web.Compilation.BuildManagerHostUnloadEventHandler AppDomainShutdown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.Compilation.BuildManagerHostUnloadEventHandler AppDomainShutdown" />
      <MemberSignature Language="DocId" Value="E:System.Web.Compilation.ClientBuildManager.AppDomainShutdown" />
      <MemberSignature Language="VB.NET" Value="Public Event AppDomainShutdown As BuildManagerHostUnloadEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::Compilation::BuildManagerHostUnloadEventHandler ^ AppDomainShutdown;" />
      <MemberSignature Language="F#" Value="member this.AppDomainShutdown : System.Web.Compilation.BuildManagerHostUnloadEventHandler " Usage="member this.AppDomainShutdown : System.Web.Compilation.BuildManagerHostUnloadEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.BuildManagerHostUnloadEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando um domínio de aplicativo é desligado.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="http://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">Pré-compilação de Site da Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="AppDomainStarted">
      <MemberSignature Language="C#" Value="public event EventHandler AppDomainStarted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AppDomainStarted" />
      <MemberSignature Language="DocId" Value="E:System.Web.Compilation.ClientBuildManager.AppDomainStarted" />
      <MemberSignature Language="VB.NET" Value="Public Event AppDomainStarted As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AppDomainStarted;" />
      <MemberSignature Language="F#" Value="member this.AppDomainStarted : EventHandler " Usage="member this.AppDomainStarted : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando um domínio de aplicativo é iniciado.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="http://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">Pré-compilação de Site da Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="AppDomainUnloaded">
      <MemberSignature Language="C#" Value="public event System.Web.Compilation.BuildManagerHostUnloadEventHandler AppDomainUnloaded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.Compilation.BuildManagerHostUnloadEventHandler AppDomainUnloaded" />
      <MemberSignature Language="DocId" Value="E:System.Web.Compilation.ClientBuildManager.AppDomainUnloaded" />
      <MemberSignature Language="VB.NET" Value="Public Event AppDomainUnloaded As BuildManagerHostUnloadEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::Compilation::BuildManagerHostUnloadEventHandler ^ AppDomainUnloaded;" />
      <MemberSignature Language="F#" Value="member this.AppDomainUnloaded : System.Web.Compilation.BuildManagerHostUnloadEventHandler " Usage="member this.AppDomainUnloaded : System.Web.Compilation.BuildManagerHostUnloadEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.BuildManagerHostUnloadEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando um domínio de aplicativo é descarregado.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="http://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">Pré-compilação de Site da Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CodeGenDir">
      <MemberSignature Language="C#" Value="public string CodeGenDir { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CodeGenDir" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManager.CodeGenDir" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CodeGenDir As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CodeGenDir { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CodeGenDir : string" Usage="System.Web.Compilation.ClientBuildManager.CodeGenDir" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o caminho físico para o diretório usado para a geração de código.</summary>
        <value>Um <see cref="T:System.String" /> que contém o caminho do diretório usado para a geração de código.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O diretório para a geração de código geralmente é o diretório de arquivos temporários do ASP.NET.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="http://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">Pré-compilação de Site da Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CompileApplicationDependencies">
      <MemberSignature Language="C#" Value="public void CompileApplicationDependencies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CompileApplicationDependencies() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies" />
      <MemberSignature Language="VB.NET" Value="Public Sub CompileApplicationDependencies ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CompileApplicationDependencies();" />
      <MemberSignature Language="F#" Value="member this.CompileApplicationDependencies : unit -&gt; unit" Usage="clientBuildManager.CompileApplicationDependencies " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Compila arquivos dependentes de aplicativo, assim como arquivos no diretório App_Code, o arquivo Global.asax, arquivos de recurso e referências da Web.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies%2A> método garante que os recursos, as referências da Web, arquivos no diretório App_Code, arquivos. browser na pasta App_Browsers e o arquivo global asax são compilados.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="http://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">Pré-compilação de Site da Web ASP.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="CompileFile">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Compila o arquivo representado pelo caminho virtual.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompileFile">
      <MemberSignature Language="C#" Value="public void CompileFile (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CompileFile(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.CompileFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CompileFile (virtualPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CompileFile(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.CompileFile : string -&gt; unit" Usage="clientBuildManager.CompileFile virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">O caminho para o arquivo a ser compilado.</param>
        <summary>Compila o arquivo representado pelo caminho virtual.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="http://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">Pré-compilação de Site da Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CompileFile">
      <MemberSignature Language="C#" Value="public void CompileFile (string virtualPath, System.Web.Compilation.ClientBuildManagerCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CompileFile(string virtualPath, class System.Web.Compilation.ClientBuildManagerCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.CompileFile(System.String,System.Web.Compilation.ClientBuildManagerCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CompileFile (virtualPath As String, callback As ClientBuildManagerCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CompileFile(System::String ^ virtualPath, System::Web::Compilation::ClientBuildManagerCallback ^ callback);" />
      <MemberSignature Language="F#" Value="member this.CompileFile : string * System.Web.Compilation.ClientBuildManagerCallback -&gt; unit" Usage="clientBuildManager.CompileFile (virtualPath, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="callback" Type="System.Web.Compilation.ClientBuildManagerCallback" />
      </Parameters>
      <Docs>
        <param name="virtualPath">O caminho para o arquivo a ser compilado.</param>
        <param name="callback">O objeto para receber informações de status da compilação.</param>
        <summary>Compila o arquivo representado pelo caminho virtual e fornece uma classe de retorno de chamada para receber informações de status sobre o build.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="virtualPath" /> é nulo.</exception>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="http://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">Pré-compilação de Site da Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.IRegisteredObject CreateObject (Type type, bool failIfExists);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.IRegisteredObject CreateObject(class System.Type type, bool failIfExists) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.CreateObject(System.Type,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Hosting::IRegisteredObject ^ CreateObject(Type ^ type, bool failIfExists);" />
      <MemberSignature Language="F#" Value="member this.CreateObject : Type * bool -&gt; System.Web.Hosting.IRegisteredObject" Usage="clientBuildManager.CreateObject (type, failIfExists)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.IRegisteredObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="failIfExists" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">O tipo de objeto a ser criado.</param>
        <param name="failIfExists">
          <see langword="true" /> para gerar uma exceção se o objeto já tiver sido criado no domínio de aplicativo do tempo de execução ASP.NET; caso contrário, <see langword="false" />.</param>
        <summary>Cria um objeto no domínio do aplicativo de tempo de execução do ASP.NET.</summary>
        <returns>Um objeto no domínio do aplicativo de tempo de execução do ASP.NET.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="type" /> é <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">O objeto já existe no domínio do aplicativo e <paramref name="failIfExists" /> é <see langword="true" />.</exception>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="http://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">Pré-compilação de Site da Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GenerateCode">
      <MemberSignature Language="C#" Value="public string GenerateCode (string virtualPath, string virtualFileString, out System.Collections.IDictionary linePragmasTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GenerateCode(string virtualPath, string virtualFileString, [out] class System.Collections.IDictionary&amp; linePragmasTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GenerateCode(System.String,System.String,System.Collections.IDictionary@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateCode (virtualPath As String, virtualFileString As String, ByRef linePragmasTable As IDictionary) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GenerateCode(System::String ^ virtualPath, System::String ^ virtualFileString, [Runtime::InteropServices::Out] System::Collections::IDictionary ^ % linePragmasTable);" />
      <MemberSignature Language="F#" Value="member this.GenerateCode : string * string *  -&gt; string" Usage="clientBuildManager.GenerateCode (virtualPath, virtualFileString, linePragmasTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="virtualFileString" Type="System.String" />
        <Parameter Name="linePragmasTable" Type="System.Collections.IDictionary" RefType="out" />
      </Parameters>
      <Docs>
        <param name="virtualPath">O caminho virtual para o arquivo.</param>
        <param name="virtualFileString">O conteúdo do arquivo.</param>
        <param name="linePragmasTable">Quando este método retorna, ele contém um dicionário de pragmas de linha.</param>
        <summary>Gera o código do conteúdo de um arquivo.</summary>
        <returns>Um <see cref="T:System.String" /> que contém o código gerado.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="virtualPath" /> é nulo.</exception>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <altmember cref="T:System.Web.Compilation.LinePragmaCodeInfo" />
        <related type="Article" href="http://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">Pré-compilação de Site da Web ASP.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GenerateCodeCompileUnit">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retorna a árvore codeDOM, o tipo de compilador e os parâmetros de compilador para um arquivo representado por um caminho virtual.</summary>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="http://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">Pré-compilação de Site da Web ASP.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GenerateCodeCompileUnit">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeCompileUnit GenerateCodeCompileUnit (string virtualPath, out Type codeDomProviderType, out System.CodeDom.Compiler.CompilerParameters compilerParameters, out System.Collections.IDictionary linePragmasTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.CodeDom.CodeCompileUnit GenerateCodeCompileUnit(string virtualPath, [out] class System.Type&amp; codeDomProviderType, [out] class System.CodeDom.Compiler.CompilerParameters&amp; compilerParameters, [out] class System.Collections.IDictionary&amp; linePragmasTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateCodeCompileUnit (virtualPath As String, ByRef codeDomProviderType As Type, ByRef compilerParameters As CompilerParameters, ByRef linePragmasTable As IDictionary) As CodeCompileUnit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::CodeDom::CodeCompileUnit ^ GenerateCodeCompileUnit(System::String ^ virtualPath, [Runtime::InteropServices::Out] Type ^ % codeDomProviderType, [Runtime::InteropServices::Out] System::CodeDom::Compiler::CompilerParameters ^ % compilerParameters, [Runtime::InteropServices::Out] System::Collections::IDictionary ^ % linePragmasTable);" />
      <MemberSignature Language="F#" Value="member this.GenerateCodeCompileUnit : string *  *  *  -&gt; System.CodeDom.CodeCompileUnit" Usage="clientBuildManager.GenerateCodeCompileUnit (virtualPath, codeDomProviderType, compilerParameters, linePragmasTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="codeDomProviderType" Type="System.Type" RefType="out" />
        <Parameter Name="compilerParameters" Type="System.CodeDom.Compiler.CompilerParameters" RefType="out" />
        <Parameter Name="linePragmasTable" Type="System.Collections.IDictionary" RefType="out" />
      </Parameters>
      <Docs>
        <param name="virtualPath">O caminho virtual para o arquivo.</param>
        <param name="codeDomProviderType">Quando este método retorna, ele contém o tipo de provedor de codeDOM usado para compilação e geração de código.</param>
        <param name="compilerParameters">Quando este método retorna, ele contém as propriedades que definem como o arquivo será compilado.</param>
        <param name="linePragmasTable">Quando este método retorna, ele contém um dicionário de pragmas de linha.</param>
        <summary>Retorna a árvore codeDOM, o tipo de compilador e os parâmetros de compilador para um arquivo representado por um caminho virtual.</summary>
        <returns>Um <see cref="T:System.CodeDom.CodeCompileUnit" /> para o arquivo especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit%2A> método recupera as informações necessárias para compilar um arquivo. Além de um <xref:System.CodeDom.CodeCompileUnit> objeto como um valor de retorno, ela retorna três `out` parâmetros. O `codeDomProviderType` parâmetro retorna o tipo de provedor para gerar e compilar o arquivo. O `compilerParameters` parâmetro contém propriedades que determinam o comportamento de compilação. O `linePragmasTable` parâmetro contém um dicionário de pragmas de linha.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <altmember cref="T:System.Web.Compilation.LinePragmaCodeInfo" />
        <related type="Article" href="http://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">Pré-compilação de Site da Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeCompileUnit">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeCompileUnit GenerateCodeCompileUnit (string virtualPath, string virtualFileString, out Type codeDomProviderType, out System.CodeDom.Compiler.CompilerParameters compilerParameters, out System.Collections.IDictionary linePragmasTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.CodeDom.CodeCompileUnit GenerateCodeCompileUnit(string virtualPath, string virtualFileString, [out] class System.Type&amp; codeDomProviderType, [out] class System.CodeDom.Compiler.CompilerParameters&amp; compilerParameters, [out] class System.Collections.IDictionary&amp; linePragmasTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateCodeCompileUnit (virtualPath As String, virtualFileString As String, ByRef codeDomProviderType As Type, ByRef compilerParameters As CompilerParameters, ByRef linePragmasTable As IDictionary) As CodeCompileUnit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::CodeDom::CodeCompileUnit ^ GenerateCodeCompileUnit(System::String ^ virtualPath, System::String ^ virtualFileString, [Runtime::InteropServices::Out] Type ^ % codeDomProviderType, [Runtime::InteropServices::Out] System::CodeDom::Compiler::CompilerParameters ^ % compilerParameters, [Runtime::InteropServices::Out] System::Collections::IDictionary ^ % linePragmasTable);" />
      <MemberSignature Language="F#" Value="member this.GenerateCodeCompileUnit : string * string *  *  *  -&gt; System.CodeDom.CodeCompileUnit" Usage="clientBuildManager.GenerateCodeCompileUnit (virtualPath, virtualFileString, codeDomProviderType, compilerParameters, linePragmasTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="virtualFileString" Type="System.String" />
        <Parameter Name="codeDomProviderType" Type="System.Type" RefType="out" />
        <Parameter Name="compilerParameters" Type="System.CodeDom.Compiler.CompilerParameters" RefType="out" />
        <Parameter Name="linePragmasTable" Type="System.Collections.IDictionary" RefType="out" />
      </Parameters>
      <Docs>
        <param name="virtualPath">O caminho virtual para o arquivo.</param>
        <param name="virtualFileString">O conteúdo do arquivo representado pelo parâmetro <c>virtualPath</c>.</param>
        <param name="codeDomProviderType">Quando este método retorna, ele contém o tipo de provedor de codeDOM usado para compilação e geração de código.</param>
        <param name="compilerParameters">Quando este método retorna, ele contém as propriedades que definem como o arquivo representado pelo parâmetro <c>virtualPath</c> será compilado.</param>
        <param name="linePragmasTable">Quando este método retorna, ele contém um dicionário de pragmas de linha.</param>
        <summary>Retorna o conteúdo, a árvore codeDOM, o tipo de compilador e os parâmetros de compilador para um arquivo representado por um caminho virtual.</summary>
        <returns>Um <see cref="T:System.CodeDom.CodeCompileUnit" /> para o arquivo especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit%2A> método recupera as informações necessárias para compilar um arquivo. Além de um <xref:System.CodeDom.CodeCompileUnit> objeto como um valor de retorno, ela retorna três `out` parâmetros. O `codeDomProviderType` parâmetro retorna o tipo de provedor para gerar e compilar o arquivo. O `compilerParameters` parâmetro contém propriedades que determinam o comportamento de compilação. O `linePragmasTable` parâmetro contém um dicionário de pragmas de linha.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="virtualPath" /> é nulo.</exception>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <altmember cref="T:System.Web.Compilation.LinePragmaCodeInfo" />
        <related type="Article" href="http://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">Pré-compilação de Site da Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetAppDomainShutdownDirectories">
      <MemberSignature Language="C#" Value="public string[] GetAppDomainShutdownDirectories ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetAppDomainShutdownDirectories() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetAppDomainShutdownDirectories" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAppDomainShutdownDirectories () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetAppDomainShutdownDirectories();" />
      <MemberSignature Language="F#" Value="member this.GetAppDomainShutdownDirectories : unit -&gt; string[]" Usage="clientBuildManager.GetAppDomainShutdownDirectories " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtém os diretórios com arquivos que, quando alterados, causam o desligamento do domínio de aplicativo.</summary>
        <returns>Uma matriz <see cref="T:System.String" /> que contém os nomes de diretório de nível superior.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 As alterações nos arquivos em diretórios de nível superior específicos fazem com que o domínio do aplicativo desligar. Arquivos dentro do compartimento, App_Code, Global_Resources, referências Web e diretórios App_Browsers são monitorados para detectar possíveis alterações. Quando são detectadas alterações, o domínio de aplicativo é desligado.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="http://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">Pré-compilação de Site da Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetBrowserDefinitions">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary GetBrowserDefinitions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IDictionary GetBrowserDefinitions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetBrowserDefinitions" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBrowserDefinitions () As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IDictionary ^ GetBrowserDefinitions();" />
      <MemberSignature Language="F#" Value="member this.GetBrowserDefinitions : unit -&gt; System.Collections.IDictionary" Usage="clientBuildManager.GetBrowserDefinitions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtém uma coleção de elementos de navegador.</summary>
        <returns>Um <see cref="T:System.Collections.IDictionary" /> que contém elementos do navegador.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Collections.IDictionary> objeto contém os nomes de navegador para as chaves e <xref:System.Web.UI.Triplet> objetos para os valores. O <xref:System.Web.UI.Triplet> cada um dos objetos contêm o nome do elemento de navegador pai, uma descrição e a profundidade do elemento na árvore do navegador.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.BrowserCapabilitiesFactory" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="http://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">Pré-compilação de Site da Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetCodeDirectoryInformation">
      <MemberSignature Language="C#" Value="public void GetCodeDirectoryInformation (string virtualCodeDir, out Type codeDomProviderType, out System.CodeDom.Compiler.CompilerParameters compilerParameters, out string generatedFilesDir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetCodeDirectoryInformation(string virtualCodeDir, [out] class System.Type&amp; codeDomProviderType, [out] class System.CodeDom.Compiler.CompilerParameters&amp; compilerParameters, [out] string&amp; generatedFilesDir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetCodeDirectoryInformation (virtualCodeDir As String, ByRef codeDomProviderType As Type, ByRef compilerParameters As CompilerParameters, ByRef generatedFilesDir As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetCodeDirectoryInformation(System::String ^ virtualCodeDir, [Runtime::InteropServices::Out] Type ^ % codeDomProviderType, [Runtime::InteropServices::Out] System::CodeDom::Compiler::CompilerParameters ^ % compilerParameters, [Runtime::InteropServices::Out] System::String ^ % generatedFilesDir);" />
      <MemberSignature Language="F#" Value="member this.GetCodeDirectoryInformation : string *  *  *  -&gt; unit" Usage="clientBuildManager.GetCodeDirectoryInformation (virtualCodeDir, codeDomProviderType, compilerParameters, generatedFilesDir)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualCodeDir" Type="System.String" />
        <Parameter Name="codeDomProviderType" Type="System.Type" RefType="out" />
        <Parameter Name="compilerParameters" Type="System.CodeDom.Compiler.CompilerParameters" RefType="out" />
        <Parameter Name="generatedFilesDir" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="virtualCodeDir">O diretório sobre o qual recuperar informações.</param>
        <param name="codeDomProviderType">Quando este método retorna, ele contém o tipo de provedor usado para compilação e geração de código.</param>
        <param name="compilerParameters">Quando este método retorna, ele contém as propriedades que definem como o arquivo será compilado.</param>
        <param name="generatedFilesDir">Quando este método retorna, ele contém o diretório para arquivos gerados de arquivos que não são de código.</param>
        <summary>Obtém informações sobre o tipo de compilador, parâmetros de compilador e o diretório no qual armazenar os arquivos de código gerados de arquivos que não são de código como arquivos .wsdl.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation%2A> método recupera as informações necessárias para criar um diretório de código. Ele retorna essas informações por meio de três `out` parâmetros. O `codeDomProviderType` parâmetro retorna o tipo de provedor para gerar e compilar os arquivos no diretório do código. O `compilerParameters` parâmetro contém propriedades que determinam o comportamento de compilação. O `generatedFilesDir` parâmetro armazena o caminho do diretório que contém todos os arquivos de código gerados a partir de arquivos sem código no diretório do código, como arquivos. WSDL.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="virtualCodeDir" /> é nulo.</exception>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="http://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">Pré-compilação de Site da Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetCompiledType">
      <MemberSignature Language="C#" Value="public Type GetCompiledType (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetCompiledType(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetCompiledType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCompiledType (virtualPath As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetCompiledType(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.GetCompiledType : string -&gt; Type" Usage="clientBuildManager.GetCompiledType virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">O caminho virtual do arquivo a compilar.</param>
        <summary>Compila o arquivo representado pelo caminho virtual e retorna seu tipo compilado.</summary>
        <returns>O <see cref="T:System.Type" /> do arquivo compilado.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="virtualPath" /> é nulo.</exception>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="http://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">Pré-compilação de Site da Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetCompilerParameters">
      <MemberSignature Language="C#" Value="public void GetCompilerParameters (string virtualPath, out Type codeDomProviderType, out System.CodeDom.Compiler.CompilerParameters compilerParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetCompilerParameters(string virtualPath, [out] class System.Type&amp; codeDomProviderType, [out] class System.CodeDom.Compiler.CompilerParameters&amp; compilerParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetCompilerParameters(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetCompilerParameters (virtualPath As String, ByRef codeDomProviderType As Type, ByRef compilerParameters As CompilerParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetCompilerParameters(System::String ^ virtualPath, [Runtime::InteropServices::Out] Type ^ % codeDomProviderType, [Runtime::InteropServices::Out] System::CodeDom::Compiler::CompilerParameters ^ % compilerParameters);" />
      <MemberSignature Language="F#" Value="member this.GetCompilerParameters : string *  *  -&gt; unit" Usage="clientBuildManager.GetCompilerParameters (virtualPath, codeDomProviderType, compilerParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="codeDomProviderType" Type="System.Type" RefType="out" />
        <Parameter Name="compilerParameters" Type="System.CodeDom.Compiler.CompilerParameters" RefType="out" />
      </Parameters>
      <Docs>
        <param name="virtualPath">O caminho virtual para o arquivo.</param>
        <param name="codeDomProviderType">Quando este método retorna, ele contém o tipo de provedor usado para compilação e geração de código.</param>
        <param name="compilerParameters">Quando este método retorna, ele contém as propriedades que definem como o arquivo será compilado.</param>
        <summary>Retorna o tipo do compilador e os parâmetros que são usados para compilar um arquivo representado por um caminho virtual.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="virtualPath" /> é nulo.</exception>
        <altmember cref="P:System.Web.Compilation.CompilerType.CompilerParameters" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="http://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">Pré-compilação de Site da Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetGeneratedFileVirtualPath">
      <MemberSignature Language="C#" Value="public string GetGeneratedFileVirtualPath (string filePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetGeneratedFileVirtualPath(string filePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetGeneratedFileVirtualPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGeneratedFileVirtualPath (filePath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetGeneratedFileVirtualPath(System::String ^ filePath);" />
      <MemberSignature Language="F#" Value="member this.GetGeneratedFileVirtualPath : string -&gt; string" Usage="clientBuildManager.GetGeneratedFileVirtualPath filePath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filePath">O caminho físico completo para um arquivo gerado.</param>
        <summary>Retorna o caminho virtual de um arquivo gerado.</summary>
        <returns>Um <see cref="T:System.String" /> que contém o caminho virtual para <paramref name="filePath" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="filePath" /> é nulo.</exception>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="http://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">Pré-compilação de Site da Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetGeneratedSourceFile">
      <MemberSignature Language="C#" Value="public string GetGeneratedSourceFile (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetGeneratedSourceFile(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetGeneratedSourceFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGeneratedSourceFile (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetGeneratedSourceFile(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.GetGeneratedSourceFile : string -&gt; string" Usage="clientBuildManager.GetGeneratedSourceFile virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">O caminho virtual do arquivo a recuperar.</param>
        <summary>Obtém o caminho físico do arquivo gerado para um caminho virtual.</summary>
        <returns>Um <see cref="T:System.String" /> que contém o caminho físico do arquivo gerado.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="virtualPath" /> é nulo.</exception>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="http://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">Pré-compilação de Site da Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetTopLevelAssemblyReferences">
      <MemberSignature Language="C#" Value="public string[] GetTopLevelAssemblyReferences (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetTopLevelAssemblyReferences(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetTopLevelAssemblyReferences(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTopLevelAssemblyReferences (virtualPath As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetTopLevelAssemblyReferences(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.GetTopLevelAssemblyReferences : string -&gt; string[]" Usage="clientBuildManager.GetTopLevelAssemblyReferences virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">O caminho e o nome da configuração.</param>
        <summary>Retorna uma matriz de assemblies definidos no diretório Bin e a seção <see langword="&lt;assembly&gt;" /> do arquivo de configuração da Web.</summary>
        <returns>Uma matriz <see cref="T:System.String" /> contendo caminhos para bases de código no diretório Bin e a seção <see langword="&lt;assembly&gt;" /> do arquivo de configuração da Web.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="virtualPath" /> é nulo.</exception>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="http://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">Pré-compilação de Site da Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualCodeDirectories">
      <MemberSignature Language="C#" Value="public string[] GetVirtualCodeDirectories ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetVirtualCodeDirectories() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetVirtualCodeDirectories" />
      <MemberSignature Language="VB.NET" Value="Public Function GetVirtualCodeDirectories () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetVirtualCodeDirectories();" />
      <MemberSignature Language="F#" Value="member this.GetVirtualCodeDirectories : unit -&gt; string[]" Usage="clientBuildManager.GetVirtualCodeDirectories " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna os caminhos virtuais para o diretório App_Code e seus subdiretórios em um aplicativo ASP.NET.</summary>
        <returns>Uma matriz <see cref="T:System.String" /> que contém todos os caminhos virtuais para diretórios de código em um aplicativo.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="http://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">Pré-compilação de Site da Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="InitializeLifetimeService">
      <MemberSignature Language="C#" Value="public override object InitializeLifetimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object InitializeLifetimeService() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.InitializeLifetimeService" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function InitializeLifetimeService () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ InitializeLifetimeService();" />
      <MemberSignature Language="F#" Value="override this.InitializeLifetimeService : unit -&gt; obj" Usage="clientBuildManager.InitializeLifetimeService " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Proporciona um tempo de vida infinito ao domínio do aplicativo, impedindo que uma concessão seja criada.</summary>
        <returns>Sempre <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método substitui o <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> método na sua classe base. Ele sempre retorna `null` e, assim, impede que uma concessão seja criada, o que limitaria o tempo de vida do domínio do aplicativo.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="http://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">Pré-compilação de Site da Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="IsCodeAssembly">
      <MemberSignature Language="C#" Value="public bool IsCodeAssembly (string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsCodeAssembly(string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.IsCodeAssembly(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsCodeAssembly (assemblyName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsCodeAssembly(System::String ^ assemblyName);" />
      <MemberSignature Language="F#" Value="member this.IsCodeAssembly : string -&gt; bool" Usage="clientBuildManager.IsCodeAssembly assemblyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName">O nome do assembly deve ser identificado como um assembly de código.</param>
        <summary>Indica se um assembly é um assembly de código.</summary>
        <returns>
          <see langword="true" /> se o parâmetro <paramref name="assemblyName" /> corresponde a um dos assemblies de código gerados; caso contrário, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assemblyName" /> é nulo.</exception>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="http://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">Pré-compilação de Site da Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="IsHostCreated">
      <MemberSignature Language="C#" Value="public bool IsHostCreated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHostCreated" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManager.IsHostCreated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsHostCreated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsHostCreated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsHostCreated : bool" Usage="System.Web.Compilation.ClientBuildManager.IsHostCreated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se um domínio do aplicativo para compilar aplicativos Web ASP.NET foi criado.</summary>
        <value>
          <see langword="true" /> Se o domínio de aplicativo para compilar aplicativos Web ASP.NET tiver sido criado; Caso contrário, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="http://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">Pré-compilação de Site da Web ASP.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="PrecompileApplication">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Realiza a pré-compilação de um Aplicativo ASP.NET.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET oferece suporte a três formas de pré-compilação. Um formulário permite a pré-compilação in-loco de um aplicativo ASP.NET. Neste formulário, o site é implantado para produção e, em seguida, pré-compilado, que elimina a necessidade de compilar o site dinamicamente quando for visitado pela primeira vez por um usuário. O primeiro usuário do site não terão o atraso normalmente encontrado em um site que é compilado dinamicamente.  
  
 As duas outras formas de pré-compilação são usadas para implantação. Em ambas as formas, um layout do site é gerado que podem ser implantados em um computador de produção. Uma dessas formas inclui as páginas de marcação assim alguma quantidade de atualização pode ser executada no site compilado. A outra forma não contém as páginas de marcação e, portanto, não pode ser atualizada sem recompilar o site original. Nenhum código-fonte é implantado no ambiente de destino em qualquer uma destas formas de pré-compilação.  
  
 O aplicativo para pré-compilar é definido por meio de <xref:System.Web.Compilation.ClientBuildManager> construtor. O <xref:System.Web.Compilation.ClientBuildManagerParameter> objeto do <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> construtor define qual das três formas de pré-compilação para executar.  
  
 Um desenvolvedor pode pré-compilar um site da Web com o `aspnet_compiler` ferramenta de linha de comando ou chamando o <xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A> método.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.Compilation.ClientBuildManager.#ctor" />
        <related type="Article" href="http://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">Pré-compilação de Site da Web ASP.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="PrecompileApplication">
      <MemberSignature Language="C#" Value="public void PrecompileApplication ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PrecompileApplication() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrecompileApplication ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PrecompileApplication();" />
      <MemberSignature Language="F#" Value="member this.PrecompileApplication : unit -&gt; unit" Usage="clientBuildManager.PrecompileApplication " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Realiza a pré-compilação de um Aplicativo ASP.NET.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET oferece suporte a três formas de pré-compilação. Um formulário permite a pré-compilação in-loco de um aplicativo ASP.NET. Neste formulário, o site é implantado para produção e, em seguida, pré-compilado, que elimina a necessidade de compilar o site dinamicamente quando for visitado pela primeira vez por um usuário. O primeiro usuário do site não terão o atraso normalmente encontrado em um site que é compilado dinamicamente.  
  
 As duas outras formas de pré-compilação são usadas para implantação. Em ambas as formas, um layout do site é gerado que podem ser implantados em um computador de produção. Uma dessas formas inclui as páginas de marcação assim alguma quantidade de atualização pode ser executada no site compilado. A outra forma não contém as páginas de marcação e, portanto, não pode ser atualizada sem recompilar o site original. Nenhum código-fonte é implantado no ambiente de destino em qualquer uma destas formas de pré-compilação.  
  
 O aplicativo para pré-compilar é definido por meio de <xref:System.Web.Compilation.ClientBuildManager> construtor. O <xref:System.Web.Compilation.ClientBuildManagerParameter> objeto do <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> construtor define qual das três formas de pré-compilação para executar.  
  
 Um desenvolvedor pode pré-compilar um site da Web com o `aspnet_compiler` ferramenta de linha de comando ou chamando o <xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A> método.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.Compilation.ClientBuildManager.#ctor" />
        <related type="Article" href="http://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">Pré-compilação de Site da Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="PrecompileApplication">
      <MemberSignature Language="C#" Value="public void PrecompileApplication (System.Web.Compilation.ClientBuildManagerCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PrecompileApplication(class System.Web.Compilation.ClientBuildManagerCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrecompileApplication (callback As ClientBuildManagerCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PrecompileApplication(System::Web::Compilation::ClientBuildManagerCallback ^ callback);" />
      <MemberSignature Language="F#" Value="member this.PrecompileApplication : System.Web.Compilation.ClientBuildManagerCallback -&gt; unit" Usage="clientBuildManager.PrecompileApplication callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Web.Compilation.ClientBuildManagerCallback" />
      </Parameters>
      <Docs>
        <param name="callback">Um <see cref="T:System.Web.Compilation.ClientBuildManagerCallback" /> que contém o método a chamar ao relatar o resultado da compilação.</param>
        <summary>Pré-compila um aplicativo ASP.NET e fornece um método de retorno de chamada para receber informações de status sobre o build.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET oferece suporte a três formas de pré-compilação. Um formulário permite a pré-compilação in-loco de um aplicativo ASP.NET. Neste formulário, o site é implantado para produção e, em seguida, pré-compilado, que elimina a necessidade de compilar o site dinamicamente quando for visitado pela primeira vez por um usuário. O primeiro usuário do site não terão o atraso normalmente encontrado em um site que é compilado dinamicamente. O `callback` parâmetro contém o método a chamar ao relatar o resultado da compilação.  
  
 As duas outras formas de pré-compilação são usadas para implantação. Em ambas as formas, um layout do site é gerado que podem ser implantados em um computador de produção. Uma dessas formas inclui as páginas de marcação assim alguma quantidade de atualização pode ser executada no site compilado. A outra forma não contém as páginas de marcação e, portanto, não pode ser atualizada sem recompilar o site original. Nenhum código-fonte é implantado no ambiente de destino em qualquer uma destas formas de pré-compilação.  
  
 O aplicativo para pré-compilar é definido por meio de <xref:System.Web.Compilation.ClientBuildManager> construtor. O <xref:System.Web.Compilation.ClientBuildManagerParameter> objeto do <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> construtor define qual das três formas de pré-compilação para executar.  
  
 Um desenvolvedor pode pré-compilar um site da Web com o `aspnet_compiler` ferramenta de linha de comando ou chamando o <xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A> método.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.Compilation.ClientBuildManager.#ctor" />
        <altmember cref="T:System.Web.Compilation.ClientBuildManagerCallback" />
        <related type="Article" href="http://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">Pré-compilação de Site da Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="PrecompileApplication">
      <MemberSignature Language="C#" Value="public void PrecompileApplication (System.Web.Compilation.ClientBuildManagerCallback callback, bool forceCleanBuild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PrecompileApplication(class System.Web.Compilation.ClientBuildManagerCallback callback, bool forceCleanBuild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrecompileApplication (callback As ClientBuildManagerCallback, forceCleanBuild As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PrecompileApplication(System::Web::Compilation::ClientBuildManagerCallback ^ callback, bool forceCleanBuild);" />
      <MemberSignature Language="F#" Value="member this.PrecompileApplication : System.Web.Compilation.ClientBuildManagerCallback * bool -&gt; unit" Usage="clientBuildManager.PrecompileApplication (callback, forceCleanBuild)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Web.Compilation.ClientBuildManagerCallback" />
        <Parameter Name="forceCleanBuild" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="callback">Um <see cref="T:System.Web.Compilation.ClientBuildManagerCallback" /> que contém o método a chamar ao relatar o resultado da compilação.</param>
        <param name="forceCleanBuild">
          <see langword="true" /> para executar um build limpo, que primeiro exclui todos os objeto e arquivos intermediários; <see langword="false" /> para recompilar somente os arquivos que foram alterados. Defina como true se há uma chance de que uma dependência pode não ser capturada pelo ambiente de build.</param>
        <summary>Pré-compila um aplicativo ASP.NET e fornece um método de retorno de chamada para receber informações de status sobre o build e indica se um build limpo deve ou não ser criado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET oferece suporte a três formas de pré-compilação. Um formulário permite a pré-compilação in-loco de um aplicativo ASP.NET. Neste formulário, o site é implantado para produção e, em seguida, pré-compilado, que elimina a necessidade de compilar o site dinamicamente quando for visitado pela primeira vez por um usuário. O primeiro usuário do site não terão o atraso normalmente encontrado em um site que é compilado dinamicamente. O `callback` parâmetro contém o método a chamar ao relatar o resultado da compilação.  
  
 As duas outras formas de pré-compilação são usadas para implantação. Em ambas as formas, um layout do site é gerado que podem ser implantados em um computador de produção. Uma dessas formas inclui as páginas de marcação assim alguma quantidade de atualização pode ser executada no site compilado. A outra forma não contém as páginas de marcação e, portanto, não pode ser atualizada sem recompilar o site original. Nenhum código-fonte é implantado no ambiente de destino em qualquer uma destas formas de pré-compilação.  
  
 O aplicativo para pré-compilar é definido por meio de <xref:System.Web.Compilation.ClientBuildManager> construtor. O <xref:System.Web.Compilation.ClientBuildManagerParameter> objeto do <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> construtor define qual das três formas de pré-compilação para executar.  
  
 Um desenvolvedor pode pré-compilar um site da Web com o `aspnet_compiler` ferramenta de linha de comando ou chamando o <xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A> método.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <altmember cref="Overload:System.Web.Compilation.ClientBuildManager.#ctor" />
        <altmember cref="T:System.Web.Compilation.ClientBuildManagerCallback" />
        <related type="Article" href="http://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">Pré-compilação de Site da Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Encerra o aplicativo ASP.NET atual.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="http://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">Pré-compilação de Site da Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Unload">
      <MemberSignature Language="C#" Value="public bool Unload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Unload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.Unload" />
      <MemberSignature Language="VB.NET" Value="Public Function Unload () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Unload();" />
      <MemberSignature Language="F#" Value="member this.Unload : unit -&gt; bool" Usage="clientBuildManager.Unload " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Descarrega o domínio do aplicativo para compilar aplicativos Web ASP.NET.</summary>
        <returns>
          <see langword="true" /> se o domínio do aplicativo é descarregado; caso contrário, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="http://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">Pré-compilação de Site da Web ASP.NET</related>
      </Docs>
    </Member>
  </Members>
</Type>