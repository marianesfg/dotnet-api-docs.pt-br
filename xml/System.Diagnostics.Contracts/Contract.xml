<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Contract.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac518ccddeb7c646934cfcc1b40673135a0998cbc53.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">18ccddeb7c646934cfcc1b40673135a0998cbc53</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Contracts.Contract">
          <source>Contains static methods for representing program contracts such as preconditions, postconditions, and object invariants.</source>
          <target state="translated">Contém métodos estáticos para representação de contratos de programa, como pré-condições, pós-condições e invariáveis de objeto.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Contracts.Contract">
          <source>Code contract classes let you specify preconditions, postconditions, and object invariants in your code.</source>
          <target state="translated">Classes de contrato de código permitem que você especificar pré-condições, pós-condições e invariáveis de objeto em seu código.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Contracts.Contract">
          <source>Preconditions are requirements that must be met when entering a method or property.</source>
          <target state="translated">As pré-condições são requisitos que devem ser atendidos ao inserir um método ou uma propriedade.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Contracts.Contract">
          <source>Postconditions describe expectations at the time the method or property code exits.</source>
          <target state="translated">As pós-condições descrevem as expectativas no momento em que o código do método ou da propriedade é fechado.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Contracts.Contract">
          <source>Object invariants describe the expected state for a class that has no condition problems.</source>
          <target state="translated">Invariáveis de objeto descrevem o estado esperado para uma classe que não tenha nenhum problema de condição.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Contracts.Contract">
          <source>For more information about preconditions, postconditions, and object invariants, see <bpt id="p1">[</bpt>Code Contracts<ept id="p1">](~/docs/framework/debug-trace-profile/code-contracts.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre como pré-condições, pós-condições e invariáveis de objeto, consulte <bpt id="p1">[</bpt>contratos de código<ept id="p1">](~/docs/framework/debug-trace-profile/code-contracts.md)</ept>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Contracts.Contract">
          <source>For tools and detailed instructions for using code contracts, see <bpt id="p1">[</bpt>Code Contracts<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=152461)</ept> on the MSDN DevLabs Web site.</source>
          <target state="translated">Para obter ferramentas e instruções detalhadas sobre como usar contratos de código, consulte <bpt id="p1">[</bpt>Contratos de código<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=152461)</ept> no site do DevLabs no MSDN.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Contracts.Contract">
          <source>You must use a binary rewriter to insert run-time enforcement of contracts.</source>
          <target state="translated">Você deve usar um regravador binário para inserir a imposição de tempo de execução de contratos.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Contracts.Contract">
          <source>Otherwise, contracts such as the <ph id="ph1">&lt;xref:System.Diagnostics.Contracts.Contract.Ensures%2A?displayProperty=nameWithType&gt;</ph> method can only be tested statically and will not throw exceptions during run time if a contract is violated.</source>
          <target state="translated">Caso contrário, contratos, como o <ph id="ph1">&lt;xref:System.Diagnostics.Contracts.Contract.Ensures%2A?displayProperty=nameWithType&gt;</ph> método só pode ser testado estaticamente e não gerar exceções em tempo de execução se um contrato for violado.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Contracts.Contract">
          <source>You can download the binary rewriter CCRewrite from <bpt id="p1">[</bpt>Code Contracts<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=152461)</ept> on the MSDN DevLabs Web site.</source>
          <target state="translated">Você pode baixar o regravador binário CCRewrite de <bpt id="p1">[</bpt>contratos de código<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=152461)</ept> no site do MSDN DevLabs.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Contracts.Contract">
          <source>CCRewrite comes with a Visual Studio add-in that enables you to activate run-time contract enforcement from the project <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept> page.</source>
          <target state="translated">CCRewrite vem com um suplemento do Visual Studio que permite que você ative a imposição de contrato de tempo de execução do projeto <bpt id="p1">**</bpt>propriedades<ept id="p1">**</ept> página.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Contracts.Contract">
          <source>The binary rewriter and the Visual Studio add-in do not ship with <ph id="ph1">[!INCLUDE[vs_dev10_long](~/includes/vs-dev10-long-md.md)]</ph> or the Windows SDK.</source>
          <target state="translated">O regravador binário e o suplemento do Visual Studio não são fornecidos com <ph id="ph1">[!INCLUDE[vs_dev10_long](~/includes/vs-dev10-long-md.md)]</ph> ou o SDK do Windows.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Contracts.Contract">
          <source>In debug builds, performs a run-time test for a specified condition.</source>
          <target state="translated">Em builds de depuração, realiza um teste de tempo de execução para uma condição específica.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.Assert(System.Boolean)">
          <source>The conditional expression to test.</source>
          <target state="translated">A expressão condicional a ser testada.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.Assert(System.Boolean)">
          <source>Checks for a condition; if the condition is <ph id="ph1">&lt;see langword="false" /&gt;</ph>, follows the escalation policy set for the analyzer.</source>
          <target state="translated">Verifica uma condição; se a condição for <ph id="ph1">&lt;see langword="false" /&gt;</ph>, seguirá a política de escalonamento definida para o analisador.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Assert(System.Boolean)">
          <source>The default escalation policy is to notify the attached debugger about a contract failure or to display an <bpt id="p1">**</bpt>Assert<ept id="p1">**</ept> dialog box if a debugger is not attached.</source>
          <target state="translated">A política de escalonamento de bloqueios padrão é para notificar o depurador anexado sobre uma falha de contrato ou para exibir um <bpt id="p1">**</bpt>Assert<ept id="p1">**</ept> caixa de diálogo se um depurador não está anexado.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Assert(System.Boolean)">
          <source>Optionally, the analyzer can be instructed to throw an exception.</source>
          <target state="translated">Opcionalmente, o analisador pode ser instruído para lançar uma exceção.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.Assert(System.Boolean,System.String)">
          <source>The conditional expression to test.</source>
          <target state="translated">A expressão condicional a ser testada.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.Assert(System.Boolean,System.String)">
          <source>A message to display if the condition is not met.</source>
          <target state="translated">Uma mensagem a ser exibida se a condição não for atendida.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.Assert(System.Boolean,System.String)">
          <source>Checks for a condition; if the condition is <ph id="ph1">&lt;see langword="false" /&gt;</ph>, follows the escalation policy set by the analyzer and displays the specified message.</source>
          <target state="translated">Verifica uma condição; se a condição for <ph id="ph1">&lt;see langword="false" /&gt;</ph>, seguirá a política de escalonamento definida pelo analisador e exibirá a mensagem especificada.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Assert(System.Boolean,System.String)">
          <source>The default escalation policy is to notify the attached debugger about a contract failure or to display an <bpt id="p1">**</bpt>Assert<ept id="p1">**</ept> dialog box if a debugger is not attached.</source>
          <target state="translated">A política de escalonamento de bloqueios padrão é para notificar o depurador anexado sobre uma falha de contrato ou para exibir um <bpt id="p1">**</bpt>Assert<ept id="p1">**</ept> caixa de diálogo se um depurador não está anexado.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Assert(System.Boolean,System.String)">
          <source>Optionally, the analyzer can be instructed to throw an exception.</source>
          <target state="translated">Opcionalmente, o analisador pode ser instruído para lançar uma exceção.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Assert(System.Boolean,System.String)">
          <source>The <ph id="ph1">`userMessage`</ph> parameter is passed to the debugger output.</source>
          <target state="translated">O <ph id="ph1">`userMessage`</ph> parâmetro é passado para a saída do depurador.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Assert(System.Boolean,System.String)">
          <source>If <ph id="ph1">`userMessage`</ph> is not a constant string literal, tools may not be able to read it.</source>
          <target state="translated">Se <ph id="ph1">`userMessage`</ph> não é uma cadeia de caracteres constante literal, ferramentas podem não ser capazes de lê-lo.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Contracts.Contract">
          <source>Instructs code analysis tools to assume that a condition is <ph id="ph1">&lt;see langword="true" /&gt;</ph>, even if it cannot be statically proven to always be <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Instrui as ferramentas de análise de código a pressupor que a condição é <ph id="ph1">&lt;see langword="true" /&gt;</ph>, mesmo que ela não possa ser estaticamente comprovada ser sempre <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.Assume(System.Boolean)">
          <source>The conditional expression to assume <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">A expressão condicional que assumirá <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.Assume(System.Boolean)">
          <source>Instructs code analysis tools to assume that the specified condition is <ph id="ph1">&lt;see langword="true" /&gt;</ph>, even if it cannot be statically proven to always be <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Instrui as ferramentas de análise de código a assumir que a condição especificada é <ph id="ph1">&lt;see langword="true" /&gt;</ph>, mesmo que ela não possa ser estaticamente comprovada ser sempre <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Assume(System.Boolean)">
          <source>At run time, using this method is equivalent to using the <ph id="ph1">&lt;xref:System.Diagnostics.Contracts.Contract.Assert%28System.Boolean%29&gt;</ph> method.</source>
          <target state="translated">Em tempo de execução usando esse método é equivalente a usar o <ph id="ph1">&lt;xref:System.Diagnostics.Contracts.Contract.Assert%28System.Boolean%29&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.Assume(System.Boolean,System.String)">
          <source>The conditional expression to assume <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">A expressão condicional que assumirá <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.Assume(System.Boolean,System.String)">
          <source>The message to post if the assumption fails.</source>
          <target state="translated">A mensagem a ser postada se a pressuposição falhar.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.Assume(System.Boolean,System.String)">
          <source>Instructs code analysis tools to assume that a condition is <ph id="ph1">&lt;see langword="true" /&gt;</ph>, even if it cannot be statically proven to always be <ph id="ph2">&lt;see langword="true" /&gt;</ph>, and displays a message if the assumption fails.</source>
          <target state="translated">Instrui as ferramentas de análise de código a pressupor que a condição é <ph id="ph1">&lt;see langword="true" /&gt;</ph>, mesmo que ela não possa ser estaticamente comprovada ser sempre <ph id="ph2">&lt;see langword="true" /&gt;</ph> e exibe uma mensagem se a pressuposição falhar.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Assume(System.Boolean,System.String)">
          <source>If <ph id="ph1">`userMessage`</ph> is not a constant string literal, the contract may not be understood by tools.</source>
          <target state="translated">Se <ph id="ph1">`userMessage`</ph> não é uma cadeia de caracteres constante literal, o contrato não pode ser compreendido pelo ferramentas.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Assume(System.Boolean,System.String)">
          <source>At run time, using this method is equivalent to using the <ph id="ph1">&lt;xref:System.Diagnostics.Contracts.Contract.Assert%28System.Boolean%2CSystem.String%29&gt;</ph> method.</source>
          <target state="translated">Em tempo de execução usando esse método é equivalente a usar o <ph id="ph1">&lt;xref:System.Diagnostics.Contracts.Contract.Assert%28System.Boolean%2CSystem.String%29&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="E:System.Diagnostics.Contracts.Contract.ContractFailed">
          <source>Occurs when a contract fails.</source>
          <target state="translated">Ocorre quando um contrato falha.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Contracts.Contract.ContractFailed">
          <source>The event information for this event is supplied by the <ph id="ph1">&lt;xref:System.Diagnostics.Contracts.ContractFailedEventArgs?displayProperty=nameWithType&gt;</ph> object that is passed to the event handler.</source>
          <target state="translated">As informações de evento para esse evento são fornecidas pelo <ph id="ph1">&lt;xref:System.Diagnostics.Contracts.ContractFailedEventArgs?displayProperty=nameWithType&gt;</ph> objeto que é passado para o manipulador de eventos.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Contracts.Contract.ContractFailed">
          <source>This event notifies a managed application environment such as an interactive interpreter or a Web browser host that a contract has failed.</source>
          <target state="translated">Esse evento notifica um ambiente de aplicativo gerenciado, como um intérprete interativo ou um host de navegador da Web que um contrato de falha.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Contracts.Contract.ContractFailed">
          <source>Before doing so, it will raise an event that an application can handle as it sees fit.</source>
          <target state="translated">Antes de fazer isso, ele gerará um evento que um aplicativo pode manipular conforme desejar.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Contracts.Contract.ContractFailed">
          <source>For example, if code is being run in a testing framework, you can log a test failure and then end the test.</source>
          <target state="translated">Por exemplo, se o código está sendo executado em uma estrutura de teste, uma falha de teste de log e encerre o teste.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Contracts.Contract.ContractFailed">
          <source>The default implementation of the <ph id="ph1">&lt;xref:System.Diagnostics.Contracts.Internal.ContractHelper.RaiseContractFailedEvent%2A&gt;</ph> method in the .NET Framework class library is to call each handler that is registered with the <ph id="ph2">&lt;xref:System.Diagnostics.Contracts.Contract.ContractFailed&gt;</ph> event.</source>
          <target state="translated">A implementação padrão da <ph id="ph1">&lt;xref:System.Diagnostics.Contracts.Internal.ContractHelper.RaiseContractFailedEvent%2A&gt;</ph> método na biblioteca de classes do .NET Framework é chamar cada manipulador registrado com o <ph id="ph2">&lt;xref:System.Diagnostics.Contracts.Contract.ContractFailed&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Contracts.Contract.ContractFailed">
          <source>Exceptions thrown by handlers are ignored, but each handler can indicate whether the failure is handled by calling the <ph id="ph1">&lt;xref:System.Diagnostics.Contracts.ContractFailedEventArgs.SetHandled%2A&gt;</ph> method for the event arguments.</source>
          <target state="translated">Exceções lançadas por manipuladores são ignoradas, mas cada manipulador pode indicar se a falha é tratada chamando o <ph id="ph1">&lt;xref:System.Diagnostics.Contracts.ContractFailedEventArgs.SetHandled%2A&gt;</ph> método para os argumentos do evento.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Contracts.Contract.ContractFailed">
          <source>If any handler sets the failure as handled, the method returns <ph id="ph1">`null`</ph> and no further action is taken.</source>
          <target state="translated">Se qualquer manipulador define a falha como manipulados, o método retorna <ph id="ph1">`null`</ph> e nenhuma outra ação é executada.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Contracts.Contract.ContractFailed">
          <source>Alternatively, handlers can call the <ph id="ph1">&lt;xref:System.Diagnostics.Contracts.ContractFailedEventArgs.SetUnwind%2A&gt;</ph> method to instruct the code to unwind.</source>
          <target state="translated">Como alternativa, manipuladores podem chamar o <ph id="ph1">&lt;xref:System.Diagnostics.Contracts.ContractFailedEventArgs.SetUnwind%2A&gt;</ph> método para instruir o código de desenrolamento.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Contracts.Contract.ContractFailed">
          <source>In that case, an exception is thrown after all handlers have executed.</source>
          <target state="translated">Nesse caso, uma exceção é lançada após todos os manipuladores tenham sido executadas.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Contracts.Contract.ContractFailed">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">requer confiança total para o chamador imediato.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Diagnostics.Contracts.Contract.ContractFailed">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Este membro não pode ser usado pelo código transparente ou parcialmente confiável.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.EndContractBlock">
          <source>Marks the end of the contract section when a method's contracts contain only preconditions in the <ph id="ph1">&lt;see langword="if" /&gt;</ph><ph id="ph2">-</ph><ph id="ph3">&lt;see langword="then" /&gt;</ph><ph id="ph4">-</ph><ph id="ph5">&lt;see langword="throw" /&gt;</ph> form.</source>
          <target state="translated">Marca o fim da seção do contrato quando os contratos de um método contêm apenas precondições no formato <ph id="ph1">&lt;see langword="if" /&gt;</ph><ph id="ph2">-</ph><ph id="ph3">&lt;see langword="then" /&gt;</ph><ph id="ph4">-</ph><ph id="ph5">&lt;see langword="throw" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.EndContractBlock">
          <source>Most code already contains some parameter validation in the form of <ph id="ph1">`if`</ph><ph id="ph2">-</ph><ph id="ph3">`then`</ph><ph id="ph4">-</ph><ph id="ph5">`throw`</ph> code.</source>
          <target state="translated">Grande parte do código já contém alguma validação de parâmetro na forma de <ph id="ph1">`if`</ph> <ph id="ph2">-</ph> <ph id="ph3">`then`</ph> <ph id="ph4">-</ph> <ph id="ph5">`throw`</ph> código.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.EndContractBlock">
          <source>The contract tools recognize <ph id="ph1">`if`</ph><ph id="ph2">-</ph><ph id="ph3">`then`</ph><ph id="ph4">-</ph><ph id="ph5">`throw`</ph> statements as preconditions when the statements appear first inside a method, and the entire set of such statements is followed by an explicit <ph id="ph6">&lt;xref:System.Diagnostics.Contracts.Contract&gt;</ph> method call, such as a <ph id="ph7">&lt;xref:System.Diagnostics.Contracts.Contract.Requires%2A&gt;</ph>, <ph id="ph8">&lt;xref:System.Diagnostics.Contracts.Contract.Ensures%2A&gt;</ph>, <ph id="ph9">&lt;xref:System.Diagnostics.Contracts.Contract.EnsuresOnThrow%2A&gt;</ph>, or <ph id="ph10">&lt;xref:System.Diagnostics.Contracts.Contract.EndContractBlock%2A&gt;</ph>.</source>
          <target state="translated">As ferramentas de contrato reconhecem <ph id="ph1">`if`</ph> <ph id="ph2">-</ph> <ph id="ph3">`then`</ph> <ph id="ph4">-</ph> <ph id="ph5">`throw`</ph> instruções, como pré-condições quando as instruções aparecem primeira dentro de um método e o conjunto inteiro de tais instruções é seguido por uma explícita <ph id="ph6">&lt;xref:System.Diagnostics.Contracts.Contract&gt;</ph> da chamada do método, como um <ph id="ph7">&lt;xref:System.Diagnostics.Contracts.Contract.Requires%2A&gt;</ph>, <ph id="ph8">&lt;xref:System.Diagnostics.Contracts.Contract.Ensures%2A&gt;</ph>, <ph id="ph9">&lt;xref:System.Diagnostics.Contracts.Contract.EnsuresOnThrow%2A&gt;</ph>, ou <ph id="ph10">&lt;xref:System.Diagnostics.Contracts.Contract.EndContractBlock%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.EndContractBlock">
          <source>When <ph id="ph1">`if`</ph><ph id="ph2">-</ph><ph id="ph3">`then`</ph><ph id="ph4">-</ph><ph id="ph5">`throw`</ph> statements appear in this form, the contract tools recognize them as legacy-require statements.</source>
          <target state="translated">Quando <ph id="ph1">`if`</ph> <ph id="ph2">-</ph> <ph id="ph3">`then`</ph> <ph id="ph4">-</ph> <ph id="ph5">`throw`</ph> instruções aparecem neste formulário, as ferramentas de contrato reconhecem-los como herdado-requerem instruções.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.EndContractBlock">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Contracts.Contract.EndContractBlock%2A&gt;</ph> form is used only if no other contracts follow the <ph id="ph2">`if`</ph><ph id="ph3">-</ph><ph id="ph4">`then`</ph><ph id="ph5">-</ph><ph id="ph6">`throw`</ph> sequences, but they should still be tagged as legacy-requires.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Diagnostics.Contracts.Contract.EndContractBlock%2A&gt;</ph> formulário é usado somente se nenhum outro contrato siga o <ph id="ph2">`if`</ph> <ph id="ph3">-</ph> <ph id="ph4">`then`</ph> <ph id="ph5">-</ph> <ph id="ph6">`throw`</ph> sequências, mas eles ainda devem ser marcadas como herdado-requer.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Contracts.Contract">
          <source>Specifies a postcondition contract for the enclosing method or property.</source>
          <target state="translated">Especifica um contrato de pós-condição para o método ou a propriedade delimitadora.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.Ensures(System.Boolean)">
          <source>The conditional expression to test.</source>
          <target state="translated">A expressão condicional a ser testada.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.Ensures(System.Boolean)">
          <source>The expression may include <ph id="ph1">&lt;see cref="M:System.Diagnostics.Contracts.Contract.OldValue``1(``0)" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.Diagnostics.Contracts.Contract.ValueAtReturn``1(``0@)" /&gt;</ph>, and <ph id="ph3">&lt;see cref="M:System.Diagnostics.Contracts.Contract.Result``1" /&gt;</ph> values.</source>
          <target state="translated">A expressão pode incluir os valores de <ph id="ph1">&lt;see cref="M:System.Diagnostics.Contracts.Contract.OldValue``1(``0)" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.Diagnostics.Contracts.Contract.ValueAtReturn``1(``0@)" /&gt;</ph> e <ph id="ph3">&lt;see cref="M:System.Diagnostics.Contracts.Contract.Result``1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.Ensures(System.Boolean)">
          <source>Specifies a postcondition contract for the enclosing method or property.</source>
          <target state="translated">Especifica um contrato de pós-condição para o método ou a propriedade delimitadora.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Ensures(System.Boolean)">
          <source>The <ph id="ph1">`condition`</ph> parameter specifies a postcondition that is expected to be <ph id="ph2">`true`</ph> when the enclosing method or property returns normally.</source>
          <target state="translated">O <ph id="ph1">`condition`</ph> parâmetro especifica uma pós-condição que deve ser <ph id="ph2">`true`</ph> quando o método ou propriedade de circunscrição retorna normalmente.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Ensures(System.Boolean)">
          <source>This method call must be at the beginning of a method or property, before any other code.</source>
          <target state="translated">Esta chamada de método deve ser no início de um método ou propriedade, antes de qualquer outro código.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Ensures(System.Boolean)">
          <source>You must use the binary rewriter (available at <bpt id="p1">[</bpt>Code Contracts<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=152461)</ept> on the MSDN DevLabs Web site) for run-time enforcement of this postcondition.</source>
          <target state="translated">Você deve usar o regravador binário (disponível em <bpt id="p1">[</bpt>contratos de código<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=152461)</ept> no site do MSDN DevLabs) para a imposição de tempo de execução desse pós-condição.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Ensures(System.Boolean)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Diagnostics.Contracts.Contract.Ensures%2A&gt;</ph> method to ensure that an expected value is returned.</source>
          <target state="translated">O exemplo a seguir mostra como usar o <ph id="ph1">&lt;xref:System.Diagnostics.Contracts.Contract.Ensures%2A&gt;</ph> método para garantir que um valor esperado é retornado.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Ensures(System.Boolean)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Diagnostics.Contracts.ContractClassAttribute&gt;</ph> class.</source>
          <target state="translated">Este exemplo de código é parte de um exemplo maior fornecido para a <ph id="ph1">&lt;xref:System.Diagnostics.Contracts.ContractClassAttribute&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.Ensures(System.Boolean,System.String)">
          <source>The conditional expression to test.</source>
          <target state="translated">A expressão condicional a ser testada.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.Ensures(System.Boolean,System.String)">
          <source>The expression may include <ph id="ph1">&lt;see cref="M:System.Diagnostics.Contracts.Contract.OldValue``1(``0)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Diagnostics.Contracts.Contract.Result``1" /&gt;</ph> values.</source>
          <target state="translated">A expressão pode incluir os valores de <ph id="ph1">&lt;see cref="M:System.Diagnostics.Contracts.Contract.OldValue``1(``0)" /&gt;</ph> e <ph id="ph2">&lt;see cref="M:System.Diagnostics.Contracts.Contract.Result``1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.Ensures(System.Boolean,System.String)">
          <source>The message to display if the expression is not <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Uma mensagem a ser exibida se a expressão não for <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.Ensures(System.Boolean,System.String)">
          <source>Specifies a postcondition contract for a provided exit condition and a message to display if the condition is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Especifica um contrato de pós-condição para uma condição de saída fornecida e uma mensagem a ser exibida se a condição for <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Ensures(System.Boolean,System.String)">
          <source>The <ph id="ph1">`condition`</ph> parameter specifies a postcondition that is expected to be <ph id="ph2">`true`</ph> when the enclosing method or property returns normally.</source>
          <target state="translated">O <ph id="ph1">`condition`</ph> parâmetro especifica uma pós-condição que deve ser <ph id="ph2">`true`</ph> quando o método ou propriedade de circunscrição retorna normalmente.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Ensures(System.Boolean,System.String)">
          <source>This method call must be at the beginning of a method or property, before any other code.</source>
          <target state="translated">Esta chamada de método deve ser no início de um método ou propriedade, antes de qualquer outro código.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Ensures(System.Boolean,System.String)">
          <source>This contract is exposed to clients; therefore, it must only reference members that are at least as visible as the enclosing method.</source>
          <target state="translated">Este contrato é exposto aos clientes; Portanto, ele deve ser somente os membros de referência são pelo menos tão visíveis como o método de delimitador.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Ensures(System.Boolean,System.String)">
          <source>You must use the binary rewriter (available at <bpt id="p1">[</bpt>Code Contracts<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=152461)</ept> on the MSDN DevLabs Web site) for run-time enforcement of this postcondition.</source>
          <target state="translated">Você deve usar o regravador binário (disponível em <bpt id="p1">[</bpt>contratos de código<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=152461)</ept> no site do MSDN DevLabs) para a imposição de tempo de execução desse pós-condição.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Ensures(System.Boolean,System.String)">
          <source>If <ph id="ph1">`userMessage`</ph> is not a constant string literal, the contract may not be understood by tools.</source>
          <target state="translated">Se <ph id="ph1">`userMessage`</ph> não é uma cadeia de caracteres constante literal, o contrato não pode ser compreendido pelo ferramentas.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Contracts.Contract">
          <source>Specifies a postcondition contract for the enclosing method or property based on the provided exception and condition.</source>
          <target state="translated">Especifica um contrato de pós-condição para o método ou a propriedade delimitadora, com base na exceção e na condição fornecidas.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.EnsuresOnThrow``1(System.Boolean)">
          <source>The type of exception that invokes the postcondition check.</source>
          <target state="translated">O tipo de exceção que chama a verificação de postcondition.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.EnsuresOnThrow``1(System.Boolean)">
          <source>The conditional expression to test.</source>
          <target state="translated">A expressão condicional a ser testada.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.EnsuresOnThrow``1(System.Boolean)">
          <source>Specifies a postcondition contract for the enclosing method or property, based on the provided exception and condition.</source>
          <target state="translated">Especifica um contrato de pós-condição para o método ou a propriedade delimitadora, com base na exceção e na condição fornecidas.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.EnsuresOnThrow``1(System.Boolean)">
          <source>The <ph id="ph1">`condition`</ph> parameter specifies a postcondition that is expected to be <ph id="ph2">`true`</ph> when the enclosing method or property terminates abnormally and an exception of type <ph id="ph3">`TException`</ph> is thrown.</source>
          <target state="translated">O <ph id="ph1">`condition`</ph> parâmetro especifica uma pós-condição que deve ser <ph id="ph2">`true`</ph> quando o método ou propriedade de circunscrição termina de forma anormal e uma exceção do tipo <ph id="ph3">`TException`</ph> é gerada.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.EnsuresOnThrow``1(System.Boolean)">
          <source>This method call must be at the beginning of a method or property, before any other code.</source>
          <target state="translated">Esta chamada de método deve ser no início de um método ou propriedade, antes de qualquer outro código.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.EnsuresOnThrow``1(System.Boolean)">
          <source>This contract is exposed to clients; therefore, it must only reference members that are at least as visible as the enclosing method.</source>
          <target state="translated">Este contrato é exposto aos clientes; Portanto, ele deve ser somente os membros de referência são pelo menos tão visíveis como o método de delimitador.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.EnsuresOnThrow``1(System.Boolean)">
          <source>You must use the binary rewriter for run-time enforcement of this postcondition.</source>
          <target state="translated">Você deve usar o regravador binário para imposição de tempo de execução desse pós-condição.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.EnsuresOnThrow``1(System.Boolean,System.String)">
          <source>The type of exception that invokes the postcondition check.</source>
          <target state="translated">O tipo de exceção que chama a verificação de postcondition.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.EnsuresOnThrow``1(System.Boolean,System.String)">
          <source>The conditional expression to test.</source>
          <target state="translated">A expressão condicional a ser testada.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.EnsuresOnThrow``1(System.Boolean,System.String)">
          <source>The message to display if the expression is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">A mensagem a ser exibida se a expressão for <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.EnsuresOnThrow``1(System.Boolean,System.String)">
          <source>Specifies a postcondition contract and a message to display if the condition is <ph id="ph1">&lt;see langword="false" /&gt;</ph> for the enclosing method or property, based on the provided exception and condition.</source>
          <target state="translated">Especifica um contrato de pós-condição e uma mensagem a ser exibida se a condição for <ph id="ph1">&lt;see langword="false" /&gt;</ph> para o método ou a propriedade delimitadora, com base na exceção e na condição fornecidas.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.EnsuresOnThrow``1(System.Boolean,System.String)">
          <source>The <ph id="ph1">`condition`</ph> parameter specifies a postcondition that is expected to be <ph id="ph2">`true`</ph> when the enclosing method or property terminates abnormally and an exception of type <ph id="ph3">`TException`</ph> is thrown.</source>
          <target state="translated">O <ph id="ph1">`condition`</ph> parâmetro especifica uma pós-condição que deve ser <ph id="ph2">`true`</ph> quando o método ou propriedade de circunscrição termina de forma anormal e uma exceção do tipo <ph id="ph3">`TException`</ph> é gerada.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.EnsuresOnThrow``1(System.Boolean,System.String)">
          <source>The <ph id="ph1">`message`</ph> parameter specifies a message to display if the condition is <ph id="ph2">`false`</ph>.</source>
          <target state="translated">O <ph id="ph1">`message`</ph> parâmetro especifica uma mensagem a ser exibida se a condição for <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.EnsuresOnThrow``1(System.Boolean,System.String)">
          <source>This method call must be at the beginning of a method or property, before any other code.</source>
          <target state="translated">Esta chamada de método deve ser no início de um método ou propriedade, antes de qualquer outro código.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.EnsuresOnThrow``1(System.Boolean,System.String)">
          <source>This contract is exposed to clients; therefore, it must only reference members that are at least as visible as the enclosing method.</source>
          <target state="translated">Este contrato é exposto aos clientes; Portanto, ele deve ser somente os membros de referência são pelo menos tão visíveis como o método de delimitador.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.EnsuresOnThrow``1(System.Boolean,System.String)">
          <source>You must use the binary rewriter for run-time enforcement of this postcondition.</source>
          <target state="translated">Você deve usar o regravador binário para imposição de tempo de execução desse pós-condição.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.EnsuresOnThrow``1(System.Boolean,System.String)">
          <source>If <ph id="ph1">`userMessage`</ph> is not a constant string literal, the contract may not be understood by tools.</source>
          <target state="translated">Se <ph id="ph1">`userMessage`</ph> não é uma cadeia de caracteres constante literal, o contrato não pode ser compreendido pelo ferramentas.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.Exists(System.Int32,System.Int32,System.Predicate{System.Int32})">
          <source>The first integer to pass to <bpt id="p1">&lt;c&gt;</bpt>predicate<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O primeiro inteiro a passar para <bpt id="p1">&lt;c&gt;</bpt>predicado<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.Exists(System.Int32,System.Int32,System.Predicate{System.Int32})">
          <source>One more than the last integer to pass to <bpt id="p1">&lt;c&gt;</bpt>predicate<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Um a mais do que o último inteiro a passar para <bpt id="p1">&lt;c&gt;</bpt>predicado<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.Exists(System.Int32,System.Int32,System.Predicate{System.Int32})">
          <source>The function to evaluate for any value of the integer in the specified range.</source>
          <target state="translated">A função a ser avaliada para qualquer valor do inteiro no intervalo especificado.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.Exists(System.Int32,System.Int32,System.Predicate{System.Int32})">
          <source>Determines whether a specified test is true for any integer within a range of integers.</source>
          <target state="translated">Determina se um teste especificado é verdadeiro para qualquer inteiro dentro do intervalo de inteiros.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.Exists(System.Int32,System.Int32,System.Predicate{System.Int32})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="predicate" /&gt;</ph> returns <ph id="ph3">&lt;see langword="true" /&gt;</ph> for any integer starting from <ph id="ph4">&lt;paramref name="fromInclusive" /&gt;</ph> to <ph id="ph5">&lt;paramref name="toExclusive" /&gt;</ph> - 1.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;paramref name="predicate" /&gt;</ph> retornar <ph id="ph3">&lt;see langword="true" /&gt;</ph> para qualquer inteiro a partir de <ph id="ph4">&lt;paramref name="fromInclusive" /&gt;</ph> para <ph id="ph5">&lt;paramref name="toExclusive" /&gt;</ph> - 1.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Exists(System.Int32,System.Int32,System.Predicate{System.Int32})">
          <source>The <ph id="ph1">`toExclusive`</ph> parameter is one more than the last integer to facilitate using the length of a range of integers starting at 0.</source>
          <target state="translated">O <ph id="ph1">`toExclusive`</ph> parâmetro é um mais do que o último inteiro para facilitar a usar o tamanho de um intervalo de inteiros, iniciando em 0.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Exists(System.Int32,System.Int32,System.Predicate{System.Int32})">
          <source>For example, it would be set to 5 for integers 0 through 4.</source>
          <target state="translated">Por exemplo, ele deve ser definido como 5 para inteiros de 0 a 4.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.Exists(System.Int32,System.Int32,System.Predicate{System.Int32})">
          <source><ph id="ph1">&lt;paramref name="predicate" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="predicate" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.Exists(System.Int32,System.Int32,System.Predicate{System.Int32})">
          <source><ph id="ph1">&lt;paramref name="toExclusive" /&gt;</ph> is less than <ph id="ph2">&lt;paramref name="fromInclusive" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="toExclusive" /&gt;</ph> é menor que <ph id="ph2">&lt;paramref name="fromInclusive" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Exists``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0})">
          <source>The type that is contained in <bpt id="p1">&lt;c&gt;</bpt>collection<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo que está contido em <bpt id="p1">&lt;c&gt;</bpt>coleção<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.Exists``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0})">
          <source>The collection from which elements of type <bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> will be drawn to pass to <bpt id="p2">&lt;c&gt;</bpt>predicate<ept id="p2">&lt;/c&gt;</ept>.</source>
          <target state="translated">A coleção da qual os elementos do tipo <bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> serão desenhados para serem passados para <bpt id="p2">&lt;c&gt;</bpt>predicado<ept id="p2">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.Exists``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0})">
          <source>The function to evaluate for an element in <bpt id="p1">&lt;c&gt;</bpt>collection<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">A função a ser avaliada para um elemento na <bpt id="p1">&lt;c&gt;</bpt>coleção<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.Exists``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0})">
          <source>Determines whether an element within a collection of elements exists within a function.</source>
          <target state="translated">Determina se um elemento em uma coleção de elementos existe dentro de uma função.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.Exists``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if and only if <ph id="ph2">&lt;paramref name="predicate" /&gt;</ph> returns <ph id="ph3">&lt;see langword="true" /&gt;</ph> for any element of type <ph id="ph4">&lt;paramref name="T" /&gt;</ph> in <ph id="ph5">&lt;paramref name="collection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se e somente se <ph id="ph2">&lt;paramref name="predicate" /&gt;</ph> retornar <ph id="ph3">&lt;see langword="true" /&gt;</ph> para qualquer elemento do tipo <ph id="ph4">&lt;paramref name="T" /&gt;</ph> em <ph id="ph5">&lt;paramref name="collection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.Exists``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0})">
          <source><ph id="ph1">&lt;paramref name="collection" /&gt;</ph> or <ph id="ph2">&lt;paramref name="predicate" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collection" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="predicate" /&gt;</ph> é <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.ForAll(System.Int32,System.Int32,System.Predicate{System.Int32})">
          <source>The first integer to pass to <bpt id="p1">&lt;c&gt;</bpt>predicate<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O primeiro inteiro a passar para <bpt id="p1">&lt;c&gt;</bpt>predicado<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.ForAll(System.Int32,System.Int32,System.Predicate{System.Int32})">
          <source>One more than the last integer to pass to <bpt id="p1">&lt;c&gt;</bpt>predicate<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Um a mais do que o último inteiro a passar para <bpt id="p1">&lt;c&gt;</bpt>predicado<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.ForAll(System.Int32,System.Int32,System.Predicate{System.Int32})">
          <source>The function to evaluate for the existence of the integers in the specified range.</source>
          <target state="translated">A função para avaliar a existência de inteiros no intervalo especificado.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.ForAll(System.Int32,System.Int32,System.Predicate{System.Int32})">
          <source>Determines whether a particular condition is valid for all integers in a specified range.</source>
          <target state="translated">Determina se uma determinada condição é válida para todos os números inteiros em um intervalo especificado.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.ForAll(System.Int32,System.Int32,System.Predicate{System.Int32})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="predicate" /&gt;</ph> returns <ph id="ph3">&lt;see langword="true" /&gt;</ph> for all integers starting from <ph id="ph4">&lt;paramref name="fromInclusive" /&gt;</ph> to <ph id="ph5">&lt;paramref name="toExclusive" /&gt;</ph> - 1.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;paramref name="predicate" /&gt;</ph> retornar <ph id="ph3">&lt;see langword="true" /&gt;</ph> para todos os inteiros a partir de <ph id="ph4">&lt;paramref name="fromInclusive" /&gt;</ph> para <ph id="ph5">&lt;paramref name="toExclusive" /&gt;</ph> ‑ 1.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.ForAll(System.Int32,System.Int32,System.Predicate{System.Int32})">
          <source>The <ph id="ph1">`toExclusive`</ph> parameter is one more than the last integer to facilitate using the length of a range of integers starting at 0.</source>
          <target state="translated">O <ph id="ph1">`toExclusive`</ph> parâmetro é um mais do que o último inteiro para facilitar a usar o tamanho de um intervalo de inteiros, iniciando em 0.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.ForAll(System.Int32,System.Int32,System.Predicate{System.Int32})">
          <source>For example, it would be set to 5 for integers 0 through 4.</source>
          <target state="translated">Por exemplo, ele deve ser definido como 5 para inteiros de 0 a 4.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.ForAll(System.Int32,System.Int32,System.Predicate{System.Int32})">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Diagnostics.Contracts.Contract.ForAll%2A&gt;</ph> method to determine whether an array has a null element.</source>
          <target state="translated">O exemplo a seguir demonstra como usar o <ph id="ph1">&lt;xref:System.Diagnostics.Contracts.Contract.ForAll%2A&gt;</ph> método para determinar se uma matriz tem um elemento nulo.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.ForAll(System.Int32,System.Int32,System.Predicate{System.Int32})">
          <source><ph id="ph1">&lt;paramref name="predicate" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="predicate" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.ForAll(System.Int32,System.Int32,System.Predicate{System.Int32})">
          <source><ph id="ph1">&lt;paramref name="toExclusive" /&gt;</ph> is less than <ph id="ph2">&lt;paramref name="fromInclusive" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="toExclusive" /&gt;</ph> é menor que <ph id="ph2">&lt;paramref name="fromInclusive" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.ForAll``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0})">
          <source>The type that is contained in <bpt id="p1">&lt;c&gt;</bpt>collection<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O tipo que está contido em <bpt id="p1">&lt;c&gt;</bpt>coleção<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.ForAll``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0})">
          <source>The collection from which elements of type <bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> will be drawn to pass to <bpt id="p2">&lt;c&gt;</bpt>predicate<ept id="p2">&lt;/c&gt;</ept>.</source>
          <target state="translated">A coleção da qual os elementos do tipo <bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> serão desenhados para serem passados para <bpt id="p2">&lt;c&gt;</bpt>predicado<ept id="p2">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.ForAll``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0})">
          <source>The function to evaluate for the existence of all the elements in <bpt id="p1">&lt;c&gt;</bpt>collection<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">A função a ser avaliada quanto à existência de todos os elementos na <bpt id="p1">&lt;c&gt;</bpt>coleção<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.ForAll``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0})">
          <source>Determines whether all the elements in a collection exist within a function.</source>
          <target state="translated">Determina se todos os elementos de uma coleção existem em uma função.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.ForAll``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if and only if <ph id="ph2">&lt;paramref name="predicate" /&gt;</ph> returns <ph id="ph3">&lt;see langword="true" /&gt;</ph> for all elements of type <ph id="ph4">&lt;paramref name="T" /&gt;</ph> in <ph id="ph5">&lt;paramref name="collection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se e somente se <ph id="ph2">&lt;paramref name="predicate" /&gt;</ph> retornar <ph id="ph3">&lt;see langword="true" /&gt;</ph> para todos os elementos do tipo <ph id="ph4">&lt;paramref name="T" /&gt;</ph> em <ph id="ph5">&lt;paramref name="collection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.ForAll``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0})">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Diagnostics.Contracts.Contract.ForAll%2A&gt;</ph> method to determine whether a collection has a null element.</source>
          <target state="translated">O exemplo a seguir demonstra como usar o <ph id="ph1">&lt;xref:System.Diagnostics.Contracts.Contract.ForAll%2A&gt;</ph> método para determinar se a coleção tem um elemento nulo.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.ForAll``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0})">
          <source><ph id="ph1">&lt;paramref name="collection" /&gt;</ph> or <ph id="ph2">&lt;paramref name="predicate" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collection" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="predicate" /&gt;</ph> é <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Contracts.Contract">
          <source>Specifies a contract for an enclosing method or property.</source>
          <target state="translated">Especifica um contrato para um método ou uma propriedade delimitadora.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.Invariant(System.Boolean)">
          <source>The conditional expression to test.</source>
          <target state="translated">A expressão condicional a ser testada.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.Invariant(System.Boolean)">
          <source>Specifies an invariant contract for the enclosing method or property.</source>
          <target state="translated">Especifica um contrato invariável para o método ou a propriedade delimitadora.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Invariant(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Contracts.Contract.Invariant%2A&gt;</ph> contracts are contained within a method that is identified by the <ph id="ph2">&lt;xref:System.Diagnostics.Contracts.ContractInvariantMethodAttribute&gt;</ph> attribute; typically, the method is named <ph id="ph3">`ObjectInvariant`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Contracts.Contract.Invariant%2A&gt;</ph> contratos estão contidos dentro de um método que é identificado pelo <ph id="ph2">&lt;xref:System.Diagnostics.Contracts.ContractInvariantMethodAttribute&gt;</ph> atributo; normalmente, o método é chamado <ph id="ph3">`ObjectInvariant`</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Invariant(System.Boolean)">
          <source>This contract can be specified only in a dedicated invariant method that is declared on a class.</source>
          <target state="translated">Este contrato pode ser especificado somente em um método invariável dedicado que é declarado em uma classe.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Invariant(System.Boolean)">
          <source>If the method is not sealed, it should refer only to protected members, not private members, so that subclasses can be sure to maintain the invariants.</source>
          <target state="translated">Se o método não for fechado, ela deve se referir somente para membros protegidos, não membros particulares, para que as subclasses podem ser mantenha as constantes.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Invariant(System.Boolean)">
          <source>This contract is not exposed to clients; therefore, it may reference members that are less visible than the enclosing method.</source>
          <target state="translated">Este contrato não é exposto aos clientes; Portanto, ele pode fazer referência a membros que são menos visíveis que o método do delimitador.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Invariant(System.Boolean)">
          <source>You must use the binary rewriter for run-time enforcement of this invariant.</source>
          <target state="translated">Você deve usar o regravador binário para imposição de tempo de execução de nesse invariável.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Invariant(System.Boolean)">
          <source>Invariants are conditionally defined based on the presence of the <ph id="ph1">`CONTRACTS FULL`</ph> symbol.</source>
          <target state="translated">Invariáveis condicionalmente são definidas com base na presença do <ph id="ph1">`CONTRACTS FULL`</ph> símbolo.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Invariant(System.Boolean)">
          <source>During run-time checking, invariants are checked at the end of each public method.</source>
          <target state="translated">Durante a verificação em tempo de execução, as invariáveis são verificadas ao final de cada método público.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Invariant(System.Boolean)">
          <source>If an invariant mentions a public method in the same class, the invariant check that would normally happen at the end of that public method is disabled and checked only at the end of the outermost method call to that class.</source>
          <target state="translated">Se uma invariável menciona um método público na mesma classe, a verificação de invariável normalmente acontece no final do método público é desabilitada e verificada somente no final da chamada de método externo para essa classe.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Invariant(System.Boolean)">
          <source>This also happens if the class is re-entered because of a call to a method on another class.</source>
          <target state="translated">Isso também ocorrerá se a classe for inserida novamente devido a uma chamada a um método em outra classe.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.Invariant(System.Boolean,System.String)">
          <source>The conditional expression to test.</source>
          <target state="translated">A expressão condicional a ser testada.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.Invariant(System.Boolean,System.String)">
          <source>The message to display if the condition is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">A mensagem a ser exibida se a condição for <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.Invariant(System.Boolean,System.String)">
          <source>Specifies an invariant contract for the enclosing method or property, and displays a message if the condition for the contract fails.</source>
          <target state="translated">Especifica um contrato invariável para a propriedade ou o método delimitador e exibe uma mensagem se a condição para o contrato falhar.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Invariant(System.Boolean,System.String)">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Contracts.Contract.Invariant%2A&gt;</ph> contracts are contained within a method that is identified by the <ph id="ph2">&lt;xref:System.Diagnostics.Contracts.ContractInvariantMethodAttribute&gt;</ph> attribute; typically, the method is named <ph id="ph3">`ObjectInvariant`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Contracts.Contract.Invariant%2A&gt;</ph> contratos estão contidos dentro de um método que é identificado pelo <ph id="ph2">&lt;xref:System.Diagnostics.Contracts.ContractInvariantMethodAttribute&gt;</ph> atributo; normalmente, o método é chamado <ph id="ph3">`ObjectInvariant`</ph>.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Invariant(System.Boolean,System.String)">
          <source>This contract can be specified only in a dedicated invariant method that is declared on a class.</source>
          <target state="translated">Este contrato pode ser especificado somente em um método invariável dedicado que é declarado em uma classe.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Invariant(System.Boolean,System.String)">
          <source>This contract is not exposed to clients; therefore, it may reference members that are less visible than the enclosing method.</source>
          <target state="translated">Este contrato não é exposto aos clientes; Portanto, ele pode fazer referência a membros que são menos visíveis que o método do delimitador.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Invariant(System.Boolean,System.String)">
          <source>You must use the binary rewriter for run-time enforcement of this invariant.</source>
          <target state="translated">Você deve usar o regravador binário para imposição de tempo de execução de nesse invariável.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Invariant(System.Boolean,System.String)">
          <source>Invariants are conditionally defined on the <ph id="ph1">`CONTRACTS FULL`</ph> symbol.</source>
          <target state="translated">Invariáveis condicionalmente são definidas no <ph id="ph1">`CONTRACTS FULL`</ph> símbolo.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Invariant(System.Boolean,System.String)">
          <source>During run-time checking, invariants are checked at the end of each public method.</source>
          <target state="translated">Durante a verificação em tempo de execução, as invariáveis são verificadas ao final de cada método público.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Invariant(System.Boolean,System.String)">
          <source>If an invariant mentions a public method in the same class, the invariant check that would normally happen at the end of that public method is disabled and checked only at the end of the outermost method call to that class.</source>
          <target state="translated">Se uma invariável menciona um método público na mesma classe, a verificação de invariável normalmente acontece no final do método público é desabilitada e verificada somente no final da chamada de método externo para essa classe.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Invariant(System.Boolean,System.String)">
          <source>This also happens if the class is re-entered because of a call to a method on another class.</source>
          <target state="translated">Isso também ocorrerá se a classe for inserida novamente devido a uma chamada a um método em outra classe.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.OldValue``1(``0)">
          <source>The type of value.</source>
          <target state="translated">O tipo do valor.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.OldValue``1(``0)">
          <source>The value to represent (field or parameter).</source>
          <target state="translated">O valor a ser representado (campo ou parâmetro).</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.OldValue``1(``0)">
          <source>Represents values as they were at the start of a method or property.</source>
          <target state="translated">Representa valores como eram no início de um método ou propriedade.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.OldValue``1(``0)">
          <source>The value of the parameter or field at the start of a method or property.</source>
          <target state="translated">O valor do parâmetro ou campo no início de um método ou propriedade.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.OldValue``1(``0)">
          <source>This method can be used only in the conditional expression for the <ph id="ph1">&lt;xref:System.Diagnostics.Contracts.Contract.Ensures%2A&gt;</ph> contract.</source>
          <target state="translated">Esse método pode ser usado apenas em uma expressão condicional para o <ph id="ph1">&lt;xref:System.Diagnostics.Contracts.Contract.Ensures%2A&gt;</ph> contrato.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.OldValue``1(``0)">
          <source>The following example shows the use of the <ph id="ph1">&lt;xref:System.Diagnostics.Contracts.Contract.OldValue%2A&gt;</ph> method to ensure that a count has been updated.</source>
          <target state="translated">O exemplo a seguir mostra o uso do <ph id="ph1">&lt;xref:System.Diagnostics.Contracts.Contract.OldValue%2A&gt;</ph> método para garantir que uma contagem foi atualizada.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.OldValue``1(``0)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Diagnostics.Contracts.ContractClassAttribute&gt;</ph> class.</source>
          <target state="translated">Este exemplo de código é parte de um exemplo maior fornecido para a <ph id="ph1">&lt;xref:System.Diagnostics.Contracts.ContractClassAttribute&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Contracts.Contract">
          <source>Specifies a precondition contract for an enclosing method or property.</source>
          <target state="translated">Especifica um contrato de pré-condição para um método ou uma propriedade delimitadora.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.Requires(System.Boolean)">
          <source>The conditional expression to test.</source>
          <target state="translated">A expressão condicional a ser testada.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.Requires(System.Boolean)">
          <source>Specifies a precondition contract for the enclosing method or property.</source>
          <target state="translated">Especifica um contrato de pré-condição para o método ou a propriedade delimitadora.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Requires(System.Boolean)">
          <source>This method call must be at the beginning of a method or property, before any other code.</source>
          <target state="translated">Esta chamada de método deve ser no início de um método ou propriedade, antes de qualquer outro código.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Requires(System.Boolean)">
          <source>This contract is exposed to clients; therefore, it must only reference members that are at least as visible as the enclosing method.</source>
          <target state="translated">Este contrato é exposto aos clientes; Portanto, ele deve ser somente os membros de referência são pelo menos tão visíveis como o método de delimitador.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Requires(System.Boolean)">
          <source>Use this method instead of the <ph id="ph1">&lt;xref:System.Diagnostics.Contracts.Contract.Requires%60%601%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> method when backward compatibility does not force you to throw a particular exception.</source>
          <target state="translated">Use esse método em vez do <ph id="ph1">&lt;xref:System.Diagnostics.Contracts.Contract.Requires%60%601%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> método quando a compatibilidade com versões anteriores não forçá-lo a gerar uma exceção específica.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.Requires(System.Boolean,System.String)">
          <source>The conditional expression to test.</source>
          <target state="translated">A expressão condicional a ser testada.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.Requires(System.Boolean,System.String)">
          <source>The message to display if the condition is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">A mensagem a ser exibida se a condição for <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.Requires(System.Boolean,System.String)">
          <source>Specifies a precondition contract for the enclosing method or property, and displays a message if the condition for the contract fails.</source>
          <target state="translated">Especifica um contrato de precondição para a propriedade ou o método delimitador e exibe uma mensagem se a condição para o contrato falhar.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Requires(System.Boolean,System.String)">
          <source>This method call must be at the beginning of a method or property, before any other code.</source>
          <target state="translated">Esta chamada de método deve ser no início de um método ou propriedade, antes de qualquer outro código.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Requires(System.Boolean,System.String)">
          <source>This contract is exposed to clients; therefore, it must only reference members that are at least as visible as the enclosing method.</source>
          <target state="translated">Este contrato é exposto aos clientes; Portanto, ele deve ser somente os membros de referência são pelo menos tão visíveis como o método de delimitador.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Requires(System.Boolean,System.String)">
          <source>Use this method instead of the <ph id="ph1">&lt;xref:System.Diagnostics.Contracts.Contract.Requires%60%601%28System.Boolean%2CSystem.String%29?displayProperty=nameWithType&gt;</ph> method when backward compatibility does not force you to throw a particular exception.</source>
          <target state="translated">Use esse método em vez do <ph id="ph1">&lt;xref:System.Diagnostics.Contracts.Contract.Requires%60%601%28System.Boolean%2CSystem.String%29?displayProperty=nameWithType&gt;</ph> método quando a compatibilidade com versões anteriores não forçá-lo a gerar uma exceção específica.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Requires``1(System.Boolean)">
          <source>The exception to throw if the condition is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">A exceção a ser lançada se a condição for <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.Requires``1(System.Boolean)">
          <source>The conditional expression to test.</source>
          <target state="translated">A expressão condicional a ser testada.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.Requires``1(System.Boolean)">
          <source>Specifies a precondition contract for the enclosing method or property, and throws an exception if the condition for the contract fails.</source>
          <target state="translated">Especifica um contrato de precondição para a propriedade ou o método delimitador e lança uma exceção se a condição para o contrato falhar.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Requires``1(System.Boolean)">
          <source>You must turn on run-time checking to use the <ph id="ph1">&lt;xref:System.Diagnostics.Contracts.Contract.Requires%2A&gt;</ph> method.</source>
          <target state="translated">Você deve ativar o tempo de execução para usar a verificação de <ph id="ph1">&lt;xref:System.Diagnostics.Contracts.Contract.Requires%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Requires``1(System.Boolean)">
          <source>If run-time checking is turned off, the process will be terminated.</source>
          <target state="translated">Se a verificação de tempo de execução está desativada, o processo será encerrado.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Requires``1(System.Boolean)">
          <source>To obtain the tools for runtime checking, see <bpt id="p1">[</bpt>Code Contracts<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=152461)</ept> on the MSDN DevLabs Web site.</source>
          <target state="translated">Para obter as ferramentas de verificação de tempo de execução, consulte <bpt id="p1">[</bpt>contratos de código<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=152461)</ept> no site do MSDN DevLabs.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Requires``1(System.Boolean)">
          <source>This method call must be at the beginning of a method or property, before any other code.</source>
          <target state="translated">Esta chamada de método deve ser no início de um método ou propriedade, antes de qualquer outro código.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Requires``1(System.Boolean)">
          <source>This contract is exposed to clients; therefore, it must only reference members that are at least as visible as the enclosing method.</source>
          <target state="translated">Este contrato é exposto aos clientes; Portanto, ele deve ser somente os membros de referência são pelo menos tão visíveis como o método de delimitador.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Requires``1(System.Boolean)">
          <source>Use this method instead of the <ph id="ph1">&lt;xref:System.Diagnostics.Contracts.Contract.Requires%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> method when you want to throw an exception if the precondition fails.</source>
          <target state="translated">Use esse método em vez do <ph id="ph1">&lt;xref:System.Diagnostics.Contracts.Contract.Requires%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> método quando quiser lançar uma exceção se a pré-condição falhar.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Requires``1(System.Boolean,System.String)">
          <source>The exception to throw if the condition is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">A exceção a ser lançada se a condição for <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.Requires``1(System.Boolean,System.String)">
          <source>The conditional expression to test.</source>
          <target state="translated">A expressão condicional a ser testada.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.Requires``1(System.Boolean,System.String)">
          <source>The message to display if the condition is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">A mensagem a ser exibida se a condição for <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.Requires``1(System.Boolean,System.String)">
          <source>Specifies a precondition contract for the enclosing method or property, and throws an exception with the provided message if the condition for the contract fails.</source>
          <target state="translated">Especifica um contrato de precondição para a propriedade ou o método delimitador e lança uma exceção com a mensagem fornecida se a condição para o contrato falhar.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Requires``1(System.Boolean,System.String)">
          <source>You must turn on run-time checking to use the <ph id="ph1">&lt;xref:System.Diagnostics.Contracts.Contract.Requires%2A&gt;</ph> method.</source>
          <target state="translated">Você deve ativar o tempo de execução para usar a verificação de <ph id="ph1">&lt;xref:System.Diagnostics.Contracts.Contract.Requires%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Requires``1(System.Boolean,System.String)">
          <source>If run-time checking is turned off, the process will be terminated.</source>
          <target state="translated">Se a verificação de tempo de execução está desativada, o processo será encerrado.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Requires``1(System.Boolean,System.String)">
          <source>To obtain the tools for runtime checking, see <bpt id="p1">[</bpt>Code Contracts<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=152461)</ept> on the MSDN DevLabs Web site.</source>
          <target state="translated">Para obter as ferramentas de verificação de tempo de execução, consulte <bpt id="p1">[</bpt>contratos de código<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=152461)</ept> no site do MSDN DevLabs.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Requires``1(System.Boolean,System.String)">
          <source>This method call must be at the beginning of a method or property, before any other code.</source>
          <target state="translated">Esta chamada de método deve ser no início de um método ou propriedade, antes de qualquer outro código.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Requires``1(System.Boolean,System.String)">
          <source>This contract is exposed to clients; therefore, it must only reference members that are at least as visible as the enclosing method.</source>
          <target state="translated">Este contrato é exposto aos clientes; Portanto, ele deve ser somente os membros de referência são pelo menos tão visíveis como o método de delimitador.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Requires``1(System.Boolean,System.String)">
          <source>Use this method instead of the <ph id="ph1">&lt;xref:System.Diagnostics.Contracts.Contract.Requires%28System.Boolean%2CSystem.String%29?displayProperty=nameWithType&gt;</ph> method when you want to throw an exception if the precondition fails.</source>
          <target state="translated">Use esse método em vez do <ph id="ph1">&lt;xref:System.Diagnostics.Contracts.Contract.Requires%28System.Boolean%2CSystem.String%29?displayProperty=nameWithType&gt;</ph> método quando quiser lançar uma exceção se a pré-condição falhar.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Result``1">
          <source>Type of return value of the enclosing method or property.</source>
          <target state="translated">Tipo de valor retornado do método ou da propriedade delimitadora.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.Result``1">
          <source>Represents the return value of a method or property.</source>
          <target state="translated">Representa o valor retornado de um método ou uma propriedade.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.Result``1">
          <source>Return value of the enclosing method or property.</source>
          <target state="translated">Valor retornado do método ou da propriedade delimitadora.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Result``1">
          <source>This method can be used only in the conditional expression for the <ph id="ph1">&lt;xref:System.Diagnostics.Contracts.Contract.Ensures%2A&gt;</ph> contract.</source>
          <target state="translated">Esse método pode ser usado apenas em uma expressão condicional para o <ph id="ph1">&lt;xref:System.Diagnostics.Contracts.Contract.Ensures%2A&gt;</ph> contrato.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Result``1">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Diagnostics.Contracts.Contract.Result%2A&gt;</ph> method to specify an expected return value.</source>
          <target state="translated">O exemplo a seguir mostra como usar o <ph id="ph1">&lt;xref:System.Diagnostics.Contracts.Contract.Result%2A&gt;</ph> método para especificar um valor de retorno esperado.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.Result``1">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Diagnostics.Contracts.ContractClassAttribute&gt;</ph> class.</source>
          <target state="translated">Este exemplo de código é parte de um exemplo maior fornecido para a <ph id="ph1">&lt;xref:System.Diagnostics.Contracts.ContractClassAttribute&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.ValueAtReturn``1(``0@)">
          <source>The type of the <ph id="ph1">&lt;see langword="out" /&gt;</ph> parameter.</source>
          <target state="translated">O tipo do parâmetro <ph id="ph1">&lt;see langword="out" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.ValueAtReturn``1(``0@)">
          <source>The <ph id="ph1">&lt;see langword="out" /&gt;</ph> parameter.</source>
          <target state="translated">O parâmetro <ph id="ph1">&lt;see langword="out" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.ValueAtReturn``1(``0@)">
          <source>Represents the final (output) value of an <ph id="ph1">&lt;see langword="out" /&gt;</ph> parameter when returning from a method.</source>
          <target state="translated">Representa o valor final (a saída) de um parâmetro <ph id="ph1">&lt;see langword="out" /&gt;</ph> ao retornar de um método.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Contracts.Contract.ValueAtReturn``1(``0@)">
          <source>The output value of the <ph id="ph1">&lt;see langword="out" /&gt;</ph> parameter.</source>
          <target state="translated">O valor de saída do parâmetro <ph id="ph1">&lt;see langword="out" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.ValueAtReturn``1(``0@)">
          <source>This method can be used only in the conditional expression for the <ph id="ph1">&lt;xref:System.Diagnostics.Contracts.Contract.Ensures%2A&gt;</ph> contract.</source>
          <target state="translated">Esse método pode ser usado apenas em uma expressão condicional para o <ph id="ph1">&lt;xref:System.Diagnostics.Contracts.Contract.Ensures%2A&gt;</ph> contrato.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.ValueAtReturn``1(``0@)">
          <source>As with the <ph id="ph1">&lt;xref:System.Diagnostics.Contracts.Contract.OldValue%2A&gt;</ph> method, you can omit the generic type parameter whenever the compiler is able to infer its type.</source>
          <target state="translated">Assim como ocorre com o método <ph id="ph1">&lt;xref:System.Diagnostics.Contracts.Contract.OldValue%2A&gt;</ph>, é possível omitir o parâmetro de tipo genérico sempre que o compilador pode inferir seu tipo.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.ValueAtReturn``1(``0@)">
          <source>The contract rewriter replaces the method call with the value of the <ph id="ph1">`out`</ph> parameter.</source>
          <target state="translated">O reescritor de contrato substitui a chamada de método pelo valor do parâmetro <ph id="ph1">`out`</ph>.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.ValueAtReturn``1(``0@)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Contracts.Contract.ValueAtReturn%2A&gt;</ph> method may appear only in postconditions.</source>
          <target state="translated">O método <ph id="ph1">&lt;xref:System.Diagnostics.Contracts.Contract.ValueAtReturn%2A&gt;</ph> pode aparecer somente em pós-condições.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.ValueAtReturn``1(``0@)">
          <source>The argument to the method must be an <ph id="ph1">`out`</ph> parameter or a field of a structure <ph id="ph2">`out`</ph> parameter.</source>
          <target state="translated">O argumento para o método deve ser um parâmetro <ph id="ph1">`out`</ph> ou um campo de um parâmetro <ph id="ph2">`out`</ph> de estrutura.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Contracts.Contract.ValueAtReturn``1(``0@)">
          <source>The latter is also useful when referring to fields in the postcondition of a structure constructor.</source>
          <target state="translated">Esse último também é útil ao se referir a campos na pós-condição de um construtor de estrutura.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>